2025-08-21 10:31:11,709 - __main__ - INFO - [main.py:42] - Loading application configuration...
2025-08-21 10:31:11,709 - __main__ - INFO - [main.py:44] - Configuration loaded successfully
2025-08-21 10:31:11,709 - __main__ - INFO - [main.py:47] - Initializing security components...
2025-08-21 10:31:11,709 - __main__ - DEBUG - [main.py:49] - Slack validator initialized
2025-08-21 10:31:11,709 - __main__ - DEBUG - [main.py:57] - Rate limiter initialized: 10 per user, 50 per channel
2025-08-21 10:31:11,709 - __main__ - DEBUG - [main.py:63] - Budget monitor initialized: $100.0 daily limit, $0.01 per request
2025-08-21 10:31:11,709 - security.content_filter - INFO - [content_filter.py:39] - Content filter initialized with 11 patterns
2025-08-21 10:31:11,709 - __main__ - DEBUG - [main.py:66] - Content filter initialized
2025-08-21 10:31:11,709 - auth.admin_manager - INFO - [admin_manager.py:27] - Admin manager initialized with 2 admin users
2025-08-21 10:31:11,709 - __main__ - DEBUG - [main.py:69] - Admin manager initialized
2025-08-21 10:31:11,709 - __main__ - INFO - [main.py:70] - Security components initialized successfully
2025-08-21 10:31:11,709 - __main__ - INFO - [main.py:73] - Initializing Slack app...
2025-08-21 10:31:11,748 - slack_bolt.App - DEBUG - [base_client.py:255] - Sending a request - url: https://slack.com/api/auth.test, query_params: {}, body_params: {}, files: {}, json_body: None, headers: {'Content-Type': 'application/x-www-form-urlencoded', 'Authorization': '(redacted)', 'User-Agent': 'Bolt/1.16.0 Python/3.12.0 slackclient/3.34.0 Darwin/23.4.0'}
2025-08-21 10:31:12,130 - slack_bolt.App - DEBUG - [base_client.py:546] - Received the following response - status: 200, headers: {'date': 'Thu, 21 Aug 2025 17:31:12 GMT', 'server': 'Apache', 'vary': 'Accept-Encoding', 'x-slack-req-id': '8a9c44f74efc4a072d5aa63185d85037', 'x-content-type-options': 'nosniff', 'x-xss-protection': '0', 'pragma': 'no-cache', 'cache-control': 'private, no-cache, no-store, must-revalidate', 'expires': 'Sat, 26 Jul 1997 05:00:00 GMT', 'content-type': 'application/json; charset=utf-8', 'x-oauth-scopes': 'app_mentions:read,channels:history,chat:write,im:history,im:read,im:write,users:read,reactions:write', 'access-control-expose-headers': 'x-slack-req-id, retry-after', 'access-control-allow-headers': 'slack-route, x-slack-version-ts, x-b3-traceid, x-b3-spanid, x-b3-parentspanid, x-b3-sampled, x-b3-flags', 'strict-transport-security': 'max-age=31536000; includeSubDomains; preload', 'referrer-policy': 'no-referrer', 'x-slack-unique-id': 'aKdX4ICw549Rt0k9QN8AOgAAEAU', 'x-slack-backend': 'r', 'access-control-allow-origin': '*', 'content-length': '228', 'via': '1.1 slack-prod.tinyspeck.com, envoy-www-iad-vpfgplzc,envoy-edge-pdx-fjlvgagw', 'x-envoy-attempt-count': '1', 'x-envoy-upstream-service-time': '105', 'x-backend': 'main_normal main_canary_with_overflow main_control_with_overflow', 'x-server': 'slack-www-hhvm-main-iad-zmxj', 'x-slack-shared-secret-outcome': 'no-match', 'x-edge-backend': 'envoy-www', 'timing-allow-origin': '*', 'x-slack-edge-shared-secret-outcome': 'no-match', 'connection': 'close'}, body: {"ok":true,"url":"https://viacomcbs-grid-test.slack.com/","team":"Test Workspace","user":"autobot","team_id":"T010QS7UQNA","user_id":"U099R6WTZ9S","bot_id":"B099R6WTRU4","enterprise_id":"ERV4P7NAD","is_enterprise_install":false}
2025-08-21 10:31:12,132 - __main__ - INFO - [main.py:75] - Slack app initialized successfully
2025-08-21 10:31:12,132 - __main__ - DEBUG - [main.py:79] - Message deduplication cache initialized
2025-08-21 10:31:12,132 - __main__ - DEBUG - [main.py:84] - Thread tracking initialized
2025-08-21 10:31:12,132 - __main__ - INFO - [main.py:87] - Initializing DIG AI integration...
2025-08-21 10:31:12,132 - __main__ - INFO - [main.py:97] - DIG AI is disabled in configuration
2025-08-21 10:31:12,132 - __main__ - INFO - [main.py:99] - Setting up event handlers...
2025-08-21 10:31:12,134 - __main__ - INFO - [main.py:552] - Starting AI Assistant Bot...
2025-08-21 10:31:12,134 - __main__ - INFO - [main.py:553] - Registering event handlers...
2025-08-21 10:31:12,134 - __main__ - DEBUG - [main.py:554] - Event handlers registered: app_mention, message, app_home_opened
2025-08-21 10:31:12,134 - __main__ - INFO - [main.py:557] - Connecting to Slack via Socket Mode...
2025-08-21 10:31:12,135 - __main__ - INFO - [main.py:561] - Socket Mode handler created successfully
2025-08-21 10:31:12,135 - __main__ - INFO - [main.py:563] - ✅ Bot is now running and listening for events!
2025-08-21 10:31:12,136 - slack_bolt.App - DEBUG - [base_client.py:255] - Sending a request - url: https://slack.com/api/apps.connections.open, query_params: {}, body_params: {}, files: {}, json_body: None, headers: {'Content-Type': 'application/x-www-form-urlencoded', 'Authorization': '(redacted)', 'User-Agent': 'Bolt/1.16.0 Python/3.12.0 slackclient/3.34.0 Darwin/23.4.0'}
2025-08-21 10:31:12,427 - slack_bolt.App - DEBUG - [base_client.py:546] - Received the following response - status: 200, headers: {'date': 'Thu, 21 Aug 2025 17:31:12 GMT', 'server': 'Apache', 'vary': 'Accept-Encoding', 'x-slack-req-id': '25f5d9661e2faf851048b5f34f2aec8e', 'x-content-type-options': 'nosniff', 'x-xss-protection': '0', 'x-robots-tag': 'noindex,nofollow', 'pragma': 'no-cache', 'cache-control': 'private, no-cache, no-store, must-revalidate', 'expires': 'Sat, 26 Jul 1997 05:00:00 GMT', 'content-type': 'application/json; charset=utf-8', 'x-accepted-oauth-scopes': 'connections:write', 'x-oauth-scopes': 'connections:write', 'access-control-expose-headers': 'x-slack-req-id, retry-after', 'access-control-allow-headers': 'slack-route, x-slack-version-ts, x-b3-traceid, x-b3-spanid, x-b3-parentspanid, x-b3-sampled, x-b3-flags', 'strict-transport-security': 'max-age=31536000; includeSubDomains; preload', 'referrer-policy': 'no-referrer', 'x-slack-unique-id': 'aKdX4KpXrDR-qyJSUawrywAAEBA', 'x-slack-backend': 'r', 'access-control-allow-origin': '*', 'content-length': '173', 'via': '1.1 slack-prod.tinyspeck.com, envoy-www-iad-llftxxrn,envoy-edge-pdx-lerybdjq', 'x-envoy-attempt-count': '1', 'x-envoy-upstream-service-time': '77', 'x-backend': 'main_normal main_canary_with_overflow main_control_with_overflow', 'x-server': 'slack-www-hhvm-main-iad-yytp', 'x-slack-shared-secret-outcome': 'no-match', 'x-edge-backend': 'envoy-www', 'timing-allow-origin': '*', 'x-slack-edge-shared-secret-outcome': 'no-match', 'connection': 'close'}, body: {"ok":true,"url":"wss:\/\/wss-primary.slack.com\/link\/?ticket=0c914e32-6cc2-4999-944b-bc0ebea1d6cd&app_id=a6c8d361ee1c6f398c5b4afec831555b78d7affa753b16bcc0fc64d7c13f3766"}
2025-08-21 10:31:12,946 - slack_bolt.App - INFO - [client.py:192] - A new session has been established (session id: 7d027b4a-f721-4d87-a6f5-5b14a223944f)
2025-08-21 10:31:12,946 - slack_bolt.App - INFO - [base_handler.py:50] - ⚡️ Bolt app is running!
2025-08-21 10:31:12,961 - slack_bolt.App - INFO - [client.py:265] - Starting to receive messages from a new connection (session id: 7d027b4a-f721-4d87-a6f5-5b14a223944f)
2025-08-21 10:31:12,962 - slack_bolt.App - DEBUG - [client.py:235] - on_message invoked: (message: {"type":"hello","num_connections":1,"debug_info":{"host":"applink-6","build_number":0,"approximate_connection_time":18060},"connection_info":{"app_id":"A099LACAB2R"}})
2025-08-21 10:31:12,962 - slack_bolt.App - DEBUG - [client.py:99] - A new message enqueued (current queue size: 1)
2025-08-21 10:31:12,962 - slack_bolt.App - DEBUG - [client.py:105] - A message dequeued (current queue size: 0)
2025-08-21 10:31:12,963 - slack_bolt.App - DEBUG - [client.py:125] - Message processing started (type: hello, envelope_id: None)
2025-08-21 10:31:12,963 - slack_bolt.App - DEBUG - [client.py:150] - Message processing completed (type: hello, envelope_id: None)
2025-08-21 10:32:12,526 - __main__ - INFO - [main.py:42] - Loading application configuration...
2025-08-21 10:32:12,526 - __main__ - INFO - [main.py:44] - Configuration loaded successfully
2025-08-21 10:32:12,526 - __main__ - INFO - [main.py:47] - Initializing security components...
2025-08-21 10:32:12,526 - __main__ - DEBUG - [main.py:49] - Slack validator initialized
2025-08-21 10:32:12,526 - __main__ - DEBUG - [main.py:57] - Rate limiter initialized: 10 per user, 50 per channel
2025-08-21 10:32:12,526 - __main__ - DEBUG - [main.py:63] - Budget monitor initialized: $100.0 daily limit, $0.01 per request
2025-08-21 10:32:12,526 - security.content_filter - INFO - [content_filter.py:39] - Content filter initialized with 11 patterns
2025-08-21 10:32:12,526 - __main__ - DEBUG - [main.py:66] - Content filter initialized
2025-08-21 10:32:12,526 - auth.admin_manager - INFO - [admin_manager.py:27] - Admin manager initialized with 2 admin users
2025-08-21 10:32:12,526 - __main__ - DEBUG - [main.py:69] - Admin manager initialized
2025-08-21 10:32:12,526 - __main__ - INFO - [main.py:70] - Security components initialized successfully
2025-08-21 10:32:12,526 - __main__ - INFO - [main.py:73] - Initializing Slack app...
2025-08-21 10:32:12,562 - slack_bolt.App - DEBUG - [base_client.py:255] - Sending a request - url: https://slack.com/api/auth.test, query_params: {}, body_params: {}, files: {}, json_body: None, headers: {'Content-Type': 'application/x-www-form-urlencoded', 'Authorization': '(redacted)', 'User-Agent': 'Bolt/1.16.0 Python/3.12.0 slackclient/3.34.0 Darwin/23.4.0'}
2025-08-21 10:32:12,949 - slack_bolt.App - DEBUG - [base_client.py:546] - Received the following response - status: 200, headers: {'date': 'Thu, 21 Aug 2025 17:32:12 GMT', 'server': 'Apache', 'vary': 'Accept-Encoding', 'x-slack-req-id': '21d3cd4a48f31924ef2dedda9c0852bd', 'x-content-type-options': 'nosniff', 'x-xss-protection': '0', 'pragma': 'no-cache', 'cache-control': 'private, no-cache, no-store, must-revalidate', 'expires': 'Sat, 26 Jul 1997 05:00:00 GMT', 'content-type': 'application/json; charset=utf-8', 'x-oauth-scopes': 'app_mentions:read,channels:history,chat:write,im:history,im:read,im:write,users:read,reactions:write', 'access-control-expose-headers': 'x-slack-req-id, retry-after', 'access-control-allow-headers': 'slack-route, x-slack-version-ts, x-b3-traceid, x-b3-spanid, x-b3-parentspanid, x-b3-sampled, x-b3-flags', 'strict-transport-security': 'max-age=31536000; includeSubDomains; preload', 'referrer-policy': 'no-referrer', 'x-slack-unique-id': 'aKdYHEl11FEt3iJLKWtYyAAAAA8', 'x-slack-backend': 'r', 'access-control-allow-origin': '*', 'content-length': '228', 'via': '1.1 slack-prod.tinyspeck.com, envoy-www-iad-riycnwyf,envoy-edge-pdx-qppcadfx', 'x-envoy-attempt-count': '1', 'x-envoy-upstream-service-time': '96', 'x-backend': 'main_normal main_canary_with_overflow main_control_with_overflow', 'x-server': 'slack-www-hhvm-main-iad-icba', 'x-slack-shared-secret-outcome': 'no-match', 'x-edge-backend': 'envoy-www', 'timing-allow-origin': '*', 'x-slack-edge-shared-secret-outcome': 'no-match', 'connection': 'close'}, body: {"ok":true,"url":"https://viacomcbs-grid-test.slack.com/","team":"Test Workspace","user":"autobot","team_id":"T010QS7UQNA","user_id":"U099R6WTZ9S","bot_id":"B099R6WTRU4","enterprise_id":"ERV4P7NAD","is_enterprise_install":false}
2025-08-21 10:32:12,950 - __main__ - INFO - [main.py:75] - Slack app initialized successfully
2025-08-21 10:32:12,950 - __main__ - DEBUG - [main.py:79] - Message deduplication cache initialized
2025-08-21 10:32:12,950 - __main__ - DEBUG - [main.py:84] - Thread tracking initialized
2025-08-21 10:32:12,950 - __main__ - INFO - [main.py:87] - Initializing DIG AI integration...
2025-08-21 10:32:12,951 - __main__ - INFO - [main.py:90] - DIG AI is enabled, setting up connector...
2025-08-21 10:32:12,951 - dig_connector - INFO - [dig_connector.py:272] - Initializing DIG AI with model ID: 42
2025-08-21 10:32:12,951 - dig_connector - INFO - [dig_connector.py:49] - Starting DIG chat session initialization...
2025-08-21 10:32:12,951 - dig_connector - DEBUG - [dig_connector.py:52] - Creating chat with name: Slack Bot Session 2025-08-21T17:32:12.951583+00:00
2025-08-21 10:32:12,951 - dig_connector - DEBUG - [dig_connector.py:63] - Creating chat - URL: https://ai.digdev.cbsicloud.com/fastapi/chats, Payload: {'chat_nm': 'Slack Bot Session 2025-08-21T17:32:12.951583+00:00', 'model_id': 42}
2025-08-21 10:32:12,955 - urllib3.connectionpool - DEBUG - [connectionpool.py:1055] - Starting new HTTPS connection (1): ai.digdev.cbsicloud.com:443
2025-08-21 10:32:13,208 - urllib3.connectionpool - DEBUG - [connectionpool.py:549] - https://ai.digdev.cbsicloud.com:443 "POST /fastapi/chats HTTP/1.1" 200 217
2025-08-21 10:32:13,209 - dig_connector - DEBUG - [dig_connector.py:66] - Create chat response: status=200
2025-08-21 10:32:13,209 - dig_connector - INFO - [dig_connector.py:54] - Successfully initialized DIG chat session with ID: 847
2025-08-21 10:32:13,209 - __main__ - INFO - [main.py:93] - DIG AI integration successfully initialized
2025-08-21 10:32:13,209 - __main__ - INFO - [main.py:99] - Setting up event handlers...
2025-08-21 10:32:13,210 - __main__ - INFO - [main.py:552] - Starting AI Assistant Bot...
2025-08-21 10:32:13,210 - __main__ - INFO - [main.py:553] - Registering event handlers...
2025-08-21 10:32:13,210 - __main__ - DEBUG - [main.py:554] - Event handlers registered: app_mention, message, app_home_opened
2025-08-21 10:32:13,211 - __main__ - INFO - [main.py:557] - Connecting to Slack via Socket Mode...
2025-08-21 10:32:13,211 - __main__ - INFO - [main.py:561] - Socket Mode handler created successfully
2025-08-21 10:32:13,212 - __main__ - INFO - [main.py:563] - ✅ Bot is now running and listening for events!
2025-08-21 10:32:13,212 - slack_bolt.App - DEBUG - [base_client.py:255] - Sending a request - url: https://slack.com/api/apps.connections.open, query_params: {}, body_params: {}, files: {}, json_body: None, headers: {'Content-Type': 'application/x-www-form-urlencoded', 'Authorization': '(redacted)', 'User-Agent': 'Bolt/1.16.0 Python/3.12.0 slackclient/3.34.0 Darwin/23.4.0'}
2025-08-21 10:32:13,487 - slack_bolt.App - DEBUG - [base_client.py:546] - Received the following response - status: 200, headers: {'date': 'Thu, 21 Aug 2025 17:32:13 GMT', 'server': 'Apache', 'vary': 'Accept-Encoding', 'x-slack-req-id': '4a2601240f5a1155161d9b443f39fddb', 'x-content-type-options': 'nosniff', 'x-xss-protection': '0', 'x-robots-tag': 'noindex,nofollow', 'pragma': 'no-cache', 'cache-control': 'private, no-cache, no-store, must-revalidate', 'expires': 'Sat, 26 Jul 1997 05:00:00 GMT', 'content-type': 'application/json; charset=utf-8', 'x-accepted-oauth-scopes': 'connections:write', 'x-oauth-scopes': 'connections:write', 'access-control-expose-headers': 'x-slack-req-id, retry-after', 'access-control-allow-headers': 'slack-route, x-slack-version-ts, x-b3-traceid, x-b3-spanid, x-b3-parentspanid, x-b3-sampled, x-b3-flags', 'strict-transport-security': 'max-age=31536000; includeSubDomains; preload', 'referrer-policy': 'no-referrer', 'x-slack-unique-id': 'aKdYHSujBLKB_DDtmyKyLAAAAC4', 'x-slack-backend': 'r', 'access-control-allow-origin': '*', 'content-length': '173', 'via': '1.1 slack-prod.tinyspeck.com, envoy-www-iad-pfckakug,envoy-edge-pdx-xxsdhedu', 'x-envoy-attempt-count': '1', 'x-envoy-upstream-service-time': '78', 'x-backend': 'main_normal main_canary_with_overflow main_control_with_overflow', 'x-server': 'slack-www-hhvm-main-iad-otta', 'x-slack-shared-secret-outcome': 'no-match', 'x-edge-backend': 'envoy-www', 'timing-allow-origin': '*', 'x-slack-edge-shared-secret-outcome': 'no-match', 'connection': 'close'}, body: {"ok":true,"url":"wss:\/\/wss-primary.slack.com\/link\/?ticket=cee41cc7-8bf1-4c17-aa5c-01e978ce53cb&app_id=a6c8d361ee1c6f398c5b4afec831555b78d7affa753b16bcc0fc64d7c13f3766"}
2025-08-21 10:32:14,016 - slack_bolt.App - INFO - [client.py:192] - A new session has been established (session id: 38b8c940-713b-4562-8111-97b574911208)
2025-08-21 10:32:14,017 - slack_bolt.App - INFO - [base_handler.py:50] - ⚡️ Bolt app is running!
2025-08-21 10:32:14,046 - slack_bolt.App - INFO - [client.py:265] - Starting to receive messages from a new connection (session id: 38b8c940-713b-4562-8111-97b574911208)
2025-08-21 10:32:14,047 - slack_bolt.App - DEBUG - [client.py:235] - on_message invoked: (message: {"type":"hello","num_connections":2,"debug_info":{"host":"applink-7","build_number":0,"approximate_connection_time":18060},"connection_info":{"app_id":"A099LACAB2R"}})
2025-08-21 10:32:14,047 - slack_bolt.App - DEBUG - [client.py:99] - A new message enqueued (current queue size: 1)
2025-08-21 10:32:14,047 - slack_bolt.App - DEBUG - [client.py:105] - A message dequeued (current queue size: 0)
2025-08-21 10:32:14,048 - slack_bolt.App - DEBUG - [client.py:125] - Message processing started (type: hello, envelope_id: None)
2025-08-21 10:32:14,048 - slack_bolt.App - DEBUG - [client.py:150] - Message processing completed (type: hello, envelope_id: None)
2025-08-21 10:32:44,210 - slack_bolt.App - DEBUG - [client.py:235] - on_message invoked: (message: {"envelope_id":"fc3405d8-29af-4a80-9954-2ac1cf992d90","payload":{"token":"yq71khZBCyJF1Ri2hG5aNqr5","team_id":"T010QS7UQNA","enterprise_id":"ERV4P7NAD","context_team_id":null,"context_enterprise_id":"ERV4P7NAD","api_app_id":"A099LACAB2R","event":{"user":"U01RMTFMALF","type":"message","ts":"1755797563.389489","client_msg_id":"7e5cbd1e-300a-4b88-b4c2-b9cb04169e19","text":"Hi","blocks":[{"type":"rich_text","block_id":"bnCY8","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Hi"}]}]}],"channel":"D09A0LFHK8R","event_ts":"1755797563.389489","channel_type":"im"},"type":"event_callback","event_id":"Ev09BV6YSF97","event_time":1755797563,"authorizations":[{"enterprise_id":"ERV4P7NAD","team_id":"T010QS7UQNA","user_id":"U099R6WTZ9S","is_bot":true,"is_enterprise_install":false}],"is_ext_shared_channel":false,"event_context":"4-eyJldCI6Im1lc3NhZ2UiLCJ0aWQiOiJUMDEwUVM3VVFOQSIsImFpZCI6IkEwOTlMQUNBQjJSIiwiY2lkIjoiRDA5QTBMRkhLOFIifQ"},"type":"events_api","accepts_response_payload":false,"retry_attempt":0,"retry_reason":""})
2025-08-21 10:32:44,212 - slack_bolt.App - DEBUG - [client.py:99] - A new message enqueued (current queue size: 1)
2025-08-21 10:32:44,212 - slack_bolt.App - DEBUG - [client.py:105] - A message dequeued (current queue size: 0)
2025-08-21 10:32:44,213 - slack_bolt.App - DEBUG - [client.py:125] - Message processing started (type: events_api, envelope_id: fc3405d8-29af-4a80-9954-2ac1cf992d90)
2025-08-21 10:32:44,215 - slack_bolt.App - DEBUG - [app.py:476] - Applying slack_bolt.middleware.ssl_check.ssl_check.SslCheck
2025-08-21 10:32:44,215 - slack_bolt.App - DEBUG - [app.py:476] - Applying slack_bolt.middleware.request_verification.request_verification.RequestVerification
2025-08-21 10:32:44,215 - slack_bolt.App - DEBUG - [app.py:476] - Applying slack_bolt.middleware.authorization.single_team_authorization.SingleTeamAuthorization
2025-08-21 10:32:44,215 - slack_bolt.App - DEBUG - [app.py:476] - Applying slack_bolt.middleware.ignoring_self_events.ignoring_self_events.IgnoringSelfEvents
2025-08-21 10:32:44,215 - slack_bolt.App - DEBUG - [app.py:476] - Applying slack_bolt.middleware.url_verification.url_verification.UrlVerification
2025-08-21 10:32:44,215 - slack_bolt.App - DEBUG - [app.py:500] - Checking listener: handle_app_mentions ...
2025-08-21 10:32:44,215 - slack_bolt.App - DEBUG - [app.py:500] - Checking listener: help_message ...
2025-08-21 10:32:44,216 - slack_bolt.App - DEBUG - [app.py:500] - Checking listener: handle_dm_messages ...
2025-08-21 10:32:44,216 - slack_bolt.App - DEBUG - [app.py:522] - Running listener: handle_dm_messages ...
2025-08-21 10:32:44,217 - __main__ - INFO - [main.py:318] - === DM MESSAGE EVENT RECEIVED ===
2025-08-21 10:32:44,217 - slack_bolt.App - DEBUG - [thread_runner.py:198] - Responding with status: 200 body: "" (0 millis)
2025-08-21 10:32:44,217 - __main__ - DEBUG - [main.py:319] - Full event body: {'token': 'yq71khZBCyJF1Ri2hG5aNqr5', 'team_id': 'T010QS7UQNA', 'enterprise_id': 'ERV4P7NAD', 'context_team_id': None, 'context_enterprise_id': 'ERV4P7NAD', 'api_app_id': 'A099LACAB2R', 'event': {'user': 'U01RMTFMALF', 'type': 'message', 'ts': '1755797563.389489', 'client_msg_id': '7e5cbd1e-300a-4b88-b4c2-b9cb04169e19', 'text': 'Hi', 'blocks': [{'type': 'rich_text', 'block_id': 'bnCY8', 'elements': [{'type': 'rich_text_section', 'elements': [{'type': 'text', 'text': 'Hi'}]}]}], 'channel': 'D09A0LFHK8R', 'event_ts': '1755797563.389489', 'channel_type': 'im'}, 'type': 'event_callback', 'event_id': 'Ev09BV6YSF97', 'event_time': 1755797563, 'authorizations': [{'enterprise_id': 'ERV4P7NAD', 'team_id': 'T010QS7UQNA', 'user_id': 'U099R6WTZ9S', 'is_bot': True, 'is_enterprise_install': False}], 'is_ext_shared_channel': False, 'event_context': '4-eyJldCI6Im1lc3NhZ2UiLCJ0aWQiOiJUMDEwUVM3VVFOQSIsImFpZCI6IkEwOTlMQUNBQjJSIiwiY2lkIjoiRDA5QTBMRkhLOFIifQ'}
2025-08-21 10:32:44,217 - slack_bolt.App - DEBUG - [client.py:200] - Sending a message (session id: 38b8c940-713b-4562-8111-97b574911208, message: {"envelope_id": "fc3405d8-29af-4a80-9954-2ac1cf992d90"})
2025-08-21 10:32:44,217 - __main__ - INFO - [main.py:328] - DM Event details: channel=D09A0LFHK8R, user=U01RMTFMALF, ts=1755797563.389489
2025-08-21 10:32:44,217 - __main__ - DEBUG - [main.py:329] - DM Event text: Hi
2025-08-21 10:32:44,218 - utils - DEBUG - [utils.py:27] - Checking message processing: channel=D09A0LFHK8R, ts=1755797563.389489, text='Hi...'
2025-08-21 10:32:44,218 - slack_bolt.App - DEBUG - [internals.py:41] - Response time: 3 milliseconds
2025-08-21 10:32:44,218 - utils - DEBUG - [utils.py:31] - Message hash: 340e24dd38584bc61da34bddde860c54
2025-08-21 10:32:44,218 - slack_bolt.App - DEBUG - [client.py:150] - Message processing completed (type: events_api, envelope_id: fc3405d8-29af-4a80-9954-2ac1cf992d90)
2025-08-21 10:32:44,218 - utils - DEBUG - [utils.py:53] - Added message to processing cache (total entries: 1)
2025-08-21 10:32:45,150 - slack_bolt.App - DEBUG - [client.py:235] - on_message invoked: (message: {"envelope_id":"5fc27a5d-8ac8-44bd-86ed-ecbe80f268f8","payload":{"token":"yq71khZBCyJF1Ri2hG5aNqr5","team_id":"T010QS7UQNA","enterprise_id":"ERV4P7NAD","context_team_id":null,"context_enterprise_id":"ERV4P7NAD","api_app_id":"A099LACAB2R","event":{"user":"U01RMTFMALF","type":"message","ts":"1755797548.092749","client_msg_id":"3148b175-e5e9-458d-b2cf-6641a8243f8b","text":"Hello","blocks":[{"type":"rich_text","block_id":"HnjxV","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Hello"}]}]}],"channel":"D09A0LFHK8R","event_ts":"1755797548.092749","channel_type":"im"},"type":"event_callback","event_id":"Ev09C95SA70Q","event_time":1755797548,"authorizations":[{"enterprise_id":"ERV4P7NAD","team_id":"T010QS7UQNA","user_id":"U099R6WTZ9S","is_bot":true,"is_enterprise_install":false}],"is_ext_shared_channel":false,"event_context":"4-eyJldCI6Im1lc3NhZ2UiLCJ0aWQiOiJUMDEwUVM3VVFOQSIsImFpZCI6IkEwOTlMQUNBQjJSIiwiY2lkIjoiRDA5QTBMRkhLOFIifQ"},"type":"events_api","accepts_response_payload":false,"retry_attempt":0,"retry_reason":""})
2025-08-21 10:32:45,152 - slack_bolt.App - DEBUG - [client.py:99] - A new message enqueued (current queue size: 1)
2025-08-21 10:32:45,152 - slack_bolt.App - DEBUG - [client.py:105] - A message dequeued (current queue size: 0)
2025-08-21 10:32:45,153 - slack_bolt.App - DEBUG - [client.py:125] - Message processing started (type: events_api, envelope_id: 5fc27a5d-8ac8-44bd-86ed-ecbe80f268f8)
2025-08-21 10:32:45,153 - slack_bolt.App - DEBUG - [app.py:476] - Applying slack_bolt.middleware.ssl_check.ssl_check.SslCheck
2025-08-21 10:32:45,153 - slack_bolt.App - DEBUG - [app.py:476] - Applying slack_bolt.middleware.request_verification.request_verification.RequestVerification
2025-08-21 10:32:45,154 - slack_bolt.App - DEBUG - [app.py:476] - Applying slack_bolt.middleware.authorization.single_team_authorization.SingleTeamAuthorization
2025-08-21 10:32:45,154 - slack_bolt.App - DEBUG - [app.py:476] - Applying slack_bolt.middleware.ignoring_self_events.ignoring_self_events.IgnoringSelfEvents
2025-08-21 10:32:45,154 - slack_bolt.App - DEBUG - [app.py:476] - Applying slack_bolt.middleware.url_verification.url_verification.UrlVerification
2025-08-21 10:32:45,154 - slack_bolt.App - DEBUG - [app.py:500] - Checking listener: handle_app_mentions ...
2025-08-21 10:32:45,154 - slack_bolt.App - DEBUG - [app.py:500] - Checking listener: help_message ...
2025-08-21 10:32:45,154 - slack_bolt.App - DEBUG - [app.py:500] - Checking listener: handle_dm_messages ...
2025-08-21 10:32:45,154 - slack_bolt.App - DEBUG - [app.py:522] - Running listener: handle_dm_messages ...
2025-08-21 10:32:45,155 - __main__ - INFO - [main.py:318] - === DM MESSAGE EVENT RECEIVED ===
2025-08-21 10:32:45,155 - __main__ - DEBUG - [main.py:319] - Full event body: {'token': 'yq71khZBCyJF1Ri2hG5aNqr5', 'team_id': 'T010QS7UQNA', 'enterprise_id': 'ERV4P7NAD', 'context_team_id': None, 'context_enterprise_id': 'ERV4P7NAD', 'api_app_id': 'A099LACAB2R', 'event': {'user': 'U01RMTFMALF', 'type': 'message', 'ts': '1755797548.092749', 'client_msg_id': '3148b175-e5e9-458d-b2cf-6641a8243f8b', 'text': 'Hello', 'blocks': [{'type': 'rich_text', 'block_id': 'HnjxV', 'elements': [{'type': 'rich_text_section', 'elements': [{'type': 'text', 'text': 'Hello'}]}]}], 'channel': 'D09A0LFHK8R', 'event_ts': '1755797548.092749', 'channel_type': 'im'}, 'type': 'event_callback', 'event_id': 'Ev09C95SA70Q', 'event_time': 1755797548, 'authorizations': [{'enterprise_id': 'ERV4P7NAD', 'team_id': 'T010QS7UQNA', 'user_id': 'U099R6WTZ9S', 'is_bot': True, 'is_enterprise_install': False}], 'is_ext_shared_channel': False, 'event_context': '4-eyJldCI6Im1lc3NhZ2UiLCJ0aWQiOiJUMDEwUVM3VVFOQSIsImFpZCI6IkEwOTlMQUNBQjJSIiwiY2lkIjoiRDA5QTBMRkhLOFIifQ'}
2025-08-21 10:32:45,155 - slack_bolt.App - DEBUG - [thread_runner.py:198] - Responding with status: 200 body: "" (0 millis)
2025-08-21 10:32:45,155 - slack_bolt.App - DEBUG - [client.py:200] - Sending a message (session id: 38b8c940-713b-4562-8111-97b574911208, message: {"envelope_id": "5fc27a5d-8ac8-44bd-86ed-ecbe80f268f8"})
2025-08-21 10:32:45,155 - __main__ - INFO - [main.py:328] - DM Event details: channel=D09A0LFHK8R, user=U01RMTFMALF, ts=1755797548.092749
2025-08-21 10:32:45,156 - __main__ - DEBUG - [main.py:329] - DM Event text: Hello
2025-08-21 10:32:45,156 - utils - DEBUG - [utils.py:27] - Checking message processing: channel=D09A0LFHK8R, ts=1755797548.092749, text='Hello...'
2025-08-21 10:32:45,156 - slack_bolt.App - DEBUG - [internals.py:41] - Response time: 3 milliseconds
2025-08-21 10:32:45,156 - utils - DEBUG - [utils.py:31] - Message hash: 749d5cea18b556baea6c8478ada3c257
2025-08-21 10:32:45,156 - slack_bolt.App - DEBUG - [client.py:150] - Message processing completed (type: events_api, envelope_id: 5fc27a5d-8ac8-44bd-86ed-ecbe80f268f8)
2025-08-21 10:32:45,157 - utils - DEBUG - [utils.py:53] - Added message to processing cache (total entries: 2)
2025-08-21 10:32:48,996 - slack_bolt.App - DEBUG - [client.py:235] - on_message invoked: (message: {"envelope_id":"f55e870b-51a6-4122-a12f-e823fceda66d","payload":{"token":"yq71khZBCyJF1Ri2hG5aNqr5","team_id":"T010QS7UQNA","enterprise_id":"ERV4P7NAD","context_team_id":null,"context_enterprise_id":"ERV4P7NAD","api_app_id":"A099LACAB2R","event":{"user":"U01RMTFMALF","type":"message","ts":"1755797548.092749","client_msg_id":"3148b175-e5e9-458d-b2cf-6641a8243f8b","text":"Hello","blocks":[{"type":"rich_text","block_id":"HnjxV","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Hello"}]}]}],"channel":"D09A0LFHK8R","event_ts":"1755797548.092749","channel_type":"im"},"type":"event_callback","event_id":"Ev09C95SA70Q","event_time":1755797548,"authorizations":[{"enterprise_id":"ERV4P7NAD","team_id":"T010QS7UQNA","user_id":"U099R6WTZ9S","is_bot":true,"is_enterprise_install":false}],"is_ext_shared_channel":false,"event_context":"4-eyJldCI6Im1lc3NhZ2UiLCJ0aWQiOiJUMDEwUVM3VVFOQSIsImFpZCI6IkEwOTlMQUNBQjJSIiwiY2lkIjoiRDA5QTBMRkhLOFIifQ"},"type":"events_api","accepts_response_payload":false,"retry_attempt":1,"retry_reason":"timeout"})
2025-08-21 10:32:48,997 - slack_bolt.App - DEBUG - [client.py:99] - A new message enqueued (current queue size: 1)
2025-08-21 10:32:48,997 - slack_bolt.App - DEBUG - [client.py:105] - A message dequeued (current queue size: 0)
2025-08-21 10:32:48,998 - slack_bolt.App - DEBUG - [client.py:125] - Message processing started (type: events_api, envelope_id: f55e870b-51a6-4122-a12f-e823fceda66d)
2025-08-21 10:32:48,998 - slack_bolt.App - DEBUG - [app.py:476] - Applying slack_bolt.middleware.ssl_check.ssl_check.SslCheck
2025-08-21 10:32:48,998 - slack_bolt.App - DEBUG - [app.py:476] - Applying slack_bolt.middleware.request_verification.request_verification.RequestVerification
2025-08-21 10:32:48,998 - slack_bolt.App - DEBUG - [app.py:476] - Applying slack_bolt.middleware.authorization.single_team_authorization.SingleTeamAuthorization
2025-08-21 10:32:48,999 - slack_bolt.App - DEBUG - [app.py:476] - Applying slack_bolt.middleware.ignoring_self_events.ignoring_self_events.IgnoringSelfEvents
2025-08-21 10:32:48,999 - slack_bolt.App - DEBUG - [app.py:476] - Applying slack_bolt.middleware.url_verification.url_verification.UrlVerification
2025-08-21 10:32:48,999 - slack_bolt.App - DEBUG - [app.py:500] - Checking listener: handle_app_mentions ...
2025-08-21 10:32:48,999 - slack_bolt.App - DEBUG - [app.py:500] - Checking listener: help_message ...
2025-08-21 10:32:49,000 - slack_bolt.App - DEBUG - [app.py:500] - Checking listener: handle_dm_messages ...
2025-08-21 10:32:49,000 - slack_bolt.App - DEBUG - [app.py:522] - Running listener: handle_dm_messages ...
2025-08-21 10:32:49,000 - __main__ - INFO - [main.py:318] - === DM MESSAGE EVENT RECEIVED ===
2025-08-21 10:32:49,001 - slack_bolt.App - DEBUG - [thread_runner.py:198] - Responding with status: 200 body: "" (0 millis)
2025-08-21 10:32:49,001 - __main__ - DEBUG - [main.py:319] - Full event body: {'token': 'yq71khZBCyJF1Ri2hG5aNqr5', 'team_id': 'T010QS7UQNA', 'enterprise_id': 'ERV4P7NAD', 'context_team_id': None, 'context_enterprise_id': 'ERV4P7NAD', 'api_app_id': 'A099LACAB2R', 'event': {'user': 'U01RMTFMALF', 'type': 'message', 'ts': '1755797548.092749', 'client_msg_id': '3148b175-e5e9-458d-b2cf-6641a8243f8b', 'text': 'Hello', 'blocks': [{'type': 'rich_text', 'block_id': 'HnjxV', 'elements': [{'type': 'rich_text_section', 'elements': [{'type': 'text', 'text': 'Hello'}]}]}], 'channel': 'D09A0LFHK8R', 'event_ts': '1755797548.092749', 'channel_type': 'im'}, 'type': 'event_callback', 'event_id': 'Ev09C95SA70Q', 'event_time': 1755797548, 'authorizations': [{'enterprise_id': 'ERV4P7NAD', 'team_id': 'T010QS7UQNA', 'user_id': 'U099R6WTZ9S', 'is_bot': True, 'is_enterprise_install': False}], 'is_ext_shared_channel': False, 'event_context': '4-eyJldCI6Im1lc3NhZ2UiLCJ0aWQiOiJUMDEwUVM3VVFOQSIsImFpZCI6IkEwOTlMQUNBQjJSIiwiY2lkIjoiRDA5QTBMRkhLOFIifQ'}
2025-08-21 10:32:49,001 - slack_bolt.App - DEBUG - [client.py:200] - Sending a message (session id: 38b8c940-713b-4562-8111-97b574911208, message: {"envelope_id": "f55e870b-51a6-4122-a12f-e823fceda66d"})
2025-08-21 10:32:49,002 - __main__ - INFO - [main.py:328] - DM Event details: channel=D09A0LFHK8R, user=U01RMTFMALF, ts=1755797548.092749
2025-08-21 10:32:49,002 - __main__ - DEBUG - [main.py:329] - DM Event text: Hello
2025-08-21 10:32:49,002 - utils - DEBUG - [utils.py:27] - Checking message processing: channel=D09A0LFHK8R, ts=1755797548.092749, text='Hello...'
2025-08-21 10:32:49,002 - utils - DEBUG - [utils.py:31] - Message hash: 749d5cea18b556baea6c8478ada3c257
2025-08-21 10:32:49,002 - slack_bolt.App - DEBUG - [internals.py:41] - Response time: 4 milliseconds
2025-08-21 10:32:49,003 - utils - INFO - [utils.py:48] - Skipping duplicate message (hash: 749d5cea18b556baea6c8478ada3c257): Hello...
2025-08-21 10:32:49,003 - slack_bolt.App - DEBUG - [client.py:150] - Message processing completed (type: events_api, envelope_id: f55e870b-51a6-4122-a12f-e823fceda66d)
2025-08-21 10:32:49,003 - __main__ - INFO - [main.py:333] - Skipping DM message - already processed recently
2025-08-21 10:33:15,074 - slack_bolt.App - DEBUG - [client.py:235] - on_message invoked: (message: {"envelope_id":"1ee11e43-c4b5-4bd5-acab-05664f29d6a8","payload":{"token":"yq71khZBCyJF1Ri2hG5aNqr5","team_id":"T010QS7UQNA","enterprise_id":"ERV4P7NAD","context_team_id":null,"context_enterprise_id":"ERV4P7NAD","api_app_id":"A099LACAB2R","event":{"user":"U01RMTFMALF","type":"message","ts":"1755797594.504549","client_msg_id":"2248cadd-cd6b-4e42-b087-eff209062246","text":"How to connect roku device?","blocks":[{"type":"rich_text","block_id":"QPj91","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"How to connect roku device?"}]}]}],"channel":"D09A0LFHK8R","event_ts":"1755797594.504549","channel_type":"im"},"type":"event_callback","event_id":"Ev09BANFMB5H","event_time":1755797594,"authorizations":[{"enterprise_id":"ERV4P7NAD","team_id":"T010QS7UQNA","user_id":"U099R6WTZ9S","is_bot":true,"is_enterprise_install":false}],"is_ext_shared_channel":false,"event_context":"4-eyJldCI6Im1lc3NhZ2UiLCJ0aWQiOiJUMDEwUVM3VVFOQSIsImFpZCI6IkEwOTlMQUNBQjJSIiwiY2lkIjoiRDA5QTBMRkhLOFIifQ"},"type":"events_api","accepts_response_payload":false,"retry_attempt":0,"retry_reason":""})
2025-08-21 10:33:15,076 - slack_bolt.App - DEBUG - [client.py:99] - A new message enqueued (current queue size: 1)
2025-08-21 10:33:15,076 - slack_bolt.App - DEBUG - [client.py:105] - A message dequeued (current queue size: 0)
2025-08-21 10:33:15,076 - slack_bolt.App - DEBUG - [client.py:125] - Message processing started (type: events_api, envelope_id: 1ee11e43-c4b5-4bd5-acab-05664f29d6a8)
2025-08-21 10:33:15,076 - slack_bolt.App - DEBUG - [app.py:476] - Applying slack_bolt.middleware.ssl_check.ssl_check.SslCheck
2025-08-21 10:33:15,077 - slack_bolt.App - DEBUG - [app.py:476] - Applying slack_bolt.middleware.request_verification.request_verification.RequestVerification
2025-08-21 10:33:15,077 - slack_bolt.App - DEBUG - [app.py:476] - Applying slack_bolt.middleware.authorization.single_team_authorization.SingleTeamAuthorization
2025-08-21 10:33:15,077 - slack_bolt.App - DEBUG - [app.py:476] - Applying slack_bolt.middleware.ignoring_self_events.ignoring_self_events.IgnoringSelfEvents
2025-08-21 10:33:15,077 - slack_bolt.App - DEBUG - [app.py:476] - Applying slack_bolt.middleware.url_verification.url_verification.UrlVerification
2025-08-21 10:33:15,077 - slack_bolt.App - DEBUG - [app.py:500] - Checking listener: handle_app_mentions ...
2025-08-21 10:33:15,077 - slack_bolt.App - DEBUG - [app.py:500] - Checking listener: help_message ...
2025-08-21 10:33:15,077 - slack_bolt.App - DEBUG - [app.py:500] - Checking listener: handle_dm_messages ...
2025-08-21 10:33:15,077 - slack_bolt.App - DEBUG - [app.py:522] - Running listener: handle_dm_messages ...
2025-08-21 10:33:15,077 - slack_bolt.App - DEBUG - [thread_runner.py:198] - Responding with status: 200 body: "" (0 millis)
2025-08-21 10:33:15,077 - __main__ - INFO - [main.py:318] - === DM MESSAGE EVENT RECEIVED ===
2025-08-21 10:33:15,077 - slack_bolt.App - DEBUG - [client.py:200] - Sending a message (session id: 38b8c940-713b-4562-8111-97b574911208, message: {"envelope_id": "1ee11e43-c4b5-4bd5-acab-05664f29d6a8"})
2025-08-21 10:33:15,078 - __main__ - DEBUG - [main.py:319] - Full event body: {'token': 'yq71khZBCyJF1Ri2hG5aNqr5', 'team_id': 'T010QS7UQNA', 'enterprise_id': 'ERV4P7NAD', 'context_team_id': None, 'context_enterprise_id': 'ERV4P7NAD', 'api_app_id': 'A099LACAB2R', 'event': {'user': 'U01RMTFMALF', 'type': 'message', 'ts': '1755797594.504549', 'client_msg_id': '2248cadd-cd6b-4e42-b087-eff209062246', 'text': 'How to connect roku device?', 'blocks': [{'type': 'rich_text', 'block_id': 'QPj91', 'elements': [{'type': 'rich_text_section', 'elements': [{'type': 'text', 'text': 'How to connect roku device?'}]}]}], 'channel': 'D09A0LFHK8R', 'event_ts': '1755797594.504549', 'channel_type': 'im'}, 'type': 'event_callback', 'event_id': 'Ev09BANFMB5H', 'event_time': 1755797594, 'authorizations': [{'enterprise_id': 'ERV4P7NAD', 'team_id': 'T010QS7UQNA', 'user_id': 'U099R6WTZ9S', 'is_bot': True, 'is_enterprise_install': False}], 'is_ext_shared_channel': False, 'event_context': '4-eyJldCI6Im1lc3NhZ2UiLCJ0aWQiOiJUMDEwUVM3VVFOQSIsImFpZCI6IkEwOTlMQUNBQjJSIiwiY2lkIjoiRDA5QTBMRkhLOFIifQ'}
2025-08-21 10:33:15,078 - __main__ - INFO - [main.py:328] - DM Event details: channel=D09A0LFHK8R, user=U01RMTFMALF, ts=1755797594.504549
2025-08-21 10:33:15,078 - slack_bolt.App - DEBUG - [internals.py:41] - Response time: 1 milliseconds
2025-08-21 10:33:15,078 - __main__ - DEBUG - [main.py:329] - DM Event text: How to connect roku device?
2025-08-21 10:33:15,078 - slack_bolt.App - DEBUG - [client.py:150] - Message processing completed (type: events_api, envelope_id: 1ee11e43-c4b5-4bd5-acab-05664f29d6a8)
2025-08-21 10:33:15,078 - utils - DEBUG - [utils.py:27] - Checking message processing: channel=D09A0LFHK8R, ts=1755797594.504549, text='How to connect roku device?...'
2025-08-21 10:33:15,078 - utils - DEBUG - [utils.py:31] - Message hash: 9445889eb660ce395a1dedca905d0e02
2025-08-21 10:33:15,078 - utils - DEBUG - [utils.py:53] - Added message to processing cache (total entries: 3)
2025-08-21 10:33:37,657 - slack_bolt.App - DEBUG - [client.py:235] - on_message invoked: (message: {"envelope_id":"8eb1f8e4-024d-4e71-88f7-8b23e98a8d4d","payload":{"token":"yq71khZBCyJF1Ri2hG5aNqr5","team_id":"T010QS7UQNA","enterprise_id":"ERV4P7NAD","context_team_id":null,"context_enterprise_id":"ERV4P7NAD","api_app_id":"A099LACAB2R","event":{"user":"U01RMTFMALF","type":"message","ts":"1755797548.092749","client_msg_id":"3148b175-e5e9-458d-b2cf-6641a8243f8b","text":"Hello","blocks":[{"type":"rich_text","block_id":"HnjxV","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Hello"}]}]}],"channel":"D09A0LFHK8R","event_ts":"1755797548.092749","channel_type":"im"},"type":"event_callback","event_id":"Ev09C95SA70Q","event_time":1755797548,"authorizations":[{"enterprise_id":"ERV4P7NAD","team_id":"T010QS7UQNA","user_id":"U099R6WTZ9S","is_bot":true,"is_enterprise_install":false}],"is_ext_shared_channel":false,"event_context":"4-eyJldCI6Im1lc3NhZ2UiLCJ0aWQiOiJUMDEwUVM3VVFOQSIsImFpZCI6IkEwOTlMQUNBQjJSIiwiY2lkIjoiRDA5QTBMRkhLOFIifQ"},"type":"events_api","accepts_response_payload":false,"retry_attempt":2,"retry_reason":"timeout"})
2025-08-21 10:33:37,658 - slack_bolt.App - DEBUG - [client.py:99] - A new message enqueued (current queue size: 1)
2025-08-21 10:33:37,658 - slack_bolt.App - DEBUG - [client.py:105] - A message dequeued (current queue size: 0)
2025-08-21 10:33:37,658 - slack_bolt.App - DEBUG - [client.py:125] - Message processing started (type: events_api, envelope_id: 8eb1f8e4-024d-4e71-88f7-8b23e98a8d4d)
2025-08-21 10:33:37,659 - slack_bolt.App - DEBUG - [app.py:476] - Applying slack_bolt.middleware.ssl_check.ssl_check.SslCheck
2025-08-21 10:33:37,659 - slack_bolt.App - DEBUG - [app.py:476] - Applying slack_bolt.middleware.request_verification.request_verification.RequestVerification
2025-08-21 10:33:37,659 - slack_bolt.App - DEBUG - [app.py:476] - Applying slack_bolt.middleware.authorization.single_team_authorization.SingleTeamAuthorization
2025-08-21 10:33:37,659 - slack_bolt.App - DEBUG - [app.py:476] - Applying slack_bolt.middleware.ignoring_self_events.ignoring_self_events.IgnoringSelfEvents
2025-08-21 10:33:37,659 - slack_bolt.App - DEBUG - [app.py:476] - Applying slack_bolt.middleware.url_verification.url_verification.UrlVerification
2025-08-21 10:33:37,659 - slack_bolt.App - DEBUG - [app.py:500] - Checking listener: handle_app_mentions ...
2025-08-21 10:33:37,659 - slack_bolt.App - DEBUG - [app.py:500] - Checking listener: help_message ...
2025-08-21 10:33:37,659 - slack_bolt.App - DEBUG - [app.py:500] - Checking listener: handle_dm_messages ...
2025-08-21 10:33:37,659 - slack_bolt.App - DEBUG - [app.py:522] - Running listener: handle_dm_messages ...
2025-08-21 10:33:37,659 - __main__ - INFO - [main.py:318] - === DM MESSAGE EVENT RECEIVED ===
2025-08-21 10:33:37,660 - slack_bolt.App - DEBUG - [thread_runner.py:198] - Responding with status: 200 body: "" (0 millis)
2025-08-21 10:33:37,660 - __main__ - DEBUG - [main.py:319] - Full event body: {'token': 'yq71khZBCyJF1Ri2hG5aNqr5', 'team_id': 'T010QS7UQNA', 'enterprise_id': 'ERV4P7NAD', 'context_team_id': None, 'context_enterprise_id': 'ERV4P7NAD', 'api_app_id': 'A099LACAB2R', 'event': {'user': 'U01RMTFMALF', 'type': 'message', 'ts': '1755797548.092749', 'client_msg_id': '3148b175-e5e9-458d-b2cf-6641a8243f8b', 'text': 'Hello', 'blocks': [{'type': 'rich_text', 'block_id': 'HnjxV', 'elements': [{'type': 'rich_text_section', 'elements': [{'type': 'text', 'text': 'Hello'}]}]}], 'channel': 'D09A0LFHK8R', 'event_ts': '1755797548.092749', 'channel_type': 'im'}, 'type': 'event_callback', 'event_id': 'Ev09C95SA70Q', 'event_time': 1755797548, 'authorizations': [{'enterprise_id': 'ERV4P7NAD', 'team_id': 'T010QS7UQNA', 'user_id': 'U099R6WTZ9S', 'is_bot': True, 'is_enterprise_install': False}], 'is_ext_shared_channel': False, 'event_context': '4-eyJldCI6Im1lc3NhZ2UiLCJ0aWQiOiJUMDEwUVM3VVFOQSIsImFpZCI6IkEwOTlMQUNBQjJSIiwiY2lkIjoiRDA5QTBMRkhLOFIifQ'}
2025-08-21 10:33:37,660 - slack_bolt.App - DEBUG - [client.py:200] - Sending a message (session id: 38b8c940-713b-4562-8111-97b574911208, message: {"envelope_id": "8eb1f8e4-024d-4e71-88f7-8b23e98a8d4d"})
2025-08-21 10:33:37,660 - __main__ - INFO - [main.py:328] - DM Event details: channel=D09A0LFHK8R, user=U01RMTFMALF, ts=1755797548.092749
2025-08-21 10:33:37,660 - __main__ - DEBUG - [main.py:329] - DM Event text: Hello
2025-08-21 10:33:37,660 - utils - DEBUG - [utils.py:27] - Checking message processing: channel=D09A0LFHK8R, ts=1755797548.092749, text='Hello...'
2025-08-21 10:33:37,661 - utils - DEBUG - [utils.py:31] - Message hash: 749d5cea18b556baea6c8478ada3c257
2025-08-21 10:33:37,661 - slack_bolt.App - DEBUG - [internals.py:41] - Response time: 2 milliseconds
2025-08-21 10:33:37,661 - utils - INFO - [utils.py:48] - Skipping duplicate message (hash: 749d5cea18b556baea6c8478ada3c257): Hello...
2025-08-21 10:33:37,661 - slack_bolt.App - DEBUG - [client.py:150] - Message processing completed (type: events_api, envelope_id: 8eb1f8e4-024d-4e71-88f7-8b23e98a8d4d)
2025-08-21 10:33:37,661 - __main__ - INFO - [main.py:333] - Skipping DM message - already processed recently
2025-08-21 10:35:44,409 - __main__ - INFO - [main.py:42] - Loading application configuration...
2025-08-21 10:35:44,410 - __main__ - INFO - [main.py:44] - Configuration loaded successfully
2025-08-21 10:35:44,410 - __main__ - INFO - [main.py:47] - Initializing security components...
2025-08-21 10:35:44,410 - __main__ - DEBUG - [main.py:49] - Slack validator initialized
2025-08-21 10:35:44,410 - __main__ - DEBUG - [main.py:57] - Rate limiter initialized: 10 per user, 50 per channel
2025-08-21 10:35:44,410 - __main__ - DEBUG - [main.py:63] - Budget monitor initialized: $100.0 daily limit, $0.01 per request
2025-08-21 10:35:44,410 - security.content_filter - INFO - [content_filter.py:39] - Content filter initialized with 11 patterns
2025-08-21 10:35:44,410 - __main__ - DEBUG - [main.py:66] - Content filter initialized
2025-08-21 10:35:44,410 - auth.admin_manager - INFO - [admin_manager.py:27] - Admin manager initialized with 2 admin users
2025-08-21 10:35:44,410 - __main__ - DEBUG - [main.py:69] - Admin manager initialized
2025-08-21 10:35:44,410 - __main__ - INFO - [main.py:70] - Security components initialized successfully
2025-08-21 10:35:44,410 - __main__ - INFO - [main.py:73] - Initializing Slack app...
2025-08-21 10:35:44,450 - slack_bolt.App - DEBUG - [base_client.py:255] - Sending a request - url: https://slack.com/api/auth.test, query_params: {}, body_params: {}, files: {}, json_body: None, headers: {'Content-Type': 'application/x-www-form-urlencoded', 'Authorization': '(redacted)', 'User-Agent': 'Bolt/1.16.0 Python/3.12.0 slackclient/3.34.0 Darwin/23.4.0'}
2025-08-21 10:35:44,805 - slack_bolt.App - DEBUG - [base_client.py:546] - Received the following response - status: 200, headers: {'date': 'Thu, 21 Aug 2025 17:35:44 GMT', 'server': 'Apache', 'vary': 'Accept-Encoding', 'x-slack-req-id': '02ee4dbd1e0832d012cd3ffa9035d169', 'x-content-type-options': 'nosniff', 'x-xss-protection': '0', 'pragma': 'no-cache', 'cache-control': 'private, no-cache, no-store, must-revalidate', 'expires': 'Sat, 26 Jul 1997 05:00:00 GMT', 'content-type': 'application/json; charset=utf-8', 'x-oauth-scopes': 'app_mentions:read,channels:history,chat:write,im:history,im:read,im:write,users:read,reactions:write', 'access-control-expose-headers': 'x-slack-req-id, retry-after', 'access-control-allow-headers': 'slack-route, x-slack-version-ts, x-b3-traceid, x-b3-spanid, x-b3-parentspanid, x-b3-sampled, x-b3-flags', 'strict-transport-security': 'max-age=31536000; includeSubDomains; preload', 'referrer-policy': 'no-referrer', 'x-slack-unique-id': 'aKdY8MW_nZEQRnezqD8uuwAAEBM', 'x-slack-backend': 'r', 'access-control-allow-origin': '*', 'content-length': '228', 'via': '1.1 slack-prod.tinyspeck.com, envoy-www-iad-fhgafesk,envoy-edge-pdx-hjczsjgb', 'x-envoy-attempt-count': '1', 'x-envoy-upstream-service-time': '94', 'x-backend': 'main_normal main_canary_with_overflow main_control_with_overflow', 'x-server': 'slack-www-hhvm-main-iad-ttyq', 'x-slack-shared-secret-outcome': 'no-match', 'x-edge-backend': 'envoy-www', 'timing-allow-origin': '*', 'x-slack-edge-shared-secret-outcome': 'no-match', 'connection': 'close'}, body: {"ok":true,"url":"https://viacomcbs-grid-test.slack.com/","team":"Test Workspace","user":"autobot","team_id":"T010QS7UQNA","user_id":"U099R6WTZ9S","bot_id":"B099R6WTRU4","enterprise_id":"ERV4P7NAD","is_enterprise_install":false}
2025-08-21 10:35:44,805 - __main__ - INFO - [main.py:75] - Slack app initialized successfully
2025-08-21 10:35:44,805 - __main__ - DEBUG - [main.py:79] - Message deduplication cache initialized
2025-08-21 10:35:44,805 - __main__ - DEBUG - [main.py:84] - Thread tracking initialized
2025-08-21 10:35:44,805 - __main__ - INFO - [main.py:87] - Initializing DIG AI integration...
2025-08-21 10:35:44,805 - __main__ - INFO - [main.py:90] - DIG AI is enabled, setting up connector...
2025-08-21 10:35:44,805 - dig_connector - INFO - [dig_connector.py:272] - Initializing DIG AI with model ID: 42
2025-08-21 10:35:44,806 - dig_connector - INFO - [dig_connector.py:49] - Starting DIG chat session initialization...
2025-08-21 10:35:44,806 - dig_connector - DEBUG - [dig_connector.py:52] - Creating chat with name: Slack Bot Session 2025-08-21T17:35:44.806110+00:00
2025-08-21 10:35:44,806 - dig_connector - DEBUG - [dig_connector.py:63] - Creating chat - URL: https://ai.digdev.cbsicloud.com/fastapi/chats, Payload: {'chat_nm': 'Slack Bot Session 2025-08-21T17:35:44.806110+00:00', 'model_id': 42}
2025-08-21 10:35:44,808 - urllib3.connectionpool - DEBUG - [connectionpool.py:1055] - Starting new HTTPS connection (1): ai.digdev.cbsicloud.com:443
2025-08-21 10:35:45,072 - urllib3.connectionpool - DEBUG - [connectionpool.py:549] - https://ai.digdev.cbsicloud.com:443 "POST /fastapi/chats HTTP/1.1" 200 217
2025-08-21 10:35:45,074 - dig_connector - DEBUG - [dig_connector.py:66] - Create chat response: status=200
2025-08-21 10:35:45,074 - dig_connector - INFO - [dig_connector.py:54] - Successfully initialized DIG chat session with ID: 848
2025-08-21 10:35:45,075 - __main__ - INFO - [main.py:93] - DIG AI integration successfully initialized
2025-08-21 10:35:45,075 - __main__ - INFO - [main.py:99] - Setting up event handlers...
2025-08-21 10:35:45,076 - __main__ - INFO - [main.py:558] - Starting AI Assistant Bot...
2025-08-21 10:35:45,076 - __main__ - INFO - [main.py:559] - Registering event handlers...
2025-08-21 10:35:45,077 - __main__ - DEBUG - [main.py:560] - Event handlers registered: app_mention, message, app_home_opened
2025-08-21 10:35:45,077 - __main__ - INFO - [main.py:563] - Connecting to Slack via Socket Mode...
2025-08-21 10:35:45,078 - __main__ - INFO - [main.py:567] - Socket Mode handler created successfully
2025-08-21 10:35:45,078 - __main__ - INFO - [main.py:569] - ✅ Bot is now running and listening for events!
2025-08-21 10:35:45,078 - slack_bolt.App - DEBUG - [base_client.py:255] - Sending a request - url: https://slack.com/api/apps.connections.open, query_params: {}, body_params: {}, files: {}, json_body: None, headers: {'Content-Type': 'application/x-www-form-urlencoded', 'Authorization': '(redacted)', 'User-Agent': 'Bolt/1.16.0 Python/3.12.0 slackclient/3.34.0 Darwin/23.4.0'}
2025-08-21 10:35:45,350 - slack_bolt.App - DEBUG - [base_client.py:546] - Received the following response - status: 200, headers: {'date': 'Thu, 21 Aug 2025 17:35:45 GMT', 'server': 'Apache', 'vary': 'Accept-Encoding', 'x-slack-req-id': 'c20cdfe3a7fdbf82258b266547438dbd', 'x-content-type-options': 'nosniff', 'x-xss-protection': '0', 'x-robots-tag': 'noindex,nofollow', 'pragma': 'no-cache', 'cache-control': 'private, no-cache, no-store, must-revalidate', 'expires': 'Sat, 26 Jul 1997 05:00:00 GMT', 'content-type': 'application/json; charset=utf-8', 'x-accepted-oauth-scopes': 'connections:write', 'x-oauth-scopes': 'connections:write', 'access-control-expose-headers': 'x-slack-req-id, retry-after', 'access-control-allow-headers': 'slack-route, x-slack-version-ts, x-b3-traceid, x-b3-spanid, x-b3-parentspanid, x-b3-sampled, x-b3-flags', 'strict-transport-security': 'max-age=31536000; includeSubDomains; preload', 'referrer-policy': 'no-referrer', 'x-slack-unique-id': 'aKdY8QoWlZg1yFWNUJy20gAAEBw', 'x-slack-backend': 'r', 'access-control-allow-origin': '*', 'content-length': '173', 'via': '1.1 slack-prod.tinyspeck.com, envoy-www-iad-ivetkwxm,envoy-edge-pdx-vclzrnfb', 'x-envoy-attempt-count': '1', 'x-envoy-upstream-service-time': '75', 'x-backend': 'main_normal main_canary_with_overflow main_control_with_overflow', 'x-server': 'slack-www-hhvm-main-iad-ydbp', 'x-slack-shared-secret-outcome': 'no-match', 'x-edge-backend': 'envoy-www', 'timing-allow-origin': '*', 'x-slack-edge-shared-secret-outcome': 'no-match', 'connection': 'close'}, body: {"ok":true,"url":"wss:\/\/wss-primary.slack.com\/link\/?ticket=4bf98968-032e-42ab-b76e-d6c9287bfa63&app_id=a6c8d361ee1c6f398c5b4afec831555b78d7affa753b16bcc0fc64d7c13f3766"}
2025-08-21 10:35:45,862 - slack_bolt.App - INFO - [client.py:192] - A new session has been established (session id: ad770a8a-86ee-454e-b08e-62523d79a28f)
2025-08-21 10:35:45,862 - slack_bolt.App - INFO - [base_handler.py:50] - ⚡️ Bolt app is running!
2025-08-21 10:35:45,902 - slack_bolt.App - INFO - [client.py:265] - Starting to receive messages from a new connection (session id: ad770a8a-86ee-454e-b08e-62523d79a28f)
2025-08-21 10:35:45,903 - slack_bolt.App - DEBUG - [client.py:235] - on_message invoked: (message: {"type":"hello","num_connections":2,"debug_info":{"host":"applink-10","build_number":0,"approximate_connection_time":18060},"connection_info":{"app_id":"A099LACAB2R"}})
2025-08-21 10:35:45,903 - slack_bolt.App - DEBUG - [client.py:99] - A new message enqueued (current queue size: 1)
2025-08-21 10:35:45,903 - slack_bolt.App - DEBUG - [client.py:105] - A message dequeued (current queue size: 0)
2025-08-21 10:35:45,904 - slack_bolt.App - DEBUG - [client.py:125] - Message processing started (type: hello, envelope_id: None)
2025-08-21 10:35:45,904 - slack_bolt.App - DEBUG - [client.py:150] - Message processing completed (type: hello, envelope_id: None)
2025-08-21 10:36:09,617 - slack_bolt.App - DEBUG - [client.py:235] - on_message invoked: (message: {"envelope_id":"08fb1cfd-030b-4ee4-8e15-dbb4da683760","payload":{"token":"yq71khZBCyJF1Ri2hG5aNqr5","team_id":"T010QS7UQNA","enterprise_id":"ERV4P7NAD","context_team_id":null,"context_enterprise_id":"ERV4P7NAD","api_app_id":"A099LACAB2R","event":{"user":"U01RMTFMALF","type":"message","ts":"1755797752.734049","client_msg_id":"e7ad1dad-7e71-48a4-8f5d-d522765c4190","text":"Test","blocks":[{"type":"rich_text","block_id":"dNVjO","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Test"}]}]}],"channel":"D09A0LFHK8R","event_ts":"1755797752.734049","channel_type":"im"},"type":"event_callback","event_id":"Ev09C96B6L0G","event_time":1755797752,"authorizations":[{"enterprise_id":"ERV4P7NAD","team_id":"T010QS7UQNA","user_id":"U099R6WTZ9S","is_bot":true,"is_enterprise_install":false}],"is_ext_shared_channel":false,"event_context":"4-eyJldCI6Im1lc3NhZ2UiLCJ0aWQiOiJUMDEwUVM3VVFOQSIsImFpZCI6IkEwOTlMQUNBQjJSIiwiY2lkIjoiRDA5QTBMRkhLOFIifQ"},"type":"events_api","accepts_response_payload":false,"retry_attempt":0,"retry_reason":""})
2025-08-21 10:36:09,618 - slack_bolt.App - DEBUG - [client.py:99] - A new message enqueued (current queue size: 1)
2025-08-21 10:36:09,618 - slack_bolt.App - DEBUG - [client.py:105] - A message dequeued (current queue size: 0)
2025-08-21 10:36:09,619 - slack_bolt.App - DEBUG - [client.py:125] - Message processing started (type: events_api, envelope_id: 08fb1cfd-030b-4ee4-8e15-dbb4da683760)
2025-08-21 10:36:09,621 - slack_bolt.App - DEBUG - [app.py:476] - Applying slack_bolt.middleware.ssl_check.ssl_check.SslCheck
2025-08-21 10:36:09,621 - slack_bolt.App - DEBUG - [app.py:476] - Applying slack_bolt.middleware.request_verification.request_verification.RequestVerification
2025-08-21 10:36:09,621 - slack_bolt.App - DEBUG - [app.py:476] - Applying slack_bolt.middleware.authorization.single_team_authorization.SingleTeamAuthorization
2025-08-21 10:36:09,622 - slack_bolt.App - DEBUG - [app.py:476] - Applying slack_bolt.middleware.ignoring_self_events.ignoring_self_events.IgnoringSelfEvents
2025-08-21 10:36:09,622 - slack_bolt.App - DEBUG - [app.py:476] - Applying slack_bolt.middleware.url_verification.url_verification.UrlVerification
2025-08-21 10:36:09,622 - slack_bolt.App - DEBUG - [app.py:500] - Checking listener: handle_app_mentions ...
2025-08-21 10:36:09,622 - slack_bolt.App - DEBUG - [app.py:500] - Checking listener: help_message ...
2025-08-21 10:36:09,622 - slack_bolt.App - DEBUG - [app.py:500] - Checking listener: handle_dm_messages ...
2025-08-21 10:36:09,623 - slack_bolt.App - DEBUG - [app.py:522] - Running listener: handle_dm_messages ...
2025-08-21 10:36:09,623 - __main__ - INFO - [main.py:318] - === DM MESSAGE EVENT RECEIVED ===
2025-08-21 10:36:09,623 - slack_bolt.App - DEBUG - [thread_runner.py:198] - Responding with status: 200 body: "" (0 millis)
2025-08-21 10:36:09,623 - __main__ - DEBUG - [main.py:319] - Full event body: {'token': 'yq71khZBCyJF1Ri2hG5aNqr5', 'team_id': 'T010QS7UQNA', 'enterprise_id': 'ERV4P7NAD', 'context_team_id': None, 'context_enterprise_id': 'ERV4P7NAD', 'api_app_id': 'A099LACAB2R', 'event': {'user': 'U01RMTFMALF', 'type': 'message', 'ts': '1755797752.734049', 'client_msg_id': 'e7ad1dad-7e71-48a4-8f5d-d522765c4190', 'text': 'Test', 'blocks': [{'type': 'rich_text', 'block_id': 'dNVjO', 'elements': [{'type': 'rich_text_section', 'elements': [{'type': 'text', 'text': 'Test'}]}]}], 'channel': 'D09A0LFHK8R', 'event_ts': '1755797752.734049', 'channel_type': 'im'}, 'type': 'event_callback', 'event_id': 'Ev09C96B6L0G', 'event_time': 1755797752, 'authorizations': [{'enterprise_id': 'ERV4P7NAD', 'team_id': 'T010QS7UQNA', 'user_id': 'U099R6WTZ9S', 'is_bot': True, 'is_enterprise_install': False}], 'is_ext_shared_channel': False, 'event_context': '4-eyJldCI6Im1lc3NhZ2UiLCJ0aWQiOiJUMDEwUVM3VVFOQSIsImFpZCI6IkEwOTlMQUNBQjJSIiwiY2lkIjoiRDA5QTBMRkhLOFIifQ'}
2025-08-21 10:36:09,624 - slack_bolt.App - DEBUG - [client.py:200] - Sending a message (session id: ad770a8a-86ee-454e-b08e-62523d79a28f, message: {"envelope_id": "08fb1cfd-030b-4ee4-8e15-dbb4da683760"})
2025-08-21 10:36:09,624 - __main__ - INFO - [main.py:328] - DM Event details: channel=D09A0LFHK8R, user=U01RMTFMALF, ts=1755797752.734049
2025-08-21 10:36:09,624 - __main__ - DEBUG - [main.py:329] - DM Event text: Test
2025-08-21 10:36:09,624 - utils - DEBUG - [utils.py:27] - Checking message processing: channel=D09A0LFHK8R, ts=1755797752.734049, text='Test...'
2025-08-21 10:36:09,624 - slack_bolt.App - DEBUG - [internals.py:41] - Response time: 3 milliseconds
2025-08-21 10:36:09,625 - utils - DEBUG - [utils.py:31] - Message hash: 2684f43127f149a6ff7f0a099f6906ec
2025-08-21 10:36:09,625 - slack_bolt.App - DEBUG - [client.py:150] - Message processing completed (type: events_api, envelope_id: 08fb1cfd-030b-4ee4-8e15-dbb4da683760)
2025-08-21 10:36:09,625 - utils - DEBUG - [utils.py:53] - Added message to processing cache (total entries: 1)
2025-08-21 10:36:09,625 - __main__ - DEBUG - [main.py:342] - Bot check: bot_id=None, user_id=U01RMTFMALF
2025-08-21 10:36:09,625 - __main__ - DEBUG - [main.py:347] - Question received: 'Test'
2025-08-21 10:36:09,625 - __main__ - INFO - [main.py:353] - Processing DM question from user U01RMTFMALF: Test
2025-08-21 10:36:13,272 - slack_bolt.App - DEBUG - [client.py:235] - on_message invoked: (message: {"envelope_id":"b3471e06-eb4d-4790-a68e-28e30439610e","payload":{"token":"yq71khZBCyJF1Ri2hG5aNqr5","team_id":"T010QS7UQNA","enterprise_id":"ERV4P7NAD","context_team_id":null,"context_enterprise_id":"ERV4P7NAD","api_app_id":"A099LACAB2R","event":{"user":"U01RMTFMALF","type":"message","ts":"1755797752.734049","client_msg_id":"e7ad1dad-7e71-48a4-8f5d-d522765c4190","text":"Test","blocks":[{"type":"rich_text","block_id":"dNVjO","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Test"}]}]}],"channel":"D09A0LFHK8R","event_ts":"1755797752.734049","channel_type":"im"},"type":"event_callback","event_id":"Ev09C96B6L0G","event_time":1755797752,"authorizations":[{"enterprise_id":"ERV4P7NAD","team_id":"T010QS7UQNA","user_id":"U099R6WTZ9S","is_bot":true,"is_enterprise_install":false}],"is_ext_shared_channel":false,"event_context":"4-eyJldCI6Im1lc3NhZ2UiLCJ0aWQiOiJUMDEwUVM3VVFOQSIsImFpZCI6IkEwOTlMQUNBQjJSIiwiY2lkIjoiRDA5QTBMRkhLOFIifQ"},"type":"events_api","accepts_response_payload":false,"retry_attempt":1,"retry_reason":"timeout"})
2025-08-21 10:36:13,273 - slack_bolt.App - DEBUG - [client.py:99] - A new message enqueued (current queue size: 1)
2025-08-21 10:36:13,273 - slack_bolt.App - DEBUG - [client.py:105] - A message dequeued (current queue size: 0)
2025-08-21 10:36:13,273 - slack_bolt.App - DEBUG - [client.py:125] - Message processing started (type: events_api, envelope_id: b3471e06-eb4d-4790-a68e-28e30439610e)
2025-08-21 10:36:13,274 - slack_bolt.App - DEBUG - [app.py:476] - Applying slack_bolt.middleware.ssl_check.ssl_check.SslCheck
2025-08-21 10:36:13,274 - slack_bolt.App - DEBUG - [app.py:476] - Applying slack_bolt.middleware.request_verification.request_verification.RequestVerification
2025-08-21 10:36:13,274 - slack_bolt.App - DEBUG - [app.py:476] - Applying slack_bolt.middleware.authorization.single_team_authorization.SingleTeamAuthorization
2025-08-21 10:36:13,274 - slack_bolt.App - DEBUG - [app.py:476] - Applying slack_bolt.middleware.ignoring_self_events.ignoring_self_events.IgnoringSelfEvents
2025-08-21 10:36:13,274 - slack_bolt.App - DEBUG - [app.py:476] - Applying slack_bolt.middleware.url_verification.url_verification.UrlVerification
2025-08-21 10:36:13,274 - slack_bolt.App - DEBUG - [app.py:500] - Checking listener: handle_app_mentions ...
2025-08-21 10:36:13,274 - slack_bolt.App - DEBUG - [app.py:500] - Checking listener: help_message ...
2025-08-21 10:36:13,274 - slack_bolt.App - DEBUG - [app.py:500] - Checking listener: handle_dm_messages ...
2025-08-21 10:36:13,274 - slack_bolt.App - DEBUG - [app.py:522] - Running listener: handle_dm_messages ...
2025-08-21 10:36:13,275 - __main__ - INFO - [main.py:318] - === DM MESSAGE EVENT RECEIVED ===
2025-08-21 10:36:13,275 - slack_bolt.App - DEBUG - [thread_runner.py:198] - Responding with status: 200 body: "" (0 millis)
2025-08-21 10:36:13,275 - __main__ - DEBUG - [main.py:319] - Full event body: {'token': 'yq71khZBCyJF1Ri2hG5aNqr5', 'team_id': 'T010QS7UQNA', 'enterprise_id': 'ERV4P7NAD', 'context_team_id': None, 'context_enterprise_id': 'ERV4P7NAD', 'api_app_id': 'A099LACAB2R', 'event': {'user': 'U01RMTFMALF', 'type': 'message', 'ts': '1755797752.734049', 'client_msg_id': 'e7ad1dad-7e71-48a4-8f5d-d522765c4190', 'text': 'Test', 'blocks': [{'type': 'rich_text', 'block_id': 'dNVjO', 'elements': [{'type': 'rich_text_section', 'elements': [{'type': 'text', 'text': 'Test'}]}]}], 'channel': 'D09A0LFHK8R', 'event_ts': '1755797752.734049', 'channel_type': 'im'}, 'type': 'event_callback', 'event_id': 'Ev09C96B6L0G', 'event_time': 1755797752, 'authorizations': [{'enterprise_id': 'ERV4P7NAD', 'team_id': 'T010QS7UQNA', 'user_id': 'U099R6WTZ9S', 'is_bot': True, 'is_enterprise_install': False}], 'is_ext_shared_channel': False, 'event_context': '4-eyJldCI6Im1lc3NhZ2UiLCJ0aWQiOiJUMDEwUVM3VVFOQSIsImFpZCI6IkEwOTlMQUNBQjJSIiwiY2lkIjoiRDA5QTBMRkhLOFIifQ'}
2025-08-21 10:36:13,275 - slack_bolt.App - DEBUG - [client.py:200] - Sending a message (session id: ad770a8a-86ee-454e-b08e-62523d79a28f, message: {"envelope_id": "b3471e06-eb4d-4790-a68e-28e30439610e"})
2025-08-21 10:36:13,275 - __main__ - INFO - [main.py:328] - DM Event details: channel=D09A0LFHK8R, user=U01RMTFMALF, ts=1755797752.734049
2025-08-21 10:36:13,275 - __main__ - DEBUG - [main.py:329] - DM Event text: Test
2025-08-21 10:36:13,276 - utils - DEBUG - [utils.py:27] - Checking message processing: channel=D09A0LFHK8R, ts=1755797752.734049, text='Test...'
2025-08-21 10:36:13,276 - utils - DEBUG - [utils.py:31] - Message hash: 2684f43127f149a6ff7f0a099f6906ec
2025-08-21 10:36:13,276 - slack_bolt.App - DEBUG - [internals.py:41] - Response time: 2 milliseconds
2025-08-21 10:36:13,276 - utils - INFO - [utils.py:48] - Skipping duplicate message (hash: 2684f43127f149a6ff7f0a099f6906ec): Test...
2025-08-21 10:36:13,276 - slack_bolt.App - DEBUG - [client.py:150] - Message processing completed (type: events_api, envelope_id: b3471e06-eb4d-4790-a68e-28e30439610e)
2025-08-21 10:36:13,276 - __main__ - INFO - [main.py:333] - Skipping DM message - already processed recently
2025-08-21 10:37:01,671 - slack_bolt.App - DEBUG - [client.py:235] - on_message invoked: (message: {"envelope_id":"afb621b7-48cb-431d-a5ce-5590763bfec1","payload":{"token":"yq71khZBCyJF1Ri2hG5aNqr5","team_id":"T010QS7UQNA","enterprise_id":"ERV4P7NAD","context_team_id":null,"context_enterprise_id":"ERV4P7NAD","api_app_id":"A099LACAB2R","event":{"user":"U01RMTFMALF","type":"message","ts":"1755797752.734049","client_msg_id":"e7ad1dad-7e71-48a4-8f5d-d522765c4190","text":"Test","blocks":[{"type":"rich_text","block_id":"dNVjO","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Test"}]}]}],"channel":"D09A0LFHK8R","event_ts":"1755797752.734049","channel_type":"im"},"type":"event_callback","event_id":"Ev09C96B6L0G","event_time":1755797752,"authorizations":[{"enterprise_id":"ERV4P7NAD","team_id":"T010QS7UQNA","user_id":"U099R6WTZ9S","is_bot":true,"is_enterprise_install":false}],"is_ext_shared_channel":false,"event_context":"4-eyJldCI6Im1lc3NhZ2UiLCJ0aWQiOiJUMDEwUVM3VVFOQSIsImFpZCI6IkEwOTlMQUNBQjJSIiwiY2lkIjoiRDA5QTBMRkhLOFIifQ"},"type":"events_api","accepts_response_payload":false,"retry_attempt":2,"retry_reason":"timeout"})
2025-08-21 10:37:01,672 - slack_bolt.App - DEBUG - [client.py:99] - A new message enqueued (current queue size: 1)
2025-08-21 10:37:01,672 - slack_bolt.App - DEBUG - [client.py:105] - A message dequeued (current queue size: 0)
2025-08-21 10:37:01,673 - slack_bolt.App - DEBUG - [client.py:125] - Message processing started (type: events_api, envelope_id: afb621b7-48cb-431d-a5ce-5590763bfec1)
2025-08-21 10:37:01,673 - slack_bolt.App - DEBUG - [app.py:476] - Applying slack_bolt.middleware.ssl_check.ssl_check.SslCheck
2025-08-21 10:37:01,673 - slack_bolt.App - DEBUG - [app.py:476] - Applying slack_bolt.middleware.request_verification.request_verification.RequestVerification
2025-08-21 10:37:01,673 - slack_bolt.App - DEBUG - [app.py:476] - Applying slack_bolt.middleware.authorization.single_team_authorization.SingleTeamAuthorization
2025-08-21 10:37:01,673 - slack_bolt.App - DEBUG - [app.py:476] - Applying slack_bolt.middleware.ignoring_self_events.ignoring_self_events.IgnoringSelfEvents
2025-08-21 10:37:01,674 - slack_bolt.App - DEBUG - [app.py:476] - Applying slack_bolt.middleware.url_verification.url_verification.UrlVerification
2025-08-21 10:37:01,674 - slack_bolt.App - DEBUG - [app.py:500] - Checking listener: handle_app_mentions ...
2025-08-21 10:37:01,674 - slack_bolt.App - DEBUG - [app.py:500] - Checking listener: help_message ...
2025-08-21 10:37:01,674 - slack_bolt.App - DEBUG - [app.py:500] - Checking listener: handle_dm_messages ...
2025-08-21 10:37:01,674 - slack_bolt.App - DEBUG - [app.py:522] - Running listener: handle_dm_messages ...
2025-08-21 10:37:01,674 - slack_bolt.App - DEBUG - [thread_runner.py:198] - Responding with status: 200 body: "" (0 millis)
2025-08-21 10:37:01,675 - __main__ - INFO - [main.py:318] - === DM MESSAGE EVENT RECEIVED ===
2025-08-21 10:37:01,675 - slack_bolt.App - DEBUG - [client.py:200] - Sending a message (session id: ad770a8a-86ee-454e-b08e-62523d79a28f, message: {"envelope_id": "afb621b7-48cb-431d-a5ce-5590763bfec1"})
2025-08-21 10:37:01,675 - __main__ - DEBUG - [main.py:319] - Full event body: {'token': 'yq71khZBCyJF1Ri2hG5aNqr5', 'team_id': 'T010QS7UQNA', 'enterprise_id': 'ERV4P7NAD', 'context_team_id': None, 'context_enterprise_id': 'ERV4P7NAD', 'api_app_id': 'A099LACAB2R', 'event': {'user': 'U01RMTFMALF', 'type': 'message', 'ts': '1755797752.734049', 'client_msg_id': 'e7ad1dad-7e71-48a4-8f5d-d522765c4190', 'text': 'Test', 'blocks': [{'type': 'rich_text', 'block_id': 'dNVjO', 'elements': [{'type': 'rich_text_section', 'elements': [{'type': 'text', 'text': 'Test'}]}]}], 'channel': 'D09A0LFHK8R', 'event_ts': '1755797752.734049', 'channel_type': 'im'}, 'type': 'event_callback', 'event_id': 'Ev09C96B6L0G', 'event_time': 1755797752, 'authorizations': [{'enterprise_id': 'ERV4P7NAD', 'team_id': 'T010QS7UQNA', 'user_id': 'U099R6WTZ9S', 'is_bot': True, 'is_enterprise_install': False}], 'is_ext_shared_channel': False, 'event_context': '4-eyJldCI6Im1lc3NhZ2UiLCJ0aWQiOiJUMDEwUVM3VVFOQSIsImFpZCI6IkEwOTlMQUNBQjJSIiwiY2lkIjoiRDA5QTBMRkhLOFIifQ'}
2025-08-21 10:37:01,675 - __main__ - INFO - [main.py:328] - DM Event details: channel=D09A0LFHK8R, user=U01RMTFMALF, ts=1755797752.734049
2025-08-21 10:37:01,676 - slack_bolt.App - DEBUG - [internals.py:41] - Response time: 2 milliseconds
2025-08-21 10:37:01,676 - __main__ - DEBUG - [main.py:329] - DM Event text: Test
2025-08-21 10:37:01,676 - slack_bolt.App - DEBUG - [client.py:150] - Message processing completed (type: events_api, envelope_id: afb621b7-48cb-431d-a5ce-5590763bfec1)
2025-08-21 10:37:01,676 - utils - DEBUG - [utils.py:27] - Checking message processing: channel=D09A0LFHK8R, ts=1755797752.734049, text='Test...'
2025-08-21 10:37:01,676 - utils - DEBUG - [utils.py:31] - Message hash: 2684f43127f149a6ff7f0a099f6906ec
2025-08-21 10:37:01,676 - utils - INFO - [utils.py:48] - Skipping duplicate message (hash: 2684f43127f149a6ff7f0a099f6906ec): Test...
2025-08-21 10:37:01,676 - __main__ - INFO - [main.py:333] - Skipping DM message - already processed recently
2025-08-21 10:38:17,945 - __main__ - INFO - [main.py:42] - Loading application configuration...
2025-08-21 10:38:17,945 - __main__ - INFO - [main.py:44] - Configuration loaded successfully
2025-08-21 10:38:17,945 - __main__ - INFO - [main.py:47] - Initializing security components...
2025-08-21 10:38:17,945 - __main__ - DEBUG - [main.py:49] - Slack validator initialized
2025-08-21 10:38:17,945 - __main__ - DEBUG - [main.py:57] - Rate limiter initialized: 10 per user, 50 per channel
2025-08-21 10:38:17,945 - __main__ - DEBUG - [main.py:63] - Budget monitor initialized: $100.0 daily limit, $0.01 per request
2025-08-21 10:38:17,945 - security.content_filter - INFO - [content_filter.py:39] - Content filter initialized with 11 patterns
2025-08-21 10:38:17,945 - __main__ - DEBUG - [main.py:66] - Content filter initialized
2025-08-21 10:38:17,945 - auth.admin_manager - INFO - [admin_manager.py:27] - Admin manager initialized with 2 admin users
2025-08-21 10:38:17,945 - __main__ - DEBUG - [main.py:69] - Admin manager initialized
2025-08-21 10:38:17,945 - __main__ - INFO - [main.py:70] - Security components initialized successfully
2025-08-21 10:38:17,945 - __main__ - INFO - [main.py:73] - Initializing Slack app...
2025-08-21 10:38:17,981 - slack_bolt.App - DEBUG - [base_client.py:255] - Sending a request - url: https://slack.com/api/auth.test, query_params: {}, body_params: {}, files: {}, json_body: None, headers: {'Content-Type': 'application/x-www-form-urlencoded', 'Authorization': '(redacted)', 'User-Agent': 'Bolt/1.16.0 Python/3.12.0 slackclient/3.34.0 Darwin/23.4.0'}
2025-08-21 10:38:18,316 - slack_bolt.App - DEBUG - [base_client.py:546] - Received the following response - status: 200, headers: {'date': 'Thu, 21 Aug 2025 17:38:18 GMT', 'server': 'Apache', 'vary': 'Accept-Encoding', 'x-slack-req-id': 'b7c98778987e6472c11f1c4ae119efb7', 'x-content-type-options': 'nosniff', 'x-xss-protection': '0', 'pragma': 'no-cache', 'cache-control': 'private, no-cache, no-store, must-revalidate', 'expires': 'Sat, 26 Jul 1997 05:00:00 GMT', 'content-type': 'application/json; charset=utf-8', 'x-oauth-scopes': 'app_mentions:read,channels:history,chat:write,im:history,im:read,im:write,users:read,reactions:write', 'access-control-expose-headers': 'x-slack-req-id, retry-after', 'access-control-allow-headers': 'slack-route, x-slack-version-ts, x-b3-traceid, x-b3-spanid, x-b3-parentspanid, x-b3-sampled, x-b3-flags', 'strict-transport-security': 'max-age=31536000; includeSubDomains; preload', 'referrer-policy': 'no-referrer', 'x-slack-unique-id': 'aKdZig4KHN-Y9L9h83ZamgAAECU', 'x-slack-backend': 'r', 'access-control-allow-origin': '*', 'content-length': '228', 'via': '1.1 slack-prod.tinyspeck.com, envoy-www-iad-oksxbcre,envoy-edge-pdx-swqafgim', 'x-envoy-attempt-count': '1', 'x-envoy-upstream-service-time': '84', 'x-backend': 'main_normal main_canary_with_overflow main_control_with_overflow', 'x-server': 'slack-www-hhvm-main-iad-thfk', 'x-slack-shared-secret-outcome': 'no-match', 'x-edge-backend': 'envoy-www', 'timing-allow-origin': '*', 'x-slack-edge-shared-secret-outcome': 'no-match', 'connection': 'close'}, body: {"ok":true,"url":"https://viacomcbs-grid-test.slack.com/","team":"Test Workspace","user":"autobot","team_id":"T010QS7UQNA","user_id":"U099R6WTZ9S","bot_id":"B099R6WTRU4","enterprise_id":"ERV4P7NAD","is_enterprise_install":false}
2025-08-21 10:38:18,316 - __main__ - INFO - [main.py:75] - Slack app initialized successfully
2025-08-21 10:38:18,316 - __main__ - DEBUG - [main.py:79] - Message deduplication cache initialized
2025-08-21 10:38:18,317 - __main__ - DEBUG - [main.py:84] - Thread tracking initialized
2025-08-21 10:38:18,317 - __main__ - INFO - [main.py:87] - Initializing DIG AI integration...
2025-08-21 10:38:18,317 - __main__ - INFO - [main.py:90] - DIG AI is enabled, setting up connector...
2025-08-21 10:38:18,317 - dig_connector - INFO - [dig_connector.py:272] - Initializing DIG AI with model ID: 42
2025-08-21 10:38:18,317 - dig_connector - INFO - [dig_connector.py:49] - Starting DIG chat session initialization...
2025-08-21 10:38:18,317 - dig_connector - DEBUG - [dig_connector.py:52] - Creating chat with name: Slack Bot Session 2025-08-21T17:38:18.317412+00:00
2025-08-21 10:38:18,317 - dig_connector - DEBUG - [dig_connector.py:63] - Creating chat - URL: https://ai.digdev.cbsicloud.com/fastapi/chats, Payload: {'chat_nm': 'Slack Bot Session 2025-08-21T17:38:18.317412+00:00', 'model_id': 42}
2025-08-21 10:38:18,320 - urllib3.connectionpool - DEBUG - [connectionpool.py:1055] - Starting new HTTPS connection (1): ai.digdev.cbsicloud.com:443
2025-08-21 10:38:18,610 - urllib3.connectionpool - DEBUG - [connectionpool.py:549] - https://ai.digdev.cbsicloud.com:443 "POST /fastapi/chats HTTP/1.1" 200 217
2025-08-21 10:38:18,611 - dig_connector - DEBUG - [dig_connector.py:66] - Create chat response: status=200
2025-08-21 10:38:18,612 - dig_connector - INFO - [dig_connector.py:54] - Successfully initialized DIG chat session with ID: 849
2025-08-21 10:38:18,612 - __main__ - INFO - [main.py:93] - DIG AI integration successfully initialized
2025-08-21 10:38:18,612 - __main__ - INFO - [main.py:99] - Setting up event handlers...
2025-08-21 10:38:18,614 - __main__ - INFO - [main.py:576] - Starting AI Assistant Bot...
2025-08-21 10:38:18,614 - __main__ - INFO - [main.py:577] - Registering event handlers...
2025-08-21 10:38:18,614 - __main__ - DEBUG - [main.py:578] - Event handlers registered: app_mention, message, app_home_opened
2025-08-21 10:38:18,614 - __main__ - INFO - [main.py:581] - Connecting to Slack via Socket Mode...
2025-08-21 10:38:18,618 - __main__ - INFO - [main.py:585] - Socket Mode handler created successfully
2025-08-21 10:38:18,618 - __main__ - INFO - [main.py:587] - ✅ Bot is now running and listening for events!
2025-08-21 10:38:18,618 - slack_bolt.App - DEBUG - [base_client.py:255] - Sending a request - url: https://slack.com/api/apps.connections.open, query_params: {}, body_params: {}, files: {}, json_body: None, headers: {'Content-Type': 'application/x-www-form-urlencoded', 'Authorization': '(redacted)', 'User-Agent': 'Bolt/1.16.0 Python/3.12.0 slackclient/3.34.0 Darwin/23.4.0'}
2025-08-21 10:38:18,919 - slack_bolt.App - DEBUG - [base_client.py:546] - Received the following response - status: 200, headers: {'date': 'Thu, 21 Aug 2025 17:38:18 GMT', 'server': 'Apache', 'vary': 'Accept-Encoding', 'x-slack-req-id': '74fdc9bbf07e6eaad0f43aa9d392a133', 'x-content-type-options': 'nosniff', 'x-xss-protection': '0', 'x-robots-tag': 'noindex,nofollow', 'pragma': 'no-cache', 'cache-control': 'private, no-cache, no-store, must-revalidate', 'expires': 'Sat, 26 Jul 1997 05:00:00 GMT', 'content-type': 'application/json; charset=utf-8', 'x-accepted-oauth-scopes': 'connections:write', 'x-oauth-scopes': 'connections:write', 'access-control-expose-headers': 'x-slack-req-id, retry-after', 'access-control-allow-headers': 'slack-route, x-slack-version-ts, x-b3-traceid, x-b3-spanid, x-b3-parentspanid, x-b3-sampled, x-b3-flags', 'strict-transport-security': 'max-age=31536000; includeSubDomains; preload', 'referrer-policy': 'no-referrer', 'x-slack-unique-id': 'aKdZijRT816h5Ht577I_0gAAEC0', 'x-slack-backend': 'r', 'access-control-allow-origin': '*', 'content-length': '173', 'via': '1.1 slack-prod.tinyspeck.com, envoy-www-iad-vwhjmigp,envoy-edge-pdx-wlrvklnx', 'x-envoy-attempt-count': '1', 'x-envoy-upstream-service-time': '80', 'x-backend': 'main_normal main_canary_with_overflow main_control_with_overflow', 'x-server': 'slack-www-hhvm-main-iad-iabu', 'x-slack-shared-secret-outcome': 'no-match', 'x-edge-backend': 'envoy-www', 'timing-allow-origin': '*', 'x-slack-edge-shared-secret-outcome': 'no-match', 'connection': 'close'}, body: {"ok":true,"url":"wss:\/\/wss-primary.slack.com\/link\/?ticket=c7b96d08-01a0-4e72-b91a-6b8925863f9b&app_id=a6c8d361ee1c6f398c5b4afec831555b78d7affa753b16bcc0fc64d7c13f3766"}
2025-08-21 10:38:19,417 - slack_bolt.App - INFO - [client.py:192] - A new session has been established (session id: 6ad5a834-77b3-464e-9886-392544beab53)
2025-08-21 10:38:19,417 - slack_bolt.App - INFO - [base_handler.py:50] - ⚡️ Bolt app is running!
2025-08-21 10:38:19,432 - slack_bolt.App - INFO - [client.py:265] - Starting to receive messages from a new connection (session id: 6ad5a834-77b3-464e-9886-392544beab53)
2025-08-21 10:38:19,435 - slack_bolt.App - DEBUG - [client.py:235] - on_message invoked: (message: {"type":"hello","num_connections":2,"debug_info":{"host":"applink-6","build_number":0,"approximate_connection_time":18060},"connection_info":{"app_id":"A099LACAB2R"}})
2025-08-21 10:38:19,435 - slack_bolt.App - DEBUG - [client.py:99] - A new message enqueued (current queue size: 1)
2025-08-21 10:38:19,436 - slack_bolt.App - DEBUG - [client.py:105] - A message dequeued (current queue size: 0)
2025-08-21 10:38:19,437 - slack_bolt.App - DEBUG - [client.py:125] - Message processing started (type: hello, envelope_id: None)
2025-08-21 10:38:19,437 - slack_bolt.App - DEBUG - [client.py:150] - Message processing completed (type: hello, envelope_id: None)
2025-08-21 10:38:40,710 - slack_bolt.App - DEBUG - [client.py:235] - on_message invoked: (message: {"envelope_id":"b59a4d47-e9a1-41fe-bdbf-61fcf9e346f7","payload":{"token":"yq71khZBCyJF1Ri2hG5aNqr5","team_id":"T010QS7UQNA","enterprise_id":"ERV4P7NAD","context_team_id":null,"context_enterprise_id":"ERV4P7NAD","api_app_id":"A099LACAB2R","event":{"user":"U01RMTFMALF","type":"message","ts":"1755797905.105849","client_msg_id":"e85525c2-e6df-4f2f-9b9c-81b375b25cae","text":"Test2","blocks":[{"type":"rich_text","block_id":"cmdpo","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Test2"}]}]}],"channel":"D09A0LFHK8R","event_ts":"1755797905.105849","channel_type":"im"},"type":"event_callback","event_id":"Ev09C96RU4AU","event_time":1755797905,"authorizations":[{"enterprise_id":"ERV4P7NAD","team_id":"T010QS7UQNA","user_id":"U099R6WTZ9S","is_bot":true,"is_enterprise_install":false}],"is_ext_shared_channel":false,"event_context":"4-eyJldCI6Im1lc3NhZ2UiLCJ0aWQiOiJUMDEwUVM3VVFOQSIsImFpZCI6IkEwOTlMQUNBQjJSIiwiY2lkIjoiRDA5QTBMRkhLOFIifQ"},"type":"events_api","accepts_response_payload":false,"retry_attempt":0,"retry_reason":""})
2025-08-21 10:38:40,711 - slack_bolt.App - DEBUG - [client.py:99] - A new message enqueued (current queue size: 1)
2025-08-21 10:38:40,712 - slack_bolt.App - DEBUG - [client.py:105] - A message dequeued (current queue size: 0)
2025-08-21 10:38:40,713 - slack_bolt.App - DEBUG - [client.py:125] - Message processing started (type: events_api, envelope_id: b59a4d47-e9a1-41fe-bdbf-61fcf9e346f7)
2025-08-21 10:38:40,714 - slack_bolt.App - DEBUG - [app.py:476] - Applying slack_bolt.middleware.ssl_check.ssl_check.SslCheck
2025-08-21 10:38:40,714 - slack_bolt.App - DEBUG - [app.py:476] - Applying slack_bolt.middleware.request_verification.request_verification.RequestVerification
2025-08-21 10:38:40,714 - slack_bolt.App - DEBUG - [app.py:476] - Applying slack_bolt.middleware.authorization.single_team_authorization.SingleTeamAuthorization
2025-08-21 10:38:40,715 - slack_bolt.App - DEBUG - [app.py:476] - Applying slack_bolt.middleware.ignoring_self_events.ignoring_self_events.IgnoringSelfEvents
2025-08-21 10:38:40,715 - slack_bolt.App - DEBUG - [app.py:476] - Applying slack_bolt.middleware.url_verification.url_verification.UrlVerification
2025-08-21 10:38:40,715 - slack_bolt.App - DEBUG - [app.py:500] - Checking listener: handle_app_mentions ...
2025-08-21 10:38:40,715 - slack_bolt.App - DEBUG - [app.py:500] - Checking listener: help_message ...
2025-08-21 10:38:40,716 - slack_bolt.App - DEBUG - [app.py:500] - Checking listener: handle_dm_messages ...
2025-08-21 10:38:40,716 - slack_bolt.App - DEBUG - [app.py:522] - Running listener: handle_dm_messages ...
2025-08-21 10:38:40,717 - __main__ - INFO - [main.py:318] - === DM MESSAGE EVENT RECEIVED ===
2025-08-21 10:38:40,717 - slack_bolt.App - DEBUG - [thread_runner.py:198] - Responding with status: 200 body: "" (0 millis)
2025-08-21 10:38:40,717 - __main__ - DEBUG - [main.py:319] - Full event body: {'token': 'yq71khZBCyJF1Ri2hG5aNqr5', 'team_id': 'T010QS7UQNA', 'enterprise_id': 'ERV4P7NAD', 'context_team_id': None, 'context_enterprise_id': 'ERV4P7NAD', 'api_app_id': 'A099LACAB2R', 'event': {'user': 'U01RMTFMALF', 'type': 'message', 'ts': '1755797905.105849', 'client_msg_id': 'e85525c2-e6df-4f2f-9b9c-81b375b25cae', 'text': 'Test2', 'blocks': [{'type': 'rich_text', 'block_id': 'cmdpo', 'elements': [{'type': 'rich_text_section', 'elements': [{'type': 'text', 'text': 'Test2'}]}]}], 'channel': 'D09A0LFHK8R', 'event_ts': '1755797905.105849', 'channel_type': 'im'}, 'type': 'event_callback', 'event_id': 'Ev09C96RU4AU', 'event_time': 1755797905, 'authorizations': [{'enterprise_id': 'ERV4P7NAD', 'team_id': 'T010QS7UQNA', 'user_id': 'U099R6WTZ9S', 'is_bot': True, 'is_enterprise_install': False}], 'is_ext_shared_channel': False, 'event_context': '4-eyJldCI6Im1lc3NhZ2UiLCJ0aWQiOiJUMDEwUVM3VVFOQSIsImFpZCI6IkEwOTlMQUNBQjJSIiwiY2lkIjoiRDA5QTBMRkhLOFIifQ'}
2025-08-21 10:38:40,717 - slack_bolt.App - DEBUG - [client.py:200] - Sending a message (session id: 6ad5a834-77b3-464e-9886-392544beab53, message: {"envelope_id": "b59a4d47-e9a1-41fe-bdbf-61fcf9e346f7"})
2025-08-21 10:38:40,718 - __main__ - INFO - [main.py:328] - DM Event details: channel=D09A0LFHK8R, user=U01RMTFMALF, ts=1755797905.105849
2025-08-21 10:38:40,718 - __main__ - DEBUG - [main.py:329] - DM Event text: Test2
2025-08-21 10:38:40,718 - utils - DEBUG - [utils.py:27] - Checking message processing: channel=D09A0LFHK8R, ts=1755797905.105849, text='Test2...'
2025-08-21 10:38:40,718 - utils - DEBUG - [utils.py:31] - Message hash: c56ea58744ccb0ea27a9b84abba4d646
2025-08-21 10:38:40,718 - slack_bolt.App - DEBUG - [internals.py:41] - Response time: 4 milliseconds
2025-08-21 10:38:40,718 - utils - DEBUG - [utils.py:53] - Added message to processing cache (total entries: 1)
2025-08-21 10:38:40,719 - slack_bolt.App - DEBUG - [client.py:150] - Message processing completed (type: events_api, envelope_id: b59a4d47-e9a1-41fe-bdbf-61fcf9e346f7)
2025-08-21 10:38:40,719 - __main__ - DEBUG - [main.py:342] - Bot check: bot_id=None, user_id=U01RMTFMALF
2025-08-21 10:38:40,719 - __main__ - DEBUG - [main.py:347] - Question received: 'Test2'
2025-08-21 10:38:40,719 - __main__ - INFO - [main.py:353] - Processing DM question from user U01RMTFMALF: Test2
2025-08-21 10:38:40,719 - __main__ - DEBUG - [main.py:357] - Starting DM security checks...
2025-08-21 10:38:40,720 - __main__ - DEBUG - [main.py:359] - Checking rate limit for DM user U01RMTFMALF
2025-08-21 10:38:44,417 - slack_bolt.App - DEBUG - [client.py:235] - on_message invoked: (message: {"envelope_id":"da49414d-0ca1-4662-b89d-168cb73070a5","payload":{"token":"yq71khZBCyJF1Ri2hG5aNqr5","team_id":"T010QS7UQNA","enterprise_id":"ERV4P7NAD","context_team_id":null,"context_enterprise_id":"ERV4P7NAD","api_app_id":"A099LACAB2R","event":{"user":"U01RMTFMALF","type":"message","ts":"1755797905.105849","client_msg_id":"e85525c2-e6df-4f2f-9b9c-81b375b25cae","text":"Test2","blocks":[{"type":"rich_text","block_id":"cmdpo","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Test2"}]}]}],"channel":"D09A0LFHK8R","event_ts":"1755797905.105849","channel_type":"im"},"type":"event_callback","event_id":"Ev09C96RU4AU","event_time":1755797905,"authorizations":[{"enterprise_id":"ERV4P7NAD","team_id":"T010QS7UQNA","user_id":"U099R6WTZ9S","is_bot":true,"is_enterprise_install":false}],"is_ext_shared_channel":false,"event_context":"4-eyJldCI6Im1lc3NhZ2UiLCJ0aWQiOiJUMDEwUVM3VVFOQSIsImFpZCI6IkEwOTlMQUNBQjJSIiwiY2lkIjoiRDA5QTBMRkhLOFIifQ"},"type":"events_api","accepts_response_payload":false,"retry_attempt":1,"retry_reason":"timeout"})
2025-08-21 10:38:44,418 - slack_bolt.App - DEBUG - [client.py:99] - A new message enqueued (current queue size: 1)
2025-08-21 10:38:44,418 - slack_bolt.App - DEBUG - [client.py:105] - A message dequeued (current queue size: 0)
2025-08-21 10:38:44,419 - slack_bolt.App - DEBUG - [client.py:125] - Message processing started (type: events_api, envelope_id: da49414d-0ca1-4662-b89d-168cb73070a5)
2025-08-21 10:38:44,419 - slack_bolt.App - DEBUG - [app.py:476] - Applying slack_bolt.middleware.ssl_check.ssl_check.SslCheck
2025-08-21 10:38:44,419 - slack_bolt.App - DEBUG - [app.py:476] - Applying slack_bolt.middleware.request_verification.request_verification.RequestVerification
2025-08-21 10:38:44,419 - slack_bolt.App - DEBUG - [app.py:476] - Applying slack_bolt.middleware.authorization.single_team_authorization.SingleTeamAuthorization
2025-08-21 10:38:44,420 - slack_bolt.App - DEBUG - [app.py:476] - Applying slack_bolt.middleware.ignoring_self_events.ignoring_self_events.IgnoringSelfEvents
2025-08-21 10:38:44,420 - slack_bolt.App - DEBUG - [app.py:476] - Applying slack_bolt.middleware.url_verification.url_verification.UrlVerification
2025-08-21 10:38:44,420 - slack_bolt.App - DEBUG - [app.py:500] - Checking listener: handle_app_mentions ...
2025-08-21 10:38:44,420 - slack_bolt.App - DEBUG - [app.py:500] - Checking listener: help_message ...
2025-08-21 10:38:44,420 - slack_bolt.App - DEBUG - [app.py:500] - Checking listener: handle_dm_messages ...
2025-08-21 10:38:44,420 - slack_bolt.App - DEBUG - [app.py:522] - Running listener: handle_dm_messages ...
2025-08-21 10:38:44,421 - __main__ - INFO - [main.py:318] - === DM MESSAGE EVENT RECEIVED ===
2025-08-21 10:38:44,421 - slack_bolt.App - DEBUG - [thread_runner.py:198] - Responding with status: 200 body: "" (0 millis)
2025-08-21 10:38:44,421 - __main__ - DEBUG - [main.py:319] - Full event body: {'token': 'yq71khZBCyJF1Ri2hG5aNqr5', 'team_id': 'T010QS7UQNA', 'enterprise_id': 'ERV4P7NAD', 'context_team_id': None, 'context_enterprise_id': 'ERV4P7NAD', 'api_app_id': 'A099LACAB2R', 'event': {'user': 'U01RMTFMALF', 'type': 'message', 'ts': '1755797905.105849', 'client_msg_id': 'e85525c2-e6df-4f2f-9b9c-81b375b25cae', 'text': 'Test2', 'blocks': [{'type': 'rich_text', 'block_id': 'cmdpo', 'elements': [{'type': 'rich_text_section', 'elements': [{'type': 'text', 'text': 'Test2'}]}]}], 'channel': 'D09A0LFHK8R', 'event_ts': '1755797905.105849', 'channel_type': 'im'}, 'type': 'event_callback', 'event_id': 'Ev09C96RU4AU', 'event_time': 1755797905, 'authorizations': [{'enterprise_id': 'ERV4P7NAD', 'team_id': 'T010QS7UQNA', 'user_id': 'U099R6WTZ9S', 'is_bot': True, 'is_enterprise_install': False}], 'is_ext_shared_channel': False, 'event_context': '4-eyJldCI6Im1lc3NhZ2UiLCJ0aWQiOiJUMDEwUVM3VVFOQSIsImFpZCI6IkEwOTlMQUNBQjJSIiwiY2lkIjoiRDA5QTBMRkhLOFIifQ'}
2025-08-21 10:38:44,421 - slack_bolt.App - DEBUG - [client.py:200] - Sending a message (session id: 6ad5a834-77b3-464e-9886-392544beab53, message: {"envelope_id": "da49414d-0ca1-4662-b89d-168cb73070a5"})
2025-08-21 10:38:44,422 - __main__ - INFO - [main.py:328] - DM Event details: channel=D09A0LFHK8R, user=U01RMTFMALF, ts=1755797905.105849
2025-08-21 10:38:44,422 - __main__ - DEBUG - [main.py:329] - DM Event text: Test2
2025-08-21 10:38:44,422 - utils - DEBUG - [utils.py:27] - Checking message processing: channel=D09A0LFHK8R, ts=1755797905.105849, text='Test2...'
2025-08-21 10:38:44,422 - slack_bolt.App - DEBUG - [internals.py:41] - Response time: 3 milliseconds
2025-08-21 10:38:44,423 - utils - DEBUG - [utils.py:31] - Message hash: c56ea58744ccb0ea27a9b84abba4d646
2025-08-21 10:38:44,423 - slack_bolt.App - DEBUG - [client.py:150] - Message processing completed (type: events_api, envelope_id: da49414d-0ca1-4662-b89d-168cb73070a5)
2025-08-21 10:38:44,423 - utils - INFO - [utils.py:48] - Skipping duplicate message (hash: c56ea58744ccb0ea27a9b84abba4d646): Test2...
2025-08-21 10:38:44,424 - __main__ - INFO - [main.py:333] - Skipping DM message - already processed recently
2025-08-21 10:39:33,541 - slack_bolt.App - DEBUG - [client.py:235] - on_message invoked: (message: {"envelope_id":"4d8c6030-87b2-46a3-9cc6-6ecfed5d3901","payload":{"token":"yq71khZBCyJF1Ri2hG5aNqr5","team_id":"T010QS7UQNA","enterprise_id":"ERV4P7NAD","context_team_id":null,"context_enterprise_id":"ERV4P7NAD","api_app_id":"A099LACAB2R","event":{"user":"U01RMTFMALF","type":"message","ts":"1755797905.105849","client_msg_id":"e85525c2-e6df-4f2f-9b9c-81b375b25cae","text":"Test2","blocks":[{"type":"rich_text","block_id":"cmdpo","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Test2"}]}]}],"channel":"D09A0LFHK8R","event_ts":"1755797905.105849","channel_type":"im"},"type":"event_callback","event_id":"Ev09C96RU4AU","event_time":1755797905,"authorizations":[{"enterprise_id":"ERV4P7NAD","team_id":"T010QS7UQNA","user_id":"U099R6WTZ9S","is_bot":true,"is_enterprise_install":false}],"is_ext_shared_channel":false,"event_context":"4-eyJldCI6Im1lc3NhZ2UiLCJ0aWQiOiJUMDEwUVM3VVFOQSIsImFpZCI6IkEwOTlMQUNBQjJSIiwiY2lkIjoiRDA5QTBMRkhLOFIifQ"},"type":"events_api","accepts_response_payload":false,"retry_attempt":2,"retry_reason":"timeout"})
2025-08-21 10:39:33,541 - slack_bolt.App - DEBUG - [client.py:99] - A new message enqueued (current queue size: 1)
2025-08-21 10:39:33,541 - slack_bolt.App - DEBUG - [client.py:105] - A message dequeued (current queue size: 0)
2025-08-21 10:39:33,542 - slack_bolt.App - DEBUG - [client.py:125] - Message processing started (type: events_api, envelope_id: 4d8c6030-87b2-46a3-9cc6-6ecfed5d3901)
2025-08-21 10:39:33,542 - slack_bolt.App - DEBUG - [app.py:476] - Applying slack_bolt.middleware.ssl_check.ssl_check.SslCheck
2025-08-21 10:39:33,542 - slack_bolt.App - DEBUG - [app.py:476] - Applying slack_bolt.middleware.request_verification.request_verification.RequestVerification
2025-08-21 10:39:33,542 - slack_bolt.App - DEBUG - [app.py:476] - Applying slack_bolt.middleware.authorization.single_team_authorization.SingleTeamAuthorization
2025-08-21 10:39:33,543 - slack_bolt.App - DEBUG - [app.py:476] - Applying slack_bolt.middleware.ignoring_self_events.ignoring_self_events.IgnoringSelfEvents
2025-08-21 10:39:33,543 - slack_bolt.App - DEBUG - [app.py:476] - Applying slack_bolt.middleware.url_verification.url_verification.UrlVerification
2025-08-21 10:39:33,543 - slack_bolt.App - DEBUG - [app.py:500] - Checking listener: handle_app_mentions ...
2025-08-21 10:39:33,543 - slack_bolt.App - DEBUG - [app.py:500] - Checking listener: help_message ...
2025-08-21 10:39:33,543 - slack_bolt.App - DEBUG - [app.py:500] - Checking listener: handle_dm_messages ...
2025-08-21 10:39:33,543 - slack_bolt.App - DEBUG - [app.py:522] - Running listener: handle_dm_messages ...
2025-08-21 10:39:33,544 - slack_bolt.App - DEBUG - [thread_runner.py:198] - Responding with status: 200 body: "" (0 millis)
2025-08-21 10:39:33,544 - __main__ - INFO - [main.py:318] - === DM MESSAGE EVENT RECEIVED ===
2025-08-21 10:39:33,544 - slack_bolt.App - DEBUG - [client.py:200] - Sending a message (session id: 6ad5a834-77b3-464e-9886-392544beab53, message: {"envelope_id": "4d8c6030-87b2-46a3-9cc6-6ecfed5d3901"})
2025-08-21 10:39:33,544 - __main__ - DEBUG - [main.py:319] - Full event body: {'token': 'yq71khZBCyJF1Ri2hG5aNqr5', 'team_id': 'T010QS7UQNA', 'enterprise_id': 'ERV4P7NAD', 'context_team_id': None, 'context_enterprise_id': 'ERV4P7NAD', 'api_app_id': 'A099LACAB2R', 'event': {'user': 'U01RMTFMALF', 'type': 'message', 'ts': '1755797905.105849', 'client_msg_id': 'e85525c2-e6df-4f2f-9b9c-81b375b25cae', 'text': 'Test2', 'blocks': [{'type': 'rich_text', 'block_id': 'cmdpo', 'elements': [{'type': 'rich_text_section', 'elements': [{'type': 'text', 'text': 'Test2'}]}]}], 'channel': 'D09A0LFHK8R', 'event_ts': '1755797905.105849', 'channel_type': 'im'}, 'type': 'event_callback', 'event_id': 'Ev09C96RU4AU', 'event_time': 1755797905, 'authorizations': [{'enterprise_id': 'ERV4P7NAD', 'team_id': 'T010QS7UQNA', 'user_id': 'U099R6WTZ9S', 'is_bot': True, 'is_enterprise_install': False}], 'is_ext_shared_channel': False, 'event_context': '4-eyJldCI6Im1lc3NhZ2UiLCJ0aWQiOiJUMDEwUVM3VVFOQSIsImFpZCI6IkEwOTlMQUNBQjJSIiwiY2lkIjoiRDA5QTBMRkhLOFIifQ'}
2025-08-21 10:39:33,544 - __main__ - INFO - [main.py:328] - DM Event details: channel=D09A0LFHK8R, user=U01RMTFMALF, ts=1755797905.105849
2025-08-21 10:39:33,544 - slack_bolt.App - DEBUG - [internals.py:41] - Response time: 2 milliseconds
2025-08-21 10:39:33,544 - __main__ - DEBUG - [main.py:329] - DM Event text: Test2
2025-08-21 10:39:33,545 - slack_bolt.App - DEBUG - [client.py:150] - Message processing completed (type: events_api, envelope_id: 4d8c6030-87b2-46a3-9cc6-6ecfed5d3901)
2025-08-21 10:39:33,545 - utils - DEBUG - [utils.py:27] - Checking message processing: channel=D09A0LFHK8R, ts=1755797905.105849, text='Test2...'
2025-08-21 10:39:33,545 - utils - DEBUG - [utils.py:31] - Message hash: c56ea58744ccb0ea27a9b84abba4d646
2025-08-21 10:39:33,545 - utils - INFO - [utils.py:48] - Skipping duplicate message (hash: c56ea58744ccb0ea27a9b84abba4d646): Test2...
2025-08-21 10:39:33,545 - __main__ - INFO - [main.py:333] - Skipping DM message - already processed recently
2025-08-21 10:41:27,984 - __main__ - INFO - [main.py:41] - Loading application configuration...
2025-08-21 10:41:27,984 - __main__ - INFO - [main.py:43] - Configuration loaded successfully
2025-08-21 10:41:27,984 - __main__ - INFO - [main.py:46] - Initializing security components...
2025-08-21 10:41:27,984 - __main__ - DEBUG - [main.py:48] - Slack validator initialized
2025-08-21 10:41:27,984 - security.content_filter - INFO - [content_filter.py:39] - Content filter initialized with 11 patterns
2025-08-21 10:41:27,984 - __main__ - DEBUG - [main.py:51] - Content filter initialized
2025-08-21 10:41:27,984 - auth.admin_manager - INFO - [admin_manager.py:27] - Admin manager initialized with 2 admin users
2025-08-21 10:41:27,984 - __main__ - DEBUG - [main.py:54] - Admin manager initialized
2025-08-21 10:41:27,984 - __main__ - INFO - [main.py:55] - Security components initialized successfully
2025-08-21 10:41:27,984 - __main__ - INFO - [main.py:58] - Initializing Slack app...
2025-08-21 10:41:28,019 - slack_bolt.App - DEBUG - [base_client.py:255] - Sending a request - url: https://slack.com/api/auth.test, query_params: {}, body_params: {}, files: {}, json_body: None, headers: {'Content-Type': 'application/x-www-form-urlencoded', 'Authorization': '(redacted)', 'User-Agent': 'Bolt/1.16.0 Python/3.12.0 slackclient/3.34.0 Darwin/23.4.0'}
2025-08-21 10:41:28,377 - slack_bolt.App - DEBUG - [base_client.py:546] - Received the following response - status: 200, headers: {'date': 'Thu, 21 Aug 2025 17:41:28 GMT', 'server': 'Apache', 'vary': 'Accept-Encoding', 'x-slack-req-id': '36d1007021a627b86b8ec6057edb2e45', 'x-content-type-options': 'nosniff', 'x-xss-protection': '0', 'pragma': 'no-cache', 'cache-control': 'private, no-cache, no-store, must-revalidate', 'expires': 'Sat, 26 Jul 1997 05:00:00 GMT', 'content-type': 'application/json; charset=utf-8', 'x-oauth-scopes': 'app_mentions:read,channels:history,chat:write,im:history,im:read,im:write,users:read,reactions:write', 'access-control-expose-headers': 'x-slack-req-id, retry-after', 'access-control-allow-headers': 'slack-route, x-slack-version-ts, x-b3-traceid, x-b3-spanid, x-b3-parentspanid, x-b3-sampled, x-b3-flags', 'strict-transport-security': 'max-age=31536000; includeSubDomains; preload', 'referrer-policy': 'no-referrer', 'x-slack-unique-id': 'aKdaSDUCxyXmNjmg8XW4MAAAEDw', 'x-slack-backend': 'r', 'access-control-allow-origin': '*', 'content-length': '228', 'via': '1.1 slack-prod.tinyspeck.com, envoy-www-iad-ctrbkfzs,envoy-edge-pdx-ggtjadkz', 'x-envoy-attempt-count': '1', 'x-envoy-upstream-service-time': '96', 'x-backend': 'main_normal main_canary_with_overflow main_control_with_overflow', 'x-server': 'slack-www-hhvm-main-iad-wing', 'x-slack-shared-secret-outcome': 'no-match', 'x-edge-backend': 'envoy-www', 'timing-allow-origin': '*', 'x-slack-edge-shared-secret-outcome': 'no-match', 'connection': 'close'}, body: {"ok":true,"url":"https://viacomcbs-grid-test.slack.com/","team":"Test Workspace","user":"autobot","team_id":"T010QS7UQNA","user_id":"U099R6WTZ9S","bot_id":"B099R6WTRU4","enterprise_id":"ERV4P7NAD","is_enterprise_install":false}
2025-08-21 10:41:28,378 - __main__ - INFO - [main.py:60] - Slack app initialized successfully
2025-08-21 10:41:28,378 - __main__ - DEBUG - [main.py:64] - Message deduplication cache initialized
2025-08-21 10:41:28,378 - __main__ - DEBUG - [main.py:69] - Thread tracking initialized
2025-08-21 10:41:28,378 - __main__ - INFO - [main.py:72] - Initializing DIG AI integration...
2025-08-21 10:41:28,378 - __main__ - INFO - [main.py:75] - DIG AI is enabled, setting up connector...
2025-08-21 10:41:28,378 - dig_connector - INFO - [dig_connector.py:272] - Initializing DIG AI with model ID: 42
2025-08-21 10:41:28,378 - dig_connector - INFO - [dig_connector.py:49] - Starting DIG chat session initialization...
2025-08-21 10:41:28,378 - dig_connector - DEBUG - [dig_connector.py:52] - Creating chat with name: Slack Bot Session 2025-08-21T17:41:28.378755+00:00
2025-08-21 10:41:28,378 - dig_connector - DEBUG - [dig_connector.py:63] - Creating chat - URL: https://ai.digdev.cbsicloud.com/fastapi/chats, Payload: {'chat_nm': 'Slack Bot Session 2025-08-21T17:41:28.378755+00:00', 'model_id': 42}
2025-08-21 10:41:28,381 - urllib3.connectionpool - DEBUG - [connectionpool.py:1055] - Starting new HTTPS connection (1): ai.digdev.cbsicloud.com:443
2025-08-21 10:41:28,637 - urllib3.connectionpool - DEBUG - [connectionpool.py:549] - https://ai.digdev.cbsicloud.com:443 "POST /fastapi/chats HTTP/1.1" 200 217
2025-08-21 10:41:28,639 - dig_connector - DEBUG - [dig_connector.py:66] - Create chat response: status=200
2025-08-21 10:41:28,639 - dig_connector - INFO - [dig_connector.py:54] - Successfully initialized DIG chat session with ID: 850
2025-08-21 10:41:28,639 - __main__ - INFO - [main.py:78] - DIG AI integration successfully initialized
2025-08-21 10:41:28,639 - __main__ - INFO - [main.py:84] - Setting up event handlers...
2025-08-21 10:41:28,641 - __main__ - INFO - [main.py:506] - Starting AI Assistant Bot...
2025-08-21 10:41:28,641 - __main__ - INFO - [main.py:507] - Registering event handlers...
2025-08-21 10:41:28,641 - __main__ - DEBUG - [main.py:508] - Event handlers registered: app_mention, message, app_home_opened
2025-08-21 10:41:28,641 - __main__ - INFO - [main.py:511] - Connecting to Slack via Socket Mode...
2025-08-21 10:41:28,642 - __main__ - INFO - [main.py:515] - Socket Mode handler created successfully
2025-08-21 10:41:28,642 - __main__ - INFO - [main.py:517] - ✅ Bot is now running and listening for events!
2025-08-21 10:41:28,643 - slack_bolt.App - DEBUG - [base_client.py:255] - Sending a request - url: https://slack.com/api/apps.connections.open, query_params: {}, body_params: {}, files: {}, json_body: None, headers: {'Content-Type': 'application/x-www-form-urlencoded', 'Authorization': '(redacted)', 'User-Agent': 'Bolt/1.16.0 Python/3.12.0 slackclient/3.34.0 Darwin/23.4.0'}
2025-08-21 10:41:28,911 - slack_bolt.App - DEBUG - [base_client.py:546] - Received the following response - status: 200, headers: {'date': 'Thu, 21 Aug 2025 17:41:28 GMT', 'server': 'Apache', 'vary': 'Accept-Encoding', 'x-slack-req-id': '0e57b00b530af8150e52cd56244b0c52', 'x-content-type-options': 'nosniff', 'x-xss-protection': '0', 'x-robots-tag': 'noindex,nofollow', 'pragma': 'no-cache', 'cache-control': 'private, no-cache, no-store, must-revalidate', 'expires': 'Sat, 26 Jul 1997 05:00:00 GMT', 'content-type': 'application/json; charset=utf-8', 'x-accepted-oauth-scopes': 'connections:write', 'x-oauth-scopes': 'connections:write', 'access-control-expose-headers': 'x-slack-req-id, retry-after', 'access-control-allow-headers': 'slack-route, x-slack-version-ts, x-b3-traceid, x-b3-spanid, x-b3-parentspanid, x-b3-sampled, x-b3-flags', 'strict-transport-security': 'max-age=31536000; includeSubDomains; preload', 'referrer-policy': 'no-referrer', 'x-slack-unique-id': 'aKdaSEFZ80-zinWXqJnTygAAECo', 'x-slack-backend': 'r', 'access-control-allow-origin': '*', 'content-length': '173', 'via': '1.1 slack-prod.tinyspeck.com, envoy-www-iad-lplgjupr,envoy-edge-pdx-sdjmypaf', 'x-envoy-attempt-count': '1', 'x-envoy-upstream-service-time': '78', 'x-backend': 'main_normal main_canary_with_overflow main_control_with_overflow', 'x-server': 'slack-www-hhvm-main-iad-lpvi', 'x-slack-shared-secret-outcome': 'no-match', 'x-edge-backend': 'envoy-www', 'timing-allow-origin': '*', 'x-slack-edge-shared-secret-outcome': 'no-match', 'connection': 'close'}, body: {"ok":true,"url":"wss:\/\/wss-primary.slack.com\/link\/?ticket=76b126af-bbcd-417e-a5eb-93d9f0ae7fcd&app_id=a6c8d361ee1c6f398c5b4afec831555b78d7affa753b16bcc0fc64d7c13f3766"}
2025-08-21 10:41:29,433 - slack_bolt.App - INFO - [client.py:192] - A new session has been established (session id: 9caa291c-f50f-4808-a579-72eed6c2a372)
2025-08-21 10:41:29,433 - slack_bolt.App - INFO - [base_handler.py:50] - ⚡️ Bolt app is running!
2025-08-21 10:41:29,470 - slack_bolt.App - INFO - [client.py:265] - Starting to receive messages from a new connection (session id: 9caa291c-f50f-4808-a579-72eed6c2a372)
2025-08-21 10:41:29,471 - slack_bolt.App - DEBUG - [client.py:235] - on_message invoked: (message: {"type":"hello","num_connections":1,"debug_info":{"host":"applink-6","build_number":0,"approximate_connection_time":18060},"connection_info":{"app_id":"A099LACAB2R"}})
2025-08-21 10:41:29,471 - slack_bolt.App - DEBUG - [client.py:99] - A new message enqueued (current queue size: 1)
2025-08-21 10:41:29,471 - slack_bolt.App - DEBUG - [client.py:105] - A message dequeued (current queue size: 0)
2025-08-21 10:41:29,472 - slack_bolt.App - DEBUG - [client.py:125] - Message processing started (type: hello, envelope_id: None)
2025-08-21 10:41:29,472 - slack_bolt.App - DEBUG - [client.py:150] - Message processing completed (type: hello, envelope_id: None)
2025-08-21 10:41:56,789 - slack_bolt.App - DEBUG - [client.py:235] - on_message invoked: (message: {"envelope_id":"41f471ae-0f62-4231-8be7-be5b1957c307","payload":{"token":"yq71khZBCyJF1Ri2hG5aNqr5","team_id":"T010QS7UQNA","enterprise_id":"ERV4P7NAD","context_team_id":null,"context_enterprise_id":"ERV4P7NAD","api_app_id":"A099LACAB2R","event":{"user":"U01RMTFMALF","type":"message","ts":"1755798116.274489","client_msg_id":"95ae27a2-db50-4c24-9a5e-0344beb8c81d","text":"How to run test on Android","blocks":[{"type":"rich_text","block_id":"q7dZ3","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"How to run test on Android"}]}]}],"channel":"D09A0LFHK8R","event_ts":"1755798116.274489","channel_type":"im"},"type":"event_callback","event_id":"Ev09C97BJ3UY","event_time":1755798116,"authorizations":[{"enterprise_id":"ERV4P7NAD","team_id":"T010QS7UQNA","user_id":"U099R6WTZ9S","is_bot":true,"is_enterprise_install":false}],"is_ext_shared_channel":false,"event_context":"4-eyJldCI6Im1lc3NhZ2UiLCJ0aWQiOiJUMDEwUVM3VVFOQSIsImFpZCI6IkEwOTlMQUNBQjJSIiwiY2lkIjoiRDA5QTBMRkhLOFIifQ"},"type":"events_api","accepts_response_payload":false,"retry_attempt":0,"retry_reason":""})
2025-08-21 10:41:56,791 - slack_bolt.App - DEBUG - [client.py:99] - A new message enqueued (current queue size: 1)
2025-08-21 10:41:56,791 - slack_bolt.App - DEBUG - [client.py:105] - A message dequeued (current queue size: 0)
2025-08-21 10:41:56,792 - slack_bolt.App - DEBUG - [client.py:125] - Message processing started (type: events_api, envelope_id: 41f471ae-0f62-4231-8be7-be5b1957c307)
2025-08-21 10:41:56,794 - slack_bolt.App - DEBUG - [app.py:476] - Applying slack_bolt.middleware.ssl_check.ssl_check.SslCheck
2025-08-21 10:41:56,794 - slack_bolt.App - DEBUG - [app.py:476] - Applying slack_bolt.middleware.request_verification.request_verification.RequestVerification
2025-08-21 10:41:56,794 - slack_bolt.App - DEBUG - [app.py:476] - Applying slack_bolt.middleware.authorization.single_team_authorization.SingleTeamAuthorization
2025-08-21 10:41:56,794 - slack_bolt.App - DEBUG - [app.py:476] - Applying slack_bolt.middleware.ignoring_self_events.ignoring_self_events.IgnoringSelfEvents
2025-08-21 10:41:56,794 - slack_bolt.App - DEBUG - [app.py:476] - Applying slack_bolt.middleware.url_verification.url_verification.UrlVerification
2025-08-21 10:41:56,795 - slack_bolt.App - DEBUG - [app.py:500] - Checking listener: handle_app_mentions ...
2025-08-21 10:41:56,795 - slack_bolt.App - DEBUG - [app.py:500] - Checking listener: help_message ...
2025-08-21 10:41:56,795 - slack_bolt.App - DEBUG - [app.py:500] - Checking listener: handle_dm_messages ...
2025-08-21 10:41:56,795 - slack_bolt.App - DEBUG - [app.py:522] - Running listener: handle_dm_messages ...
2025-08-21 10:41:56,796 - __main__ - INFO - [main.py:275] - === DM MESSAGE EVENT RECEIVED ===
2025-08-21 10:41:56,796 - slack_bolt.App - DEBUG - [thread_runner.py:198] - Responding with status: 200 body: "" (0 millis)
2025-08-21 10:41:56,796 - __main__ - DEBUG - [main.py:276] - Full event body: {'token': 'yq71khZBCyJF1Ri2hG5aNqr5', 'team_id': 'T010QS7UQNA', 'enterprise_id': 'ERV4P7NAD', 'context_team_id': None, 'context_enterprise_id': 'ERV4P7NAD', 'api_app_id': 'A099LACAB2R', 'event': {'user': 'U01RMTFMALF', 'type': 'message', 'ts': '1755798116.274489', 'client_msg_id': '95ae27a2-db50-4c24-9a5e-0344beb8c81d', 'text': 'How to run test on Android', 'blocks': [{'type': 'rich_text', 'block_id': 'q7dZ3', 'elements': [{'type': 'rich_text_section', 'elements': [{'type': 'text', 'text': 'How to run test on Android'}]}]}], 'channel': 'D09A0LFHK8R', 'event_ts': '1755798116.274489', 'channel_type': 'im'}, 'type': 'event_callback', 'event_id': 'Ev09C97BJ3UY', 'event_time': 1755798116, 'authorizations': [{'enterprise_id': 'ERV4P7NAD', 'team_id': 'T010QS7UQNA', 'user_id': 'U099R6WTZ9S', 'is_bot': True, 'is_enterprise_install': False}], 'is_ext_shared_channel': False, 'event_context': '4-eyJldCI6Im1lc3NhZ2UiLCJ0aWQiOiJUMDEwUVM3VVFOQSIsImFpZCI6IkEwOTlMQUNBQjJSIiwiY2lkIjoiRDA5QTBMRkhLOFIifQ'}
2025-08-21 10:41:56,797 - slack_bolt.App - DEBUG - [client.py:200] - Sending a message (session id: 9caa291c-f50f-4808-a579-72eed6c2a372, message: {"envelope_id": "41f471ae-0f62-4231-8be7-be5b1957c307"})
2025-08-21 10:41:56,797 - __main__ - INFO - [main.py:285] - DM Event details: channel=D09A0LFHK8R, user=U01RMTFMALF, ts=1755798116.274489
2025-08-21 10:41:56,798 - __main__ - DEBUG - [main.py:286] - DM Event text: How to run test on Android
2025-08-21 10:41:56,798 - slack_bolt.App - DEBUG - [internals.py:41] - Response time: 4 milliseconds
2025-08-21 10:41:56,798 - utils - DEBUG - [utils.py:27] - Checking message processing: channel=D09A0LFHK8R, ts=1755798116.274489, text='How to run test on Android...'
2025-08-21 10:41:56,798 - slack_bolt.App - DEBUG - [client.py:150] - Message processing completed (type: events_api, envelope_id: 41f471ae-0f62-4231-8be7-be5b1957c307)
2025-08-21 10:41:56,798 - utils - DEBUG - [utils.py:31] - Message hash: 0a021db0cadd0fd476cdffd89bea33c4
2025-08-21 10:41:56,798 - utils - DEBUG - [utils.py:53] - Added message to processing cache (total entries: 1)
2025-08-21 10:41:56,799 - __main__ - DEBUG - [main.py:299] - Bot check: bot_id=None, user_id=U01RMTFMALF
2025-08-21 10:41:56,799 - __main__ - DEBUG - [main.py:304] - Question received: 'How to run test on Android'
2025-08-21 10:41:56,799 - __main__ - INFO - [main.py:310] - Processing DM question from user U01RMTFMALF: How to run test on Android
2025-08-21 10:41:56,799 - __main__ - DEBUG - [main.py:313] - Starting DM processing...
2025-08-21 10:41:56,799 - __main__ - DEBUG - [main.py:316] - Checking if 'how to run test on android' is an admin command in DM
2025-08-21 10:41:56,799 - __main__ - DEBUG - [main.py:351] - Checking if DM thread is already being processed...
2025-08-21 10:41:56,799 - utils - DEBUG - [utils.py:67] - Managing thread: D09A0LFHK8R:1755798116.274489, action: add, user: U01RMTFMALF
2025-08-21 10:41:56,799 - utils - INFO - [utils.py:94] - Added thread D09A0LFHK8R:1755798116.274489 to active tracking (total: 1)
2025-08-21 10:41:56,799 - __main__ - DEBUG - [main.py:356] - DM thread management check passed
2025-08-21 10:41:56,800 - slack_sdk.web.base_client - DEBUG - [base_client.py:255] - Sending a request - url: https://slack.com/api/reactions.add, query_params: {}, body_params: {'channel': 'D09A0LFHK8R', 'name': 'thinking_face', 'timestamp': '1755798116.274489', 'team_id': 'T010QS7UQNA'}, files: {}, json_body: None, headers: {'Content-Type': 'application/x-www-form-urlencoded', 'Authorization': '(redacted)', 'User-Agent': 'Python/3.12.0 slackclient/3.34.0 Darwin/23.4.0'}
2025-08-21 10:41:57,156 - slack_sdk.web.base_client - DEBUG - [base_client.py:546] - Received the following response - status: 200, headers: {'date': 'Thu, 21 Aug 2025 17:41:57 GMT', 'server': 'Apache', 'vary': 'Accept-Encoding', 'x-slack-req-id': 'fb820b80b307ed2545e117d53c7f7914', 'x-content-type-options': 'nosniff', 'x-xss-protection': '0', 'pragma': 'no-cache', 'cache-control': 'private, no-cache, no-store, must-revalidate', 'expires': 'Sat, 26 Jul 1997 05:00:00 GMT', 'content-type': 'application/json; charset=utf-8', 'x-accepted-oauth-scopes': 'reactions:write', 'x-oauth-scopes': 'app_mentions:read,channels:history,chat:write,im:history,im:read,im:write,users:read,reactions:write', 'access-control-expose-headers': 'x-slack-req-id, retry-after', 'access-control-allow-headers': 'slack-route, x-slack-version-ts, x-b3-traceid, x-b3-spanid, x-b3-parentspanid, x-b3-sampled, x-b3-flags', 'strict-transport-security': 'max-age=31536000; includeSubDomains; preload', 'referrer-policy': 'no-referrer', 'x-slack-unique-id': 'aKdaZXIzc4YS7iyAFlD08wAAAA4', 'x-slack-backend': 'r', 'access-control-allow-origin': '*', 'content-length': '11', 'via': '1.1 slack-prod.tinyspeck.com, envoy-www-iad-mlirqbxc,envoy-edge-pdx-eaeghakd', 'x-envoy-attempt-count': '1', 'x-envoy-upstream-service-time': '128', 'x-backend': 'main_normal main_canary_with_overflow main_control_with_overflow', 'x-server': 'slack-www-hhvm-main-iad-vrkb', 'x-slack-shared-secret-outcome': 'no-match', 'x-edge-backend': 'envoy-www', 'timing-allow-origin': '*', 'x-slack-edge-shared-secret-outcome': 'no-match', 'connection': 'close'}, body: {"ok":true}
2025-08-21 10:41:57,157 - __main__ - INFO - [main.py:373] - Processing DM question from <@U01RMTFMALF>: How to run test on Android
2025-08-21 10:41:57,158 - dig_connector - INFO - [dig_connector.py:134] - Generating response for query: 'How to run test on Android' with 0 chunks
2025-08-21 10:41:57,158 - dig_connector - DEBUG - [dig_connector.py:138] - Formatted context length: 0
2025-08-21 10:41:57,158 - dig_connector - INFO - [dig_connector.py:141] - No context available, using direct query
2025-08-21 10:41:57,158 - dig_connector - INFO - [dig_connector.py:150] - Sending prompt to DIG platform...
2025-08-21 10:41:57,158 - dig_connector - INFO - [dig_connector.py:121] - Sending message to DIG API - URL: https://ai.digdev.cbsicloud.com/fastapi/chats/850/generate
2025-08-21 10:41:57,158 - dig_connector - DEBUG - [dig_connector.py:122] - Message payload: {'model_id': 42, 'message_text': 'How to run test on Android', 'history': [{'role': 'user', 'content': 'How to run test on Android'}]}
2025-08-21 10:42:14,538 - urllib3.connectionpool - DEBUG - [connectionpool.py:549] - https://ai.digdev.cbsicloud.com:443 "POST /fastapi/chats/850/generate HTTP/1.1" 200 6863
2025-08-21 10:42:14,539 - dig_connector - DEBUG - [dig_connector.py:125] - DIG API response: status=200
2025-08-21 10:42:14,540 - dig_connector - DEBUG - [dig_connector.py:129] - DIG API response data: {'message_text': 'Running tests on Android can involve several methods, from basic development testing to automated suite execution. Here\'s a breakdown based on the provided documents:\n\n### General Android Testing Fundamentals\n\nFor a foundational understanding of testing Android applications, you can refer to the official Android developer documentation:\n*   **Fundamentals of testing Android apps:** [https://developer.android.com/training/testing/fundamentals](https://developer.android.com/training/testing/fundamentals) (Source: https://paramount.atlassian.net/wiki/spaces/PLQA/pages/47722061)\n*   **Running Apps on the Emulator:** [https://developer.android.com/studio/run/emulator](https://developer.android.com/studio/run/emulator) (Source: https://paramount.atlassian.net/wiki/spaces/PLQA/pages/47722061)\n\nYou may also find these resources helpful:\n*   **Basics of Android Studio:** [https://developer.android.com/studio/intro](https://developer.android.com/studio/intro) (Source: https://paramount.atlassian.net/wiki/spaces/PLQA/pages/47722061)\n*   **Learn Kotlin:** [https://developer.android.com/kotlin/learn](https://developer.android.com/kotlin/learn) (Source: https://paramount.atlassian.net/wiki/spaces/PLQA/pages/47722061)\n*   **Appium locator strategy:** [https://medium.com/@WasiqB/locators-in-appium-with-example-f8762eed83d7](https://medium.com/@WasiqB/locators-in-appium-with-example-f8762eed83d7) (Source: https://paramount.atlassian.net/wiki/spaces/PLQA/pages/47722061)\n\n### Running Tests on a Local Simulator/Emulator\n\nWhen running tests on a local Android Emulator, ensure your Run Configuration has the `$ANDROID_HOME` environment variable set and included in the path (Source: https://paramount.atlassian.net/wiki/spaces/PLQA/pages/47713566).\n\nIf you\'re using a framework like TestNG with Appium, a `SampleTest.java` class might be used. This class would handle instantiating the mobile driver, starting/stopping the Appium server, and managing the Android Emulator/iOS Simulator (Source: https://paramount.atlassian.net/wiki/spaces/PLQA/pages/47711460). Tests can be run using Maven commands, such as:\n\n`mvn test -Dmaven.repo.local=./.m2 -Dcucumber.features="$test" -Ddriver=android -DplatformName=android -Dudid= -Denvironment=lambdatest -DtargetURL=test-www.paramountplus.com -Dapp=lt://APP10160361191691076976834962 -DbundleId=com.cbsvideodebug.app -DappPackage=com.cbs.app -DlambdaKey=sureshkumar.palus:AdIBfntJTMxJhLRB18p7sgTEFMxAphu2X2cVmsQiu9KlESMhXq -Dbuild=P+_Android_phone_test-www -Dproject="P+ Android Mobile" -DqueueTimeout=300` (Source: https://paramount.atlassian.net/wiki/spaces/PLQA/pages/47721257)\n\n### Automated Test Execution via Jenkins (Smoke Test Suite)\n\nA common method for running automated Android tests, particularly smoke tests, is through Jenkins.\n\n**About the Smoke Test Suite:**\n*   It consists of 30 test cases to verify basic build functionality.\n*   It runs nightly and can be executed on demand.\n*   Tests can be run on Android Phones and Tablets. (Source: https://paramount.atlassian.net/wiki/spaces/PLQA/pages/47726491)\n\n**Pre-requisites:**\n1.  Access to the Jenkins BVC Server: [https://build.viacom.com/](https://build.viacom.com/)\n2.  Access to the Jenkins job for Android: [https://stage.build.viacom.com/job/mqe/job/gqe_pplus_android_domestic/](https://stage.build.viacom.com/job/mqe/job/gqe_pplus_android_domestic/) (Source: https://paramount.atlassian.net/wiki/spaces/PLQA/pages/47726491)\n\n**Steps to Execute Tests in Jenkins (Ad-hoc):**\n1.  Navigate to the Jenkins job URL: [https://stage.build.viacom.com/job/mqe/job/gqe_pplus_android_domestic/](https://stage.build.viacom.com/job/mqe/job/gqe_pplus_android_domestic/).\n2.  Select "Build with Parameters" from the left menu.\n3.  Configure the desired **Build Parameters**, including:\n    *   `BRANCH` (e.g., master)\n    *   `LOCALE` (e.g., en-us)\n    *   `ENVIRONMENT` (e.g., test)\n    *   `PLATFORM` (e.g., ANDROID)\n    *   `MOBILE_DEVICE_CATEGORY` (PHONE or TABLET)\n    *   `APP_NAME` (e.g., PPLUS_US)\n    *   `APP_BUILD_TYPE` (e.g., DEBUG)\n    *   `APP_PACKAGE_URL` (blank for latest from AppCenter, or specific Synergy build URL)\n    *   `INCLUDE_TEST_GROUPS` (e.g., Smoke)\n    *   `EXCLUDE_TEST_GROUPS` (e.g., Broken, BrokenAndroidMobileUS)\n    *   `EMAIL_REPORT_RECIPIENT` (comma-separated email list)\n    *   Other parameters like `USE_GEOVPN`, `TESTRAIL_MILESTONE_ID`, `TESTRAIL_TESTRUN_ID`, `ATTACH_SESSION_DETAILS`, `RERUN_ON_FAILURE`, `RERUN_ON_FAILURE_COUNT`.\n4.  Press the "Build" button.\n5.  Monitor the build progress and status. (Source: https://paramount.atlassian.net/wiki/spaces/PLQA/pages/47726491)\n\n**Viewing Test Results:**\n*   Each execution generates an **Allure report**.\n*   The report is emailed to specified recipients (from `noreply@mtvi.com`).\n*   The email includes a summary and a link to the Jenkins run.\n*   The `build.log` file also contains a link to the Allure report (search for "synergyreport").\n*   You can view the Allure report directly from within Jenkins by selecting the desired run from the Build History and then clicking "Console Output" to find the link. (Source: https://paramount.atlassian.net/wiki/spaces/PLQA/pages/47726491)\n\n### Android TV Specific Setup and Test Execution\n\n**Setup for Local Execution:**\n1.  Ensure your work laptop and Android TV device are on the same network.\n2.  Enable **developer mode** on your Android TV: Go to Device Preferences Settings > About SHIELD, scroll to the bottom, and tap "Build Number" several times (7-9 taps).\n3.  Enable **USB debugging** and **Network debugging**.\n4.  Configure **proxy settings**: Go to Network and Internet, select your current network, then proxy settings > manual.\n    *   Enter the IP seen in Charles proxy for the proxy host name.\n    *   Use proxy port `8888` for local execution or `9999` for synergy execution.\n5.  Proceed and save the settings. (Source: https://paramount.atlassian.net/wiki/spaces/PLQA/pages/47730307)\n\n**Test Execution for Android TV:**\n1.  Download the latest version of the Synergy server and run the `.jar` file (Websocket).\n2.  Update the desired capabilities in the `.config` file (located under `mqe-hob-ctv-tests` directory). Key parameters to configure include:\n    *   `ServerURL`\n    *   `AppName` (e.g., PPLUS_US, PPLUS_INTL)\n    *   `Platform` (ANDROID_TV)\n    *   `Locale` (e.g., en-us)\n    *   `Environment` (e.g., prod, stage, test)\n    *   `AppPackageUrl`\n    *   `DebugDeviceIP` (empty for synergy farm, or local network IP for local run)\n    *   `JenkinsCredential` (username:password)\n    *   `AppBuildType` (e.g., DEBUG)\n    *   `DebugProxyPort` (e.g., 9999) (Source: https://paramount.atlassian.net/wiki/spaces/PLQA/pages/47730307)', 'requires_approval': False, 'execution_id': 1551}
2025-08-21 10:42:14,541 - dig_connector - INFO - [dig_connector.py:154] - Extracting response content...
2025-08-21 10:42:14,541 - dig_connector - WARNING - [dig_connector.py:231] - Unexpected DIG response structure: {'message_text': 'Running tests on Android can involve several methods, from basic development testing to automated suite execution. Here\'s a breakdown based on the provided documents:\n\n### General Android Testing Fundamentals\n\nFor a foundational understanding of testing Android applications, you can refer to the official Android developer documentation:\n*   **Fundamentals of testing Android apps:** [https://developer.android.com/training/testing/fundamentals](https://developer.android.com/training/testing/fundamentals) (Source: https://paramount.atlassian.net/wiki/spaces/PLQA/pages/47722061)\n*   **Running Apps on the Emulator:** [https://developer.android.com/studio/run/emulator](https://developer.android.com/studio/run/emulator) (Source: https://paramount.atlassian.net/wiki/spaces/PLQA/pages/47722061)\n\nYou may also find these resources helpful:\n*   **Basics of Android Studio:** [https://developer.android.com/studio/intro](https://developer.android.com/studio/intro) (Source: https://paramount.atlassian.net/wiki/spaces/PLQA/pages/47722061)\n*   **Learn Kotlin:** [https://developer.android.com/kotlin/learn](https://developer.android.com/kotlin/learn) (Source: https://paramount.atlassian.net/wiki/spaces/PLQA/pages/47722061)\n*   **Appium locator strategy:** [https://medium.com/@WasiqB/locators-in-appium-with-example-f8762eed83d7](https://medium.com/@WasiqB/locators-in-appium-with-example-f8762eed83d7) (Source: https://paramount.atlassian.net/wiki/spaces/PLQA/pages/47722061)\n\n### Running Tests on a Local Simulator/Emulator\n\nWhen running tests on a local Android Emulator, ensure your Run Configuration has the `$ANDROID_HOME` environment variable set and included in the path (Source: https://paramount.atlassian.net/wiki/spaces/PLQA/pages/47713566).\n\nIf you\'re using a framework like TestNG with Appium, a `SampleTest.java` class might be used. This class would handle instantiating the mobile driver, starting/stopping the Appium server, and managing the Android Emulator/iOS Simulator (Source: https://paramount.atlassian.net/wiki/spaces/PLQA/pages/47711460). Tests can be run using Maven commands, such as:\n\n`mvn test -Dmaven.repo.local=./.m2 -Dcucumber.features="$test" -Ddriver=android -DplatformName=android -Dudid= -Denvironment=lambdatest -DtargetURL=test-www.paramountplus.com -Dapp=lt://APP10160361191691076976834962 -DbundleId=com.cbsvideodebug.app -DappPackage=com.cbs.app -DlambdaKey=sureshkumar.palus:AdIBfntJTMxJhLRB18p7sgTEFMxAphu2X2cVmsQiu9KlESMhXq -Dbuild=P+_Android_phone_test-www -Dproject="P+ Android Mobile" -DqueueTimeout=300` (Source: https://paramount.atlassian.net/wiki/spaces/PLQA/pages/47721257)\n\n### Automated Test Execution via Jenkins (Smoke Test Suite)\n\nA common method for running automated Android tests, particularly smoke tests, is through Jenkins.\n\n**About the Smoke Test Suite:**\n*   It consists of 30 test cases to verify basic build functionality.\n*   It runs nightly and can be executed on demand.\n*   Tests can be run on Android Phones and Tablets. (Source: https://paramount.atlassian.net/wiki/spaces/PLQA/pages/47726491)\n\n**Pre-requisites:**\n1.  Access to the Jenkins BVC Server: [https://build.viacom.com/](https://build.viacom.com/)\n2.  Access to the Jenkins job for Android: [https://stage.build.viacom.com/job/mqe/job/gqe_pplus_android_domestic/](https://stage.build.viacom.com/job/mqe/job/gqe_pplus_android_domestic/) (Source: https://paramount.atlassian.net/wiki/spaces/PLQA/pages/47726491)\n\n**Steps to Execute Tests in Jenkins (Ad-hoc):**\n1.  Navigate to the Jenkins job URL: [https://stage.build.viacom.com/job/mqe/job/gqe_pplus_android_domestic/](https://stage.build.viacom.com/job/mqe/job/gqe_pplus_android_domestic/).\n2.  Select "Build with Parameters" from the left menu.\n3.  Configure the desired **Build Parameters**, including:\n    *   `BRANCH` (e.g., master)\n    *   `LOCALE` (e.g., en-us)\n    *   `ENVIRONMENT` (e.g., test)\n    *   `PLATFORM` (e.g., ANDROID)\n    *   `MOBILE_DEVICE_CATEGORY` (PHONE or TABLET)\n    *   `APP_NAME` (e.g., PPLUS_US)\n    *   `APP_BUILD_TYPE` (e.g., DEBUG)\n    *   `APP_PACKAGE_URL` (blank for latest from AppCenter, or specific Synergy build URL)\n    *   `INCLUDE_TEST_GROUPS` (e.g., Smoke)\n    *   `EXCLUDE_TEST_GROUPS` (e.g., Broken, BrokenAndroidMobileUS)\n    *   `EMAIL_REPORT_RECIPIENT` (comma-separated email list)\n    *   Other parameters like `USE_GEOVPN`, `TESTRAIL_MILESTONE_ID`, `TESTRAIL_TESTRUN_ID`, `ATTACH_SESSION_DETAILS`, `RERUN_ON_FAILURE`, `RERUN_ON_FAILURE_COUNT`.\n4.  Press the "Build" button.\n5.  Monitor the build progress and status. (Source: https://paramount.atlassian.net/wiki/spaces/PLQA/pages/47726491)\n\n**Viewing Test Results:**\n*   Each execution generates an **Allure report**.\n*   The report is emailed to specified recipients (from `noreply@mtvi.com`).\n*   The email includes a summary and a link to the Jenkins run.\n*   The `build.log` file also contains a link to the Allure report (search for "synergyreport").\n*   You can view the Allure report directly from within Jenkins by selecting the desired run from the Build History and then clicking "Console Output" to find the link. (Source: https://paramount.atlassian.net/wiki/spaces/PLQA/pages/47726491)\n\n### Android TV Specific Setup and Test Execution\n\n**Setup for Local Execution:**\n1.  Ensure your work laptop and Android TV device are on the same network.\n2.  Enable **developer mode** on your Android TV: Go to Device Preferences Settings > About SHIELD, scroll to the bottom, and tap "Build Number" several times (7-9 taps).\n3.  Enable **USB debugging** and **Network debugging**.\n4.  Configure **proxy settings**: Go to Network and Internet, select your current network, then proxy settings > manual.\n    *   Enter the IP seen in Charles proxy for the proxy host name.\n    *   Use proxy port `8888` for local execution or `9999` for synergy execution.\n5.  Proceed and save the settings. (Source: https://paramount.atlassian.net/wiki/spaces/PLQA/pages/47730307)\n\n**Test Execution for Android TV:**\n1.  Download the latest version of the Synergy server and run the `.jar` file (Websocket).\n2.  Update the desired capabilities in the `.config` file (located under `mqe-hob-ctv-tests` directory). Key parameters to configure include:\n    *   `ServerURL`\n    *   `AppName` (e.g., PPLUS_US, PPLUS_INTL)\n    *   `Platform` (ANDROID_TV)\n    *   `Locale` (e.g., en-us)\n    *   `Environment` (e.g., prod, stage, test)\n    *   `AppPackageUrl`\n    *   `DebugDeviceIP` (empty for synergy farm, or local network IP for local run)\n    *   `JenkinsCredential` (username:password)\n    *   `AppBuildType` (e.g., DEBUG)\n    *   `DebugProxyPort` (e.g., 9999) (Source: https://paramount.atlassian.net/wiki/spaces/PLQA/pages/47730307)', 'requires_approval': False, 'execution_id': 1551}
2025-08-21 10:42:14,542 - dig_connector - INFO - [dig_connector.py:157] - Successfully generated response (length: 6856)
2025-08-21 10:42:14,542 - slack_sdk.web.base_client - DEBUG - [base_client.py:255] - Sending a request - url: https://slack.com/api/reactions.remove, query_params: {}, body_params: {'name': 'thinking_face', 'channel': 'D09A0LFHK8R', 'timestamp': '1755798116.274489', 'team_id': 'T010QS7UQNA'}, files: {}, json_body: None, headers: {'Content-Type': 'application/x-www-form-urlencoded', 'Authorization': '(redacted)', 'User-Agent': 'Python/3.12.0 slackclient/3.34.0 Darwin/23.4.0'}
2025-08-21 10:42:14,894 - slack_sdk.web.base_client - DEBUG - [base_client.py:546] - Received the following response - status: 200, headers: {'date': 'Thu, 21 Aug 2025 17:42:14 GMT', 'server': 'Apache', 'vary': 'Accept-Encoding', 'x-slack-req-id': '57feca4b99b4a9d87b48e9e41eff12d1', 'x-content-type-options': 'nosniff', 'x-xss-protection': '0', 'pragma': 'no-cache', 'cache-control': 'private, no-cache, no-store, must-revalidate', 'expires': 'Sat, 26 Jul 1997 05:00:00 GMT', 'content-type': 'application/json; charset=utf-8', 'x-accepted-oauth-scopes': 'reactions:write', 'x-oauth-scopes': 'app_mentions:read,channels:history,chat:write,im:history,im:read,im:write,users:read,reactions:write', 'access-control-expose-headers': 'x-slack-req-id, retry-after', 'access-control-allow-headers': 'slack-route, x-slack-version-ts, x-b3-traceid, x-b3-spanid, x-b3-parentspanid, x-b3-sampled, x-b3-flags', 'strict-transport-security': 'max-age=31536000; includeSubDomains; preload', 'referrer-policy': 'no-referrer', 'x-slack-unique-id': 'aKdadhv7CXwvzOvgjCKbngAAACE', 'x-slack-backend': 'r', 'access-control-allow-origin': '*', 'content-length': '11', 'via': '1.1 slack-prod.tinyspeck.com, envoy-www-iad-rklxnzxm,envoy-edge-pdx-vsjukqce', 'x-envoy-attempt-count': '1', 'x-envoy-upstream-service-time': '139', 'x-backend': 'main_normal main_canary_with_overflow main_control_with_overflow', 'x-server': 'slack-www-hhvm-main-iad-vxvf', 'x-slack-shared-secret-outcome': 'no-match', 'x-edge-backend': 'envoy-www', 'timing-allow-origin': '*', 'x-slack-edge-shared-secret-outcome': 'no-match', 'connection': 'close'}, body: {"ok":true}
2025-08-21 10:42:14,915 - slack_sdk.web.base_client - DEBUG - [base_client.py:255] - Sending a request - url: https://slack.com/api/chat.postMessage, query_params: {}, body_params: {}, files: {}, json_body: {'channel': 'D09A0LFHK8R', 'text': "*Your Query:* How to run test on Android\n\n*Answer:*\n{'message_text': 'Running tests on Android can involve several methods, from basic development testing to automated suite execution. Here\\'s a breakdown based on the provided documents:\\n\\n### General Android Testing Fundamentals\\n\\nFor a foundational understanding of testing Android applications, you can refer to the official Android developer documentation:\\n*   **Fundamentals of testing Android apps:** [https://developer.android.com/training/testing/fundamentals](https://developer.android.com/training/testing/fundamentals) (Source: https://paramount.atlassian.net/wiki/spaces/PLQA/pages/47722061)\\n*   **Running Apps on the Emulator:** [https://developer.android.com/studio/run/emulator](https://developer.android.com/studio/run/emulator) (Source: https://paramount.atlassian.net/wiki/spaces/PLQA/pages/47722061)\\n\\nYou may also find these resources helpful:\\n*   **Basics of Android Studio:** [https://developer.android.com/studio/intro](https://developer.android.com/studio/intro) (Source: https://paramount.atlassian.net/wiki/spaces/PLQA/pages/47722061)\\n*   **Learn Kotlin:** [https://developer.android.com/kotlin/learn](https://developer.android.com/kotlin/learn) (Source: https://paramount.atlassian.net/wiki/spaces/PLQA/pages/47722061)\\n*   **Appium locator strategy:** [https://medium.com/@WasiqB/locators-in-appium-with-example-f8762eed83d7](https://medium.com/@WasiqB/locators-in-appium-with-example-f8762eed83d7) (Source: https://paramount.atlassian.net/wiki/spaces/PLQA/pages/47722061)\\n\\n### Running Tests on a Local Simulator/Emulator\\n\\nWhen running tests on a local Android Emulator, ensure your Run Configuration has the `$ANDROID_HOME` environment variable set and included in the path (Source: https://paramount.atlassian.net/wiki/spaces/PLQA/pages/47713566).\\n\\nIf you\\'re using a framework like TestNG with Appium, a `SampleTest.java` class might be used. This class would handle instantiating the mobile driver, starting/stopping the Appium server, and managing the Android Emulator/iOS Simulator (Source: https://paramount.atlassian.net/wiki/spaces/PLQA/pages/47711460).\n\n_(message continued in thread...)_", 'thread_ts': '1755798116.274489', 'team_id': 'T010QS7UQNA'}, headers: {'Content-Type': 'application/json;charset=utf-8', 'Authorization': '(redacted)', 'User-Agent': 'Python/3.12.0 slackclient/3.34.0 Darwin/23.4.0'}
2025-08-21 10:42:15,303 - slack_sdk.web.base_client - DEBUG - [base_client.py:546] - Received the following response - status: 200, headers: {'date': 'Thu, 21 Aug 2025 17:42:15 GMT', 'server': 'Apache', 'vary': 'Accept-Encoding', 'x-slack-req-id': 'f24a17a153a998896c2dd67c9c6506d3', 'x-content-type-options': 'nosniff', 'x-xss-protection': '0', 'pragma': 'no-cache', 'cache-control': 'private, no-cache, no-store, must-revalidate', 'expires': 'Sat, 26 Jul 1997 05:00:00 GMT', 'content-type': 'application/json; charset=utf-8', 'x-accepted-oauth-scopes': 'chat:write', 'x-oauth-scopes': 'app_mentions:read,channels:history,chat:write,im:history,im:read,im:write,users:read,reactions:write', 'access-control-expose-headers': 'x-slack-req-id, retry-after', 'access-control-allow-headers': 'slack-route, x-slack-version-ts, x-b3-traceid, x-b3-spanid, x-b3-parentspanid, x-b3-sampled, x-b3-flags', 'strict-transport-security': 'max-age=31536000; includeSubDomains; preload', 'referrer-policy': 'no-referrer', 'x-slack-unique-id': 'aKdad2Cgc7Vo-cree1RfXgAAADs', 'x-slack-backend': 'r', 'access-control-allow-origin': '*', 'content-length': '6431', 'via': '1.1 slack-prod.tinyspeck.com, envoy-www-iad-vgalcdyo,envoy-edge-pdx-bujaxqzs', 'x-envoy-attempt-count': '1', 'x-envoy-upstream-service-time': '193', 'x-backend': 'main_normal main_canary_with_overflow main_control_with_overflow', 'x-server': 'slack-www-hhvm-main-iad-nfeo', 'x-slack-shared-secret-outcome': 'no-match', 'x-edge-backend': 'envoy-www', 'timing-allow-origin': '*', 'x-slack-edge-shared-secret-outcome': 'no-match', 'connection': 'close'}, body: {"ok":true,"channel":"D09A0LFHK8R","ts":"1755798135.250439","message":{"user":"U099R6WTZ9S","type":"message","ts":"1755798135.250439","bot_id":"B099R6WTRU4","app_id":"A099LACAB2R","text":"*Your Query:* How to run test on Android\n\n*Answer:*\n{'message_text': 'Running tests on Android can involve several methods, from basic development testing to automated suite execution. Here\\'s a breakdown based on the provided documents:\\n\\n### General Android Testing Fundamentals\\n\\nFor a foundational understanding of testing Android applications, you can refer to the official Android developer documentation:\\n*   **Fundamentals of testing Android apps:** [<https://developer.android.com/training/testing/fundamentals>](<https://developer.android.com/training/testing/fundamentals>) (Source: <https://paramount.atlassian.net/wiki/spaces/PLQA/pages/47722061>)\\n*   **Running Apps on the Emulator:** [<https://developer.android.com/studio/run/emulator>](<https://developer.android.com/studio/run/emulator>) (Source: <https://paramount.atlassian.net/wiki/spaces/PLQA/pages/47722061>)\\n\\nYou may also find these resources helpful:\\n*   **Basics of Android Studio:** [<https://developer.android.com/studio/intro>](<https://developer.android.com/studio/intro>) (Source: <https://paramount.atlassian.net/wiki/spaces/PLQA/pages/47722061>)\\n*   **Learn Kotlin:** [<https://developer.android.com/kotlin/learn>](<https://developer.android.com/kotlin/learn>) (Source: <https://paramount.atlassian.net/wiki/spaces/PLQA/pages/47722061>)\\n*   **Appium locator strategy:** [<https://medium.com/@WasiqB/locators-in-appium-with-example-f8762eed83d7>](<https://medium.com/@WasiqB/locators-in-appium-with-example-f8762eed83d7>) (Source: <https://paramount.atlassian.net/wiki/spaces/PLQA/pages/47722061>)\\n\\n### Running Tests on a Local Simulator/Emulator\\n\\nWhen running tests on a local Android Emulator, ensure your Run Configuration has the `$ANDROID_HOME` environment variable set and included in the path (Source: <https://paramount.atlassian.net/wiki/spaces/PLQA/pages/47713566>).\\n\\nIf you\\'re using a framework like TestNG with Appium, a `SampleTest.java` class might be used. This class would handle instantiating the mobile driver, starting/stopping the Appium server, and managing the Android Emulator/iOS Simulator (Source: <https://paramount.atlassian.net/wiki/spaces/PLQA/pages/47711460>).\n\n_(message continued in thread...)_","team":"T010QS7UQNA","bot_profile":{"id":"B099R6WTRU4","app_id":"A099LACAB2R","user_id":"U099R6WTZ9S","name":"AutoBot","icons":{"image_36":"https://a.slack-edge.com/80588/img/plugins/app/bot_36.png","image_48":"https://a.slack-edge.com/80588/img/plugins/app/bot_48.png","image_72":"https://a.slack-edge.com/80588/img/plugins/app/service_72.png"},"deleted":false,"updated":1754677948,"team_id":"T010QS7UQNA"},"thread_ts":"1755798116.274489","parent_user_id":"U01RMTFMALF","blocks":[{"type":"rich_text","block_id":"GuX","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Your Query:","style":{"bold":true}},{"type":"text","text":" How to run test on Android\n\n"},{"type":"text","text":"Answer:","style":{"bold":true}},{"type":"text","text":"\n{'message_text': 'Running tests on Android can involve several methods, from basic development testing to automated suite execution. Here\\'s a breakdown based on the provided documents:\\n\\n### General Android Testing Fundamentals\\n\\nFor a foundational understanding of testing Android applications, you can refer to the official Android developer documentation:\\n*   **Fundamentals of testing Android apps:** ["},{"type":"link","url":"https://developer.android.com/training/testing/fundamentals"},{"type":"text","text":"]("},{"type":"link","url":"https://developer.android.com/training/testing/fundamentals"},{"type":"text","text":") (Source: "},{"type":"link","url":"https://paramount.atlassian.net/wiki/spaces/PLQA/pages/47722061"},{"type":"text","text":")\\n*   **Running Apps on the Emulator:** ["},{"type":"link","url":"https://developer.android.com/studio/run/emulator"},{"type":"text","text":"]("},{"type":"link","url":"https://developer.android.com/studio/run/emulator"},{"type":"text","text":") (Source: "},{"type":"link","url":"https://paramount.atlassian.net/wiki/spaces/PLQA/pages/47722061"},{"type":"text","text":")\\n\\nYou may also find these resources helpful:\\n*   **Basics of Android Studio:** ["},{"type":"link","url":"https://developer.android.com/studio/intro"},{"type":"text","text":"]("},{"type":"link","url":"https://developer.android.com/studio/intro"},{"type":"text","text":") (Source: "},{"type":"link","url":"https://paramount.atlassian.net/wiki/spaces/PLQA/pages/47722061"},{"type":"text","text":")\\n*   **Learn Kotlin:** ["},{"type":"link","url":"https://developer.android.com/kotlin/learn"},{"type":"text","text":"]("},{"type":"link","url":"https://developer.android.com/kotlin/learn"},{"type":"text","text":") (Source: "},{"type":"link","url":"https://paramount.atlassian.net/wiki/spaces/PLQA/pages/47722061"},{"type":"text","text":")\\n*   **Appium locator strategy:** ["},{"type":"link","url":"https://medium.com/@WasiqB/locators-in-appium-with-example-f8762eed83d7"},{"type":"text","text":"]("},{"type":"link","url":"https://medium.com/@WasiqB/locators-in-appium-with-example-f8762eed83d7"},{"type":"text","text":") (Source: "},{"type":"link","url":"https://paramount.atlassian.net/wiki/spaces/PLQA/pages/47722061"},{"type":"text","text":")\\n\\n### Running Tests on a Local Simulator/Emulator\\n\\nWhen running tests on a local Android Emulator, ensure your Run Configuration has the "},{"type":"text","text":"$ANDROID_HOME","style":{"code":true}},{"type":"text","text":" environment variable set and included in the path (Source: "},{"type":"link","url":"https://paramount.atlassian.net/wiki/spaces/PLQA/pages/47713566"},{"type":"text","text":").\\n\\nIf you\\'re using a framework like TestNG with Appium, a "},{"type":"text","text":"SampleTest.java","style":{"code":true}},{"type":"text","text":" class might be used. This class would handle instantiating the mobile driver, starting/stopping the Appium server, and managing the Android Emulator/iOS Simulator (Source: "},{"type":"link","url":"https://paramount.atlassian.net/wiki/spaces/PLQA/pages/47711460"},{"type":"text","text":").\n\n"},{"type":"text","text":"(message continued in thread...)","style":{"italic":true}}]}]}]}}
2025-08-21 10:42:15,305 - slack_sdk.web.base_client - DEBUG - [base_client.py:255] - Sending a request - url: https://slack.com/api/chat.postMessage, query_params: {}, body_params: {}, files: {}, json_body: {'channel': 'D09A0LFHK8R', 'text': '_(part 2/3)_\n\nTests can be run using Maven commands, such as:\\n\\n`mvn test -Dmaven.repo.local=./.m2 -Dcucumber.features="$test" -Ddriver=android -DplatformName=android -Dudid= -Denvironment=lambdatest -DtargetURL=test-www.paramountplus.com -Dapp=lt://APP10160361191691076976834962 -DbundleId=com.cbsvideodebug.app -DappPackage=com.cbs.app -DlambdaKey=sureshkumar.palus:AdIBfntJTMxJhLRB18p7sgTEFMxAphu2X2cVmsQiu9KlESMhXq -Dbuild=P+_Android_phone_test-www -Dproject="P+ Android Mobile" -DqueueTimeout=300` (Source: https://paramount.atlassian.net/wiki/spaces/PLQA/pages/47721257)\\n\\n### Automated Test Execution via Jenkins (Smoke Test Suite)\\n\\nA common method for running automated Android tests, particularly smoke tests, is through Jenkins.\\n\\n**About the Smoke Test Suite:**\\n*   It consists of 30 test cases to verify basic build functionality.\\n*   It runs nightly and can be executed on demand.\\n*   Tests can be run on Android Phones and Tablets. (Source: https://paramount.atlassian.net/wiki/spaces/PLQA/pages/47726491)\\n\\n**Pre-requisites:**\\n1. Access to the Jenkins BVC Server: [https://build.viacom.com/](https://build.viacom.com/)\\n2. Access to the Jenkins job for Android: [https://stage.build.viacom.com/job/mqe/job/gqe_pplus_android_domestic/](https://stage.build.viacom.com/job/mqe/job/gqe_pplus_android_domestic/) (Source: https://paramount.atlassian.net/wiki/spaces/PLQA/pages/47726491)\\n\\n**Steps to Execute Tests in Jenkins (Ad-hoc):**\\n1. Navigate to the Jenkins job URL: [https://stage.build.viacom.com/job/mqe/job/gqe_pplus_android_domestic/](https://stage.build.viacom.com/job/mqe/job/gqe_pplus_android_domestic/).\\n2. Select "Build with Parameters" from the left menu.\\n3. Configure the desired **Build Parameters**, including:\\n    *   `BRANCH` (e.g., master)\\n    *   `LOCALE` (e.g., en-us)\\n    *   `ENVIRONMENT` (e.g., test)\\n    *   `PLATFORM` (e.g., ANDROID)\\n    *   `MOBILE_DEVICE_CATEGORY` (PHONE or TABLET)\\n    *   `APP_NAME` (e.g., PPLUS_US)\\n    *   `APP_BUILD_TYPE` (e.g., DEBUG)\\n    *   `APP_PACKAGE_URL` (blank for latest from AppCenter, or specific Synergy build URL)\\n    *   `INCLUDE_TEST_GROUPS` (e.g., Smoke)\\n    *   `EXCLUDE_TEST_GROUPS` (e.g., Broken, BrokenAndroidMobileUS)\\n    *   `EMAIL_REPORT_RECIPIENT` (comma-separated email list)\\n    *   Other parameters like `USE_GEOVPN`, `TESTRAIL_MILESTONE_ID`, `TESTRAIL_TESTRUN_ID`, `ATTACH_SESSION_DETAILS`, `RERUN_ON_FAILURE`, `RERUN_ON_FAILURE_COUNT`.\\n4. Press the "Build" button.\\n5. Monitor the build progress and status.', 'thread_ts': '1755798116.274489', 'team_id': 'T010QS7UQNA'}, headers: {'Content-Type': 'application/json;charset=utf-8', 'Authorization': '(redacted)', 'User-Agent': 'Python/3.12.0 slackclient/3.34.0 Darwin/23.4.0'}
2025-08-21 10:42:15,722 - slack_sdk.web.base_client - DEBUG - [base_client.py:546] - Received the following response - status: 200, headers: {'date': 'Thu, 21 Aug 2025 17:42:15 GMT', 'server': 'Apache', 'vary': 'Accept-Encoding', 'x-slack-req-id': 'daf9f0ff89b71c87ac2c9fbb02a09a98', 'x-content-type-options': 'nosniff', 'x-xss-protection': '0', 'pragma': 'no-cache', 'cache-control': 'private, no-cache, no-store, must-revalidate', 'expires': 'Sat, 26 Jul 1997 05:00:00 GMT', 'content-type': 'application/json; charset=utf-8', 'x-accepted-oauth-scopes': 'chat:write', 'x-oauth-scopes': 'app_mentions:read,channels:history,chat:write,im:history,im:read,im:write,users:read,reactions:write', 'access-control-expose-headers': 'x-slack-req-id, retry-after', 'access-control-allow-headers': 'slack-route, x-slack-version-ts, x-b3-traceid, x-b3-spanid, x-b3-parentspanid, x-b3-sampled, x-b3-flags', 'strict-transport-security': 'max-age=31536000; includeSubDomains; preload', 'referrer-policy': 'no-referrer', 'x-slack-unique-id': 'aKdad3nJ0-mZQwlPARHx4wAAABg', 'x-slack-backend': 'r', 'access-control-allow-origin': '*', 'content-length': '8100', 'via': '1.1 slack-prod.tinyspeck.com, envoy-www-iad-gdjzxhzm,envoy-edge-pdx-pxiwsfek', 'x-envoy-attempt-count': '1', 'x-envoy-upstream-service-time': '190', 'x-backend': 'main_normal main_canary_with_overflow main_control_with_overflow', 'x-server': 'slack-www-hhvm-control-main-iad-qrtw', 'x-slack-shared-secret-outcome': 'no-match', 'x-edge-backend': 'envoy-www', 'timing-allow-origin': '*', 'x-slack-edge-shared-secret-outcome': 'no-match', 'connection': 'close'}, body: {"ok":true,"channel":"D09A0LFHK8R","ts":"1755798135.669619","message":{"user":"U099R6WTZ9S","type":"message","ts":"1755798135.669619","bot_id":"B099R6WTRU4","app_id":"A099LACAB2R","text":"_(part 2/3)_\n\nTests can be run using Maven commands, such as:\\n\\n`mvn test -Dmaven.repo.local=./.m2 -Dcucumber.features=\"$test\" -Ddriver=android -DplatformName=android -Dudid= -Denvironment=lambdatest -DtargetURL=<http://test-www.paramountplus.com|test-www.paramountplus.com> -Dapp=<lt://APP10160361191691076976834962> -DbundleId=<http://com.cbsvideodebug.app|com.cbsvideodebug.app> -DappPackage=<http://com.cbs.app|com.cbs.app> -DlambdaKey=sureshkumar.palus:AdIBfntJTMxJhLRB18p7sgTEFMxAphu2X2cVmsQiu9KlESMhXq -Dbuild=P+_Android_phone_test-www -Dproject=\"P+ Android Mobile\" -DqueueTimeout=300` (Source: <https://paramount.atlassian.net/wiki/spaces/PLQA/pages/47721257>)\\n\\n### Automated Test Execution via Jenkins (Smoke Test Suite)\\n\\nA common method for running automated Android tests, particularly smoke tests, is through Jenkins.\\n\\n**About the Smoke Test Suite:**\\n*   It consists of 30 test cases to verify basic build functionality.\\n*   It runs nightly and can be executed on demand.\\n*   Tests can be run on Android Phones and Tablets. (Source: <https://paramount.atlassian.net/wiki/spaces/PLQA/pages/47726491>)\\n\\n**Pre-requisites:**\\n1. Access to the Jenkins BVC Server: [<https://build.viacom.com/>](<https://build.viacom.com/>)\\n2. Access to the Jenkins job for Android: [<https://stage.build.viacom.com/job/mqe/job/gqe_pplus_android_domestic/>](<https://stage.build.viacom.com/job/mqe/job/gqe_pplus_android_domestic/>) (Source: <https://paramount.atlassian.net/wiki/spaces/PLQA/pages/47726491>)\\n\\n**Steps to Execute Tests in Jenkins (Ad-hoc):**\\n1. Navigate to the Jenkins job URL: [<https://stage.build.viacom.com/job/mqe/job/gqe_pplus_android_domestic/>](<https://stage.build.viacom.com/job/mqe/job/gqe_pplus_android_domestic/>).\\n2. Select \"Build with Parameters\" from the left menu.\\n3. Configure the desired **Build Parameters**, including:\\n    *   `BRANCH` (e.g., master)\\n    *   `LOCALE` (e.g., en-us)\\n    *   `ENVIRONMENT` (e.g., test)\\n    *   `PLATFORM` (e.g., ANDROID)\\n    *   `MOBILE_DEVICE_CATEGORY` (PHONE or TABLET)\\n    *   `APP_NAME` (e.g., PPLUS_US)\\n    *   `APP_BUILD_TYPE` (e.g., DEBUG)\\n    *   `APP_PACKAGE_URL` (blank for latest from AppCenter, or specific Synergy build URL)\\n    *   `INCLUDE_TEST_GROUPS` (e.g., Smoke)\\n    *   `EXCLUDE_TEST_GROUPS` (e.g., Broken, BrokenAndroidMobileUS)\\n    *   `EMAIL_REPORT_RECIPIENT` (comma-separated email list)\\n    *   Other parameters like `USE_GEOVPN`, `TESTRAIL_MILESTONE_ID`, `TESTRAIL_TESTRUN_ID`, `ATTACH_SESSION_DETAILS`, `RERUN_ON_FAILURE`, `RERUN_ON_FAILURE_COUNT`.\\n4. Press the \"Build\" button.\\n5. Monitor the build progress and status.","team":"T010QS7UQNA","bot_profile":{"id":"B099R6WTRU4","app_id":"A099LACAB2R","user_id":"U099R6WTZ9S","name":"AutoBot","icons":{"image_36":"https://a.slack-edge.com/80588/img/plugins/app/bot_36.png","image_48":"https://a.slack-edge.com/80588/img/plugins/app/bot_48.png","image_72":"https://a.slack-edge.com/80588/img/plugins/app/service_72.png"},"deleted":false,"updated":1754677948,"team_id":"T010QS7UQNA"},"thread_ts":"1755798116.274489","parent_user_id":"U01RMTFMALF","blocks":[{"type":"rich_text","block_id":"X+o3U","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"(part 2/3)","style":{"italic":true}},{"type":"text","text":"\n\nTests can be run using Maven commands, such as:\\n\\n`mvn test -Dmaven.repo.local=./.m2 -Dcucumber.features=\"$test\" -Ddriver=android -DplatformName=android -Dudid= -Denvironment=lambdatest -DtargetURL="},{"type":"link","url":"http://test-www.paramountplus.com","text":"test-www.paramountplus.com","unsafe":true},{"type":"text","text":" -Dapp="},{"type":"link","url":"lt://APP10160361191691076976834962"},{"type":"text","text":" -DbundleId="},{"type":"link","url":"http://com.cbsvideodebug.app","text":"com.cbsvideodebug.app"},{"type":"text","text":" -DappPackage="},{"type":"link","url":"http://com.cbs.app","text":"com.cbs.app"},{"type":"text","text":" -DlambdaKey=sureshkumar.palus:AdIBfntJTMxJhLRB18p7sgTEFMxAphu2X2cVmsQiu9KlESMhXq -Dbuild=P+_Android_phone_test-www -Dproject=\"P+ Android Mobile\" -DqueueTimeout=300` (Source: "},{"type":"link","url":"https://paramount.atlassian.net/wiki/spaces/PLQA/pages/47721257"},{"type":"text","text":")\\n\\n### Automated Test Execution via Jenkins (Smoke Test Suite)\\n\\nA common method for running automated Android tests, particularly smoke tests, is through Jenkins.\\n\\n**About the Smoke Test Suite:**\\n*   It consists of 30 test cases to verify basic build functionality.\\n*   It runs nightly and can be executed on demand.\\n*   Tests can be run on Android Phones and Tablets. (Source: "},{"type":"link","url":"https://paramount.atlassian.net/wiki/spaces/PLQA/pages/47726491"},{"type":"text","text":")\\n\\n**Pre-requisites:**\\n1. Access to the Jenkins BVC Server: ["},{"type":"link","url":"https://build.viacom.com/"},{"type":"text","text":"]("},{"type":"link","url":"https://build.viacom.com/"},{"type":"text","text":")\\n2. Access to the Jenkins job for Android: ["},{"type":"link","url":"https://stage.build.viacom.com/job/mqe/job/gqe_pplus_android_domestic/"},{"type":"text","text":"]("},{"type":"link","url":"https://stage.build.viacom.com/job/mqe/job/gqe_pplus_android_domestic/"},{"type":"text","text":") (Source: "},{"type":"link","url":"https://paramount.atlassian.net/wiki/spaces/PLQA/pages/47726491"},{"type":"text","text":")\\n\\n**Steps to Execute Tests in Jenkins (Ad-hoc):**\\n1. Navigate to the Jenkins job URL: ["},{"type":"link","url":"https://stage.build.viacom.com/job/mqe/job/gqe_pplus_android_domestic/"},{"type":"text","text":"]("},{"type":"link","url":"https://stage.build.viacom.com/job/mqe/job/gqe_pplus_android_domestic/"},{"type":"text","text":").\\n2. Select \"Build with Parameters\" from the left menu.\\n3. Configure the desired **Build Parameters**, including:\\n    *   "},{"type":"text","text":"BRANCH","style":{"code":true}},{"type":"text","text":" (e.g., master)\\n    *   "},{"type":"text","text":"LOCALE","style":{"code":true}},{"type":"text","text":" (e.g., en-us)\\n    *   "},{"type":"text","text":"ENVIRONMENT","style":{"code":true}},{"type":"text","text":" (e.g., test)\\n    *   "},{"type":"text","text":"PLATFORM","style":{"code":true}},{"type":"text","text":" (e.g., ANDROID)\\n    *   "},{"type":"text","text":"MOBILE_DEVICE_CATEGORY","style":{"code":true}},{"type":"text","text":" (PHONE or TABLET)\\n    *   "},{"type":"text","text":"APP_NAME","style":{"code":true}},{"type":"text","text":" (e.g., PPLUS_US)\\n    *   "},{"type":"text","text":"APP_BUILD_TYPE","style":{"code":true}},{"type":"text","text":" (e.g., DEBUG)\\n    *   "},{"type":"text","text":"APP_PACKAGE_URL","style":{"code":true}},{"type":"text","text":" (blank for latest from AppCenter, or specific Synergy build URL)\\n    *   "},{"type":"text","text":"INCLUDE_TEST_GROUPS","style":{"code":true}},{"type":"text","text":" (e.g., Smoke)\\n    *   "},{"type":"text","text":"EXCLUDE_TEST_GROUPS","style":{"code":true}},{"type":"text","text":" (e.g., Broken, BrokenAndroidMobileUS)\\n    *   "},{"type":"text","text":"EMAIL_REPORT_RECIPIENT","style":{"code":true}},{"type":"text","text":" (comma-separated email list)\\n    *   Other parameters like "},{"type":"text","text":"USE_GEOVPN","style":{"code":true}},{"type":"text","text":", "},{"type":"text","text":"TESTRAIL_MILESTONE_ID","style":{"code":true}},{"type":"text","text":", "},{"type":"text","text":"TESTRAIL_TESTRUN_ID","style":{"code":true}},{"type":"text","text":", "},{"type":"text","text":"ATTACH_SESSION_DETAILS","style":{"code":true}},{"type":"text","text":", "},{"type":"text","text":"RERUN_ON_FAILURE","style":{"code":true}},{"type":"text","text":", "},{"type":"text","text":"RERUN_ON_FAILURE_COUNT","style":{"code":true}},{"type":"text","text":".\\n4. Press the \"Build\" button.\\n5. Monitor the build progress and status."}]}]}]}}
2025-08-21 10:42:15,723 - slack_sdk.web.base_client - DEBUG - [base_client.py:255] - Sending a request - url: https://slack.com/api/chat.postMessage, query_params: {}, body_params: {}, files: {}, json_body: {'channel': 'D09A0LFHK8R', 'text': '_(part 3/3)_\n\n(Source: https://paramount.atlassian.net/wiki/spaces/PLQA/pages/47726491)\\n\\n**Viewing Test Results:**\\n*   Each execution generates an **Allure report**.\\n*   The report is emailed to specified recipients (from `noreply@mtvi.com`).\\n*   The email includes a summary and a link to the Jenkins run.\\n*   The `build.log` file also contains a link to the Allure report (search for "synergyreport").\\n*   You can view the Allure report directly from within Jenkins by selecting the desired run from the Build History and then clicking "Console Output" to find the link. (Source: https://paramount.atlassian.net/wiki/spaces/PLQA/pages/47726491)\\n\\n### Android TV Specific Setup and Test Execution\\n\\n**Setup for Local Execution:**\\n1. Ensure your work laptop and Android TV device are on the same network.\\n2. Enable **developer mode** on your Android TV: Go to Device Preferences Settings > About SHIELD, scroll to the bottom, and tap "Build Number" several times (7-9 taps).\\n3. Enable **USB debugging** and **Network debugging**.\\n4. Configure **proxy settings**: Go to Network and Internet, select your current network, then proxy settings > manual.\\n    *   Enter the IP seen in Charles proxy for the proxy host name.\\n    *   Use proxy port `8888` for local execution or `9999` for synergy execution.\\n5. Proceed and save the settings. (Source: https://paramount.atlassian.net/wiki/spaces/PLQA/pages/47730307)\\n\\n**Test Execution for Android TV:**\\n1. Download the latest version of the Synergy server and run the `.jar` file (Websocket).\\n2. Update the desired capabilities in the `.config` file (located under `mqe-hob-ctv-tests` directory). Key parameters to configure include:\\n    *   `ServerURL`\\n    *   `AppName` (e.g., PPLUS_US, PPLUS_INTL)\\n    *   `Platform` (ANDROID_TV)\\n    *   `Locale` (e.g., en-us)\\n    *   `Environment` (e.g., prod, stage, test)\\n    *   `AppPackageUrl`\\n    *   `DebugDeviceIP` (empty for synergy farm, or local network IP for local run)\\n    *   `JenkinsCredential` (username:password)\\n    *   `AppBuildType` (e.g., DEBUG)\\n    *   `DebugProxyPort` (e.g., 9999) (Source: https://paramount.atlassian.net/wiki/spaces/PLQA/pages/47730307)\', \'requires_approval\': False, \'execution_id\': 1551}', 'thread_ts': '1755798116.274489', 'team_id': 'T010QS7UQNA'}, headers: {'Content-Type': 'application/json;charset=utf-8', 'Authorization': '(redacted)', 'User-Agent': 'Python/3.12.0 slackclient/3.34.0 Darwin/23.4.0'}
2025-08-21 10:42:15,983 - slack_bolt.App - DEBUG - [client.py:235] - on_message invoked: (message: {"envelope_id":"47faec66-ce7d-4585-92f8-62755445193d","payload":{"token":"yq71khZBCyJF1Ri2hG5aNqr5","team_id":"T010QS7UQNA","enterprise_id":"ERV4P7NAD","context_team_id":null,"context_enterprise_id":"ERV4P7NAD","api_app_id":"A099LACAB2R","event":{"user":"U099R6WTZ9S","type":"message","ts":"1755798135.250439","bot_id":"B099R6WTRU4","app_id":"A099LACAB2R","text":"*Your Query:* How to run test on Android\n\n*Answer:*\n{'message_text': 'Running tests on Android can involve several methods, from basic development testing to automated suite execution. Here\\'s a breakdown based on the provided documents:\\n\\n### General Android Testing Fundamentals\\n\\nFor a foundational understanding of testing Android applications, you can refer to the official Android developer documentation:\\n*   **Fundamentals of testing Android apps:** [<https:\/\/developer.android.com\/training\/testing\/fundamentals>](<https:\/\/developer.android.com\/training\/testing\/fundamentals>) (Source: <https:\/\/paramount.atlassian.net\/wiki\/spaces\/PLQA\/pages\/47722061>)\\n*   **Running Apps on the Emulator:** [<https:\/\/developer.android.com\/studio\/run\/emulator>](<https:\/\/developer.android.com\/studio\/run\/emulator>) (Source: <https:\/\/paramount.atlassian.net\/wiki\/spaces\/PLQA\/pages\/47722061>)\\n\\nYou may also find these resources helpful:\\n*   **Basics of Android Studio:** [<https:\/\/developer.android.com\/studio\/intro>](<https:\/\/developer.android.com\/studio\/intro>) (Source: <https:\/\/paramount.atlassian.net\/wiki\/spaces\/PLQA\/pages\/47722061>)\\n*   **Learn Kotlin:** [<https:\/\/developer.android.com\/kotlin\/learn>](<https:\/\/developer.android.com\/kotlin\/learn>) (Source: <https:\/\/paramount.atlassian.net\/wiki\/spaces\/PLQA\/pages\/47722061>)\\n*   **Appium locator strategy:** [<https:\/\/medium.com\/@WasiqB\/locators-in-appium-with-example-f8762eed83d7>](<https:\/\/medium.com\/@WasiqB\/locators-in-appium-with-example-f8762eed83d7>) (Source: <https:\/\/paramount.atlassian.net\/wiki\/spaces\/PLQA\/pages\/47722061>)\\n\\n### Running Tests on a Local Simulator\/Emulator\\n\\nWhen running tests on a local Android Emulator, ensure your Run Configuration has the `$ANDROID_HOME` environment variable set and included in the path (Source: <https:\/\/paramount.atlassian.net\/wiki\/spaces\/PLQA\/pages\/47713566>).\\n\\nIf you\\'re using a framework like TestNG with Appium, a `SampleTest.java` class might be used. This class would handle instantiating the mobile driver, starting\/stopping the Appium server, and managing the Android Emulator\/iOS Simulator (Source: <https:\/\/paramount.atlassian.net\/wiki\/spaces\/PLQA\/pages\/47711460>).\n\n_(message continued in thread...)_","team":"T010QS7UQNA","bot_profile":{"id":"B099R6WTRU4","deleted":false,"name":"AutoBot","updated":1754677948,"app_id":"A099LACAB2R","user_id":"U099R6WTZ9S","icons":{"image_36":"https:\/\/a.slack-edge.com\/80588\/img\/plugins\/app\/bot_36.png","image_48":"https:\/\/a.slack-edge.com\/80588\/img\/plugins\/app\/bot_48.png","image_72":"https:\/\/a.slack-edge.com\/80588\/img\/plugins\/app\/service_72.png"},"team_id":"T010QS7UQNA"},"thread_ts":"1755798116.274489","parent_user_id":"U01RMTFMALF","blocks":[{"type":"rich_text","block_id":"BcA","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Your Query:","style":{"bold":true}},{"type":"text","text":" How to run test on Android\n\n"},{"type":"text","text":"Answer:","style":{"bold":true}},{"type":"text","text":"\n{'message_text': 'Running tests on Android can involve several methods, from basic development testing to automated suite execution. Here\\'s a breakdown based on the provided documents:\\n\\n### General Android Testing Fundamentals\\n\\nFor a foundational understanding of testing Android applications, you can refer to the official Android developer documentation:\\n*   **Fundamentals of testing Android apps:** ["},{"type":"link","url":"https:\/\/developer.android.com\/training\/testing\/fundamentals"},{"type":"text","text":"]("},{"type":"link","url":"https:\/\/developer.android.com\/training\/testing\/fundamentals"},{"type":"text","text":") (Source: "},{"type":"link","url":"https:\/\/paramount.atlassian.net\/wiki\/spaces\/PLQA\/pages\/47722061"},{"type":"text","text":")\\n*   **Running Apps on the Emulator:** ["},{"type":"link","url":"https:\/\/developer.android.com\/studio\/run\/emulator"},{"type":"text","text":"]("},{"type":"link","url":"https:\/\/developer.android.com\/studio\/run\/emulator"},{"type":"text","text":") (Source: "},{"type":"link","url":"https:\/\/paramount.atlassian.net\/wiki\/spaces\/PLQA\/pages\/47722061"},{"type":"text","text":")\\n\\nYou may also find these resources helpful:\\n*   **Basics of Android Studio:** ["},{"type":"link","url":"https:\/\/developer.android.com\/studio\/intro"},{"type":"text","text":"]("},{"type":"link","url":"https:\/\/developer.android.com\/studio\/intro"},{"type":"text","text":") (Source: "},{"type":"link","url":"https:\/\/paramount.atlassian.net\/wiki\/spaces\/PLQA\/pages\/47722061"},{"type":"text","text":")\\n*   **Learn Kotlin:** ["},{"type":"link","url":"https:\/\/developer.android.com\/kotlin\/learn"},{"type":"text","text":"]("},{"type":"link","url":"https:\/\/developer.android.com\/kotlin\/learn"},{"type":"text","text":") (Source: "},{"type":"link","url":"https:\/\/paramount.atlassian.net\/wiki\/spaces\/PLQA\/pages\/47722061"},{"type":"text","text":")\\n*   **Appium locator strategy:** ["},{"type":"link","url":"https:\/\/medium.com\/@WasiqB\/locators-in-appium-with-example-f8762eed83d7"},{"type":"text","text":"]("},{"type":"link","url":"https:\/\/medium.com\/@WasiqB\/locators-in-appium-with-example-f8762eed83d7"},{"type":"text","text":") (Source: "},{"type":"link","url":"https:\/\/paramount.atlassian.net\/wiki\/spaces\/PLQA\/pages\/47722061"},{"type":"text","text":")\\n\\n### Running Tests on a Local Simulator\/Emulator\\n\\nWhen running tests on a local Android Emulator, ensure your Run Configuration has the "},{"type":"text","text":"$ANDROID_HOME","style":{"code":true}},{"type":"text","text":" environment variable set and included in the path (Source: "},{"type":"link","url":"https:\/\/paramount.atlassian.net\/wiki\/spaces\/PLQA\/pages\/47713566"},{"type":"text","text":").\\n\\nIf you\\'re using a framework like TestNG with Appium, a "},{"type":"text","text":"SampleTest.java","style":{"code":true}},{"type":"text","text":" class might be used. This class would handle instantiating the mobile driver, starting\/stopping the Appium server, and managing the Android Emulator\/iOS Simulator (Source: "},{"type":"link","url":"https:\/\/paramount.atlassian.net\/wiki\/spaces\/PLQA\/pages\/47711460"},{"type":"text","text":").\n\n"},{"type":"text","text":"(message continued in thread...)","style":{"italic":true}}]}]}],"channel":"D09A0LFHK8R","event_ts":"1755798135.250439","channel_type":"im"},"type":"event_callback","event_id":"Ev09BV8K957T","event_time":1755798135,"authorizations":[{"enterprise_id":"ERV4P7NAD","team_id":"T010QS7UQNA","user_id":"U099R6WTZ9S","is_bot":true,"is_enterprise_install":false}],"is_ext_shared_channel":false,"event_context":"4-eyJldCI6Im1lc3NhZ2UiLCJ0aWQiOiJUMDEwUVM3VVFOQSIsImFpZCI6IkEwOTlMQUNBQjJSIiwiY2lkIjoiRDA5QTBMRkhLOFIifQ"},"type":"events_api","accepts_response_payload":false,"retry_attempt":0,"retry_reason":""})
2025-08-21 10:42:15,983 - slack_bolt.App - DEBUG - [client.py:99] - A new message enqueued (current queue size: 1)
2025-08-21 10:42:15,983 - slack_bolt.App - DEBUG - [client.py:105] - A message dequeued (current queue size: 0)
2025-08-21 10:42:15,983 - slack_bolt.App - DEBUG - [client.py:125] - Message processing started (type: events_api, envelope_id: 47faec66-ce7d-4585-92f8-62755445193d)
2025-08-21 10:42:15,984 - slack_bolt.App - DEBUG - [app.py:476] - Applying slack_bolt.middleware.ssl_check.ssl_check.SslCheck
2025-08-21 10:42:15,984 - slack_bolt.App - DEBUG - [app.py:476] - Applying slack_bolt.middleware.request_verification.request_verification.RequestVerification
2025-08-21 10:42:15,984 - slack_bolt.App - DEBUG - [app.py:476] - Applying slack_bolt.middleware.authorization.single_team_authorization.SingleTeamAuthorization
2025-08-21 10:42:15,984 - slack_bolt.App - DEBUG - [app.py:476] - Applying slack_bolt.middleware.ignoring_self_events.ignoring_self_events.IgnoringSelfEvents
2025-08-21 10:42:15,984 - slack_bolt.IgnoringSelfEvents - DEBUG - [ignoring_self_events.py:60] - Skipped self event: {'user': 'U099R6WTZ9S', 'type': 'message', 'ts': '1755798135.250439', 'bot_id': 'B099R6WTRU4', 'app_id': 'A099LACAB2R', 'text': "*Your Query:* How to run test on Android\n\n*Answer:*\n{'message_text': 'Running tests on Android can involve several methods, from basic development testing to automated suite execution. Here\\'s a breakdown based on the provided documents:\\n\\n### General Android Testing Fundamentals\\n\\nFor a foundational understanding of testing Android applications, you can refer to the official Android developer documentation:\\n*   **Fundamentals of testing Android apps:** [<https://developer.android.com/training/testing/fundamentals>](<https://developer.android.com/training/testing/fundamentals>) (Source: <https://paramount.atlassian.net/wiki/spaces/PLQA/pages/47722061>)\\n*   **Running Apps on the Emulator:** [<https://developer.android.com/studio/run/emulator>](<https://developer.android.com/studio/run/emulator>) (Source: <https://paramount.atlassian.net/wiki/spaces/PLQA/pages/47722061>)\\n\\nYou may also find these resources helpful:\\n*   **Basics of Android Studio:** [<https://developer.android.com/studio/intro>](<https://developer.android.com/studio/intro>) (Source: <https://paramount.atlassian.net/wiki/spaces/PLQA/pages/47722061>)\\n*   **Learn Kotlin:** [<https://developer.android.com/kotlin/learn>](<https://developer.android.com/kotlin/learn>) (Source: <https://paramount.atlassian.net/wiki/spaces/PLQA/pages/47722061>)\\n*   **Appium locator strategy:** [<https://medium.com/@WasiqB/locators-in-appium-with-example-f8762eed83d7>](<https://medium.com/@WasiqB/locators-in-appium-with-example-f8762eed83d7>) (Source: <https://paramount.atlassian.net/wiki/spaces/PLQA/pages/47722061>)\\n\\n### Running Tests on a Local Simulator/Emulator\\n\\nWhen running tests on a local Android Emulator, ensure your Run Configuration has the `$ANDROID_HOME` environment variable set and included in the path (Source: <https://paramount.atlassian.net/wiki/spaces/PLQA/pages/47713566>).\\n\\nIf you\\'re using a framework like TestNG with Appium, a `SampleTest.java` class might be used. This class would handle instantiating the mobile driver, starting/stopping the Appium server, and managing the Android Emulator/iOS Simulator (Source: <https://paramount.atlassian.net/wiki/spaces/PLQA/pages/47711460>).\n\n_(message continued in thread...)_", 'team': 'T010QS7UQNA', 'bot_profile': {'id': 'B099R6WTRU4', 'deleted': False, 'name': 'AutoBot', 'updated': 1754677948, 'app_id': 'A099LACAB2R', 'user_id': 'U099R6WTZ9S', 'icons': {'image_36': 'https://a.slack-edge.com/80588/img/plugins/app/bot_36.png', 'image_48': 'https://a.slack-edge.com/80588/img/plugins/app/bot_48.png', 'image_72': 'https://a.slack-edge.com/80588/img/plugins/app/service_72.png'}, 'team_id': 'T010QS7UQNA'}, 'thread_ts': '1755798116.274489', 'parent_user_id': 'U01RMTFMALF', 'blocks': [{'type': 'rich_text', 'block_id': 'BcA', 'elements': [{'type': 'rich_text_section', 'elements': [{'type': 'text', 'text': 'Your Query:', 'style': {'bold': True}}, {'type': 'text', 'text': ' How to run test on Android\n\n'}, {'type': 'text', 'text': 'Answer:', 'style': {'bold': True}}, {'type': 'text', 'text': "\n{'message_text': 'Running tests on Android can involve several methods, from basic development testing to automated suite execution. Here\\'s a breakdown based on the provided documents:\\n\\n### General Android Testing Fundamentals\\n\\nFor a foundational understanding of testing Android applications, you can refer to the official Android developer documentation:\\n*   **Fundamentals of testing Android apps:** ["}, {'type': 'link', 'url': 'https://developer.android.com/training/testing/fundamentals'}, {'type': 'text', 'text': ']('}, {'type': 'link', 'url': 'https://developer.android.com/training/testing/fundamentals'}, {'type': 'text', 'text': ') (Source: '}, {'type': 'link', 'url': 'https://paramount.atlassian.net/wiki/spaces/PLQA/pages/47722061'}, {'type': 'text', 'text': ')\\n*   **Running Apps on the Emulator:** ['}, {'type': 'link', 'url': 'https://developer.android.com/studio/run/emulator'}, {'type': 'text', 'text': ']('}, {'type': 'link', 'url': 'https://developer.android.com/studio/run/emulator'}, {'type': 'text', 'text': ') (Source: '}, {'type': 'link', 'url': 'https://paramount.atlassian.net/wiki/spaces/PLQA/pages/47722061'}, {'type': 'text', 'text': ')\\n\\nYou may also find these resources helpful:\\n*   **Basics of Android Studio:** ['}, {'type': 'link', 'url': 'https://developer.android.com/studio/intro'}, {'type': 'text', 'text': ']('}, {'type': 'link', 'url': 'https://developer.android.com/studio/intro'}, {'type': 'text', 'text': ') (Source: '}, {'type': 'link', 'url': 'https://paramount.atlassian.net/wiki/spaces/PLQA/pages/47722061'}, {'type': 'text', 'text': ')\\n*   **Learn Kotlin:** ['}, {'type': 'link', 'url': 'https://developer.android.com/kotlin/learn'}, {'type': 'text', 'text': ']('}, {'type': 'link', 'url': 'https://developer.android.com/kotlin/learn'}, {'type': 'text', 'text': ') (Source: '}, {'type': 'link', 'url': 'https://paramount.atlassian.net/wiki/spaces/PLQA/pages/47722061'}, {'type': 'text', 'text': ')\\n*   **Appium locator strategy:** ['}, {'type': 'link', 'url': 'https://medium.com/@WasiqB/locators-in-appium-with-example-f8762eed83d7'}, {'type': 'text', 'text': ']('}, {'type': 'link', 'url': 'https://medium.com/@WasiqB/locators-in-appium-with-example-f8762eed83d7'}, {'type': 'text', 'text': ') (Source: '}, {'type': 'link', 'url': 'https://paramount.atlassian.net/wiki/spaces/PLQA/pages/47722061'}, {'type': 'text', 'text': ')\\n\\n### Running Tests on a Local Simulator/Emulator\\n\\nWhen running tests on a local Android Emulator, ensure your Run Configuration has the '}, {'type': 'text', 'text': '$ANDROID_HOME', 'style': {'code': True}}, {'type': 'text', 'text': ' environment variable set and included in the path (Source: '}, {'type': 'link', 'url': 'https://paramount.atlassian.net/wiki/spaces/PLQA/pages/47713566'}, {'type': 'text', 'text': ").\\n\\nIf you\\'re using a framework like TestNG with Appium, a "}, {'type': 'text', 'text': 'SampleTest.java', 'style': {'code': True}}, {'type': 'text', 'text': ' class might be used. This class would handle instantiating the mobile driver, starting/stopping the Appium server, and managing the Android Emulator/iOS Simulator (Source: '}, {'type': 'link', 'url': 'https://paramount.atlassian.net/wiki/spaces/PLQA/pages/47711460'}, {'type': 'text', 'text': ').\n\n'}, {'type': 'text', 'text': '(message continued in thread...)', 'style': {'italic': True}}]}]}], 'channel': 'D09A0LFHK8R', 'event_ts': '1755798135.250439', 'channel_type': 'im'}
2025-08-21 10:42:15,984 - slack_bolt.App - DEBUG - [client.py:200] - Sending a message (session id: 9caa291c-f50f-4808-a579-72eed6c2a372, message: {"envelope_id": "47faec66-ce7d-4585-92f8-62755445193d"})
2025-08-21 10:42:15,985 - slack_bolt.App - DEBUG - [internals.py:41] - Response time: 0 milliseconds
2025-08-21 10:42:15,985 - slack_bolt.App - DEBUG - [client.py:150] - Message processing completed (type: events_api, envelope_id: 47faec66-ce7d-4585-92f8-62755445193d)
2025-08-21 10:42:16,148 - slack_sdk.web.base_client - DEBUG - [base_client.py:546] - Received the following response - status: 200, headers: {'date': 'Thu, 21 Aug 2025 17:42:16 GMT', 'server': 'Apache', 'vary': 'Accept-Encoding', 'x-slack-req-id': 'd4d444c29f96d383edb0b21ead64cc87', 'x-content-type-options': 'nosniff', 'x-xss-protection': '0', 'pragma': 'no-cache', 'cache-control': 'private, no-cache, no-store, must-revalidate', 'expires': 'Sat, 26 Jul 1997 05:00:00 GMT', 'content-type': 'application/json; charset=utf-8', 'x-accepted-oauth-scopes': 'chat:write', 'x-oauth-scopes': 'app_mentions:read,channels:history,chat:write,im:history,im:read,im:write,users:read,reactions:write', 'access-control-expose-headers': 'x-slack-req-id, retry-after', 'access-control-allow-headers': 'slack-route, x-slack-version-ts, x-b3-traceid, x-b3-spanid, x-b3-parentspanid, x-b3-sampled, x-b3-flags', 'strict-transport-security': 'max-age=31536000; includeSubDomains; preload', 'referrer-policy': 'no-referrer', 'x-slack-unique-id': 'aKdaeBLOVecE2xT6aS02ogAAADk', 'x-slack-backend': 'r', 'access-control-allow-origin': '*', 'content-length': '6900', 'via': '1.1 slack-prod.tinyspeck.com, envoy-www-iad-itnrqutb,envoy-edge-pdx-kbxwonem', 'x-envoy-attempt-count': '1', 'x-envoy-upstream-service-time': '199', 'x-backend': 'main_normal main_canary_with_overflow main_control_with_overflow', 'x-server': 'slack-www-hhvm-main-iad-nxsa', 'x-slack-shared-secret-outcome': 'no-match', 'x-edge-backend': 'envoy-www', 'timing-allow-origin': '*', 'x-slack-edge-shared-secret-outcome': 'no-match', 'connection': 'close'}, body: {"ok":true,"channel":"D09A0LFHK8R","ts":"1755798136.100519","message":{"user":"U099R6WTZ9S","type":"message","ts":"1755798136.100519","bot_id":"B099R6WTRU4","app_id":"A099LACAB2R","text":"_(part 3/3)_\n\n(Source: <https://paramount.atlassian.net/wiki/spaces/PLQA/pages/47726491>)\\n\\n**Viewing Test Results:**\\n*   Each execution generates an **Allure report**.\\n*   The report is emailed to specified recipients (from `<mailto:noreply@mtvi.com|noreply@mtvi.com>`).\\n*   The email includes a summary and a link to the Jenkins run.\\n*   The `build.log` file also contains a link to the Allure report (search for \"synergyreport\").\\n*   You can view the Allure report directly from within Jenkins by selecting the desired run from the Build History and then clicking \"Console Output\" to find the link. (Source: <https://paramount.atlassian.net/wiki/spaces/PLQA/pages/47726491>)\\n\\n### Android TV Specific Setup and Test Execution\\n\\n**Setup for Local Execution:**\\n1. Ensure your work laptop and Android TV device are on the same network.\\n2. Enable **developer mode** on your Android TV: Go to Device Preferences Settings &gt; About SHIELD, scroll to the bottom, and tap \"Build Number\" several times (7-9 taps).\\n3. Enable **USB debugging** and **Network debugging**.\\n4. Configure **proxy settings**: Go to Network and Internet, select your current network, then proxy settings &gt; manual.\\n    *   Enter the IP seen in Charles proxy for the proxy host name.\\n    *   Use proxy port `8888` for local execution or `9999` for synergy execution.\\n5. Proceed and save the settings. (Source: <https://paramount.atlassian.net/wiki/spaces/PLQA/pages/47730307>)\\n\\n**Test Execution for Android TV:**\\n1. Download the latest version of the Synergy server and run the `.jar` file (Websocket).\\n2. Update the desired capabilities in the `.config` file (located under `mqe-hob-ctv-tests` directory). Key parameters to configure include:\\n    *   `ServerURL`\\n    *   `AppName` (e.g., PPLUS_US, PPLUS_INTL)\\n    *   `Platform` (ANDROID_TV)\\n    *   `Locale` (e.g., en-us)\\n    *   `Environment` (e.g., prod, stage, test)\\n    *   `AppPackageUrl`\\n    *   `DebugDeviceIP` (empty for synergy farm, or local network IP for local run)\\n    *   `JenkinsCredential` (username:password)\\n    *   `AppBuildType` (e.g., DEBUG)\\n    *   `DebugProxyPort` (e.g., 9999) (Source: <https://paramount.atlassian.net/wiki/spaces/PLQA/pages/47730307>)', 'requires_approval': False, 'execution_id': 1551}","team":"T010QS7UQNA","bot_profile":{"id":"B099R6WTRU4","app_id":"A099LACAB2R","user_id":"U099R6WTZ9S","name":"AutoBot","icons":{"image_36":"https://a.slack-edge.com/80588/img/plugins/app/bot_36.png","image_48":"https://a.slack-edge.com/80588/img/plugins/app/bot_48.png","image_72":"https://a.slack-edge.com/80588/img/plugins/app/service_72.png"},"deleted":false,"updated":1754677948,"team_id":"T010QS7UQNA"},"thread_ts":"1755798116.274489","parent_user_id":"U01RMTFMALF","blocks":[{"type":"rich_text","block_id":"aXv","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"(part 3/3)","style":{"italic":true}},{"type":"text","text":"\n\n(Source: "},{"type":"link","url":"https://paramount.atlassian.net/wiki/spaces/PLQA/pages/47726491"},{"type":"text","text":")\\n\\n**Viewing Test Results:**\\n*   Each execution generates an **Allure report**.\\n*   The report is emailed to specified recipients (from "},{"type":"link","url":"mailto:noreply@mtvi.com","text":"noreply@mtvi.com","style":{"code":true}},{"type":"text","text":").\\n*   The email includes a summary and a link to the Jenkins run.\\n*   The "},{"type":"text","text":"build.log","style":{"code":true}},{"type":"text","text":" file also contains a link to the Allure report (search for \"synergyreport\").\\n*   You can view the Allure report directly from within Jenkins by selecting the desired run from the Build History and then clicking \"Console Output\" to find the link. (Source: "},{"type":"link","url":"https://paramount.atlassian.net/wiki/spaces/PLQA/pages/47726491"},{"type":"text","text":")\\n\\n### Android TV Specific Setup and Test Execution\\n\\n**Setup for Local Execution:**\\n1. Ensure your work laptop and Android TV device are on the same network.\\n2. Enable **developer mode** on your Android TV: Go to Device Preferences Settings > About SHIELD, scroll to the bottom, and tap \"Build Number\" several times (7-9 taps).\\n3. Enable **USB debugging** and **Network debugging**.\\n4. Configure **proxy settings**: Go to Network and Internet, select your current network, then proxy settings > manual.\\n    *   Enter the IP seen in Charles proxy for the proxy host name.\\n    *   Use proxy port "},{"type":"text","text":"8888","style":{"code":true}},{"type":"text","text":" for local execution or "},{"type":"text","text":"9999","style":{"code":true}},{"type":"text","text":" for synergy execution.\\n5. Proceed and save the settings. (Source: "},{"type":"link","url":"https://paramount.atlassian.net/wiki/spaces/PLQA/pages/47730307"},{"type":"text","text":")\\n\\n**Test Execution for Android TV:**\\n1. Download the latest version of the Synergy server and run the "},{"type":"text","text":".jar","style":{"code":true}},{"type":"text","text":" file (Websocket).\\n2. Update the desired capabilities in the "},{"type":"text","text":".config","style":{"code":true}},{"type":"text","text":" file (located under "},{"type":"text","text":"mqe-hob-ctv-tests","style":{"code":true}},{"type":"text","text":" directory). Key parameters to configure include:\\n    *   "},{"type":"text","text":"ServerURL","style":{"code":true}},{"type":"text","text":"\\n    *   "},{"type":"text","text":"AppName","style":{"code":true}},{"type":"text","text":" (e.g., PPLUS_US, PPLUS_INTL)\\n    *   "},{"type":"text","text":"Platform","style":{"code":true}},{"type":"text","text":" (ANDROID_TV)\\n    *   "},{"type":"text","text":"Locale","style":{"code":true}},{"type":"text","text":" (e.g., en-us)\\n    *   "},{"type":"text","text":"Environment","style":{"code":true}},{"type":"text","text":" (e.g., prod, stage, test)\\n    *   "},{"type":"text","text":"AppPackageUrl","style":{"code":true}},{"type":"text","text":"\\n    *   "},{"type":"text","text":"DebugDeviceIP","style":{"code":true}},{"type":"text","text":" (empty for synergy farm, or local network IP for local run)\\n    *   "},{"type":"text","text":"JenkinsCredential","style":{"code":true}},{"type":"text","text":" (username:password)\\n    *   "},{"type":"text","text":"AppBuildType","style":{"code":true}},{"type":"text","text":" (e.g., DEBUG)\\n    *   "},{"type":"text","text":"DebugProxyPort","style":{"code":true}},{"type":"text","text":" (e.g., 9999) (Source: "},{"type":"link","url":"https://paramount.atlassian.net/wiki/spaces/PLQA/pages/47730307"},{"type":"text","text":")', 'requires_approval': False, 'execution_id': 1551}"}]}]}]}}
2025-08-21 10:42:16,149 - __main__ - DEBUG - [main.py:406] - Cleaning up DM thread tracking...
2025-08-21 10:42:16,149 - utils - DEBUG - [utils.py:67] - Managing thread: D09A0LFHK8R:1755798116.274489, action: remove, user: U01RMTFMALF
2025-08-21 10:42:16,149 - utils - INFO - [utils.py:100] - Removed thread D09A0LFHK8R:1755798116.274489 from active tracking (remaining: 0)
2025-08-21 10:42:16,593 - slack_bolt.App - DEBUG - [client.py:235] - on_message invoked: (message: {"envelope_id":"73315160-f94e-4b65-8cad-94d8414e6de0","payload":{"token":"yq71khZBCyJF1Ri2hG5aNqr5","team_id":"T010QS7UQNA","enterprise_id":"ERV4P7NAD","context_team_id":null,"context_enterprise_id":"ERV4P7NAD","api_app_id":"A099LACAB2R","event":{"user":"U099R6WTZ9S","type":"message","ts":"1755798136.100519","bot_id":"B099R6WTRU4","app_id":"A099LACAB2R","text":"_(part 3\/3)_\n\n(Source: <https:\/\/paramount.atlassian.net\/wiki\/spaces\/PLQA\/pages\/47726491>)\\n\\n**Viewing Test Results:**\\n*   Each execution generates an **Allure report**.\\n*   The report is emailed to specified recipients (from `<mailto:noreply@mtvi.com|noreply@mtvi.com>`).\\n*   The email includes a summary and a link to the Jenkins run.\\n*   The `build.log` file also contains a link to the Allure report (search for \"synergyreport\").\\n*   You can view the Allure report directly from within Jenkins by selecting the desired run from the Build History and then clicking \"Console Output\" to find the link. (Source: <https:\/\/paramount.atlassian.net\/wiki\/spaces\/PLQA\/pages\/47726491>)\\n\\n### Android TV Specific Setup and Test Execution\\n\\n**Setup for Local Execution:**\\n1. Ensure your work laptop and Android TV device are on the same network.\\n2. Enable **developer mode** on your Android TV: Go to Device Preferences Settings &gt; About SHIELD, scroll to the bottom, and tap \"Build Number\" several times (7-9 taps).\\n3. Enable **USB debugging** and **Network debugging**.\\n4. Configure **proxy settings**: Go to Network and Internet, select your current network, then proxy settings &gt; manual.\\n    *   Enter the IP seen in Charles proxy for the proxy host name.\\n    *   Use proxy port `8888` for local execution or `9999` for synergy execution.\\n5. Proceed and save the settings. (Source: <https:\/\/paramount.atlassian.net\/wiki\/spaces\/PLQA\/pages\/47730307>)\\n\\n**Test Execution for Android TV:**\\n1. Download the latest version of the Synergy server and run the `.jar` file (Websocket).\\n2. Update the desired capabilities in the `.config` file (located under `mqe-hob-ctv-tests` directory). Key parameters to configure include:\\n    *   `ServerURL`\\n    *   `AppName` (e.g., PPLUS_US, PPLUS_INTL)\\n    *   `Platform` (ANDROID_TV)\\n    *   `Locale` (e.g., en-us)\\n    *   `Environment` (e.g., prod, stage, test)\\n    *   `AppPackageUrl`\\n    *   `DebugDeviceIP` (empty for synergy farm, or local network IP for local run)\\n    *   `JenkinsCredential` (username:password)\\n    *   `AppBuildType` (e.g., DEBUG)\\n    *   `DebugProxyPort` (e.g., 9999) (Source: <https:\/\/paramount.atlassian.net\/wiki\/spaces\/PLQA\/pages\/47730307>)', 'requires_approval': False, 'execution_id': 1551}","team":"T010QS7UQNA","bot_profile":{"id":"B099R6WTRU4","deleted":false,"name":"AutoBot","updated":1754677948,"app_id":"A099LACAB2R","user_id":"U099R6WTZ9S","icons":{"image_36":"https:\/\/a.slack-edge.com\/80588\/img\/plugins\/app\/bot_36.png","image_48":"https:\/\/a.slack-edge.com\/80588\/img\/plugins\/app\/bot_48.png","image_72":"https:\/\/a.slack-edge.com\/80588\/img\/plugins\/app\/service_72.png"},"team_id":"T010QS7UQNA"},"thread_ts":"1755798116.274489","parent_user_id":"U01RMTFMALF","blocks":[{"type":"rich_text","block_id":"i79","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"(part 3\/3)","style":{"italic":true}},{"type":"text","text":"\n\n(Source: "},{"type":"link","url":"https:\/\/paramount.atlassian.net\/wiki\/spaces\/PLQA\/pages\/47726491"},{"type":"text","text":")\\n\\n**Viewing Test Results:**\\n*   Each execution generates an **Allure report**.\\n*   The report is emailed to specified recipients (from "},{"type":"link","url":"mailto:noreply@mtvi.com","text":"noreply@mtvi.com","style":{"code":true}},{"type":"text","text":").\\n*   The email includes a summary and a link to the Jenkins run.\\n*   The "},{"type":"text","text":"build.log","style":{"code":true}},{"type":"text","text":" file also contains a link to the Allure report (search for \"synergyreport\").\\n*   You can view the Allure report directly from within Jenkins by selecting the desired run from the Build History and then clicking \"Console Output\" to find the link. (Source: "},{"type":"link","url":"https:\/\/paramount.atlassian.net\/wiki\/spaces\/PLQA\/pages\/47726491"},{"type":"text","text":")\\n\\n### Android TV Specific Setup and Test Execution\\n\\n**Setup for Local Execution:**\\n1. Ensure your work laptop and Android TV device are on the same network.\\n2. Enable **developer mode** on your Android TV: Go to Device Preferences Settings > About SHIELD, scroll to the bottom, and tap \"Build Number\" several times (7-9 taps).\\n3. Enable **USB debugging** and **Network debugging**.\\n4. Configure **proxy settings**: Go to Network and Internet, select your current network, then proxy settings > manual.\\n    *   Enter the IP seen in Charles proxy for the proxy host name.\\n    *   Use proxy port "},{"type":"text","text":"8888","style":{"code":true}},{"type":"text","text":" for local execution or "},{"type":"text","text":"9999","style":{"code":true}},{"type":"text","text":" for synergy execution.\\n5. Proceed and save the settings. (Source: "},{"type":"link","url":"https:\/\/paramount.atlassian.net\/wiki\/spaces\/PLQA\/pages\/47730307"},{"type":"text","text":")\\n\\n**Test Execution for Android TV:**\\n1. Download the latest version of the Synergy server and run the "},{"type":"text","text":".jar","style":{"code":true}},{"type":"text","text":" file (Websocket).\\n2. Update the desired capabilities in the "},{"type":"text","text":".config","style":{"code":true}},{"type":"text","text":" file (located under "},{"type":"text","text":"mqe-hob-ctv-tests","style":{"code":true}},{"type":"text","text":" directory). Key parameters to configure include:\\n    *   "},{"type":"text","text":"ServerURL","style":{"code":true}},{"type":"text","text":"\\n    *   "},{"type":"text","text":"AppName","style":{"code":true}},{"type":"text","text":" (e.g., PPLUS_US, PPLUS_INTL)\\n    *   "},{"type":"text","text":"Platform","style":{"code":true}},{"type":"text","text":" (ANDROID_TV)\\n    *   "},{"type":"text","text":"Locale","style":{"code":true}},{"type":"text","text":" (e.g., en-us)\\n    *   "},{"type":"text","text":"Environment","style":{"code":true}},{"type":"text","text":" (e.g., prod, stage, test)\\n    *   "},{"type":"text","text":"AppPackageUrl","style":{"code":true}},{"type":"text","text":"\\n    *   "},{"type":"text","text":"DebugDeviceIP","style":{"code":true}},{"type":"text","text":" (empty for synergy farm, or local network IP for local run)\\n    *   "},{"type":"text","text":"JenkinsCredential","style":{"code":true}},{"type":"text","text":" (username:password)\\n    *   "},{"type":"text","text":"AppBuildType","style":{"code":true}},{"type":"text","text":" (e.g., DEBUG)\\n    *   "},{"type":"text","text":"DebugProxyPort","style":{"code":true}},{"type":"text","text":" (e.g., 9999) (Source: "},{"type":"link","url":"https:\/\/paramount.atlassian.net\/wiki\/spaces\/PLQA\/pages\/47730307"},{"type":"text","text":")', 'requires_approval': False, 'execution_id': 1551}"}]}]}],"channel":"D09A0LFHK8R","event_ts":"1755798136.100519","channel_type":"im"},"type":"event_callback","event_id":"Ev09BAPYHYN7","event_time":1755798136,"authorizations":[{"enterprise_id":"ERV4P7NAD","team_id":"T010QS7UQNA","user_id":"U099R6WTZ9S","is_bot":true,"is_enterprise_install":false}],"is_ext_shared_channel":false,"event_context":"4-eyJldCI6Im1lc3NhZ2UiLCJ0aWQiOiJUMDEwUVM3VVFOQSIsImFpZCI6IkEwOTlMQUNBQjJSIiwiY2lkIjoiRDA5QTBMRkhLOFIifQ"},"type":"events_api","accepts_response_payload":false,"retry_attempt":0,"retry_reason":""})
2025-08-21 10:42:16,595 - slack_bolt.App - DEBUG - [client.py:99] - A new message enqueued (current queue size: 1)
2025-08-21 10:42:16,595 - slack_bolt.App - DEBUG - [client.py:105] - A message dequeued (current queue size: 0)
2025-08-21 10:42:16,596 - slack_bolt.App - DEBUG - [client.py:125] - Message processing started (type: events_api, envelope_id: 73315160-f94e-4b65-8cad-94d8414e6de0)
2025-08-21 10:42:16,596 - slack_bolt.App - DEBUG - [app.py:476] - Applying slack_bolt.middleware.ssl_check.ssl_check.SslCheck
2025-08-21 10:42:16,597 - slack_bolt.App - DEBUG - [app.py:476] - Applying slack_bolt.middleware.request_verification.request_verification.RequestVerification
2025-08-21 10:42:16,597 - slack_bolt.App - DEBUG - [app.py:476] - Applying slack_bolt.middleware.authorization.single_team_authorization.SingleTeamAuthorization
2025-08-21 10:42:16,597 - slack_bolt.App - DEBUG - [app.py:476] - Applying slack_bolt.middleware.ignoring_self_events.ignoring_self_events.IgnoringSelfEvents
2025-08-21 10:42:16,597 - slack_bolt.IgnoringSelfEvents - DEBUG - [ignoring_self_events.py:60] - Skipped self event: {'user': 'U099R6WTZ9S', 'type': 'message', 'ts': '1755798136.100519', 'bot_id': 'B099R6WTRU4', 'app_id': 'A099LACAB2R', 'text': '_(part 3/3)_\n\n(Source: <https://paramount.atlassian.net/wiki/spaces/PLQA/pages/47726491>)\\n\\n**Viewing Test Results:**\\n*   Each execution generates an **Allure report**.\\n*   The report is emailed to specified recipients (from `<mailto:noreply@mtvi.com|noreply@mtvi.com>`).\\n*   The email includes a summary and a link to the Jenkins run.\\n*   The `build.log` file also contains a link to the Allure report (search for "synergyreport").\\n*   You can view the Allure report directly from within Jenkins by selecting the desired run from the Build History and then clicking "Console Output" to find the link. (Source: <https://paramount.atlassian.net/wiki/spaces/PLQA/pages/47726491>)\\n\\n### Android TV Specific Setup and Test Execution\\n\\n**Setup for Local Execution:**\\n1. Ensure your work laptop and Android TV device are on the same network.\\n2. Enable **developer mode** on your Android TV: Go to Device Preferences Settings &gt; About SHIELD, scroll to the bottom, and tap "Build Number" several times (7-9 taps).\\n3. Enable **USB debugging** and **Network debugging**.\\n4. Configure **proxy settings**: Go to Network and Internet, select your current network, then proxy settings &gt; manual.\\n    *   Enter the IP seen in Charles proxy for the proxy host name.\\n    *   Use proxy port `8888` for local execution or `9999` for synergy execution.\\n5. Proceed and save the settings. (Source: <https://paramount.atlassian.net/wiki/spaces/PLQA/pages/47730307>)\\n\\n**Test Execution for Android TV:**\\n1. Download the latest version of the Synergy server and run the `.jar` file (Websocket).\\n2. Update the desired capabilities in the `.config` file (located under `mqe-hob-ctv-tests` directory). Key parameters to configure include:\\n    *   `ServerURL`\\n    *   `AppName` (e.g., PPLUS_US, PPLUS_INTL)\\n    *   `Platform` (ANDROID_TV)\\n    *   `Locale` (e.g., en-us)\\n    *   `Environment` (e.g., prod, stage, test)\\n    *   `AppPackageUrl`\\n    *   `DebugDeviceIP` (empty for synergy farm, or local network IP for local run)\\n    *   `JenkinsCredential` (username:password)\\n    *   `AppBuildType` (e.g., DEBUG)\\n    *   `DebugProxyPort` (e.g., 9999) (Source: <https://paramount.atlassian.net/wiki/spaces/PLQA/pages/47730307>)\', \'requires_approval\': False, \'execution_id\': 1551}', 'team': 'T010QS7UQNA', 'bot_profile': {'id': 'B099R6WTRU4', 'deleted': False, 'name': 'AutoBot', 'updated': 1754677948, 'app_id': 'A099LACAB2R', 'user_id': 'U099R6WTZ9S', 'icons': {'image_36': 'https://a.slack-edge.com/80588/img/plugins/app/bot_36.png', 'image_48': 'https://a.slack-edge.com/80588/img/plugins/app/bot_48.png', 'image_72': 'https://a.slack-edge.com/80588/img/plugins/app/service_72.png'}, 'team_id': 'T010QS7UQNA'}, 'thread_ts': '1755798116.274489', 'parent_user_id': 'U01RMTFMALF', 'blocks': [{'type': 'rich_text', 'block_id': 'i79', 'elements': [{'type': 'rich_text_section', 'elements': [{'type': 'text', 'text': '(part 3/3)', 'style': {'italic': True}}, {'type': 'text', 'text': '\n\n(Source: '}, {'type': 'link', 'url': 'https://paramount.atlassian.net/wiki/spaces/PLQA/pages/47726491'}, {'type': 'text', 'text': ')\\n\\n**Viewing Test Results:**\\n*   Each execution generates an **Allure report**.\\n*   The report is emailed to specified recipients (from '}, {'type': 'link', 'url': 'mailto:noreply@mtvi.com', 'text': 'noreply@mtvi.com', 'style': {'code': True}}, {'type': 'text', 'text': ').\\n*   The email includes a summary and a link to the Jenkins run.\\n*   The '}, {'type': 'text', 'text': 'build.log', 'style': {'code': True}}, {'type': 'text', 'text': ' file also contains a link to the Allure report (search for "synergyreport").\\n*   You can view the Allure report directly from within Jenkins by selecting the desired run from the Build History and then clicking "Console Output" to find the link. (Source: '}, {'type': 'link', 'url': 'https://paramount.atlassian.net/wiki/spaces/PLQA/pages/47726491'}, {'type': 'text', 'text': ')\\n\\n### Android TV Specific Setup and Test Execution\\n\\n**Setup for Local Execution:**\\n1. Ensure your work laptop and Android TV device are on the same network.\\n2. Enable **developer mode** on your Android TV: Go to Device Preferences Settings > About SHIELD, scroll to the bottom, and tap "Build Number" several times (7-9 taps).\\n3. Enable **USB debugging** and **Network debugging**.\\n4. Configure **proxy settings**: Go to Network and Internet, select your current network, then proxy settings > manual.\\n    *   Enter the IP seen in Charles proxy for the proxy host name.\\n    *   Use proxy port '}, {'type': 'text', 'text': '8888', 'style': {'code': True}}, {'type': 'text', 'text': ' for local execution or '}, {'type': 'text', 'text': '9999', 'style': {'code': True}}, {'type': 'text', 'text': ' for synergy execution.\\n5. Proceed and save the settings. (Source: '}, {'type': 'link', 'url': 'https://paramount.atlassian.net/wiki/spaces/PLQA/pages/47730307'}, {'type': 'text', 'text': ')\\n\\n**Test Execution for Android TV:**\\n1. Download the latest version of the Synergy server and run the '}, {'type': 'text', 'text': '.jar', 'style': {'code': True}}, {'type': 'text', 'text': ' file (Websocket).\\n2. Update the desired capabilities in the '}, {'type': 'text', 'text': '.config', 'style': {'code': True}}, {'type': 'text', 'text': ' file (located under '}, {'type': 'text', 'text': 'mqe-hob-ctv-tests', 'style': {'code': True}}, {'type': 'text', 'text': ' directory). Key parameters to configure include:\\n    *   '}, {'type': 'text', 'text': 'ServerURL', 'style': {'code': True}}, {'type': 'text', 'text': '\\n    *   '}, {'type': 'text', 'text': 'AppName', 'style': {'code': True}}, {'type': 'text', 'text': ' (e.g., PPLUS_US, PPLUS_INTL)\\n    *   '}, {'type': 'text', 'text': 'Platform', 'style': {'code': True}}, {'type': 'text', 'text': ' (ANDROID_TV)\\n    *   '}, {'type': 'text', 'text': 'Locale', 'style': {'code': True}}, {'type': 'text', 'text': ' (e.g., en-us)\\n    *   '}, {'type': 'text', 'text': 'Environment', 'style': {'code': True}}, {'type': 'text', 'text': ' (e.g., prod, stage, test)\\n    *   '}, {'type': 'text', 'text': 'AppPackageUrl', 'style': {'code': True}}, {'type': 'text', 'text': '\\n    *   '}, {'type': 'text', 'text': 'DebugDeviceIP', 'style': {'code': True}}, {'type': 'text', 'text': ' (empty for synergy farm, or local network IP for local run)\\n    *   '}, {'type': 'text', 'text': 'JenkinsCredential', 'style': {'code': True}}, {'type': 'text', 'text': ' (username:password)\\n    *   '}, {'type': 'text', 'text': 'AppBuildType', 'style': {'code': True}}, {'type': 'text', 'text': ' (e.g., DEBUG)\\n    *   '}, {'type': 'text', 'text': 'DebugProxyPort', 'style': {'code': True}}, {'type': 'text', 'text': ' (e.g., 9999) (Source: '}, {'type': 'link', 'url': 'https://paramount.atlassian.net/wiki/spaces/PLQA/pages/47730307'}, {'type': 'text', 'text': ")', 'requires_approval': False, 'execution_id': 1551}"}]}]}], 'channel': 'D09A0LFHK8R', 'event_ts': '1755798136.100519', 'channel_type': 'im'}
2025-08-21 10:42:16,598 - slack_bolt.App - DEBUG - [client.py:200] - Sending a message (session id: 9caa291c-f50f-4808-a579-72eed6c2a372, message: {"envelope_id": "73315160-f94e-4b65-8cad-94d8414e6de0"})
2025-08-21 10:42:16,599 - slack_bolt.App - DEBUG - [internals.py:41] - Response time: 2 milliseconds
2025-08-21 10:42:16,599 - slack_bolt.App - DEBUG - [client.py:150] - Message processing completed (type: events_api, envelope_id: 73315160-f94e-4b65-8cad-94d8414e6de0)
2025-08-21 10:42:17,165 - slack_bolt.App - DEBUG - [client.py:235] - on_message invoked: (message: {"envelope_id":"84b39790-738d-4337-9a76-4e7e781662c6","payload":{"token":"yq71khZBCyJF1Ri2hG5aNqr5","team_id":"T010QS7UQNA","enterprise_id":"ERV4P7NAD","context_team_id":null,"context_enterprise_id":"ERV4P7NAD","api_app_id":"A099LACAB2R","event":{"user":"U099R6WTZ9S","type":"message","ts":"1755798135.669619","bot_id":"B099R6WTRU4","app_id":"A099LACAB2R","text":"_(part 2\/3)_\n\nTests can be run using Maven commands, such as:\\n\\n`mvn test -Dmaven.repo.local=.\/.m2 -Dcucumber.features=\"$test\" -Ddriver=android -DplatformName=android -Dudid= -Denvironment=lambdatest -DtargetURL=<http:\/\/test-www.paramountplus.com|test-www.paramountplus.com> -Dapp=<lt:\/\/APP10160361191691076976834962> -DbundleId=<http:\/\/com.cbsvideodebug.app|com.cbsvideodebug.app> -DappPackage=<http:\/\/com.cbs.app|com.cbs.app> -DlambdaKey=sureshkumar.palus:AdIBfntJTMxJhLRB18p7sgTEFMxAphu2X2cVmsQiu9KlESMhXq -Dbuild=P+_Android_phone_test-www -Dproject=\"P+ Android Mobile\" -DqueueTimeout=300` (Source: <https:\/\/paramount.atlassian.net\/wiki\/spaces\/PLQA\/pages\/47721257>)\\n\\n### Automated Test Execution via Jenkins (Smoke Test Suite)\\n\\nA common method for running automated Android tests, particularly smoke tests, is through Jenkins.\\n\\n**About the Smoke Test Suite:**\\n*   It consists of 30 test cases to verify basic build functionality.\\n*   It runs nightly and can be executed on demand.\\n*   Tests can be run on Android Phones and Tablets. (Source: <https:\/\/paramount.atlassian.net\/wiki\/spaces\/PLQA\/pages\/47726491>)\\n\\n**Pre-requisites:**\\n1. Access to the Jenkins BVC Server: [<https:\/\/build.viacom.com\/>](<https:\/\/build.viacom.com\/>)\\n2. Access to the Jenkins job for Android: [<https:\/\/stage.build.viacom.com\/job\/mqe\/job\/gqe_pplus_android_domestic\/>](<https:\/\/stage.build.viacom.com\/job\/mqe\/job\/gqe_pplus_android_domestic\/>) (Source: <https:\/\/paramount.atlassian.net\/wiki\/spaces\/PLQA\/pages\/47726491>)\\n\\n**Steps to Execute Tests in Jenkins (Ad-hoc):**\\n1. Navigate to the Jenkins job URL: [<https:\/\/stage.build.viacom.com\/job\/mqe\/job\/gqe_pplus_android_domestic\/>](<https:\/\/stage.build.viacom.com\/job\/mqe\/job\/gqe_pplus_android_domestic\/>).\\n2. Select \"Build with Parameters\" from the left menu.\\n3. Configure the desired **Build Parameters**, including:\\n    *   `BRANCH` (e.g., master)\\n    *   `LOCALE` (e.g., en-us)\\n    *   `ENVIRONMENT` (e.g., test)\\n    *   `PLATFORM` (e.g., ANDROID)\\n    *   `MOBILE_DEVICE_CATEGORY` (PHONE or TABLET)\\n    *   `APP_NAME` (e.g., PPLUS_US)\\n    *   `APP_BUILD_TYPE` (e.g., DEBUG)\\n    *   `APP_PACKAGE_URL` (blank for latest from AppCenter, or specific Synergy build URL)\\n    *   `INCLUDE_TEST_GROUPS` (e.g., Smoke)\\n    *   `EXCLUDE_TEST_GROUPS` (e.g., Broken, BrokenAndroidMobileUS)\\n    *   `EMAIL_REPORT_RECIPIENT` (comma-separated email list)\\n    *   Other parameters like `USE_GEOVPN`, `TESTRAIL_MILESTONE_ID`, `TESTRAIL_TESTRUN_ID`, `ATTACH_SESSION_DETAILS`, `RERUN_ON_FAILURE`, `RERUN_ON_FAILURE_COUNT`.\\n4. Press the \"Build\" button.\\n5. Monitor the build progress and status.","team":"T010QS7UQNA","bot_profile":{"id":"B099R6WTRU4","deleted":false,"name":"AutoBot","updated":1754677948,"app_id":"A099LACAB2R","user_id":"U099R6WTZ9S","icons":{"image_36":"https:\/\/a.slack-edge.com\/80588\/img\/plugins\/app\/bot_36.png","image_48":"https:\/\/a.slack-edge.com\/80588\/img\/plugins\/app\/bot_48.png","image_72":"https:\/\/a.slack-edge.com\/80588\/img\/plugins\/app\/service_72.png"},"team_id":"T010QS7UQNA"},"thread_ts":"1755798116.274489","parent_user_id":"U01RMTFMALF","blocks":[{"type":"rich_text","block_id":"SqR","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"(part 2\/3)","style":{"italic":true}},{"type":"text","text":"\n\nTests can be run using Maven commands, such as:\\n\\n`mvn test -Dmaven.repo.local=.\/.m2 -Dcucumber.features=\"$test\" -Ddriver=android -DplatformName=android -Dudid= -Denvironment=lambdatest -DtargetURL="},{"type":"link","url":"http:\/\/test-www.paramountplus.com","text":"test-www.paramountplus.com","unsafe":true},{"type":"text","text":" -Dapp="},{"type":"link","url":"lt:\/\/APP10160361191691076976834962"},{"type":"text","text":" -DbundleId="},{"type":"link","url":"http:\/\/com.cbsvideodebug.app","text":"com.cbsvideodebug.app"},{"type":"text","text":" -DappPackage="},{"type":"link","url":"http:\/\/com.cbs.app","text":"com.cbs.app"},{"type":"text","text":" -DlambdaKey=sureshkumar.palus:AdIBfntJTMxJhLRB18p7sgTEFMxAphu2X2cVmsQiu9KlESMhXq -Dbuild=P+_Android_phone_test-www -Dproject=\"P+ Android Mobile\" -DqueueTimeout=300` (Source: "},{"type":"link","url":"https:\/\/paramount.atlassian.net\/wiki\/spaces\/PLQA\/pages\/47721257"},{"type":"text","text":")\\n\\n### Automated Test Execution via Jenkins (Smoke Test Suite)\\n\\nA common method for running automated Android tests, particularly smoke tests, is through Jenkins.\\n\\n**About the Smoke Test Suite:**\\n*   It consists of 30 test cases to verify basic build functionality.\\n*   It runs nightly and can be executed on demand.\\n*   Tests can be run on Android Phones and Tablets. (Source: "},{"type":"link","url":"https:\/\/paramount.atlassian.net\/wiki\/spaces\/PLQA\/pages\/47726491"},{"type":"text","text":")\\n\\n**Pre-requisites:**\\n1. Access to the Jenkins BVC Server: ["},{"type":"link","url":"https:\/\/build.viacom.com\/"},{"type":"text","text":"]("},{"type":"link","url":"https:\/\/build.viacom.com\/"},{"type":"text","text":")\\n2. Access to the Jenkins job for Android: ["},{"type":"link","url":"https:\/\/stage.build.viacom.com\/job\/mqe\/job\/gqe_pplus_android_domestic\/"},{"type":"text","text":"]("},{"type":"link","url":"https:\/\/stage.build.viacom.com\/job\/mqe\/job\/gqe_pplus_android_domestic\/"},{"type":"text","text":") (Source: "},{"type":"link","url":"https:\/\/paramount.atlassian.net\/wiki\/spaces\/PLQA\/pages\/47726491"},{"type":"text","text":")\\n\\n**Steps to Execute Tests in Jenkins (Ad-hoc):**\\n1. Navigate to the Jenkins job URL: ["},{"type":"link","url":"https:\/\/stage.build.viacom.com\/job\/mqe\/job\/gqe_pplus_android_domestic\/"},{"type":"text","text":"]("},{"type":"link","url":"https:\/\/stage.build.viacom.com\/job\/mqe\/job\/gqe_pplus_android_domestic\/"},{"type":"text","text":").\\n2. Select \"Build with Parameters\" from the left menu.\\n3. Configure the desired **Build Parameters**, including:\\n    *   "},{"type":"text","text":"BRANCH","style":{"code":true}},{"type":"text","text":" (e.g., master)\\n    *   "},{"type":"text","text":"LOCALE","style":{"code":true}},{"type":"text","text":" (e.g., en-us)\\n    *   "},{"type":"text","text":"ENVIRONMENT","style":{"code":true}},{"type":"text","text":" (e.g., test)\\n    *   "},{"type":"text","text":"PLATFORM","style":{"code":true}},{"type":"text","text":" (e.g., ANDROID)\\n    *   "},{"type":"text","text":"MOBILE_DEVICE_CATEGORY","style":{"code":true}},{"type":"text","text":" (PHONE or TABLET)\\n    *   "},{"type":"text","text":"APP_NAME","style":{"code":true}},{"type":"text","text":" (e.g., PPLUS_US)\\n    *   "},{"type":"text","text":"APP_BUILD_TYPE","style":{"code":true}},{"type":"text","text":" (e.g., DEBUG)\\n    *   "},{"type":"text","text":"APP_PACKAGE_URL","style":{"code":true}},{"type":"text","text":" (blank for latest from AppCenter, or specific Synergy build URL)\\n    *   "},{"type":"text","text":"INCLUDE_TEST_GROUPS","style":{"code":true}},{"type":"text","text":" (e.g., Smoke)\\n    *   "},{"type":"text","text":"EXCLUDE_TEST_GROUPS","style":{"code":true}},{"type":"text","text":" (e.g., Broken, BrokenAndroidMobileUS)\\n    *   "},{"type":"text","text":"EMAIL_REPORT_RECIPIENT","style":{"code":true}},{"type":"text","text":" (comma-separated email list)\\n    *   Other parameters like "},{"type":"text","text":"USE_GEOVPN","style":{"code":true}},{"type":"text","text":", "},{"type":"text","text":"TESTRAIL_MILESTONE_ID","style":{"code":true}},{"type":"text","text":", "},{"type":"text","text":"TESTRAIL_TESTRUN_ID","style":{"code":true}},{"type":"text","text":", "},{"type":"text","text":"ATTACH_SESSION_DETAILS","style":{"code":true}},{"type":"text","text":", "},{"type":"text","text":"RERUN_ON_FAILURE","style":{"code":true}},{"type":"text","text":", "},{"type":"text","text":"RERUN_ON_FAILURE_COUNT","style":{"code":true}},{"type":"text","text":".\\n4. Press the \"Build\" button.\\n5. Monitor the build progress and status."}]}]}],"channel":"D09A0LFHK8R","event_ts":"1755798135.669619","channel_type":"im"},"type":"event_callback","event_id":"Ev09B3DV1E5D","event_time":1755798135,"authorizations":[{"enterprise_id":"ERV4P7NAD","team_id":"T010QS7UQNA","user_id":"U099R6WTZ9S","is_bot":true,"is_enterprise_install":false}],"is_ext_shared_channel":false,"event_context":"4-eyJldCI6Im1lc3NhZ2UiLCJ0aWQiOiJUMDEwUVM3VVFOQSIsImFpZCI6IkEwOTlMQUNBQjJSIiwiY2lkIjoiRDA5QTBMRkhLOFIifQ"},"type":"events_api","accepts_response_payload":false,"retry_attempt":0,"retry_reason":""})
2025-08-21 10:42:17,167 - slack_bolt.App - DEBUG - [client.py:99] - A new message enqueued (current queue size: 1)
2025-08-21 10:42:17,167 - slack_bolt.App - DEBUG - [client.py:105] - A message dequeued (current queue size: 0)
2025-08-21 10:42:17,168 - slack_bolt.App - DEBUG - [client.py:125] - Message processing started (type: events_api, envelope_id: 84b39790-738d-4337-9a76-4e7e781662c6)
2025-08-21 10:42:17,168 - slack_bolt.App - DEBUG - [app.py:476] - Applying slack_bolt.middleware.ssl_check.ssl_check.SslCheck
2025-08-21 10:42:17,168 - slack_bolt.App - DEBUG - [app.py:476] - Applying slack_bolt.middleware.request_verification.request_verification.RequestVerification
2025-08-21 10:42:17,168 - slack_bolt.App - DEBUG - [app.py:476] - Applying slack_bolt.middleware.authorization.single_team_authorization.SingleTeamAuthorization
2025-08-21 10:42:17,168 - slack_bolt.App - DEBUG - [app.py:476] - Applying slack_bolt.middleware.ignoring_self_events.ignoring_self_events.IgnoringSelfEvents
2025-08-21 10:42:17,168 - slack_bolt.IgnoringSelfEvents - DEBUG - [ignoring_self_events.py:60] - Skipped self event: {'user': 'U099R6WTZ9S', 'type': 'message', 'ts': '1755798135.669619', 'bot_id': 'B099R6WTRU4', 'app_id': 'A099LACAB2R', 'text': '_(part 2/3)_\n\nTests can be run using Maven commands, such as:\\n\\n`mvn test -Dmaven.repo.local=./.m2 -Dcucumber.features="$test" -Ddriver=android -DplatformName=android -Dudid= -Denvironment=lambdatest -DtargetURL=<http://test-www.paramountplus.com|test-www.paramountplus.com> -Dapp=<lt://APP10160361191691076976834962> -DbundleId=<http://com.cbsvideodebug.app|com.cbsvideodebug.app> -DappPackage=<http://com.cbs.app|com.cbs.app> -DlambdaKey=sureshkumar.palus:AdIBfntJTMxJhLRB18p7sgTEFMxAphu2X2cVmsQiu9KlESMhXq -Dbuild=P+_Android_phone_test-www -Dproject="P+ Android Mobile" -DqueueTimeout=300` (Source: <https://paramount.atlassian.net/wiki/spaces/PLQA/pages/47721257>)\\n\\n### Automated Test Execution via Jenkins (Smoke Test Suite)\\n\\nA common method for running automated Android tests, particularly smoke tests, is through Jenkins.\\n\\n**About the Smoke Test Suite:**\\n*   It consists of 30 test cases to verify basic build functionality.\\n*   It runs nightly and can be executed on demand.\\n*   Tests can be run on Android Phones and Tablets. (Source: <https://paramount.atlassian.net/wiki/spaces/PLQA/pages/47726491>)\\n\\n**Pre-requisites:**\\n1. Access to the Jenkins BVC Server: [<https://build.viacom.com/>](<https://build.viacom.com/>)\\n2. Access to the Jenkins job for Android: [<https://stage.build.viacom.com/job/mqe/job/gqe_pplus_android_domestic/>](<https://stage.build.viacom.com/job/mqe/job/gqe_pplus_android_domestic/>) (Source: <https://paramount.atlassian.net/wiki/spaces/PLQA/pages/47726491>)\\n\\n**Steps to Execute Tests in Jenkins (Ad-hoc):**\\n1. Navigate to the Jenkins job URL: [<https://stage.build.viacom.com/job/mqe/job/gqe_pplus_android_domestic/>](<https://stage.build.viacom.com/job/mqe/job/gqe_pplus_android_domestic/>).\\n2. Select "Build with Parameters" from the left menu.\\n3. Configure the desired **Build Parameters**, including:\\n    *   `BRANCH` (e.g., master)\\n    *   `LOCALE` (e.g., en-us)\\n    *   `ENVIRONMENT` (e.g., test)\\n    *   `PLATFORM` (e.g., ANDROID)\\n    *   `MOBILE_DEVICE_CATEGORY` (PHONE or TABLET)\\n    *   `APP_NAME` (e.g., PPLUS_US)\\n    *   `APP_BUILD_TYPE` (e.g., DEBUG)\\n    *   `APP_PACKAGE_URL` (blank for latest from AppCenter, or specific Synergy build URL)\\n    *   `INCLUDE_TEST_GROUPS` (e.g., Smoke)\\n    *   `EXCLUDE_TEST_GROUPS` (e.g., Broken, BrokenAndroidMobileUS)\\n    *   `EMAIL_REPORT_RECIPIENT` (comma-separated email list)\\n    *   Other parameters like `USE_GEOVPN`, `TESTRAIL_MILESTONE_ID`, `TESTRAIL_TESTRUN_ID`, `ATTACH_SESSION_DETAILS`, `RERUN_ON_FAILURE`, `RERUN_ON_FAILURE_COUNT`.\\n4. Press the "Build" button.\\n5. Monitor the build progress and status.', 'team': 'T010QS7UQNA', 'bot_profile': {'id': 'B099R6WTRU4', 'deleted': False, 'name': 'AutoBot', 'updated': 1754677948, 'app_id': 'A099LACAB2R', 'user_id': 'U099R6WTZ9S', 'icons': {'image_36': 'https://a.slack-edge.com/80588/img/plugins/app/bot_36.png', 'image_48': 'https://a.slack-edge.com/80588/img/plugins/app/bot_48.png', 'image_72': 'https://a.slack-edge.com/80588/img/plugins/app/service_72.png'}, 'team_id': 'T010QS7UQNA'}, 'thread_ts': '1755798116.274489', 'parent_user_id': 'U01RMTFMALF', 'blocks': [{'type': 'rich_text', 'block_id': 'SqR', 'elements': [{'type': 'rich_text_section', 'elements': [{'type': 'text', 'text': '(part 2/3)', 'style': {'italic': True}}, {'type': 'text', 'text': '\n\nTests can be run using Maven commands, such as:\\n\\n`mvn test -Dmaven.repo.local=./.m2 -Dcucumber.features="$test" -Ddriver=android -DplatformName=android -Dudid= -Denvironment=lambdatest -DtargetURL='}, {'type': 'link', 'url': 'http://test-www.paramountplus.com', 'text': 'test-www.paramountplus.com', 'unsafe': True}, {'type': 'text', 'text': ' -Dapp='}, {'type': 'link', 'url': 'lt://APP10160361191691076976834962'}, {'type': 'text', 'text': ' -DbundleId='}, {'type': 'link', 'url': 'http://com.cbsvideodebug.app', 'text': 'com.cbsvideodebug.app'}, {'type': 'text', 'text': ' -DappPackage='}, {'type': 'link', 'url': 'http://com.cbs.app', 'text': 'com.cbs.app'}, {'type': 'text', 'text': ' -DlambdaKey=sureshkumar.palus:AdIBfntJTMxJhLRB18p7sgTEFMxAphu2X2cVmsQiu9KlESMhXq -Dbuild=P+_Android_phone_test-www -Dproject="P+ Android Mobile" -DqueueTimeout=300` (Source: '}, {'type': 'link', 'url': 'https://paramount.atlassian.net/wiki/spaces/PLQA/pages/47721257'}, {'type': 'text', 'text': ')\\n\\n### Automated Test Execution via Jenkins (Smoke Test Suite)\\n\\nA common method for running automated Android tests, particularly smoke tests, is through Jenkins.\\n\\n**About the Smoke Test Suite:**\\n*   It consists of 30 test cases to verify basic build functionality.\\n*   It runs nightly and can be executed on demand.\\n*   Tests can be run on Android Phones and Tablets. (Source: '}, {'type': 'link', 'url': 'https://paramount.atlassian.net/wiki/spaces/PLQA/pages/47726491'}, {'type': 'text', 'text': ')\\n\\n**Pre-requisites:**\\n1. Access to the Jenkins BVC Server: ['}, {'type': 'link', 'url': 'https://build.viacom.com/'}, {'type': 'text', 'text': ']('}, {'type': 'link', 'url': 'https://build.viacom.com/'}, {'type': 'text', 'text': ')\\n2. Access to the Jenkins job for Android: ['}, {'type': 'link', 'url': 'https://stage.build.viacom.com/job/mqe/job/gqe_pplus_android_domestic/'}, {'type': 'text', 'text': ']('}, {'type': 'link', 'url': 'https://stage.build.viacom.com/job/mqe/job/gqe_pplus_android_domestic/'}, {'type': 'text', 'text': ') (Source: '}, {'type': 'link', 'url': 'https://paramount.atlassian.net/wiki/spaces/PLQA/pages/47726491'}, {'type': 'text', 'text': ')\\n\\n**Steps to Execute Tests in Jenkins (Ad-hoc):**\\n1. Navigate to the Jenkins job URL: ['}, {'type': 'link', 'url': 'https://stage.build.viacom.com/job/mqe/job/gqe_pplus_android_domestic/'}, {'type': 'text', 'text': ']('}, {'type': 'link', 'url': 'https://stage.build.viacom.com/job/mqe/job/gqe_pplus_android_domestic/'}, {'type': 'text', 'text': ').\\n2. Select "Build with Parameters" from the left menu.\\n3. Configure the desired **Build Parameters**, including:\\n    *   '}, {'type': 'text', 'text': 'BRANCH', 'style': {'code': True}}, {'type': 'text', 'text': ' (e.g., master)\\n    *   '}, {'type': 'text', 'text': 'LOCALE', 'style': {'code': True}}, {'type': 'text', 'text': ' (e.g., en-us)\\n    *   '}, {'type': 'text', 'text': 'ENVIRONMENT', 'style': {'code': True}}, {'type': 'text', 'text': ' (e.g., test)\\n    *   '}, {'type': 'text', 'text': 'PLATFORM', 'style': {'code': True}}, {'type': 'text', 'text': ' (e.g., ANDROID)\\n    *   '}, {'type': 'text', 'text': 'MOBILE_DEVICE_CATEGORY', 'style': {'code': True}}, {'type': 'text', 'text': ' (PHONE or TABLET)\\n    *   '}, {'type': 'text', 'text': 'APP_NAME', 'style': {'code': True}}, {'type': 'text', 'text': ' (e.g., PPLUS_US)\\n    *   '}, {'type': 'text', 'text': 'APP_BUILD_TYPE', 'style': {'code': True}}, {'type': 'text', 'text': ' (e.g., DEBUG)\\n    *   '}, {'type': 'text', 'text': 'APP_PACKAGE_URL', 'style': {'code': True}}, {'type': 'text', 'text': ' (blank for latest from AppCenter, or specific Synergy build URL)\\n    *   '}, {'type': 'text', 'text': 'INCLUDE_TEST_GROUPS', 'style': {'code': True}}, {'type': 'text', 'text': ' (e.g., Smoke)\\n    *   '}, {'type': 'text', 'text': 'EXCLUDE_TEST_GROUPS', 'style': {'code': True}}, {'type': 'text', 'text': ' (e.g., Broken, BrokenAndroidMobileUS)\\n    *   '}, {'type': 'text', 'text': 'EMAIL_REPORT_RECIPIENT', 'style': {'code': True}}, {'type': 'text', 'text': ' (comma-separated email list)\\n    *   Other parameters like '}, {'type': 'text', 'text': 'USE_GEOVPN', 'style': {'code': True}}, {'type': 'text', 'text': ', '}, {'type': 'text', 'text': 'TESTRAIL_MILESTONE_ID', 'style': {'code': True}}, {'type': 'text', 'text': ', '}, {'type': 'text', 'text': 'TESTRAIL_TESTRUN_ID', 'style': {'code': True}}, {'type': 'text', 'text': ', '}, {'type': 'text', 'text': 'ATTACH_SESSION_DETAILS', 'style': {'code': True}}, {'type': 'text', 'text': ', '}, {'type': 'text', 'text': 'RERUN_ON_FAILURE', 'style': {'code': True}}, {'type': 'text', 'text': ', '}, {'type': 'text', 'text': 'RERUN_ON_FAILURE_COUNT', 'style': {'code': True}}, {'type': 'text', 'text': '.\\n4. Press the "Build" button.\\n5. Monitor the build progress and status.'}]}]}], 'channel': 'D09A0LFHK8R', 'event_ts': '1755798135.669619', 'channel_type': 'im'}
2025-08-21 10:42:17,169 - slack_bolt.App - DEBUG - [client.py:200] - Sending a message (session id: 9caa291c-f50f-4808-a579-72eed6c2a372, message: {"envelope_id": "84b39790-738d-4337-9a76-4e7e781662c6"})
2025-08-21 10:42:17,169 - slack_bolt.App - DEBUG - [internals.py:41] - Response time: 1 milliseconds
2025-08-21 10:42:17,169 - slack_bolt.App - DEBUG - [client.py:150] - Message processing completed (type: events_api, envelope_id: 84b39790-738d-4337-9a76-4e7e781662c6)
2025-08-21 10:42:25,855 - slack_bolt.App - DEBUG - [client.py:235] - on_message invoked: (message: {"envelope_id":"427102e0-69cd-4316-8875-c7aaf773b3db","payload":{"token":"yq71khZBCyJF1Ri2hG5aNqr5","team_id":"T010QS7UQNA","enterprise_id":"ERV4P7NAD","context_team_id":null,"context_enterprise_id":"ERV4P7NAD","api_app_id":"A099LACAB2R","event":{"type":"message","subtype":"message_changed","message":{"user":"U099R6WTZ9S","type":"message","bot_id":"B099R6WTRU4","app_id":"A099LACAB2R","text":"*Your Query:* How to run test on Android\n\n*Answer:*\n{'message_text': 'Running tests on Android can involve several methods, from basic development testing to automated suite execution. Here\\'s a breakdown based on the provided documents:\\n\\n### General Android Testing Fundamentals\\n\\nFor a foundational understanding of testing Android applications, you can refer to the official Android developer documentation:\\n*   **Fundamentals of testing Android apps:** [<https:\/\/developer.android.com\/training\/testing\/fundamentals>](<https:\/\/developer.android.com\/training\/testing\/fundamentals>) (Source: <https:\/\/paramount.atlassian.net\/wiki\/spaces\/PLQA\/pages\/47722061>)\\n*   **Running Apps on the Emulator:** [<https:\/\/developer.android.com\/studio\/run\/emulator>](<https:\/\/developer.android.com\/studio\/run\/emulator>) (Source: <https:\/\/paramount.atlassian.net\/wiki\/spaces\/PLQA\/pages\/47722061>)\\n\\nYou may also find these resources helpful:\\n*   **Basics of Android Studio:** [<https:\/\/developer.android.com\/studio\/intro>](<https:\/\/developer.android.com\/studio\/intro>) (Source: <https:\/\/paramount.atlassian.net\/wiki\/spaces\/PLQA\/pages\/47722061>)\\n*   **Learn Kotlin:** [<https:\/\/developer.android.com\/kotlin\/learn>](<https:\/\/developer.android.com\/kotlin\/learn>) (Source: <https:\/\/paramount.atlassian.net\/wiki\/spaces\/PLQA\/pages\/47722061>)\\n*   **Appium locator strategy:** [<https:\/\/medium.com\/@WasiqB\/locators-in-appium-with-example-f8762eed83d7>](<https:\/\/medium.com\/@WasiqB\/locators-in-appium-with-example-f8762eed83d7>) (Source: <https:\/\/paramount.atlassian.net\/wiki\/spaces\/PLQA\/pages\/47722061>)\\n\\n### Running Tests on a Local Simulator\/Emulator\\n\\nWhen running tests on a local Android Emulator, ensure your Run Configuration has the `$ANDROID_HOME` environment variable set and included in the path (Source: <https:\/\/paramount.atlassian.net\/wiki\/spaces\/PLQA\/pages\/47713566>).\\n\\nIf you\\'re using a framework like TestNG with Appium, a `SampleTest.java` class might be used. This class would handle instantiating the mobile driver, starting\/stopping the Appium server, and managing the Android Emulator\/iOS Simulator (Source: <https:\/\/paramount.atlassian.net\/wiki\/spaces\/PLQA\/pages\/47711460>).\n\n_(message continued in thread...)_","team":"T010QS7UQNA","bot_profile":{"id":"B099R6WTRU4","deleted":false,"name":"AutoBot","updated":1754677948,"app_id":"A099LACAB2R","user_id":"U099R6WTZ9S","icons":{"image_36":"https:\/\/a.slack-edge.com\/80588\/img\/plugins\/app\/bot_36.png","image_48":"https:\/\/a.slack-edge.com\/80588\/img\/plugins\/app\/bot_48.png","image_72":"https:\/\/a.slack-edge.com\/80588\/img\/plugins\/app\/service_72.png"},"team_id":"T010QS7UQNA"},"thread_ts":"1755798116.274489","parent_user_id":"U01RMTFMALF","attachments":[{"from_url":"https:\/\/developer.android.com\/training\/testing\/fundamentals","image_url":"https:\/\/developer.android.com\/static\/images\/social\/android-developers.png","image_width":1201,"image_height":676,"image_bytes":31847,"service_icon":"https:\/\/www.gstatic.com\/devrel-devsite\/prod\/v80eb94e0352d656ad1e20abf6117cdec6c1343c7722ef10f52a1a3f77f1e58f7\/android\/images\/touchicon-180.png","id":1,"original_url":"https:\/\/developer.android.com\/training\/testing\/fundamentals","fallback":"Android Developers: Fundamentals of testing Android apps \u00a0|\u00a0 Test your app on Android \u00a0|\u00a0 Android Developers","title":"Fundamentals of testing Android apps \u00a0|\u00a0 Test your app on Android \u00a0|\u00a0 Android Developers","title_link":"https:\/\/developer.android.com\/training\/testing\/fundamentals","service_name":"Android Developers"},{"from_url":"https:\/\/developer.android.com\/studio\/run\/emulator","image_url":"https:\/\/developer.android.com\/static\/images\/social\/android-developers.png","image_width":1201,"image_height":676,"image_bytes":31847,"service_icon":"https:\/\/www.gstatic.com\/devrel-devsite\/prod\/v80eb94e0352d656ad1e20abf6117cdec6c1343c7722ef10f52a1a3f77f1e58f7\/android\/images\/touchicon-180.png","id":2,"original_url":"https:\/\/developer.android.com\/studio\/run\/emulator","fallback":"Android Developers: Run apps on the Android Emulator \u00a0|\u00a0 Android Studio \u00a0|\u00a0 Android Developers","text":"The Android Emulator simulates Android devices on your computer so that you can test your app on a variety of devices and Android API levels without needing to have each physical device.","title":"Run apps on the Android Emulator \u00a0|\u00a0 Android Studio \u00a0|\u00a0 Android Developers","title_link":"https:\/\/developer.android.com\/studio\/run\/emulator","service_name":"Android Developers"},{"from_url":"https:\/\/developer.android.com\/studio\/intro","image_url":"https:\/\/developer.android.com\/static\/images\/social\/android-developers.png","image_width":1201,"image_height":676,"image_bytes":31847,"service_icon":"https:\/\/www.gstatic.com\/devrel-devsite\/prod\/v80eb94e0352d656ad1e20abf6117cdec6c1343c7722ef10f52a1a3f77f1e58f7\/android\/images\/touchicon-180.png","id":3,"original_url":"https:\/\/developer.android.com\/studio\/intro","fallback":"Android Developers: Meet Android Studio \u00a0|\u00a0 Android Developers","text":"Android Studio is the official Integrated Development Environment (IDE) for Android app development, based on IntelliJ IDEA.","title":"Meet Android Studio \u00a0|\u00a0 Android Developers","title_link":"https:\/\/developer.android.com\/studio\/intro","service_name":"Android Developers"},{"from_url":"https:\/\/developer.android.com\/kotlin\/learn","image_url":"https:\/\/developer.android.com\/static\/images\/social\/android-developers.png","image_width":1201,"image_height":676,"image_bytes":31847,"service_icon":"https:\/\/www.gstatic.com\/devrel-devsite\/prod\/v80eb94e0352d656ad1e20abf6117cdec6c1343c7722ef10f52a1a3f77f1e58f7\/android\/images\/touchicon-180.png","id":4,"original_url":"https:\/\/developer.android.com\/kotlin\/learn","fallback":"Android Developers: Learn the Kotlin programming language \u00a0|\u00a0 Android Developers","title":"Learn the Kotlin programming language \u00a0|\u00a0 Android Developers","title_link":"https:\/\/developer.android.com\/kotlin\/learn","service_name":"Android Developers"},{"from_url":"https:\/\/medium.com\/@WasiqB\/locators-in-appium-with-example-f8762eed83d7","ts":1674664131,"image_url":"https:\/\/miro.medium.com\/v2\/resize:fit:1200\/1*_WaOnkdem3Z3GzBPIQ0EMg.png","image_width":1200,"image_height":675,"image_bytes":134482,"id":5,"original_url":"https:\/\/medium.com\/@WasiqB\/locators-in-appium-with-example-f8762eed83d7","fallback":"Medium: Locators In Appium [With Examples] | LambdaTest","text":"Know about all the supported locator strategies in Appium","title":"Locators In Appium [With Examples] | LambdaTest","title_link":"https:\/\/medium.com\/@WasiqB\/locators-in-appium-with-example-f8762eed83d7","service_name":"Medium","fields":[{"value":"19 min read","title":"Reading time","short":true}]}],"blocks":[{"type":"rich_text","block_id":"gQBW","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Your Query:","style":{"bold":true}},{"type":"text","text":" How to run test on Android\n\n"},{"type":"text","text":"Answer:","style":{"bold":true}},{"type":"text","text":"\n{'message_text': 'Running tests on Android can involve several methods, from basic development testing to automated suite execution. Here\\'s a breakdown based on the provided documents:\\n\\n### General Android Testing Fundamentals\\n\\nFor a foundational understanding of testing Android applications, you can refer to the official Android developer documentation:\\n*   **Fundamentals of testing Android apps:** ["},{"type":"link","url":"https:\/\/developer.android.com\/training\/testing\/fundamentals"},{"type":"text","text":"]("},{"type":"link","url":"https:\/\/developer.android.com\/training\/testing\/fundamentals"},{"type":"text","text":") (Source: "},{"type":"link","url":"https:\/\/paramount.atlassian.net\/wiki\/spaces\/PLQA\/pages\/47722061"},{"type":"text","text":")\\n*   **Running Apps on the Emulator:** ["},{"type":"link","url":"https:\/\/developer.android.com\/studio\/run\/emulator"},{"type":"text","text":"]("},{"type":"link","url":"https:\/\/developer.android.com\/studio\/run\/emulator"},{"type":"text","text":") (Source: "},{"type":"link","url":"https:\/\/paramount.atlassian.net\/wiki\/spaces\/PLQA\/pages\/47722061"},{"type":"text","text":")\\n\\nYou may also find these resources helpful:\\n*   **Basics of Android Studio:** ["},{"type":"link","url":"https:\/\/developer.android.com\/studio\/intro"},{"type":"text","text":"]("},{"type":"link","url":"https:\/\/developer.android.com\/studio\/intro"},{"type":"text","text":") (Source: "},{"type":"link","url":"https:\/\/paramount.atlassian.net\/wiki\/spaces\/PLQA\/pages\/47722061"},{"type":"text","text":")\\n*   **Learn Kotlin:** ["},{"type":"link","url":"https:\/\/developer.android.com\/kotlin\/learn"},{"type":"text","text":"]("},{"type":"link","url":"https:\/\/developer.android.com\/kotlin\/learn"},{"type":"text","text":") (Source: "},{"type":"link","url":"https:\/\/paramount.atlassian.net\/wiki\/spaces\/PLQA\/pages\/47722061"},{"type":"text","text":")\\n*   **Appium locator strategy:** ["},{"type":"link","url":"https:\/\/medium.com\/@WasiqB\/locators-in-appium-with-example-f8762eed83d7"},{"type":"text","text":"]("},{"type":"link","url":"https:\/\/medium.com\/@WasiqB\/locators-in-appium-with-example-f8762eed83d7"},{"type":"text","text":") (Source: "},{"type":"link","url":"https:\/\/paramount.atlassian.net\/wiki\/spaces\/PLQA\/pages\/47722061"},{"type":"text","text":")\\n\\n### Running Tests on a Local Simulator\/Emulator\\n\\nWhen running tests on a local Android Emulator, ensure your Run Configuration has the "},{"type":"text","text":"$ANDROID_HOME","style":{"code":true}},{"type":"text","text":" environment variable set and included in the path (Source: "},{"type":"link","url":"https:\/\/paramount.atlassian.net\/wiki\/spaces\/PLQA\/pages\/47713566"},{"type":"text","text":").\\n\\nIf you\\'re using a framework like TestNG with Appium, a "},{"type":"text","text":"SampleTest.java","style":{"code":true}},{"type":"text","text":" class might be used. This class would handle instantiating the mobile driver, starting\/stopping the Appium server, and managing the Android Emulator\/iOS Simulator (Source: "},{"type":"link","url":"https:\/\/paramount.atlassian.net\/wiki\/spaces\/PLQA\/pages\/47711460"},{"type":"text","text":").\n\n"},{"type":"text","text":"(message continued in thread...)","style":{"italic":true}}]}]}],"ts":"1755798135.250439"},"previous_message":{"user":"U099R6WTZ9S","type":"message","ts":"1755798135.250439","bot_id":"B099R6WTRU4","app_id":"A099LACAB2R","text":"*Your Query:* How to run test on Android\n\n*Answer:*\n{'message_text': 'Running tests on Android can involve several methods, from basic development testing to automated suite execution. Here\\'s a breakdown based on the provided documents:\\n\\n### General Android Testing Fundamentals\\n\\nFor a foundational understanding of testing Android applications, you can refer to the official Android developer documentation:\\n*   **Fundamentals of testing Android apps:** [<https:\/\/developer.android.com\/training\/testing\/fundamentals>](<https:\/\/developer.android.com\/training\/testing\/fundamentals>) (Source: <https:\/\/paramount.atlassian.net\/wiki\/spaces\/PLQA\/pages\/47722061>)\\n*   **Running Apps on the Emulator:** [<https:\/\/developer.android.com\/studio\/run\/emulator>](<https:\/\/developer.android.com\/studio\/run\/emulator>) (Source: <https:\/\/paramount.atlassian.net\/wiki\/spaces\/PLQA\/pages\/47722061>)\\n\\nYou may also find these resources helpful:\\n*   **Basics of Android Studio:** [<https:\/\/developer.android.com\/studio\/intro>](<https:\/\/developer.android.com\/studio\/intro>) (Source: <https:\/\/paramount.atlassian.net\/wiki\/spaces\/PLQA\/pages\/47722061>)\\n*   **Learn Kotlin:** [<https:\/\/developer.android.com\/kotlin\/learn>](<https:\/\/developer.android.com\/kotlin\/learn>) (Source: <https:\/\/paramount.atlassian.net\/wiki\/spaces\/PLQA\/pages\/47722061>)\\n*   **Appium locator strategy:** [<https:\/\/medium.com\/@WasiqB\/locators-in-appium-with-example-f8762eed83d7>](<https:\/\/medium.com\/@WasiqB\/locators-in-appium-with-example-f8762eed83d7>) (Source: <https:\/\/paramount.atlassian.net\/wiki\/spaces\/PLQA\/pages\/47722061>)\\n\\n### Running Tests on a Local Simulator\/Emulator\\n\\nWhen running tests on a local Android Emulator, ensure your Run Configuration has the `$ANDROID_HOME` environment variable set and included in the path (Source: <https:\/\/paramount.atlassian.net\/wiki\/spaces\/PLQA\/pages\/47713566>).\\n\\nIf you\\'re using a framework like TestNG with Appium, a `SampleTest.java` class might be used. This class would handle instantiating the mobile driver, starting\/stopping the Appium server, and managing the Android Emulator\/iOS Simulator (Source: <https:\/\/paramount.atlassian.net\/wiki\/spaces\/PLQA\/pages\/47711460>).\n\n_(message continued in thread...)_","team":"T010QS7UQNA","bot_profile":{"id":"B099R6WTRU4","app_id":"A099LACAB2R","user_id":"U099R6WTZ9S","name":"AutoBot","icons":{"image_36":"https:\/\/a.slack-edge.com\/80588\/img\/plugins\/app\/bot_36.png","image_48":"https:\/\/a.slack-edge.com\/80588\/img\/plugins\/app\/bot_48.png","image_72":"https:\/\/a.slack-edge.com\/80588\/img\/plugins\/app\/service_72.png"},"deleted":false,"updated":1754677948,"team_id":"T010QS7UQNA"},"thread_ts":"1755798116.274489","parent_user_id":"U01RMTFMALF","blocks":[{"type":"rich_text","block_id":"=y0","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Your Query:","style":{"bold":true}},{"type":"text","text":" How to run test on Android\n\n"},{"type":"text","text":"Answer:","style":{"bold":true}},{"type":"text","text":"\n{'message_text': 'Running tests on Android can involve several methods, from basic development testing to automated suite execution. Here\\'s a breakdown based on the provided documents:\\n\\n### General Android Testing Fundamentals\\n\\nFor a foundational understanding of testing Android applications, you can refer to the official Android developer documentation:\\n*   **Fundamentals of testing Android apps:** ["},{"type":"link","url":"https:\/\/developer.android.com\/training\/testing\/fundamentals"},{"type":"text","text":"]("},{"type":"link","url":"https:\/\/developer.android.com\/training\/testing\/fundamentals"},{"type":"text","text":") (Source: "},{"type":"link","url":"https:\/\/paramount.atlassian.net\/wiki\/spaces\/PLQA\/pages\/47722061"},{"type":"text","text":")\\n*   **Running Apps on the Emulator:** ["},{"type":"link","url":"https:\/\/developer.android.com\/studio\/run\/emulator"},{"type":"text","text":"]("},{"type":"link","url":"https:\/\/developer.android.com\/studio\/run\/emulator"},{"type":"text","text":") (Source: "},{"type":"link","url":"https:\/\/paramount.atlassian.net\/wiki\/spaces\/PLQA\/pages\/47722061"},{"type":"text","text":")\\n\\nYou may also find these resources helpful:\\n*   **Basics of Android Studio:** ["},{"type":"link","url":"https:\/\/developer.android.com\/studio\/intro"},{"type":"text","text":"]("},{"type":"link","url":"https:\/\/developer.android.com\/studio\/intro"},{"type":"text","text":") (Source: "},{"type":"link","url":"https:\/\/paramount.atlassian.net\/wiki\/spaces\/PLQA\/pages\/47722061"},{"type":"text","text":")\\n*   **Learn Kotlin:** ["},{"type":"link","url":"https:\/\/developer.android.com\/kotlin\/learn"},{"type":"text","text":"]("},{"type":"link","url":"https:\/\/developer.android.com\/kotlin\/learn"},{"type":"text","text":") (Source: "},{"type":"link","url":"https:\/\/paramount.atlassian.net\/wiki\/spaces\/PLQA\/pages\/47722061"},{"type":"text","text":")\\n*   **Appium locator strategy:** ["},{"type":"link","url":"https:\/\/medium.com\/@WasiqB\/locators-in-appium-with-example-f8762eed83d7"},{"type":"text","text":"]("},{"type":"link","url":"https:\/\/medium.com\/@WasiqB\/locators-in-appium-with-example-f8762eed83d7"},{"type":"text","text":") (Source: "},{"type":"link","url":"https:\/\/paramount.atlassian.net\/wiki\/spaces\/PLQA\/pages\/47722061"},{"type":"text","text":")\\n\\n### Running Tests on a Local Simulator\/Emulator\\n\\nWhen running tests on a local Android Emulator, ensure your Run Configuration has the "},{"type":"text","text":"$ANDROID_HOME","style":{"code":true}},{"type":"text","text":" environment variable set and included in the path (Source: "},{"type":"link","url":"https:\/\/paramount.atlassian.net\/wiki\/spaces\/PLQA\/pages\/47713566"},{"type":"text","text":").\\n\\nIf you\\'re using a framework like TestNG with Appium, a "},{"type":"text","text":"SampleTest.java","style":{"code":true}},{"type":"text","text":" class might be used. This class would handle instantiating the mobile driver, starting\/stopping the Appium server, and managing the Android Emulator\/iOS Simulator (Source: "},{"type":"link","url":"https:\/\/paramount.atlassian.net\/wiki\/spaces\/PLQA\/pages\/47711460"},{"type":"text","text":").\n\n"},{"type":"text","text":"(message continued in thread...)","style":{"italic":true}}]}]}]},"channel":"D09A0LFHK8R","hidden":true,"ts":"1755798145.000600","event_ts":"1755798145.000600","channel_type":"im"},"type":"event_callback","event_id":"Ev09C97ENH5E","event_time":1755798145,"authorizations":[{"enterprise_id":"ERV4P7NAD","team_id":"T010QS7UQNA","user_id":"U099R6WTZ9S","is_bot":true,"is_enterprise_install":false}],"is_ext_shared_channel":false,"event_context":"4-eyJldCI6Im1lc3NhZ2UiLCJ0aWQiOiJUMDEwUVM3VVFOQSIsImFpZCI6IkEwOTlMQUNBQjJSIiwiY2lkIjoiRDA5QTBMRkhLOFIifQ"},"type":"events_api","accepts_response_payload":false,"retry_attempt":0,"retry_reason":""})
2025-08-21 10:42:25,857 - slack_bolt.App - DEBUG - [client.py:99] - A new message enqueued (current queue size: 1)
2025-08-21 10:42:25,857 - slack_bolt.App - DEBUG - [client.py:105] - A message dequeued (current queue size: 0)
2025-08-21 10:42:25,858 - slack_bolt.App - DEBUG - [client.py:125] - Message processing started (type: events_api, envelope_id: 427102e0-69cd-4316-8875-c7aaf773b3db)
2025-08-21 10:42:25,858 - slack_bolt.App - DEBUG - [app.py:476] - Applying slack_bolt.middleware.ssl_check.ssl_check.SslCheck
2025-08-21 10:42:25,859 - slack_bolt.App - DEBUG - [app.py:476] - Applying slack_bolt.middleware.request_verification.request_verification.RequestVerification
2025-08-21 10:42:25,859 - slack_bolt.App - DEBUG - [app.py:476] - Applying slack_bolt.middleware.authorization.single_team_authorization.SingleTeamAuthorization
2025-08-21 10:42:25,859 - slack_bolt.App - DEBUG - [app.py:476] - Applying slack_bolt.middleware.ignoring_self_events.ignoring_self_events.IgnoringSelfEvents
2025-08-21 10:42:25,859 - slack_bolt.IgnoringSelfEvents - DEBUG - [ignoring_self_events.py:60] - Skipped self event: {'type': 'message', 'subtype': 'message_changed', 'message': {'user': 'U099R6WTZ9S', 'type': 'message', 'bot_id': 'B099R6WTRU4', 'app_id': 'A099LACAB2R', 'text': "*Your Query:* How to run test on Android\n\n*Answer:*\n{'message_text': 'Running tests on Android can involve several methods, from basic development testing to automated suite execution. Here\\'s a breakdown based on the provided documents:\\n\\n### General Android Testing Fundamentals\\n\\nFor a foundational understanding of testing Android applications, you can refer to the official Android developer documentation:\\n*   **Fundamentals of testing Android apps:** [<https://developer.android.com/training/testing/fundamentals>](<https://developer.android.com/training/testing/fundamentals>) (Source: <https://paramount.atlassian.net/wiki/spaces/PLQA/pages/47722061>)\\n*   **Running Apps on the Emulator:** [<https://developer.android.com/studio/run/emulator>](<https://developer.android.com/studio/run/emulator>) (Source: <https://paramount.atlassian.net/wiki/spaces/PLQA/pages/47722061>)\\n\\nYou may also find these resources helpful:\\n*   **Basics of Android Studio:** [<https://developer.android.com/studio/intro>](<https://developer.android.com/studio/intro>) (Source: <https://paramount.atlassian.net/wiki/spaces/PLQA/pages/47722061>)\\n*   **Learn Kotlin:** [<https://developer.android.com/kotlin/learn>](<https://developer.android.com/kotlin/learn>) (Source: <https://paramount.atlassian.net/wiki/spaces/PLQA/pages/47722061>)\\n*   **Appium locator strategy:** [<https://medium.com/@WasiqB/locators-in-appium-with-example-f8762eed83d7>](<https://medium.com/@WasiqB/locators-in-appium-with-example-f8762eed83d7>) (Source: <https://paramount.atlassian.net/wiki/spaces/PLQA/pages/47722061>)\\n\\n### Running Tests on a Local Simulator/Emulator\\n\\nWhen running tests on a local Android Emulator, ensure your Run Configuration has the `$ANDROID_HOME` environment variable set and included in the path (Source: <https://paramount.atlassian.net/wiki/spaces/PLQA/pages/47713566>).\\n\\nIf you\\'re using a framework like TestNG with Appium, a `SampleTest.java` class might be used. This class would handle instantiating the mobile driver, starting/stopping the Appium server, and managing the Android Emulator/iOS Simulator (Source: <https://paramount.atlassian.net/wiki/spaces/PLQA/pages/47711460>).\n\n_(message continued in thread...)_", 'team': 'T010QS7UQNA', 'bot_profile': {'id': 'B099R6WTRU4', 'deleted': False, 'name': 'AutoBot', 'updated': 1754677948, 'app_id': 'A099LACAB2R', 'user_id': 'U099R6WTZ9S', 'icons': {'image_36': 'https://a.slack-edge.com/80588/img/plugins/app/bot_36.png', 'image_48': 'https://a.slack-edge.com/80588/img/plugins/app/bot_48.png', 'image_72': 'https://a.slack-edge.com/80588/img/plugins/app/service_72.png'}, 'team_id': 'T010QS7UQNA'}, 'thread_ts': '1755798116.274489', 'parent_user_id': 'U01RMTFMALF', 'attachments': [{'from_url': 'https://developer.android.com/training/testing/fundamentals', 'image_url': 'https://developer.android.com/static/images/social/android-developers.png', 'image_width': 1201, 'image_height': 676, 'image_bytes': 31847, 'service_icon': 'https://www.gstatic.com/devrel-devsite/prod/v80eb94e0352d656ad1e20abf6117cdec6c1343c7722ef10f52a1a3f77f1e58f7/android/images/touchicon-180.png', 'id': 1, 'original_url': 'https://developer.android.com/training/testing/fundamentals', 'fallback': 'Android Developers: Fundamentals of testing Android apps \xa0|\xa0 Test your app on Android \xa0|\xa0 Android Developers', 'title': 'Fundamentals of testing Android apps \xa0|\xa0 Test your app on Android \xa0|\xa0 Android Developers', 'title_link': 'https://developer.android.com/training/testing/fundamentals', 'service_name': 'Android Developers'}, {'from_url': 'https://developer.android.com/studio/run/emulator', 'image_url': 'https://developer.android.com/static/images/social/android-developers.png', 'image_width': 1201, 'image_height': 676, 'image_bytes': 31847, 'service_icon': 'https://www.gstatic.com/devrel-devsite/prod/v80eb94e0352d656ad1e20abf6117cdec6c1343c7722ef10f52a1a3f77f1e58f7/android/images/touchicon-180.png', 'id': 2, 'original_url': 'https://developer.android.com/studio/run/emulator', 'fallback': 'Android Developers: Run apps on the Android Emulator \xa0|\xa0 Android Studio \xa0|\xa0 Android Developers', 'text': 'The Android Emulator simulates Android devices on your computer so that you can test your app on a variety of devices and Android API levels without needing to have each physical device.', 'title': 'Run apps on the Android Emulator \xa0|\xa0 Android Studio \xa0|\xa0 Android Developers', 'title_link': 'https://developer.android.com/studio/run/emulator', 'service_name': 'Android Developers'}, {'from_url': 'https://developer.android.com/studio/intro', 'image_url': 'https://developer.android.com/static/images/social/android-developers.png', 'image_width': 1201, 'image_height': 676, 'image_bytes': 31847, 'service_icon': 'https://www.gstatic.com/devrel-devsite/prod/v80eb94e0352d656ad1e20abf6117cdec6c1343c7722ef10f52a1a3f77f1e58f7/android/images/touchicon-180.png', 'id': 3, 'original_url': 'https://developer.android.com/studio/intro', 'fallback': 'Android Developers: Meet Android Studio \xa0|\xa0 Android Developers', 'text': 'Android Studio is the official Integrated Development Environment (IDE) for Android app development, based on IntelliJ IDEA.', 'title': 'Meet Android Studio \xa0|\xa0 Android Developers', 'title_link': 'https://developer.android.com/studio/intro', 'service_name': 'Android Developers'}, {'from_url': 'https://developer.android.com/kotlin/learn', 'image_url': 'https://developer.android.com/static/images/social/android-developers.png', 'image_width': 1201, 'image_height': 676, 'image_bytes': 31847, 'service_icon': 'https://www.gstatic.com/devrel-devsite/prod/v80eb94e0352d656ad1e20abf6117cdec6c1343c7722ef10f52a1a3f77f1e58f7/android/images/touchicon-180.png', 'id': 4, 'original_url': 'https://developer.android.com/kotlin/learn', 'fallback': 'Android Developers: Learn the Kotlin programming language \xa0|\xa0 Android Developers', 'title': 'Learn the Kotlin programming language \xa0|\xa0 Android Developers', 'title_link': 'https://developer.android.com/kotlin/learn', 'service_name': 'Android Developers'}, {'from_url': 'https://medium.com/@WasiqB/locators-in-appium-with-example-f8762eed83d7', 'ts': 1674664131, 'image_url': 'https://miro.medium.com/v2/resize:fit:1200/1*_WaOnkdem3Z3GzBPIQ0EMg.png', 'image_width': 1200, 'image_height': 675, 'image_bytes': 134482, 'id': 5, 'original_url': 'https://medium.com/@WasiqB/locators-in-appium-with-example-f8762eed83d7', 'fallback': 'Medium: Locators In Appium [With Examples] | LambdaTest', 'text': 'Know about all the supported locator strategies in Appium', 'title': 'Locators In Appium [With Examples] | LambdaTest', 'title_link': 'https://medium.com/@WasiqB/locators-in-appium-with-example-f8762eed83d7', 'service_name': 'Medium', 'fields': [{'value': '19 min read', 'title': 'Reading time', 'short': True}]}], 'blocks': [{'type': 'rich_text', 'block_id': 'gQBW', 'elements': [{'type': 'rich_text_section', 'elements': [{'type': 'text', 'text': 'Your Query:', 'style': {'bold': True}}, {'type': 'text', 'text': ' How to run test on Android\n\n'}, {'type': 'text', 'text': 'Answer:', 'style': {'bold': True}}, {'type': 'text', 'text': "\n{'message_text': 'Running tests on Android can involve several methods, from basic development testing to automated suite execution. Here\\'s a breakdown based on the provided documents:\\n\\n### General Android Testing Fundamentals\\n\\nFor a foundational understanding of testing Android applications, you can refer to the official Android developer documentation:\\n*   **Fundamentals of testing Android apps:** ["}, {'type': 'link', 'url': 'https://developer.android.com/training/testing/fundamentals'}, {'type': 'text', 'text': ']('}, {'type': 'link', 'url': 'https://developer.android.com/training/testing/fundamentals'}, {'type': 'text', 'text': ') (Source: '}, {'type': 'link', 'url': 'https://paramount.atlassian.net/wiki/spaces/PLQA/pages/47722061'}, {'type': 'text', 'text': ')\\n*   **Running Apps on the Emulator:** ['}, {'type': 'link', 'url': 'https://developer.android.com/studio/run/emulator'}, {'type': 'text', 'text': ']('}, {'type': 'link', 'url': 'https://developer.android.com/studio/run/emulator'}, {'type': 'text', 'text': ') (Source: '}, {'type': 'link', 'url': 'https://paramount.atlassian.net/wiki/spaces/PLQA/pages/47722061'}, {'type': 'text', 'text': ')\\n\\nYou may also find these resources helpful:\\n*   **Basics of Android Studio:** ['}, {'type': 'link', 'url': 'https://developer.android.com/studio/intro'}, {'type': 'text', 'text': ']('}, {'type': 'link', 'url': 'https://developer.android.com/studio/intro'}, {'type': 'text', 'text': ') (Source: '}, {'type': 'link', 'url': 'https://paramount.atlassian.net/wiki/spaces/PLQA/pages/47722061'}, {'type': 'text', 'text': ')\\n*   **Learn Kotlin:** ['}, {'type': 'link', 'url': 'https://developer.android.com/kotlin/learn'}, {'type': 'text', 'text': ']('}, {'type': 'link', 'url': 'https://developer.android.com/kotlin/learn'}, {'type': 'text', 'text': ') (Source: '}, {'type': 'link', 'url': 'https://paramount.atlassian.net/wiki/spaces/PLQA/pages/47722061'}, {'type': 'text', 'text': ')\\n*   **Appium locator strategy:** ['}, {'type': 'link', 'url': 'https://medium.com/@WasiqB/locators-in-appium-with-example-f8762eed83d7'}, {'type': 'text', 'text': ']('}, {'type': 'link', 'url': 'https://medium.com/@WasiqB/locators-in-appium-with-example-f8762eed83d7'}, {'type': 'text', 'text': ') (Source: '}, {'type': 'link', 'url': 'https://paramount.atlassian.net/wiki/spaces/PLQA/pages/47722061'}, {'type': 'text', 'text': ')\\n\\n### Running Tests on a Local Simulator/Emulator\\n\\nWhen running tests on a local Android Emulator, ensure your Run Configuration has the '}, {'type': 'text', 'text': '$ANDROID_HOME', 'style': {'code': True}}, {'type': 'text', 'text': ' environment variable set and included in the path (Source: '}, {'type': 'link', 'url': 'https://paramount.atlassian.net/wiki/spaces/PLQA/pages/47713566'}, {'type': 'text', 'text': ").\\n\\nIf you\\'re using a framework like TestNG with Appium, a "}, {'type': 'text', 'text': 'SampleTest.java', 'style': {'code': True}}, {'type': 'text', 'text': ' class might be used. This class would handle instantiating the mobile driver, starting/stopping the Appium server, and managing the Android Emulator/iOS Simulator (Source: '}, {'type': 'link', 'url': 'https://paramount.atlassian.net/wiki/spaces/PLQA/pages/47711460'}, {'type': 'text', 'text': ').\n\n'}, {'type': 'text', 'text': '(message continued in thread...)', 'style': {'italic': True}}]}]}], 'ts': '1755798135.250439'}, 'previous_message': {'user': 'U099R6WTZ9S', 'type': 'message', 'ts': '1755798135.250439', 'bot_id': 'B099R6WTRU4', 'app_id': 'A099LACAB2R', 'text': "*Your Query:* How to run test on Android\n\n*Answer:*\n{'message_text': 'Running tests on Android can involve several methods, from basic development testing to automated suite execution. Here\\'s a breakdown based on the provided documents:\\n\\n### General Android Testing Fundamentals\\n\\nFor a foundational understanding of testing Android applications, you can refer to the official Android developer documentation:\\n*   **Fundamentals of testing Android apps:** [<https://developer.android.com/training/testing/fundamentals>](<https://developer.android.com/training/testing/fundamentals>) (Source: <https://paramount.atlassian.net/wiki/spaces/PLQA/pages/47722061>)\\n*   **Running Apps on the Emulator:** [<https://developer.android.com/studio/run/emulator>](<https://developer.android.com/studio/run/emulator>) (Source: <https://paramount.atlassian.net/wiki/spaces/PLQA/pages/47722061>)\\n\\nYou may also find these resources helpful:\\n*   **Basics of Android Studio:** [<https://developer.android.com/studio/intro>](<https://developer.android.com/studio/intro>) (Source: <https://paramount.atlassian.net/wiki/spaces/PLQA/pages/47722061>)\\n*   **Learn Kotlin:** [<https://developer.android.com/kotlin/learn>](<https://developer.android.com/kotlin/learn>) (Source: <https://paramount.atlassian.net/wiki/spaces/PLQA/pages/47722061>)\\n*   **Appium locator strategy:** [<https://medium.com/@WasiqB/locators-in-appium-with-example-f8762eed83d7>](<https://medium.com/@WasiqB/locators-in-appium-with-example-f8762eed83d7>) (Source: <https://paramount.atlassian.net/wiki/spaces/PLQA/pages/47722061>)\\n\\n### Running Tests on a Local Simulator/Emulator\\n\\nWhen running tests on a local Android Emulator, ensure your Run Configuration has the `$ANDROID_HOME` environment variable set and included in the path (Source: <https://paramount.atlassian.net/wiki/spaces/PLQA/pages/47713566>).\\n\\nIf you\\'re using a framework like TestNG with Appium, a `SampleTest.java` class might be used. This class would handle instantiating the mobile driver, starting/stopping the Appium server, and managing the Android Emulator/iOS Simulator (Source: <https://paramount.atlassian.net/wiki/spaces/PLQA/pages/47711460>).\n\n_(message continued in thread...)_", 'team': 'T010QS7UQNA', 'bot_profile': {'id': 'B099R6WTRU4', 'app_id': 'A099LACAB2R', 'user_id': 'U099R6WTZ9S', 'name': 'AutoBot', 'icons': {'image_36': 'https://a.slack-edge.com/80588/img/plugins/app/bot_36.png', 'image_48': 'https://a.slack-edge.com/80588/img/plugins/app/bot_48.png', 'image_72': 'https://a.slack-edge.com/80588/img/plugins/app/service_72.png'}, 'deleted': False, 'updated': 1754677948, 'team_id': 'T010QS7UQNA'}, 'thread_ts': '1755798116.274489', 'parent_user_id': 'U01RMTFMALF', 'blocks': [{'type': 'rich_text', 'block_id': '=y0', 'elements': [{'type': 'rich_text_section', 'elements': [{'type': 'text', 'text': 'Your Query:', 'style': {'bold': True}}, {'type': 'text', 'text': ' How to run test on Android\n\n'}, {'type': 'text', 'text': 'Answer:', 'style': {'bold': True}}, {'type': 'text', 'text': "\n{'message_text': 'Running tests on Android can involve several methods, from basic development testing to automated suite execution. Here\\'s a breakdown based on the provided documents:\\n\\n### General Android Testing Fundamentals\\n\\nFor a foundational understanding of testing Android applications, you can refer to the official Android developer documentation:\\n*   **Fundamentals of testing Android apps:** ["}, {'type': 'link', 'url': 'https://developer.android.com/training/testing/fundamentals'}, {'type': 'text', 'text': ']('}, {'type': 'link', 'url': 'https://developer.android.com/training/testing/fundamentals'}, {'type': 'text', 'text': ') (Source: '}, {'type': 'link', 'url': 'https://paramount.atlassian.net/wiki/spaces/PLQA/pages/47722061'}, {'type': 'text', 'text': ')\\n*   **Running Apps on the Emulator:** ['}, {'type': 'link', 'url': 'https://developer.android.com/studio/run/emulator'}, {'type': 'text', 'text': ']('}, {'type': 'link', 'url': 'https://developer.android.com/studio/run/emulator'}, {'type': 'text', 'text': ') (Source: '}, {'type': 'link', 'url': 'https://paramount.atlassian.net/wiki/spaces/PLQA/pages/47722061'}, {'type': 'text', 'text': ')\\n\\nYou may also find these resources helpful:\\n*   **Basics of Android Studio:** ['}, {'type': 'link', 'url': 'https://developer.android.com/studio/intro'}, {'type': 'text', 'text': ']('}, {'type': 'link', 'url': 'https://developer.android.com/studio/intro'}, {'type': 'text', 'text': ') (Source: '}, {'type': 'link', 'url': 'https://paramount.atlassian.net/wiki/spaces/PLQA/pages/47722061'}, {'type': 'text', 'text': ')\\n*   **Learn Kotlin:** ['}, {'type': 'link', 'url': 'https://developer.android.com/kotlin/learn'}, {'type': 'text', 'text': ']('}, {'type': 'link', 'url': 'https://developer.android.com/kotlin/learn'}, {'type': 'text', 'text': ') (Source: '}, {'type': 'link', 'url': 'https://paramount.atlassian.net/wiki/spaces/PLQA/pages/47722061'}, {'type': 'text', 'text': ')\\n*   **Appium locator strategy:** ['}, {'type': 'link', 'url': 'https://medium.com/@WasiqB/locators-in-appium-with-example-f8762eed83d7'}, {'type': 'text', 'text': ']('}, {'type': 'link', 'url': 'https://medium.com/@WasiqB/locators-in-appium-with-example-f8762eed83d7'}, {'type': 'text', 'text': ') (Source: '}, {'type': 'link', 'url': 'https://paramount.atlassian.net/wiki/spaces/PLQA/pages/47722061'}, {'type': 'text', 'text': ')\\n\\n### Running Tests on a Local Simulator/Emulator\\n\\nWhen running tests on a local Android Emulator, ensure your Run Configuration has the '}, {'type': 'text', 'text': '$ANDROID_HOME', 'style': {'code': True}}, {'type': 'text', 'text': ' environment variable set and included in the path (Source: '}, {'type': 'link', 'url': 'https://paramount.atlassian.net/wiki/spaces/PLQA/pages/47713566'}, {'type': 'text', 'text': ").\\n\\nIf you\\'re using a framework like TestNG with Appium, a "}, {'type': 'text', 'text': 'SampleTest.java', 'style': {'code': True}}, {'type': 'text', 'text': ' class might be used. This class would handle instantiating the mobile driver, starting/stopping the Appium server, and managing the Android Emulator/iOS Simulator (Source: '}, {'type': 'link', 'url': 'https://paramount.atlassian.net/wiki/spaces/PLQA/pages/47711460'}, {'type': 'text', 'text': ').\n\n'}, {'type': 'text', 'text': '(message continued in thread...)', 'style': {'italic': True}}]}]}]}, 'channel': 'D09A0LFHK8R', 'hidden': True, 'ts': '1755798145.000600', 'event_ts': '1755798145.000600', 'channel_type': 'im'}
2025-08-21 10:42:25,864 - slack_bolt.App - DEBUG - [client.py:200] - Sending a message (session id: 9caa291c-f50f-4808-a579-72eed6c2a372, message: {"envelope_id": "427102e0-69cd-4316-8875-c7aaf773b3db"})
2025-08-21 10:42:25,864 - slack_bolt.App - DEBUG - [internals.py:41] - Response time: 5 milliseconds
2025-08-21 10:42:25,864 - slack_bolt.App - DEBUG - [client.py:150] - Message processing completed (type: events_api, envelope_id: 427102e0-69cd-4316-8875-c7aaf773b3db)
2025-08-21 10:48:32,352 - __main__ - INFO - [main.py:41] - Loading application configuration...
2025-08-21 10:48:32,352 - __main__ - INFO - [main.py:43] - Configuration loaded successfully
2025-08-21 10:48:32,352 - __main__ - INFO - [main.py:46] - Initializing security components...
2025-08-21 10:48:32,352 - __main__ - DEBUG - [main.py:48] - Slack validator initialized
2025-08-21 10:48:32,352 - security.content_filter - INFO - [content_filter.py:39] - Content filter initialized with 11 patterns
2025-08-21 10:48:32,352 - __main__ - DEBUG - [main.py:51] - Content filter initialized
2025-08-21 10:48:32,352 - auth.admin_manager - INFO - [admin_manager.py:27] - Admin manager initialized with 2 admin users
2025-08-21 10:48:32,352 - __main__ - DEBUG - [main.py:54] - Admin manager initialized
2025-08-21 10:48:32,352 - __main__ - INFO - [main.py:55] - Security components initialized successfully
2025-08-21 10:48:32,352 - __main__ - INFO - [main.py:58] - Initializing Slack app...
2025-08-21 10:48:32,388 - slack_bolt.App - DEBUG - [base_client.py:255] - Sending a request - url: https://slack.com/api/auth.test, query_params: {}, body_params: {}, files: {}, json_body: None, headers: {'Content-Type': 'application/x-www-form-urlencoded', 'Authorization': '(redacted)', 'User-Agent': 'Bolt/1.16.0 Python/3.12.0 slackclient/3.34.0 Darwin/23.4.0'}
2025-08-21 10:48:32,782 - slack_bolt.App - DEBUG - [base_client.py:546] - Received the following response - status: 200, headers: {'date': 'Thu, 21 Aug 2025 17:48:32 GMT', 'server': 'Apache', 'vary': 'Accept-Encoding', 'x-slack-req-id': '67d3d0f61643146bee04f4b717094846', 'x-content-type-options': 'nosniff', 'x-xss-protection': '0', 'pragma': 'no-cache', 'cache-control': 'private, no-cache, no-store, must-revalidate', 'expires': 'Sat, 26 Jul 1997 05:00:00 GMT', 'content-type': 'application/json; charset=utf-8', 'x-oauth-scopes': 'app_mentions:read,channels:history,chat:write,im:history,im:read,im:write,users:read,reactions:write', 'access-control-expose-headers': 'x-slack-req-id, retry-after', 'access-control-allow-headers': 'slack-route, x-slack-version-ts, x-b3-traceid, x-b3-spanid, x-b3-parentspanid, x-b3-sampled, x-b3-flags', 'strict-transport-security': 'max-age=31536000; includeSubDomains; preload', 'referrer-policy': 'no-referrer', 'x-slack-unique-id': 'aKdb8NKQ1K4mNyqGOuYWGwAAACs', 'x-slack-backend': 'r', 'access-control-allow-origin': '*', 'content-length': '228', 'via': '1.1 slack-prod.tinyspeck.com, envoy-www-iad-issedfgk,envoy-edge-pdx-eaxhvyfi', 'x-envoy-attempt-count': '1', 'x-envoy-upstream-service-time': '84', 'x-backend': 'main_normal main_canary_with_overflow main_control_with_overflow', 'x-server': 'slack-www-hhvm-main-iad-mfrb', 'x-slack-shared-secret-outcome': 'no-match', 'x-edge-backend': 'envoy-www', 'timing-allow-origin': '*', 'x-slack-edge-shared-secret-outcome': 'no-match', 'connection': 'close'}, body: {"ok":true,"url":"https://viacomcbs-grid-test.slack.com/","team":"Test Workspace","user":"autobot","team_id":"T010QS7UQNA","user_id":"U099R6WTZ9S","bot_id":"B099R6WTRU4","enterprise_id":"ERV4P7NAD","is_enterprise_install":false}
2025-08-21 10:48:32,783 - __main__ - INFO - [main.py:60] - Slack app initialized successfully
2025-08-21 10:48:32,783 - __main__ - DEBUG - [main.py:64] - Message deduplication cache initialized
2025-08-21 10:48:32,783 - __main__ - DEBUG - [main.py:69] - Thread tracking initialized
2025-08-21 10:48:32,783 - __main__ - INFO - [main.py:72] - Initializing DIG AI integration...
2025-08-21 10:48:32,783 - __main__ - INFO - [main.py:75] - DIG AI is enabled, setting up connector...
2025-08-21 10:48:32,783 - dig_connector - INFO - [dig_connector.py:272] - Initializing DIG AI with model ID: 42
2025-08-21 10:48:32,784 - dig_connector - INFO - [dig_connector.py:49] - Starting DIG chat session initialization...
2025-08-21 10:48:32,784 - dig_connector - DEBUG - [dig_connector.py:52] - Creating chat with name: Slack Bot Session 2025-08-21T17:48:32.784372+00:00
2025-08-21 10:48:32,784 - dig_connector - DEBUG - [dig_connector.py:63] - Creating chat - URL: https://ai.digdev.cbsicloud.com/fastapi/chats, Payload: {'chat_nm': 'Slack Bot Session 2025-08-21T17:48:32.784372+00:00', 'model_id': 42}
2025-08-21 10:48:32,788 - urllib3.connectionpool - DEBUG - [connectionpool.py:1055] - Starting new HTTPS connection (1): ai.digdev.cbsicloud.com:443
2025-08-21 10:48:33,057 - urllib3.connectionpool - DEBUG - [connectionpool.py:549] - https://ai.digdev.cbsicloud.com:443 "POST /fastapi/chats HTTP/1.1" 200 217
2025-08-21 10:48:33,057 - dig_connector - DEBUG - [dig_connector.py:66] - Create chat response: status=200
2025-08-21 10:48:33,057 - dig_connector - INFO - [dig_connector.py:54] - Successfully initialized DIG chat session with ID: 851
2025-08-21 10:48:33,057 - __main__ - INFO - [main.py:78] - DIG AI integration successfully initialized
2025-08-21 10:48:33,057 - __main__ - INFO - [main.py:84] - Setting up event handlers...
2025-08-21 10:48:33,058 - __main__ - INFO - [main.py:543] - Starting AI Assistant Bot...
2025-08-21 10:48:33,058 - __main__ - INFO - [main.py:544] - Registering event handlers...
2025-08-21 10:48:33,058 - __main__ - DEBUG - [main.py:545] - Event handlers registered: app_mention, message, app_home_opened
2025-08-21 10:48:33,058 - __main__ - INFO - [main.py:548] - Connecting to Slack via Socket Mode...
2025-08-21 10:48:33,058 - __main__ - INFO - [main.py:552] - Socket Mode handler created successfully
2025-08-21 10:48:33,058 - __main__ - INFO - [main.py:554] - ✅ Bot is now running and listening for events!
2025-08-21 10:48:33,058 - slack_bolt.App - DEBUG - [base_client.py:255] - Sending a request - url: https://slack.com/api/apps.connections.open, query_params: {}, body_params: {}, files: {}, json_body: None, headers: {'Content-Type': 'application/x-www-form-urlencoded', 'Authorization': '(redacted)', 'User-Agent': 'Bolt/1.16.0 Python/3.12.0 slackclient/3.34.0 Darwin/23.4.0'}
2025-08-21 10:48:33,355 - slack_bolt.App - DEBUG - [base_client.py:546] - Received the following response - status: 200, headers: {'date': 'Thu, 21 Aug 2025 17:48:33 GMT', 'server': 'Apache', 'vary': 'Accept-Encoding', 'x-slack-req-id': '82ffcacf81045f9c5a1ae196d8d8c8fc', 'x-content-type-options': 'nosniff', 'x-xss-protection': '0', 'x-robots-tag': 'noindex,nofollow', 'pragma': 'no-cache', 'cache-control': 'private, no-cache, no-store, must-revalidate', 'expires': 'Sat, 26 Jul 1997 05:00:00 GMT', 'content-type': 'application/json; charset=utf-8', 'x-accepted-oauth-scopes': 'connections:write', 'x-oauth-scopes': 'connections:write', 'access-control-expose-headers': 'x-slack-req-id, retry-after', 'access-control-allow-headers': 'slack-route, x-slack-version-ts, x-b3-traceid, x-b3-spanid, x-b3-parentspanid, x-b3-sampled, x-b3-flags', 'strict-transport-security': 'max-age=31536000; includeSubDomains; preload', 'referrer-policy': 'no-referrer', 'x-slack-unique-id': 'aKdb8VFnub9ft47HKB1kTQAAACU', 'x-slack-backend': 'r', 'access-control-allow-origin': '*', 'content-length': '173', 'via': '1.1 slack-prod.tinyspeck.com, envoy-www-iad-vqtwjxzp,envoy-edge-pdx-dnhgizxz', 'x-envoy-attempt-count': '1', 'x-envoy-upstream-service-time': '78', 'x-backend': 'main_normal main_canary_with_overflow main_control_with_overflow', 'x-server': 'slack-www-hhvm-main-iad-czne', 'x-slack-shared-secret-outcome': 'no-match', 'x-edge-backend': 'envoy-www', 'timing-allow-origin': '*', 'x-slack-edge-shared-secret-outcome': 'no-match', 'connection': 'close'}, body: {"ok":true,"url":"wss:\/\/wss-primary.slack.com\/link\/?ticket=c982126a-75e2-4e55-9cb9-1cfd58e7808a&app_id=a6c8d361ee1c6f398c5b4afec831555b78d7affa753b16bcc0fc64d7c13f3766"}
2025-08-21 10:48:33,863 - slack_bolt.App - INFO - [client.py:192] - A new session has been established (session id: 2cb285af-1f2a-4f9e-bd72-01134d12e664)
2025-08-21 10:48:33,863 - slack_bolt.App - INFO - [base_handler.py:50] - ⚡️ Bolt app is running!
2025-08-21 10:48:33,895 - slack_bolt.App - INFO - [client.py:265] - Starting to receive messages from a new connection (session id: 2cb285af-1f2a-4f9e-bd72-01134d12e664)
2025-08-21 10:48:33,895 - slack_bolt.App - DEBUG - [client.py:235] - on_message invoked: (message: {"type":"hello","num_connections":1,"debug_info":{"host":"applink-6","build_number":0,"approximate_connection_time":18060},"connection_info":{"app_id":"A099LACAB2R"}})
2025-08-21 10:48:33,895 - slack_bolt.App - DEBUG - [client.py:99] - A new message enqueued (current queue size: 1)
2025-08-21 10:48:33,895 - slack_bolt.App - DEBUG - [client.py:105] - A message dequeued (current queue size: 0)
2025-08-21 10:48:33,895 - slack_bolt.App - DEBUG - [client.py:125] - Message processing started (type: hello, envelope_id: None)
2025-08-21 10:48:33,896 - slack_bolt.App - DEBUG - [client.py:150] - Message processing completed (type: hello, envelope_id: None)
2025-08-21 10:48:38,400 - slack_bolt.App - DEBUG - [client.py:235] - on_message invoked: (message: {"envelope_id":"513acee0-1807-412c-993b-7fb347107079","payload":{"token":"yq71khZBCyJF1Ri2hG5aNqr5","team_id":"T010QS7UQNA","enterprise_id":"ERV4P7NAD","context_team_id":null,"context_enterprise_id":"ERV4P7NAD","api_app_id":"A099LACAB2R","event":{"user":"U01RMTFMALF","type":"message","ts":"1755798517.860049","client_msg_id":"a53e5c27-e0f8-4927-8159-445d8bdd5408","text":"How to get access to jenkins?","blocks":[{"type":"rich_text","block_id":"jBTYB","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"How to get access to jenkins?"}]}]}],"channel":"D09A0LFHK8R","event_ts":"1755798517.860049","channel_type":"im"},"type":"event_callback","event_id":"Ev09B3EUG407","event_time":1755798517,"authorizations":[{"enterprise_id":"ERV4P7NAD","team_id":"T010QS7UQNA","user_id":"U099R6WTZ9S","is_bot":true,"is_enterprise_install":false}],"is_ext_shared_channel":false,"event_context":"4-eyJldCI6Im1lc3NhZ2UiLCJ0aWQiOiJUMDEwUVM3VVFOQSIsImFpZCI6IkEwOTlMQUNBQjJSIiwiY2lkIjoiRDA5QTBMRkhLOFIifQ"},"type":"events_api","accepts_response_payload":false,"retry_attempt":0,"retry_reason":""})
2025-08-21 10:48:38,401 - slack_bolt.App - DEBUG - [client.py:99] - A new message enqueued (current queue size: 1)
2025-08-21 10:48:38,401 - slack_bolt.App - DEBUG - [client.py:105] - A message dequeued (current queue size: 0)
2025-08-21 10:48:38,402 - slack_bolt.App - DEBUG - [client.py:125] - Message processing started (type: events_api, envelope_id: 513acee0-1807-412c-993b-7fb347107079)
2025-08-21 10:48:38,404 - slack_bolt.App - DEBUG - [app.py:476] - Applying slack_bolt.middleware.ssl_check.ssl_check.SslCheck
2025-08-21 10:48:38,404 - slack_bolt.App - DEBUG - [app.py:476] - Applying slack_bolt.middleware.request_verification.request_verification.RequestVerification
2025-08-21 10:48:38,404 - slack_bolt.App - DEBUG - [app.py:476] - Applying slack_bolt.middleware.authorization.single_team_authorization.SingleTeamAuthorization
2025-08-21 10:48:38,404 - slack_bolt.App - DEBUG - [app.py:476] - Applying slack_bolt.middleware.ignoring_self_events.ignoring_self_events.IgnoringSelfEvents
2025-08-21 10:48:38,405 - slack_bolt.App - DEBUG - [app.py:476] - Applying slack_bolt.middleware.url_verification.url_verification.UrlVerification
2025-08-21 10:48:38,405 - slack_bolt.App - DEBUG - [app.py:500] - Checking listener: handle_app_mentions ...
2025-08-21 10:48:38,405 - slack_bolt.App - DEBUG - [app.py:500] - Checking listener: help_message ...
2025-08-21 10:48:38,405 - slack_bolt.App - DEBUG - [app.py:500] - Checking listener: handle_dm_messages ...
2025-08-21 10:48:38,405 - slack_bolt.App - DEBUG - [app.py:522] - Running listener: handle_dm_messages ...
2025-08-21 10:48:38,406 - __main__ - INFO - [main.py:307] - === DM MESSAGE EVENT RECEIVED ===
2025-08-21 10:48:38,406 - slack_bolt.App - DEBUG - [thread_runner.py:198] - Responding with status: 200 body: "" (0 millis)
2025-08-21 10:48:38,406 - __main__ - DEBUG - [main.py:308] - Full event body: {'token': 'yq71khZBCyJF1Ri2hG5aNqr5', 'team_id': 'T010QS7UQNA', 'enterprise_id': 'ERV4P7NAD', 'context_team_id': None, 'context_enterprise_id': 'ERV4P7NAD', 'api_app_id': 'A099LACAB2R', 'event': {'user': 'U01RMTFMALF', 'type': 'message', 'ts': '1755798517.860049', 'client_msg_id': 'a53e5c27-e0f8-4927-8159-445d8bdd5408', 'text': 'How to get access to jenkins?', 'blocks': [{'type': 'rich_text', 'block_id': 'jBTYB', 'elements': [{'type': 'rich_text_section', 'elements': [{'type': 'text', 'text': 'How to get access to jenkins?'}]}]}], 'channel': 'D09A0LFHK8R', 'event_ts': '1755798517.860049', 'channel_type': 'im'}, 'type': 'event_callback', 'event_id': 'Ev09B3EUG407', 'event_time': 1755798517, 'authorizations': [{'enterprise_id': 'ERV4P7NAD', 'team_id': 'T010QS7UQNA', 'user_id': 'U099R6WTZ9S', 'is_bot': True, 'is_enterprise_install': False}], 'is_ext_shared_channel': False, 'event_context': '4-eyJldCI6Im1lc3NhZ2UiLCJ0aWQiOiJUMDEwUVM3VVFOQSIsImFpZCI6IkEwOTlMQUNBQjJSIiwiY2lkIjoiRDA5QTBMRkhLOFIifQ'}
2025-08-21 10:48:38,406 - slack_bolt.App - DEBUG - [client.py:200] - Sending a message (session id: 2cb285af-1f2a-4f9e-bd72-01134d12e664, message: {"envelope_id": "513acee0-1807-412c-993b-7fb347107079"})
2025-08-21 10:48:38,407 - __main__ - INFO - [main.py:317] - DM Event details: channel=D09A0LFHK8R, user=U01RMTFMALF, ts=1755798517.860049
2025-08-21 10:48:38,407 - __main__ - DEBUG - [main.py:318] - DM Event text: How to get access to jenkins?
2025-08-21 10:48:38,407 - utils - DEBUG - [utils.py:27] - Checking message processing: channel=D09A0LFHK8R, ts=1755798517.860049, text='How to get access to jenkins?...'
2025-08-21 10:48:38,407 - slack_bolt.App - DEBUG - [internals.py:41] - Response time: 3 milliseconds
2025-08-21 10:48:38,407 - utils - DEBUG - [utils.py:31] - Message hash: d6cce2b671c64ddbd4562d34a7d5ca80
2025-08-21 10:48:38,408 - slack_bolt.App - DEBUG - [client.py:150] - Message processing completed (type: events_api, envelope_id: 513acee0-1807-412c-993b-7fb347107079)
2025-08-21 10:48:38,408 - utils - DEBUG - [utils.py:53] - Added message to processing cache (total entries: 1)
2025-08-21 10:48:38,408 - __main__ - DEBUG - [main.py:331] - Bot check: bot_id=None, user_id=U01RMTFMALF
2025-08-21 10:48:38,408 - __main__ - DEBUG - [main.py:336] - Question received: 'How to get access to jenkins?'
2025-08-21 10:48:38,408 - __main__ - INFO - [main.py:342] - Processing DM question from user U01RMTFMALF: How to get access to jenkins?
2025-08-21 10:48:38,408 - __main__ - DEBUG - [main.py:345] - Starting DM processing...
2025-08-21 10:48:38,408 - __main__ - DEBUG - [main.py:348] - Checking if 'how to get access to jenkins?' is an admin command in DM
2025-08-21 10:48:38,408 - __main__ - DEBUG - [main.py:383] - Checking if DM thread is already being processed...
2025-08-21 10:48:38,409 - utils - DEBUG - [utils.py:67] - Managing thread: D09A0LFHK8R:1755798517.860049, action: add, user: U01RMTFMALF
2025-08-21 10:48:38,409 - utils - INFO - [utils.py:94] - Added thread D09A0LFHK8R:1755798517.860049 to active tracking (total: 1)
2025-08-21 10:48:38,409 - __main__ - DEBUG - [main.py:388] - DM thread management check passed
2025-08-21 10:48:38,409 - slack_sdk.web.base_client - DEBUG - [base_client.py:255] - Sending a request - url: https://slack.com/api/reactions.add, query_params: {}, body_params: {'channel': 'D09A0LFHK8R', 'name': 'thinking_face', 'timestamp': '1755798517.860049', 'team_id': 'T010QS7UQNA'}, files: {}, json_body: None, headers: {'Content-Type': 'application/x-www-form-urlencoded', 'Authorization': '(redacted)', 'User-Agent': 'Python/3.12.0 slackclient/3.34.0 Darwin/23.4.0'}
2025-08-21 10:48:38,828 - slack_sdk.web.base_client - DEBUG - [base_client.py:546] - Received the following response - status: 200, headers: {'date': 'Thu, 21 Aug 2025 17:48:38 GMT', 'server': 'Apache', 'vary': 'Accept-Encoding', 'x-slack-req-id': '82e9caa7bef26497785391387933fdd7', 'x-content-type-options': 'nosniff', 'x-xss-protection': '0', 'pragma': 'no-cache', 'cache-control': 'private, no-cache, no-store, must-revalidate', 'expires': 'Sat, 26 Jul 1997 05:00:00 GMT', 'content-type': 'application/json; charset=utf-8', 'x-accepted-oauth-scopes': 'reactions:write', 'x-oauth-scopes': 'app_mentions:read,channels:history,chat:write,im:history,im:read,im:write,users:read,reactions:write', 'access-control-expose-headers': 'x-slack-req-id, retry-after', 'access-control-allow-headers': 'slack-route, x-slack-version-ts, x-b3-traceid, x-b3-spanid, x-b3-parentspanid, x-b3-sampled, x-b3-flags', 'strict-transport-security': 'max-age=31536000; includeSubDomains; preload', 'referrer-policy': 'no-referrer', 'x-slack-unique-id': 'aKdb9sq_qoiqfB7p0r_IvQAAABg', 'x-slack-backend': 'r', 'access-control-allow-origin': '*', 'content-length': '11', 'via': '1.1 slack-prod.tinyspeck.com, envoy-www-iad-masahrdm,envoy-edge-pdx-thfkevww', 'x-envoy-attempt-count': '1', 'x-envoy-upstream-service-time': '152', 'x-backend': 'main_normal main_canary_with_overflow main_control_with_overflow', 'x-server': 'slack-www-hhvm-main-iad-mtak', 'x-slack-shared-secret-outcome': 'no-match', 'x-edge-backend': 'envoy-www', 'timing-allow-origin': '*', 'x-slack-edge-shared-secret-outcome': 'no-match', 'connection': 'close'}, body: {"ok":true}
2025-08-21 10:48:38,829 - __main__ - INFO - [main.py:405] - Processing DM question from <@U01RMTFMALF>: How to get access to jenkins?
2025-08-21 10:48:38,829 - __main__ - INFO - [main.py:409] - Sending DM request to DIG AI...
2025-08-21 10:48:38,829 - dig_connector - INFO - [dig_connector.py:134] - Generating response for query: 'How to get access to jenkins?' with 0 chunks
2025-08-21 10:48:38,829 - dig_connector - DEBUG - [dig_connector.py:138] - Formatted context length: 0
2025-08-21 10:48:38,829 - dig_connector - INFO - [dig_connector.py:141] - No context available, using direct query
2025-08-21 10:48:38,829 - dig_connector - INFO - [dig_connector.py:150] - Sending prompt to DIG platform...
2025-08-21 10:48:38,830 - dig_connector - INFO - [dig_connector.py:121] - Sending message to DIG API - URL: https://ai.digdev.cbsicloud.com/fastapi/chats/851/generate
2025-08-21 10:48:38,830 - dig_connector - DEBUG - [dig_connector.py:122] - Message payload: {'model_id': 42, 'message_text': 'How to get access to jenkins?', 'history': [{'role': 'user', 'content': 'How to get access to jenkins?'}]}
2025-08-21 10:48:48,274 - urllib3.connectionpool - DEBUG - [connectionpool.py:549] - https://ai.digdev.cbsicloud.com:443 "POST /fastapi/chats/851/generate HTTP/1.1" 200 3355
2025-08-21 10:48:48,277 - dig_connector - DEBUG - [dig_connector.py:125] - DIG API response: status=200
2025-08-21 10:48:48,277 - dig_connector - DEBUG - [dig_connector.py:129] - DIG API response data: {'message_text': 'To gain access to Jenkins, there are several methods depending on your current access and the specific Jenkins instance you need:\n\n**1. Requesting Access via Slack (for `okta-para-github_viacomcbs`)**\n\n*   Submit your request in the `#i-centralops-github` Slack channel.\n*   Post a request similar to: "Hello, may I please get added to the **okta-para-github_viacomcbs**."\n*   Someone in the channel who controls access will grant you permission and inform you within a thread on your post.\n\n(Source: https://paramount.atlassian.net/wiki/spaces/PLQA/pages/178426346)\n\n**2. Requesting Access via Confluence Page (for `build.viacom.com` / `jenkins-ui.cbs.com`)**\n\n*   If you are unable to access Jenkins at `https://build.viacom.com` or `https://jenkins-ui.cbs.com/job/gqe/`, refer to the Confluence page: "P+ Global - build.viacom.com (BVC) / jenkins-ui.cbs.com Access."\n\n(Source: https://paramount.atlassian.net/wiki/spaces/PLQA/pages/132128728)\n\n**3. Initial Access Process involving GitHub (for `jenkins-ui.cbs.com`)**\n\n*   **Step 1:** Send an email to `ateeque.haque@viacomcbs.com` to initiate the process.\n*   A new tile should appear on your Okta tiles.\n*   Click on this tile and create a new GitHub account if you don\'t have one (using the same credentials as your AD login and `cbsinteractive.com` email address is suggested).\n*   Join the free plan if prompted.\n*   Set up 2-factor authentication (using Okta is an option).\n*   Sign out and then sign back into GitHub using the Okta tile.\n*   Navigate to the Jenkins URL: `https://jenkins-ui.cbs.com/job/tools/job/pr-tests/job/QA_Automation/`\n*   Sign into Jenkins using your GitHub username/password. If that doesn\'t work, use your network credentials.\n*   Authorize access to Paramount+.\n\n(Source: https://paramount.atlassian.net/wiki/spaces/PLQA/pages/47714226)\n\n**4. Requesting Access to Specific Jenkins Projects (e.g., P+ INTL Build jobs)**\n\n*   To request access to specific Jenkins projects, such as P+ INTL Build jobs on `build.viacom.com`, you can provide your active directory username and the specific jobs you need access to.\n*   If you still don\'t have access after following instructions, create a request in the `#devops-support` Slack channel.\n*   Once access is granted, you can log in to `build.viacom.com` using your AD (Network) credentials.\n\n(Source: https://paramount.atlassian.net/wiki/spaces/PLQA/pages/433660722)\n\n**General Login Information:**\n\n*   **VPN:** You may need to request VPN access by creating a ticket in PITStop and connect using your Paramount email/system login credentials. You might also need to connect via `connect.cbsinteractive.com/VPNFT`. (Source: https://paramount.atlassian.net/wiki/spaces/PLQA/pages/132128728, https://paramount.atlassian.net/wiki/spaces/PLQA/pages/47714226)\n*   **Jenkins URL:** You can try to access `https://build.viacom.com` or `https://jenkins-ui.cbs.com`.\n*   **Login Credentials:**\n    *   **Username:** Your email ID.\n    *   **Password:** Should be the same as your OKTA Password.\n    *   Alternatively, use your GitHub username/password or network credentials.\n\n(Source: https://paramount.atlassian.net/wiki/spaces/PLQA/pages/132128728, https://paramount.atlassian.net/wiki/spaces/PLQA/pages/47714226)', 'requires_approval': False, 'execution_id': 1552}
2025-08-21 10:48:48,278 - dig_connector - INFO - [dig_connector.py:154] - Extracting response content...
2025-08-21 10:48:48,278 - dig_connector - WARNING - [dig_connector.py:231] - Unexpected DIG response structure: {'message_text': 'To gain access to Jenkins, there are several methods depending on your current access and the specific Jenkins instance you need:\n\n**1. Requesting Access via Slack (for `okta-para-github_viacomcbs`)**\n\n*   Submit your request in the `#i-centralops-github` Slack channel.\n*   Post a request similar to: "Hello, may I please get added to the **okta-para-github_viacomcbs**."\n*   Someone in the channel who controls access will grant you permission and inform you within a thread on your post.\n\n(Source: https://paramount.atlassian.net/wiki/spaces/PLQA/pages/178426346)\n\n**2. Requesting Access via Confluence Page (for `build.viacom.com` / `jenkins-ui.cbs.com`)**\n\n*   If you are unable to access Jenkins at `https://build.viacom.com` or `https://jenkins-ui.cbs.com/job/gqe/`, refer to the Confluence page: "P+ Global - build.viacom.com (BVC) / jenkins-ui.cbs.com Access."\n\n(Source: https://paramount.atlassian.net/wiki/spaces/PLQA/pages/132128728)\n\n**3. Initial Access Process involving GitHub (for `jenkins-ui.cbs.com`)**\n\n*   **Step 1:** Send an email to `ateeque.haque@viacomcbs.com` to initiate the process.\n*   A new tile should appear on your Okta tiles.\n*   Click on this tile and create a new GitHub account if you don\'t have one (using the same credentials as your AD login and `cbsinteractive.com` email address is suggested).\n*   Join the free plan if prompted.\n*   Set up 2-factor authentication (using Okta is an option).\n*   Sign out and then sign back into GitHub using the Okta tile.\n*   Navigate to the Jenkins URL: `https://jenkins-ui.cbs.com/job/tools/job/pr-tests/job/QA_Automation/`\n*   Sign into Jenkins using your GitHub username/password. If that doesn\'t work, use your network credentials.\n*   Authorize access to Paramount+.\n\n(Source: https://paramount.atlassian.net/wiki/spaces/PLQA/pages/47714226)\n\n**4. Requesting Access to Specific Jenkins Projects (e.g., P+ INTL Build jobs)**\n\n*   To request access to specific Jenkins projects, such as P+ INTL Build jobs on `build.viacom.com`, you can provide your active directory username and the specific jobs you need access to.\n*   If you still don\'t have access after following instructions, create a request in the `#devops-support` Slack channel.\n*   Once access is granted, you can log in to `build.viacom.com` using your AD (Network) credentials.\n\n(Source: https://paramount.atlassian.net/wiki/spaces/PLQA/pages/433660722)\n\n**General Login Information:**\n\n*   **VPN:** You may need to request VPN access by creating a ticket in PITStop and connect using your Paramount email/system login credentials. You might also need to connect via `connect.cbsinteractive.com/VPNFT`. (Source: https://paramount.atlassian.net/wiki/spaces/PLQA/pages/132128728, https://paramount.atlassian.net/wiki/spaces/PLQA/pages/47714226)\n*   **Jenkins URL:** You can try to access `https://build.viacom.com` or `https://jenkins-ui.cbs.com`.\n*   **Login Credentials:**\n    *   **Username:** Your email ID.\n    *   **Password:** Should be the same as your OKTA Password.\n    *   Alternatively, use your GitHub username/password or network credentials.\n\n(Source: https://paramount.atlassian.net/wiki/spaces/PLQA/pages/132128728, https://paramount.atlassian.net/wiki/spaces/PLQA/pages/47714226)', 'requires_approval': False, 'execution_id': 1552}
2025-08-21 10:48:48,279 - dig_connector - INFO - [dig_connector.py:157] - Successfully generated response (length: 3359)
2025-08-21 10:48:48,279 - __main__ - INFO - [main.py:412] - Received DM response from DIG AI
2025-08-21 10:48:48,279 - __main__ - DEBUG - [main.py:413] - DIG AI DM response: {'message_text': 'To gain access to Jenkins, there are several methods depending on your current access and the specific Jenkins instance you need:\n\n**1. Requesting Access via Slack (for `okta-para-github_viacomcbs`)**\n\n*   Submit your request in the `#i-centralops-github` Slack channel.\n*   Post a request similar to: "Hello, may I please get added to the **okta-para-github_viacomcbs**."\n*   Someone in the channel who controls access will grant you permission and inform you within a thread on your post.\n\n(Source: https://paramount.atlassian.net/wiki/spaces/PLQA/pages/178426346)\n\n**2. Requesting Access via Confluence Page (for `build.viacom.com` / `jenkins-ui.cbs.com`)**\n\n*   If you are unable to access Jenkins at `https://build.viacom.com` or `https://jenkins-ui.cbs.com/job/gqe/`, refer to the Confluence page: "P+ Global - build.viacom.com (BVC) / jenkins-ui.cbs.com Access."\n\n(Source: https://paramount.atlassian.net/wiki/spaces/PLQA/pages/132128728)\n\n**3. Initial Access Process involving GitHub (for `jenkins-ui.cbs.com`)**\n\n*   **Step 1:** Send an email to `ateeque.haque@viacomcbs.com` to initiate the process.\n*   A new tile should appear on your Okta tiles.\n*   Click on this tile and create a new GitHub account if you don\'t have one (using the same credentials as your AD login and `cbsinteractive.com` email address is suggested).\n*   Join the free plan if prompted.\n*   Set up 2-factor authentication (using Okta is an option).\n*   Sign out and then sign back into GitHub using the Okta tile.\n*   Navigate to the Jenkins URL: `https://jenkins-ui.cbs.com/job/tools/job/pr-tests/job/QA_Automation/`\n*   Sign into Jenkins using your GitHub username/password. If that doesn\'t work, use your network credentials.\n*   Authorize access to Paramount+.\n\n(Source: https://paramount.atlassian.net/wiki/spaces/PLQA/pages/47714226)\n\n**4. Requesting Access to Specific Jenkins Projects (e.g., P+ INTL Build jobs)**\n\n*   To request access to specific Jenkins projects, such as P+ INTL Build jobs on `build.viacom.com`, you can provide your active directory username and the specific jobs you need access to.\n*   If you still don\'t have access after following instructions, create a request in the `#devops-support` Slack channel.\n*   Once access is granted, you can log in to `build.viacom.com` using your AD (Network) credentials.\n\n(Source: https://paramount.atlassian.net/wiki/spaces/PLQA/pages/433660722)\n\n**General Login Information:**\n\n*   **VPN:** You may need to request VPN access by creating a ticket in PITStop and connect using your Paramount email/system login credentials. You might also need to connect via `connect.cbsinteractive.com/VPNFT`. (Source: https://paramount.atlassian.net/wiki/spaces/PLQA/pages/132128728, https://paramount.atlassian.net/wiki/spaces/PLQA/pages/47714226)\n*   **Jenkins URL:** You can try to access `https://build.viacom.com` or `https://jenkins-ui.cbs.com`.\n*   **Login Credentials:**\n    *   **Username:** Your email ID.\n    *   **Password:** Should be the same as your OKTA Password.\n    *   Alternatively, use your GitHub username/password or network credentials.\n\n(Source: https://paramount.atlassian.net/wiki/spaces/PLQA/pages/132128728, https://paramount.atlassian.net/wiki/spaces/PLQA/pages/47714226)', 'requires_approval': False, 'execution_id': 1552}
2025-08-21 10:48:48,280 - __main__ - DEBUG - [main.py:418] - Formatted DM response: *Your Query:* How to get access to jenkins?

*Answer:*
{'message_text': 'To gain access to Jenkins, there are several methods depending on your current access and the specific Jenkins instance you need:

*1. Requesting Access via Slack (for `okta-para-github_viacomcbs`)*

*   Submit your request in the `#i-centralops-github` Slack channel.
*   Post a request similar to: "Hello, may I please get added to the *okta-para-github_viacomcbs*."
*   Someone in the channel who controls access will grant you permission and inform you within a thread on your post.

(Source: https://paramount.atlassian.net/wiki/spaces/PLQA/pages/178426346)

*2. Requesting Access via Confluence Page (for `build.viacom.com` / `jenkins-ui.cbs.com`)*

*   If you are unable to access Jenkins at `https://build.viacom.com` or `https://jenkins-ui.cbs.com/job/gqe/`, refer to the Confluence page: "P+ Global - build.viacom.com (BVC) / jenkins-ui.cbs.com Access."

(Source: https://paramount.atlassian.net/wiki/spaces/PLQA/pages/132128728)

*3. Initial Access Process involving GitHub (for `jenkins-ui.cbs.com`)*

*   *Step 1:* Send an email to `ateeque.haque@viacomcbs.com` to initiate the process.
*   A new tile should appear on your Okta tiles.
*   Click on this tile and create a new GitHub account if you don\'t have one (using the same credentials as your AD login and `cbsinteractive.com` email address is suggested).
*   Join the free plan if prompted.
*   Set up 2-factor authentication (using Okta is an option).
*   Sign out and then sign back into GitHub using the Okta tile.
*   Navigate to the Jenkins URL: `https://jenkins-ui.cbs.com/job/tools/job/pr-tests/job/QA_Automation/`
*   Sign into Jenkins using your GitHub username/password. If that doesn\'t work, use your network credentials.
*   Authorize access to Paramount+.

(Source: https://paramount.atlassian.net/wiki/spaces/PLQA/pages/47714226)

*4. Requesting Access to Specific Jenkins Projects (e.g., P+ INTL Build jobs)*

*   To request access to specific Jenkins projects, such as P+ INTL Build jobs on `build.viacom.com`, you can provide your active directory username and the specific jobs you need access to.
*   If you still don\'t have access after following instructions, create a request in the `#devops-support` Slack channel.
*   Once access is granted, you can log in to `build.viacom.com` using your AD (Network) credentials.

(Source: https://paramount.atlassian.net/wiki/spaces/PLQA/pages/433660722)

*General Login Information:*

*   *VPN:* You may need to request VPN access by creating a ticket in PITStop and connect using your Paramount email/system login credentials. You might also need to connect via `connect.cbsinteractive.com/VPNFT`. (Source: https://paramount.atlassian.net/wiki/spaces/PLQA/pages/132128728, https://paramount.atlassian.net/wiki/spaces/PLQA/pages/47714226)
*   *Jenkins URL:* You can try to access `https://build.viacom.com` or `https://jenkins-ui.cbs.com`.
*   *Login Credentials:*
    *   *Username:* Your email ID.
    *   *Password:* Should be the same as your OKTA Password.
    *   Alternatively, use your GitHub username/password or network credentials.

(Source: https://paramount.atlassian.net/wiki/spaces/PLQA/pages/132128728, https://paramount.atlassian.net/wiki/spaces/PLQA/pages/47714226)', 'requires_approval': False, 'execution_id': 1552}
2025-08-21 10:48:48,281 - slack_sdk.web.base_client - DEBUG - [base_client.py:255] - Sending a request - url: https://slack.com/api/reactions.remove, query_params: {}, body_params: {'name': 'thinking_face', 'channel': 'D09A0LFHK8R', 'timestamp': '1755798517.860049', 'team_id': 'T010QS7UQNA'}, files: {}, json_body: None, headers: {'Content-Type': 'application/x-www-form-urlencoded', 'Authorization': '(redacted)', 'User-Agent': 'Python/3.12.0 slackclient/3.34.0 Darwin/23.4.0'}
2025-08-21 10:48:48,695 - slack_sdk.web.base_client - DEBUG - [base_client.py:546] - Received the following response - status: 200, headers: {'date': 'Thu, 21 Aug 2025 17:48:48 GMT', 'server': 'Apache', 'vary': 'Accept-Encoding', 'x-slack-req-id': 'e725f2cb6643bd8a4799eb6bb4c4ec63', 'x-content-type-options': 'nosniff', 'x-xss-protection': '0', 'pragma': 'no-cache', 'cache-control': 'private, no-cache, no-store, must-revalidate', 'expires': 'Sat, 26 Jul 1997 05:00:00 GMT', 'content-type': 'application/json; charset=utf-8', 'x-accepted-oauth-scopes': 'reactions:write', 'x-oauth-scopes': 'app_mentions:read,channels:history,chat:write,im:history,im:read,im:write,users:read,reactions:write', 'access-control-expose-headers': 'x-slack-req-id, retry-after', 'access-control-allow-headers': 'slack-route, x-slack-version-ts, x-b3-traceid, x-b3-spanid, x-b3-parentspanid, x-b3-sampled, x-b3-flags', 'strict-transport-security': 'max-age=31536000; includeSubDomains; preload', 'referrer-policy': 'no-referrer', 'x-slack-unique-id': 'aKdcADpTu52x4ygakQWgigAAEDs', 'x-slack-backend': 'r', 'access-control-allow-origin': '*', 'content-length': '11', 'via': '1.1 slack-prod.tinyspeck.com, envoy-www-iad-vifqcxnz,envoy-edge-pdx-vibphbxj', 'x-envoy-attempt-count': '1', 'x-envoy-upstream-service-time': '181', 'x-backend': 'main_normal main_canary_with_overflow main_control_with_overflow', 'x-server': 'slack-www-hhvm-main-iad-rtfk', 'x-slack-shared-secret-outcome': 'no-match', 'x-edge-backend': 'envoy-www', 'timing-allow-origin': '*', 'x-slack-edge-shared-secret-outcome': 'no-match', 'connection': 'close'}, body: {"ok":true}
2025-08-21 10:48:48,721 - slack_sdk.web.base_client - DEBUG - [base_client.py:255] - Sending a request - url: https://slack.com/api/chat.postMessage, query_params: {}, body_params: {}, files: {}, json_body: {'channel': 'D09A0LFHK8R', 'text': '*Your Query:* How to get access to jenkins? *Answer:*\n{\'message_text\': \'To gain access to Jenkins, there are several methods depending on your current access and the specific Jenkins instance you need:\n\n*1. Requesting Access via Slack (for `okta-para-github_viacomcbs`)*\n\n*   Submit your request in the `#i-centralops-github` Slack channel. *   Post a request similar to: "Hello, may I please get added to the *okta-para-github_viacomcbs*." *   Someone in the channel who controls access will grant you permission and inform you within a thread on your post. (Source: https://paramount.atlassian.net/wiki/spaces/PLQA/pages/178426346)\n\n*2. Requesting Access via Confluence Page (for `build.viacom.com` / `jenkins-ui.cbs.com`)*\n\n*   If you are unable to access Jenkins at `https://build.viacom.com` or `https://jenkins-ui.cbs.com/job/gqe/`, refer to the Confluence page: "P+ Global - build.viacom.com (BVC) / jenkins-ui.cbs.com Access." (Source: https://paramount.atlassian.net/wiki/spaces/PLQA/pages/132128728)\n\n*3. Initial Access Process involving GitHub (for `jenkins-ui.cbs.com`)*\n\n*   *Step 1:* Send an email to `ateeque.haque@viacomcbs.com` to initiate the process. *   A new tile should appear on your Okta tiles. *   Click on this tile and create a new GitHub account if you don\\\'t have one (using the same credentials as your AD login and `cbsinteractive.com` email address is suggested). *   Join the free plan if prompted. *   Set up 2-factor authentication (using Okta is an option). *   Sign out and then sign back into GitHub using the Okta tile. *   Navigate to the Jenkins URL: `https://jenkins-ui.cbs.com/job/tools/job/pr-tests/job/QA_Automation/`\n*   Sign into Jenkins using your GitHub username/password. If that doesn\\\'t work, use your network credentials. *   Authorize access to Paramount+. (Source: https://paramount.atlassian.net/wiki/spaces/PLQA/pages/47714226)\n\n*4. Requesting Access to Specific Jenkins Projects (e.g., P+ INTL Build jobs)*\n\n*   To request access to specific Jenkins projects, such as P+ INTL Build jobs on `build.viacom.com`, you can provide your active directory username and the specific jobs you need access to. *   If you still don\\\'t have access after following instructions, create a request in the `#devops-support` Slack channel. *   Once access is granted, you can log in to `build.viacom.com` using your AD (Network) credentials. (Source: https://paramount.atlassian.net/wiki/spaces/PLQA/pages/433660722)\n\n*General Login Information:*\n\n*   *VPN:* You may need to request VPN access by creating a ticket in PITStop and connect using your Paramount email/system login credentials. You might also need to connect via `connect.cbsinteractive.com/VPNFT`. (Source: https://paramount.atlassian.net/wiki/spaces/PLQA/pages/132128728, https://paramount.atlassian.net/wiki/spaces/PLQA/pages/47714226)\n*   *Jenkins URL:* You can try to access `https://build.viacom.com` or `https://jenkins-ui.cbs.com`.\n\n_(message continued in thread...)_', 'thread_ts': '1755798517.860049', 'team_id': 'T010QS7UQNA'}, headers: {'Content-Type': 'application/json;charset=utf-8', 'Authorization': '(redacted)', 'User-Agent': 'Python/3.12.0 slackclient/3.34.0 Darwin/23.4.0'}
2025-08-21 10:48:49,148 - slack_sdk.web.base_client - DEBUG - [base_client.py:546] - Received the following response - status: 200, headers: {'date': 'Thu, 21 Aug 2025 17:48:49 GMT', 'server': 'Apache', 'vary': 'Accept-Encoding', 'x-slack-req-id': '99a090cde14ab9240b7772d87cb384df', 'x-content-type-options': 'nosniff', 'x-xss-protection': '0', 'pragma': 'no-cache', 'cache-control': 'private, no-cache, no-store, must-revalidate', 'expires': 'Sat, 26 Jul 1997 05:00:00 GMT', 'content-type': 'application/json; charset=utf-8', 'x-accepted-oauth-scopes': 'chat:write', 'x-oauth-scopes': 'app_mentions:read,channels:history,chat:write,im:history,im:read,im:write,users:read,reactions:write', 'access-control-expose-headers': 'x-slack-req-id, retry-after', 'access-control-allow-headers': 'slack-route, x-slack-version-ts, x-b3-traceid, x-b3-spanid, x-b3-parentspanid, x-b3-sampled, x-b3-flags', 'strict-transport-security': 'max-age=31536000; includeSubDomains; preload', 'referrer-policy': 'no-referrer', 'x-slack-unique-id': 'aKdcAVzi6QS9t5tEEPbELQAAECQ', 'x-slack-backend': 'r', 'access-control-allow-origin': '*', 'content-length': '9991', 'via': '1.1 slack-prod.tinyspeck.com, envoy-www-iad-ghxzzrpu,envoy-edge-pdx-zyhjsfnl', 'x-envoy-attempt-count': '1', 'x-envoy-upstream-service-time': '202', 'x-backend': 'main_normal main_canary_with_overflow main_control_with_overflow', 'x-server': 'slack-www-hhvm-main-iad-dcpq', 'x-slack-shared-secret-outcome': 'no-match', 'x-edge-backend': 'envoy-www', 'timing-allow-origin': '*', 'x-slack-edge-shared-secret-outcome': 'no-match', 'connection': 'close'}, body: {"ok":true,"channel":"D09A0LFHK8R","ts":"1755798529.091789","message":{"user":"U099R6WTZ9S","type":"message","ts":"1755798529.091789","bot_id":"B099R6WTRU4","app_id":"A099LACAB2R","text":"*Your Query:* How to get access to jenkins? *Answer:*\n{'message_text': 'To gain access to Jenkins, there are several methods depending on your current access and the specific Jenkins instance you need:\n\n*1. Requesting Access via Slack (for `okta-para-github_viacomcbs`)*\n\n*   Submit your request in the `#i-centralops-github` Slack channel. *   Post a request similar to: \"Hello, may I please get added to the *okta-para-github_viacomcbs*.\" *   Someone in the channel who controls access will grant you permission and inform you within a thread on your post. (Source: <https://paramount.atlassian.net/wiki/spaces/PLQA/pages/178426346>)\n\n*2. Requesting Access via Confluence Page (for `<http://build.viacom.com|build.viacom.com>` / `<http://jenkins-ui.cbs.com|jenkins-ui.cbs.com>`)*\n\n*   If you are unable to access Jenkins at `<https://build.viacom.com>` or `<https://jenkins-ui.cbs.com/job/gqe/>`, refer to the Confluence page: \"P+ Global - <http://build.viacom.com|build.viacom.com> (BVC) / <http://jenkins-ui.cbs.com|jenkins-ui.cbs.com> Access.\" (Source: <https://paramount.atlassian.net/wiki/spaces/PLQA/pages/132128728>)\n\n*3. Initial Access Process involving GitHub (for `<http://jenkins-ui.cbs.com|jenkins-ui.cbs.com>`)*\n\n*   *Step 1:* Send an email to `<mailto:ateeque.haque@viacomcbs.com|ateeque.haque@viacomcbs.com>` to initiate the process. *   A new tile should appear on your Okta tiles. *   Click on this tile and create a new GitHub account if you don\\'t have one (using the same credentials as your AD login and `<http://cbsinteractive.com|cbsinteractive.com>` email address is suggested). *   Join the free plan if prompted. *   Set up 2-factor authentication (using Okta is an option). *   Sign out and then sign back into GitHub using the Okta tile. *   Navigate to the Jenkins URL: `<https://jenkins-ui.cbs.com/job/tools/job/pr-tests/job/QA_Automation/>`\n*   Sign into Jenkins using your GitHub username/password. If that doesn\\'t work, use your network credentials. *   Authorize access to Paramount+. (Source: <https://paramount.atlassian.net/wiki/spaces/PLQA/pages/47714226>)\n\n*4. Requesting Access to Specific Jenkins Projects (e.g., P+ INTL Build jobs)*\n\n*   To request access to specific Jenkins projects, such as P+ INTL Build jobs on `<http://build.viacom.com|build.viacom.com>`, you can provide your active directory username and the specific jobs you need access to. *   If you still don\\'t have access after following instructions, create a request in the `#devops-support` Slack channel. *   Once access is granted, you can log in to `<http://build.viacom.com|build.viacom.com>` using your AD (Network) credentials. (Source: <https://paramount.atlassian.net/wiki/spaces/PLQA/pages/433660722>)\n\n*General Login Information:*\n\n*   *VPN:* You may need to request VPN access by creating a ticket in PITStop and connect using your Paramount email/system login credentials. You might also need to connect via `<http://connect.cbsinteractive.com/VPNFT|connect.cbsinteractive.com/VPNFT>`. (Source: <https://paramount.atlassian.net/wiki/spaces/PLQA/pages/132128728>, <https://paramount.atlassian.net/wiki/spaces/PLQA/pages/47714226>)\n*   *Jenkins URL:* You can try to access `<https://build.viacom.com>` or `<https://jenkins-ui.cbs.com>`.\n\n_(message continued in thread...)_","team":"T010QS7UQNA","bot_profile":{"id":"B099R6WTRU4","app_id":"A099LACAB2R","user_id":"U099R6WTZ9S","name":"AutoBot","icons":{"image_36":"https://a.slack-edge.com/80588/img/plugins/app/bot_36.png","image_48":"https://a.slack-edge.com/80588/img/plugins/app/bot_48.png","image_72":"https://a.slack-edge.com/80588/img/plugins/app/service_72.png"},"deleted":false,"updated":1754677948,"team_id":"T010QS7UQNA"},"thread_ts":"1755798517.860049","parent_user_id":"U01RMTFMALF","blocks":[{"type":"rich_text","block_id":"P96","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Your Query:","style":{"bold":true}},{"type":"text","text":" How to get access to jenkins? "},{"type":"text","text":"Answer:","style":{"bold":true}},{"type":"text","text":"\n{'message_text': 'To gain access to Jenkins, there are several methods depending on your current access and the specific Jenkins instance you need:\n\n"},{"type":"text","text":"1. Requesting Access via Slack (for ","style":{"bold":true}},{"type":"text","text":"okta-para-github_viacomcbs","style":{"bold":true,"code":true}},{"type":"text","text":")","style":{"bold":true}},{"type":"text","text":"\n\n*   Submit your request in the "},{"type":"text","text":"#i-centralops-github","style":{"code":true}},{"type":"text","text":" Slack channel. *   Post a request similar to: \"Hello, may I please get added to the "},{"type":"text","text":"okta-para-github_viacomcbs","style":{"bold":true}},{"type":"text","text":".\" *   Someone in the channel who controls access will grant you permission and inform you within a thread on your post. (Source: "},{"type":"link","url":"https://paramount.atlassian.net/wiki/spaces/PLQA/pages/178426346"},{"type":"text","text":")\n\n"},{"type":"text","text":"2. Requesting Access via Confluence Page (for ","style":{"bold":true}},{"type":"link","url":"http://build.viacom.com","text":"build.viacom.com","style":{"bold":true,"code":true}},{"type":"text","text":" / ","style":{"bold":true}},{"type":"link","url":"http://jenkins-ui.cbs.com","text":"jenkins-ui.cbs.com","style":{"bold":true,"code":true}},{"type":"text","text":")","style":{"bold":true}},{"type":"text","text":"\n\n*   If you are unable to access Jenkins at "},{"type":"link","url":"https://build.viacom.com","style":{"code":true}},{"type":"text","text":" or "},{"type":"link","url":"https://jenkins-ui.cbs.com/job/gqe/","style":{"code":true}},{"type":"text","text":", refer to the Confluence page: \"P+ Global - "},{"type":"link","url":"http://build.viacom.com","text":"build.viacom.com"},{"type":"text","text":" (BVC) / "},{"type":"link","url":"http://jenkins-ui.cbs.com","text":"jenkins-ui.cbs.com"},{"type":"text","text":" Access.\" (Source: "},{"type":"link","url":"https://paramount.atlassian.net/wiki/spaces/PLQA/pages/132128728"},{"type":"text","text":")\n\n"},{"type":"text","text":"3. Initial Access Process involving GitHub (for ","style":{"bold":true}},{"type":"link","url":"http://jenkins-ui.cbs.com","text":"jenkins-ui.cbs.com","style":{"bold":true,"code":true}},{"type":"text","text":")","style":{"bold":true}},{"type":"text","text":"\n\n*   "},{"type":"text","text":"Step 1:","style":{"bold":true}},{"type":"text","text":" Send an email to "},{"type":"link","url":"mailto:ateeque.haque@viacomcbs.com","text":"ateeque.haque@viacomcbs.com","style":{"code":true}},{"type":"text","text":" to initiate the process. *   A new tile should appear on your Okta tiles. *   Click on this tile and create a new GitHub account if you don\\'t have one (using the same credentials as your AD login and "},{"type":"link","url":"http://cbsinteractive.com","text":"cbsinteractive.com","style":{"code":true}},{"type":"text","text":" email address is suggested). *   Join the free plan if prompted. *   Set up 2-factor authentication (using Okta is an option). *   Sign out and then sign back into GitHub using the Okta tile. *   Navigate to the Jenkins URL: "},{"type":"link","url":"https://jenkins-ui.cbs.com/job/tools/job/pr-tests/job/QA_Automation/","style":{"code":true}},{"type":"text","text":"\n*   Sign into Jenkins using your GitHub username/password. If that doesn\\'t work, use your network credentials. *   Authorize access to Paramount+. (Source: "},{"type":"link","url":"https://paramount.atlassian.net/wiki/spaces/PLQA/pages/47714226"},{"type":"text","text":")\n\n"},{"type":"text","text":"4. Requesting Access to Specific Jenkins Projects (e.g., P+ INTL Build jobs)","style":{"bold":true}},{"type":"text","text":"\n\n*   To request access to specific Jenkins projects, such as P+ INTL Build jobs on "},{"type":"link","url":"http://build.viacom.com","text":"build.viacom.com","style":{"code":true}},{"type":"text","text":", you can provide your active directory username and the specific jobs you need access to. *   If you still don\\'t have access after following instructions, create a request in the "},{"type":"text","text":"#devops-support","style":{"code":true}},{"type":"text","text":" Slack channel. *   Once access is granted, you can log in to "},{"type":"link","url":"http://build.viacom.com","text":"build.viacom.com","style":{"code":true}},{"type":"text","text":" using your AD (Network) credentials. (Source: "},{"type":"link","url":"https://paramount.atlassian.net/wiki/spaces/PLQA/pages/433660722"},{"type":"text","text":")\n\n"},{"type":"text","text":"General Login Information:","style":{"bold":true}},{"type":"text","text":"\n\n*   "},{"type":"text","text":"VPN:","style":{"bold":true}},{"type":"text","text":" You may need to request VPN access by creating a ticket in PITStop and connect using your Paramount email/system login credentials. You might also need to connect via "},{"type":"link","url":"http://connect.cbsinteractive.com/VPNFT","text":"connect.cbsinteractive.com/VPNFT","style":{"code":true}},{"type":"text","text":". (Source: "},{"type":"link","url":"https://paramount.atlassian.net/wiki/spaces/PLQA/pages/132128728"},{"type":"text","text":", "},{"type":"link","url":"https://paramount.atlassian.net/wiki/spaces/PLQA/pages/47714226"},{"type":"text","text":")\n*   "},{"type":"text","text":"Jenkins URL:","style":{"bold":true}},{"type":"text","text":" You can try to access "},{"type":"link","url":"https://build.viacom.com","style":{"code":true}},{"type":"text","text":" or "},{"type":"link","url":"https://jenkins-ui.cbs.com","style":{"code":true}},{"type":"text","text":".\n\n"},{"type":"text","text":"(message continued in thread...)","style":{"italic":true}}]}]}]}}
2025-08-21 10:48:49,150 - slack_sdk.web.base_client - DEBUG - [base_client.py:255] - Sending a request - url: https://slack.com/api/chat.postMessage, query_params: {}, body_params: {}, files: {}, json_body: {'channel': 'D09A0LFHK8R', 'text': "_(part 2/2)_\n\n*   *Login Credentials:*\n    *   *Username:* Your email ID. *   *Password:* Should be the same as your OKTA Password. *   Alternatively, use your GitHub username/password or network credentials. (Source: https://paramount.atlassian.net/wiki/spaces/PLQA/pages/132128728, https://paramount.atlassian.net/wiki/spaces/PLQA/pages/47714226)', 'requires_approval': False, 'execution_id': 1552}", 'thread_ts': '1755798517.860049', 'team_id': 'T010QS7UQNA'}, headers: {'Content-Type': 'application/json;charset=utf-8', 'Authorization': '(redacted)', 'User-Agent': 'Python/3.12.0 slackclient/3.34.0 Darwin/23.4.0'}
2025-08-21 10:48:49,545 - slack_sdk.web.base_client - DEBUG - [base_client.py:546] - Received the following response - status: 200, headers: {'date': 'Thu, 21 Aug 2025 17:48:49 GMT', 'server': 'Apache', 'vary': 'Accept-Encoding', 'x-slack-req-id': 'b21e5f435d2813e982179206f78f1a88', 'x-content-type-options': 'nosniff', 'x-xss-protection': '0', 'pragma': 'no-cache', 'cache-control': 'private, no-cache, no-store, must-revalidate', 'expires': 'Sat, 26 Jul 1997 05:00:00 GMT', 'content-type': 'application/json; charset=utf-8', 'x-accepted-oauth-scopes': 'chat:write', 'x-oauth-scopes': 'app_mentions:read,channels:history,chat:write,im:history,im:read,im:write,users:read,reactions:write', 'access-control-expose-headers': 'x-slack-req-id, retry-after', 'access-control-allow-headers': 'slack-route, x-slack-version-ts, x-b3-traceid, x-b3-spanid, x-b3-parentspanid, x-b3-sampled, x-b3-flags', 'strict-transport-security': 'max-age=31536000; includeSubDomains; preload', 'referrer-policy': 'no-referrer', 'x-slack-unique-id': 'aKdcAWQ3dXCjCRlRml9JvQAAACE', 'x-slack-backend': 'r', 'access-control-allow-origin': '*', 'content-length': '1968', 'via': '1.1 slack-prod.tinyspeck.com, envoy-www-iad-gfmaugnd,envoy-edge-pdx-bdodybkk', 'x-envoy-attempt-count': '1', 'x-envoy-upstream-service-time': '169', 'x-backend': 'main_normal main_canary_with_overflow main_control_with_overflow', 'x-server': 'slack-www-hhvm-main-iad-hynr', 'x-slack-shared-secret-outcome': 'no-match', 'x-edge-backend': 'envoy-www', 'timing-allow-origin': '*', 'x-slack-edge-shared-secret-outcome': 'no-match', 'connection': 'close'}, body: {"ok":true,"channel":"D09A0LFHK8R","ts":"1755798529.480189","message":{"user":"U099R6WTZ9S","type":"message","ts":"1755798529.480189","bot_id":"B099R6WTRU4","app_id":"A099LACAB2R","text":"_(part 2/2)_\n\n*   *Login Credentials:*\n    *   *Username:* Your email ID. *   *Password:* Should be the same as your OKTA Password. *   Alternatively, use your GitHub username/password or network credentials. (Source: <https://paramount.atlassian.net/wiki/spaces/PLQA/pages/132128728>, <https://paramount.atlassian.net/wiki/spaces/PLQA/pages/47714226>)', 'requires_approval': False, 'execution_id': 1552}","team":"T010QS7UQNA","bot_profile":{"id":"B099R6WTRU4","app_id":"A099LACAB2R","user_id":"U099R6WTZ9S","name":"AutoBot","icons":{"image_36":"https://a.slack-edge.com/80588/img/plugins/app/bot_36.png","image_48":"https://a.slack-edge.com/80588/img/plugins/app/bot_48.png","image_72":"https://a.slack-edge.com/80588/img/plugins/app/service_72.png"},"deleted":false,"updated":1754677948,"team_id":"T010QS7UQNA"},"thread_ts":"1755798517.860049","parent_user_id":"U01RMTFMALF","blocks":[{"type":"rich_text","block_id":"s0B","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"(part 2/2)","style":{"italic":true}},{"type":"text","text":"\n\n*   "},{"type":"text","text":"Login Credentials:","style":{"bold":true}},{"type":"text","text":"\n    *   "},{"type":"text","text":"Username:","style":{"bold":true}},{"type":"text","text":" Your email ID. *   "},{"type":"text","text":"Password:","style":{"bold":true}},{"type":"text","text":" Should be the same as your OKTA Password. *   Alternatively, use your GitHub username/password or network credentials. (Source: "},{"type":"link","url":"https://paramount.atlassian.net/wiki/spaces/PLQA/pages/132128728"},{"type":"text","text":", "},{"type":"link","url":"https://paramount.atlassian.net/wiki/spaces/PLQA/pages/47714226"},{"type":"text","text":")', 'requires_approval': False, 'execution_id': 1552}"}]}]}]}}
2025-08-21 10:48:49,547 - __main__ - DEBUG - [main.py:443] - Cleaning up DM thread tracking...
2025-08-21 10:48:49,547 - utils - DEBUG - [utils.py:67] - Managing thread: D09A0LFHK8R:1755798517.860049, action: remove, user: U01RMTFMALF
2025-08-21 10:48:49,547 - utils - INFO - [utils.py:100] - Removed thread D09A0LFHK8R:1755798517.860049 from active tracking (remaining: 0)
2025-08-21 10:48:50,635 - slack_bolt.App - DEBUG - [client.py:235] - on_message invoked: (message: {"envelope_id":"b7ead687-6b22-4e40-81a9-3ccea3e90258","payload":{"token":"yq71khZBCyJF1Ri2hG5aNqr5","team_id":"T010QS7UQNA","enterprise_id":"ERV4P7NAD","context_team_id":null,"context_enterprise_id":"ERV4P7NAD","api_app_id":"A099LACAB2R","event":{"user":"U099R6WTZ9S","type":"message","ts":"1755798529.480189","bot_id":"B099R6WTRU4","app_id":"A099LACAB2R","text":"_(part 2\/2)_\n\n*   *Login Credentials:*\n    *   *Username:* Your email ID. *   *Password:* Should be the same as your OKTA Password. *   Alternatively, use your GitHub username\/password or network credentials. (Source: <https:\/\/paramount.atlassian.net\/wiki\/spaces\/PLQA\/pages\/132128728>, <https:\/\/paramount.atlassian.net\/wiki\/spaces\/PLQA\/pages\/47714226>)', 'requires_approval': False, 'execution_id': 1552}","team":"T010QS7UQNA","bot_profile":{"id":"B099R6WTRU4","deleted":false,"name":"AutoBot","updated":1754677948,"app_id":"A099LACAB2R","user_id":"U099R6WTZ9S","icons":{"image_36":"https:\/\/a.slack-edge.com\/80588\/img\/plugins\/app\/bot_36.png","image_48":"https:\/\/a.slack-edge.com\/80588\/img\/plugins\/app\/bot_48.png","image_72":"https:\/\/a.slack-edge.com\/80588\/img\/plugins\/app\/service_72.png"},"team_id":"T010QS7UQNA"},"thread_ts":"1755798517.860049","parent_user_id":"U01RMTFMALF","blocks":[{"type":"rich_text","block_id":"YzIz","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"(part 2\/2)","style":{"italic":true}},{"type":"text","text":"\n\n*   "},{"type":"text","text":"Login Credentials:","style":{"bold":true}},{"type":"text","text":"\n    *   "},{"type":"text","text":"Username:","style":{"bold":true}},{"type":"text","text":" Your email ID. *   "},{"type":"text","text":"Password:","style":{"bold":true}},{"type":"text","text":" Should be the same as your OKTA Password. *   Alternatively, use your GitHub username\/password or network credentials. (Source: "},{"type":"link","url":"https:\/\/paramount.atlassian.net\/wiki\/spaces\/PLQA\/pages\/132128728"},{"type":"text","text":", "},{"type":"link","url":"https:\/\/paramount.atlassian.net\/wiki\/spaces\/PLQA\/pages\/47714226"},{"type":"text","text":")', 'requires_approval': False, 'execution_id': 1552}"}]}]}],"channel":"D09A0LFHK8R","event_ts":"1755798529.480189","channel_type":"im"},"type":"event_callback","event_id":"Ev09B3EV4223","event_time":1755798529,"authorizations":[{"enterprise_id":"ERV4P7NAD","team_id":"T010QS7UQNA","user_id":"U099R6WTZ9S","is_bot":true,"is_enterprise_install":false}],"is_ext_shared_channel":false,"event_context":"4-eyJldCI6Im1lc3NhZ2UiLCJ0aWQiOiJUMDEwUVM3VVFOQSIsImFpZCI6IkEwOTlMQUNBQjJSIiwiY2lkIjoiRDA5QTBMRkhLOFIifQ"},"type":"events_api","accepts_response_payload":false,"retry_attempt":0,"retry_reason":""})
2025-08-21 10:48:50,636 - slack_bolt.App - DEBUG - [client.py:99] - A new message enqueued (current queue size: 1)
2025-08-21 10:48:50,636 - slack_bolt.App - DEBUG - [client.py:105] - A message dequeued (current queue size: 0)
2025-08-21 10:48:50,636 - slack_bolt.App - DEBUG - [client.py:125] - Message processing started (type: events_api, envelope_id: b7ead687-6b22-4e40-81a9-3ccea3e90258)
2025-08-21 10:48:50,637 - slack_bolt.App - DEBUG - [app.py:476] - Applying slack_bolt.middleware.ssl_check.ssl_check.SslCheck
2025-08-21 10:48:50,637 - slack_bolt.App - DEBUG - [app.py:476] - Applying slack_bolt.middleware.request_verification.request_verification.RequestVerification
2025-08-21 10:48:50,637 - slack_bolt.App - DEBUG - [app.py:476] - Applying slack_bolt.middleware.authorization.single_team_authorization.SingleTeamAuthorization
2025-08-21 10:48:50,637 - slack_bolt.App - DEBUG - [app.py:476] - Applying slack_bolt.middleware.ignoring_self_events.ignoring_self_events.IgnoringSelfEvents
2025-08-21 10:48:50,637 - slack_bolt.IgnoringSelfEvents - DEBUG - [ignoring_self_events.py:60] - Skipped self event: {'user': 'U099R6WTZ9S', 'type': 'message', 'ts': '1755798529.480189', 'bot_id': 'B099R6WTRU4', 'app_id': 'A099LACAB2R', 'text': "_(part 2/2)_\n\n*   *Login Credentials:*\n    *   *Username:* Your email ID. *   *Password:* Should be the same as your OKTA Password. *   Alternatively, use your GitHub username/password or network credentials. (Source: <https://paramount.atlassian.net/wiki/spaces/PLQA/pages/132128728>, <https://paramount.atlassian.net/wiki/spaces/PLQA/pages/47714226>)', 'requires_approval': False, 'execution_id': 1552}", 'team': 'T010QS7UQNA', 'bot_profile': {'id': 'B099R6WTRU4', 'deleted': False, 'name': 'AutoBot', 'updated': 1754677948, 'app_id': 'A099LACAB2R', 'user_id': 'U099R6WTZ9S', 'icons': {'image_36': 'https://a.slack-edge.com/80588/img/plugins/app/bot_36.png', 'image_48': 'https://a.slack-edge.com/80588/img/plugins/app/bot_48.png', 'image_72': 'https://a.slack-edge.com/80588/img/plugins/app/service_72.png'}, 'team_id': 'T010QS7UQNA'}, 'thread_ts': '1755798517.860049', 'parent_user_id': 'U01RMTFMALF', 'blocks': [{'type': 'rich_text', 'block_id': 'YzIz', 'elements': [{'type': 'rich_text_section', 'elements': [{'type': 'text', 'text': '(part 2/2)', 'style': {'italic': True}}, {'type': 'text', 'text': '\n\n*   '}, {'type': 'text', 'text': 'Login Credentials:', 'style': {'bold': True}}, {'type': 'text', 'text': '\n    *   '}, {'type': 'text', 'text': 'Username:', 'style': {'bold': True}}, {'type': 'text', 'text': ' Your email ID. *   '}, {'type': 'text', 'text': 'Password:', 'style': {'bold': True}}, {'type': 'text', 'text': ' Should be the same as your OKTA Password. *   Alternatively, use your GitHub username/password or network credentials. (Source: '}, {'type': 'link', 'url': 'https://paramount.atlassian.net/wiki/spaces/PLQA/pages/132128728'}, {'type': 'text', 'text': ', '}, {'type': 'link', 'url': 'https://paramount.atlassian.net/wiki/spaces/PLQA/pages/47714226'}, {'type': 'text', 'text': ")', 'requires_approval': False, 'execution_id': 1552}"}]}]}], 'channel': 'D09A0LFHK8R', 'event_ts': '1755798529.480189', 'channel_type': 'im'}
2025-08-21 10:48:50,638 - slack_bolt.App - DEBUG - [client.py:200] - Sending a message (session id: 2cb285af-1f2a-4f9e-bd72-01134d12e664, message: {"envelope_id": "b7ead687-6b22-4e40-81a9-3ccea3e90258"})
2025-08-21 10:48:50,638 - slack_bolt.App - DEBUG - [internals.py:41] - Response time: 1 milliseconds
2025-08-21 10:48:50,638 - slack_bolt.App - DEBUG - [client.py:150] - Message processing completed (type: events_api, envelope_id: b7ead687-6b22-4e40-81a9-3ccea3e90258)
2025-08-21 10:48:50,709 - slack_bolt.App - DEBUG - [client.py:235] - on_message invoked: (message: {"envelope_id":"e3c729e4-e757-4489-8978-f6f496b83719","payload":{"token":"yq71khZBCyJF1Ri2hG5aNqr5","team_id":"T010QS7UQNA","enterprise_id":"ERV4P7NAD","context_team_id":null,"context_enterprise_id":"ERV4P7NAD","api_app_id":"A099LACAB2R","event":{"user":"U099R6WTZ9S","type":"message","ts":"1755798529.091789","bot_id":"B099R6WTRU4","app_id":"A099LACAB2R","text":"*Your Query:* How to get access to jenkins? *Answer:*\n{'message_text': 'To gain access to Jenkins, there are several methods depending on your current access and the specific Jenkins instance you need:\n\n*1. Requesting Access via Slack (for `okta-para-github_viacomcbs`)*\n\n*   Submit your request in the `#i-centralops-github` Slack channel. *   Post a request similar to: \"Hello, may I please get added to the *okta-para-github_viacomcbs*.\" *   Someone in the channel who controls access will grant you permission and inform you within a thread on your post. (Source: <https:\/\/paramount.atlassian.net\/wiki\/spaces\/PLQA\/pages\/178426346>)\n\n*2. Requesting Access via Confluence Page (for `<http:\/\/build.viacom.com|build.viacom.com>` \/ `<http:\/\/jenkins-ui.cbs.com|jenkins-ui.cbs.com>`)*\n\n*   If you are unable to access Jenkins at `<https:\/\/build.viacom.com>` or `<https:\/\/jenkins-ui.cbs.com\/job\/gqe\/>`, refer to the Confluence page: \"P+ Global - <http:\/\/build.viacom.com|build.viacom.com> (BVC) \/ <http:\/\/jenkins-ui.cbs.com|jenkins-ui.cbs.com> Access.\" (Source: <https:\/\/paramount.atlassian.net\/wiki\/spaces\/PLQA\/pages\/132128728>)\n\n*3. Initial Access Process involving GitHub (for `<http:\/\/jenkins-ui.cbs.com|jenkins-ui.cbs.com>`)*\n\n*   *Step 1:* Send an email to `<mailto:ateeque.haque@viacomcbs.com|ateeque.haque@viacomcbs.com>` to initiate the process. *   A new tile should appear on your Okta tiles. *   Click on this tile and create a new GitHub account if you don\\'t have one (using the same credentials as your AD login and `<http:\/\/cbsinteractive.com|cbsinteractive.com>` email address is suggested). *   Join the free plan if prompted. *   Set up 2-factor authentication (using Okta is an option). *   Sign out and then sign back into GitHub using the Okta tile. *   Navigate to the Jenkins URL: `<https:\/\/jenkins-ui.cbs.com\/job\/tools\/job\/pr-tests\/job\/QA_Automation\/>`\n*   Sign into Jenkins using your GitHub username\/password. If that doesn\\'t work, use your network credentials. *   Authorize access to Paramount+. (Source: <https:\/\/paramount.atlassian.net\/wiki\/spaces\/PLQA\/pages\/47714226>)\n\n*4. Requesting Access to Specific Jenkins Projects (e.g., P+ INTL Build jobs)*\n\n*   To request access to specific Jenkins projects, such as P+ INTL Build jobs on `<http:\/\/build.viacom.com|build.viacom.com>`, you can provide your active directory username and the specific jobs you need access to. *   If you still don\\'t have access after following instructions, create a request in the `#devops-support` Slack channel. *   Once access is granted, you can log in to `<http:\/\/build.viacom.com|build.viacom.com>` using your AD (Network) credentials. (Source: <https:\/\/paramount.atlassian.net\/wiki\/spaces\/PLQA\/pages\/433660722>)\n\n*General Login Information:*\n\n*   *VPN:* You may need to request VPN access by creating a ticket in PITStop and connect using your Paramount email\/system login credentials. You might also need to connect via `<http:\/\/connect.cbsinteractive.com\/VPNFT|connect.cbsinteractive.com\/VPNFT>`. (Source: <https:\/\/paramount.atlassian.net\/wiki\/spaces\/PLQA\/pages\/132128728>, <https:\/\/paramount.atlassian.net\/wiki\/spaces\/PLQA\/pages\/47714226>)\n*   *Jenkins URL:* You can try to access `<https:\/\/build.viacom.com>` or `<https:\/\/jenkins-ui.cbs.com>`.\n\n_(message continued in thread...)_","team":"T010QS7UQNA","bot_profile":{"id":"B099R6WTRU4","deleted":false,"name":"AutoBot","updated":1754677948,"app_id":"A099LACAB2R","user_id":"U099R6WTZ9S","icons":{"image_36":"https:\/\/a.slack-edge.com\/80588\/img\/plugins\/app\/bot_36.png","image_48":"https:\/\/a.slack-edge.com\/80588\/img\/plugins\/app\/bot_48.png","image_72":"https:\/\/a.slack-edge.com\/80588\/img\/plugins\/app\/service_72.png"},"team_id":"T010QS7UQNA"},"thread_ts":"1755798517.860049","parent_user_id":"U01RMTFMALF","blocks":[{"type":"rich_text","block_id":"yrt2","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Your Query:","style":{"bold":true}},{"type":"text","text":" How to get access to jenkins? "},{"type":"text","text":"Answer:","style":{"bold":true}},{"type":"text","text":"\n{'message_text': 'To gain access to Jenkins, there are several methods depending on your current access and the specific Jenkins instance you need:\n\n"},{"type":"text","text":"1. Requesting Access via Slack (for ","style":{"bold":true}},{"type":"text","text":"okta-para-github_viacomcbs","style":{"bold":true,"code":true}},{"type":"text","text":")","style":{"bold":true}},{"type":"text","text":"\n\n*   Submit your request in the "},{"type":"text","text":"#i-centralops-github","style":{"code":true}},{"type":"text","text":" Slack channel. *   Post a request similar to: \"Hello, may I please get added to the "},{"type":"text","text":"okta-para-github_viacomcbs","style":{"bold":true}},{"type":"text","text":".\" *   Someone in the channel who controls access will grant you permission and inform you within a thread on your post. (Source: "},{"type":"link","url":"https:\/\/paramount.atlassian.net\/wiki\/spaces\/PLQA\/pages\/178426346"},{"type":"text","text":")\n\n"},{"type":"text","text":"2. Requesting Access via Confluence Page (for ","style":{"bold":true}},{"type":"link","url":"http:\/\/build.viacom.com","text":"build.viacom.com","style":{"bold":true,"code":true}},{"type":"text","text":" \/ ","style":{"bold":true}},{"type":"link","url":"http:\/\/jenkins-ui.cbs.com","text":"jenkins-ui.cbs.com","style":{"bold":true,"code":true}},{"type":"text","text":")","style":{"bold":true}},{"type":"text","text":"\n\n*   If you are unable to access Jenkins at "},{"type":"link","url":"https:\/\/build.viacom.com","style":{"code":true}},{"type":"text","text":" or "},{"type":"link","url":"https:\/\/jenkins-ui.cbs.com\/job\/gqe\/","style":{"code":true}},{"type":"text","text":", refer to the Confluence page: \"P+ Global - "},{"type":"link","url":"http:\/\/build.viacom.com","text":"build.viacom.com"},{"type":"text","text":" (BVC) \/ "},{"type":"link","url":"http:\/\/jenkins-ui.cbs.com","text":"jenkins-ui.cbs.com"},{"type":"text","text":" Access.\" (Source: "},{"type":"link","url":"https:\/\/paramount.atlassian.net\/wiki\/spaces\/PLQA\/pages\/132128728"},{"type":"text","text":")\n\n"},{"type":"text","text":"3. Initial Access Process involving GitHub (for ","style":{"bold":true}},{"type":"link","url":"http:\/\/jenkins-ui.cbs.com","text":"jenkins-ui.cbs.com","style":{"bold":true,"code":true}},{"type":"text","text":")","style":{"bold":true}},{"type":"text","text":"\n\n*   "},{"type":"text","text":"Step 1:","style":{"bold":true}},{"type":"text","text":" Send an email to "},{"type":"link","url":"mailto:ateeque.haque@viacomcbs.com","text":"ateeque.haque@viacomcbs.com","style":{"code":true}},{"type":"text","text":" to initiate the process. *   A new tile should appear on your Okta tiles. *   Click on this tile and create a new GitHub account if you don\\'t have one (using the same credentials as your AD login and "},{"type":"link","url":"http:\/\/cbsinteractive.com","text":"cbsinteractive.com","style":{"code":true}},{"type":"text","text":" email address is suggested). *   Join the free plan if prompted. *   Set up 2-factor authentication (using Okta is an option). *   Sign out and then sign back into GitHub using the Okta tile. *   Navigate to the Jenkins URL: "},{"type":"link","url":"https:\/\/jenkins-ui.cbs.com\/job\/tools\/job\/pr-tests\/job\/QA_Automation\/","style":{"code":true}},{"type":"text","text":"\n*   Sign into Jenkins using your GitHub username\/password. If that doesn\\'t work, use your network credentials. *   Authorize access to Paramount+. (Source: "},{"type":"link","url":"https:\/\/paramount.atlassian.net\/wiki\/spaces\/PLQA\/pages\/47714226"},{"type":"text","text":")\n\n"},{"type":"text","text":"4. Requesting Access to Specific Jenkins Projects (e.g., P+ INTL Build jobs)","style":{"bold":true}},{"type":"text","text":"\n\n*   To request access to specific Jenkins projects, such as P+ INTL Build jobs on "},{"type":"link","url":"http:\/\/build.viacom.com","text":"build.viacom.com","style":{"code":true}},{"type":"text","text":", you can provide your active directory username and the specific jobs you need access to. *   If you still don\\'t have access after following instructions, create a request in the "},{"type":"text","text":"#devops-support","style":{"code":true}},{"type":"text","text":" Slack channel. *   Once access is granted, you can log in to "},{"type":"link","url":"http:\/\/build.viacom.com","text":"build.viacom.com","style":{"code":true}},{"type":"text","text":" using your AD (Network) credentials. (Source: "},{"type":"link","url":"https:\/\/paramount.atlassian.net\/wiki\/spaces\/PLQA\/pages\/433660722"},{"type":"text","text":")\n\n"},{"type":"text","text":"General Login Information:","style":{"bold":true}},{"type":"text","text":"\n\n*   "},{"type":"text","text":"VPN:","style":{"bold":true}},{"type":"text","text":" You may need to request VPN access by creating a ticket in PITStop and connect using your Paramount email\/system login credentials. You might also need to connect via "},{"type":"link","url":"http:\/\/connect.cbsinteractive.com\/VPNFT","text":"connect.cbsinteractive.com\/VPNFT","style":{"code":true}},{"type":"text","text":". (Source: "},{"type":"link","url":"https:\/\/paramount.atlassian.net\/wiki\/spaces\/PLQA\/pages\/132128728"},{"type":"text","text":", "},{"type":"link","url":"https:\/\/paramount.atlassian.net\/wiki\/spaces\/PLQA\/pages\/47714226"},{"type":"text","text":")\n*   "},{"type":"text","text":"Jenkins URL:","style":{"bold":true}},{"type":"text","text":" You can try to access "},{"type":"link","url":"https:\/\/build.viacom.com","style":{"code":true}},{"type":"text","text":" or "},{"type":"link","url":"https:\/\/jenkins-ui.cbs.com","style":{"code":true}},{"type":"text","text":".\n\n"},{"type":"text","text":"(message continued in thread...)","style":{"italic":true}}]}]}],"channel":"D09A0LFHK8R","event_ts":"1755798529.091789","channel_type":"im"},"type":"event_callback","event_id":"Ev09BFS20RH8","event_time":1755798529,"authorizations":[{"enterprise_id":"ERV4P7NAD","team_id":"T010QS7UQNA","user_id":"U099R6WTZ9S","is_bot":true,"is_enterprise_install":false}],"is_ext_shared_channel":false,"event_context":"4-eyJldCI6Im1lc3NhZ2UiLCJ0aWQiOiJUMDEwUVM3VVFOQSIsImFpZCI6IkEwOTlMQUNBQjJSIiwiY2lkIjoiRDA5QTBMRkhLOFIifQ"},"type":"events_api","accepts_response_payload":false,"retry_attempt":0,"retry_reason":""})
2025-08-21 10:48:50,710 - slack_bolt.App - DEBUG - [client.py:99] - A new message enqueued (current queue size: 1)
2025-08-21 10:48:50,710 - slack_bolt.App - DEBUG - [client.py:105] - A message dequeued (current queue size: 0)
2025-08-21 10:48:50,711 - slack_bolt.App - DEBUG - [client.py:125] - Message processing started (type: events_api, envelope_id: e3c729e4-e757-4489-8978-f6f496b83719)
2025-08-21 10:48:50,711 - slack_bolt.App - DEBUG - [app.py:476] - Applying slack_bolt.middleware.ssl_check.ssl_check.SslCheck
2025-08-21 10:48:50,711 - slack_bolt.App - DEBUG - [app.py:476] - Applying slack_bolt.middleware.request_verification.request_verification.RequestVerification
2025-08-21 10:48:50,711 - slack_bolt.App - DEBUG - [app.py:476] - Applying slack_bolt.middleware.authorization.single_team_authorization.SingleTeamAuthorization
2025-08-21 10:48:50,711 - slack_bolt.App - DEBUG - [app.py:476] - Applying slack_bolt.middleware.ignoring_self_events.ignoring_self_events.IgnoringSelfEvents
2025-08-21 10:48:50,712 - slack_bolt.IgnoringSelfEvents - DEBUG - [ignoring_self_events.py:60] - Skipped self event: {'user': 'U099R6WTZ9S', 'type': 'message', 'ts': '1755798529.091789', 'bot_id': 'B099R6WTRU4', 'app_id': 'A099LACAB2R', 'text': '*Your Query:* How to get access to jenkins? *Answer:*\n{\'message_text\': \'To gain access to Jenkins, there are several methods depending on your current access and the specific Jenkins instance you need:\n\n*1. Requesting Access via Slack (for `okta-para-github_viacomcbs`)*\n\n*   Submit your request in the `#i-centralops-github` Slack channel. *   Post a request similar to: "Hello, may I please get added to the *okta-para-github_viacomcbs*." *   Someone in the channel who controls access will grant you permission and inform you within a thread on your post. (Source: <https://paramount.atlassian.net/wiki/spaces/PLQA/pages/178426346>)\n\n*2. Requesting Access via Confluence Page (for `<http://build.viacom.com|build.viacom.com>` / `<http://jenkins-ui.cbs.com|jenkins-ui.cbs.com>`)*\n\n*   If you are unable to access Jenkins at `<https://build.viacom.com>` or `<https://jenkins-ui.cbs.com/job/gqe/>`, refer to the Confluence page: "P+ Global - <http://build.viacom.com|build.viacom.com> (BVC) / <http://jenkins-ui.cbs.com|jenkins-ui.cbs.com> Access." (Source: <https://paramount.atlassian.net/wiki/spaces/PLQA/pages/132128728>)\n\n*3. Initial Access Process involving GitHub (for `<http://jenkins-ui.cbs.com|jenkins-ui.cbs.com>`)*\n\n*   *Step 1:* Send an email to `<mailto:ateeque.haque@viacomcbs.com|ateeque.haque@viacomcbs.com>` to initiate the process. *   A new tile should appear on your Okta tiles. *   Click on this tile and create a new GitHub account if you don\\\'t have one (using the same credentials as your AD login and `<http://cbsinteractive.com|cbsinteractive.com>` email address is suggested). *   Join the free plan if prompted. *   Set up 2-factor authentication (using Okta is an option). *   Sign out and then sign back into GitHub using the Okta tile. *   Navigate to the Jenkins URL: `<https://jenkins-ui.cbs.com/job/tools/job/pr-tests/job/QA_Automation/>`\n*   Sign into Jenkins using your GitHub username/password. If that doesn\\\'t work, use your network credentials. *   Authorize access to Paramount+. (Source: <https://paramount.atlassian.net/wiki/spaces/PLQA/pages/47714226>)\n\n*4. Requesting Access to Specific Jenkins Projects (e.g., P+ INTL Build jobs)*\n\n*   To request access to specific Jenkins projects, such as P+ INTL Build jobs on `<http://build.viacom.com|build.viacom.com>`, you can provide your active directory username and the specific jobs you need access to. *   If you still don\\\'t have access after following instructions, create a request in the `#devops-support` Slack channel. *   Once access is granted, you can log in to `<http://build.viacom.com|build.viacom.com>` using your AD (Network) credentials. (Source: <https://paramount.atlassian.net/wiki/spaces/PLQA/pages/433660722>)\n\n*General Login Information:*\n\n*   *VPN:* You may need to request VPN access by creating a ticket in PITStop and connect using your Paramount email/system login credentials. You might also need to connect via `<http://connect.cbsinteractive.com/VPNFT|connect.cbsinteractive.com/VPNFT>`. (Source: <https://paramount.atlassian.net/wiki/spaces/PLQA/pages/132128728>, <https://paramount.atlassian.net/wiki/spaces/PLQA/pages/47714226>)\n*   *Jenkins URL:* You can try to access `<https://build.viacom.com>` or `<https://jenkins-ui.cbs.com>`.\n\n_(message continued in thread...)_', 'team': 'T010QS7UQNA', 'bot_profile': {'id': 'B099R6WTRU4', 'deleted': False, 'name': 'AutoBot', 'updated': 1754677948, 'app_id': 'A099LACAB2R', 'user_id': 'U099R6WTZ9S', 'icons': {'image_36': 'https://a.slack-edge.com/80588/img/plugins/app/bot_36.png', 'image_48': 'https://a.slack-edge.com/80588/img/plugins/app/bot_48.png', 'image_72': 'https://a.slack-edge.com/80588/img/plugins/app/service_72.png'}, 'team_id': 'T010QS7UQNA'}, 'thread_ts': '1755798517.860049', 'parent_user_id': 'U01RMTFMALF', 'blocks': [{'type': 'rich_text', 'block_id': 'yrt2', 'elements': [{'type': 'rich_text_section', 'elements': [{'type': 'text', 'text': 'Your Query:', 'style': {'bold': True}}, {'type': 'text', 'text': ' How to get access to jenkins? '}, {'type': 'text', 'text': 'Answer:', 'style': {'bold': True}}, {'type': 'text', 'text': "\n{'message_text': 'To gain access to Jenkins, there are several methods depending on your current access and the specific Jenkins instance you need:\n\n"}, {'type': 'text', 'text': '1. Requesting Access via Slack (for ', 'style': {'bold': True}}, {'type': 'text', 'text': 'okta-para-github_viacomcbs', 'style': {'bold': True, 'code': True}}, {'type': 'text', 'text': ')', 'style': {'bold': True}}, {'type': 'text', 'text': '\n\n*   Submit your request in the '}, {'type': 'text', 'text': '#i-centralops-github', 'style': {'code': True}}, {'type': 'text', 'text': ' Slack channel. *   Post a request similar to: "Hello, may I please get added to the '}, {'type': 'text', 'text': 'okta-para-github_viacomcbs', 'style': {'bold': True}}, {'type': 'text', 'text': '." *   Someone in the channel who controls access will grant you permission and inform you within a thread on your post. (Source: '}, {'type': 'link', 'url': 'https://paramount.atlassian.net/wiki/spaces/PLQA/pages/178426346'}, {'type': 'text', 'text': ')\n\n'}, {'type': 'text', 'text': '2. Requesting Access via Confluence Page (for ', 'style': {'bold': True}}, {'type': 'link', 'url': 'http://build.viacom.com', 'text': 'build.viacom.com', 'style': {'bold': True, 'code': True}}, {'type': 'text', 'text': ' / ', 'style': {'bold': True}}, {'type': 'link', 'url': 'http://jenkins-ui.cbs.com', 'text': 'jenkins-ui.cbs.com', 'style': {'bold': True, 'code': True}}, {'type': 'text', 'text': ')', 'style': {'bold': True}}, {'type': 'text', 'text': '\n\n*   If you are unable to access Jenkins at '}, {'type': 'link', 'url': 'https://build.viacom.com', 'style': {'code': True}}, {'type': 'text', 'text': ' or '}, {'type': 'link', 'url': 'https://jenkins-ui.cbs.com/job/gqe/', 'style': {'code': True}}, {'type': 'text', 'text': ', refer to the Confluence page: "P+ Global - '}, {'type': 'link', 'url': 'http://build.viacom.com', 'text': 'build.viacom.com'}, {'type': 'text', 'text': ' (BVC) / '}, {'type': 'link', 'url': 'http://jenkins-ui.cbs.com', 'text': 'jenkins-ui.cbs.com'}, {'type': 'text', 'text': ' Access." (Source: '}, {'type': 'link', 'url': 'https://paramount.atlassian.net/wiki/spaces/PLQA/pages/132128728'}, {'type': 'text', 'text': ')\n\n'}, {'type': 'text', 'text': '3. Initial Access Process involving GitHub (for ', 'style': {'bold': True}}, {'type': 'link', 'url': 'http://jenkins-ui.cbs.com', 'text': 'jenkins-ui.cbs.com', 'style': {'bold': True, 'code': True}}, {'type': 'text', 'text': ')', 'style': {'bold': True}}, {'type': 'text', 'text': '\n\n*   '}, {'type': 'text', 'text': 'Step 1:', 'style': {'bold': True}}, {'type': 'text', 'text': ' Send an email to '}, {'type': 'link', 'url': 'mailto:ateeque.haque@viacomcbs.com', 'text': 'ateeque.haque@viacomcbs.com', 'style': {'code': True}}, {'type': 'text', 'text': " to initiate the process. *   A new tile should appear on your Okta tiles. *   Click on this tile and create a new GitHub account if you don\\'t have one (using the same credentials as your AD login and "}, {'type': 'link', 'url': 'http://cbsinteractive.com', 'text': 'cbsinteractive.com', 'style': {'code': True}}, {'type': 'text', 'text': ' email address is suggested). *   Join the free plan if prompted. *   Set up 2-factor authentication (using Okta is an option). *   Sign out and then sign back into GitHub using the Okta tile. *   Navigate to the Jenkins URL: '}, {'type': 'link', 'url': 'https://jenkins-ui.cbs.com/job/tools/job/pr-tests/job/QA_Automation/', 'style': {'code': True}}, {'type': 'text', 'text': "\n*   Sign into Jenkins using your GitHub username/password. If that doesn\\'t work, use your network credentials. *   Authorize access to Paramount+. (Source: "}, {'type': 'link', 'url': 'https://paramount.atlassian.net/wiki/spaces/PLQA/pages/47714226'}, {'type': 'text', 'text': ')\n\n'}, {'type': 'text', 'text': '4. Requesting Access to Specific Jenkins Projects (e.g., P+ INTL Build jobs)', 'style': {'bold': True}}, {'type': 'text', 'text': '\n\n*   To request access to specific Jenkins projects, such as P+ INTL Build jobs on '}, {'type': 'link', 'url': 'http://build.viacom.com', 'text': 'build.viacom.com', 'style': {'code': True}}, {'type': 'text', 'text': ", you can provide your active directory username and the specific jobs you need access to. *   If you still don\\'t have access after following instructions, create a request in the "}, {'type': 'text', 'text': '#devops-support', 'style': {'code': True}}, {'type': 'text', 'text': ' Slack channel. *   Once access is granted, you can log in to '}, {'type': 'link', 'url': 'http://build.viacom.com', 'text': 'build.viacom.com', 'style': {'code': True}}, {'type': 'text', 'text': ' using your AD (Network) credentials. (Source: '}, {'type': 'link', 'url': 'https://paramount.atlassian.net/wiki/spaces/PLQA/pages/433660722'}, {'type': 'text', 'text': ')\n\n'}, {'type': 'text', 'text': 'General Login Information:', 'style': {'bold': True}}, {'type': 'text', 'text': '\n\n*   '}, {'type': 'text', 'text': 'VPN:', 'style': {'bold': True}}, {'type': 'text', 'text': ' You may need to request VPN access by creating a ticket in PITStop and connect using your Paramount email/system login credentials. You might also need to connect via '}, {'type': 'link', 'url': 'http://connect.cbsinteractive.com/VPNFT', 'text': 'connect.cbsinteractive.com/VPNFT', 'style': {'code': True}}, {'type': 'text', 'text': '. (Source: '}, {'type': 'link', 'url': 'https://paramount.atlassian.net/wiki/spaces/PLQA/pages/132128728'}, {'type': 'text', 'text': ', '}, {'type': 'link', 'url': 'https://paramount.atlassian.net/wiki/spaces/PLQA/pages/47714226'}, {'type': 'text', 'text': ')\n*   '}, {'type': 'text', 'text': 'Jenkins URL:', 'style': {'bold': True}}, {'type': 'text', 'text': ' You can try to access '}, {'type': 'link', 'url': 'https://build.viacom.com', 'style': {'code': True}}, {'type': 'text', 'text': ' or '}, {'type': 'link', 'url': 'https://jenkins-ui.cbs.com', 'style': {'code': True}}, {'type': 'text', 'text': '.\n\n'}, {'type': 'text', 'text': '(message continued in thread...)', 'style': {'italic': True}}]}]}], 'channel': 'D09A0LFHK8R', 'event_ts': '1755798529.091789', 'channel_type': 'im'}
2025-08-21 10:48:50,712 - slack_bolt.App - DEBUG - [client.py:200] - Sending a message (session id: 2cb285af-1f2a-4f9e-bd72-01134d12e664, message: {"envelope_id": "e3c729e4-e757-4489-8978-f6f496b83719"})
2025-08-21 10:48:50,713 - slack_bolt.App - DEBUG - [internals.py:41] - Response time: 1 milliseconds
2025-08-21 10:48:50,713 - slack_bolt.App - DEBUG - [client.py:150] - Message processing completed (type: events_api, envelope_id: e3c729e4-e757-4489-8978-f6f496b83719)
2025-08-21 10:51:46,736 - __main__ - INFO - [main.py:41] - Loading application configuration...
2025-08-21 10:51:46,736 - __main__ - INFO - [main.py:43] - Configuration loaded successfully
2025-08-21 10:51:46,736 - __main__ - INFO - [main.py:46] - Initializing security components...
2025-08-21 10:51:46,736 - __main__ - DEBUG - [main.py:48] - Slack validator initialized
2025-08-21 10:51:46,736 - security.content_filter - INFO - [content_filter.py:39] - Content filter initialized with 11 patterns
2025-08-21 10:51:46,736 - __main__ - DEBUG - [main.py:51] - Content filter initialized
2025-08-21 10:51:46,737 - auth.admin_manager - INFO - [admin_manager.py:27] - Admin manager initialized with 2 admin users
2025-08-21 10:51:46,737 - __main__ - DEBUG - [main.py:54] - Admin manager initialized
2025-08-21 10:51:46,737 - __main__ - INFO - [main.py:55] - Security components initialized successfully
2025-08-21 10:51:46,737 - __main__ - INFO - [main.py:58] - Initializing Slack app...
2025-08-21 10:51:46,774 - slack_bolt.App - DEBUG - [base_client.py:255] - Sending a request - url: https://slack.com/api/auth.test, query_params: {}, body_params: {}, files: {}, json_body: None, headers: {'Content-Type': 'application/x-www-form-urlencoded', 'Authorization': '(redacted)', 'User-Agent': 'Bolt/1.16.0 Python/3.12.0 slackclient/3.34.0 Darwin/23.4.0'}
2025-08-21 10:51:47,122 - slack_bolt.App - DEBUG - [base_client.py:546] - Received the following response - status: 200, headers: {'date': 'Thu, 21 Aug 2025 17:51:47 GMT', 'server': 'Apache', 'vary': 'Accept-Encoding', 'x-slack-req-id': '8a2aba90a3685deceb4eb815440d84d5', 'x-content-type-options': 'nosniff', 'x-xss-protection': '0', 'pragma': 'no-cache', 'cache-control': 'private, no-cache, no-store, must-revalidate', 'expires': 'Sat, 26 Jul 1997 05:00:00 GMT', 'content-type': 'application/json; charset=utf-8', 'x-oauth-scopes': 'app_mentions:read,channels:history,chat:write,im:history,im:read,im:write,users:read,reactions:write', 'access-control-expose-headers': 'x-slack-req-id, retry-after', 'access-control-allow-headers': 'slack-route, x-slack-version-ts, x-b3-traceid, x-b3-spanid, x-b3-parentspanid, x-b3-sampled, x-b3-flags', 'strict-transport-security': 'max-age=31536000; includeSubDomains; preload', 'referrer-policy': 'no-referrer', 'x-slack-unique-id': 'aKdcs5OQW5qsCrp8ApT8LgAAABc', 'x-slack-backend': 'r', 'access-control-allow-origin': '*', 'content-length': '228', 'via': '1.1 slack-prod.tinyspeck.com, envoy-www-iad-axkyecxg,envoy-edge-pdx-hcxlsjse', 'x-envoy-attempt-count': '1', 'x-envoy-upstream-service-time': '88', 'x-backend': 'main_normal main_canary_with_overflow main_control_with_overflow', 'x-server': 'slack-www-hhvm-main-iad-coxt', 'x-slack-shared-secret-outcome': 'no-match', 'x-edge-backend': 'envoy-www', 'timing-allow-origin': '*', 'x-slack-edge-shared-secret-outcome': 'no-match', 'connection': 'close'}, body: {"ok":true,"url":"https://viacomcbs-grid-test.slack.com/","team":"Test Workspace","user":"autobot","team_id":"T010QS7UQNA","user_id":"U099R6WTZ9S","bot_id":"B099R6WTRU4","enterprise_id":"ERV4P7NAD","is_enterprise_install":false}
2025-08-21 10:51:47,122 - __main__ - INFO - [main.py:60] - Slack app initialized successfully
2025-08-21 10:51:47,123 - __main__ - DEBUG - [main.py:64] - Message deduplication cache initialized
2025-08-21 10:51:47,123 - __main__ - DEBUG - [main.py:69] - Thread tracking initialized
2025-08-21 10:51:47,123 - __main__ - INFO - [main.py:72] - Initializing DIG AI integration...
2025-08-21 10:51:47,123 - __main__ - INFO - [main.py:75] - DIG AI is enabled, setting up connector...
2025-08-21 10:51:47,123 - dig_connector - INFO - [dig_connector.py:287] - Initializing DIG AI with model ID: 42
2025-08-21 10:51:47,124 - dig_connector - INFO - [dig_connector.py:49] - Starting DIG chat session initialization...
2025-08-21 10:51:47,124 - dig_connector - DEBUG - [dig_connector.py:52] - Creating chat with name: Slack Bot Session 2025-08-21T17:51:47.124249+00:00
2025-08-21 10:51:47,124 - dig_connector - DEBUG - [dig_connector.py:63] - Creating chat - URL: https://ai.digdev.cbsicloud.com/fastapi/chats, Payload: {'chat_nm': 'Slack Bot Session 2025-08-21T17:51:47.124249+00:00', 'model_id': 42}
2025-08-21 10:51:47,130 - urllib3.connectionpool - DEBUG - [connectionpool.py:1055] - Starting new HTTPS connection (1): ai.digdev.cbsicloud.com:443
2025-08-21 10:51:47,472 - urllib3.connectionpool - DEBUG - [connectionpool.py:549] - https://ai.digdev.cbsicloud.com:443 "POST /fastapi/chats HTTP/1.1" 200 217
2025-08-21 10:51:47,472 - dig_connector - DEBUG - [dig_connector.py:66] - Create chat response: status=200
2025-08-21 10:51:47,473 - dig_connector - INFO - [dig_connector.py:54] - Successfully initialized DIG chat session with ID: 852
2025-08-21 10:51:47,473 - __main__ - INFO - [main.py:78] - DIG AI integration successfully initialized
2025-08-21 10:51:47,473 - __main__ - INFO - [main.py:84] - Setting up event handlers...
2025-08-21 10:51:47,473 - __main__ - INFO - [main.py:543] - Starting AI Assistant Bot...
2025-08-21 10:51:47,473 - __main__ - INFO - [main.py:544] - Registering event handlers...
2025-08-21 10:51:47,473 - __main__ - DEBUG - [main.py:545] - Event handlers registered: app_mention, message, app_home_opened
2025-08-21 10:51:47,473 - __main__ - INFO - [main.py:548] - Connecting to Slack via Socket Mode...
2025-08-21 10:51:47,474 - __main__ - INFO - [main.py:552] - Socket Mode handler created successfully
2025-08-21 10:51:47,474 - __main__ - INFO - [main.py:554] - ✅ Bot is now running and listening for events!
2025-08-21 10:51:47,474 - slack_bolt.App - DEBUG - [base_client.py:255] - Sending a request - url: https://slack.com/api/apps.connections.open, query_params: {}, body_params: {}, files: {}, json_body: None, headers: {'Content-Type': 'application/x-www-form-urlencoded', 'Authorization': '(redacted)', 'User-Agent': 'Bolt/1.16.0 Python/3.12.0 slackclient/3.34.0 Darwin/23.4.0'}
2025-08-21 10:51:47,754 - slack_bolt.App - DEBUG - [base_client.py:546] - Received the following response - status: 200, headers: {'date': 'Thu, 21 Aug 2025 17:51:47 GMT', 'server': 'Apache', 'vary': 'Accept-Encoding', 'x-slack-req-id': '569e6cfa2f66b315060675b5177f15ad', 'x-content-type-options': 'nosniff', 'x-xss-protection': '0', 'x-robots-tag': 'noindex,nofollow', 'pragma': 'no-cache', 'cache-control': 'private, no-cache, no-store, must-revalidate', 'expires': 'Sat, 26 Jul 1997 05:00:00 GMT', 'content-type': 'application/json; charset=utf-8', 'x-accepted-oauth-scopes': 'connections:write', 'x-oauth-scopes': 'connections:write', 'access-control-expose-headers': 'x-slack-req-id, retry-after', 'access-control-allow-headers': 'slack-route, x-slack-version-ts, x-b3-traceid, x-b3-spanid, x-b3-parentspanid, x-b3-sampled, x-b3-flags', 'strict-transport-security': 'max-age=31536000; includeSubDomains; preload', 'referrer-policy': 'no-referrer', 'x-slack-unique-id': 'aKdcs0YQUOYlw_PqxeHEoAAAADQ', 'x-slack-backend': 'r', 'access-control-allow-origin': '*', 'content-length': '173', 'via': '1.1 slack-prod.tinyspeck.com, envoy-www-iad-zexesrix,envoy-edge-pdx-pyvifjua', 'x-envoy-attempt-count': '1', 'x-envoy-upstream-service-time': '78', 'x-backend': 'main_normal main_canary_with_overflow main_control_with_overflow', 'x-server': 'slack-www-hhvm-main-iad-khrd', 'x-slack-shared-secret-outcome': 'no-match', 'x-edge-backend': 'envoy-www', 'timing-allow-origin': '*', 'x-slack-edge-shared-secret-outcome': 'no-match', 'connection': 'close'}, body: {"ok":true,"url":"wss:\/\/wss-primary.slack.com\/link\/?ticket=bb5d6d5d-51f4-4fae-8702-881547fd6715&app_id=a6c8d361ee1c6f398c5b4afec831555b78d7affa753b16bcc0fc64d7c13f3766"}
2025-08-21 10:51:48,281 - slack_bolt.App - INFO - [client.py:192] - A new session has been established (session id: cfda5711-2a79-4ada-b093-99b5ab81ee4b)
2025-08-21 10:51:48,282 - slack_bolt.App - INFO - [base_handler.py:50] - ⚡️ Bolt app is running!
2025-08-21 10:51:48,305 - slack_bolt.App - INFO - [client.py:265] - Starting to receive messages from a new connection (session id: cfda5711-2a79-4ada-b093-99b5ab81ee4b)
2025-08-21 10:51:48,306 - slack_bolt.App - DEBUG - [client.py:235] - on_message invoked: (message: {"type":"hello","num_connections":2,"debug_info":{"host":"applink-7","build_number":0,"approximate_connection_time":18060},"connection_info":{"app_id":"A099LACAB2R"}})
2025-08-21 10:51:48,306 - slack_bolt.App - DEBUG - [client.py:99] - A new message enqueued (current queue size: 1)
2025-08-21 10:51:48,306 - slack_bolt.App - DEBUG - [client.py:105] - A message dequeued (current queue size: 0)
2025-08-21 10:51:48,307 - slack_bolt.App - DEBUG - [client.py:125] - Message processing started (type: hello, envelope_id: None)
2025-08-21 10:51:48,307 - slack_bolt.App - DEBUG - [client.py:150] - Message processing completed (type: hello, envelope_id: None)
2025-08-21 10:52:20,059 - slack_bolt.App - DEBUG - [client.py:235] - on_message invoked: (message: {"envelope_id":"07cdf5b6-4e29-43a3-8f26-502bdcf8f1af","payload":{"token":"yq71khZBCyJF1Ri2hG5aNqr5","team_id":"T010QS7UQNA","enterprise_id":"ERV4P7NAD","context_team_id":null,"context_enterprise_id":"ERV4P7NAD","api_app_id":"A099LACAB2R","event":{"user":"U01RMTFMALF","type":"message","ts":"1755798738.939339","client_msg_id":"a21cebb5-8a24-44cf-9190-01dbaa5c7d2f","text":"How to connect a roku device ?","blocks":[{"type":"rich_text","block_id":"hVVhZ","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"How to connect a roku device ?"}]}]}],"channel":"D09A0LFHK8R","event_ts":"1755798738.939339","channel_type":"im"},"type":"event_callback","event_id":"Ev09BARMPY7M","event_time":1755798738,"authorizations":[{"enterprise_id":"ERV4P7NAD","team_id":"T010QS7UQNA","user_id":"U099R6WTZ9S","is_bot":true,"is_enterprise_install":false}],"is_ext_shared_channel":false,"event_context":"4-eyJldCI6Im1lc3NhZ2UiLCJ0aWQiOiJUMDEwUVM3VVFOQSIsImFpZCI6IkEwOTlMQUNBQjJSIiwiY2lkIjoiRDA5QTBMRkhLOFIifQ"},"type":"events_api","accepts_response_payload":false,"retry_attempt":0,"retry_reason":""})
2025-08-21 10:52:20,061 - slack_bolt.App - DEBUG - [client.py:99] - A new message enqueued (current queue size: 1)
2025-08-21 10:52:20,061 - slack_bolt.App - DEBUG - [client.py:105] - A message dequeued (current queue size: 0)
2025-08-21 10:52:20,061 - slack_bolt.App - DEBUG - [client.py:125] - Message processing started (type: events_api, envelope_id: 07cdf5b6-4e29-43a3-8f26-502bdcf8f1af)
2025-08-21 10:52:20,062 - slack_bolt.App - DEBUG - [app.py:476] - Applying slack_bolt.middleware.ssl_check.ssl_check.SslCheck
2025-08-21 10:52:20,063 - slack_bolt.App - DEBUG - [app.py:476] - Applying slack_bolt.middleware.request_verification.request_verification.RequestVerification
2025-08-21 10:52:20,063 - slack_bolt.App - DEBUG - [app.py:476] - Applying slack_bolt.middleware.authorization.single_team_authorization.SingleTeamAuthorization
2025-08-21 10:52:20,063 - slack_bolt.App - DEBUG - [app.py:476] - Applying slack_bolt.middleware.ignoring_self_events.ignoring_self_events.IgnoringSelfEvents
2025-08-21 10:52:20,063 - slack_bolt.App - DEBUG - [app.py:476] - Applying slack_bolt.middleware.url_verification.url_verification.UrlVerification
2025-08-21 10:52:20,063 - slack_bolt.App - DEBUG - [app.py:500] - Checking listener: handle_app_mentions ...
2025-08-21 10:52:20,063 - slack_bolt.App - DEBUG - [app.py:500] - Checking listener: help_message ...
2025-08-21 10:52:20,063 - slack_bolt.App - DEBUG - [app.py:500] - Checking listener: handle_dm_messages ...
2025-08-21 10:52:20,063 - slack_bolt.App - DEBUG - [app.py:522] - Running listener: handle_dm_messages ...
2025-08-21 10:52:20,064 - __main__ - INFO - [main.py:307] - === DM MESSAGE EVENT RECEIVED ===
2025-08-21 10:52:20,064 - slack_bolt.App - DEBUG - [thread_runner.py:198] - Responding with status: 200 body: "" (0 millis)
2025-08-21 10:52:20,064 - __main__ - DEBUG - [main.py:308] - Full event body: {'token': 'yq71khZBCyJF1Ri2hG5aNqr5', 'team_id': 'T010QS7UQNA', 'enterprise_id': 'ERV4P7NAD', 'context_team_id': None, 'context_enterprise_id': 'ERV4P7NAD', 'api_app_id': 'A099LACAB2R', 'event': {'user': 'U01RMTFMALF', 'type': 'message', 'ts': '1755798738.939339', 'client_msg_id': 'a21cebb5-8a24-44cf-9190-01dbaa5c7d2f', 'text': 'How to connect a roku device ?', 'blocks': [{'type': 'rich_text', 'block_id': 'hVVhZ', 'elements': [{'type': 'rich_text_section', 'elements': [{'type': 'text', 'text': 'How to connect a roku device ?'}]}]}], 'channel': 'D09A0LFHK8R', 'event_ts': '1755798738.939339', 'channel_type': 'im'}, 'type': 'event_callback', 'event_id': 'Ev09BARMPY7M', 'event_time': 1755798738, 'authorizations': [{'enterprise_id': 'ERV4P7NAD', 'team_id': 'T010QS7UQNA', 'user_id': 'U099R6WTZ9S', 'is_bot': True, 'is_enterprise_install': False}], 'is_ext_shared_channel': False, 'event_context': '4-eyJldCI6Im1lc3NhZ2UiLCJ0aWQiOiJUMDEwUVM3VVFOQSIsImFpZCI6IkEwOTlMQUNBQjJSIiwiY2lkIjoiRDA5QTBMRkhLOFIifQ'}
2025-08-21 10:52:20,064 - slack_bolt.App - DEBUG - [client.py:200] - Sending a message (session id: cfda5711-2a79-4ada-b093-99b5ab81ee4b, message: {"envelope_id": "07cdf5b6-4e29-43a3-8f26-502bdcf8f1af"})
2025-08-21 10:52:20,065 - __main__ - INFO - [main.py:317] - DM Event details: channel=D09A0LFHK8R, user=U01RMTFMALF, ts=1755798738.939339
2025-08-21 10:52:20,065 - __main__ - DEBUG - [main.py:318] - DM Event text: How to connect a roku device ?
2025-08-21 10:52:20,065 - utils - DEBUG - [utils.py:27] - Checking message processing: channel=D09A0LFHK8R, ts=1755798738.939339, text='How to connect a roku device ?...'
2025-08-21 10:52:20,065 - utils - DEBUG - [utils.py:31] - Message hash: cb93ce92fb67c1ee7cb163d629c03438
2025-08-21 10:52:20,065 - slack_bolt.App - DEBUG - [internals.py:41] - Response time: 3 milliseconds
2025-08-21 10:52:20,065 - utils - DEBUG - [utils.py:53] - Added message to processing cache (total entries: 1)
2025-08-21 10:52:20,066 - slack_bolt.App - DEBUG - [client.py:150] - Message processing completed (type: events_api, envelope_id: 07cdf5b6-4e29-43a3-8f26-502bdcf8f1af)
2025-08-21 10:52:20,066 - __main__ - DEBUG - [main.py:331] - Bot check: bot_id=None, user_id=U01RMTFMALF
2025-08-21 10:52:20,066 - __main__ - DEBUG - [main.py:336] - Question received: 'How to connect a roku device ?'
2025-08-21 10:52:20,066 - __main__ - INFO - [main.py:342] - Processing DM question from user U01RMTFMALF: How to connect a roku device ?
2025-08-21 10:52:20,066 - __main__ - DEBUG - [main.py:345] - Starting DM processing...
2025-08-21 10:52:20,066 - __main__ - DEBUG - [main.py:348] - Checking if 'how to connect a roku device ?' is an admin command in DM
2025-08-21 10:52:20,066 - __main__ - DEBUG - [main.py:383] - Checking if DM thread is already being processed...
2025-08-21 10:52:20,066 - utils - DEBUG - [utils.py:67] - Managing thread: D09A0LFHK8R:1755798738.939339, action: add, user: U01RMTFMALF
2025-08-21 10:52:20,066 - utils - INFO - [utils.py:94] - Added thread D09A0LFHK8R:1755798738.939339 to active tracking (total: 1)
2025-08-21 10:52:20,066 - __main__ - DEBUG - [main.py:388] - DM thread management check passed
2025-08-21 10:52:20,066 - slack_sdk.web.base_client - DEBUG - [base_client.py:255] - Sending a request - url: https://slack.com/api/reactions.add, query_params: {}, body_params: {'channel': 'D09A0LFHK8R', 'name': 'thinking_face', 'timestamp': '1755798738.939339', 'team_id': 'T010QS7UQNA'}, files: {}, json_body: None, headers: {'Content-Type': 'application/x-www-form-urlencoded', 'Authorization': '(redacted)', 'User-Agent': 'Python/3.12.0 slackclient/3.34.0 Darwin/23.4.0'}
2025-08-21 10:52:20,406 - slack_sdk.web.base_client - DEBUG - [base_client.py:546] - Received the following response - status: 200, headers: {'date': 'Thu, 21 Aug 2025 17:52:20 GMT', 'server': 'Apache', 'vary': 'Accept-Encoding', 'x-slack-req-id': '812a7621111856d542f19b89b9824b32', 'x-content-type-options': 'nosniff', 'x-xss-protection': '0', 'pragma': 'no-cache', 'cache-control': 'private, no-cache, no-store, must-revalidate', 'expires': 'Sat, 26 Jul 1997 05:00:00 GMT', 'content-type': 'application/json; charset=utf-8', 'x-accepted-oauth-scopes': 'reactions:write', 'x-oauth-scopes': 'app_mentions:read,channels:history,chat:write,im:history,im:read,im:write,users:read,reactions:write', 'access-control-expose-headers': 'x-slack-req-id, retry-after', 'access-control-allow-headers': 'slack-route, x-slack-version-ts, x-b3-traceid, x-b3-spanid, x-b3-parentspanid, x-b3-sampled, x-b3-flags', 'strict-transport-security': 'max-age=31536000; includeSubDomains; preload', 'referrer-policy': 'no-referrer', 'x-slack-unique-id': 'aKdc1Adu-i9mEB_E_M_sVQAAED0', 'x-slack-backend': 'r', 'access-control-allow-origin': '*', 'content-length': '11', 'via': '1.1 slack-prod.tinyspeck.com, envoy-www-iad-goyqztam,envoy-edge-pdx-xskfmbhr', 'x-envoy-attempt-count': '1', 'x-envoy-upstream-service-time': '131', 'x-backend': 'main_normal main_canary_with_overflow main_control_with_overflow', 'x-server': 'slack-www-hhvm-main-iad-wnur', 'x-slack-shared-secret-outcome': 'no-match', 'x-edge-backend': 'envoy-www', 'timing-allow-origin': '*', 'x-slack-edge-shared-secret-outcome': 'no-match', 'connection': 'close'}, body: {"ok":true}
2025-08-21 10:52:20,407 - __main__ - INFO - [main.py:405] - Processing DM question from <@U01RMTFMALF>: How to connect a roku device ?
2025-08-21 10:52:20,407 - __main__ - INFO - [main.py:409] - Sending DM request to DIG AI...
2025-08-21 10:52:20,407 - dig_connector - INFO - [dig_connector.py:134] - Generating response for query: 'How to connect a roku device ?' with 0 chunks
2025-08-21 10:52:20,407 - dig_connector - DEBUG - [dig_connector.py:138] - Formatted context length: 0
2025-08-21 10:52:20,407 - dig_connector - INFO - [dig_connector.py:141] - No context available, using direct query
2025-08-21 10:52:20,407 - dig_connector - INFO - [dig_connector.py:150] - Sending prompt to DIG platform...
2025-08-21 10:52:20,408 - dig_connector - INFO - [dig_connector.py:121] - Sending message to DIG API - URL: https://ai.digdev.cbsicloud.com/fastapi/chats/852/generate
2025-08-21 10:52:20,408 - dig_connector - DEBUG - [dig_connector.py:122] - Message payload: {'model_id': 42, 'message_text': 'How to connect a roku device ?', 'history': [{'role': 'user', 'content': 'How to connect a roku device ?'}]}
2025-08-21 10:52:27,004 - urllib3.connectionpool - DEBUG - [connectionpool.py:549] - https://ai.digdev.cbsicloud.com:443 "POST /fastapi/chats/852/generate HTTP/1.1" 200 853
2025-08-21 10:52:27,005 - dig_connector - DEBUG - [dig_connector.py:125] - DIG API response: status=200
2025-08-21 10:52:27,006 - dig_connector - DEBUG - [dig_connector.py:129] - DIG API response data: {'message_text': 'To connect your Roku device, follow these steps:\n\n1.  On your Roku device, navigate to **Settings** > **System** > **Advanced System Settings**.\n2.  Select **Factory Reset** and enter the code displayed on the screen.\n3.  The Roku device will restart.\n4.  Pair your remote and select your preferred language.\n5.  Select a network to connect to and enter the Wi-Fi password. You may need to visit `http://my.roku.com/index` on a computer to complete the connection.\n6.  Select your display settings.\n7.  Choose "Enter your email address."\n8.  Enter your email address and press enter.\n9.  Go to your email inbox and look for an email titled "Roku | Activate your device" to complete the activation.\n\nSource: `https://paramount.atlassian.net/wiki/spaces/PLQA/pages/47710384`', 'requires_approval': False, 'execution_id': 1553}
2025-08-21 10:52:27,006 - dig_connector - INFO - [dig_connector.py:154] - Extracting response content...
2025-08-21 10:52:27,006 - dig_connector - DEBUG - [dig_connector.py:221] - Found message_text in response
2025-08-21 10:52:27,006 - dig_connector - INFO - [dig_connector.py:157] - Successfully generated response (length: 772)
2025-08-21 10:52:27,006 - __main__ - INFO - [main.py:412] - Received DM response from DIG AI
2025-08-21 10:52:27,006 - __main__ - DEBUG - [main.py:413] - DIG AI DM response: To connect your Roku device, follow these steps:

1.  On your Roku device, navigate to **Settings** > **System** > **Advanced System Settings**.
2.  Select **Factory Reset** and enter the code displayed on the screen.
3.  The Roku device will restart.
4.  Pair your remote and select your preferred language.
5.  Select a network to connect to and enter the Wi-Fi password. You may need to visit `http://my.roku.com/index` on a computer to complete the connection.
6.  Select your display settings.
7.  Choose "Enter your email address."
8.  Enter your email address and press enter.
9.  Go to your email inbox and look for an email titled "Roku | Activate your device" to complete the activation.

Source: `https://paramount.atlassian.net/wiki/spaces/PLQA/pages/47710384`
2025-08-21 10:52:27,007 - __main__ - DEBUG - [main.py:418] - Formatted DM response: *Your Query:* How to connect a roku device ?

*Answer:*
To connect your Roku device, follow these steps:

1.  On your Roku device, navigate to *Settings* > *System* > *Advanced System Settings*.
2.  Select *Factory Reset* and enter the code displayed on the screen.
3.  The Roku device will restart.
4.  Pair your remote and select your preferred language.
5.  Select a network to connect to and enter the Wi-Fi password. You may need to visit `http://my.roku.com/index` on a computer to complete the connection.
6.  Select your display settings.
7.  Choose "Enter your email address."
8.  Enter your email address and press enter.
9.  Go to your email inbox and look for an email titled "Roku | Activate your device" to complete the activation.

Source: `https://paramount.atlassian.net/wiki/spaces/PLQA/pages/47710384`
2025-08-21 10:52:27,007 - slack_sdk.web.base_client - DEBUG - [base_client.py:255] - Sending a request - url: https://slack.com/api/reactions.remove, query_params: {}, body_params: {'name': 'thinking_face', 'channel': 'D09A0LFHK8R', 'timestamp': '1755798738.939339', 'team_id': 'T010QS7UQNA'}, files: {}, json_body: None, headers: {'Content-Type': 'application/x-www-form-urlencoded', 'Authorization': '(redacted)', 'User-Agent': 'Python/3.12.0 slackclient/3.34.0 Darwin/23.4.0'}
2025-08-21 10:52:27,404 - slack_sdk.web.base_client - DEBUG - [base_client.py:546] - Received the following response - status: 200, headers: {'date': 'Thu, 21 Aug 2025 17:52:27 GMT', 'server': 'Apache', 'vary': 'Accept-Encoding', 'x-slack-req-id': '951dcb0be7da30a45e680f4cf67e2311', 'x-content-type-options': 'nosniff', 'x-xss-protection': '0', 'pragma': 'no-cache', 'cache-control': 'private, no-cache, no-store, must-revalidate', 'expires': 'Sat, 26 Jul 1997 05:00:00 GMT', 'content-type': 'application/json; charset=utf-8', 'x-accepted-oauth-scopes': 'reactions:write', 'x-oauth-scopes': 'app_mentions:read,channels:history,chat:write,im:history,im:read,im:write,users:read,reactions:write', 'access-control-expose-headers': 'x-slack-req-id, retry-after', 'access-control-allow-headers': 'slack-route, x-slack-version-ts, x-b3-traceid, x-b3-spanid, x-b3-parentspanid, x-b3-sampled, x-b3-flags', 'strict-transport-security': 'max-age=31536000; includeSubDomains; preload', 'referrer-policy': 'no-referrer', 'x-slack-unique-id': 'aKdc253QjApqxXUPsjCc1gAAADw', 'x-slack-backend': 'r', 'access-control-allow-origin': '*', 'content-length': '11', 'via': '1.1 slack-prod.tinyspeck.com, envoy-www-iad-ernvsxhq,envoy-edge-pdx-yfkqhqii', 'x-envoy-attempt-count': '1', 'x-envoy-upstream-service-time': '138', 'x-backend': 'main_normal main_canary_with_overflow main_control_with_overflow', 'x-server': 'slack-www-hhvm-main-iad-utgu', 'x-slack-shared-secret-outcome': 'no-match', 'x-edge-backend': 'envoy-www', 'timing-allow-origin': '*', 'x-slack-edge-shared-secret-outcome': 'no-match', 'connection': 'close'}, body: {"ok":true}
2025-08-21 10:52:27,405 - slack_sdk.web.base_client - DEBUG - [base_client.py:255] - Sending a request - url: https://slack.com/api/chat.postMessage, query_params: {}, body_params: {}, files: {}, json_body: {'channel': 'D09A0LFHK8R', 'text': '*Your Query:* How to connect a roku device ?\n\n*Answer:*\nTo connect your Roku device, follow these steps:\n\n1.  On your Roku device, navigate to *Settings* > *System* > *Advanced System Settings*.\n2.  Select *Factory Reset* and enter the code displayed on the screen.\n3.  The Roku device will restart.\n4.  Pair your remote and select your preferred language.\n5.  Select a network to connect to and enter the Wi-Fi password. You may need to visit `http://my.roku.com/index` on a computer to complete the connection.\n6.  Select your display settings.\n7.  Choose "Enter your email address."\n8.  Enter your email address and press enter.\n9.  Go to your email inbox and look for an email titled "Roku | Activate your device" to complete the activation.\n\nSource: `https://paramount.atlassian.net/wiki/spaces/PLQA/pages/47710384`', 'thread_ts': '1755798738.939339', 'team_id': 'T010QS7UQNA'}, headers: {'Content-Type': 'application/json;charset=utf-8', 'Authorization': '(redacted)', 'User-Agent': 'Python/3.12.0 slackclient/3.34.0 Darwin/23.4.0'}
2025-08-21 10:52:27,815 - slack_sdk.web.base_client - DEBUG - [base_client.py:546] - Received the following response - status: 200, headers: {'date': 'Thu, 21 Aug 2025 17:52:27 GMT', 'server': 'Apache', 'vary': 'Accept-Encoding', 'x-slack-req-id': '6e96bec51f8c69d4ab213afc21969e27', 'x-content-type-options': 'nosniff', 'x-xss-protection': '0', 'pragma': 'no-cache', 'cache-control': 'private, no-cache, no-store, must-revalidate', 'expires': 'Sat, 26 Jul 1997 05:00:00 GMT', 'content-type': 'application/json; charset=utf-8', 'x-accepted-oauth-scopes': 'chat:write', 'x-oauth-scopes': 'app_mentions:read,channels:history,chat:write,im:history,im:read,im:write,users:read,reactions:write', 'access-control-expose-headers': 'x-slack-req-id, retry-after', 'access-control-allow-headers': 'slack-route, x-slack-version-ts, x-b3-traceid, x-b3-spanid, x-b3-parentspanid, x-b3-sampled, x-b3-flags', 'strict-transport-security': 'max-age=31536000; includeSubDomains; preload', 'referrer-policy': 'no-referrer', 'x-slack-unique-id': 'aKdc27lGlsPXCTG_zOKJ3QAAADs', 'x-slack-backend': 'r', 'access-control-allow-origin': '*', 'content-length': '3004', 'via': '1.1 slack-prod.tinyspeck.com, envoy-www-iad-efridlpi,envoy-edge-pdx-iosmftpd', 'x-envoy-attempt-count': '1', 'x-envoy-upstream-service-time': '178', 'x-backend': 'main_normal main_canary_with_overflow main_control_with_overflow', 'x-server': 'slack-www-hhvm-main-iad-qzqv', 'x-slack-shared-secret-outcome': 'no-match', 'x-edge-backend': 'envoy-www', 'timing-allow-origin': '*', 'x-slack-edge-shared-secret-outcome': 'no-match', 'connection': 'close'}, body: {"ok":true,"channel":"D09A0LFHK8R","ts":"1755798747.766399","message":{"user":"U099R6WTZ9S","type":"message","ts":"1755798747.766399","bot_id":"B099R6WTRU4","app_id":"A099LACAB2R","text":"*Your Query:* How to connect a roku device ?\n\n*Answer:*\nTo connect your Roku device, follow these steps:\n\n1.  On your Roku device, navigate to *Settings* &gt; *System* &gt; *Advanced System Settings*.\n2.  Select *Factory Reset* and enter the code displayed on the screen.\n3.  The Roku device will restart.\n4.  Pair your remote and select your preferred language.\n5.  Select a network to connect to and enter the Wi-Fi password. You may need to visit `<http://my.roku.com/index>` on a computer to complete the connection.\n6.  Select your display settings.\n7.  Choose \"Enter your email address.\"\n8.  Enter your email address and press enter.\n9.  Go to your email inbox and look for an email titled \"Roku | Activate your device\" to complete the activation.\n\nSource: `<https://paramount.atlassian.net/wiki/spaces/PLQA/pages/47710384>`","team":"T010QS7UQNA","bot_profile":{"id":"B099R6WTRU4","app_id":"A099LACAB2R","user_id":"U099R6WTZ9S","name":"AutoBot","icons":{"image_36":"https://a.slack-edge.com/80588/img/plugins/app/bot_36.png","image_48":"https://a.slack-edge.com/80588/img/plugins/app/bot_48.png","image_72":"https://a.slack-edge.com/80588/img/plugins/app/service_72.png"},"deleted":false,"updated":1754677948,"team_id":"T010QS7UQNA"},"thread_ts":"1755798738.939339","parent_user_id":"U01RMTFMALF","blocks":[{"type":"rich_text","block_id":"mUgC=","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Your Query:","style":{"bold":true}},{"type":"text","text":" How to connect a roku device ?\n\n"},{"type":"text","text":"Answer:","style":{"bold":true}},{"type":"text","text":"\nTo connect your Roku device, follow these steps:\n\n1.  On your Roku device, navigate to "},{"type":"text","text":"Settings","style":{"bold":true}},{"type":"text","text":" > "},{"type":"text","text":"System","style":{"bold":true}},{"type":"text","text":" > "},{"type":"text","text":"Advanced System Settings","style":{"bold":true}},{"type":"text","text":".\n2.  Select "},{"type":"text","text":"Factory Reset","style":{"bold":true}},{"type":"text","text":" and enter the code displayed on the screen.\n3.  The Roku device will restart.\n4.  Pair your remote and select your preferred language.\n5.  Select a network to connect to and enter the Wi-Fi password. You may need to visit "},{"type":"link","url":"http://my.roku.com/index","style":{"code":true}},{"type":"text","text":" on a computer to complete the connection.\n6.  Select your display settings.\n7.  Choose \"Enter your email address.\"\n8.  Enter your email address and press enter.\n9.  Go to your email inbox and look for an email titled \"Roku | Activate your device\" to complete the activation.\n\nSource: "},{"type":"link","url":"https://paramount.atlassian.net/wiki/spaces/PLQA/pages/47710384","style":{"code":true}}]}]}]}}
2025-08-21 10:52:27,816 - __main__ - DEBUG - [main.py:443] - Cleaning up DM thread tracking...
2025-08-21 10:52:27,816 - utils - DEBUG - [utils.py:67] - Managing thread: D09A0LFHK8R:1755798738.939339, action: remove, user: U01RMTFMALF
2025-08-21 10:52:27,816 - utils - INFO - [utils.py:100] - Removed thread D09A0LFHK8R:1755798738.939339 from active tracking (remaining: 0)
2025-08-21 10:52:28,109 - slack_bolt.App - DEBUG - [client.py:235] - on_message invoked: (message: {"envelope_id":"2d44824f-44d2-40d3-91cc-598e445b9575","payload":{"token":"yq71khZBCyJF1Ri2hG5aNqr5","team_id":"T010QS7UQNA","enterprise_id":"ERV4P7NAD","context_team_id":null,"context_enterprise_id":"ERV4P7NAD","api_app_id":"A099LACAB2R","event":{"user":"U099R6WTZ9S","type":"message","ts":"1755798747.766399","bot_id":"B099R6WTRU4","app_id":"A099LACAB2R","text":"*Your Query:* How to connect a roku device ?\n\n*Answer:*\nTo connect your Roku device, follow these steps:\n\n1.  On your Roku device, navigate to *Settings* &gt; *System* &gt; *Advanced System Settings*.\n2.  Select *Factory Reset* and enter the code displayed on the screen.\n3.  The Roku device will restart.\n4.  Pair your remote and select your preferred language.\n5.  Select a network to connect to and enter the Wi-Fi password. You may need to visit `<http:\/\/my.roku.com\/index>` on a computer to complete the connection.\n6.  Select your display settings.\n7.  Choose \"Enter your email address.\"\n8.  Enter your email address and press enter.\n9.  Go to your email inbox and look for an email titled \"Roku | Activate your device\" to complete the activation.\n\nSource: `<https:\/\/paramount.atlassian.net\/wiki\/spaces\/PLQA\/pages\/47710384>`","team":"T010QS7UQNA","bot_profile":{"id":"B099R6WTRU4","deleted":false,"name":"AutoBot","updated":1754677948,"app_id":"A099LACAB2R","user_id":"U099R6WTZ9S","icons":{"image_36":"https:\/\/a.slack-edge.com\/80588\/img\/plugins\/app\/bot_36.png","image_48":"https:\/\/a.slack-edge.com\/80588\/img\/plugins\/app\/bot_48.png","image_72":"https:\/\/a.slack-edge.com\/80588\/img\/plugins\/app\/service_72.png"},"team_id":"T010QS7UQNA"},"thread_ts":"1755798738.939339","parent_user_id":"U01RMTFMALF","blocks":[{"type":"rich_text","block_id":"Ocd","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Your Query:","style":{"bold":true}},{"type":"text","text":" How to connect a roku device ?\n\n"},{"type":"text","text":"Answer:","style":{"bold":true}},{"type":"text","text":"\nTo connect your Roku device, follow these steps:\n\n1.  On your Roku device, navigate to "},{"type":"text","text":"Settings","style":{"bold":true}},{"type":"text","text":" > "},{"type":"text","text":"System","style":{"bold":true}},{"type":"text","text":" > "},{"type":"text","text":"Advanced System Settings","style":{"bold":true}},{"type":"text","text":".\n2.  Select "},{"type":"text","text":"Factory Reset","style":{"bold":true}},{"type":"text","text":" and enter the code displayed on the screen.\n3.  The Roku device will restart.\n4.  Pair your remote and select your preferred language.\n5.  Select a network to connect to and enter the Wi-Fi password. You may need to visit "},{"type":"link","url":"http:\/\/my.roku.com\/index","style":{"code":true}},{"type":"text","text":" on a computer to complete the connection.\n6.  Select your display settings.\n7.  Choose \"Enter your email address.\"\n8.  Enter your email address and press enter.\n9.  Go to your email inbox and look for an email titled \"Roku | Activate your device\" to complete the activation.\n\nSource: "},{"type":"link","url":"https:\/\/paramount.atlassian.net\/wiki\/spaces\/PLQA\/pages\/47710384","style":{"code":true}}]}]}],"channel":"D09A0LFHK8R","event_ts":"1755798747.766399","channel_type":"im"},"type":"event_callback","event_id":"Ev09B3FE5LJ3","event_time":1755798747,"authorizations":[{"enterprise_id":"ERV4P7NAD","team_id":"T010QS7UQNA","user_id":"U099R6WTZ9S","is_bot":true,"is_enterprise_install":false}],"is_ext_shared_channel":false,"event_context":"4-eyJldCI6Im1lc3NhZ2UiLCJ0aWQiOiJUMDEwUVM3VVFOQSIsImFpZCI6IkEwOTlMQUNBQjJSIiwiY2lkIjoiRDA5QTBMRkhLOFIifQ"},"type":"events_api","accepts_response_payload":false,"retry_attempt":0,"retry_reason":""})
2025-08-21 10:52:28,110 - slack_bolt.App - DEBUG - [client.py:99] - A new message enqueued (current queue size: 1)
2025-08-21 10:52:28,110 - slack_bolt.App - DEBUG - [client.py:105] - A message dequeued (current queue size: 0)
2025-08-21 10:52:28,110 - slack_bolt.App - DEBUG - [client.py:125] - Message processing started (type: events_api, envelope_id: 2d44824f-44d2-40d3-91cc-598e445b9575)
2025-08-21 10:52:28,111 - slack_bolt.App - DEBUG - [app.py:476] - Applying slack_bolt.middleware.ssl_check.ssl_check.SslCheck
2025-08-21 10:52:28,111 - slack_bolt.App - DEBUG - [app.py:476] - Applying slack_bolt.middleware.request_verification.request_verification.RequestVerification
2025-08-21 10:52:28,111 - slack_bolt.App - DEBUG - [app.py:476] - Applying slack_bolt.middleware.authorization.single_team_authorization.SingleTeamAuthorization
2025-08-21 10:52:28,111 - slack_bolt.App - DEBUG - [app.py:476] - Applying slack_bolt.middleware.ignoring_self_events.ignoring_self_events.IgnoringSelfEvents
2025-08-21 10:52:28,111 - slack_bolt.IgnoringSelfEvents - DEBUG - [ignoring_self_events.py:60] - Skipped self event: {'user': 'U099R6WTZ9S', 'type': 'message', 'ts': '1755798747.766399', 'bot_id': 'B099R6WTRU4', 'app_id': 'A099LACAB2R', 'text': '*Your Query:* How to connect a roku device ?\n\n*Answer:*\nTo connect your Roku device, follow these steps:\n\n1.  On your Roku device, navigate to *Settings* &gt; *System* &gt; *Advanced System Settings*.\n2.  Select *Factory Reset* and enter the code displayed on the screen.\n3.  The Roku device will restart.\n4.  Pair your remote and select your preferred language.\n5.  Select a network to connect to and enter the Wi-Fi password. You may need to visit `<http://my.roku.com/index>` on a computer to complete the connection.\n6.  Select your display settings.\n7.  Choose "Enter your email address."\n8.  Enter your email address and press enter.\n9.  Go to your email inbox and look for an email titled "Roku | Activate your device" to complete the activation.\n\nSource: `<https://paramount.atlassian.net/wiki/spaces/PLQA/pages/47710384>`', 'team': 'T010QS7UQNA', 'bot_profile': {'id': 'B099R6WTRU4', 'deleted': False, 'name': 'AutoBot', 'updated': 1754677948, 'app_id': 'A099LACAB2R', 'user_id': 'U099R6WTZ9S', 'icons': {'image_36': 'https://a.slack-edge.com/80588/img/plugins/app/bot_36.png', 'image_48': 'https://a.slack-edge.com/80588/img/plugins/app/bot_48.png', 'image_72': 'https://a.slack-edge.com/80588/img/plugins/app/service_72.png'}, 'team_id': 'T010QS7UQNA'}, 'thread_ts': '1755798738.939339', 'parent_user_id': 'U01RMTFMALF', 'blocks': [{'type': 'rich_text', 'block_id': 'Ocd', 'elements': [{'type': 'rich_text_section', 'elements': [{'type': 'text', 'text': 'Your Query:', 'style': {'bold': True}}, {'type': 'text', 'text': ' How to connect a roku device ?\n\n'}, {'type': 'text', 'text': 'Answer:', 'style': {'bold': True}}, {'type': 'text', 'text': '\nTo connect your Roku device, follow these steps:\n\n1.  On your Roku device, navigate to '}, {'type': 'text', 'text': 'Settings', 'style': {'bold': True}}, {'type': 'text', 'text': ' > '}, {'type': 'text', 'text': 'System', 'style': {'bold': True}}, {'type': 'text', 'text': ' > '}, {'type': 'text', 'text': 'Advanced System Settings', 'style': {'bold': True}}, {'type': 'text', 'text': '.\n2.  Select '}, {'type': 'text', 'text': 'Factory Reset', 'style': {'bold': True}}, {'type': 'text', 'text': ' and enter the code displayed on the screen.\n3.  The Roku device will restart.\n4.  Pair your remote and select your preferred language.\n5.  Select a network to connect to and enter the Wi-Fi password. You may need to visit '}, {'type': 'link', 'url': 'http://my.roku.com/index', 'style': {'code': True}}, {'type': 'text', 'text': ' on a computer to complete the connection.\n6.  Select your display settings.\n7.  Choose "Enter your email address."\n8.  Enter your email address and press enter.\n9.  Go to your email inbox and look for an email titled "Roku | Activate your device" to complete the activation.\n\nSource: '}, {'type': 'link', 'url': 'https://paramount.atlassian.net/wiki/spaces/PLQA/pages/47710384', 'style': {'code': True}}]}]}], 'channel': 'D09A0LFHK8R', 'event_ts': '1755798747.766399', 'channel_type': 'im'}
2025-08-21 10:52:28,111 - slack_bolt.App - DEBUG - [client.py:200] - Sending a message (session id: cfda5711-2a79-4ada-b093-99b5ab81ee4b, message: {"envelope_id": "2d44824f-44d2-40d3-91cc-598e445b9575"})
2025-08-21 10:52:28,111 - slack_bolt.App - DEBUG - [internals.py:41] - Response time: 0 milliseconds
2025-08-21 10:52:28,111 - slack_bolt.App - DEBUG - [client.py:150] - Message processing completed (type: events_api, envelope_id: 2d44824f-44d2-40d3-91cc-598e445b9575)
2025-08-21 10:59:34,083 - slack_bolt.App - DEBUG - [client.py:235] - on_message invoked: (message: {"envelope_id":"85ab8751-f18d-46ff-b106-203a8fc09282","payload":{"token":"yq71khZBCyJF1Ri2hG5aNqr5","team_id":"T010QS7UQNA","enterprise_id":"ERV4P7NAD","context_team_id":null,"context_enterprise_id":"ERV4P7NAD","api_app_id":"A099LACAB2R","event":{"type":"message","subtype":"message_deleted","previous_message":{"user":"U01RMTFMALF","type":"message","ts":"1755797548.092749","client_msg_id":"3148b175-e5e9-458d-b2cf-6641a8243f8b","text":"Hello","blocks":[{"type":"rich_text","block_id":"HnjxV","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Hello"}]}]}]},"channel":"D09A0LFHK8R","hidden":true,"deleted_ts":"1755797548.092749","event_ts":"1755799173.001400","ts":"1755799173.001400","channel_type":"im"},"type":"event_callback","event_id":"Ev09C9A9K4EL","event_time":1755799173,"authorizations":[{"enterprise_id":"ERV4P7NAD","team_id":"T010QS7UQNA","user_id":"U099R6WTZ9S","is_bot":true,"is_enterprise_install":false}],"is_ext_shared_channel":false,"event_context":"4-eyJldCI6Im1lc3NhZ2UiLCJ0aWQiOiJUMDEwUVM3VVFOQSIsImFpZCI6IkEwOTlMQUNBQjJSIiwiY2lkIjoiRDA5QTBMRkhLOFIifQ"},"type":"events_api","accepts_response_payload":false,"retry_attempt":0,"retry_reason":""})
2025-08-21 10:59:34,086 - slack_bolt.App - DEBUG - [client.py:99] - A new message enqueued (current queue size: 1)
2025-08-21 10:59:34,086 - slack_bolt.App - DEBUG - [client.py:105] - A message dequeued (current queue size: 0)
2025-08-21 10:59:34,086 - slack_bolt.App - DEBUG - [client.py:125] - Message processing started (type: events_api, envelope_id: 85ab8751-f18d-46ff-b106-203a8fc09282)
2025-08-21 10:59:34,087 - slack_bolt.App - DEBUG - [app.py:476] - Applying slack_bolt.middleware.ssl_check.ssl_check.SslCheck
2025-08-21 10:59:34,088 - slack_bolt.App - DEBUG - [app.py:476] - Applying slack_bolt.middleware.request_verification.request_verification.RequestVerification
2025-08-21 10:59:34,088 - slack_bolt.App - DEBUG - [app.py:476] - Applying slack_bolt.middleware.authorization.single_team_authorization.SingleTeamAuthorization
2025-08-21 10:59:34,088 - slack_bolt.App - DEBUG - [app.py:476] - Applying slack_bolt.middleware.ignoring_self_events.ignoring_self_events.IgnoringSelfEvents
2025-08-21 10:59:34,088 - slack_bolt.App - DEBUG - [app.py:476] - Applying slack_bolt.middleware.url_verification.url_verification.UrlVerification
2025-08-21 10:59:34,088 - slack_bolt.App - DEBUG - [app.py:500] - Checking listener: handle_app_mentions ...
2025-08-21 10:59:34,088 - slack_bolt.App - DEBUG - [app.py:500] - Checking listener: help_message ...
2025-08-21 10:59:34,089 - slack_bolt.App - DEBUG - [app.py:500] - Checking listener: handle_dm_messages ...
2025-08-21 10:59:34,089 - slack_bolt.App - DEBUG - [app.py:522] - Running listener: handle_dm_messages ...
2025-08-21 10:59:34,089 - slack_bolt.App - DEBUG - [thread_runner.py:198] - Responding with status: 200 body: "" (0 millis)
2025-08-21 10:59:34,089 - __main__ - INFO - [main.py:307] - === DM MESSAGE EVENT RECEIVED ===
2025-08-21 10:59:34,090 - slack_bolt.App - DEBUG - [client.py:200] - Sending a message (session id: cfda5711-2a79-4ada-b093-99b5ab81ee4b, message: {"envelope_id": "85ab8751-f18d-46ff-b106-203a8fc09282"})
2025-08-21 10:59:34,090 - __main__ - DEBUG - [main.py:308] - Full event body: {'token': 'yq71khZBCyJF1Ri2hG5aNqr5', 'team_id': 'T010QS7UQNA', 'enterprise_id': 'ERV4P7NAD', 'context_team_id': None, 'context_enterprise_id': 'ERV4P7NAD', 'api_app_id': 'A099LACAB2R', 'event': {'type': 'message', 'subtype': 'message_deleted', 'previous_message': {'user': 'U01RMTFMALF', 'type': 'message', 'ts': '1755797548.092749', 'client_msg_id': '3148b175-e5e9-458d-b2cf-6641a8243f8b', 'text': 'Hello', 'blocks': [{'type': 'rich_text', 'block_id': 'HnjxV', 'elements': [{'type': 'rich_text_section', 'elements': [{'type': 'text', 'text': 'Hello'}]}]}]}, 'channel': 'D09A0LFHK8R', 'hidden': True, 'deleted_ts': '1755797548.092749', 'event_ts': '1755799173.001400', 'ts': '1755799173.001400', 'channel_type': 'im'}, 'type': 'event_callback', 'event_id': 'Ev09C9A9K4EL', 'event_time': 1755799173, 'authorizations': [{'enterprise_id': 'ERV4P7NAD', 'team_id': 'T010QS7UQNA', 'user_id': 'U099R6WTZ9S', 'is_bot': True, 'is_enterprise_install': False}], 'is_ext_shared_channel': False, 'event_context': '4-eyJldCI6Im1lc3NhZ2UiLCJ0aWQiOiJUMDEwUVM3VVFOQSIsImFpZCI6IkEwOTlMQUNBQjJSIiwiY2lkIjoiRDA5QTBMRkhLOFIifQ'}
2025-08-21 10:59:34,090 - __main__ - INFO - [main.py:317] - DM Event details: channel=D09A0LFHK8R, user=None, ts=1755799173.001400
2025-08-21 10:59:34,090 - __main__ - DEBUG - [main.py:318] - DM Event text: 
2025-08-21 10:59:34,090 - slack_bolt.App - DEBUG - [internals.py:41] - Response time: 3 milliseconds
2025-08-21 10:59:34,090 - utils - DEBUG - [utils.py:27] - Checking message processing: channel=D09A0LFHK8R, ts=1755799173.001400, text='...'
2025-08-21 10:59:34,090 - slack_bolt.App - DEBUG - [client.py:150] - Message processing completed (type: events_api, envelope_id: 85ab8751-f18d-46ff-b106-203a8fc09282)
2025-08-21 10:59:34,090 - utils - DEBUG - [utils.py:31] - Message hash: 638b3f43d542b5376da7db1fba472f02
2025-08-21 10:59:34,091 - utils - DEBUG - [utils.py:42] - Cleaning up 1 expired message entries
2025-08-21 10:59:34,091 - utils - DEBUG - [utils.py:53] - Added message to processing cache (total entries: 1)
2025-08-21 10:59:34,091 - __main__ - DEBUG - [main.py:331] - Bot check: bot_id=None, user_id=None
2025-08-21 10:59:34,091 - __main__ - DEBUG - [main.py:336] - Question received: ''
2025-08-21 10:59:34,091 - __main__ - WARNING - [main.py:338] - Empty question in DM
2025-08-21 10:59:34,092 - slack_sdk.web.base_client - DEBUG - [base_client.py:255] - Sending a request - url: https://slack.com/api/chat.postMessage, query_params: {}, body_params: {}, files: {}, json_body: {'channel': 'D09A0LFHK8R', 'text': 'Please ask me a question! 📚', 'team_id': 'T010QS7UQNA'}, headers: {'Content-Type': 'application/json;charset=utf-8', 'Authorization': '(redacted)', 'User-Agent': 'Python/3.12.0 slackclient/3.34.0 Darwin/23.4.0'}
2025-08-21 10:59:34,504 - slack_sdk.web.base_client - DEBUG - [base_client.py:546] - Received the following response - status: 200, headers: {'date': 'Thu, 21 Aug 2025 17:59:34 GMT', 'server': 'Apache', 'vary': 'Accept-Encoding', 'x-slack-req-id': '01367d3acb7798385184adcd8fbf96db', 'x-content-type-options': 'nosniff', 'x-xss-protection': '0', 'pragma': 'no-cache', 'cache-control': 'private, no-cache, no-store, must-revalidate', 'expires': 'Sat, 26 Jul 1997 05:00:00 GMT', 'content-type': 'application/json; charset=utf-8', 'x-accepted-oauth-scopes': 'chat:write', 'x-oauth-scopes': 'app_mentions:read,channels:history,chat:write,im:history,im:read,im:write,users:read,reactions:write', 'access-control-expose-headers': 'x-slack-req-id, retry-after', 'access-control-allow-headers': 'slack-route, x-slack-version-ts, x-b3-traceid, x-b3-spanid, x-b3-parentspanid, x-b3-sampled, x-b3-flags', 'strict-transport-security': 'max-age=31536000; includeSubDomains; preload', 'referrer-policy': 'no-referrer', 'x-slack-unique-id': 'aKdehoOusxWoYyf39HU5AwAAAAk', 'x-slack-backend': 'r', 'access-control-allow-origin': '*', 'content-length': '838', 'via': '1.1 slack-prod.tinyspeck.com, envoy-www-iad-frqecfyv,envoy-edge-pdx-wjjjcjaw', 'x-envoy-attempt-count': '1', 'x-envoy-upstream-service-time': '150', 'x-backend': 'main_normal main_canary_with_overflow main_control_with_overflow', 'x-server': 'slack-www-hhvm-main-iad-ktdx', 'x-slack-shared-secret-outcome': 'no-match', 'x-edge-backend': 'envoy-www', 'timing-allow-origin': '*', 'x-slack-edge-shared-secret-outcome': 'no-match', 'connection': 'close'}, body: {"ok":true,"channel":"D09A0LFHK8R","ts":"1755799174.474059","message":{"user":"U099R6WTZ9S","type":"message","ts":"1755799174.474059","bot_id":"B099R6WTRU4","app_id":"A099LACAB2R","text":"Please ask me a question! :books:","team":"T010QS7UQNA","bot_profile":{"id":"B099R6WTRU4","app_id":"A099LACAB2R","user_id":"U099R6WTZ9S","name":"AutoBot","icons":{"image_36":"https://a.slack-edge.com/80588/img/plugins/app/bot_36.png","image_48":"https://a.slack-edge.com/80588/img/plugins/app/bot_48.png","image_72":"https://a.slack-edge.com/80588/img/plugins/app/service_72.png"},"deleted":false,"updated":1754677948,"team_id":"T010QS7UQNA"},"blocks":[{"type":"rich_text","block_id":"1Jp","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Please ask me a question! "},{"type":"emoji","name":"books","unicode":"1f4da"}]}]}]}}
2025-08-21 10:59:35,217 - slack_bolt.App - DEBUG - [client.py:235] - on_message invoked: (message: {"envelope_id":"ed637a70-bb54-4bc6-a72c-90de44c6230d","payload":{"token":"yq71khZBCyJF1Ri2hG5aNqr5","team_id":"T010QS7UQNA","enterprise_id":"ERV4P7NAD","context_team_id":null,"context_enterprise_id":"ERV4P7NAD","api_app_id":"A099LACAB2R","event":{"user":"U099R6WTZ9S","type":"message","ts":"1755799174.474059","bot_id":"B099R6WTRU4","app_id":"A099LACAB2R","text":"Please ask me a question! :books:","team":"T010QS7UQNA","bot_profile":{"id":"B099R6WTRU4","deleted":false,"name":"AutoBot","updated":1754677948,"app_id":"A099LACAB2R","user_id":"U099R6WTZ9S","icons":{"image_36":"https:\/\/a.slack-edge.com\/80588\/img\/plugins\/app\/bot_36.png","image_48":"https:\/\/a.slack-edge.com\/80588\/img\/plugins\/app\/bot_48.png","image_72":"https:\/\/a.slack-edge.com\/80588\/img\/plugins\/app\/service_72.png"},"team_id":"T010QS7UQNA"},"blocks":[{"type":"rich_text","block_id":"ajpx","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Please ask me a question! "},{"type":"emoji","name":"books","unicode":"1f4da"}]}]}],"channel":"D09A0LFHK8R","event_ts":"1755799174.474059","channel_type":"im"},"type":"event_callback","event_id":"Ev09BASUHBFD","event_time":1755799174,"authorizations":[{"enterprise_id":"ERV4P7NAD","team_id":"T010QS7UQNA","user_id":"U099R6WTZ9S","is_bot":true,"is_enterprise_install":false}],"is_ext_shared_channel":false,"event_context":"4-eyJldCI6Im1lc3NhZ2UiLCJ0aWQiOiJUMDEwUVM3VVFOQSIsImFpZCI6IkEwOTlMQUNBQjJSIiwiY2lkIjoiRDA5QTBMRkhLOFIifQ"},"type":"events_api","accepts_response_payload":false,"retry_attempt":0,"retry_reason":""})
2025-08-21 10:59:35,217 - slack_bolt.App - DEBUG - [client.py:99] - A new message enqueued (current queue size: 1)
2025-08-21 10:59:35,217 - slack_bolt.App - DEBUG - [client.py:105] - A message dequeued (current queue size: 0)
2025-08-21 10:59:35,217 - slack_bolt.App - DEBUG - [client.py:125] - Message processing started (type: events_api, envelope_id: ed637a70-bb54-4bc6-a72c-90de44c6230d)
2025-08-21 10:59:35,218 - slack_bolt.App - DEBUG - [app.py:476] - Applying slack_bolt.middleware.ssl_check.ssl_check.SslCheck
2025-08-21 10:59:35,218 - slack_bolt.App - DEBUG - [app.py:476] - Applying slack_bolt.middleware.request_verification.request_verification.RequestVerification
2025-08-21 10:59:35,218 - slack_bolt.App - DEBUG - [app.py:476] - Applying slack_bolt.middleware.authorization.single_team_authorization.SingleTeamAuthorization
2025-08-21 10:59:35,218 - slack_bolt.App - DEBUG - [app.py:476] - Applying slack_bolt.middleware.ignoring_self_events.ignoring_self_events.IgnoringSelfEvents
2025-08-21 10:59:35,218 - slack_bolt.IgnoringSelfEvents - DEBUG - [ignoring_self_events.py:60] - Skipped self event: {'user': 'U099R6WTZ9S', 'type': 'message', 'ts': '1755799174.474059', 'bot_id': 'B099R6WTRU4', 'app_id': 'A099LACAB2R', 'text': 'Please ask me a question! :books:', 'team': 'T010QS7UQNA', 'bot_profile': {'id': 'B099R6WTRU4', 'deleted': False, 'name': 'AutoBot', 'updated': 1754677948, 'app_id': 'A099LACAB2R', 'user_id': 'U099R6WTZ9S', 'icons': {'image_36': 'https://a.slack-edge.com/80588/img/plugins/app/bot_36.png', 'image_48': 'https://a.slack-edge.com/80588/img/plugins/app/bot_48.png', 'image_72': 'https://a.slack-edge.com/80588/img/plugins/app/service_72.png'}, 'team_id': 'T010QS7UQNA'}, 'blocks': [{'type': 'rich_text', 'block_id': 'ajpx', 'elements': [{'type': 'rich_text_section', 'elements': [{'type': 'text', 'text': 'Please ask me a question! '}, {'type': 'emoji', 'name': 'books', 'unicode': '1f4da'}]}]}], 'channel': 'D09A0LFHK8R', 'event_ts': '1755799174.474059', 'channel_type': 'im'}
2025-08-21 10:59:35,218 - slack_bolt.App - DEBUG - [client.py:200] - Sending a message (session id: cfda5711-2a79-4ada-b093-99b5ab81ee4b, message: {"envelope_id": "ed637a70-bb54-4bc6-a72c-90de44c6230d"})
2025-08-21 10:59:35,218 - slack_bolt.App - DEBUG - [internals.py:41] - Response time: 0 milliseconds
2025-08-21 10:59:35,218 - slack_bolt.App - DEBUG - [client.py:150] - Message processing completed (type: events_api, envelope_id: ed637a70-bb54-4bc6-a72c-90de44c6230d)
2025-08-21 10:59:47,734 - slack_bolt.App - DEBUG - [client.py:235] - on_message invoked: (message: {"envelope_id":"7eb44669-41c6-4d91-97f7-31c899c06103","payload":{"token":"yq71khZBCyJF1Ri2hG5aNqr5","team_id":"T010QS7UQNA","enterprise_id":"ERV4P7NAD","context_team_id":null,"context_enterprise_id":"ERV4P7NAD","api_app_id":"A099LACAB2R","event":{"type":"message","subtype":"message_deleted","previous_message":{"user":"U01RMTFMALF","type":"message","ts":"1755797163.451589","client_msg_id":"4353415a-1edc-4fff-899c-e59d0499d8ee","text":"Hello","blocks":[{"type":"rich_text","block_id":"HnjxV","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Hello"}]}]}]},"channel":"D09A0LFHK8R","hidden":true,"deleted_ts":"1755797163.451589","event_ts":"1755799185.001500","ts":"1755799185.001500","channel_type":"im"},"type":"event_callback","event_id":"Ev09BEKMDTCM","event_time":1755799185,"authorizations":[{"enterprise_id":"ERV4P7NAD","team_id":"T010QS7UQNA","user_id":"U099R6WTZ9S","is_bot":true,"is_enterprise_install":false}],"is_ext_shared_channel":false,"event_context":"4-eyJldCI6Im1lc3NhZ2UiLCJ0aWQiOiJUMDEwUVM3VVFOQSIsImFpZCI6IkEwOTlMQUNBQjJSIiwiY2lkIjoiRDA5QTBMRkhLOFIifQ"},"type":"events_api","accepts_response_payload":false,"retry_attempt":0,"retry_reason":""})
2025-08-21 10:59:47,735 - slack_bolt.App - DEBUG - [client.py:99] - A new message enqueued (current queue size: 1)
2025-08-21 10:59:47,735 - slack_bolt.App - DEBUG - [client.py:105] - A message dequeued (current queue size: 0)
2025-08-21 10:59:47,736 - slack_bolt.App - DEBUG - [client.py:125] - Message processing started (type: events_api, envelope_id: 7eb44669-41c6-4d91-97f7-31c899c06103)
2025-08-21 10:59:47,736 - slack_bolt.App - DEBUG - [app.py:476] - Applying slack_bolt.middleware.ssl_check.ssl_check.SslCheck
2025-08-21 10:59:47,737 - slack_bolt.App - DEBUG - [app.py:476] - Applying slack_bolt.middleware.request_verification.request_verification.RequestVerification
2025-08-21 10:59:47,737 - slack_bolt.App - DEBUG - [app.py:476] - Applying slack_bolt.middleware.authorization.single_team_authorization.SingleTeamAuthorization
2025-08-21 10:59:47,737 - slack_bolt.App - DEBUG - [app.py:476] - Applying slack_bolt.middleware.ignoring_self_events.ignoring_self_events.IgnoringSelfEvents
2025-08-21 10:59:47,737 - slack_bolt.App - DEBUG - [app.py:476] - Applying slack_bolt.middleware.url_verification.url_verification.UrlVerification
2025-08-21 10:59:47,737 - slack_bolt.App - DEBUG - [app.py:500] - Checking listener: handle_app_mentions ...
2025-08-21 10:59:47,738 - slack_bolt.App - DEBUG - [app.py:500] - Checking listener: help_message ...
2025-08-21 10:59:47,738 - slack_bolt.App - DEBUG - [app.py:500] - Checking listener: handle_dm_messages ...
2025-08-21 10:59:47,738 - slack_bolt.App - DEBUG - [app.py:522] - Running listener: handle_dm_messages ...
2025-08-21 10:59:47,738 - slack_bolt.App - DEBUG - [thread_runner.py:198] - Responding with status: 200 body: "" (0 millis)
2025-08-21 10:59:47,738 - __main__ - INFO - [main.py:307] - === DM MESSAGE EVENT RECEIVED ===
2025-08-21 10:59:47,738 - slack_bolt.App - DEBUG - [client.py:200] - Sending a message (session id: cfda5711-2a79-4ada-b093-99b5ab81ee4b, message: {"envelope_id": "7eb44669-41c6-4d91-97f7-31c899c06103"})
2025-08-21 10:59:47,738 - __main__ - DEBUG - [main.py:308] - Full event body: {'token': 'yq71khZBCyJF1Ri2hG5aNqr5', 'team_id': 'T010QS7UQNA', 'enterprise_id': 'ERV4P7NAD', 'context_team_id': None, 'context_enterprise_id': 'ERV4P7NAD', 'api_app_id': 'A099LACAB2R', 'event': {'type': 'message', 'subtype': 'message_deleted', 'previous_message': {'user': 'U01RMTFMALF', 'type': 'message', 'ts': '1755797163.451589', 'client_msg_id': '4353415a-1edc-4fff-899c-e59d0499d8ee', 'text': 'Hello', 'blocks': [{'type': 'rich_text', 'block_id': 'HnjxV', 'elements': [{'type': 'rich_text_section', 'elements': [{'type': 'text', 'text': 'Hello'}]}]}]}, 'channel': 'D09A0LFHK8R', 'hidden': True, 'deleted_ts': '1755797163.451589', 'event_ts': '1755799185.001500', 'ts': '1755799185.001500', 'channel_type': 'im'}, 'type': 'event_callback', 'event_id': 'Ev09BEKMDTCM', 'event_time': 1755799185, 'authorizations': [{'enterprise_id': 'ERV4P7NAD', 'team_id': 'T010QS7UQNA', 'user_id': 'U099R6WTZ9S', 'is_bot': True, 'is_enterprise_install': False}], 'is_ext_shared_channel': False, 'event_context': '4-eyJldCI6Im1lc3NhZ2UiLCJ0aWQiOiJUMDEwUVM3VVFOQSIsImFpZCI6IkEwOTlMQUNBQjJSIiwiY2lkIjoiRDA5QTBMRkhLOFIifQ'}
2025-08-21 10:59:47,739 - __main__ - INFO - [main.py:317] - DM Event details: channel=D09A0LFHK8R, user=None, ts=1755799185.001500
2025-08-21 10:59:47,739 - __main__ - DEBUG - [main.py:318] - DM Event text: 
2025-08-21 10:59:47,739 - slack_bolt.App - DEBUG - [internals.py:41] - Response time: 2 milliseconds
2025-08-21 10:59:47,739 - utils - DEBUG - [utils.py:27] - Checking message processing: channel=D09A0LFHK8R, ts=1755799185.001500, text='...'
2025-08-21 10:59:47,739 - slack_bolt.App - DEBUG - [client.py:150] - Message processing completed (type: events_api, envelope_id: 7eb44669-41c6-4d91-97f7-31c899c06103)
2025-08-21 10:59:47,740 - utils - DEBUG - [utils.py:31] - Message hash: f975a334c2abf0cc11cceb552a504ac1
2025-08-21 10:59:47,740 - utils - DEBUG - [utils.py:53] - Added message to processing cache (total entries: 2)
2025-08-21 10:59:47,740 - __main__ - DEBUG - [main.py:331] - Bot check: bot_id=None, user_id=None
2025-08-21 10:59:47,740 - __main__ - DEBUG - [main.py:336] - Question received: ''
2025-08-21 10:59:47,740 - __main__ - WARNING - [main.py:338] - Empty question in DM
2025-08-21 10:59:47,741 - slack_sdk.web.base_client - DEBUG - [base_client.py:255] - Sending a request - url: https://slack.com/api/chat.postMessage, query_params: {}, body_params: {}, files: {}, json_body: {'channel': 'D09A0LFHK8R', 'text': 'Please ask me a question! 📚', 'team_id': 'T010QS7UQNA'}, headers: {'Content-Type': 'application/json;charset=utf-8', 'Authorization': '(redacted)', 'User-Agent': 'Python/3.12.0 slackclient/3.34.0 Darwin/23.4.0'}
2025-08-21 10:59:48,129 - slack_sdk.web.base_client - DEBUG - [base_client.py:546] - Received the following response - status: 200, headers: {'date': 'Thu, 21 Aug 2025 17:59:48 GMT', 'server': 'Apache', 'vary': 'Accept-Encoding', 'x-slack-req-id': 'c787586a700681f8d2ef596572596e3e', 'x-content-type-options': 'nosniff', 'x-xss-protection': '0', 'pragma': 'no-cache', 'cache-control': 'private, no-cache, no-store, must-revalidate', 'expires': 'Sat, 26 Jul 1997 05:00:00 GMT', 'content-type': 'application/json; charset=utf-8', 'x-accepted-oauth-scopes': 'chat:write', 'x-oauth-scopes': 'app_mentions:read,channels:history,chat:write,im:history,im:read,im:write,users:read,reactions:write', 'access-control-expose-headers': 'x-slack-req-id, retry-after', 'access-control-allow-headers': 'slack-route, x-slack-version-ts, x-b3-traceid, x-b3-spanid, x-b3-parentspanid, x-b3-sampled, x-b3-flags', 'strict-transport-security': 'max-age=31536000; includeSubDomains; preload', 'referrer-policy': 'no-referrer', 'x-slack-unique-id': 'aKdelOTMC56_xAIRAYjs4wAAAAI', 'x-slack-backend': 'r', 'access-control-allow-origin': '*', 'content-length': '840', 'via': '1.1 slack-prod.tinyspeck.com, envoy-www-iad-dbsgtfex,envoy-edge-pdx-zdygxdic', 'x-envoy-attempt-count': '1', 'x-envoy-upstream-service-time': '153', 'x-backend': 'main_normal main_canary_with_overflow main_control_with_overflow', 'x-server': 'slack-www-hhvm-main-iad-xxwv', 'x-slack-shared-secret-outcome': 'no-match', 'x-edge-backend': 'envoy-www', 'timing-allow-origin': '*', 'x-slack-edge-shared-secret-outcome': 'no-match', 'connection': 'close'}, body: {"ok":true,"channel":"D09A0LFHK8R","ts":"1755799188.095359","message":{"user":"U099R6WTZ9S","type":"message","ts":"1755799188.095359","bot_id":"B099R6WTRU4","app_id":"A099LACAB2R","text":"Please ask me a question! :books:","team":"T010QS7UQNA","bot_profile":{"id":"B099R6WTRU4","app_id":"A099LACAB2R","user_id":"U099R6WTZ9S","name":"AutoBot","icons":{"image_36":"https://a.slack-edge.com/80588/img/plugins/app/bot_36.png","image_48":"https://a.slack-edge.com/80588/img/plugins/app/bot_48.png","image_72":"https://a.slack-edge.com/80588/img/plugins/app/service_72.png"},"deleted":false,"updated":1754677948,"team_id":"T010QS7UQNA"},"blocks":[{"type":"rich_text","block_id":"7h1O1","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Please ask me a question! "},{"type":"emoji","name":"books","unicode":"1f4da"}]}]}]}}
2025-08-21 10:59:48,683 - slack_bolt.App - DEBUG - [client.py:235] - on_message invoked: (message: {"envelope_id":"d3635aaf-f37d-4e5f-b31d-1c9ea9decc78","payload":{"token":"yq71khZBCyJF1Ri2hG5aNqr5","team_id":"T010QS7UQNA","enterprise_id":"ERV4P7NAD","context_team_id":null,"context_enterprise_id":"ERV4P7NAD","api_app_id":"A099LACAB2R","event":{"user":"U099R6WTZ9S","type":"message","ts":"1755799188.095359","bot_id":"B099R6WTRU4","app_id":"A099LACAB2R","text":"Please ask me a question! :books:","team":"T010QS7UQNA","bot_profile":{"id":"B099R6WTRU4","deleted":false,"name":"AutoBot","updated":1754677948,"app_id":"A099LACAB2R","user_id":"U099R6WTZ9S","icons":{"image_36":"https:\/\/a.slack-edge.com\/80588\/img\/plugins\/app\/bot_36.png","image_48":"https:\/\/a.slack-edge.com\/80588\/img\/plugins\/app\/bot_48.png","image_72":"https:\/\/a.slack-edge.com\/80588\/img\/plugins\/app\/service_72.png"},"team_id":"T010QS7UQNA"},"blocks":[{"type":"rich_text","block_id":"xXO","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Please ask me a question! "},{"type":"emoji","name":"books","unicode":"1f4da"}]}]}],"channel":"D09A0LFHK8R","event_ts":"1755799188.095359","channel_type":"im"},"type":"event_callback","event_id":"Ev09C9ACT29W","event_time":1755799188,"authorizations":[{"enterprise_id":"ERV4P7NAD","team_id":"T010QS7UQNA","user_id":"U099R6WTZ9S","is_bot":true,"is_enterprise_install":false}],"is_ext_shared_channel":false,"event_context":"4-eyJldCI6Im1lc3NhZ2UiLCJ0aWQiOiJUMDEwUVM3VVFOQSIsImFpZCI6IkEwOTlMQUNBQjJSIiwiY2lkIjoiRDA5QTBMRkhLOFIifQ"},"type":"events_api","accepts_response_payload":false,"retry_attempt":0,"retry_reason":""})
2025-08-21 10:59:48,683 - slack_bolt.App - DEBUG - [client.py:99] - A new message enqueued (current queue size: 1)
2025-08-21 10:59:48,683 - slack_bolt.App - DEBUG - [client.py:105] - A message dequeued (current queue size: 0)
2025-08-21 10:59:48,683 - slack_bolt.App - DEBUG - [client.py:125] - Message processing started (type: events_api, envelope_id: d3635aaf-f37d-4e5f-b31d-1c9ea9decc78)
2025-08-21 10:59:48,683 - slack_bolt.App - DEBUG - [app.py:476] - Applying slack_bolt.middleware.ssl_check.ssl_check.SslCheck
2025-08-21 10:59:48,683 - slack_bolt.App - DEBUG - [app.py:476] - Applying slack_bolt.middleware.request_verification.request_verification.RequestVerification
2025-08-21 10:59:48,684 - slack_bolt.App - DEBUG - [app.py:476] - Applying slack_bolt.middleware.authorization.single_team_authorization.SingleTeamAuthorization
2025-08-21 10:59:48,684 - slack_bolt.App - DEBUG - [app.py:476] - Applying slack_bolt.middleware.ignoring_self_events.ignoring_self_events.IgnoringSelfEvents
2025-08-21 10:59:48,684 - slack_bolt.IgnoringSelfEvents - DEBUG - [ignoring_self_events.py:60] - Skipped self event: {'user': 'U099R6WTZ9S', 'type': 'message', 'ts': '1755799188.095359', 'bot_id': 'B099R6WTRU4', 'app_id': 'A099LACAB2R', 'text': 'Please ask me a question! :books:', 'team': 'T010QS7UQNA', 'bot_profile': {'id': 'B099R6WTRU4', 'deleted': False, 'name': 'AutoBot', 'updated': 1754677948, 'app_id': 'A099LACAB2R', 'user_id': 'U099R6WTZ9S', 'icons': {'image_36': 'https://a.slack-edge.com/80588/img/plugins/app/bot_36.png', 'image_48': 'https://a.slack-edge.com/80588/img/plugins/app/bot_48.png', 'image_72': 'https://a.slack-edge.com/80588/img/plugins/app/service_72.png'}, 'team_id': 'T010QS7UQNA'}, 'blocks': [{'type': 'rich_text', 'block_id': 'xXO', 'elements': [{'type': 'rich_text_section', 'elements': [{'type': 'text', 'text': 'Please ask me a question! '}, {'type': 'emoji', 'name': 'books', 'unicode': '1f4da'}]}]}], 'channel': 'D09A0LFHK8R', 'event_ts': '1755799188.095359', 'channel_type': 'im'}
2025-08-21 10:59:48,684 - slack_bolt.App - DEBUG - [client.py:200] - Sending a message (session id: cfda5711-2a79-4ada-b093-99b5ab81ee4b, message: {"envelope_id": "d3635aaf-f37d-4e5f-b31d-1c9ea9decc78"})
2025-08-21 10:59:48,684 - slack_bolt.App - DEBUG - [internals.py:41] - Response time: 0 milliseconds
2025-08-21 10:59:48,684 - slack_bolt.App - DEBUG - [client.py:150] - Message processing completed (type: events_api, envelope_id: d3635aaf-f37d-4e5f-b31d-1c9ea9decc78)
2025-08-21 10:59:50,396 - slack_bolt.App - DEBUG - [client.py:235] - on_message invoked: (message: {"envelope_id":"341596f4-c8ed-4912-a403-43b8f75040e6","payload":{"token":"yq71khZBCyJF1Ri2hG5aNqr5","team_id":"T010QS7UQNA","enterprise_id":"ERV4P7NAD","context_team_id":null,"context_enterprise_id":"ERV4P7NAD","api_app_id":"A099LACAB2R","event":{"type":"message","subtype":"message_deleted","previous_message":{"user":"U01RMTFMALF","type":"message","ts":"1755797200.493339","client_msg_id":"297911f7-ca72-4c05-bfa6-29ae3385a4bc","text":"<@U099R6WTZ9S> Hello","blocks":[{"type":"rich_text","block_id":"YJs0N","elements":[{"type":"rich_text_section","elements":[{"type":"user","user_id":"U099R6WTZ9S"},{"type":"text","text":" Hello"}]}]}]},"channel":"D09A0LFHK8R","hidden":true,"deleted_ts":"1755797200.493339","event_ts":"1755799189.001600","ts":"1755799189.001600","channel_type":"im"},"type":"event_callback","event_id":"Ev09BKU0QZJQ","event_time":1755799189,"authorizations":[{"enterprise_id":"ERV4P7NAD","team_id":"T010QS7UQNA","user_id":"U099R6WTZ9S","is_bot":true,"is_enterprise_install":false}],"is_ext_shared_channel":false,"event_context":"4-eyJldCI6Im1lc3NhZ2UiLCJ0aWQiOiJUMDEwUVM3VVFOQSIsImFpZCI6IkEwOTlMQUNBQjJSIiwiY2lkIjoiRDA5QTBMRkhLOFIifQ"},"type":"events_api","accepts_response_payload":false,"retry_attempt":0,"retry_reason":""})
2025-08-21 10:59:50,397 - slack_bolt.App - DEBUG - [client.py:99] - A new message enqueued (current queue size: 1)
2025-08-21 10:59:50,397 - slack_bolt.App - DEBUG - [client.py:105] - A message dequeued (current queue size: 0)
2025-08-21 10:59:50,398 - slack_bolt.App - DEBUG - [client.py:125] - Message processing started (type: events_api, envelope_id: 341596f4-c8ed-4912-a403-43b8f75040e6)
2025-08-21 10:59:50,398 - slack_bolt.App - DEBUG - [app.py:476] - Applying slack_bolt.middleware.ssl_check.ssl_check.SslCheck
2025-08-21 10:59:50,398 - slack_bolt.App - DEBUG - [app.py:476] - Applying slack_bolt.middleware.request_verification.request_verification.RequestVerification
2025-08-21 10:59:50,398 - slack_bolt.App - DEBUG - [app.py:476] - Applying slack_bolt.middleware.authorization.single_team_authorization.SingleTeamAuthorization
2025-08-21 10:59:50,399 - slack_bolt.App - DEBUG - [app.py:476] - Applying slack_bolt.middleware.ignoring_self_events.ignoring_self_events.IgnoringSelfEvents
2025-08-21 10:59:50,399 - slack_bolt.App - DEBUG - [app.py:476] - Applying slack_bolt.middleware.url_verification.url_verification.UrlVerification
2025-08-21 10:59:50,399 - slack_bolt.App - DEBUG - [app.py:500] - Checking listener: handle_app_mentions ...
2025-08-21 10:59:50,399 - slack_bolt.App - DEBUG - [app.py:500] - Checking listener: help_message ...
2025-08-21 10:59:50,399 - slack_bolt.App - DEBUG - [app.py:500] - Checking listener: handle_dm_messages ...
2025-08-21 10:59:50,399 - slack_bolt.App - DEBUG - [app.py:522] - Running listener: handle_dm_messages ...
2025-08-21 10:59:50,399 - slack_bolt.App - DEBUG - [thread_runner.py:198] - Responding with status: 200 body: "" (0 millis)
2025-08-21 10:59:50,400 - __main__ - INFO - [main.py:307] - === DM MESSAGE EVENT RECEIVED ===
2025-08-21 10:59:50,400 - slack_bolt.App - DEBUG - [client.py:200] - Sending a message (session id: cfda5711-2a79-4ada-b093-99b5ab81ee4b, message: {"envelope_id": "341596f4-c8ed-4912-a403-43b8f75040e6"})
2025-08-21 10:59:50,400 - __main__ - DEBUG - [main.py:308] - Full event body: {'token': 'yq71khZBCyJF1Ri2hG5aNqr5', 'team_id': 'T010QS7UQNA', 'enterprise_id': 'ERV4P7NAD', 'context_team_id': None, 'context_enterprise_id': 'ERV4P7NAD', 'api_app_id': 'A099LACAB2R', 'event': {'type': 'message', 'subtype': 'message_deleted', 'previous_message': {'user': 'U01RMTFMALF', 'type': 'message', 'ts': '1755797200.493339', 'client_msg_id': '297911f7-ca72-4c05-bfa6-29ae3385a4bc', 'text': '<@U099R6WTZ9S> Hello', 'blocks': [{'type': 'rich_text', 'block_id': 'YJs0N', 'elements': [{'type': 'rich_text_section', 'elements': [{'type': 'user', 'user_id': 'U099R6WTZ9S'}, {'type': 'text', 'text': ' Hello'}]}]}]}, 'channel': 'D09A0LFHK8R', 'hidden': True, 'deleted_ts': '1755797200.493339', 'event_ts': '1755799189.001600', 'ts': '1755799189.001600', 'channel_type': 'im'}, 'type': 'event_callback', 'event_id': 'Ev09BKU0QZJQ', 'event_time': 1755799189, 'authorizations': [{'enterprise_id': 'ERV4P7NAD', 'team_id': 'T010QS7UQNA', 'user_id': 'U099R6WTZ9S', 'is_bot': True, 'is_enterprise_install': False}], 'is_ext_shared_channel': False, 'event_context': '4-eyJldCI6Im1lc3NhZ2UiLCJ0aWQiOiJUMDEwUVM3VVFOQSIsImFpZCI6IkEwOTlMQUNBQjJSIiwiY2lkIjoiRDA5QTBMRkhLOFIifQ'}
2025-08-21 10:59:50,400 - __main__ - INFO - [main.py:317] - DM Event details: channel=D09A0LFHK8R, user=None, ts=1755799189.001600
2025-08-21 10:59:50,400 - slack_bolt.App - DEBUG - [internals.py:41] - Response time: 2 milliseconds
2025-08-21 10:59:50,401 - __main__ - DEBUG - [main.py:318] - DM Event text: 
2025-08-21 10:59:50,401 - slack_bolt.App - DEBUG - [client.py:150] - Message processing completed (type: events_api, envelope_id: 341596f4-c8ed-4912-a403-43b8f75040e6)
2025-08-21 10:59:50,401 - utils - DEBUG - [utils.py:27] - Checking message processing: channel=D09A0LFHK8R, ts=1755799189.001600, text='...'
2025-08-21 10:59:50,401 - utils - DEBUG - [utils.py:31] - Message hash: 9fc7099a7ae1dcaeac80d9719cc534c2
2025-08-21 10:59:50,401 - utils - DEBUG - [utils.py:53] - Added message to processing cache (total entries: 3)
2025-08-21 10:59:50,401 - __main__ - DEBUG - [main.py:331] - Bot check: bot_id=None, user_id=None
2025-08-21 10:59:50,401 - __main__ - DEBUG - [main.py:336] - Question received: ''
2025-08-21 10:59:50,401 - __main__ - WARNING - [main.py:338] - Empty question in DM
2025-08-21 10:59:50,402 - slack_sdk.web.base_client - DEBUG - [base_client.py:255] - Sending a request - url: https://slack.com/api/chat.postMessage, query_params: {}, body_params: {}, files: {}, json_body: {'channel': 'D09A0LFHK8R', 'text': 'Please ask me a question! 📚', 'team_id': 'T010QS7UQNA'}, headers: {'Content-Type': 'application/json;charset=utf-8', 'Authorization': '(redacted)', 'User-Agent': 'Python/3.12.0 slackclient/3.34.0 Darwin/23.4.0'}
2025-08-21 10:59:50,811 - slack_sdk.web.base_client - DEBUG - [base_client.py:546] - Received the following response - status: 200, headers: {'date': 'Thu, 21 Aug 2025 17:59:50 GMT', 'server': 'Apache', 'vary': 'Accept-Encoding', 'x-slack-req-id': '2b9326e6c625243c920bb8849b73ce65', 'x-content-type-options': 'nosniff', 'x-xss-protection': '0', 'pragma': 'no-cache', 'cache-control': 'private, no-cache, no-store, must-revalidate', 'expires': 'Sat, 26 Jul 1997 05:00:00 GMT', 'content-type': 'application/json; charset=utf-8', 'x-accepted-oauth-scopes': 'chat:write', 'x-oauth-scopes': 'app_mentions:read,channels:history,chat:write,im:history,im:read,im:write,users:read,reactions:write', 'access-control-expose-headers': 'x-slack-req-id, retry-after', 'access-control-allow-headers': 'slack-route, x-slack-version-ts, x-b3-traceid, x-b3-spanid, x-b3-parentspanid, x-b3-sampled, x-b3-flags', 'strict-transport-security': 'max-age=31536000; includeSubDomains; preload', 'referrer-policy': 'no-referrer', 'x-slack-unique-id': 'aKdelqEe8xwGqMMOc138mwAAEDs', 'x-slack-backend': 'r', 'access-control-allow-origin': '*', 'content-length': '839', 'via': '1.1 slack-prod.tinyspeck.com, envoy-www-iad-sgjgbmfs,envoy-edge-pdx-tzhlngzv', 'x-envoy-attempt-count': '1', 'x-envoy-upstream-service-time': '146', 'x-backend': 'main_normal main_canary_with_overflow main_control_with_overflow', 'x-server': 'slack-www-hhvm-main-iad-qqqq', 'x-slack-shared-secret-outcome': 'no-match', 'x-edge-backend': 'envoy-www', 'timing-allow-origin': '*', 'x-slack-edge-shared-secret-outcome': 'no-match', 'connection': 'close'}, body: {"ok":true,"channel":"D09A0LFHK8R","ts":"1755799190.748019","message":{"user":"U099R6WTZ9S","type":"message","ts":"1755799190.748019","bot_id":"B099R6WTRU4","app_id":"A099LACAB2R","text":"Please ask me a question! :books:","team":"T010QS7UQNA","bot_profile":{"id":"B099R6WTRU4","app_id":"A099LACAB2R","user_id":"U099R6WTZ9S","name":"AutoBot","icons":{"image_36":"https://a.slack-edge.com/80588/img/plugins/app/bot_36.png","image_48":"https://a.slack-edge.com/80588/img/plugins/app/bot_48.png","image_72":"https://a.slack-edge.com/80588/img/plugins/app/service_72.png"},"deleted":false,"updated":1754677948,"team_id":"T010QS7UQNA"},"blocks":[{"type":"rich_text","block_id":"+vAV","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Please ask me a question! "},{"type":"emoji","name":"books","unicode":"1f4da"}]}]}]}}
2025-08-21 10:59:51,823 - slack_bolt.App - DEBUG - [client.py:235] - on_message invoked: (message: {"envelope_id":"984552ce-c4d9-41f4-97c5-d223e948e55a","payload":{"token":"yq71khZBCyJF1Ri2hG5aNqr5","team_id":"T010QS7UQNA","enterprise_id":"ERV4P7NAD","context_team_id":null,"context_enterprise_id":"ERV4P7NAD","api_app_id":"A099LACAB2R","event":{"user":"U099R6WTZ9S","type":"message","ts":"1755799190.748019","bot_id":"B099R6WTRU4","app_id":"A099LACAB2R","text":"Please ask me a question! :books:","team":"T010QS7UQNA","bot_profile":{"id":"B099R6WTRU4","deleted":false,"name":"AutoBot","updated":1754677948,"app_id":"A099LACAB2R","user_id":"U099R6WTZ9S","icons":{"image_36":"https:\/\/a.slack-edge.com\/80588\/img\/plugins\/app\/bot_36.png","image_48":"https:\/\/a.slack-edge.com\/80588\/img\/plugins\/app\/bot_48.png","image_72":"https:\/\/a.slack-edge.com\/80588\/img\/plugins\/app\/service_72.png"},"team_id":"T010QS7UQNA"},"blocks":[{"type":"rich_text","block_id":"RzKPb","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Please ask me a question! "},{"type":"emoji","name":"books","unicode":"1f4da"}]}]}],"channel":"D09A0LFHK8R","event_ts":"1755799190.748019","channel_type":"im"},"type":"event_callback","event_id":"Ev09BASYSJUB","event_time":1755799190,"authorizations":[{"enterprise_id":"ERV4P7NAD","team_id":"T010QS7UQNA","user_id":"U099R6WTZ9S","is_bot":true,"is_enterprise_install":false}],"is_ext_shared_channel":false,"event_context":"4-eyJldCI6Im1lc3NhZ2UiLCJ0aWQiOiJUMDEwUVM3VVFOQSIsImFpZCI6IkEwOTlMQUNBQjJSIiwiY2lkIjoiRDA5QTBMRkhLOFIifQ"},"type":"events_api","accepts_response_payload":false,"retry_attempt":0,"retry_reason":""})
2025-08-21 10:59:51,824 - slack_bolt.App - DEBUG - [client.py:99] - A new message enqueued (current queue size: 1)
2025-08-21 10:59:51,824 - slack_bolt.App - DEBUG - [client.py:105] - A message dequeued (current queue size: 0)
2025-08-21 10:59:51,824 - slack_bolt.App - DEBUG - [client.py:125] - Message processing started (type: events_api, envelope_id: 984552ce-c4d9-41f4-97c5-d223e948e55a)
2025-08-21 10:59:51,825 - slack_bolt.App - DEBUG - [app.py:476] - Applying slack_bolt.middleware.ssl_check.ssl_check.SslCheck
2025-08-21 10:59:51,825 - slack_bolt.App - DEBUG - [app.py:476] - Applying slack_bolt.middleware.request_verification.request_verification.RequestVerification
2025-08-21 10:59:51,825 - slack_bolt.App - DEBUG - [app.py:476] - Applying slack_bolt.middleware.authorization.single_team_authorization.SingleTeamAuthorization
2025-08-21 10:59:51,825 - slack_bolt.App - DEBUG - [app.py:476] - Applying slack_bolt.middleware.ignoring_self_events.ignoring_self_events.IgnoringSelfEvents
2025-08-21 10:59:51,825 - slack_bolt.IgnoringSelfEvents - DEBUG - [ignoring_self_events.py:60] - Skipped self event: {'user': 'U099R6WTZ9S', 'type': 'message', 'ts': '1755799190.748019', 'bot_id': 'B099R6WTRU4', 'app_id': 'A099LACAB2R', 'text': 'Please ask me a question! :books:', 'team': 'T010QS7UQNA', 'bot_profile': {'id': 'B099R6WTRU4', 'deleted': False, 'name': 'AutoBot', 'updated': 1754677948, 'app_id': 'A099LACAB2R', 'user_id': 'U099R6WTZ9S', 'icons': {'image_36': 'https://a.slack-edge.com/80588/img/plugins/app/bot_36.png', 'image_48': 'https://a.slack-edge.com/80588/img/plugins/app/bot_48.png', 'image_72': 'https://a.slack-edge.com/80588/img/plugins/app/service_72.png'}, 'team_id': 'T010QS7UQNA'}, 'blocks': [{'type': 'rich_text', 'block_id': 'RzKPb', 'elements': [{'type': 'rich_text_section', 'elements': [{'type': 'text', 'text': 'Please ask me a question! '}, {'type': 'emoji', 'name': 'books', 'unicode': '1f4da'}]}]}], 'channel': 'D09A0LFHK8R', 'event_ts': '1755799190.748019', 'channel_type': 'im'}
2025-08-21 10:59:51,825 - slack_bolt.App - DEBUG - [client.py:200] - Sending a message (session id: cfda5711-2a79-4ada-b093-99b5ab81ee4b, message: {"envelope_id": "984552ce-c4d9-41f4-97c5-d223e948e55a"})
2025-08-21 10:59:51,826 - slack_bolt.App - DEBUG - [internals.py:41] - Response time: 1 milliseconds
2025-08-21 10:59:51,826 - slack_bolt.App - DEBUG - [client.py:150] - Message processing completed (type: events_api, envelope_id: 984552ce-c4d9-41f4-97c5-d223e948e55a)
2025-08-21 11:03:20,486 - __main__ - INFO - [main.py:41] - Loading application configuration...
2025-08-21 11:03:20,486 - __main__ - INFO - [main.py:43] - Configuration loaded successfully
2025-08-21 11:03:20,487 - __main__ - INFO - [main.py:46] - Initializing security components...
2025-08-21 11:03:20,487 - __main__ - DEBUG - [main.py:48] - Slack validator initialized
2025-08-21 11:03:20,487 - security.content_filter - INFO - [content_filter.py:39] - Content filter initialized with 11 patterns
2025-08-21 11:03:20,487 - __main__ - DEBUG - [main.py:51] - Content filter initialized
2025-08-21 11:03:20,487 - auth.admin_manager - INFO - [admin_manager.py:27] - Admin manager initialized with 2 admin users
2025-08-21 11:03:20,487 - __main__ - DEBUG - [main.py:54] - Admin manager initialized
2025-08-21 11:03:20,487 - __main__ - INFO - [main.py:55] - Security components initialized successfully
2025-08-21 11:03:20,487 - __main__ - INFO - [main.py:58] - Initializing Slack app...
2025-08-21 11:03:20,522 - slack_bolt.App - DEBUG - [base_client.py:255] - Sending a request - url: https://slack.com/api/auth.test, query_params: {}, body_params: {}, files: {}, json_body: None, headers: {'Content-Type': 'application/x-www-form-urlencoded', 'Authorization': '(redacted)', 'User-Agent': 'Bolt/1.16.0 Python/3.12.0 slackclient/3.34.0 Darwin/23.4.0'}
2025-08-21 11:03:20,863 - slack_bolt.App - DEBUG - [base_client.py:546] - Received the following response - status: 200, headers: {'date': 'Thu, 21 Aug 2025 18:03:20 GMT', 'server': 'Apache', 'vary': 'Accept-Encoding', 'x-slack-req-id': 'bf8f29f847b7a8c8655023a872665481', 'x-content-type-options': 'nosniff', 'x-xss-protection': '0', 'pragma': 'no-cache', 'cache-control': 'private, no-cache, no-store, must-revalidate', 'expires': 'Sat, 26 Jul 1997 05:00:00 GMT', 'content-type': 'application/json; charset=utf-8', 'x-oauth-scopes': 'app_mentions:read,channels:history,chat:write,im:history,im:read,im:write,users:read,reactions:write', 'access-control-expose-headers': 'x-slack-req-id, retry-after', 'access-control-allow-headers': 'slack-route, x-slack-version-ts, x-b3-traceid, x-b3-spanid, x-b3-parentspanid, x-b3-sampled, x-b3-flags', 'strict-transport-security': 'max-age=31536000; includeSubDomains; preload', 'referrer-policy': 'no-referrer', 'x-slack-unique-id': 'aKdfaB6oSIuM3s6rwZbzLwAAEAk', 'x-slack-backend': 'r', 'access-control-allow-origin': '*', 'content-length': '228', 'via': '1.1 slack-prod.tinyspeck.com, envoy-www-iad-wycefqse,envoy-edge-pdx-khjfzymg', 'x-envoy-attempt-count': '1', 'x-envoy-upstream-service-time': '91', 'x-backend': 'main_normal main_canary_with_overflow main_control_with_overflow', 'x-server': 'slack-www-hhvm-main-iad-pscm', 'x-slack-shared-secret-outcome': 'no-match', 'x-edge-backend': 'envoy-www', 'timing-allow-origin': '*', 'x-slack-edge-shared-secret-outcome': 'no-match', 'connection': 'close'}, body: {"ok":true,"url":"https://viacomcbs-grid-test.slack.com/","team":"Test Workspace","user":"autobot","team_id":"T010QS7UQNA","user_id":"U099R6WTZ9S","bot_id":"B099R6WTRU4","enterprise_id":"ERV4P7NAD","is_enterprise_install":false}
2025-08-21 11:03:20,863 - __main__ - INFO - [main.py:60] - Slack app initialized successfully
2025-08-21 11:03:20,863 - __main__ - DEBUG - [main.py:64] - Message deduplication cache initialized
2025-08-21 11:03:20,864 - __main__ - DEBUG - [main.py:69] - Thread tracking initialized
2025-08-21 11:03:20,864 - __main__ - INFO - [main.py:72] - Initializing DIG AI integration...
2025-08-21 11:03:20,864 - __main__ - INFO - [main.py:75] - DIG AI is enabled, setting up connector...
2025-08-21 11:03:20,864 - dig_connector - INFO - [dig_connector.py:287] - Initializing DIG AI with model ID: 42
2025-08-21 11:03:20,864 - dig_connector - INFO - [dig_connector.py:49] - Starting DIG chat session initialization...
2025-08-21 11:03:20,864 - dig_connector - DEBUG - [dig_connector.py:52] - Creating chat with name: Slack Bot Session 2025-08-21T18:03:20.864562+00:00
2025-08-21 11:03:20,864 - dig_connector - DEBUG - [dig_connector.py:63] - Creating chat - URL: https://ai.digdev.cbsicloud.com/fastapi/chats, Payload: {'chat_nm': 'Slack Bot Session 2025-08-21T18:03:20.864562+00:00', 'model_id': 42}
2025-08-21 11:03:20,868 - urllib3.connectionpool - DEBUG - [connectionpool.py:1055] - Starting new HTTPS connection (1): ai.digdev.cbsicloud.com:443
2025-08-21 11:03:21,141 - urllib3.connectionpool - DEBUG - [connectionpool.py:549] - https://ai.digdev.cbsicloud.com:443 "POST /fastapi/chats HTTP/1.1" 200 217
2025-08-21 11:03:21,143 - dig_connector - DEBUG - [dig_connector.py:66] - Create chat response: status=200
2025-08-21 11:03:21,143 - dig_connector - INFO - [dig_connector.py:54] - Successfully initialized DIG chat session with ID: 853
2025-08-21 11:03:21,143 - __main__ - INFO - [main.py:78] - DIG AI integration successfully initialized
2025-08-21 11:03:21,143 - __main__ - INFO - [main.py:84] - Setting up event handlers...
2025-08-21 11:03:21,145 - __main__ - INFO - [main.py:541] - Starting AI Assistant Bot...
2025-08-21 11:03:21,145 - __main__ - INFO - [main.py:542] - Registering event handlers...
2025-08-21 11:03:21,145 - __main__ - DEBUG - [main.py:543] - Event handlers registered: app_mention, message, app_home_opened
2025-08-21 11:03:21,145 - __main__ - INFO - [main.py:546] - Connecting to Slack via Socket Mode...
2025-08-21 11:03:21,148 - __main__ - INFO - [main.py:550] - Socket Mode handler created successfully
2025-08-21 11:03:21,148 - __main__ - INFO - [main.py:552] - ✅ Bot is now running and listening for events!
2025-08-21 11:03:21,150 - slack_bolt.App - DEBUG - [base_client.py:255] - Sending a request - url: https://slack.com/api/apps.connections.open, query_params: {}, body_params: {}, files: {}, json_body: None, headers: {'Content-Type': 'application/x-www-form-urlencoded', 'Authorization': '(redacted)', 'User-Agent': 'Bolt/1.16.0 Python/3.12.0 slackclient/3.34.0 Darwin/23.4.0'}
2025-08-21 11:03:21,450 - slack_bolt.App - DEBUG - [base_client.py:546] - Received the following response - status: 200, headers: {'date': 'Thu, 21 Aug 2025 18:03:21 GMT', 'server': 'Apache', 'vary': 'Accept-Encoding', 'x-slack-req-id': '4b1a2e9051b68e4fcf7d5388ae747132', 'x-content-type-options': 'nosniff', 'x-xss-protection': '0', 'x-robots-tag': 'noindex,nofollow', 'pragma': 'no-cache', 'cache-control': 'private, no-cache, no-store, must-revalidate', 'expires': 'Sat, 26 Jul 1997 05:00:00 GMT', 'content-type': 'application/json; charset=utf-8', 'x-accepted-oauth-scopes': 'connections:write', 'x-oauth-scopes': 'connections:write', 'access-control-expose-headers': 'x-slack-req-id, retry-after', 'access-control-allow-headers': 'slack-route, x-slack-version-ts, x-b3-traceid, x-b3-spanid, x-b3-parentspanid, x-b3-sampled, x-b3-flags', 'strict-transport-security': 'max-age=31536000; includeSubDomains; preload', 'referrer-policy': 'no-referrer', 'x-slack-unique-id': 'aKdfacoK2OvNZPXVRzYpoAAAEBI', 'x-slack-backend': 'r', 'access-control-allow-origin': '*', 'content-length': '173', 'via': '1.1 slack-prod.tinyspeck.com, envoy-www-iad-izwgrwzn,envoy-edge-pdx-ppturzvu', 'x-envoy-attempt-count': '1', 'x-envoy-upstream-service-time': '78', 'x-backend': 'main_normal main_canary_with_overflow main_control_with_overflow', 'x-server': 'slack-www-hhvm-main-iad-dukh', 'x-slack-shared-secret-outcome': 'no-match', 'x-edge-backend': 'envoy-www', 'timing-allow-origin': '*', 'x-slack-edge-shared-secret-outcome': 'no-match', 'connection': 'close'}, body: {"ok":true,"url":"wss:\/\/wss-primary.slack.com\/link\/?ticket=a9d102d3-2dbd-4caf-89b8-80a60415aa79&app_id=a6c8d361ee1c6f398c5b4afec831555b78d7affa753b16bcc0fc64d7c13f3766"}
2025-08-21 11:03:21,967 - slack_bolt.App - INFO - [client.py:192] - A new session has been established (session id: 8838bdd0-d25d-415c-b01c-dbad6d17fc30)
2025-08-21 11:03:21,968 - slack_bolt.App - INFO - [base_handler.py:50] - ⚡️ Bolt app is running!
2025-08-21 11:03:21,980 - slack_bolt.App - INFO - [client.py:265] - Starting to receive messages from a new connection (session id: 8838bdd0-d25d-415c-b01c-dbad6d17fc30)
2025-08-21 11:03:21,981 - slack_bolt.App - DEBUG - [client.py:235] - on_message invoked: (message: {"type":"hello","num_connections":2,"debug_info":{"host":"applink-canary-0","build_number":0,"approximate_connection_time":18060},"connection_info":{"app_id":"A099LACAB2R"}})
2025-08-21 11:03:21,981 - slack_bolt.App - DEBUG - [client.py:99] - A new message enqueued (current queue size: 1)
2025-08-21 11:03:21,982 - slack_bolt.App - DEBUG - [client.py:105] - A message dequeued (current queue size: 0)
2025-08-21 11:03:21,982 - slack_bolt.App - DEBUG - [client.py:125] - Message processing started (type: hello, envelope_id: None)
2025-08-21 11:03:21,982 - slack_bolt.App - DEBUG - [client.py:150] - Message processing completed (type: hello, envelope_id: None)
2025-08-21 11:03:54,640 - slack_bolt.App - DEBUG - [client.py:235] - on_message invoked: (message: {"envelope_id":"eb7146c7-e77d-4328-a41e-58e1fc5f20b6","payload":{"token":"yq71khZBCyJF1Ri2hG5aNqr5","team_id":"T010QS7UQNA","enterprise_id":"ERV4P7NAD","context_team_id":null,"context_enterprise_id":"ERV4P7NAD","api_app_id":"A099LACAB2R","event":{"type":"message","subtype":"message_changed","message":{"subtype":"tombstone","text":"This message was deleted.","user":"USLACKBOT","hidden":true,"type":"message","thread_ts":"1755798738.939339","reply_count":1,"reply_users_count":1,"latest_reply":"1755798747.766399","reply_users":["U099R6WTZ9S"],"is_locked":false,"ts":"1755798738.939339"},"previous_message":{"user":"U01RMTFMALF","type":"message","ts":"1755798738.939339","client_msg_id":"a21cebb5-8a24-44cf-9190-01dbaa5c7d2f","text":"How to connect a roku device ?","thread_ts":"1755798738.939339","reply_count":1,"reply_users_count":1,"latest_reply":"1755798747.766399","reply_users":["U099R6WTZ9S"],"is_locked":false,"subscribed":true,"last_read":"1755798747.766399","blocks":[{"type":"rich_text","block_id":"hVVhZ","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"How to connect a roku device ?"}]}]}]},"channel":"D09A0LFHK8R","hidden":true,"ts":"1755799433.001700","event_ts":"1755799433.001700","channel_type":"im"},"type":"event_callback","event_id":"Ev09BHT121AS","event_time":1755799433,"authorizations":[{"enterprise_id":"ERV4P7NAD","team_id":"T010QS7UQNA","user_id":"U099R6WTZ9S","is_bot":true,"is_enterprise_install":false}],"is_ext_shared_channel":false,"event_context":"4-eyJldCI6Im1lc3NhZ2UiLCJ0aWQiOiJUMDEwUVM3VVFOQSIsImFpZCI6IkEwOTlMQUNBQjJSIiwiY2lkIjoiRDA5QTBMRkhLOFIifQ"},"type":"events_api","accepts_response_payload":false,"retry_attempt":0,"retry_reason":""})
2025-08-21 11:03:54,641 - slack_bolt.App - DEBUG - [client.py:99] - A new message enqueued (current queue size: 1)
2025-08-21 11:03:54,641 - slack_bolt.App - DEBUG - [client.py:105] - A message dequeued (current queue size: 0)
2025-08-21 11:03:54,642 - slack_bolt.App - DEBUG - [client.py:125] - Message processing started (type: events_api, envelope_id: eb7146c7-e77d-4328-a41e-58e1fc5f20b6)
2025-08-21 11:03:54,643 - slack_bolt.App - DEBUG - [app.py:476] - Applying slack_bolt.middleware.ssl_check.ssl_check.SslCheck
2025-08-21 11:03:54,643 - slack_bolt.App - DEBUG - [app.py:476] - Applying slack_bolt.middleware.request_verification.request_verification.RequestVerification
2025-08-21 11:03:54,644 - slack_bolt.App - DEBUG - [app.py:476] - Applying slack_bolt.middleware.authorization.single_team_authorization.SingleTeamAuthorization
2025-08-21 11:03:54,644 - slack_bolt.App - DEBUG - [app.py:476] - Applying slack_bolt.middleware.ignoring_self_events.ignoring_self_events.IgnoringSelfEvents
2025-08-21 11:03:54,644 - slack_bolt.App - DEBUG - [app.py:476] - Applying slack_bolt.middleware.url_verification.url_verification.UrlVerification
2025-08-21 11:03:54,644 - slack_bolt.App - DEBUG - [app.py:500] - Checking listener: handle_app_mentions ...
2025-08-21 11:03:54,644 - slack_bolt.App - DEBUG - [app.py:500] - Checking listener: help_message ...
2025-08-21 11:03:54,644 - slack_bolt.App - DEBUG - [app.py:500] - Checking listener: handle_dm_messages ...
2025-08-21 11:03:54,644 - slack_bolt.App - DEBUG - [app.py:522] - Running listener: handle_dm_messages ...
2025-08-21 11:03:54,645 - __main__ - INFO - [main.py:306] - === DM MESSAGE EVENT RECEIVED ===
2025-08-21 11:03:54,645 - slack_bolt.App - DEBUG - [thread_runner.py:198] - Responding with status: 200 body: "" (0 millis)
2025-08-21 11:03:54,645 - __main__ - DEBUG - [main.py:307] - Full event body: {'token': 'yq71khZBCyJF1Ri2hG5aNqr5', 'team_id': 'T010QS7UQNA', 'enterprise_id': 'ERV4P7NAD', 'context_team_id': None, 'context_enterprise_id': 'ERV4P7NAD', 'api_app_id': 'A099LACAB2R', 'event': {'type': 'message', 'subtype': 'message_changed', 'message': {'subtype': 'tombstone', 'text': 'This message was deleted.', 'user': 'USLACKBOT', 'hidden': True, 'type': 'message', 'thread_ts': '1755798738.939339', 'reply_count': 1, 'reply_users_count': 1, 'latest_reply': '1755798747.766399', 'reply_users': ['U099R6WTZ9S'], 'is_locked': False, 'ts': '1755798738.939339'}, 'previous_message': {'user': 'U01RMTFMALF', 'type': 'message', 'ts': '1755798738.939339', 'client_msg_id': 'a21cebb5-8a24-44cf-9190-01dbaa5c7d2f', 'text': 'How to connect a roku device ?', 'thread_ts': '1755798738.939339', 'reply_count': 1, 'reply_users_count': 1, 'latest_reply': '1755798747.766399', 'reply_users': ['U099R6WTZ9S'], 'is_locked': False, 'subscribed': True, 'last_read': '1755798747.766399', 'blocks': [{'type': 'rich_text', 'block_id': 'hVVhZ', 'elements': [{'type': 'rich_text_section', 'elements': [{'type': 'text', 'text': 'How to connect a roku device ?'}]}]}]}, 'channel': 'D09A0LFHK8R', 'hidden': True, 'ts': '1755799433.001700', 'event_ts': '1755799433.001700', 'channel_type': 'im'}, 'type': 'event_callback', 'event_id': 'Ev09BHT121AS', 'event_time': 1755799433, 'authorizations': [{'enterprise_id': 'ERV4P7NAD', 'team_id': 'T010QS7UQNA', 'user_id': 'U099R6WTZ9S', 'is_bot': True, 'is_enterprise_install': False}], 'is_ext_shared_channel': False, 'event_context': '4-eyJldCI6Im1lc3NhZ2UiLCJ0aWQiOiJUMDEwUVM3VVFOQSIsImFpZCI6IkEwOTlMQUNBQjJSIiwiY2lkIjoiRDA5QTBMRkhLOFIifQ'}
2025-08-21 11:03:54,645 - slack_bolt.App - DEBUG - [client.py:200] - Sending a message (session id: 8838bdd0-d25d-415c-b01c-dbad6d17fc30, message: {"envelope_id": "eb7146c7-e77d-4328-a41e-58e1fc5f20b6"})
2025-08-21 11:03:54,646 - __main__ - INFO - [main.py:316] - DM Event details: channel=D09A0LFHK8R, user=None, ts=1755799433.001700
2025-08-21 11:03:54,646 - __main__ - DEBUG - [main.py:317] - DM Event text: 
2025-08-21 11:03:54,646 - utils - DEBUG - [utils.py:27] - Checking message processing: channel=D09A0LFHK8R, ts=1755799433.001700, text='...'
2025-08-21 11:03:54,646 - utils - DEBUG - [utils.py:31] - Message hash: 18df0c1ce114abadfbc8f2aa886d9cf4
2025-08-21 11:03:54,646 - slack_bolt.App - DEBUG - [internals.py:41] - Response time: 3 milliseconds
2025-08-21 11:03:54,646 - utils - DEBUG - [utils.py:53] - Added message to processing cache (total entries: 1)
2025-08-21 11:03:54,646 - slack_bolt.App - DEBUG - [client.py:150] - Message processing completed (type: events_api, envelope_id: eb7146c7-e77d-4328-a41e-58e1fc5f20b6)
2025-08-21 11:03:54,646 - __main__ - DEBUG - [main.py:330] - Bot check: bot_id=None, user_id=None
2025-08-21 11:03:54,647 - __main__ - DEBUG - [main.py:335] - Question received: ''
2025-08-21 11:03:54,647 - __main__ - WARNING - [main.py:337] - Empty question in DM
2025-08-21 11:03:59,221 - slack_bolt.App - DEBUG - [client.py:235] - on_message invoked: (message: {"envelope_id":"fac76e1c-adfa-4ca9-8368-64e768efee6a","payload":{"token":"yq71khZBCyJF1Ri2hG5aNqr5","team_id":"T010QS7UQNA","enterprise_id":"ERV4P7NAD","context_team_id":null,"context_enterprise_id":"ERV4P7NAD","api_app_id":"A099LACAB2R","event":{"type":"message","subtype":"message_changed","message":{"subtype":"tombstone","text":"This message was deleted.","user":"USLACKBOT","hidden":true,"type":"message","thread_ts":"1755798517.860049","reply_count":2,"reply_users_count":1,"latest_reply":"1755798529.480189","reply_users":["U099R6WTZ9S"],"is_locked":false,"ts":"1755798517.860049"},"previous_message":{"user":"U01RMTFMALF","type":"message","ts":"1755798517.860049","client_msg_id":"a53e5c27-e0f8-4927-8159-445d8bdd5408","text":"How to get access to jenkins?","thread_ts":"1755798517.860049","reply_count":2,"reply_users_count":1,"latest_reply":"1755798529.480189","reply_users":["U099R6WTZ9S"],"is_locked":false,"subscribed":true,"last_read":"1755798529.480189","blocks":[{"type":"rich_text","block_id":"jBTYB","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"How to get access to jenkins?"}]}]}]},"channel":"D09A0LFHK8R","hidden":true,"ts":"1755799438.001800","event_ts":"1755799438.001800","channel_type":"im"},"type":"event_callback","event_id":"Ev09BATY5WGK","event_time":1755799438,"authorizations":[{"enterprise_id":"ERV4P7NAD","team_id":"T010QS7UQNA","user_id":"U099R6WTZ9S","is_bot":true,"is_enterprise_install":false}],"is_ext_shared_channel":false,"event_context":"4-eyJldCI6Im1lc3NhZ2UiLCJ0aWQiOiJUMDEwUVM3VVFOQSIsImFpZCI6IkEwOTlMQUNBQjJSIiwiY2lkIjoiRDA5QTBMRkhLOFIifQ"},"type":"events_api","accepts_response_payload":false,"retry_attempt":0,"retry_reason":""})
2025-08-21 11:03:59,222 - slack_bolt.App - DEBUG - [client.py:99] - A new message enqueued (current queue size: 1)
2025-08-21 11:03:59,222 - slack_bolt.App - DEBUG - [client.py:105] - A message dequeued (current queue size: 0)
2025-08-21 11:03:59,223 - slack_bolt.App - DEBUG - [client.py:125] - Message processing started (type: events_api, envelope_id: fac76e1c-adfa-4ca9-8368-64e768efee6a)
2025-08-21 11:03:59,223 - slack_bolt.App - DEBUG - [app.py:476] - Applying slack_bolt.middleware.ssl_check.ssl_check.SslCheck
2025-08-21 11:03:59,223 - slack_bolt.App - DEBUG - [app.py:476] - Applying slack_bolt.middleware.request_verification.request_verification.RequestVerification
2025-08-21 11:03:59,224 - slack_bolt.App - DEBUG - [app.py:476] - Applying slack_bolt.middleware.authorization.single_team_authorization.SingleTeamAuthorization
2025-08-21 11:03:59,224 - slack_bolt.App - DEBUG - [app.py:476] - Applying slack_bolt.middleware.ignoring_self_events.ignoring_self_events.IgnoringSelfEvents
2025-08-21 11:03:59,224 - slack_bolt.App - DEBUG - [app.py:476] - Applying slack_bolt.middleware.url_verification.url_verification.UrlVerification
2025-08-21 11:03:59,224 - slack_bolt.App - DEBUG - [app.py:500] - Checking listener: handle_app_mentions ...
2025-08-21 11:03:59,224 - slack_bolt.App - DEBUG - [app.py:500] - Checking listener: help_message ...
2025-08-21 11:03:59,224 - slack_bolt.App - DEBUG - [app.py:500] - Checking listener: handle_dm_messages ...
2025-08-21 11:03:59,225 - slack_bolt.App - DEBUG - [app.py:522] - Running listener: handle_dm_messages ...
2025-08-21 11:03:59,225 - slack_bolt.App - DEBUG - [thread_runner.py:198] - Responding with status: 200 body: "" (0 millis)
2025-08-21 11:03:59,225 - __main__ - INFO - [main.py:306] - === DM MESSAGE EVENT RECEIVED ===
2025-08-21 11:03:59,225 - slack_bolt.App - DEBUG - [client.py:200] - Sending a message (session id: 8838bdd0-d25d-415c-b01c-dbad6d17fc30, message: {"envelope_id": "fac76e1c-adfa-4ca9-8368-64e768efee6a"})
2025-08-21 11:03:59,225 - __main__ - DEBUG - [main.py:307] - Full event body: {'token': 'yq71khZBCyJF1Ri2hG5aNqr5', 'team_id': 'T010QS7UQNA', 'enterprise_id': 'ERV4P7NAD', 'context_team_id': None, 'context_enterprise_id': 'ERV4P7NAD', 'api_app_id': 'A099LACAB2R', 'event': {'type': 'message', 'subtype': 'message_changed', 'message': {'subtype': 'tombstone', 'text': 'This message was deleted.', 'user': 'USLACKBOT', 'hidden': True, 'type': 'message', 'thread_ts': '1755798517.860049', 'reply_count': 2, 'reply_users_count': 1, 'latest_reply': '1755798529.480189', 'reply_users': ['U099R6WTZ9S'], 'is_locked': False, 'ts': '1755798517.860049'}, 'previous_message': {'user': 'U01RMTFMALF', 'type': 'message', 'ts': '1755798517.860049', 'client_msg_id': 'a53e5c27-e0f8-4927-8159-445d8bdd5408', 'text': 'How to get access to jenkins?', 'thread_ts': '1755798517.860049', 'reply_count': 2, 'reply_users_count': 1, 'latest_reply': '1755798529.480189', 'reply_users': ['U099R6WTZ9S'], 'is_locked': False, 'subscribed': True, 'last_read': '1755798529.480189', 'blocks': [{'type': 'rich_text', 'block_id': 'jBTYB', 'elements': [{'type': 'rich_text_section', 'elements': [{'type': 'text', 'text': 'How to get access to jenkins?'}]}]}]}, 'channel': 'D09A0LFHK8R', 'hidden': True, 'ts': '1755799438.001800', 'event_ts': '1755799438.001800', 'channel_type': 'im'}, 'type': 'event_callback', 'event_id': 'Ev09BATY5WGK', 'event_time': 1755799438, 'authorizations': [{'enterprise_id': 'ERV4P7NAD', 'team_id': 'T010QS7UQNA', 'user_id': 'U099R6WTZ9S', 'is_bot': True, 'is_enterprise_install': False}], 'is_ext_shared_channel': False, 'event_context': '4-eyJldCI6Im1lc3NhZ2UiLCJ0aWQiOiJUMDEwUVM3VVFOQSIsImFpZCI6IkEwOTlMQUNBQjJSIiwiY2lkIjoiRDA5QTBMRkhLOFIifQ'}
2025-08-21 11:03:59,226 - __main__ - INFO - [main.py:316] - DM Event details: channel=D09A0LFHK8R, user=None, ts=1755799438.001800
2025-08-21 11:03:59,226 - slack_bolt.App - DEBUG - [internals.py:41] - Response time: 2 milliseconds
2025-08-21 11:03:59,226 - __main__ - DEBUG - [main.py:317] - DM Event text: 
2025-08-21 11:03:59,226 - slack_bolt.App - DEBUG - [client.py:150] - Message processing completed (type: events_api, envelope_id: fac76e1c-adfa-4ca9-8368-64e768efee6a)
2025-08-21 11:03:59,226 - utils - DEBUG - [utils.py:27] - Checking message processing: channel=D09A0LFHK8R, ts=1755799438.001800, text='...'
2025-08-21 11:03:59,226 - utils - DEBUG - [utils.py:31] - Message hash: 9793830c479db5f32b6ef6210e720b4b
2025-08-21 11:03:59,226 - utils - DEBUG - [utils.py:53] - Added message to processing cache (total entries: 2)
2025-08-21 11:03:59,226 - __main__ - DEBUG - [main.py:330] - Bot check: bot_id=None, user_id=None
2025-08-21 11:03:59,227 - __main__ - DEBUG - [main.py:335] - Question received: ''
2025-08-21 11:03:59,227 - __main__ - WARNING - [main.py:337] - Empty question in DM
2025-08-21 11:04:04,742 - slack_bolt.App - DEBUG - [client.py:235] - on_message invoked: (message: {"envelope_id":"6ea9b028-44fb-4651-ace4-dfc6a5df66b1","payload":{"token":"yq71khZBCyJF1Ri2hG5aNqr5","team_id":"T010QS7UQNA","enterprise_id":"ERV4P7NAD","context_team_id":null,"context_enterprise_id":"ERV4P7NAD","api_app_id":"A099LACAB2R","event":{"type":"message","subtype":"message_changed","message":{"subtype":"tombstone","text":"This message was deleted.","user":"USLACKBOT","hidden":true,"type":"message","thread_ts":"1755798116.274489","reply_count":3,"reply_users_count":1,"latest_reply":"1755798136.100519","reply_users":["U099R6WTZ9S"],"is_locked":false,"ts":"1755798116.274489"},"previous_message":{"user":"U01RMTFMALF","type":"message","ts":"1755798116.274489","client_msg_id":"95ae27a2-db50-4c24-9a5e-0344beb8c81d","text":"How to run test on Android","thread_ts":"1755798116.274489","reply_count":3,"reply_users_count":1,"latest_reply":"1755798136.100519","reply_users":["U099R6WTZ9S"],"is_locked":false,"subscribed":true,"last_read":"1755798136.100519","blocks":[{"type":"rich_text","block_id":"q7dZ3","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"How to run test on Android"}]}]}]},"channel":"D09A0LFHK8R","hidden":true,"ts":"1755799444.001900","event_ts":"1755799444.001900","channel_type":"im"},"type":"event_callback","event_id":"Ev09BFUUR63C","event_time":1755799444,"authorizations":[{"enterprise_id":"ERV4P7NAD","team_id":"T010QS7UQNA","user_id":"U099R6WTZ9S","is_bot":true,"is_enterprise_install":false}],"is_ext_shared_channel":false,"event_context":"4-eyJldCI6Im1lc3NhZ2UiLCJ0aWQiOiJUMDEwUVM3VVFOQSIsImFpZCI6IkEwOTlMQUNBQjJSIiwiY2lkIjoiRDA5QTBMRkhLOFIifQ"},"type":"events_api","accepts_response_payload":false,"retry_attempt":0,"retry_reason":""})
2025-08-21 11:04:04,742 - slack_bolt.App - DEBUG - [client.py:99] - A new message enqueued (current queue size: 1)
2025-08-21 11:04:04,743 - slack_bolt.App - DEBUG - [client.py:105] - A message dequeued (current queue size: 0)
2025-08-21 11:04:04,743 - slack_bolt.App - DEBUG - [client.py:125] - Message processing started (type: events_api, envelope_id: 6ea9b028-44fb-4651-ace4-dfc6a5df66b1)
2025-08-21 11:04:04,744 - slack_bolt.App - DEBUG - [app.py:476] - Applying slack_bolt.middleware.ssl_check.ssl_check.SslCheck
2025-08-21 11:04:04,744 - slack_bolt.App - DEBUG - [app.py:476] - Applying slack_bolt.middleware.request_verification.request_verification.RequestVerification
2025-08-21 11:04:04,744 - slack_bolt.App - DEBUG - [app.py:476] - Applying slack_bolt.middleware.authorization.single_team_authorization.SingleTeamAuthorization
2025-08-21 11:04:04,744 - slack_bolt.App - DEBUG - [app.py:476] - Applying slack_bolt.middleware.ignoring_self_events.ignoring_self_events.IgnoringSelfEvents
2025-08-21 11:04:04,745 - slack_bolt.App - DEBUG - [app.py:476] - Applying slack_bolt.middleware.url_verification.url_verification.UrlVerification
2025-08-21 11:04:04,745 - slack_bolt.App - DEBUG - [app.py:500] - Checking listener: handle_app_mentions ...
2025-08-21 11:04:04,745 - slack_bolt.App - DEBUG - [app.py:500] - Checking listener: help_message ...
2025-08-21 11:04:04,745 - slack_bolt.App - DEBUG - [app.py:500] - Checking listener: handle_dm_messages ...
2025-08-21 11:04:04,745 - slack_bolt.App - DEBUG - [app.py:522] - Running listener: handle_dm_messages ...
2025-08-21 11:04:04,745 - slack_bolt.App - DEBUG - [thread_runner.py:198] - Responding with status: 200 body: "" (0 millis)
2025-08-21 11:04:04,745 - __main__ - INFO - [main.py:306] - === DM MESSAGE EVENT RECEIVED ===
2025-08-21 11:04:04,746 - slack_bolt.App - DEBUG - [client.py:200] - Sending a message (session id: 8838bdd0-d25d-415c-b01c-dbad6d17fc30, message: {"envelope_id": "6ea9b028-44fb-4651-ace4-dfc6a5df66b1"})
2025-08-21 11:04:04,746 - __main__ - DEBUG - [main.py:307] - Full event body: {'token': 'yq71khZBCyJF1Ri2hG5aNqr5', 'team_id': 'T010QS7UQNA', 'enterprise_id': 'ERV4P7NAD', 'context_team_id': None, 'context_enterprise_id': 'ERV4P7NAD', 'api_app_id': 'A099LACAB2R', 'event': {'type': 'message', 'subtype': 'message_changed', 'message': {'subtype': 'tombstone', 'text': 'This message was deleted.', 'user': 'USLACKBOT', 'hidden': True, 'type': 'message', 'thread_ts': '1755798116.274489', 'reply_count': 3, 'reply_users_count': 1, 'latest_reply': '1755798136.100519', 'reply_users': ['U099R6WTZ9S'], 'is_locked': False, 'ts': '1755798116.274489'}, 'previous_message': {'user': 'U01RMTFMALF', 'type': 'message', 'ts': '1755798116.274489', 'client_msg_id': '95ae27a2-db50-4c24-9a5e-0344beb8c81d', 'text': 'How to run test on Android', 'thread_ts': '1755798116.274489', 'reply_count': 3, 'reply_users_count': 1, 'latest_reply': '1755798136.100519', 'reply_users': ['U099R6WTZ9S'], 'is_locked': False, 'subscribed': True, 'last_read': '1755798136.100519', 'blocks': [{'type': 'rich_text', 'block_id': 'q7dZ3', 'elements': [{'type': 'rich_text_section', 'elements': [{'type': 'text', 'text': 'How to run test on Android'}]}]}]}, 'channel': 'D09A0LFHK8R', 'hidden': True, 'ts': '1755799444.001900', 'event_ts': '1755799444.001900', 'channel_type': 'im'}, 'type': 'event_callback', 'event_id': 'Ev09BFUUR63C', 'event_time': 1755799444, 'authorizations': [{'enterprise_id': 'ERV4P7NAD', 'team_id': 'T010QS7UQNA', 'user_id': 'U099R6WTZ9S', 'is_bot': True, 'is_enterprise_install': False}], 'is_ext_shared_channel': False, 'event_context': '4-eyJldCI6Im1lc3NhZ2UiLCJ0aWQiOiJUMDEwUVM3VVFOQSIsImFpZCI6IkEwOTlMQUNBQjJSIiwiY2lkIjoiRDA5QTBMRkhLOFIifQ'}
2025-08-21 11:04:04,746 - slack_bolt.App - DEBUG - [internals.py:41] - Response time: 2 milliseconds
2025-08-21 11:04:04,746 - __main__ - INFO - [main.py:316] - DM Event details: channel=D09A0LFHK8R, user=None, ts=1755799444.001900
2025-08-21 11:04:04,747 - slack_bolt.App - DEBUG - [client.py:150] - Message processing completed (type: events_api, envelope_id: 6ea9b028-44fb-4651-ace4-dfc6a5df66b1)
2025-08-21 11:04:04,747 - __main__ - DEBUG - [main.py:317] - DM Event text: 
2025-08-21 11:04:04,747 - utils - DEBUG - [utils.py:27] - Checking message processing: channel=D09A0LFHK8R, ts=1755799444.001900, text='...'
2025-08-21 11:04:04,747 - utils - DEBUG - [utils.py:31] - Message hash: 85fb326add448a5721b254bab0c49bb1
2025-08-21 11:04:04,747 - utils - DEBUG - [utils.py:53] - Added message to processing cache (total entries: 3)
2025-08-21 11:04:04,747 - __main__ - DEBUG - [main.py:330] - Bot check: bot_id=None, user_id=None
2025-08-21 11:04:04,747 - __main__ - DEBUG - [main.py:335] - Question received: ''
2025-08-21 11:04:04,747 - __main__ - WARNING - [main.py:337] - Empty question in DM
2025-08-21 11:04:08,458 - slack_bolt.App - DEBUG - [client.py:235] - on_message invoked: (message: {"envelope_id":"584d39cc-18f8-4753-8595-a903fd6b5388","payload":{"token":"yq71khZBCyJF1Ri2hG5aNqr5","team_id":"T010QS7UQNA","enterprise_id":"ERV4P7NAD","context_team_id":null,"context_enterprise_id":"ERV4P7NAD","api_app_id":"A099LACAB2R","event":{"type":"message","subtype":"message_deleted","previous_message":{"user":"U01RMTFMALF","type":"message","ts":"1755797563.389489","client_msg_id":"7e5cbd1e-300a-4b88-b4c2-b9cb04169e19","text":"Hi","blocks":[{"type":"rich_text","block_id":"bnCY8","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Hi"}]}]}]},"channel":"D09A0LFHK8R","hidden":true,"deleted_ts":"1755797563.389489","event_ts":"1755799448.002000","ts":"1755799448.002000","channel_type":"im"},"type":"event_callback","event_id":"Ev09BFUVSZ98","event_time":1755799448,"authorizations":[{"enterprise_id":"ERV4P7NAD","team_id":"T010QS7UQNA","user_id":"U099R6WTZ9S","is_bot":true,"is_enterprise_install":false}],"is_ext_shared_channel":false,"event_context":"4-eyJldCI6Im1lc3NhZ2UiLCJ0aWQiOiJUMDEwUVM3VVFOQSIsImFpZCI6IkEwOTlMQUNBQjJSIiwiY2lkIjoiRDA5QTBMRkhLOFIifQ"},"type":"events_api","accepts_response_payload":false,"retry_attempt":0,"retry_reason":""})
2025-08-21 11:04:08,459 - slack_bolt.App - DEBUG - [client.py:99] - A new message enqueued (current queue size: 1)
2025-08-21 11:04:08,460 - slack_bolt.App - DEBUG - [client.py:105] - A message dequeued (current queue size: 0)
2025-08-21 11:04:08,460 - slack_bolt.App - DEBUG - [client.py:125] - Message processing started (type: events_api, envelope_id: 584d39cc-18f8-4753-8595-a903fd6b5388)
2025-08-21 11:04:08,460 - slack_bolt.App - DEBUG - [app.py:476] - Applying slack_bolt.middleware.ssl_check.ssl_check.SslCheck
2025-08-21 11:04:08,461 - slack_bolt.App - DEBUG - [app.py:476] - Applying slack_bolt.middleware.request_verification.request_verification.RequestVerification
2025-08-21 11:04:08,461 - slack_bolt.App - DEBUG - [app.py:476] - Applying slack_bolt.middleware.authorization.single_team_authorization.SingleTeamAuthorization
2025-08-21 11:04:08,461 - slack_bolt.App - DEBUG - [app.py:476] - Applying slack_bolt.middleware.ignoring_self_events.ignoring_self_events.IgnoringSelfEvents
2025-08-21 11:04:08,461 - slack_bolt.App - DEBUG - [app.py:476] - Applying slack_bolt.middleware.url_verification.url_verification.UrlVerification
2025-08-21 11:04:08,461 - slack_bolt.App - DEBUG - [app.py:500] - Checking listener: handle_app_mentions ...
2025-08-21 11:04:08,461 - slack_bolt.App - DEBUG - [app.py:500] - Checking listener: help_message ...
2025-08-21 11:04:08,461 - slack_bolt.App - DEBUG - [app.py:500] - Checking listener: handle_dm_messages ...
2025-08-21 11:04:08,461 - slack_bolt.App - DEBUG - [app.py:522] - Running listener: handle_dm_messages ...
2025-08-21 11:04:08,462 - slack_bolt.App - DEBUG - [thread_runner.py:198] - Responding with status: 200 body: "" (0 millis)
2025-08-21 11:04:08,462 - __main__ - INFO - [main.py:306] - === DM MESSAGE EVENT RECEIVED ===
2025-08-21 11:04:08,462 - slack_bolt.App - DEBUG - [client.py:200] - Sending a message (session id: 8838bdd0-d25d-415c-b01c-dbad6d17fc30, message: {"envelope_id": "584d39cc-18f8-4753-8595-a903fd6b5388"})
2025-08-21 11:04:08,462 - __main__ - DEBUG - [main.py:307] - Full event body: {'token': 'yq71khZBCyJF1Ri2hG5aNqr5', 'team_id': 'T010QS7UQNA', 'enterprise_id': 'ERV4P7NAD', 'context_team_id': None, 'context_enterprise_id': 'ERV4P7NAD', 'api_app_id': 'A099LACAB2R', 'event': {'type': 'message', 'subtype': 'message_deleted', 'previous_message': {'user': 'U01RMTFMALF', 'type': 'message', 'ts': '1755797563.389489', 'client_msg_id': '7e5cbd1e-300a-4b88-b4c2-b9cb04169e19', 'text': 'Hi', 'blocks': [{'type': 'rich_text', 'block_id': 'bnCY8', 'elements': [{'type': 'rich_text_section', 'elements': [{'type': 'text', 'text': 'Hi'}]}]}]}, 'channel': 'D09A0LFHK8R', 'hidden': True, 'deleted_ts': '1755797563.389489', 'event_ts': '1755799448.002000', 'ts': '1755799448.002000', 'channel_type': 'im'}, 'type': 'event_callback', 'event_id': 'Ev09BFUVSZ98', 'event_time': 1755799448, 'authorizations': [{'enterprise_id': 'ERV4P7NAD', 'team_id': 'T010QS7UQNA', 'user_id': 'U099R6WTZ9S', 'is_bot': True, 'is_enterprise_install': False}], 'is_ext_shared_channel': False, 'event_context': '4-eyJldCI6Im1lc3NhZ2UiLCJ0aWQiOiJUMDEwUVM3VVFOQSIsImFpZCI6IkEwOTlMQUNBQjJSIiwiY2lkIjoiRDA5QTBMRkhLOFIifQ'}
2025-08-21 11:04:08,462 - __main__ - INFO - [main.py:316] - DM Event details: channel=D09A0LFHK8R, user=None, ts=1755799448.002000
2025-08-21 11:04:08,462 - __main__ - DEBUG - [main.py:317] - DM Event text: 
2025-08-21 11:04:08,462 - slack_bolt.App - DEBUG - [internals.py:41] - Response time: 1 milliseconds
2025-08-21 11:04:08,462 - utils - DEBUG - [utils.py:27] - Checking message processing: channel=D09A0LFHK8R, ts=1755799448.002000, text='...'
2025-08-21 11:04:08,462 - slack_bolt.App - DEBUG - [client.py:150] - Message processing completed (type: events_api, envelope_id: 584d39cc-18f8-4753-8595-a903fd6b5388)
2025-08-21 11:04:08,463 - utils - DEBUG - [utils.py:31] - Message hash: bbae265beaf2f808d68715aa67a6a12e
2025-08-21 11:04:08,463 - utils - DEBUG - [utils.py:53] - Added message to processing cache (total entries: 4)
2025-08-21 11:04:08,463 - __main__ - DEBUG - [main.py:330] - Bot check: bot_id=None, user_id=None
2025-08-21 11:04:08,463 - __main__ - DEBUG - [main.py:335] - Question received: ''
2025-08-21 11:04:08,463 - __main__ - WARNING - [main.py:337] - Empty question in DM
2025-08-21 11:04:13,129 - slack_bolt.App - DEBUG - [client.py:235] - on_message invoked: (message: {"envelope_id":"489c1fa1-d6ea-44da-a882-427cc242d484","payload":{"token":"yq71khZBCyJF1Ri2hG5aNqr5","team_id":"T010QS7UQNA","enterprise_id":"ERV4P7NAD","context_team_id":null,"context_enterprise_id":"ERV4P7NAD","api_app_id":"A099LACAB2R","event":{"type":"message","subtype":"message_deleted","previous_message":{"user":"U01RMTFMALF","type":"message","ts":"1755797594.504549","client_msg_id":"2248cadd-cd6b-4e42-b087-eff209062246","text":"How to connect roku device?","blocks":[{"type":"rich_text","block_id":"QPj91","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"How to connect roku device?"}]}]}]},"channel":"D09A0LFHK8R","hidden":true,"deleted_ts":"1755797594.504549","event_ts":"1755799452.002100","ts":"1755799452.002100","channel_type":"im"},"type":"event_callback","event_id":"Ev09BVCGS3EV","event_time":1755799452,"authorizations":[{"enterprise_id":"ERV4P7NAD","team_id":"T010QS7UQNA","user_id":"U099R6WTZ9S","is_bot":true,"is_enterprise_install":false}],"is_ext_shared_channel":false,"event_context":"4-eyJldCI6Im1lc3NhZ2UiLCJ0aWQiOiJUMDEwUVM3VVFOQSIsImFpZCI6IkEwOTlMQUNBQjJSIiwiY2lkIjoiRDA5QTBMRkhLOFIifQ"},"type":"events_api","accepts_response_payload":false,"retry_attempt":0,"retry_reason":""})
2025-08-21 11:04:13,129 - slack_bolt.App - DEBUG - [client.py:99] - A new message enqueued (current queue size: 1)
2025-08-21 11:04:13,129 - slack_bolt.App - DEBUG - [client.py:105] - A message dequeued (current queue size: 0)
2025-08-21 11:04:13,129 - slack_bolt.App - DEBUG - [client.py:125] - Message processing started (type: events_api, envelope_id: 489c1fa1-d6ea-44da-a882-427cc242d484)
2025-08-21 11:04:13,130 - slack_bolt.App - DEBUG - [app.py:476] - Applying slack_bolt.middleware.ssl_check.ssl_check.SslCheck
2025-08-21 11:04:13,130 - slack_bolt.App - DEBUG - [app.py:476] - Applying slack_bolt.middleware.request_verification.request_verification.RequestVerification
2025-08-21 11:04:13,130 - slack_bolt.App - DEBUG - [app.py:476] - Applying slack_bolt.middleware.authorization.single_team_authorization.SingleTeamAuthorization
2025-08-21 11:04:13,130 - slack_bolt.App - DEBUG - [app.py:476] - Applying slack_bolt.middleware.ignoring_self_events.ignoring_self_events.IgnoringSelfEvents
2025-08-21 11:04:13,130 - slack_bolt.App - DEBUG - [app.py:476] - Applying slack_bolt.middleware.url_verification.url_verification.UrlVerification
2025-08-21 11:04:13,130 - slack_bolt.App - DEBUG - [app.py:500] - Checking listener: handle_app_mentions ...
2025-08-21 11:04:13,130 - slack_bolt.App - DEBUG - [app.py:500] - Checking listener: help_message ...
2025-08-21 11:04:13,130 - slack_bolt.App - DEBUG - [app.py:500] - Checking listener: handle_dm_messages ...
2025-08-21 11:04:13,130 - slack_bolt.App - DEBUG - [app.py:522] - Running listener: handle_dm_messages ...
2025-08-21 11:04:13,130 - slack_bolt.App - DEBUG - [thread_runner.py:198] - Responding with status: 200 body: "" (0 millis)
2025-08-21 11:04:13,130 - __main__ - INFO - [main.py:306] - === DM MESSAGE EVENT RECEIVED ===
2025-08-21 11:04:13,131 - slack_bolt.App - DEBUG - [client.py:200] - Sending a message (session id: 8838bdd0-d25d-415c-b01c-dbad6d17fc30, message: {"envelope_id": "489c1fa1-d6ea-44da-a882-427cc242d484"})
2025-08-21 11:04:13,131 - __main__ - DEBUG - [main.py:307] - Full event body: {'token': 'yq71khZBCyJF1Ri2hG5aNqr5', 'team_id': 'T010QS7UQNA', 'enterprise_id': 'ERV4P7NAD', 'context_team_id': None, 'context_enterprise_id': 'ERV4P7NAD', 'api_app_id': 'A099LACAB2R', 'event': {'type': 'message', 'subtype': 'message_deleted', 'previous_message': {'user': 'U01RMTFMALF', 'type': 'message', 'ts': '1755797594.504549', 'client_msg_id': '2248cadd-cd6b-4e42-b087-eff209062246', 'text': 'How to connect roku device?', 'blocks': [{'type': 'rich_text', 'block_id': 'QPj91', 'elements': [{'type': 'rich_text_section', 'elements': [{'type': 'text', 'text': 'How to connect roku device?'}]}]}]}, 'channel': 'D09A0LFHK8R', 'hidden': True, 'deleted_ts': '1755797594.504549', 'event_ts': '1755799452.002100', 'ts': '1755799452.002100', 'channel_type': 'im'}, 'type': 'event_callback', 'event_id': 'Ev09BVCGS3EV', 'event_time': 1755799452, 'authorizations': [{'enterprise_id': 'ERV4P7NAD', 'team_id': 'T010QS7UQNA', 'user_id': 'U099R6WTZ9S', 'is_bot': True, 'is_enterprise_install': False}], 'is_ext_shared_channel': False, 'event_context': '4-eyJldCI6Im1lc3NhZ2UiLCJ0aWQiOiJUMDEwUVM3VVFOQSIsImFpZCI6IkEwOTlMQUNBQjJSIiwiY2lkIjoiRDA5QTBMRkhLOFIifQ'}
2025-08-21 11:04:13,131 - __main__ - INFO - [main.py:316] - DM Event details: channel=D09A0LFHK8R, user=None, ts=1755799452.002100
2025-08-21 11:04:13,131 - __main__ - DEBUG - [main.py:317] - DM Event text: 
2025-08-21 11:04:13,131 - utils - DEBUG - [utils.py:27] - Checking message processing: channel=D09A0LFHK8R, ts=1755799452.002100, text='...'
2025-08-21 11:04:13,131 - slack_bolt.App - DEBUG - [internals.py:41] - Response time: 1 milliseconds
2025-08-21 11:04:13,131 - utils - DEBUG - [utils.py:31] - Message hash: 07dbc64c8ac70829a12fa6910707042a
2025-08-21 11:04:13,131 - slack_bolt.App - DEBUG - [client.py:150] - Message processing completed (type: events_api, envelope_id: 489c1fa1-d6ea-44da-a882-427cc242d484)
2025-08-21 11:04:13,131 - utils - DEBUG - [utils.py:53] - Added message to processing cache (total entries: 5)
2025-08-21 11:04:13,132 - __main__ - DEBUG - [main.py:330] - Bot check: bot_id=None, user_id=None
2025-08-21 11:04:13,132 - __main__ - DEBUG - [main.py:335] - Question received: ''
2025-08-21 11:04:13,132 - __main__ - WARNING - [main.py:337] - Empty question in DM
2025-08-21 11:17:45,890 - slack_bolt.App - DEBUG - [client.py:235] - on_message invoked: (message: {"envelope_id":"a73959b0-5800-47b9-a723-00a82177f2de","payload":{"token":"yq71khZBCyJF1Ri2hG5aNqr5","team_id":"T010QS7UQNA","enterprise_id":"ERV4P7NAD","context_team_id":null,"context_enterprise_id":"ERV4P7NAD","api_app_id":"A099LACAB2R","event":{"user":"U01RMTFMALF","type":"message","ts":"1755800265.419169","client_msg_id":"ef19a993-5766-4384-9006-455373f5446e","text":"How to connect roku device?","blocks":[{"type":"rich_text","block_id":"QPj91","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"How to connect roku device?"}]}]}],"channel":"D09A0LFHK8R","event_ts":"1755800265.419169","channel_type":"im"},"type":"event_callback","event_id":"Ev09BHV5QXU6","event_time":1755800265,"authorizations":[{"enterprise_id":"ERV4P7NAD","team_id":"T010QS7UQNA","user_id":"U099R6WTZ9S","is_bot":true,"is_enterprise_install":false}],"is_ext_shared_channel":false,"event_context":"4-eyJldCI6Im1lc3NhZ2UiLCJ0aWQiOiJUMDEwUVM3VVFOQSIsImFpZCI6IkEwOTlMQUNBQjJSIiwiY2lkIjoiRDA5QTBMRkhLOFIifQ"},"type":"events_api","accepts_response_payload":false,"retry_attempt":0,"retry_reason":""})
2025-08-21 11:17:45,892 - slack_bolt.App - DEBUG - [client.py:99] - A new message enqueued (current queue size: 1)
2025-08-21 11:17:45,892 - slack_bolt.App - DEBUG - [client.py:105] - A message dequeued (current queue size: 0)
2025-08-21 11:17:45,892 - slack_bolt.App - DEBUG - [client.py:125] - Message processing started (type: events_api, envelope_id: a73959b0-5800-47b9-a723-00a82177f2de)
2025-08-21 11:17:45,893 - slack_bolt.App - DEBUG - [app.py:476] - Applying slack_bolt.middleware.ssl_check.ssl_check.SslCheck
2025-08-21 11:17:45,893 - slack_bolt.App - DEBUG - [app.py:476] - Applying slack_bolt.middleware.request_verification.request_verification.RequestVerification
2025-08-21 11:17:45,893 - slack_bolt.App - DEBUG - [app.py:476] - Applying slack_bolt.middleware.authorization.single_team_authorization.SingleTeamAuthorization
2025-08-21 11:17:45,893 - slack_bolt.App - DEBUG - [app.py:476] - Applying slack_bolt.middleware.ignoring_self_events.ignoring_self_events.IgnoringSelfEvents
2025-08-21 11:17:45,893 - slack_bolt.App - DEBUG - [app.py:476] - Applying slack_bolt.middleware.url_verification.url_verification.UrlVerification
2025-08-21 11:17:45,893 - slack_bolt.App - DEBUG - [app.py:500] - Checking listener: handle_app_mentions ...
2025-08-21 11:17:45,894 - slack_bolt.App - DEBUG - [app.py:500] - Checking listener: help_message ...
2025-08-21 11:17:45,894 - slack_bolt.App - DEBUG - [app.py:500] - Checking listener: handle_dm_messages ...
2025-08-21 11:17:45,894 - slack_bolt.App - DEBUG - [app.py:522] - Running listener: handle_dm_messages ...
2025-08-21 11:17:45,894 - slack_bolt.App - DEBUG - [thread_runner.py:198] - Responding with status: 200 body: "" (0 millis)
2025-08-21 11:17:45,894 - __main__ - INFO - [main.py:306] - === DM MESSAGE EVENT RECEIVED ===
2025-08-21 11:17:45,894 - slack_bolt.App - DEBUG - [client.py:200] - Sending a message (session id: 8838bdd0-d25d-415c-b01c-dbad6d17fc30, message: {"envelope_id": "a73959b0-5800-47b9-a723-00a82177f2de"})
2025-08-21 11:17:45,895 - __main__ - DEBUG - [main.py:307] - Full event body: {'token': 'yq71khZBCyJF1Ri2hG5aNqr5', 'team_id': 'T010QS7UQNA', 'enterprise_id': 'ERV4P7NAD', 'context_team_id': None, 'context_enterprise_id': 'ERV4P7NAD', 'api_app_id': 'A099LACAB2R', 'event': {'user': 'U01RMTFMALF', 'type': 'message', 'ts': '1755800265.419169', 'client_msg_id': 'ef19a993-5766-4384-9006-455373f5446e', 'text': 'How to connect roku device?', 'blocks': [{'type': 'rich_text', 'block_id': 'QPj91', 'elements': [{'type': 'rich_text_section', 'elements': [{'type': 'text', 'text': 'How to connect roku device?'}]}]}], 'channel': 'D09A0LFHK8R', 'event_ts': '1755800265.419169', 'channel_type': 'im'}, 'type': 'event_callback', 'event_id': 'Ev09BHV5QXU6', 'event_time': 1755800265, 'authorizations': [{'enterprise_id': 'ERV4P7NAD', 'team_id': 'T010QS7UQNA', 'user_id': 'U099R6WTZ9S', 'is_bot': True, 'is_enterprise_install': False}], 'is_ext_shared_channel': False, 'event_context': '4-eyJldCI6Im1lc3NhZ2UiLCJ0aWQiOiJUMDEwUVM3VVFOQSIsImFpZCI6IkEwOTlMQUNBQjJSIiwiY2lkIjoiRDA5QTBMRkhLOFIifQ'}
2025-08-21 11:17:45,895 - __main__ - INFO - [main.py:316] - DM Event details: channel=D09A0LFHK8R, user=U01RMTFMALF, ts=1755800265.419169
2025-08-21 11:17:45,895 - __main__ - DEBUG - [main.py:317] - DM Event text: How to connect roku device?
2025-08-21 11:17:45,895 - slack_bolt.App - DEBUG - [internals.py:41] - Response time: 2 milliseconds
2025-08-21 11:17:45,895 - utils - DEBUG - [utils.py:27] - Checking message processing: channel=D09A0LFHK8R, ts=1755800265.419169, text='How to connect roku device?...'
2025-08-21 11:17:45,895 - slack_bolt.App - DEBUG - [client.py:150] - Message processing completed (type: events_api, envelope_id: a73959b0-5800-47b9-a723-00a82177f2de)
2025-08-21 11:17:45,896 - utils - DEBUG - [utils.py:31] - Message hash: 9884a7192565ddac42a88b1142eb0f7c
2025-08-21 11:17:45,896 - utils - DEBUG - [utils.py:42] - Cleaning up 5 expired message entries
2025-08-21 11:17:45,896 - utils - DEBUG - [utils.py:53] - Added message to processing cache (total entries: 1)
2025-08-21 11:17:45,896 - __main__ - DEBUG - [main.py:330] - Bot check: bot_id=None, user_id=U01RMTFMALF
2025-08-21 11:17:45,896 - __main__ - DEBUG - [main.py:335] - Question received: 'How to connect roku device?'
2025-08-21 11:17:45,896 - __main__ - INFO - [main.py:340] - Processing DM question from user U01RMTFMALF: How to connect roku device?
2025-08-21 11:17:45,896 - __main__ - DEBUG - [main.py:343] - Starting DM processing...
2025-08-21 11:17:45,896 - __main__ - DEBUG - [main.py:346] - Checking if 'how to connect roku device?' is an admin command in DM
2025-08-21 11:17:45,896 - __main__ - DEBUG - [main.py:381] - Checking if DM thread is already being processed...
2025-08-21 11:17:45,896 - utils - DEBUG - [utils.py:67] - Managing thread: D09A0LFHK8R:1755800265.419169, action: add, user: U01RMTFMALF
2025-08-21 11:17:45,897 - utils - INFO - [utils.py:94] - Added thread D09A0LFHK8R:1755800265.419169 to active tracking (total: 1)
2025-08-21 11:17:45,897 - __main__ - DEBUG - [main.py:386] - DM thread management check passed
2025-08-21 11:17:45,897 - slack_sdk.web.base_client - DEBUG - [base_client.py:255] - Sending a request - url: https://slack.com/api/reactions.add, query_params: {}, body_params: {'channel': 'D09A0LFHK8R', 'name': 'thinking_face', 'timestamp': '1755800265.419169', 'team_id': 'T010QS7UQNA'}, files: {}, json_body: None, headers: {'Content-Type': 'application/x-www-form-urlencoded', 'Authorization': '(redacted)', 'User-Agent': 'Python/3.12.0 slackclient/3.34.0 Darwin/23.4.0'}
2025-08-21 11:17:46,294 - slack_sdk.web.base_client - DEBUG - [base_client.py:546] - Received the following response - status: 200, headers: {'date': 'Thu, 21 Aug 2025 18:17:46 GMT', 'server': 'Apache', 'vary': 'Accept-Encoding', 'x-slack-req-id': '3d9f0278085a36eb043cbdfb7fc692d4', 'x-content-type-options': 'nosniff', 'x-xss-protection': '0', 'pragma': 'no-cache', 'cache-control': 'private, no-cache, no-store, must-revalidate', 'expires': 'Sat, 26 Jul 1997 05:00:00 GMT', 'content-type': 'application/json; charset=utf-8', 'x-accepted-oauth-scopes': 'reactions:write', 'x-oauth-scopes': 'app_mentions:read,channels:history,chat:write,im:history,im:read,im:write,users:read,reactions:write', 'access-control-expose-headers': 'x-slack-req-id, retry-after', 'access-control-allow-headers': 'slack-route, x-slack-version-ts, x-b3-traceid, x-b3-spanid, x-b3-parentspanid, x-b3-sampled, x-b3-flags', 'strict-transport-security': 'max-age=31536000; includeSubDomains; preload', 'referrer-policy': 'no-referrer', 'x-slack-unique-id': 'aKdiyvjz4_YI_MIFy-f-FgAAABs', 'x-slack-backend': 'r', 'access-control-allow-origin': '*', 'content-length': '11', 'via': '1.1 slack-prod.tinyspeck.com, envoy-www-iad-sgctfmvc,envoy-edge-pdx-fjlvgagw', 'x-envoy-attempt-count': '1', 'x-envoy-upstream-service-time': '138', 'x-backend': 'main_normal main_canary_with_overflow main_control_with_overflow', 'x-server': 'slack-www-hhvm-main-iad-llrs', 'x-slack-shared-secret-outcome': 'no-match', 'x-edge-backend': 'envoy-www', 'timing-allow-origin': '*', 'x-slack-edge-shared-secret-outcome': 'no-match', 'connection': 'close'}, body: {"ok":true}
2025-08-21 11:17:46,295 - __main__ - INFO - [main.py:403] - Processing DM question from <@U01RMTFMALF>: How to connect roku device?
2025-08-21 11:17:46,295 - __main__ - INFO - [main.py:407] - Sending DM request to DIG AI...
2025-08-21 11:17:46,295 - dig_connector - INFO - [dig_connector.py:134] - Generating response for query: 'How to connect roku device?' with 0 chunks
2025-08-21 11:17:46,295 - dig_connector - DEBUG - [dig_connector.py:138] - Formatted context length: 0
2025-08-21 11:17:46,295 - dig_connector - INFO - [dig_connector.py:141] - No context available, using direct query
2025-08-21 11:17:46,296 - dig_connector - INFO - [dig_connector.py:150] - Sending prompt to DIG platform...
2025-08-21 11:17:46,296 - dig_connector - INFO - [dig_connector.py:121] - Sending message to DIG API - URL: https://ai.digdev.cbsicloud.com/fastapi/chats/853/generate
2025-08-21 11:17:46,296 - dig_connector - DEBUG - [dig_connector.py:122] - Message payload: {'model_id': 42, 'message_text': 'How to connect roku device?', 'history': [{'role': 'user', 'content': 'How to connect roku device?'}]}
2025-08-21 11:17:46,298 - urllib3.connectionpool - DEBUG - [connectionpool.py:292] - Resetting dropped connection: ai.digdev.cbsicloud.com
2025-08-21 11:17:54,799 - urllib3.connectionpool - DEBUG - [connectionpool.py:549] - https://ai.digdev.cbsicloud.com:443 "POST /fastapi/chats/853/generate HTTP/1.1" 200 2471
2025-08-21 11:17:54,800 - dig_connector - DEBUG - [dig_connector.py:125] - DIG API response: status=200
2025-08-21 11:17:54,801 - dig_connector - DEBUG - [dig_connector.py:129] - DIG API response data: {'message_text': 'To connect your Roku device, follow these general steps:\n\n1.  **Factory Reset (if needed):** If you are setting up a new or used device, you may want to factory reset it first. Navigate to `Settings` > `System` > `Advanced System Settings` on your Roku device and select `Factory Reset`. You will need to enter a code displayed on the screen. (Source: https://paramount.atlassian.net/wiki/spaces/PLQA/pages/47710384)\n2.  **Roku Device Restart:** The device will restart after a factory reset. (Source: https://paramount.atlassian.net/wiki/spaces/PLQA/pages/47710384)\n3.  **Pair Remote & Select Language:** Pair your remote control and choose your preferred language. (Source: https://paramount.atlassian.net/wiki/spaces/PLQA/pages/47710384)\n4.  **Connect to Network:** Select a Wi-Fi network and enter the password to connect your Roku device to the internet. (Source: https://paramount.atlassian.net/wiki/spaces/PLQA/pages/47710384)\n5.  **Select Display:** Choose your display settings. (Source: https://paramount.atlassian.net/wiki/spaces/PLQA/pages/47710384)\n6.  **Enter Email for Activation:** On the Roku device, select "Enter your email address" and input your email. (Source: https://paramount.atlassian.net/wiki/spaces/PLQA/pages/47710384)\n7.  **Activate Device:** Go to your email inbox and look for an email from Roku titled "Roku | Activate your device". Follow the instructions in the email to activate your device. This usually involves visiting a link on the Roku website and logging in or creating an account. (Source: https://paramount.atlassian.net/wiki/spaces/PLQA/pages/47710384, https://paramount.atlassian.net/wiki/spaces/PLQA/pages/47712699)\n\nOnce activated, the Roku device will begin updating and you can start adding channels.\n\nIf you are looking to connect your Roku device for specific purposes like deep link testing or video capture, the process involves additional steps and equipment:\n\n*   **Deep Link Testing:** Download the deep link test tool from Roku\'s developer website, ensure your computer and Roku device are on the same network, and select your device in the tester app. (Source: https://paramount.atlassian.net/wiki/spaces/PLQA/pages/333743507)\n*   **Video Capture:** This requires components like an HDMI splitter, video capture card, and specific connection procedures. (Source: https://paramount.atlassian.net/wiki/spaces/PLQA/pages/47714761)', 'requires_approval': False, 'execution_id': 1554}
2025-08-21 11:17:54,801 - dig_connector - INFO - [dig_connector.py:154] - Extracting response content...
2025-08-21 11:17:54,802 - dig_connector - DEBUG - [dig_connector.py:221] - Found message_text in response
2025-08-21 11:17:54,802 - dig_connector - INFO - [dig_connector.py:157] - Successfully generated response (length: 2387)
2025-08-21 11:17:54,802 - __main__ - INFO - [main.py:410] - Received DM response from DIG AI
2025-08-21 11:17:54,802 - __main__ - DEBUG - [main.py:411] - DIG AI DM response: To connect your Roku device, follow these general steps:

1.  **Factory Reset (if needed):** If you are setting up a new or used device, you may want to factory reset it first. Navigate to `Settings` > `System` > `Advanced System Settings` on your Roku device and select `Factory Reset`. You will need to enter a code displayed on the screen. (Source: https://paramount.atlassian.net/wiki/spaces/PLQA/pages/47710384)
2.  **Roku Device Restart:** The device will restart after a factory reset. (Source: https://paramount.atlassian.net/wiki/spaces/PLQA/pages/47710384)
3.  **Pair Remote & Select Language:** Pair your remote control and choose your preferred language. (Source: https://paramount.atlassian.net/wiki/spaces/PLQA/pages/47710384)
4.  **Connect to Network:** Select a Wi-Fi network and enter the password to connect your Roku device to the internet. (Source: https://paramount.atlassian.net/wiki/spaces/PLQA/pages/47710384)
5.  **Select Display:** Choose your display settings. (Source: https://paramount.atlassian.net/wiki/spaces/PLQA/pages/47710384)
6.  **Enter Email for Activation:** On the Roku device, select "Enter your email address" and input your email. (Source: https://paramount.atlassian.net/wiki/spaces/PLQA/pages/47710384)
7.  **Activate Device:** Go to your email inbox and look for an email from Roku titled "Roku | Activate your device". Follow the instructions in the email to activate your device. This usually involves visiting a link on the Roku website and logging in or creating an account. (Source: https://paramount.atlassian.net/wiki/spaces/PLQA/pages/47710384, https://paramount.atlassian.net/wiki/spaces/PLQA/pages/47712699)

Once activated, the Roku device will begin updating and you can start adding channels.

If you are looking to connect your Roku device for specific purposes like deep link testing or video capture, the process involves additional steps and equipment:

*   **Deep Link Testing:** Download the deep link test tool from Roku's developer website, ensure your computer and Roku device are on the same network, and select your device in the tester app. (Source: https://paramount.atlassian.net/wiki/spaces/PLQA/pages/333743507)
*   **Video Capture:** This requires components like an HDMI splitter, video capture card, and specific connection procedures. (Source: https://paramount.atlassian.net/wiki/spaces/PLQA/pages/47714761)
2025-08-21 11:17:54,803 - __main__ - DEBUG - [main.py:416] - Formatted DM response: *Your Query:* How to connect roku device?

*Answer:*
To connect your Roku device, follow these general steps:

1.  *Factory Reset (if needed):* If you are setting up a new or used device, you may want to factory reset it first. Navigate to `Settings` > `System` > `Advanced System Settings` on your Roku device and select `Factory Reset`. You will need to enter a code displayed on the screen. (Source: https://paramount.atlassian.net/wiki/spaces/PLQA/pages/47710384)
2.  *Roku Device Restart:* The device will restart after a factory reset. (Source: https://paramount.atlassian.net/wiki/spaces/PLQA/pages/47710384)
3.  *Pair Remote & Select Language:* Pair your remote control and choose your preferred language. (Source: https://paramount.atlassian.net/wiki/spaces/PLQA/pages/47710384)
4.  *Connect to Network:* Select a Wi-Fi network and enter the password to connect your Roku device to the internet. (Source: https://paramount.atlassian.net/wiki/spaces/PLQA/pages/47710384)
5.  *Select Display:* Choose your display settings. (Source: https://paramount.atlassian.net/wiki/spaces/PLQA/pages/47710384)
6.  *Enter Email for Activation:* On the Roku device, select "Enter your email address" and input your email. (Source: https://paramount.atlassian.net/wiki/spaces/PLQA/pages/47710384)
7.  *Activate Device:* Go to your email inbox and look for an email from Roku titled "Roku | Activate your device". Follow the instructions in the email to activate your device. This usually involves visiting a link on the Roku website and logging in or creating an account. (Source: https://paramount.atlassian.net/wiki/spaces/PLQA/pages/47710384, https://paramount.atlassian.net/wiki/spaces/PLQA/pages/47712699)

Once activated, the Roku device will begin updating and you can start adding channels.

If you are looking to connect your Roku device for specific purposes like deep link testing or video capture, the process involves additional steps and equipment:

*   *Deep Link Testing:* Download the deep link test tool from Roku's developer website, ensure your computer and Roku device are on the same network, and select your device in the tester app. (Source: https://paramount.atlassian.net/wiki/spaces/PLQA/pages/333743507)
*   *Video Capture:* This requires components like an HDMI splitter, video capture card, and specific connection procedures. (Source: https://paramount.atlassian.net/wiki/spaces/PLQA/pages/47714761)
2025-08-21 11:17:54,803 - slack_sdk.web.base_client - DEBUG - [base_client.py:255] - Sending a request - url: https://slack.com/api/reactions.remove, query_params: {}, body_params: {'name': 'thinking_face', 'channel': 'D09A0LFHK8R', 'timestamp': '1755800265.419169', 'team_id': 'T010QS7UQNA'}, files: {}, json_body: None, headers: {'Content-Type': 'application/x-www-form-urlencoded', 'Authorization': '(redacted)', 'User-Agent': 'Python/3.12.0 slackclient/3.34.0 Darwin/23.4.0'}
2025-08-21 11:17:55,168 - slack_sdk.web.base_client - DEBUG - [base_client.py:546] - Received the following response - status: 200, headers: {'date': 'Thu, 21 Aug 2025 18:17:55 GMT', 'server': 'Apache', 'vary': 'Accept-Encoding', 'x-slack-req-id': '55951f52ea38a971b991fc95f8bb4c8b', 'x-content-type-options': 'nosniff', 'x-xss-protection': '0', 'pragma': 'no-cache', 'cache-control': 'private, no-cache, no-store, must-revalidate', 'expires': 'Sat, 26 Jul 1997 05:00:00 GMT', 'content-type': 'application/json; charset=utf-8', 'x-accepted-oauth-scopes': 'reactions:write', 'x-oauth-scopes': 'app_mentions:read,channels:history,chat:write,im:history,im:read,im:write,users:read,reactions:write', 'access-control-expose-headers': 'x-slack-req-id, retry-after', 'access-control-allow-headers': 'slack-route, x-slack-version-ts, x-b3-traceid, x-b3-spanid, x-b3-parentspanid, x-b3-sampled, x-b3-flags', 'strict-transport-security': 'max-age=31536000; includeSubDomains; preload', 'referrer-policy': 'no-referrer', 'x-slack-unique-id': 'aKdi00vG0S_6PDLFf-NQHgAAAAQ', 'x-slack-backend': 'r', 'access-control-allow-origin': '*', 'content-length': '11', 'via': '1.1 slack-prod.tinyspeck.com, envoy-www-iad-yipinesk,envoy-edge-pdx-oclfhgmn', 'x-envoy-attempt-count': '1', 'x-envoy-upstream-service-time': '151', 'x-backend': 'main_normal main_canary_with_overflow main_control_with_overflow', 'x-server': 'slack-www-hhvm-main-iad-zwys', 'x-slack-shared-secret-outcome': 'no-match', 'x-edge-backend': 'envoy-www', 'timing-allow-origin': '*', 'x-slack-edge-shared-secret-outcome': 'no-match', 'connection': 'close'}, body: {"ok":true}
2025-08-21 11:17:55,170 - slack_sdk.web.base_client - DEBUG - [base_client.py:255] - Sending a request - url: https://slack.com/api/chat.postMessage, query_params: {}, body_params: {}, files: {}, json_body: {'channel': 'D09A0LFHK8R', 'text': '*Your Query:* How to connect roku device?\n\n*Answer:*\nTo connect your Roku device, follow these general steps:\n\n1.  *Factory Reset (if needed):* If you are setting up a new or used device, you may want to factory reset it first. Navigate to `Settings` > `System` > `Advanced System Settings` on your Roku device and select `Factory Reset`. You will need to enter a code displayed on the screen. (Source: https://paramount.atlassian.net/wiki/spaces/PLQA/pages/47710384)\n2.  *Roku Device Restart:* The device will restart after a factory reset. (Source: https://paramount.atlassian.net/wiki/spaces/PLQA/pages/47710384)\n3.  *Pair Remote & Select Language:* Pair your remote control and choose your preferred language. (Source: https://paramount.atlassian.net/wiki/spaces/PLQA/pages/47710384)\n4.  *Connect to Network:* Select a Wi-Fi network and enter the password to connect your Roku device to the internet. (Source: https://paramount.atlassian.net/wiki/spaces/PLQA/pages/47710384)\n5.  *Select Display:* Choose your display settings. (Source: https://paramount.atlassian.net/wiki/spaces/PLQA/pages/47710384)\n6.  *Enter Email for Activation:* On the Roku device, select "Enter your email address" and input your email. (Source: https://paramount.atlassian.net/wiki/spaces/PLQA/pages/47710384)\n7.  *Activate Device:* Go to your email inbox and look for an email from Roku titled "Roku | Activate your device". Follow the instructions in the email to activate your device. This usually involves visiting a link on the Roku website and logging in or creating an account. (Source: https://paramount.atlassian.net/wiki/spaces/PLQA/pages/47710384, https://paramount.atlassian.net/wiki/spaces/PLQA/pages/47712699)\n\nOnce activated, the Roku device will begin updating and you can start adding channels.\n\nIf you are looking to connect your Roku device for specific purposes like deep link testing or video capture, the process involves additional steps and equipment:\n\n*   *Deep Link Testing:* Download the deep link test tool from Roku\'s developer website, ensure your computer and Roku device are on the same network, and select your device in the tester app. (Source: https://paramount.atlassian.net/wiki/spaces/PLQA/pages/333743507)\n*   *Video Capture:* This requires components like an HDMI splitter, video capture card, and specific connection procedures. (Source: https://paramount.atlassian.net/wiki/spaces/PLQA/pages/47714761)', 'thread_ts': '1755800265.419169', 'team_id': 'T010QS7UQNA'}, headers: {'Content-Type': 'application/json;charset=utf-8', 'Authorization': '(redacted)', 'User-Agent': 'Python/3.12.0 slackclient/3.34.0 Darwin/23.4.0'}
2025-08-21 11:17:55,592 - slack_sdk.web.base_client - DEBUG - [base_client.py:546] - Received the following response - status: 200, headers: {'date': 'Thu, 21 Aug 2025 18:17:55 GMT', 'server': 'Apache', 'vary': 'Accept-Encoding', 'x-slack-req-id': '6e79c9997d5a08ad05313ef341685801', 'x-content-type-options': 'nosniff', 'x-xss-protection': '0', 'pragma': 'no-cache', 'cache-control': 'private, no-cache, no-store, must-revalidate', 'expires': 'Sat, 26 Jul 1997 05:00:00 GMT', 'content-type': 'application/json; charset=utf-8', 'x-accepted-oauth-scopes': 'chat:write', 'x-oauth-scopes': 'app_mentions:read,channels:history,chat:write,im:history,im:read,im:write,users:read,reactions:write', 'access-control-expose-headers': 'x-slack-req-id, retry-after', 'access-control-allow-headers': 'slack-route, x-slack-version-ts, x-b3-traceid, x-b3-spanid, x-b3-parentspanid, x-b3-sampled, x-b3-flags', 'strict-transport-security': 'max-age=31536000; includeSubDomains; preload', 'referrer-policy': 'no-referrer', 'x-slack-unique-id': 'aKdi0yI6OwGgtInARPS58wAAADA', 'x-slack-backend': 'r', 'access-control-allow-origin': '*', 'content-length': '7274', 'via': '1.1 slack-prod.tinyspeck.com, envoy-www-iad-hcoocezb,envoy-edge-pdx-sbbpyqog', 'x-envoy-attempt-count': '1', 'x-envoy-upstream-service-time': '187', 'x-backend': 'main_normal main_canary_with_overflow main_control_with_overflow', 'x-server': 'slack-www-hhvm-main-iad-ivja', 'x-slack-shared-secret-outcome': 'no-match', 'x-edge-backend': 'envoy-www', 'timing-allow-origin': '*', 'x-slack-edge-shared-secret-outcome': 'no-match', 'connection': 'close'}, body: {"ok":true,"channel":"D09A0LFHK8R","ts":"1755800275.547619","message":{"user":"U099R6WTZ9S","type":"message","ts":"1755800275.547619","bot_id":"B099R6WTRU4","app_id":"A099LACAB2R","text":"*Your Query:* How to connect roku device?\n\n*Answer:*\nTo connect your Roku device, follow these general steps:\n\n1.  *Factory Reset (if needed):* If you are setting up a new or used device, you may want to factory reset it first. Navigate to `Settings` &gt; `System` &gt; `Advanced System Settings` on your Roku device and select `Factory Reset`. You will need to enter a code displayed on the screen. (Source: <https://paramount.atlassian.net/wiki/spaces/PLQA/pages/47710384>)\n2.  *Roku Device Restart:* The device will restart after a factory reset. (Source: <https://paramount.atlassian.net/wiki/spaces/PLQA/pages/47710384>)\n3.  *Pair Remote &amp; Select Language:* Pair your remote control and choose your preferred language. (Source: <https://paramount.atlassian.net/wiki/spaces/PLQA/pages/47710384>)\n4.  *Connect to Network:* Select a Wi-Fi network and enter the password to connect your Roku device to the internet. (Source: <https://paramount.atlassian.net/wiki/spaces/PLQA/pages/47710384>)\n5.  *Select Display:* Choose your display settings. (Source: <https://paramount.atlassian.net/wiki/spaces/PLQA/pages/47710384>)\n6.  *Enter Email for Activation:* On the Roku device, select \"Enter your email address\" and input your email. (Source: <https://paramount.atlassian.net/wiki/spaces/PLQA/pages/47710384>)\n7.  *Activate Device:* Go to your email inbox and look for an email from Roku titled \"Roku | Activate your device\". Follow the instructions in the email to activate your device. This usually involves visiting a link on the Roku website and logging in or creating an account. (Source: <https://paramount.atlassian.net/wiki/spaces/PLQA/pages/47710384>, <https://paramount.atlassian.net/wiki/spaces/PLQA/pages/47712699>)\n\nOnce activated, the Roku device will begin updating and you can start adding channels.\n\nIf you are looking to connect your Roku device for specific purposes like deep link testing or video capture, the process involves additional steps and equipment:\n\n*   *Deep Link Testing:* Download the deep link test tool from Roku's developer website, ensure your computer and Roku device are on the same network, and select your device in the tester app. (Source: <https://paramount.atlassian.net/wiki/spaces/PLQA/pages/333743507>)\n*   *Video Capture:* This requires components like an HDMI splitter, video capture card, and specific connection procedures. (Source: <https://paramount.atlassian.net/wiki/spaces/PLQA/pages/47714761>)","team":"T010QS7UQNA","bot_profile":{"id":"B099R6WTRU4","app_id":"A099LACAB2R","user_id":"U099R6WTZ9S","name":"AutoBot","icons":{"image_36":"https://a.slack-edge.com/80588/img/plugins/app/bot_36.png","image_48":"https://a.slack-edge.com/80588/img/plugins/app/bot_48.png","image_72":"https://a.slack-edge.com/80588/img/plugins/app/service_72.png"},"deleted":false,"updated":1754677948,"team_id":"T010QS7UQNA"},"thread_ts":"1755800265.419169","parent_user_id":"U01RMTFMALF","blocks":[{"type":"rich_text","block_id":"zGe","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Your Query:","style":{"bold":true}},{"type":"text","text":" How to connect roku device?\n\n"},{"type":"text","text":"Answer:","style":{"bold":true}},{"type":"text","text":"\nTo connect your Roku device, follow these general steps:\n\n1.  "},{"type":"text","text":"Factory Reset (if needed):","style":{"bold":true}},{"type":"text","text":" If you are setting up a new or used device, you may want to factory reset it first. Navigate to "},{"type":"text","text":"Settings","style":{"code":true}},{"type":"text","text":" > "},{"type":"text","text":"System","style":{"code":true}},{"type":"text","text":" > "},{"type":"text","text":"Advanced System Settings","style":{"code":true}},{"type":"text","text":" on your Roku device and select "},{"type":"text","text":"Factory Reset","style":{"code":true}},{"type":"text","text":". You will need to enter a code displayed on the screen. (Source: "},{"type":"link","url":"https://paramount.atlassian.net/wiki/spaces/PLQA/pages/47710384"},{"type":"text","text":")\n2.  "},{"type":"text","text":"Roku Device Restart:","style":{"bold":true}},{"type":"text","text":" The device will restart after a factory reset. (Source: "},{"type":"link","url":"https://paramount.atlassian.net/wiki/spaces/PLQA/pages/47710384"},{"type":"text","text":")\n3.  "},{"type":"text","text":"Pair Remote & Select Language:","style":{"bold":true}},{"type":"text","text":" Pair your remote control and choose your preferred language. (Source: "},{"type":"link","url":"https://paramount.atlassian.net/wiki/spaces/PLQA/pages/47710384"},{"type":"text","text":")\n4.  "},{"type":"text","text":"Connect to Network:","style":{"bold":true}},{"type":"text","text":" Select a Wi-Fi network and enter the password to connect your Roku device to the internet. (Source: "},{"type":"link","url":"https://paramount.atlassian.net/wiki/spaces/PLQA/pages/47710384"},{"type":"text","text":")\n5.  "},{"type":"text","text":"Select Display:","style":{"bold":true}},{"type":"text","text":" Choose your display settings. (Source: "},{"type":"link","url":"https://paramount.atlassian.net/wiki/spaces/PLQA/pages/47710384"},{"type":"text","text":")\n6.  "},{"type":"text","text":"Enter Email for Activation:","style":{"bold":true}},{"type":"text","text":" On the Roku device, select \"Enter your email address\" and input your email. (Source: "},{"type":"link","url":"https://paramount.atlassian.net/wiki/spaces/PLQA/pages/47710384"},{"type":"text","text":")\n7.  "},{"type":"text","text":"Activate Device:","style":{"bold":true}},{"type":"text","text":" Go to your email inbox and look for an email from Roku titled \"Roku | Activate your device\". Follow the instructions in the email to activate your device. This usually involves visiting a link on the Roku website and logging in or creating an account. (Source: "},{"type":"link","url":"https://paramount.atlassian.net/wiki/spaces/PLQA/pages/47710384"},{"type":"text","text":", "},{"type":"link","url":"https://paramount.atlassian.net/wiki/spaces/PLQA/pages/47712699"},{"type":"text","text":")\n\nOnce activated, the Roku device will begin updating and you can start adding channels.\n\nIf you are looking to connect your Roku device for specific purposes like deep link testing or video capture, the process involves additional steps and equipment:\n\n*   "},{"type":"text","text":"Deep Link Testing:","style":{"bold":true}},{"type":"text","text":" Download the deep link test tool from Roku's developer website, ensure your computer and Roku device are on the same network, and select your device in the tester app. (Source: "},{"type":"link","url":"https://paramount.atlassian.net/wiki/spaces/PLQA/pages/333743507"},{"type":"text","text":")\n*   "},{"type":"text","text":"Video Capture:","style":{"bold":true}},{"type":"text","text":" This requires components like an HDMI splitter, video capture card, and specific connection procedures. (Source: "},{"type":"link","url":"https://paramount.atlassian.net/wiki/spaces/PLQA/pages/47714761"},{"type":"text","text":")"}]}]}]}}
2025-08-21 11:17:55,593 - __main__ - DEBUG - [main.py:441] - Cleaning up DM thread tracking...
2025-08-21 11:17:55,593 - utils - DEBUG - [utils.py:67] - Managing thread: D09A0LFHK8R:1755800265.419169, action: remove, user: U01RMTFMALF
2025-08-21 11:17:55,593 - utils - INFO - [utils.py:100] - Removed thread D09A0LFHK8R:1755800265.419169 from active tracking (remaining: 0)
2025-08-21 11:17:56,410 - slack_bolt.App - DEBUG - [client.py:235] - on_message invoked: (message: {"envelope_id":"33e00456-38a4-4a19-b89b-41918a6157bc","payload":{"token":"yq71khZBCyJF1Ri2hG5aNqr5","team_id":"T010QS7UQNA","enterprise_id":"ERV4P7NAD","context_team_id":null,"context_enterprise_id":"ERV4P7NAD","api_app_id":"A099LACAB2R","event":{"user":"U099R6WTZ9S","type":"message","ts":"1755800275.547619","bot_id":"B099R6WTRU4","app_id":"A099LACAB2R","text":"*Your Query:* How to connect roku device?\n\n*Answer:*\nTo connect your Roku device, follow these general steps:\n\n1.  *Factory Reset (if needed):* If you are setting up a new or used device, you may want to factory reset it first. Navigate to `Settings` &gt; `System` &gt; `Advanced System Settings` on your Roku device and select `Factory Reset`. You will need to enter a code displayed on the screen. (Source: <https:\/\/paramount.atlassian.net\/wiki\/spaces\/PLQA\/pages\/47710384>)\n2.  *Roku Device Restart:* The device will restart after a factory reset. (Source: <https:\/\/paramount.atlassian.net\/wiki\/spaces\/PLQA\/pages\/47710384>)\n3.  *Pair Remote &amp; Select Language:* Pair your remote control and choose your preferred language. (Source: <https:\/\/paramount.atlassian.net\/wiki\/spaces\/PLQA\/pages\/47710384>)\n4.  *Connect to Network:* Select a Wi-Fi network and enter the password to connect your Roku device to the internet. (Source: <https:\/\/paramount.atlassian.net\/wiki\/spaces\/PLQA\/pages\/47710384>)\n5.  *Select Display:* Choose your display settings. (Source: <https:\/\/paramount.atlassian.net\/wiki\/spaces\/PLQA\/pages\/47710384>)\n6.  *Enter Email for Activation:* On the Roku device, select \"Enter your email address\" and input your email. (Source: <https:\/\/paramount.atlassian.net\/wiki\/spaces\/PLQA\/pages\/47710384>)\n7.  *Activate Device:* Go to your email inbox and look for an email from Roku titled \"Roku | Activate your device\". Follow the instructions in the email to activate your device. This usually involves visiting a link on the Roku website and logging in or creating an account. (Source: <https:\/\/paramount.atlassian.net\/wiki\/spaces\/PLQA\/pages\/47710384>, <https:\/\/paramount.atlassian.net\/wiki\/spaces\/PLQA\/pages\/47712699>)\n\nOnce activated, the Roku device will begin updating and you can start adding channels.\n\nIf you are looking to connect your Roku device for specific purposes like deep link testing or video capture, the process involves additional steps and equipment:\n\n*   *Deep Link Testing:* Download the deep link test tool from Roku's developer website, ensure your computer and Roku device are on the same network, and select your device in the tester app. (Source: <https:\/\/paramount.atlassian.net\/wiki\/spaces\/PLQA\/pages\/333743507>)\n*   *Video Capture:* This requires components like an HDMI splitter, video capture card, and specific connection procedures. (Source: <https:\/\/paramount.atlassian.net\/wiki\/spaces\/PLQA\/pages\/47714761>)","team":"T010QS7UQNA","bot_profile":{"id":"B099R6WTRU4","deleted":false,"name":"AutoBot","updated":1754677948,"app_id":"A099LACAB2R","user_id":"U099R6WTZ9S","icons":{"image_36":"https:\/\/a.slack-edge.com\/80588\/img\/plugins\/app\/bot_36.png","image_48":"https:\/\/a.slack-edge.com\/80588\/img\/plugins\/app\/bot_48.png","image_72":"https:\/\/a.slack-edge.com\/80588\/img\/plugins\/app\/service_72.png"},"team_id":"T010QS7UQNA"},"thread_ts":"1755800265.419169","parent_user_id":"U01RMTFMALF","blocks":[{"type":"rich_text","block_id":"UIh8","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Your Query:","style":{"bold":true}},{"type":"text","text":" How to connect roku device?\n\n"},{"type":"text","text":"Answer:","style":{"bold":true}},{"type":"text","text":"\nTo connect your Roku device, follow these general steps:\n\n1.  "},{"type":"text","text":"Factory Reset (if needed):","style":{"bold":true}},{"type":"text","text":" If you are setting up a new or used device, you may want to factory reset it first. Navigate to "},{"type":"text","text":"Settings","style":{"code":true}},{"type":"text","text":" > "},{"type":"text","text":"System","style":{"code":true}},{"type":"text","text":" > "},{"type":"text","text":"Advanced System Settings","style":{"code":true}},{"type":"text","text":" on your Roku device and select "},{"type":"text","text":"Factory Reset","style":{"code":true}},{"type":"text","text":". You will need to enter a code displayed on the screen. (Source: "},{"type":"link","url":"https:\/\/paramount.atlassian.net\/wiki\/spaces\/PLQA\/pages\/47710384"},{"type":"text","text":")\n2.  "},{"type":"text","text":"Roku Device Restart:","style":{"bold":true}},{"type":"text","text":" The device will restart after a factory reset. (Source: "},{"type":"link","url":"https:\/\/paramount.atlassian.net\/wiki\/spaces\/PLQA\/pages\/47710384"},{"type":"text","text":")\n3.  "},{"type":"text","text":"Pair Remote & Select Language:","style":{"bold":true}},{"type":"text","text":" Pair your remote control and choose your preferred language. (Source: "},{"type":"link","url":"https:\/\/paramount.atlassian.net\/wiki\/spaces\/PLQA\/pages\/47710384"},{"type":"text","text":")\n4.  "},{"type":"text","text":"Connect to Network:","style":{"bold":true}},{"type":"text","text":" Select a Wi-Fi network and enter the password to connect your Roku device to the internet. (Source: "},{"type":"link","url":"https:\/\/paramount.atlassian.net\/wiki\/spaces\/PLQA\/pages\/47710384"},{"type":"text","text":")\n5.  "},{"type":"text","text":"Select Display:","style":{"bold":true}},{"type":"text","text":" Choose your display settings. (Source: "},{"type":"link","url":"https:\/\/paramount.atlassian.net\/wiki\/spaces\/PLQA\/pages\/47710384"},{"type":"text","text":")\n6.  "},{"type":"text","text":"Enter Email for Activation:","style":{"bold":true}},{"type":"text","text":" On the Roku device, select \"Enter your email address\" and input your email. (Source: "},{"type":"link","url":"https:\/\/paramount.atlassian.net\/wiki\/spaces\/PLQA\/pages\/47710384"},{"type":"text","text":")\n7.  "},{"type":"text","text":"Activate Device:","style":{"bold":true}},{"type":"text","text":" Go to your email inbox and look for an email from Roku titled \"Roku | Activate your device\". Follow the instructions in the email to activate your device. This usually involves visiting a link on the Roku website and logging in or creating an account. (Source: "},{"type":"link","url":"https:\/\/paramount.atlassian.net\/wiki\/spaces\/PLQA\/pages\/47710384"},{"type":"text","text":", "},{"type":"link","url":"https:\/\/paramount.atlassian.net\/wiki\/spaces\/PLQA\/pages\/47712699"},{"type":"text","text":")\n\nOnce activated, the Roku device will begin updating and you can start adding channels.\n\nIf you are looking to connect your Roku device for specific purposes like deep link testing or video capture, the process involves additional steps and equipment:\n\n*   "},{"type":"text","text":"Deep Link Testing:","style":{"bold":true}},{"type":"text","text":" Download the deep link test tool from Roku's developer website, ensure your computer and Roku device are on the same network, and select your device in the tester app. (Source: "},{"type":"link","url":"https:\/\/paramount.atlassian.net\/wiki\/spaces\/PLQA\/pages\/333743507"},{"type":"text","text":")\n*   "},{"type":"text","text":"Video Capture:","style":{"bold":true}},{"type":"text","text":" This requires components like an HDMI splitter, video capture card, and specific connection procedures. (Source: "},{"type":"link","url":"https:\/\/paramount.atlassian.net\/wiki\/spaces\/PLQA\/pages\/47714761"},{"type":"text","text":")"}]}]}],"channel":"D09A0LFHK8R","event_ts":"1755800275.547619","channel_type":"im"},"type":"event_callback","event_id":"Ev09B3KNPPTR","event_time":1755800275,"authorizations":[{"enterprise_id":"ERV4P7NAD","team_id":"T010QS7UQNA","user_id":"U099R6WTZ9S","is_bot":true,"is_enterprise_install":false}],"is_ext_shared_channel":false,"event_context":"4-eyJldCI6Im1lc3NhZ2UiLCJ0aWQiOiJUMDEwUVM3VVFOQSIsImFpZCI6IkEwOTlMQUNBQjJSIiwiY2lkIjoiRDA5QTBMRkhLOFIifQ"},"type":"events_api","accepts_response_payload":false,"retry_attempt":0,"retry_reason":""})
2025-08-21 11:17:56,411 - slack_bolt.App - DEBUG - [client.py:99] - A new message enqueued (current queue size: 1)
2025-08-21 11:17:56,411 - slack_bolt.App - DEBUG - [client.py:105] - A message dequeued (current queue size: 0)
2025-08-21 11:17:56,412 - slack_bolt.App - DEBUG - [client.py:125] - Message processing started (type: events_api, envelope_id: 33e00456-38a4-4a19-b89b-41918a6157bc)
2025-08-21 11:17:56,412 - slack_bolt.App - DEBUG - [app.py:476] - Applying slack_bolt.middleware.ssl_check.ssl_check.SslCheck
2025-08-21 11:17:56,412 - slack_bolt.App - DEBUG - [app.py:476] - Applying slack_bolt.middleware.request_verification.request_verification.RequestVerification
2025-08-21 11:17:56,412 - slack_bolt.App - DEBUG - [app.py:476] - Applying slack_bolt.middleware.authorization.single_team_authorization.SingleTeamAuthorization
2025-08-21 11:17:56,413 - slack_bolt.App - DEBUG - [app.py:476] - Applying slack_bolt.middleware.ignoring_self_events.ignoring_self_events.IgnoringSelfEvents
2025-08-21 11:17:56,413 - slack_bolt.IgnoringSelfEvents - DEBUG - [ignoring_self_events.py:60] - Skipped self event: {'user': 'U099R6WTZ9S', 'type': 'message', 'ts': '1755800275.547619', 'bot_id': 'B099R6WTRU4', 'app_id': 'A099LACAB2R', 'text': '*Your Query:* How to connect roku device?\n\n*Answer:*\nTo connect your Roku device, follow these general steps:\n\n1.  *Factory Reset (if needed):* If you are setting up a new or used device, you may want to factory reset it first. Navigate to `Settings` &gt; `System` &gt; `Advanced System Settings` on your Roku device and select `Factory Reset`. You will need to enter a code displayed on the screen. (Source: <https://paramount.atlassian.net/wiki/spaces/PLQA/pages/47710384>)\n2.  *Roku Device Restart:* The device will restart after a factory reset. (Source: <https://paramount.atlassian.net/wiki/spaces/PLQA/pages/47710384>)\n3.  *Pair Remote &amp; Select Language:* Pair your remote control and choose your preferred language. (Source: <https://paramount.atlassian.net/wiki/spaces/PLQA/pages/47710384>)\n4.  *Connect to Network:* Select a Wi-Fi network and enter the password to connect your Roku device to the internet. (Source: <https://paramount.atlassian.net/wiki/spaces/PLQA/pages/47710384>)\n5.  *Select Display:* Choose your display settings. (Source: <https://paramount.atlassian.net/wiki/spaces/PLQA/pages/47710384>)\n6.  *Enter Email for Activation:* On the Roku device, select "Enter your email address" and input your email. (Source: <https://paramount.atlassian.net/wiki/spaces/PLQA/pages/47710384>)\n7.  *Activate Device:* Go to your email inbox and look for an email from Roku titled "Roku | Activate your device". Follow the instructions in the email to activate your device. This usually involves visiting a link on the Roku website and logging in or creating an account. (Source: <https://paramount.atlassian.net/wiki/spaces/PLQA/pages/47710384>, <https://paramount.atlassian.net/wiki/spaces/PLQA/pages/47712699>)\n\nOnce activated, the Roku device will begin updating and you can start adding channels.\n\nIf you are looking to connect your Roku device for specific purposes like deep link testing or video capture, the process involves additional steps and equipment:\n\n*   *Deep Link Testing:* Download the deep link test tool from Roku\'s developer website, ensure your computer and Roku device are on the same network, and select your device in the tester app. (Source: <https://paramount.atlassian.net/wiki/spaces/PLQA/pages/333743507>)\n*   *Video Capture:* This requires components like an HDMI splitter, video capture card, and specific connection procedures. (Source: <https://paramount.atlassian.net/wiki/spaces/PLQA/pages/47714761>)', 'team': 'T010QS7UQNA', 'bot_profile': {'id': 'B099R6WTRU4', 'deleted': False, 'name': 'AutoBot', 'updated': 1754677948, 'app_id': 'A099LACAB2R', 'user_id': 'U099R6WTZ9S', 'icons': {'image_36': 'https://a.slack-edge.com/80588/img/plugins/app/bot_36.png', 'image_48': 'https://a.slack-edge.com/80588/img/plugins/app/bot_48.png', 'image_72': 'https://a.slack-edge.com/80588/img/plugins/app/service_72.png'}, 'team_id': 'T010QS7UQNA'}, 'thread_ts': '1755800265.419169', 'parent_user_id': 'U01RMTFMALF', 'blocks': [{'type': 'rich_text', 'block_id': 'UIh8', 'elements': [{'type': 'rich_text_section', 'elements': [{'type': 'text', 'text': 'Your Query:', 'style': {'bold': True}}, {'type': 'text', 'text': ' How to connect roku device?\n\n'}, {'type': 'text', 'text': 'Answer:', 'style': {'bold': True}}, {'type': 'text', 'text': '\nTo connect your Roku device, follow these general steps:\n\n1.  '}, {'type': 'text', 'text': 'Factory Reset (if needed):', 'style': {'bold': True}}, {'type': 'text', 'text': ' If you are setting up a new or used device, you may want to factory reset it first. Navigate to '}, {'type': 'text', 'text': 'Settings', 'style': {'code': True}}, {'type': 'text', 'text': ' > '}, {'type': 'text', 'text': 'System', 'style': {'code': True}}, {'type': 'text', 'text': ' > '}, {'type': 'text', 'text': 'Advanced System Settings', 'style': {'code': True}}, {'type': 'text', 'text': ' on your Roku device and select '}, {'type': 'text', 'text': 'Factory Reset', 'style': {'code': True}}, {'type': 'text', 'text': '. You will need to enter a code displayed on the screen. (Source: '}, {'type': 'link', 'url': 'https://paramount.atlassian.net/wiki/spaces/PLQA/pages/47710384'}, {'type': 'text', 'text': ')\n2.  '}, {'type': 'text', 'text': 'Roku Device Restart:', 'style': {'bold': True}}, {'type': 'text', 'text': ' The device will restart after a factory reset. (Source: '}, {'type': 'link', 'url': 'https://paramount.atlassian.net/wiki/spaces/PLQA/pages/47710384'}, {'type': 'text', 'text': ')\n3.  '}, {'type': 'text', 'text': 'Pair Remote & Select Language:', 'style': {'bold': True}}, {'type': 'text', 'text': ' Pair your remote control and choose your preferred language. (Source: '}, {'type': 'link', 'url': 'https://paramount.atlassian.net/wiki/spaces/PLQA/pages/47710384'}, {'type': 'text', 'text': ')\n4.  '}, {'type': 'text', 'text': 'Connect to Network:', 'style': {'bold': True}}, {'type': 'text', 'text': ' Select a Wi-Fi network and enter the password to connect your Roku device to the internet. (Source: '}, {'type': 'link', 'url': 'https://paramount.atlassian.net/wiki/spaces/PLQA/pages/47710384'}, {'type': 'text', 'text': ')\n5.  '}, {'type': 'text', 'text': 'Select Display:', 'style': {'bold': True}}, {'type': 'text', 'text': ' Choose your display settings. (Source: '}, {'type': 'link', 'url': 'https://paramount.atlassian.net/wiki/spaces/PLQA/pages/47710384'}, {'type': 'text', 'text': ')\n6.  '}, {'type': 'text', 'text': 'Enter Email for Activation:', 'style': {'bold': True}}, {'type': 'text', 'text': ' On the Roku device, select "Enter your email address" and input your email. (Source: '}, {'type': 'link', 'url': 'https://paramount.atlassian.net/wiki/spaces/PLQA/pages/47710384'}, {'type': 'text', 'text': ')\n7.  '}, {'type': 'text', 'text': 'Activate Device:', 'style': {'bold': True}}, {'type': 'text', 'text': ' Go to your email inbox and look for an email from Roku titled "Roku | Activate your device". Follow the instructions in the email to activate your device. This usually involves visiting a link on the Roku website and logging in or creating an account. (Source: '}, {'type': 'link', 'url': 'https://paramount.atlassian.net/wiki/spaces/PLQA/pages/47710384'}, {'type': 'text', 'text': ', '}, {'type': 'link', 'url': 'https://paramount.atlassian.net/wiki/spaces/PLQA/pages/47712699'}, {'type': 'text', 'text': ')\n\nOnce activated, the Roku device will begin updating and you can start adding channels.\n\nIf you are looking to connect your Roku device for specific purposes like deep link testing or video capture, the process involves additional steps and equipment:\n\n*   '}, {'type': 'text', 'text': 'Deep Link Testing:', 'style': {'bold': True}}, {'type': 'text', 'text': " Download the deep link test tool from Roku's developer website, ensure your computer and Roku device are on the same network, and select your device in the tester app. (Source: "}, {'type': 'link', 'url': 'https://paramount.atlassian.net/wiki/spaces/PLQA/pages/333743507'}, {'type': 'text', 'text': ')\n*   '}, {'type': 'text', 'text': 'Video Capture:', 'style': {'bold': True}}, {'type': 'text', 'text': ' This requires components like an HDMI splitter, video capture card, and specific connection procedures. (Source: '}, {'type': 'link', 'url': 'https://paramount.atlassian.net/wiki/spaces/PLQA/pages/47714761'}, {'type': 'text', 'text': ')'}]}]}], 'channel': 'D09A0LFHK8R', 'event_ts': '1755800275.547619', 'channel_type': 'im'}
2025-08-21 11:17:56,414 - slack_bolt.App - DEBUG - [client.py:200] - Sending a message (session id: 8838bdd0-d25d-415c-b01c-dbad6d17fc30, message: {"envelope_id": "33e00456-38a4-4a19-b89b-41918a6157bc"})
2025-08-21 11:17:56,414 - slack_bolt.App - DEBUG - [internals.py:41] - Response time: 2 milliseconds
2025-08-21 11:17:56,414 - slack_bolt.App - DEBUG - [client.py:150] - Message processing completed (type: events_api, envelope_id: 33e00456-38a4-4a19-b89b-41918a6157bc)
2025-08-21 11:24:38,496 - __main__ - INFO - [main.py:43] - Loading application configuration...
2025-08-21 11:24:38,496 - __main__ - INFO - [main.py:45] - Configuration loaded successfully
2025-08-21 11:24:38,496 - __main__ - INFO - [main.py:48] - Initializing security components...
2025-08-21 11:24:38,496 - __main__ - DEBUG - [main.py:50] - Slack validator initialized
2025-08-21 11:24:38,496 - security.content_filter - INFO - [content_filter.py:39] - Content filter initialized with 11 patterns
2025-08-21 11:24:38,496 - __main__ - DEBUG - [main.py:53] - Content filter initialized
2025-08-21 11:24:38,496 - auth.admin_manager - INFO - [admin_manager.py:27] - Admin manager initialized with 2 admin users
2025-08-21 11:24:38,496 - __main__ - DEBUG - [main.py:56] - Admin manager initialized
2025-08-21 11:24:38,496 - auth.email_whitelist - INFO - [email_whitelist.py:28] - Email whitelist initialized with 1 whitelisted emails
2025-08-21 11:24:38,496 - auth.email_whitelist - INFO - [email_whitelist.py:37] - Whitelisted domains: paramount.com
2025-08-21 11:24:38,496 - __main__ - DEBUG - [main.py:59] - Email whitelist initialized with 1 emails
2025-08-21 11:24:38,496 - auth.slack_user_info - DEBUG - [slack_user_info.py:25] - Slack user info manager initialized
2025-08-21 11:24:38,496 - __main__ - DEBUG - [main.py:62] - Slack user info manager initialized
2025-08-21 11:24:38,496 - __main__ - INFO - [main.py:63] - Security components initialized successfully
2025-08-21 11:24:38,496 - __main__ - INFO - [main.py:66] - Initializing Slack app...
2025-08-21 11:24:38,535 - slack_bolt.App - DEBUG - [base_client.py:255] - Sending a request - url: https://slack.com/api/auth.test, query_params: {}, body_params: {}, files: {}, json_body: None, headers: {'Content-Type': 'application/x-www-form-urlencoded', 'Authorization': '(redacted)', 'User-Agent': 'Bolt/1.16.0 Python/3.12.0 slackclient/3.34.0 Darwin/23.4.0'}
2025-08-21 11:24:41,168 - slack_bolt.App - DEBUG - [base_client.py:546] - Received the following response - status: 200, headers: {'date': 'Thu, 21 Aug 2025 18:24:41 GMT', 'server': 'Apache', 'vary': 'Accept-Encoding', 'x-slack-req-id': '52edabb43ed8a438b8dfc536ba2dbc0b', 'x-content-type-options': 'nosniff', 'x-xss-protection': '0', 'pragma': 'no-cache', 'cache-control': 'private, no-cache, no-store, must-revalidate', 'expires': 'Sat, 26 Jul 1997 05:00:00 GMT', 'content-type': 'application/json; charset=utf-8', 'x-oauth-scopes': 'app_mentions:read,channels:history,chat:write,im:history,im:read,im:write,users:read,reactions:write', 'access-control-expose-headers': 'x-slack-req-id, retry-after', 'access-control-allow-headers': 'slack-route, x-slack-version-ts, x-b3-traceid, x-b3-spanid, x-b3-parentspanid, x-b3-sampled, x-b3-flags', 'strict-transport-security': 'max-age=31536000; includeSubDomains; preload', 'referrer-policy': 'no-referrer', 'x-slack-unique-id': 'aKdkaTZ9cS2P2MgaNNJedQAAADc', 'x-slack-backend': 'r', 'access-control-allow-origin': '*', 'content-length': '228', 'via': '1.1 slack-prod.tinyspeck.com, envoy-www-iad-hummjwfm,envoy-edge-pdx-sfrnqvlf', 'x-envoy-attempt-count': '1', 'x-envoy-upstream-service-time': '101', 'x-backend': 'main_normal main_canary_with_overflow main_control_with_overflow', 'x-server': 'slack-www-hhvm-main-iad-vjli', 'x-slack-shared-secret-outcome': 'no-match', 'x-edge-backend': 'envoy-www', 'timing-allow-origin': '*', 'x-slack-edge-shared-secret-outcome': 'no-match', 'connection': 'close'}, body: {"ok":true,"url":"https://viacomcbs-grid-test.slack.com/","team":"Test Workspace","user":"autobot","team_id":"T010QS7UQNA","user_id":"U099R6WTZ9S","bot_id":"B099R6WTRU4","enterprise_id":"ERV4P7NAD","is_enterprise_install":false}
2025-08-21 11:24:41,169 - __main__ - INFO - [main.py:68] - Slack app initialized successfully
2025-08-21 11:24:41,169 - __main__ - DEBUG - [main.py:72] - Message deduplication cache initialized
2025-08-21 11:24:41,169 - __main__ - DEBUG - [main.py:77] - Thread tracking initialized
2025-08-21 11:24:41,169 - __main__ - INFO - [main.py:80] - Initializing DIG AI integration...
2025-08-21 11:24:41,170 - __main__ - INFO - [main.py:83] - DIG AI is enabled, setting up connector...
2025-08-21 11:24:41,170 - dig_connector - INFO - [dig_connector.py:287] - Initializing DIG AI with model ID: 42
2025-08-21 11:24:41,170 - dig_connector - INFO - [dig_connector.py:49] - Starting DIG chat session initialization...
2025-08-21 11:24:41,170 - dig_connector - DEBUG - [dig_connector.py:52] - Creating chat with name: Slack Bot Session 2025-08-21T18:24:41.170690+00:00
2025-08-21 11:24:41,170 - dig_connector - DEBUG - [dig_connector.py:63] - Creating chat - URL: https://ai.digdev.cbsicloud.com/fastapi/chats, Payload: {'chat_nm': 'Slack Bot Session 2025-08-21T18:24:41.170690+00:00', 'model_id': 42}
2025-08-21 11:24:41,175 - urllib3.connectionpool - DEBUG - [connectionpool.py:1055] - Starting new HTTPS connection (1): ai.digdev.cbsicloud.com:443
2025-08-21 11:24:43,145 - urllib3.connectionpool - DEBUG - [connectionpool.py:549] - https://ai.digdev.cbsicloud.com:443 "POST /fastapi/chats HTTP/1.1" 200 217
2025-08-21 11:24:43,146 - dig_connector - DEBUG - [dig_connector.py:66] - Create chat response: status=200
2025-08-21 11:24:43,147 - dig_connector - INFO - [dig_connector.py:54] - Successfully initialized DIG chat session with ID: 854
2025-08-21 11:24:43,147 - __main__ - INFO - [main.py:86] - DIG AI integration successfully initialized
2025-08-21 11:24:43,147 - __main__ - INFO - [main.py:92] - Setting up event handlers...
2025-08-21 11:24:43,148 - __main__ - INFO - [main.py:598] - Starting AI Assistant Bot...
2025-08-21 11:24:43,148 - __main__ - INFO - [main.py:599] - Registering event handlers...
2025-08-21 11:24:43,148 - __main__ - DEBUG - [main.py:600] - Event handlers registered: app_mention, message, app_home_opened
2025-08-21 11:24:43,149 - __main__ - INFO - [main.py:603] - Connecting to Slack via Socket Mode...
2025-08-21 11:24:43,149 - __main__ - INFO - [main.py:607] - Socket Mode handler created successfully
2025-08-21 11:24:43,149 - __main__ - INFO - [main.py:609] - ✅ Bot is now running and listening for events!
2025-08-21 11:24:43,150 - slack_bolt.App - DEBUG - [base_client.py:255] - Sending a request - url: https://slack.com/api/apps.connections.open, query_params: {}, body_params: {}, files: {}, json_body: None, headers: {'Content-Type': 'application/x-www-form-urlencoded', 'Authorization': '(redacted)', 'User-Agent': 'Bolt/1.16.0 Python/3.12.0 slackclient/3.34.0 Darwin/23.4.0'}
2025-08-21 11:24:44,645 - slack_bolt.App - DEBUG - [base_client.py:546] - Received the following response - status: 200, headers: {'date': 'Thu, 21 Aug 2025 18:24:44 GMT', 'server': 'Apache', 'vary': 'Accept-Encoding', 'x-slack-req-id': '0b3806f2760f121aea3afeb426595c2c', 'x-content-type-options': 'nosniff', 'x-xss-protection': '0', 'x-robots-tag': 'noindex,nofollow', 'pragma': 'no-cache', 'cache-control': 'private, no-cache, no-store, must-revalidate', 'expires': 'Sat, 26 Jul 1997 05:00:00 GMT', 'content-type': 'application/json; charset=utf-8', 'x-accepted-oauth-scopes': 'connections:write', 'x-oauth-scopes': 'connections:write', 'access-control-expose-headers': 'x-slack-req-id, retry-after', 'access-control-allow-headers': 'slack-route, x-slack-version-ts, x-b3-traceid, x-b3-spanid, x-b3-parentspanid, x-b3-sampled, x-b3-flags', 'strict-transport-security': 'max-age=31536000; includeSubDomains; preload', 'referrer-policy': 'no-referrer', 'x-slack-unique-id': 'aKdkbMDJdntu0qAoBqDZcwAAAAU', 'x-slack-backend': 'r', 'access-control-allow-origin': '*', 'content-length': '173', 'via': '1.1 slack-prod.tinyspeck.com, envoy-www-iad-uogvyqjh,envoy-edge-pdx-zkkfzfsl', 'x-envoy-attempt-count': '1', 'x-envoy-upstream-service-time': '83', 'x-backend': 'main_normal main_canary_with_overflow main_control_with_overflow', 'x-server': 'slack-www-hhvm-main-iad-qvlz', 'x-slack-shared-secret-outcome': 'no-match', 'x-edge-backend': 'envoy-www', 'timing-allow-origin': '*', 'x-slack-edge-shared-secret-outcome': 'no-match', 'connection': 'close'}, body: {"ok":true,"url":"wss:\/\/wss-primary.slack.com\/link\/?ticket=4d3497f6-60bc-4b59-89a9-73b2e2918801&app_id=a6c8d361ee1c6f398c5b4afec831555b78d7affa753b16bcc0fc64d7c13f3766"}
2025-08-21 11:24:47,085 - slack_bolt.App - INFO - [client.py:192] - A new session has been established (session id: 772a1c1c-a3e8-40b5-9f1e-64753c8eebca)
2025-08-21 11:24:47,085 - slack_bolt.App - INFO - [base_handler.py:50] - ⚡️ Bolt app is running!
2025-08-21 11:24:47,091 - slack_bolt.App - INFO - [client.py:265] - Starting to receive messages from a new connection (session id: 772a1c1c-a3e8-40b5-9f1e-64753c8eebca)
2025-08-21 11:24:47,093 - slack_bolt.App - DEBUG - [client.py:235] - on_message invoked: (message: {"type":"hello","num_connections":1,"debug_info":{"host":"applink-11","build_number":0,"approximate_connection_time":18060},"connection_info":{"app_id":"A099LACAB2R"}})
2025-08-21 11:24:47,093 - slack_bolt.App - DEBUG - [client.py:99] - A new message enqueued (current queue size: 1)
2025-08-21 11:24:47,093 - slack_bolt.App - DEBUG - [client.py:105] - A message dequeued (current queue size: 0)
2025-08-21 11:24:47,094 - slack_bolt.App - DEBUG - [client.py:125] - Message processing started (type: hello, envelope_id: None)
2025-08-21 11:24:47,094 - slack_bolt.App - DEBUG - [client.py:150] - Message processing completed (type: hello, envelope_id: None)
2025-08-21 11:25:04,911 - slack_bolt.App - DEBUG - [client.py:235] - on_message invoked: (message: {"envelope_id":"222c78d5-25f4-42a4-af76-484aa7d8df85","payload":{"token":"yq71khZBCyJF1Ri2hG5aNqr5","team_id":"T010QS7UQNA","enterprise_id":"ERV4P7NAD","context_team_id":null,"context_enterprise_id":"ERV4P7NAD","api_app_id":"A099LACAB2R","event":{"user":"U01RMTFMALF","type":"message","ts":"1755800703.640569","client_msg_id":"bca08df7-8711-48a2-a28c-825ead44befa","text":"How to connect an iOS device?","blocks":[{"type":"rich_text","block_id":"rRS58","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"How to connect an iOS device?"}]}]}],"channel":"D09A0LFHK8R","event_ts":"1755800703.640569","channel_type":"im"},"type":"event_callback","event_id":"Ev09BVFYKU9F","event_time":1755800703,"authorizations":[{"enterprise_id":"ERV4P7NAD","team_id":"T010QS7UQNA","user_id":"U099R6WTZ9S","is_bot":true,"is_enterprise_install":false}],"is_ext_shared_channel":false,"event_context":"4-eyJldCI6Im1lc3NhZ2UiLCJ0aWQiOiJUMDEwUVM3VVFOQSIsImFpZCI6IkEwOTlMQUNBQjJSIiwiY2lkIjoiRDA5QTBMRkhLOFIifQ"},"type":"events_api","accepts_response_payload":false,"retry_attempt":0,"retry_reason":""})
2025-08-21 11:25:04,912 - slack_bolt.App - DEBUG - [client.py:99] - A new message enqueued (current queue size: 1)
2025-08-21 11:25:04,912 - slack_bolt.App - DEBUG - [client.py:105] - A message dequeued (current queue size: 0)
2025-08-21 11:25:04,913 - slack_bolt.App - DEBUG - [client.py:125] - Message processing started (type: events_api, envelope_id: 222c78d5-25f4-42a4-af76-484aa7d8df85)
2025-08-21 11:25:04,914 - slack_bolt.App - DEBUG - [app.py:476] - Applying slack_bolt.middleware.ssl_check.ssl_check.SslCheck
2025-08-21 11:25:04,914 - slack_bolt.App - DEBUG - [app.py:476] - Applying slack_bolt.middleware.request_verification.request_verification.RequestVerification
2025-08-21 11:25:04,915 - slack_bolt.App - DEBUG - [app.py:476] - Applying slack_bolt.middleware.authorization.single_team_authorization.SingleTeamAuthorization
2025-08-21 11:25:04,915 - slack_bolt.App - DEBUG - [app.py:476] - Applying slack_bolt.middleware.ignoring_self_events.ignoring_self_events.IgnoringSelfEvents
2025-08-21 11:25:04,915 - slack_bolt.App - DEBUG - [app.py:476] - Applying slack_bolt.middleware.url_verification.url_verification.UrlVerification
2025-08-21 11:25:04,915 - slack_bolt.App - DEBUG - [app.py:500] - Checking listener: handle_app_mentions ...
2025-08-21 11:25:04,915 - slack_bolt.App - DEBUG - [app.py:500] - Checking listener: help_message ...
2025-08-21 11:25:04,915 - slack_bolt.App - DEBUG - [app.py:500] - Checking listener: handle_dm_messages ...
2025-08-21 11:25:04,915 - slack_bolt.App - DEBUG - [app.py:522] - Running listener: handle_dm_messages ...
2025-08-21 11:25:04,916 - __main__ - INFO - [main.py:354] - === DM MESSAGE EVENT RECEIVED ===
2025-08-21 11:25:04,916 - slack_bolt.App - DEBUG - [thread_runner.py:198] - Responding with status: 200 body: "" (0 millis)
2025-08-21 11:25:04,916 - __main__ - DEBUG - [main.py:355] - Full event body: {'token': 'yq71khZBCyJF1Ri2hG5aNqr5', 'team_id': 'T010QS7UQNA', 'enterprise_id': 'ERV4P7NAD', 'context_team_id': None, 'context_enterprise_id': 'ERV4P7NAD', 'api_app_id': 'A099LACAB2R', 'event': {'user': 'U01RMTFMALF', 'type': 'message', 'ts': '1755800703.640569', 'client_msg_id': 'bca08df7-8711-48a2-a28c-825ead44befa', 'text': 'How to connect an iOS device?', 'blocks': [{'type': 'rich_text', 'block_id': 'rRS58', 'elements': [{'type': 'rich_text_section', 'elements': [{'type': 'text', 'text': 'How to connect an iOS device?'}]}]}], 'channel': 'D09A0LFHK8R', 'event_ts': '1755800703.640569', 'channel_type': 'im'}, 'type': 'event_callback', 'event_id': 'Ev09BVFYKU9F', 'event_time': 1755800703, 'authorizations': [{'enterprise_id': 'ERV4P7NAD', 'team_id': 'T010QS7UQNA', 'user_id': 'U099R6WTZ9S', 'is_bot': True, 'is_enterprise_install': False}], 'is_ext_shared_channel': False, 'event_context': '4-eyJldCI6Im1lc3NhZ2UiLCJ0aWQiOiJUMDEwUVM3VVFOQSIsImFpZCI6IkEwOTlMQUNBQjJSIiwiY2lkIjoiRDA5QTBMRkhLOFIifQ'}
2025-08-21 11:25:04,916 - slack_bolt.App - DEBUG - [client.py:200] - Sending a message (session id: 772a1c1c-a3e8-40b5-9f1e-64753c8eebca, message: {"envelope_id": "222c78d5-25f4-42a4-af76-484aa7d8df85"})
2025-08-21 11:25:04,916 - __main__ - INFO - [main.py:364] - DM Event details: channel=D09A0LFHK8R, user=U01RMTFMALF, ts=1755800703.640569
2025-08-21 11:25:04,917 - __main__ - DEBUG - [main.py:365] - DM Event text: How to connect an iOS device?
2025-08-21 11:25:04,917 - utils - DEBUG - [utils.py:27] - Checking message processing: channel=D09A0LFHK8R, ts=1755800703.640569, text='How to connect an iOS device?...'
2025-08-21 11:25:04,917 - slack_bolt.App - DEBUG - [internals.py:41] - Response time: 3 milliseconds
2025-08-21 11:25:04,917 - utils - DEBUG - [utils.py:31] - Message hash: f0e7ba75ffe756cc469259b099157bfc
2025-08-21 11:25:04,917 - slack_bolt.App - DEBUG - [client.py:150] - Message processing completed (type: events_api, envelope_id: 222c78d5-25f4-42a4-af76-484aa7d8df85)
2025-08-21 11:25:04,917 - utils - DEBUG - [utils.py:53] - Added message to processing cache (total entries: 1)
2025-08-21 11:25:04,917 - __main__ - DEBUG - [main.py:378] - Bot check: bot_id=None, user_id=U01RMTFMALF
2025-08-21 11:25:04,917 - __main__ - DEBUG - [main.py:383] - Question received: 'How to connect an iOS device?'
2025-08-21 11:25:04,918 - __main__ - DEBUG - [main.py:389] - Checking user access for DM...
2025-08-21 11:25:04,918 - auth.slack_user_info - DEBUG - [slack_user_info.py:48] - Fetching user info for user_id: U01RMTFMALF
2025-08-21 11:25:04,918 - slack_sdk.web.base_client - DEBUG - [base_client.py:255] - Sending a request - url: https://slack.com/api/users.info, query_params: {}, body_params: {'user': 'U01RMTFMALF', 'team_id': 'T010QS7UQNA'}, files: {}, json_body: None, headers: {'Content-Type': 'application/x-www-form-urlencoded', 'Authorization': '(redacted)', 'User-Agent': 'Python/3.12.0 slackclient/3.34.0 Darwin/23.4.0'}
2025-08-21 11:25:06,780 - slack_sdk.web.base_client - DEBUG - [base_client.py:546] - Received the following response - status: 200, headers: {'date': 'Thu, 21 Aug 2025 18:25:06 GMT', 'server': 'Apache', 'vary': 'Accept-Encoding', 'x-slack-req-id': 'e2a8c797eb1184b06794ca547c9ff39b', 'x-content-type-options': 'nosniff', 'x-xss-protection': '0', 'pragma': 'no-cache', 'cache-control': 'private, no-cache, no-store, must-revalidate', 'expires': 'Sat, 26 Jul 1997 05:00:00 GMT', 'content-type': 'application/json; charset=utf-8', 'x-accepted-oauth-scopes': 'users:read', 'x-oauth-scopes': 'app_mentions:read,channels:history,chat:write,im:history,im:read,im:write,users:read,reactions:write', 'access-control-expose-headers': 'x-slack-req-id, retry-after', 'access-control-allow-headers': 'slack-route, x-slack-version-ts, x-b3-traceid, x-b3-spanid, x-b3-parentspanid, x-b3-sampled, x-b3-flags', 'strict-transport-security': 'max-age=31536000; includeSubDomains; preload', 'referrer-policy': 'no-referrer', 'x-slack-unique-id': 'aKdkgr2Qz-GxTNarrK0O2QAAEAY', 'x-slack-backend': 'r', 'access-control-allow-origin': '*', 'content-length': '2018', 'via': '1.1 slack-prod.tinyspeck.com, envoy-www-iad-qnbgkgqj,envoy-edge-pdx-seohxqpq', 'x-envoy-attempt-count': '1', 'x-envoy-upstream-service-time': '92', 'x-backend': 'main_normal main_canary_with_overflow main_control_with_overflow', 'x-server': 'slack-www-hhvm-main-iad-euit', 'x-slack-shared-secret-outcome': 'no-match', 'x-edge-backend': 'envoy-www', 'timing-allow-origin': '*', 'x-slack-edge-shared-secret-outcome': 'no-match', 'connection': 'close'}, body: {"ok":true,"user":{"id":"U01RMTFMALF","name":"popov8533","is_bot":false,"updated":1755719704,"is_app_user":false,"team_id":"T010QS7UQNA","deleted":false,"color":"4bbe2e","is_email_confirmed":true,"real_name":"Alexandr Popov","tz":"America\/Los_Angeles","tz_label":"Pacific Daylight Time","tz_offset":-25200,"is_admin":false,"is_owner":false,"is_primary_owner":false,"is_restricted":false,"is_ultra_restricted":false,"enterprise_user":{"id":"U01RMTFMALF","enterprise_id":"ERV4P7NAD","enterprise_name":"Paramount Global","is_admin":false,"is_owner":false,"is_primary_owner":false,"teams":["T010QS7UQNA","T02H1PQMF"]},"who_can_share_contact_card":"EVERYONE","profile":{"real_name":"Alexandr Popov","display_name":"Alex Popov","avatar_hash":"a64f82312a14","real_name_normalized":"Alexandr Popov","display_name_normalized":"Alex Popov","image_24":"https:\/\/avatars.slack-edge.com\/2023-03-29\/5033076824964_a64f82312a141123fbbf_24.png","image_32":"https:\/\/avatars.slack-edge.com\/2023-03-29\/5033076824964_a64f82312a141123fbbf_32.png","image_48":"https:\/\/avatars.slack-edge.com\/2023-03-29\/5033076824964_a64f82312a141123fbbf_48.png","image_72":"https:\/\/avatars.slack-edge.com\/2023-03-29\/5033076824964_a64f82312a141123fbbf_72.png","image_192":"https:\/\/avatars.slack-edge.com\/2023-03-29\/5033076824964_a64f82312a141123fbbf_192.png","image_512":"https:\/\/avatars.slack-edge.com\/2023-03-29\/5033076824964_a64f82312a141123fbbf_512.png","image_1024":"https:\/\/avatars.slack-edge.com\/2023-03-29\/5033076824964_a64f82312a141123fbbf_1024.png","image_original":"https:\/\/avatars.slack-edge.com\/2023-03-29\/5033076824964_a64f82312a141123fbbf_original.png","is_custom_image":true,"first_name":"Alexandr","last_name":"Popov","team":"T010QS7UQNA","title":"Senior Software Quality Assurance Engineer","phone":"","skype":"","status_text":"","status_text_canonical":"","status_emoji":"","status_emoji_display_info":[],"status_expiration":0,"huddle_state":"default_unset","huddle_state_expiration_ts":0,"ooo_message":""}}}
2025-08-21 11:25:06,781 - auth.slack_user_info - DEBUG - [slack_user_info.py:63] - Retrieved email for user U01RMTFMALF: None
2025-08-21 11:25:06,782 - __main__ - WARNING - [main.py:114] - Could not retrieve email for user U01RMTFMALF
2025-08-21 11:25:06,782 - __main__ - WARNING - [main.py:392] - Access denied for user U01RMTFMALF in DM
2025-08-21 11:25:06,782 - slack_sdk.web.base_client - DEBUG - [base_client.py:255] - Sending a request - url: https://slack.com/api/chat.postMessage, query_params: {}, body_params: {}, files: {}, json_body: {'channel': 'D09A0LFHK8R', 'text': "I'm sorry, but I couldn't verify your access permissions. Please ensure your email is set in your Slack profile and try again.", 'team_id': 'T010QS7UQNA'}, headers: {'Content-Type': 'application/json;charset=utf-8', 'Authorization': '(redacted)', 'User-Agent': 'Python/3.12.0 slackclient/3.34.0 Darwin/23.4.0'}
2025-08-21 11:25:09,171 - slack_sdk.web.base_client - DEBUG - [base_client.py:546] - Received the following response - status: 200, headers: {'date': 'Thu, 21 Aug 2025 18:25:09 GMT', 'server': 'Apache', 'vary': 'Accept-Encoding', 'x-slack-req-id': '997fe62ec02b32e8323b6cf525140156', 'x-content-type-options': 'nosniff', 'x-xss-protection': '0', 'pragma': 'no-cache', 'cache-control': 'private, no-cache, no-store, must-revalidate', 'expires': 'Sat, 26 Jul 1997 05:00:00 GMT', 'content-type': 'application/json; charset=utf-8', 'x-accepted-oauth-scopes': 'chat:write', 'x-oauth-scopes': 'app_mentions:read,channels:history,chat:write,im:history,im:read,im:write,users:read,reactions:write', 'access-control-expose-headers': 'x-slack-req-id, retry-after', 'access-control-allow-headers': 'slack-route, x-slack-version-ts, x-b3-traceid, x-b3-spanid, x-b3-parentspanid, x-b3-sampled, x-b3-flags', 'strict-transport-security': 'max-age=31536000; includeSubDomains; preload', 'referrer-policy': 'no-referrer', 'x-slack-unique-id': 'aKdkhb55SnXH24neTuRWGwAAABM', 'x-slack-backend': 'r', 'access-control-allow-origin': '*', 'content-length': '983', 'via': '1.1 slack-prod.tinyspeck.com, envoy-www-iad-oknyxaay,envoy-edge-pdx-swqafgim', 'x-envoy-attempt-count': '1', 'x-envoy-upstream-service-time': '142', 'x-backend': 'main_normal main_canary_with_overflow main_control_with_overflow', 'x-server': 'slack-www-hhvm-main-iad-jiqo', 'x-slack-shared-secret-outcome': 'no-match', 'x-edge-backend': 'envoy-www', 'timing-allow-origin': '*', 'x-slack-edge-shared-secret-outcome': 'no-match', 'connection': 'close'}, body: {"ok":true,"channel":"D09A0LFHK8R","ts":"1755800709.128499","message":{"user":"U099R6WTZ9S","type":"message","ts":"1755800709.128499","bot_id":"B099R6WTRU4","app_id":"A099LACAB2R","text":"I'm sorry, but I couldn't verify your access permissions. Please ensure your email is set in your Slack profile and try again.","team":"T010QS7UQNA","bot_profile":{"id":"B099R6WTRU4","app_id":"A099LACAB2R","user_id":"U099R6WTZ9S","name":"AutoBot","icons":{"image_36":"https://a.slack-edge.com/80588/img/plugins/app/bot_36.png","image_48":"https://a.slack-edge.com/80588/img/plugins/app/bot_48.png","image_72":"https://a.slack-edge.com/80588/img/plugins/app/service_72.png"},"deleted":false,"updated":1754677948,"team_id":"T010QS7UQNA"},"blocks":[{"type":"rich_text","block_id":"H400a","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"I'm sorry, but I couldn't verify your access permissions. Please ensure your email is set in your Slack profile and try again."}]}]}]}}
2025-08-21 11:25:09,888 - slack_bolt.App - DEBUG - [client.py:235] - on_message invoked: (message: {"envelope_id":"3ad0cded-0e8f-4643-bb59-19432702bd6c","payload":{"token":"yq71khZBCyJF1Ri2hG5aNqr5","team_id":"T010QS7UQNA","enterprise_id":"ERV4P7NAD","context_team_id":null,"context_enterprise_id":"ERV4P7NAD","api_app_id":"A099LACAB2R","event":{"user":"U099R6WTZ9S","type":"message","ts":"1755800709.128499","bot_id":"B099R6WTRU4","app_id":"A099LACAB2R","text":"I'm sorry, but I couldn't verify your access permissions. Please ensure your email is set in your Slack profile and try again.","team":"T010QS7UQNA","bot_profile":{"id":"B099R6WTRU4","deleted":false,"name":"AutoBot","updated":1754677948,"app_id":"A099LACAB2R","user_id":"U099R6WTZ9S","icons":{"image_36":"https:\/\/a.slack-edge.com\/80588\/img\/plugins\/app\/bot_36.png","image_48":"https:\/\/a.slack-edge.com\/80588\/img\/plugins\/app\/bot_48.png","image_72":"https:\/\/a.slack-edge.com\/80588\/img\/plugins\/app\/service_72.png"},"team_id":"T010QS7UQNA"},"blocks":[{"type":"rich_text","block_id":"oGZVR","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"I'm sorry, but I couldn't verify your access permissions. Please ensure your email is set in your Slack profile and try again."}]}]}],"channel":"D09A0LFHK8R","event_ts":"1755800709.128499","channel_type":"im"},"type":"event_callback","event_id":"Ev09BG2S3GMQ","event_time":1755800709,"authorizations":[{"enterprise_id":"ERV4P7NAD","team_id":"T010QS7UQNA","user_id":"U099R6WTZ9S","is_bot":true,"is_enterprise_install":false}],"is_ext_shared_channel":false,"event_context":"4-eyJldCI6Im1lc3NhZ2UiLCJ0aWQiOiJUMDEwUVM3VVFOQSIsImFpZCI6IkEwOTlMQUNBQjJSIiwiY2lkIjoiRDA5QTBMRkhLOFIifQ"},"type":"events_api","accepts_response_payload":false,"retry_attempt":0,"retry_reason":""})
2025-08-21 11:25:09,889 - slack_bolt.App - DEBUG - [client.py:99] - A new message enqueued (current queue size: 1)
2025-08-21 11:25:09,890 - slack_bolt.App - DEBUG - [client.py:105] - A message dequeued (current queue size: 0)
2025-08-21 11:25:09,890 - slack_bolt.App - DEBUG - [client.py:125] - Message processing started (type: events_api, envelope_id: 3ad0cded-0e8f-4643-bb59-19432702bd6c)
2025-08-21 11:25:09,891 - slack_bolt.App - DEBUG - [app.py:476] - Applying slack_bolt.middleware.ssl_check.ssl_check.SslCheck
2025-08-21 11:25:09,891 - slack_bolt.App - DEBUG - [app.py:476] - Applying slack_bolt.middleware.request_verification.request_verification.RequestVerification
2025-08-21 11:25:09,891 - slack_bolt.App - DEBUG - [app.py:476] - Applying slack_bolt.middleware.authorization.single_team_authorization.SingleTeamAuthorization
2025-08-21 11:25:09,891 - slack_bolt.App - DEBUG - [app.py:476] - Applying slack_bolt.middleware.ignoring_self_events.ignoring_self_events.IgnoringSelfEvents
2025-08-21 11:25:09,891 - slack_bolt.IgnoringSelfEvents - DEBUG - [ignoring_self_events.py:60] - Skipped self event: {'user': 'U099R6WTZ9S', 'type': 'message', 'ts': '1755800709.128499', 'bot_id': 'B099R6WTRU4', 'app_id': 'A099LACAB2R', 'text': "I'm sorry, but I couldn't verify your access permissions. Please ensure your email is set in your Slack profile and try again.", 'team': 'T010QS7UQNA', 'bot_profile': {'id': 'B099R6WTRU4', 'deleted': False, 'name': 'AutoBot', 'updated': 1754677948, 'app_id': 'A099LACAB2R', 'user_id': 'U099R6WTZ9S', 'icons': {'image_36': 'https://a.slack-edge.com/80588/img/plugins/app/bot_36.png', 'image_48': 'https://a.slack-edge.com/80588/img/plugins/app/bot_48.png', 'image_72': 'https://a.slack-edge.com/80588/img/plugins/app/service_72.png'}, 'team_id': 'T010QS7UQNA'}, 'blocks': [{'type': 'rich_text', 'block_id': 'oGZVR', 'elements': [{'type': 'rich_text_section', 'elements': [{'type': 'text', 'text': "I'm sorry, but I couldn't verify your access permissions. Please ensure your email is set in your Slack profile and try again."}]}]}], 'channel': 'D09A0LFHK8R', 'event_ts': '1755800709.128499', 'channel_type': 'im'}
2025-08-21 11:25:09,891 - slack_bolt.App - DEBUG - [client.py:200] - Sending a message (session id: 772a1c1c-a3e8-40b5-9f1e-64753c8eebca, message: {"envelope_id": "3ad0cded-0e8f-4643-bb59-19432702bd6c"})
2025-08-21 11:25:09,892 - slack_bolt.App - DEBUG - [internals.py:41] - Response time: 1 milliseconds
2025-08-21 11:25:09,892 - slack_bolt.App - DEBUG - [client.py:150] - Message processing completed (type: events_api, envelope_id: 3ad0cded-0e8f-4643-bb59-19432702bd6c)
2025-08-21 11:32:42,102 - __main__ - INFO - [main.py:43] - Loading application configuration...
2025-08-21 11:32:42,102 - __main__ - INFO - [main.py:45] - Configuration loaded successfully
2025-08-21 11:32:42,102 - __main__ - INFO - [main.py:48] - Initializing security components...
2025-08-21 11:32:42,102 - __main__ - DEBUG - [main.py:50] - Slack validator initialized
2025-08-21 11:32:42,102 - security.content_filter - INFO - [content_filter.py:39] - Content filter initialized with 11 patterns
2025-08-21 11:32:42,102 - __main__ - DEBUG - [main.py:53] - Content filter initialized
2025-08-21 11:32:42,102 - auth.admin_manager - INFO - [admin_manager.py:27] - Admin manager initialized with 2 admin users
2025-08-21 11:32:42,102 - __main__ - DEBUG - [main.py:56] - Admin manager initialized
2025-08-21 11:32:42,102 - auth.email_whitelist - INFO - [email_whitelist.py:28] - Email whitelist initialized with 1 whitelisted emails
2025-08-21 11:32:42,102 - auth.email_whitelist - INFO - [email_whitelist.py:37] - Whitelisted domains: paramount.com
2025-08-21 11:32:42,102 - __main__ - DEBUG - [main.py:59] - Email whitelist initialized with 1 emails
2025-08-21 11:32:42,102 - auth.slack_user_info - DEBUG - [slack_user_info.py:25] - Slack user info manager initialized
2025-08-21 11:32:42,102 - __main__ - DEBUG - [main.py:62] - Slack user info manager initialized
2025-08-21 11:32:42,102 - __main__ - INFO - [main.py:63] - Security components initialized successfully
2025-08-21 11:32:42,102 - __main__ - INFO - [main.py:66] - Initializing Slack app...
2025-08-21 11:32:42,139 - slack_bolt.App - DEBUG - [base_client.py:255] - Sending a request - url: https://slack.com/api/auth.test, query_params: {}, body_params: {}, files: {}, json_body: None, headers: {'Content-Type': 'application/x-www-form-urlencoded', 'Authorization': '(redacted)', 'User-Agent': 'Bolt/1.16.0 Python/3.12.0 slackclient/3.34.0 Darwin/23.4.0'}
2025-08-21 11:32:42,511 - slack_bolt.App - DEBUG - [base_client.py:546] - Received the following response - status: 200, headers: {'date': 'Thu, 21 Aug 2025 18:32:42 GMT', 'server': 'Apache', 'vary': 'Accept-Encoding', 'x-slack-req-id': '240f0c3eab46bc2efe0b3ab92b58f87f', 'x-content-type-options': 'nosniff', 'x-xss-protection': '0', 'pragma': 'no-cache', 'cache-control': 'private, no-cache, no-store, must-revalidate', 'expires': 'Sat, 26 Jul 1997 05:00:00 GMT', 'content-type': 'application/json; charset=utf-8', 'x-oauth-scopes': 'app_mentions:read,channels:history,chat:write,im:history,im:read,im:write,users:read,reactions:write,users:read.email', 'access-control-expose-headers': 'x-slack-req-id, retry-after', 'access-control-allow-headers': 'slack-route, x-slack-version-ts, x-b3-traceid, x-b3-spanid, x-b3-parentspanid, x-b3-sampled, x-b3-flags', 'strict-transport-security': 'max-age=31536000; includeSubDomains; preload', 'referrer-policy': 'no-referrer', 'x-slack-unique-id': 'aKdmSo3sNhKXwNLc2qZZqAAAEA0', 'x-slack-backend': 'r', 'access-control-allow-origin': '*', 'content-length': '228', 'via': '1.1 slack-prod.tinyspeck.com, envoy-www-iad-htbvpyit,envoy-edge-pdx-jonkbufg', 'x-envoy-attempt-count': '1', 'x-envoy-upstream-service-time': '87', 'x-backend': 'main_normal main_canary_with_overflow main_control_with_overflow', 'x-server': 'slack-www-hhvm-main-iad-hrfb', 'x-slack-shared-secret-outcome': 'no-match', 'x-edge-backend': 'envoy-www', 'timing-allow-origin': '*', 'x-slack-edge-shared-secret-outcome': 'no-match', 'connection': 'close'}, body: {"ok":true,"url":"https://viacomcbs-grid-test.slack.com/","team":"Test Workspace","user":"autobot","team_id":"T010QS7UQNA","user_id":"U099R6WTZ9S","bot_id":"B099R6WTRU4","enterprise_id":"ERV4P7NAD","is_enterprise_install":false}
2025-08-21 11:32:42,511 - __main__ - INFO - [main.py:68] - Slack app initialized successfully
2025-08-21 11:32:42,511 - __main__ - DEBUG - [main.py:72] - Message deduplication cache initialized
2025-08-21 11:32:42,512 - __main__ - DEBUG - [main.py:77] - Thread tracking initialized
2025-08-21 11:32:42,512 - __main__ - INFO - [main.py:80] - Initializing DIG AI integration...
2025-08-21 11:32:42,512 - __main__ - INFO - [main.py:83] - DIG AI is enabled, setting up connector...
2025-08-21 11:32:42,512 - dig_connector - INFO - [dig_connector.py:287] - Initializing DIG AI with model ID: 42
2025-08-21 11:32:42,512 - dig_connector - INFO - [dig_connector.py:49] - Starting DIG chat session initialization...
2025-08-21 11:32:42,512 - dig_connector - DEBUG - [dig_connector.py:52] - Creating chat with name: Slack Bot Session 2025-08-21T18:32:42.512467+00:00
2025-08-21 11:32:42,512 - dig_connector - DEBUG - [dig_connector.py:63] - Creating chat - URL: https://ai.digdev.cbsicloud.com/fastapi/chats, Payload: {'chat_nm': 'Slack Bot Session 2025-08-21T18:32:42.512467+00:00', 'model_id': 42}
2025-08-21 11:32:42,515 - urllib3.connectionpool - DEBUG - [connectionpool.py:1055] - Starting new HTTPS connection (1): ai.digdev.cbsicloud.com:443
2025-08-21 11:32:42,945 - urllib3.connectionpool - DEBUG - [connectionpool.py:549] - https://ai.digdev.cbsicloud.com:443 "POST /fastapi/chats HTTP/1.1" 200 217
2025-08-21 11:32:42,946 - dig_connector - DEBUG - [dig_connector.py:66] - Create chat response: status=200
2025-08-21 11:32:42,946 - dig_connector - INFO - [dig_connector.py:54] - Successfully initialized DIG chat session with ID: 856
2025-08-21 11:32:42,946 - __main__ - INFO - [main.py:86] - DIG AI integration successfully initialized
2025-08-21 11:32:42,947 - __main__ - INFO - [main.py:92] - Setting up event handlers...
2025-08-21 11:32:42,948 - __main__ - INFO - [main.py:610] - Starting AI Assistant Bot...
2025-08-21 11:32:42,948 - __main__ - INFO - [main.py:611] - Registering event handlers...
2025-08-21 11:32:42,948 - __main__ - DEBUG - [main.py:612] - Event handlers registered: app_mention, message, app_home_opened
2025-08-21 11:32:42,948 - __main__ - INFO - [main.py:615] - Connecting to Slack via Socket Mode...
2025-08-21 11:32:42,949 - __main__ - INFO - [main.py:619] - Socket Mode handler created successfully
2025-08-21 11:32:42,949 - __main__ - INFO - [main.py:621] - ✅ Bot is now running and listening for events!
2025-08-21 11:32:42,949 - slack_bolt.App - DEBUG - [base_client.py:255] - Sending a request - url: https://slack.com/api/apps.connections.open, query_params: {}, body_params: {}, files: {}, json_body: None, headers: {'Content-Type': 'application/x-www-form-urlencoded', 'Authorization': '(redacted)', 'User-Agent': 'Bolt/1.16.0 Python/3.12.0 slackclient/3.34.0 Darwin/23.4.0'}
2025-08-21 11:32:43,280 - slack_bolt.App - DEBUG - [base_client.py:546] - Received the following response - status: 200, headers: {'date': 'Thu, 21 Aug 2025 18:32:43 GMT', 'server': 'Apache', 'vary': 'Accept-Encoding', 'x-slack-req-id': '682b43aeeb2b2777a23ac1b7c25d69a6', 'x-content-type-options': 'nosniff', 'x-xss-protection': '0', 'x-robots-tag': 'noindex,nofollow', 'pragma': 'no-cache', 'cache-control': 'private, no-cache, no-store, must-revalidate', 'expires': 'Sat, 26 Jul 1997 05:00:00 GMT', 'content-type': 'application/json; charset=utf-8', 'x-accepted-oauth-scopes': 'connections:write', 'x-oauth-scopes': 'connections:write', 'access-control-expose-headers': 'x-slack-req-id, retry-after', 'access-control-allow-headers': 'slack-route, x-slack-version-ts, x-b3-traceid, x-b3-spanid, x-b3-parentspanid, x-b3-sampled, x-b3-flags', 'strict-transport-security': 'max-age=31536000; includeSubDomains; preload', 'referrer-policy': 'no-referrer', 'x-slack-unique-id': 'aKdmS1V34vs03hMyWNYMxwAAED4', 'x-slack-backend': 'r', 'access-control-allow-origin': '*', 'content-length': '173', 'via': '1.1 slack-prod.tinyspeck.com, envoy-www-iad-zwmyaurg,envoy-edge-pdx-sossozkq', 'x-envoy-attempt-count': '1', 'x-envoy-upstream-service-time': '94', 'x-backend': 'main_normal main_canary_with_overflow main_control_with_overflow', 'x-server': 'slack-www-hhvm-main-iad-yrzp', 'x-slack-shared-secret-outcome': 'no-match', 'x-edge-backend': 'envoy-www', 'timing-allow-origin': '*', 'x-slack-edge-shared-secret-outcome': 'no-match', 'connection': 'close'}, body: {"ok":true,"url":"wss:\/\/wss-primary.slack.com\/link\/?ticket=9435a1de-472e-4223-804d-8678c7b113f2&app_id=a6c8d361ee1c6f398c5b4afec831555b78d7affa753b16bcc0fc64d7c13f3766"}
2025-08-21 11:32:43,880 - slack_bolt.App - INFO - [client.py:192] - A new session has been established (session id: c2814dc4-78ad-4dc6-bd76-d8979ee0a38d)
2025-08-21 11:32:43,880 - slack_bolt.App - INFO - [base_handler.py:50] - ⚡️ Bolt app is running!
2025-08-21 11:32:43,884 - slack_bolt.App - INFO - [client.py:265] - Starting to receive messages from a new connection (session id: c2814dc4-78ad-4dc6-bd76-d8979ee0a38d)
2025-08-21 11:32:43,888 - slack_bolt.App - DEBUG - [client.py:235] - on_message invoked: (message: {"type":"hello","num_connections":1,"debug_info":{"host":"applink-canary-0","build_number":0,"approximate_connection_time":18060},"connection_info":{"app_id":"A099LACAB2R"}})
2025-08-21 11:32:43,888 - slack_bolt.App - DEBUG - [client.py:99] - A new message enqueued (current queue size: 1)
2025-08-21 11:32:43,888 - slack_bolt.App - DEBUG - [client.py:105] - A message dequeued (current queue size: 0)
2025-08-21 11:32:43,890 - slack_bolt.App - DEBUG - [client.py:125] - Message processing started (type: hello, envelope_id: None)
2025-08-21 11:32:43,890 - slack_bolt.App - DEBUG - [client.py:150] - Message processing completed (type: hello, envelope_id: None)
2025-08-21 11:33:26,472 - slack_bolt.App - DEBUG - [client.py:235] - on_message invoked: (message: {"envelope_id":"4e27334e-46f0-45b7-8b2c-91a95e7c571c","payload":{"token":"yq71khZBCyJF1Ri2hG5aNqr5","team_id":"T010QS7UQNA","enterprise_id":"ERV4P7NAD","context_team_id":null,"context_enterprise_id":"ERV4P7NAD","api_app_id":"A099LACAB2R","event":{"user":"U01RMTFMALF","type":"message","ts":"1755801205.002949","client_msg_id":"eac7e491-9b2f-4bee-87f7-74638841f98b","text":"How to connect an iOS device?","blocks":[{"type":"rich_text","block_id":"rRS58","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"How to connect an iOS device?"}]}]}],"channel":"D09A0LFHK8R","event_ts":"1755801205.002949","channel_type":"im"},"type":"event_callback","event_id":"Ev09C9GAMTSL","event_time":1755801205,"authorizations":[{"enterprise_id":"ERV4P7NAD","team_id":"T010QS7UQNA","user_id":"U099R6WTZ9S","is_bot":true,"is_enterprise_install":false}],"is_ext_shared_channel":false,"event_context":"4-eyJldCI6Im1lc3NhZ2UiLCJ0aWQiOiJUMDEwUVM3VVFOQSIsImFpZCI6IkEwOTlMQUNBQjJSIiwiY2lkIjoiRDA5QTBMRkhLOFIifQ"},"type":"events_api","accepts_response_payload":false,"retry_attempt":0,"retry_reason":""})
2025-08-21 11:33:26,472 - slack_bolt.App - DEBUG - [client.py:99] - A new message enqueued (current queue size: 1)
2025-08-21 11:33:26,472 - slack_bolt.App - DEBUG - [client.py:105] - A message dequeued (current queue size: 0)
2025-08-21 11:33:26,473 - slack_bolt.App - DEBUG - [client.py:125] - Message processing started (type: events_api, envelope_id: 4e27334e-46f0-45b7-8b2c-91a95e7c571c)
2025-08-21 11:33:26,474 - slack_bolt.App - DEBUG - [app.py:476] - Applying slack_bolt.middleware.ssl_check.ssl_check.SslCheck
2025-08-21 11:33:26,474 - slack_bolt.App - DEBUG - [app.py:476] - Applying slack_bolt.middleware.request_verification.request_verification.RequestVerification
2025-08-21 11:33:26,474 - slack_bolt.App - DEBUG - [app.py:476] - Applying slack_bolt.middleware.authorization.single_team_authorization.SingleTeamAuthorization
2025-08-21 11:33:26,474 - slack_bolt.App - DEBUG - [app.py:476] - Applying slack_bolt.middleware.ignoring_self_events.ignoring_self_events.IgnoringSelfEvents
2025-08-21 11:33:26,475 - slack_bolt.App - DEBUG - [app.py:476] - Applying slack_bolt.middleware.url_verification.url_verification.UrlVerification
2025-08-21 11:33:26,475 - slack_bolt.App - DEBUG - [app.py:500] - Checking listener: handle_app_mentions ...
2025-08-21 11:33:26,475 - slack_bolt.App - DEBUG - [app.py:500] - Checking listener: help_message ...
2025-08-21 11:33:26,475 - slack_bolt.App - DEBUG - [app.py:500] - Checking listener: handle_dm_messages ...
2025-08-21 11:33:26,475 - slack_bolt.App - DEBUG - [app.py:522] - Running listener: handle_dm_messages ...
2025-08-21 11:33:26,476 - __main__ - INFO - [main.py:358] - === DM MESSAGE EVENT RECEIVED ===
2025-08-21 11:33:26,476 - slack_bolt.App - DEBUG - [thread_runner.py:198] - Responding with status: 200 body: "" (0 millis)
2025-08-21 11:33:26,476 - __main__ - DEBUG - [main.py:359] - Full event body: {'token': 'yq71khZBCyJF1Ri2hG5aNqr5', 'team_id': 'T010QS7UQNA', 'enterprise_id': 'ERV4P7NAD', 'context_team_id': None, 'context_enterprise_id': 'ERV4P7NAD', 'api_app_id': 'A099LACAB2R', 'event': {'user': 'U01RMTFMALF', 'type': 'message', 'ts': '1755801205.002949', 'client_msg_id': 'eac7e491-9b2f-4bee-87f7-74638841f98b', 'text': 'How to connect an iOS device?', 'blocks': [{'type': 'rich_text', 'block_id': 'rRS58', 'elements': [{'type': 'rich_text_section', 'elements': [{'type': 'text', 'text': 'How to connect an iOS device?'}]}]}], 'channel': 'D09A0LFHK8R', 'event_ts': '1755801205.002949', 'channel_type': 'im'}, 'type': 'event_callback', 'event_id': 'Ev09C9GAMTSL', 'event_time': 1755801205, 'authorizations': [{'enterprise_id': 'ERV4P7NAD', 'team_id': 'T010QS7UQNA', 'user_id': 'U099R6WTZ9S', 'is_bot': True, 'is_enterprise_install': False}], 'is_ext_shared_channel': False, 'event_context': '4-eyJldCI6Im1lc3NhZ2UiLCJ0aWQiOiJUMDEwUVM3VVFOQSIsImFpZCI6IkEwOTlMQUNBQjJSIiwiY2lkIjoiRDA5QTBMRkhLOFIifQ'}
2025-08-21 11:33:26,476 - slack_bolt.App - DEBUG - [client.py:200] - Sending a message (session id: c2814dc4-78ad-4dc6-bd76-d8979ee0a38d, message: {"envelope_id": "4e27334e-46f0-45b7-8b2c-91a95e7c571c"})
2025-08-21 11:33:26,476 - __main__ - INFO - [main.py:368] - DM Event details: channel=D09A0LFHK8R, user=U01RMTFMALF, ts=1755801205.002949
2025-08-21 11:33:26,476 - __main__ - DEBUG - [main.py:369] - DM Event text: How to connect an iOS device?
2025-08-21 11:33:26,477 - utils - DEBUG - [utils.py:27] - Checking message processing: channel=D09A0LFHK8R, ts=1755801205.002949, text='How to connect an iOS device?...'
2025-08-21 11:33:26,477 - slack_bolt.App - DEBUG - [internals.py:41] - Response time: 2 milliseconds
2025-08-21 11:33:26,477 - utils - DEBUG - [utils.py:31] - Message hash: 6d1f0212d2ccd94e1fb526dfee2dd2e6
2025-08-21 11:33:26,477 - slack_bolt.App - DEBUG - [client.py:150] - Message processing completed (type: events_api, envelope_id: 4e27334e-46f0-45b7-8b2c-91a95e7c571c)
2025-08-21 11:33:26,477 - utils - DEBUG - [utils.py:53] - Added message to processing cache (total entries: 1)
2025-08-21 11:33:26,477 - __main__ - DEBUG - [main.py:382] - Bot check: bot_id=None, user_id=U01RMTFMALF
2025-08-21 11:33:26,477 - __main__ - DEBUG - [main.py:387] - Question received: 'How to connect an iOS device?'
2025-08-21 11:33:26,477 - __main__ - DEBUG - [main.py:393] - Checking user access for DM...
2025-08-21 11:33:26,477 - auth.slack_user_info - DEBUG - [slack_user_info.py:48] - Fetching user info for user_id: U01RMTFMALF
2025-08-21 11:33:26,478 - slack_sdk.web.base_client - DEBUG - [base_client.py:255] - Sending a request - url: https://slack.com/api/users.info, query_params: {}, body_params: {'user': 'U01RMTFMALF', 'team_id': 'T010QS7UQNA'}, files: {}, json_body: None, headers: {'Content-Type': 'application/x-www-form-urlencoded', 'Authorization': '(redacted)', 'User-Agent': 'Python/3.12.0 slackclient/3.34.0 Darwin/23.4.0'}
2025-08-21 11:33:26,777 - slack_sdk.web.base_client - DEBUG - [base_client.py:546] - Received the following response - status: 200, headers: {'date': 'Thu, 21 Aug 2025 18:33:26 GMT', 'server': 'Apache', 'vary': 'Accept-Encoding', 'x-slack-req-id': 'd21672fd6c729a21cc84b3f19e5bda5a', 'x-content-type-options': 'nosniff', 'x-xss-protection': '0', 'pragma': 'no-cache', 'cache-control': 'private, no-cache, no-store, must-revalidate', 'expires': 'Sat, 26 Jul 1997 05:00:00 GMT', 'content-type': 'application/json; charset=utf-8', 'x-accepted-oauth-scopes': 'users:read', 'x-oauth-scopes': 'app_mentions:read,channels:history,chat:write,im:history,im:read,im:write,users:read,reactions:write,users:read.email', 'access-control-expose-headers': 'x-slack-req-id, retry-after', 'access-control-allow-headers': 'slack-route, x-slack-version-ts, x-b3-traceid, x-b3-spanid, x-b3-parentspanid, x-b3-sampled, x-b3-flags', 'strict-transport-security': 'max-age=31536000; includeSubDomains; preload', 'referrer-policy': 'no-referrer', 'x-slack-unique-id': 'aKdmdj6nQVbH5jcXnw-sGAAAEDo', 'x-slack-backend': 'r', 'access-control-allow-origin': '*', 'content-length': '2057', 'via': '1.1 slack-prod.tinyspeck.com, envoy-www-iad-vpwpezrn,envoy-edge-pdx-hbepnyfo', 'x-envoy-attempt-count': '1', 'x-envoy-upstream-service-time': '90', 'x-backend': 'main_normal main_canary_with_overflow main_control_with_overflow', 'x-server': 'slack-www-hhvm-main-iad-tccf', 'x-slack-shared-secret-outcome': 'no-match', 'x-edge-backend': 'envoy-www', 'timing-allow-origin': '*', 'x-slack-edge-shared-secret-outcome': 'no-match', 'connection': 'close'}, body: {"ok":true,"user":{"id":"U01RMTFMALF","name":"popov8533","is_bot":false,"updated":1755719704,"is_app_user":false,"team_id":"T010QS7UQNA","deleted":false,"color":"4bbe2e","is_email_confirmed":true,"real_name":"Alexandr Popov","tz":"America\/Los_Angeles","tz_label":"Pacific Daylight Time","tz_offset":-25200,"is_admin":false,"is_owner":false,"is_primary_owner":false,"is_restricted":false,"is_ultra_restricted":false,"enterprise_user":{"id":"U01RMTFMALF","enterprise_id":"ERV4P7NAD","enterprise_name":"Paramount Global","is_admin":false,"is_owner":false,"is_primary_owner":false,"teams":["T010QS7UQNA","T02H1PQMF"]},"who_can_share_contact_card":"EVERYONE","profile":{"real_name":"Alexandr Popov","display_name":"Alex Popov","avatar_hash":"a64f82312a14","real_name_normalized":"Alexandr Popov","display_name_normalized":"Alex Popov","image_24":"https:\/\/avatars.slack-edge.com\/2023-03-29\/5033076824964_a64f82312a141123fbbf_24.png","image_32":"https:\/\/avatars.slack-edge.com\/2023-03-29\/5033076824964_a64f82312a141123fbbf_32.png","image_48":"https:\/\/avatars.slack-edge.com\/2023-03-29\/5033076824964_a64f82312a141123fbbf_48.png","image_72":"https:\/\/avatars.slack-edge.com\/2023-03-29\/5033076824964_a64f82312a141123fbbf_72.png","image_192":"https:\/\/avatars.slack-edge.com\/2023-03-29\/5033076824964_a64f82312a141123fbbf_192.png","image_512":"https:\/\/avatars.slack-edge.com\/2023-03-29\/5033076824964_a64f82312a141123fbbf_512.png","image_1024":"https:\/\/avatars.slack-edge.com\/2023-03-29\/5033076824964_a64f82312a141123fbbf_1024.png","image_original":"https:\/\/avatars.slack-edge.com\/2023-03-29\/5033076824964_a64f82312a141123fbbf_original.png","is_custom_image":true,"first_name":"Alexandr","last_name":"Popov","team":"T010QS7UQNA","email":"alexandr.popov@paramount.com","title":"Senior Software Quality Assurance Engineer","phone":"","skype":"","status_text":"","status_text_canonical":"","status_emoji":"","status_emoji_display_info":[],"status_expiration":0,"huddle_state":"default_unset","huddle_state_expiration_ts":0,"ooo_message":""}}}
2025-08-21 11:33:26,778 - auth.slack_user_info - DEBUG - [slack_user_info.py:63] - Retrieved email for user U01RMTFMALF: alexandr.popov@paramount.com
2025-08-21 11:33:26,779 - auth.email_whitelist - DEBUG - [email_whitelist.py:57] - Email access granted: alexandr.popov@paramount.com
2025-08-21 11:33:26,779 - __main__ - INFO - [main.py:123] - Access granted to user U01RMTFMALF with email alexandr.popov@paramount.com
2025-08-21 11:33:26,779 - __main__ - DEBUG - [main.py:399] - User access check passed for DM
2025-08-21 11:33:26,779 - __main__ - INFO - [main.py:401] - Processing DM question from user U01RMTFMALF: How to connect an iOS device?
2025-08-21 11:33:26,779 - __main__ - DEBUG - [main.py:404] - Starting DM processing...
2025-08-21 11:33:26,779 - __main__ - DEBUG - [main.py:407] - Checking if 'how to connect an ios device?' is an admin command in DM
2025-08-21 11:33:26,779 - __main__ - DEBUG - [main.py:442] - Checking if DM thread is already being processed...
2025-08-21 11:33:26,779 - utils - DEBUG - [utils.py:67] - Managing thread: D09A0LFHK8R:1755801205.002949, action: add, user: U01RMTFMALF
2025-08-21 11:33:26,780 - utils - INFO - [utils.py:94] - Added thread D09A0LFHK8R:1755801205.002949 to active tracking (total: 1)
2025-08-21 11:33:26,780 - __main__ - DEBUG - [main.py:447] - DM thread management check passed
2025-08-21 11:33:26,780 - slack_sdk.web.base_client - DEBUG - [base_client.py:255] - Sending a request - url: https://slack.com/api/reactions.add, query_params: {}, body_params: {'channel': 'D09A0LFHK8R', 'name': 'thinking_face', 'timestamp': '1755801205.002949', 'team_id': 'T010QS7UQNA'}, files: {}, json_body: None, headers: {'Content-Type': 'application/x-www-form-urlencoded', 'Authorization': '(redacted)', 'User-Agent': 'Python/3.12.0 slackclient/3.34.0 Darwin/23.4.0'}
2025-08-21 11:33:27,120 - slack_sdk.web.base_client - DEBUG - [base_client.py:546] - Received the following response - status: 200, headers: {'date': 'Thu, 21 Aug 2025 18:33:27 GMT', 'server': 'Apache', 'vary': 'Accept-Encoding', 'x-slack-req-id': '000e8f5fc09e469d4c44478736fb1558', 'x-content-type-options': 'nosniff', 'x-xss-protection': '0', 'pragma': 'no-cache', 'cache-control': 'private, no-cache, no-store, must-revalidate', 'expires': 'Sat, 26 Jul 1997 05:00:00 GMT', 'content-type': 'application/json; charset=utf-8', 'x-accepted-oauth-scopes': 'reactions:write', 'x-oauth-scopes': 'app_mentions:read,channels:history,chat:write,im:history,im:read,im:write,users:read,reactions:write,users:read.email', 'access-control-expose-headers': 'x-slack-req-id, retry-after', 'access-control-allow-headers': 'slack-route, x-slack-version-ts, x-b3-traceid, x-b3-spanid, x-b3-parentspanid, x-b3-sampled, x-b3-flags', 'strict-transport-security': 'max-age=31536000; includeSubDomains; preload', 'referrer-policy': 'no-referrer', 'x-slack-unique-id': 'aKdmdwnA6600pcTYGSzO_QAAEDA', 'x-slack-backend': 'r', 'access-control-allow-origin': '*', 'content-length': '11', 'via': '1.1 slack-prod.tinyspeck.com, envoy-www-iad-ofsehrrw,envoy-edge-pdx-fjlvgagw', 'x-envoy-attempt-count': '1', 'x-envoy-upstream-service-time': '129', 'x-backend': 'main_normal main_canary_with_overflow main_control_with_overflow', 'x-server': 'slack-www-hhvm-main-iad-kfrb', 'x-slack-shared-secret-outcome': 'no-match', 'x-edge-backend': 'envoy-www', 'timing-allow-origin': '*', 'x-slack-edge-shared-secret-outcome': 'no-match', 'connection': 'close'}, body: {"ok":true}
2025-08-21 11:33:27,121 - __main__ - INFO - [main.py:464] - Processing DM question from <@U01RMTFMALF>: How to connect an iOS device?
2025-08-21 11:33:27,121 - __main__ - INFO - [main.py:468] - Sending DM request to DIG AI...
2025-08-21 11:33:27,121 - dig_connector - INFO - [dig_connector.py:134] - Generating response for query: 'How to connect an iOS device?' with 0 chunks
2025-08-21 11:33:27,122 - dig_connector - DEBUG - [dig_connector.py:138] - Formatted context length: 0
2025-08-21 11:33:27,122 - dig_connector - INFO - [dig_connector.py:141] - No context available, using direct query
2025-08-21 11:33:27,122 - dig_connector - INFO - [dig_connector.py:150] - Sending prompt to DIG platform...
2025-08-21 11:33:27,122 - dig_connector - INFO - [dig_connector.py:121] - Sending message to DIG API - URL: https://ai.digdev.cbsicloud.com/fastapi/chats/856/generate
2025-08-21 11:33:27,122 - dig_connector - DEBUG - [dig_connector.py:122] - Message payload: {'model_id': 42, 'message_text': 'How to connect an iOS device?', 'history': [{'role': 'user', 'content': 'How to connect an iOS device?'}]}
2025-08-21 11:33:34,252 - urllib3.connectionpool - DEBUG - [connectionpool.py:549] - https://ai.digdev.cbsicloud.com:443 "POST /fastapi/chats/856/generate HTTP/1.1" 200 2362
2025-08-21 11:33:34,253 - dig_connector - DEBUG - [dig_connector.py:125] - DIG API response: status=200
2025-08-21 11:33:34,254 - dig_connector - DEBUG - [dig_connector.py:129] - DIG API response data: {'message_text': 'You can connect an iOS device (iPhone, iPad, or Apple TV) using Apple Configurator.\n\n**For iPad, iPhone, or iPod touch:**\n1.  Plug your iOS device into a Mac running Apple Configurator 2 using the USB cable that came with your device. (Source: Apple Configurator, Connect Devices)\n2.  If it\'s the first time connecting the device to this Mac, tap "Trust" on the device\'s "Trust this computer" pane. (Source: Apple Configurator, Connect Devices)\n    *   You can connect multiple iOS devices simultaneously via USB or supported high-speed hubs. (Source: Apple Configurator, Connect Devices)\n\n**For Apple TV (4th generation with tvOS) via USB:**\n1.  Open Apple Configurator.\n2.  Use a USB-C cable to connect the Apple TV to a USB port on the Mac. (Source: Apple Configurator, Connect Devices)\n    *   You can connect multiple Apple TV devices simultaneously. (Source: Apple Configurator, Connect Devices)\n\n**For Apple TV via Wi-Fi:**\n1.  **Before you begin, ensure you have:**\n    *   The latest version of Apple Configurator, iTunes, and macOS High Sierra or later on your Mac.\n    *   An Apple TV 4K or Apple TV (4th generation) with the latest tvOS.\n    *   A display connected to your Apple TV.\n    *   Your Mac and Apple TV connected to the same Wi-Fi or Ethernet network. (Source: Apple Configurator, Connect Devices)\n2.  Connect your Apple TV to Ethernet and stop at the "Pair Your Remote" screen. If already set up, go to Settings > Remotes and Devices > Remote App and Devices. (Source: Apple Configurator, Connect Devices)\n3.  On your Mac, open Apple Configurator 2. (Source: Apple Configurator, Connect Devices)\n4.  From the Apple Configurator 2 menu, choose "Paired Devices." (Source: Apple Configurator, Connect Devices)\n5.  Click "Pair" next to your Apple TV. (Source: Apple Configurator, Connect Devices)\n6.  Enter the 6-digit PIN that appears on your Apple TV screen. (Source: Apple Configurator, Connect Devices)\n7.  Select your Apple TV in the device window of Apple Configurator. (Source: Apple Configurator, Connect Devices)\n\nApple Configurator is a tool for installing builds and getting logs from Apple devices. You can download the app from: `https://itunes.apple.com/app/apple-configurator-2/id1037126344?mt=12` (Source: Apple Configurator).', 'requires_approval': False, 'execution_id': 1556}
2025-08-21 11:33:34,254 - dig_connector - INFO - [dig_connector.py:154] - Extracting response content...
2025-08-21 11:33:34,254 - dig_connector - DEBUG - [dig_connector.py:221] - Found message_text in response
2025-08-21 11:33:34,255 - dig_connector - INFO - [dig_connector.py:157] - Successfully generated response (length: 2262)
2025-08-21 11:33:34,255 - __main__ - INFO - [main.py:471] - Received DM response from DIG AI
2025-08-21 11:33:34,255 - __main__ - DEBUG - [main.py:472] - DIG AI DM response: You can connect an iOS device (iPhone, iPad, or Apple TV) using Apple Configurator.

**For iPad, iPhone, or iPod touch:**
1.  Plug your iOS device into a Mac running Apple Configurator 2 using the USB cable that came with your device. (Source: Apple Configurator, Connect Devices)
2.  If it's the first time connecting the device to this Mac, tap "Trust" on the device's "Trust this computer" pane. (Source: Apple Configurator, Connect Devices)
    *   You can connect multiple iOS devices simultaneously via USB or supported high-speed hubs. (Source: Apple Configurator, Connect Devices)

**For Apple TV (4th generation with tvOS) via USB:**
1.  Open Apple Configurator.
2.  Use a USB-C cable to connect the Apple TV to a USB port on the Mac. (Source: Apple Configurator, Connect Devices)
    *   You can connect multiple Apple TV devices simultaneously. (Source: Apple Configurator, Connect Devices)

**For Apple TV via Wi-Fi:**
1.  **Before you begin, ensure you have:**
    *   The latest version of Apple Configurator, iTunes, and macOS High Sierra or later on your Mac.
    *   An Apple TV 4K or Apple TV (4th generation) with the latest tvOS.
    *   A display connected to your Apple TV.
    *   Your Mac and Apple TV connected to the same Wi-Fi or Ethernet network. (Source: Apple Configurator, Connect Devices)
2.  Connect your Apple TV to Ethernet and stop at the "Pair Your Remote" screen. If already set up, go to Settings > Remotes and Devices > Remote App and Devices. (Source: Apple Configurator, Connect Devices)
3.  On your Mac, open Apple Configurator 2. (Source: Apple Configurator, Connect Devices)
4.  From the Apple Configurator 2 menu, choose "Paired Devices." (Source: Apple Configurator, Connect Devices)
5.  Click "Pair" next to your Apple TV. (Source: Apple Configurator, Connect Devices)
6.  Enter the 6-digit PIN that appears on your Apple TV screen. (Source: Apple Configurator, Connect Devices)
7.  Select your Apple TV in the device window of Apple Configurator. (Source: Apple Configurator, Connect Devices)

Apple Configurator is a tool for installing builds and getting logs from Apple devices. You can download the app from: `https://itunes.apple.com/app/apple-configurator-2/id1037126344?mt=12` (Source: Apple Configurator).
2025-08-21 11:33:34,256 - __main__ - DEBUG - [main.py:477] - Formatted DM response: *Your Query:* How to connect an iOS device?

*Answer:*
You can connect an iOS device (iPhone, iPad, or Apple TV) using Apple Configurator.

*For iPad, iPhone, or iPod touch:*
1.  Plug your iOS device into a Mac running Apple Configurator 2 using the USB cable that came with your device. (Source: Apple Configurator, Connect Devices)
2.  If it's the first time connecting the device to this Mac, tap "Trust" on the device's "Trust this computer" pane. (Source: Apple Configurator, Connect Devices)
    *   You can connect multiple iOS devices simultaneously via USB or supported high-speed hubs. (Source: Apple Configurator, Connect Devices)

*For Apple TV (4th generation with tvOS) via USB:*
1.  Open Apple Configurator.
2.  Use a USB-C cable to connect the Apple TV to a USB port on the Mac. (Source: Apple Configurator, Connect Devices)
    *   You can connect multiple Apple TV devices simultaneously. (Source: Apple Configurator, Connect Devices)

*For Apple TV via Wi-Fi:*
1.  *Before you begin, ensure you have:*
    *   The latest version of Apple Configurator, iTunes, and macOS High Sierra or later on your Mac.
    *   An Apple TV 4K or Apple TV (4th generation) with the latest tvOS.
    *   A display connected to your Apple TV.
    *   Your Mac and Apple TV connected to the same Wi-Fi or Ethernet network. (Source: Apple Configurator, Connect Devices)
2.  Connect your Apple TV to Ethernet and stop at the "Pair Your Remote" screen. If already set up, go to Settings > Remotes and Devices > Remote App and Devices. (Source: Apple Configurator, Connect Devices)
3.  On your Mac, open Apple Configurator 2. (Source: Apple Configurator, Connect Devices)
4.  From the Apple Configurator 2 menu, choose "Paired Devices." (Source: Apple Configurator, Connect Devices)
5.  Click "Pair" next to your Apple TV. (Source: Apple Configurator, Connect Devices)
6.  Enter the 6-digit PIN that appears on your Apple TV screen. (Source: Apple Configurator, Connect Devices)
7.  Select your Apple TV in the device window of Apple Configurator. (Source: Apple Configurator, Connect Devices)

Apple Configurator is a tool for installing builds and getting logs from Apple devices. You can download the app from: `https://itunes.apple.com/app/apple-configurator-2/id1037126344?mt=12` (Source: Apple Configurator).
2025-08-21 11:33:34,256 - slack_sdk.web.base_client - DEBUG - [base_client.py:255] - Sending a request - url: https://slack.com/api/reactions.remove, query_params: {}, body_params: {'name': 'thinking_face', 'channel': 'D09A0LFHK8R', 'timestamp': '1755801205.002949', 'team_id': 'T010QS7UQNA'}, files: {}, json_body: None, headers: {'Content-Type': 'application/x-www-form-urlencoded', 'Authorization': '(redacted)', 'User-Agent': 'Python/3.12.0 slackclient/3.34.0 Darwin/23.4.0'}
2025-08-21 11:33:34,624 - slack_sdk.web.base_client - DEBUG - [base_client.py:546] - Received the following response - status: 200, headers: {'date': 'Thu, 21 Aug 2025 18:33:34 GMT', 'server': 'Apache', 'vary': 'Accept-Encoding', 'x-slack-req-id': 'ac6e3693db7be8928aaf0cb194500ca1', 'x-content-type-options': 'nosniff', 'x-xss-protection': '0', 'pragma': 'no-cache', 'cache-control': 'private, no-cache, no-store, must-revalidate', 'expires': 'Sat, 26 Jul 1997 05:00:00 GMT', 'content-type': 'application/json; charset=utf-8', 'x-accepted-oauth-scopes': 'reactions:write', 'x-oauth-scopes': 'app_mentions:read,channels:history,chat:write,im:history,im:read,im:write,users:read,reactions:write,users:read.email', 'access-control-expose-headers': 'x-slack-req-id, retry-after', 'access-control-allow-headers': 'slack-route, x-slack-version-ts, x-b3-traceid, x-b3-spanid, x-b3-parentspanid, x-b3-sampled, x-b3-flags', 'strict-transport-security': 'max-age=31536000; includeSubDomains; preload', 'referrer-policy': 'no-referrer', 'x-slack-unique-id': 'aKdmfpC7hXvVkNPeGaTmkgAAEBI', 'x-slack-backend': 'r', 'access-control-allow-origin': '*', 'content-length': '11', 'via': '1.1 slack-prod.tinyspeck.com, envoy-www-iad-vpfgplzc,envoy-edge-pdx-iosmftpd', 'x-envoy-attempt-count': '1', 'x-envoy-upstream-service-time': '156', 'x-backend': 'main_normal main_canary_with_overflow main_control_with_overflow', 'x-server': 'slack-www-hhvm-main-iad-cejl', 'x-slack-shared-secret-outcome': 'no-match', 'x-edge-backend': 'envoy-www', 'timing-allow-origin': '*', 'x-slack-edge-shared-secret-outcome': 'no-match', 'connection': 'close'}, body: {"ok":true}
2025-08-21 11:33:34,625 - slack_sdk.web.base_client - DEBUG - [base_client.py:255] - Sending a request - url: https://slack.com/api/chat.postMessage, query_params: {}, body_params: {}, files: {}, json_body: {'channel': 'D09A0LFHK8R', 'text': '*Your Query:* How to connect an iOS device?\n\n*Answer:*\nYou can connect an iOS device (iPhone, iPad, or Apple TV) using Apple Configurator.\n\n*For iPad, iPhone, or iPod touch:*\n1.  Plug your iOS device into a Mac running Apple Configurator 2 using the USB cable that came with your device. (Source: Apple Configurator, Connect Devices)\n2.  If it\'s the first time connecting the device to this Mac, tap "Trust" on the device\'s "Trust this computer" pane. (Source: Apple Configurator, Connect Devices)\n    *   You can connect multiple iOS devices simultaneously via USB or supported high-speed hubs. (Source: Apple Configurator, Connect Devices)\n\n*For Apple TV (4th generation with tvOS) via USB:*\n1.  Open Apple Configurator.\n2.  Use a USB-C cable to connect the Apple TV to a USB port on the Mac. (Source: Apple Configurator, Connect Devices)\n    *   You can connect multiple Apple TV devices simultaneously. (Source: Apple Configurator, Connect Devices)\n\n*For Apple TV via Wi-Fi:*\n1.  *Before you begin, ensure you have:*\n    *   The latest version of Apple Configurator, iTunes, and macOS High Sierra or later on your Mac.\n    *   An Apple TV 4K or Apple TV (4th generation) with the latest tvOS.\n    *   A display connected to your Apple TV.\n    *   Your Mac and Apple TV connected to the same Wi-Fi or Ethernet network. (Source: Apple Configurator, Connect Devices)\n2.  Connect your Apple TV to Ethernet and stop at the "Pair Your Remote" screen. If already set up, go to Settings > Remotes and Devices > Remote App and Devices. (Source: Apple Configurator, Connect Devices)\n3.  On your Mac, open Apple Configurator 2. (Source: Apple Configurator, Connect Devices)\n4.  From the Apple Configurator 2 menu, choose "Paired Devices." (Source: Apple Configurator, Connect Devices)\n5.  Click "Pair" next to your Apple TV. (Source: Apple Configurator, Connect Devices)\n6.  Enter the 6-digit PIN that appears on your Apple TV screen. (Source: Apple Configurator, Connect Devices)\n7.  Select your Apple TV in the device window of Apple Configurator. (Source: Apple Configurator, Connect Devices)\n\nApple Configurator is a tool for installing builds and getting logs from Apple devices. You can download the app from: `https://itunes.apple.com/app/apple-configurator-2/id1037126344?mt=12` (Source: Apple Configurator).', 'thread_ts': '1755801205.002949', 'team_id': 'T010QS7UQNA'}, headers: {'Content-Type': 'application/json;charset=utf-8', 'Authorization': '(redacted)', 'User-Agent': 'Python/3.12.0 slackclient/3.34.0 Darwin/23.4.0'}
2025-08-21 11:33:35,020 - slack_sdk.web.base_client - DEBUG - [base_client.py:546] - Received the following response - status: 200, headers: {'date': 'Thu, 21 Aug 2025 18:33:35 GMT', 'server': 'Apache', 'vary': 'Accept-Encoding', 'x-slack-req-id': '897ef73347dbb8a1eb9a750d1295533c', 'x-content-type-options': 'nosniff', 'x-xss-protection': '0', 'pragma': 'no-cache', 'cache-control': 'private, no-cache, no-store, must-revalidate', 'expires': 'Sat, 26 Jul 1997 05:00:00 GMT', 'content-type': 'application/json; charset=utf-8', 'x-accepted-oauth-scopes': 'chat:write', 'x-oauth-scopes': 'app_mentions:read,channels:history,chat:write,im:history,im:read,im:write,users:read,reactions:write,users:read.email', 'access-control-expose-headers': 'x-slack-req-id, retry-after', 'access-control-allow-headers': 'slack-route, x-slack-version-ts, x-b3-traceid, x-b3-spanid, x-b3-parentspanid, x-b3-sampled, x-b3-flags', 'strict-transport-security': 'max-age=31536000; includeSubDomains; preload', 'referrer-policy': 'no-referrer', 'x-slack-unique-id': 'aKdmflPTYd6n5qFYMuq8KQAAUC0', 'x-slack-backend': 'r', 'access-control-allow-origin': '*', 'content-length': '5971', 'via': '1.1 slack-prod.tinyspeck.com, envoy-www-iad-gcqhhezv,envoy-edge-pdx-alklbdfd', 'x-envoy-attempt-count': '1', 'x-envoy-upstream-service-time': '186', 'x-backend': 'main_normal main_canary_with_overflow main_control_with_overflow', 'x-server': 'slack-www-hhvm-main-iad-cdoq', 'x-slack-shared-secret-outcome': 'no-match', 'x-edge-backend': 'envoy-www', 'timing-allow-origin': '*', 'x-slack-edge-shared-secret-outcome': 'no-match', 'connection': 'close'}, body: {"ok":true,"channel":"D09A0LFHK8R","ts":"1755801215.014229","message":{"user":"U099R6WTZ9S","type":"message","ts":"1755801215.014229","bot_id":"B099R6WTRU4","app_id":"A099LACAB2R","text":"*Your Query:* How to connect an iOS device?\n\n*Answer:*\nYou can connect an iOS device (iPhone, iPad, or Apple TV) using Apple Configurator.\n\n*For iPad, iPhone, or iPod touch:*\n1.  Plug your iOS device into a Mac running Apple Configurator 2 using the USB cable that came with your device. (Source: Apple Configurator, Connect Devices)\n2.  If it's the first time connecting the device to this Mac, tap \"Trust\" on the device's \"Trust this computer\" pane. (Source: Apple Configurator, Connect Devices)\n    *   You can connect multiple iOS devices simultaneously via USB or supported high-speed hubs. (Source: Apple Configurator, Connect Devices)\n\n*For Apple TV (4th generation with tvOS) via USB:*\n1.  Open Apple Configurator.\n2.  Use a USB-C cable to connect the Apple TV to a USB port on the Mac. (Source: Apple Configurator, Connect Devices)\n    *   You can connect multiple Apple TV devices simultaneously. (Source: Apple Configurator, Connect Devices)\n\n*For Apple TV via Wi-Fi:*\n1.  *Before you begin, ensure you have:*\n    *   The latest version of Apple Configurator, iTunes, and macOS High Sierra or later on your Mac.\n    *   An Apple TV 4K or Apple TV (4th generation) with the latest tvOS.\n    *   A display connected to your Apple TV.\n    *   Your Mac and Apple TV connected to the same Wi-Fi or Ethernet network. (Source: Apple Configurator, Connect Devices)\n2.  Connect your Apple TV to Ethernet and stop at the \"Pair Your Remote\" screen. If already set up, go to Settings &gt; Remotes and Devices &gt; Remote App and Devices. (Source: Apple Configurator, Connect Devices)\n3.  On your Mac, open Apple Configurator 2. (Source: Apple Configurator, Connect Devices)\n4.  From the Apple Configurator 2 menu, choose \"Paired Devices.\" (Source: Apple Configurator, Connect Devices)\n5.  Click \"Pair\" next to your Apple TV. (Source: Apple Configurator, Connect Devices)\n6.  Enter the 6-digit PIN that appears on your Apple TV screen. (Source: Apple Configurator, Connect Devices)\n7.  Select your Apple TV in the device window of Apple Configurator. (Source: Apple Configurator, Connect Devices)\n\nApple Configurator is a tool for installing builds and getting logs from Apple devices. You can download the app from: `<https://itunes.apple.com/app/apple-configurator-2/id1037126344?mt=12>` (Source: Apple Configurator).","team":"T010QS7UQNA","bot_profile":{"id":"B099R6WTRU4","app_id":"A099LACAB2R","user_id":"U099R6WTZ9S","name":"AutoBot","icons":{"image_36":"https://a.slack-edge.com/80588/img/plugins/app/bot_36.png","image_48":"https://a.slack-edge.com/80588/img/plugins/app/bot_48.png","image_72":"https://a.slack-edge.com/80588/img/plugins/app/service_72.png"},"deleted":false,"updated":1754677948,"team_id":"T010QS7UQNA"},"thread_ts":"1755801205.002949","parent_user_id":"U01RMTFMALF","blocks":[{"type":"rich_text","block_id":"9QW","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Your Query:","style":{"bold":true}},{"type":"text","text":" How to connect an iOS device?\n\n"},{"type":"text","text":"Answer:","style":{"bold":true}},{"type":"text","text":"\nYou can connect an iOS device (iPhone, iPad, or Apple TV) using Apple Configurator.\n\n"},{"type":"text","text":"For iPad, iPhone, or iPod touch:","style":{"bold":true}},{"type":"text","text":"\n1.  Plug your iOS device into a Mac running Apple Configurator 2 using the USB cable that came with your device. (Source: Apple Configurator, Connect Devices)\n2.  If it's the first time connecting the device to this Mac, tap \"Trust\" on the device's \"Trust this computer\" pane. (Source: Apple Configurator, Connect Devices)\n    *   You can connect multiple iOS devices simultaneously via USB or supported high-speed hubs. (Source: Apple Configurator, Connect Devices)\n\n"},{"type":"text","text":"For Apple TV (4th generation with tvOS) via USB:","style":{"bold":true}},{"type":"text","text":"\n1.  Open Apple Configurator.\n2.  Use a USB-C cable to connect the Apple TV to a USB port on the Mac. (Source: Apple Configurator, Connect Devices)\n    *   You can connect multiple Apple TV devices simultaneously. (Source: Apple Configurator, Connect Devices)\n\n"},{"type":"text","text":"For Apple TV via Wi-Fi:","style":{"bold":true}},{"type":"text","text":"\n1.  "},{"type":"text","text":"Before you begin, ensure you have:","style":{"bold":true}},{"type":"text","text":"\n    *   The latest version of Apple Configurator, iTunes, and macOS High Sierra or later on your Mac.\n    *   An Apple TV 4K or Apple TV (4th generation) with the latest tvOS.\n    *   A display connected to your Apple TV.\n    *   Your Mac and Apple TV connected to the same Wi-Fi or Ethernet network. (Source: Apple Configurator, Connect Devices)\n2.  Connect your Apple TV to Ethernet and stop at the \"Pair Your Remote\" screen. If already set up, go to Settings > Remotes and Devices > Remote App and Devices. (Source: Apple Configurator, Connect Devices)\n3.  On your Mac, open Apple Configurator 2. (Source: Apple Configurator, Connect Devices)\n4.  From the Apple Configurator 2 menu, choose \"Paired Devices.\" (Source: Apple Configurator, Connect Devices)\n5.  Click \"Pair\" next to your Apple TV. (Source: Apple Configurator, Connect Devices)\n6.  Enter the 6-digit PIN that appears on your Apple TV screen. (Source: Apple Configurator, Connect Devices)\n7.  Select your Apple TV in the device window of Apple Configurator. (Source: Apple Configurator, Connect Devices)\n\nApple Configurator is a tool for installing builds and getting logs from Apple devices. You can download the app from: "},{"type":"link","url":"https://itunes.apple.com/app/apple-configurator-2/id1037126344?mt=12","style":{"code":true}},{"type":"text","text":" (Source: Apple Configurator)."}]}]}]}}
2025-08-21 11:33:35,022 - __main__ - DEBUG - [main.py:502] - Cleaning up DM thread tracking...
2025-08-21 11:33:35,022 - utils - DEBUG - [utils.py:67] - Managing thread: D09A0LFHK8R:1755801205.002949, action: remove, user: U01RMTFMALF
2025-08-21 11:33:35,022 - utils - INFO - [utils.py:100] - Removed thread D09A0LFHK8R:1755801205.002949 from active tracking (remaining: 0)
2025-08-21 11:33:36,550 - slack_bolt.App - DEBUG - [client.py:235] - on_message invoked: (message: {"envelope_id":"320edfcc-cdb8-4eed-9b89-5abe3e57e7b1","payload":{"token":"yq71khZBCyJF1Ri2hG5aNqr5","team_id":"T010QS7UQNA","enterprise_id":"ERV4P7NAD","context_team_id":null,"context_enterprise_id":"ERV4P7NAD","api_app_id":"A099LACAB2R","event":{"user":"U099R6WTZ9S","type":"message","ts":"1755801215.014229","bot_id":"B099R6WTRU4","app_id":"A099LACAB2R","text":"*Your Query:* How to connect an iOS device?\n\n*Answer:*\nYou can connect an iOS device (iPhone, iPad, or Apple TV) using Apple Configurator.\n\n*For iPad, iPhone, or iPod touch:*\n1.  Plug your iOS device into a Mac running Apple Configurator 2 using the USB cable that came with your device. (Source: Apple Configurator, Connect Devices)\n2.  If it's the first time connecting the device to this Mac, tap \"Trust\" on the device's \"Trust this computer\" pane. (Source: Apple Configurator, Connect Devices)\n    *   You can connect multiple iOS devices simultaneously via USB or supported high-speed hubs. (Source: Apple Configurator, Connect Devices)\n\n*For Apple TV (4th generation with tvOS) via USB:*\n1.  Open Apple Configurator.\n2.  Use a USB-C cable to connect the Apple TV to a USB port on the Mac. (Source: Apple Configurator, Connect Devices)\n    *   You can connect multiple Apple TV devices simultaneously. (Source: Apple Configurator, Connect Devices)\n\n*For Apple TV via Wi-Fi:*\n1.  *Before you begin, ensure you have:*\n    *   The latest version of Apple Configurator, iTunes, and macOS High Sierra or later on your Mac.\n    *   An Apple TV 4K or Apple TV (4th generation) with the latest tvOS.\n    *   A display connected to your Apple TV.\n    *   Your Mac and Apple TV connected to the same Wi-Fi or Ethernet network. (Source: Apple Configurator, Connect Devices)\n2.  Connect your Apple TV to Ethernet and stop at the \"Pair Your Remote\" screen. If already set up, go to Settings &gt; Remotes and Devices &gt; Remote App and Devices. (Source: Apple Configurator, Connect Devices)\n3.  On your Mac, open Apple Configurator 2. (Source: Apple Configurator, Connect Devices)\n4.  From the Apple Configurator 2 menu, choose \"Paired Devices.\" (Source: Apple Configurator, Connect Devices)\n5.  Click \"Pair\" next to your Apple TV. (Source: Apple Configurator, Connect Devices)\n6.  Enter the 6-digit PIN that appears on your Apple TV screen. (Source: Apple Configurator, Connect Devices)\n7.  Select your Apple TV in the device window of Apple Configurator. (Source: Apple Configurator, Connect Devices)\n\nApple Configurator is a tool for installing builds and getting logs from Apple devices. You can download the app from: `<https:\/\/itunes.apple.com\/app\/apple-configurator-2\/id1037126344?mt=12>` (Source: Apple Configurator).","team":"T010QS7UQNA","bot_profile":{"id":"B099R6WTRU4","deleted":false,"name":"AutoBot","updated":1754677948,"app_id":"A099LACAB2R","user_id":"U099R6WTZ9S","icons":{"image_36":"https:\/\/a.slack-edge.com\/80588\/img\/plugins\/app\/bot_36.png","image_48":"https:\/\/a.slack-edge.com\/80588\/img\/plugins\/app\/bot_48.png","image_72":"https:\/\/a.slack-edge.com\/80588\/img\/plugins\/app\/service_72.png"},"team_id":"T010QS7UQNA"},"thread_ts":"1755801205.002949","parent_user_id":"U01RMTFMALF","blocks":[{"type":"rich_text","block_id":"ooukJ","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Your Query:","style":{"bold":true}},{"type":"text","text":" How to connect an iOS device?\n\n"},{"type":"text","text":"Answer:","style":{"bold":true}},{"type":"text","text":"\nYou can connect an iOS device (iPhone, iPad, or Apple TV) using Apple Configurator.\n\n"},{"type":"text","text":"For iPad, iPhone, or iPod touch:","style":{"bold":true}},{"type":"text","text":"\n1.  Plug your iOS device into a Mac running Apple Configurator 2 using the USB cable that came with your device. (Source: Apple Configurator, Connect Devices)\n2.  If it's the first time connecting the device to this Mac, tap \"Trust\" on the device's \"Trust this computer\" pane. (Source: Apple Configurator, Connect Devices)\n    *   You can connect multiple iOS devices simultaneously via USB or supported high-speed hubs. (Source: Apple Configurator, Connect Devices)\n\n"},{"type":"text","text":"For Apple TV (4th generation with tvOS) via USB:","style":{"bold":true}},{"type":"text","text":"\n1.  Open Apple Configurator.\n2.  Use a USB-C cable to connect the Apple TV to a USB port on the Mac. (Source: Apple Configurator, Connect Devices)\n    *   You can connect multiple Apple TV devices simultaneously. (Source: Apple Configurator, Connect Devices)\n\n"},{"type":"text","text":"For Apple TV via Wi-Fi:","style":{"bold":true}},{"type":"text","text":"\n1.  "},{"type":"text","text":"Before you begin, ensure you have:","style":{"bold":true}},{"type":"text","text":"\n    *   The latest version of Apple Configurator, iTunes, and macOS High Sierra or later on your Mac.\n    *   An Apple TV 4K or Apple TV (4th generation) with the latest tvOS.\n    *   A display connected to your Apple TV.\n    *   Your Mac and Apple TV connected to the same Wi-Fi or Ethernet network. (Source: Apple Configurator, Connect Devices)\n2.  Connect your Apple TV to Ethernet and stop at the \"Pair Your Remote\" screen. If already set up, go to Settings > Remotes and Devices > Remote App and Devices. (Source: Apple Configurator, Connect Devices)\n3.  On your Mac, open Apple Configurator 2. (Source: Apple Configurator, Connect Devices)\n4.  From the Apple Configurator 2 menu, choose \"Paired Devices.\" (Source: Apple Configurator, Connect Devices)\n5.  Click \"Pair\" next to your Apple TV. (Source: Apple Configurator, Connect Devices)\n6.  Enter the 6-digit PIN that appears on your Apple TV screen. (Source: Apple Configurator, Connect Devices)\n7.  Select your Apple TV in the device window of Apple Configurator. (Source: Apple Configurator, Connect Devices)\n\nApple Configurator is a tool for installing builds and getting logs from Apple devices. You can download the app from: "},{"type":"link","url":"https:\/\/itunes.apple.com\/app\/apple-configurator-2\/id1037126344?mt=12","style":{"code":true}},{"type":"text","text":" (Source: Apple Configurator)."}]}]}],"channel":"D09A0LFHK8R","event_ts":"1755801215.014229","channel_type":"im"},"type":"event_callback","event_id":"Ev09B3N5NSUF","event_time":1755801215,"authorizations":[{"enterprise_id":"ERV4P7NAD","team_id":"T010QS7UQNA","user_id":"U099R6WTZ9S","is_bot":true,"is_enterprise_install":false}],"is_ext_shared_channel":false,"event_context":"4-eyJldCI6Im1lc3NhZ2UiLCJ0aWQiOiJUMDEwUVM3VVFOQSIsImFpZCI6IkEwOTlMQUNBQjJSIiwiY2lkIjoiRDA5QTBMRkhLOFIifQ"},"type":"events_api","accepts_response_payload":false,"retry_attempt":0,"retry_reason":""})
2025-08-21 11:33:36,552 - slack_bolt.App - DEBUG - [client.py:99] - A new message enqueued (current queue size: 1)
2025-08-21 11:33:36,552 - slack_bolt.App - DEBUG - [client.py:105] - A message dequeued (current queue size: 0)
2025-08-21 11:33:36,552 - slack_bolt.App - DEBUG - [client.py:125] - Message processing started (type: events_api, envelope_id: 320edfcc-cdb8-4eed-9b89-5abe3e57e7b1)
2025-08-21 11:33:36,553 - slack_bolt.App - DEBUG - [app.py:476] - Applying slack_bolt.middleware.ssl_check.ssl_check.SslCheck
2025-08-21 11:33:36,553 - slack_bolt.App - DEBUG - [app.py:476] - Applying slack_bolt.middleware.request_verification.request_verification.RequestVerification
2025-08-21 11:33:36,553 - slack_bolt.App - DEBUG - [app.py:476] - Applying slack_bolt.middleware.authorization.single_team_authorization.SingleTeamAuthorization
2025-08-21 11:33:36,553 - slack_bolt.App - DEBUG - [app.py:476] - Applying slack_bolt.middleware.ignoring_self_events.ignoring_self_events.IgnoringSelfEvents
2025-08-21 11:33:36,553 - slack_bolt.IgnoringSelfEvents - DEBUG - [ignoring_self_events.py:60] - Skipped self event: {'user': 'U099R6WTZ9S', 'type': 'message', 'ts': '1755801215.014229', 'bot_id': 'B099R6WTRU4', 'app_id': 'A099LACAB2R', 'text': '*Your Query:* How to connect an iOS device?\n\n*Answer:*\nYou can connect an iOS device (iPhone, iPad, or Apple TV) using Apple Configurator.\n\n*For iPad, iPhone, or iPod touch:*\n1.  Plug your iOS device into a Mac running Apple Configurator 2 using the USB cable that came with your device. (Source: Apple Configurator, Connect Devices)\n2.  If it\'s the first time connecting the device to this Mac, tap "Trust" on the device\'s "Trust this computer" pane. (Source: Apple Configurator, Connect Devices)\n    *   You can connect multiple iOS devices simultaneously via USB or supported high-speed hubs. (Source: Apple Configurator, Connect Devices)\n\n*For Apple TV (4th generation with tvOS) via USB:*\n1.  Open Apple Configurator.\n2.  Use a USB-C cable to connect the Apple TV to a USB port on the Mac. (Source: Apple Configurator, Connect Devices)\n    *   You can connect multiple Apple TV devices simultaneously. (Source: Apple Configurator, Connect Devices)\n\n*For Apple TV via Wi-Fi:*\n1.  *Before you begin, ensure you have:*\n    *   The latest version of Apple Configurator, iTunes, and macOS High Sierra or later on your Mac.\n    *   An Apple TV 4K or Apple TV (4th generation) with the latest tvOS.\n    *   A display connected to your Apple TV.\n    *   Your Mac and Apple TV connected to the same Wi-Fi or Ethernet network. (Source: Apple Configurator, Connect Devices)\n2.  Connect your Apple TV to Ethernet and stop at the "Pair Your Remote" screen. If already set up, go to Settings &gt; Remotes and Devices &gt; Remote App and Devices. (Source: Apple Configurator, Connect Devices)\n3.  On your Mac, open Apple Configurator 2. (Source: Apple Configurator, Connect Devices)\n4.  From the Apple Configurator 2 menu, choose "Paired Devices." (Source: Apple Configurator, Connect Devices)\n5.  Click "Pair" next to your Apple TV. (Source: Apple Configurator, Connect Devices)\n6.  Enter the 6-digit PIN that appears on your Apple TV screen. (Source: Apple Configurator, Connect Devices)\n7.  Select your Apple TV in the device window of Apple Configurator. (Source: Apple Configurator, Connect Devices)\n\nApple Configurator is a tool for installing builds and getting logs from Apple devices. You can download the app from: `<https://itunes.apple.com/app/apple-configurator-2/id1037126344?mt=12>` (Source: Apple Configurator).', 'team': 'T010QS7UQNA', 'bot_profile': {'id': 'B099R6WTRU4', 'deleted': False, 'name': 'AutoBot', 'updated': 1754677948, 'app_id': 'A099LACAB2R', 'user_id': 'U099R6WTZ9S', 'icons': {'image_36': 'https://a.slack-edge.com/80588/img/plugins/app/bot_36.png', 'image_48': 'https://a.slack-edge.com/80588/img/plugins/app/bot_48.png', 'image_72': 'https://a.slack-edge.com/80588/img/plugins/app/service_72.png'}, 'team_id': 'T010QS7UQNA'}, 'thread_ts': '1755801205.002949', 'parent_user_id': 'U01RMTFMALF', 'blocks': [{'type': 'rich_text', 'block_id': 'ooukJ', 'elements': [{'type': 'rich_text_section', 'elements': [{'type': 'text', 'text': 'Your Query:', 'style': {'bold': True}}, {'type': 'text', 'text': ' How to connect an iOS device?\n\n'}, {'type': 'text', 'text': 'Answer:', 'style': {'bold': True}}, {'type': 'text', 'text': '\nYou can connect an iOS device (iPhone, iPad, or Apple TV) using Apple Configurator.\n\n'}, {'type': 'text', 'text': 'For iPad, iPhone, or iPod touch:', 'style': {'bold': True}}, {'type': 'text', 'text': '\n1.  Plug your iOS device into a Mac running Apple Configurator 2 using the USB cable that came with your device. (Source: Apple Configurator, Connect Devices)\n2.  If it\'s the first time connecting the device to this Mac, tap "Trust" on the device\'s "Trust this computer" pane. (Source: Apple Configurator, Connect Devices)\n    *   You can connect multiple iOS devices simultaneously via USB or supported high-speed hubs. (Source: Apple Configurator, Connect Devices)\n\n'}, {'type': 'text', 'text': 'For Apple TV (4th generation with tvOS) via USB:', 'style': {'bold': True}}, {'type': 'text', 'text': '\n1.  Open Apple Configurator.\n2.  Use a USB-C cable to connect the Apple TV to a USB port on the Mac. (Source: Apple Configurator, Connect Devices)\n    *   You can connect multiple Apple TV devices simultaneously. (Source: Apple Configurator, Connect Devices)\n\n'}, {'type': 'text', 'text': 'For Apple TV via Wi-Fi:', 'style': {'bold': True}}, {'type': 'text', 'text': '\n1.  '}, {'type': 'text', 'text': 'Before you begin, ensure you have:', 'style': {'bold': True}}, {'type': 'text', 'text': '\n    *   The latest version of Apple Configurator, iTunes, and macOS High Sierra or later on your Mac.\n    *   An Apple TV 4K or Apple TV (4th generation) with the latest tvOS.\n    *   A display connected to your Apple TV.\n    *   Your Mac and Apple TV connected to the same Wi-Fi or Ethernet network. (Source: Apple Configurator, Connect Devices)\n2.  Connect your Apple TV to Ethernet and stop at the "Pair Your Remote" screen. If already set up, go to Settings > Remotes and Devices > Remote App and Devices. (Source: Apple Configurator, Connect Devices)\n3.  On your Mac, open Apple Configurator 2. (Source: Apple Configurator, Connect Devices)\n4.  From the Apple Configurator 2 menu, choose "Paired Devices." (Source: Apple Configurator, Connect Devices)\n5.  Click "Pair" next to your Apple TV. (Source: Apple Configurator, Connect Devices)\n6.  Enter the 6-digit PIN that appears on your Apple TV screen. (Source: Apple Configurator, Connect Devices)\n7.  Select your Apple TV in the device window of Apple Configurator. (Source: Apple Configurator, Connect Devices)\n\nApple Configurator is a tool for installing builds and getting logs from Apple devices. You can download the app from: '}, {'type': 'link', 'url': 'https://itunes.apple.com/app/apple-configurator-2/id1037126344?mt=12', 'style': {'code': True}}, {'type': 'text', 'text': ' (Source: Apple Configurator).'}]}]}], 'channel': 'D09A0LFHK8R', 'event_ts': '1755801215.014229', 'channel_type': 'im'}
2025-08-21 11:33:36,554 - slack_bolt.App - DEBUG - [client.py:200] - Sending a message (session id: c2814dc4-78ad-4dc6-bd76-d8979ee0a38d, message: {"envelope_id": "320edfcc-cdb8-4eed-9b89-5abe3e57e7b1"})
2025-08-21 11:33:36,555 - slack_bolt.App - DEBUG - [internals.py:41] - Response time: 1 milliseconds
2025-08-21 11:33:36,555 - slack_bolt.App - DEBUG - [client.py:150] - Message processing completed (type: events_api, envelope_id: 320edfcc-cdb8-4eed-9b89-5abe3e57e7b1)
2025-08-21 11:34:04,709 - slack_bolt.App - DEBUG - [client.py:235] - on_message invoked: (message: {"envelope_id":"b6441b58-f82c-4501-97aa-a224f24fe7da","payload":{"token":"yq71khZBCyJF1Ri2hG5aNqr5","team_id":"T010QS7UQNA","enterprise_id":"ERV4P7NAD","context_team_id":null,"context_enterprise_id":"ERV4P7NAD","api_app_id":"A099LACAB2R","event":{"user":"U01RMTFMALF","type":"message","ts":"1755801242.856029","client_msg_id":"eb552833-fd0a-4e48-b082-cd87d03f380b","text":"What is the source link where you got this data from?","thread_ts":"1755801205.002949","parent_user_id":"U01RMTFMALF","blocks":[{"type":"rich_text","block_id":"Fu0aw","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"What is the source link where you got this data from?"}]}]}],"channel":"D09A0LFHK8R","event_ts":"1755801242.856029","channel_type":"im"},"type":"event_callback","event_id":"Ev09BJ2CCKP0","event_time":1755801242,"authorizations":[{"enterprise_id":"ERV4P7NAD","team_id":"T010QS7UQNA","user_id":"U099R6WTZ9S","is_bot":true,"is_enterprise_install":false}],"is_ext_shared_channel":false,"event_context":"4-eyJldCI6Im1lc3NhZ2UiLCJ0aWQiOiJUMDEwUVM3VVFOQSIsImFpZCI6IkEwOTlMQUNBQjJSIiwiY2lkIjoiRDA5QTBMRkhLOFIifQ"},"type":"events_api","accepts_response_payload":false,"retry_attempt":0,"retry_reason":""})
2025-08-21 11:34:04,710 - slack_bolt.App - DEBUG - [client.py:99] - A new message enqueued (current queue size: 1)
2025-08-21 11:34:04,711 - slack_bolt.App - DEBUG - [client.py:105] - A message dequeued (current queue size: 0)
2025-08-21 11:34:04,711 - slack_bolt.App - DEBUG - [client.py:125] - Message processing started (type: events_api, envelope_id: b6441b58-f82c-4501-97aa-a224f24fe7da)
2025-08-21 11:34:04,712 - slack_bolt.App - DEBUG - [app.py:476] - Applying slack_bolt.middleware.ssl_check.ssl_check.SslCheck
2025-08-21 11:34:04,712 - slack_bolt.App - DEBUG - [app.py:476] - Applying slack_bolt.middleware.request_verification.request_verification.RequestVerification
2025-08-21 11:34:04,712 - slack_bolt.App - DEBUG - [app.py:476] - Applying slack_bolt.middleware.authorization.single_team_authorization.SingleTeamAuthorization
2025-08-21 11:34:04,712 - slack_bolt.App - DEBUG - [app.py:476] - Applying slack_bolt.middleware.ignoring_self_events.ignoring_self_events.IgnoringSelfEvents
2025-08-21 11:34:04,712 - slack_bolt.App - DEBUG - [app.py:476] - Applying slack_bolt.middleware.url_verification.url_verification.UrlVerification
2025-08-21 11:34:04,712 - slack_bolt.App - DEBUG - [app.py:500] - Checking listener: handle_app_mentions ...
2025-08-21 11:34:04,712 - slack_bolt.App - DEBUG - [app.py:500] - Checking listener: help_message ...
2025-08-21 11:34:04,713 - slack_bolt.App - DEBUG - [app.py:500] - Checking listener: handle_dm_messages ...
2025-08-21 11:34:04,713 - slack_bolt.App - DEBUG - [app.py:522] - Running listener: handle_dm_messages ...
2025-08-21 11:34:04,713 - slack_bolt.App - DEBUG - [thread_runner.py:198] - Responding with status: 200 body: "" (0 millis)
2025-08-21 11:34:04,713 - __main__ - INFO - [main.py:358] - === DM MESSAGE EVENT RECEIVED ===
2025-08-21 11:34:04,713 - slack_bolt.App - DEBUG - [client.py:200] - Sending a message (session id: c2814dc4-78ad-4dc6-bd76-d8979ee0a38d, message: {"envelope_id": "b6441b58-f82c-4501-97aa-a224f24fe7da"})
2025-08-21 11:34:04,713 - __main__ - DEBUG - [main.py:359] - Full event body: {'token': 'yq71khZBCyJF1Ri2hG5aNqr5', 'team_id': 'T010QS7UQNA', 'enterprise_id': 'ERV4P7NAD', 'context_team_id': None, 'context_enterprise_id': 'ERV4P7NAD', 'api_app_id': 'A099LACAB2R', 'event': {'user': 'U01RMTFMALF', 'type': 'message', 'ts': '1755801242.856029', 'client_msg_id': 'eb552833-fd0a-4e48-b082-cd87d03f380b', 'text': 'What is the source link where you got this data from?', 'thread_ts': '1755801205.002949', 'parent_user_id': 'U01RMTFMALF', 'blocks': [{'type': 'rich_text', 'block_id': 'Fu0aw', 'elements': [{'type': 'rich_text_section', 'elements': [{'type': 'text', 'text': 'What is the source link where you got this data from?'}]}]}], 'channel': 'D09A0LFHK8R', 'event_ts': '1755801242.856029', 'channel_type': 'im'}, 'type': 'event_callback', 'event_id': 'Ev09BJ2CCKP0', 'event_time': 1755801242, 'authorizations': [{'enterprise_id': 'ERV4P7NAD', 'team_id': 'T010QS7UQNA', 'user_id': 'U099R6WTZ9S', 'is_bot': True, 'is_enterprise_install': False}], 'is_ext_shared_channel': False, 'event_context': '4-eyJldCI6Im1lc3NhZ2UiLCJ0aWQiOiJUMDEwUVM3VVFOQSIsImFpZCI6IkEwOTlMQUNBQjJSIiwiY2lkIjoiRDA5QTBMRkhLOFIifQ'}
2025-08-21 11:34:04,714 - __main__ - INFO - [main.py:368] - DM Event details: channel=D09A0LFHK8R, user=U01RMTFMALF, ts=1755801242.856029
2025-08-21 11:34:04,714 - slack_bolt.App - DEBUG - [internals.py:41] - Response time: 2 milliseconds
2025-08-21 11:34:04,714 - __main__ - DEBUG - [main.py:369] - DM Event text: What is the source link where you got this data from?
2025-08-21 11:34:04,714 - slack_bolt.App - DEBUG - [client.py:150] - Message processing completed (type: events_api, envelope_id: b6441b58-f82c-4501-97aa-a224f24fe7da)
2025-08-21 11:34:04,714 - utils - DEBUG - [utils.py:27] - Checking message processing: channel=D09A0LFHK8R, ts=1755801242.856029, text='What is the source link where you got this data fr...'
2025-08-21 11:34:04,715 - utils - DEBUG - [utils.py:31] - Message hash: 0209cf555132bd4423f7dd221eb32f86
2025-08-21 11:34:04,715 - utils - DEBUG - [utils.py:53] - Added message to processing cache (total entries: 2)
2025-08-21 11:34:04,715 - __main__ - DEBUG - [main.py:382] - Bot check: bot_id=None, user_id=U01RMTFMALF
2025-08-21 11:34:04,715 - __main__ - DEBUG - [main.py:387] - Question received: 'What is the source link where you got this data from?'
2025-08-21 11:34:04,715 - __main__ - DEBUG - [main.py:393] - Checking user access for DM...
2025-08-21 11:34:04,715 - auth.slack_user_info - DEBUG - [slack_user_info.py:44] - Using cached email for user U01RMTFMALF
2025-08-21 11:34:04,715 - auth.email_whitelist - DEBUG - [email_whitelist.py:57] - Email access granted: alexandr.popov@paramount.com
2025-08-21 11:34:04,715 - __main__ - INFO - [main.py:123] - Access granted to user U01RMTFMALF with email alexandr.popov@paramount.com
2025-08-21 11:34:04,715 - __main__ - DEBUG - [main.py:399] - User access check passed for DM
2025-08-21 11:34:04,716 - __main__ - INFO - [main.py:401] - Processing DM question from user U01RMTFMALF: What is the source link where you got this data from?
2025-08-21 11:34:04,716 - __main__ - DEBUG - [main.py:404] - Starting DM processing...
2025-08-21 11:34:04,716 - __main__ - DEBUG - [main.py:407] - Checking if 'what is the source link where you got this data from?' is an admin command in DM
2025-08-21 11:34:04,716 - __main__ - DEBUG - [main.py:442] - Checking if DM thread is already being processed...
2025-08-21 11:34:04,716 - utils - DEBUG - [utils.py:67] - Managing thread: D09A0LFHK8R:1755801205.002949, action: add, user: U01RMTFMALF
2025-08-21 11:34:04,716 - utils - INFO - [utils.py:94] - Added thread D09A0LFHK8R:1755801205.002949 to active tracking (total: 1)
2025-08-21 11:34:04,716 - __main__ - DEBUG - [main.py:447] - DM thread management check passed
2025-08-21 11:34:04,716 - slack_sdk.web.base_client - DEBUG - [base_client.py:255] - Sending a request - url: https://slack.com/api/reactions.add, query_params: {}, body_params: {'channel': 'D09A0LFHK8R', 'name': 'thinking_face', 'timestamp': '1755801205.002949', 'team_id': 'T010QS7UQNA'}, files: {}, json_body: None, headers: {'Content-Type': 'application/x-www-form-urlencoded', 'Authorization': '(redacted)', 'User-Agent': 'Python/3.12.0 slackclient/3.34.0 Darwin/23.4.0'}
2025-08-21 11:34:05,093 - slack_sdk.web.base_client - DEBUG - [base_client.py:546] - Received the following response - status: 200, headers: {'date': 'Thu, 21 Aug 2025 18:34:05 GMT', 'server': 'Apache', 'vary': 'Accept-Encoding', 'x-slack-req-id': '1180ffcdb91b89817bd04608e06bb5ed', 'x-content-type-options': 'nosniff', 'x-xss-protection': '0', 'pragma': 'no-cache', 'cache-control': 'private, no-cache, no-store, must-revalidate', 'expires': 'Sat, 26 Jul 1997 05:00:00 GMT', 'content-type': 'application/json; charset=utf-8', 'x-accepted-oauth-scopes': 'reactions:write', 'x-oauth-scopes': 'app_mentions:read,channels:history,chat:write,im:history,im:read,im:write,users:read,reactions:write,users:read.email', 'access-control-expose-headers': 'x-slack-req-id, retry-after', 'access-control-allow-headers': 'slack-route, x-slack-version-ts, x-b3-traceid, x-b3-spanid, x-b3-parentspanid, x-b3-sampled, x-b3-flags', 'strict-transport-security': 'max-age=31536000; includeSubDomains; preload', 'referrer-policy': 'no-referrer', 'x-slack-unique-id': 'aKdmnSI2HvytLLg06ihD9QAAACs', 'x-slack-backend': 'r', 'access-control-allow-origin': '*', 'content-length': '11', 'via': '1.1 slack-prod.tinyspeck.com, envoy-www-iad-gmxoowxx,envoy-edge-pdx-kyatlqjp', 'x-envoy-attempt-count': '1', 'x-envoy-upstream-service-time': '141', 'x-backend': 'main_normal main_canary_with_overflow main_control_with_overflow', 'x-server': 'slack-www-hhvm-main-iad-xhyp', 'x-slack-shared-secret-outcome': 'no-match', 'x-edge-backend': 'envoy-www', 'timing-allow-origin': '*', 'x-slack-edge-shared-secret-outcome': 'no-match', 'connection': 'close'}, body: {"ok":true}
2025-08-21 11:34:05,094 - __main__ - INFO - [main.py:464] - Processing DM question from <@U01RMTFMALF>: What is the source link where you got this data from?
2025-08-21 11:34:05,094 - __main__ - INFO - [main.py:468] - Sending DM request to DIG AI...
2025-08-21 11:34:05,094 - dig_connector - INFO - [dig_connector.py:134] - Generating response for query: 'What is the source link where you got this data from?' with 0 chunks
2025-08-21 11:34:05,094 - dig_connector - DEBUG - [dig_connector.py:138] - Formatted context length: 0
2025-08-21 11:34:05,094 - dig_connector - INFO - [dig_connector.py:141] - No context available, using direct query
2025-08-21 11:34:05,094 - dig_connector - INFO - [dig_connector.py:150] - Sending prompt to DIG platform...
2025-08-21 11:34:05,094 - dig_connector - INFO - [dig_connector.py:121] - Sending message to DIG API - URL: https://ai.digdev.cbsicloud.com/fastapi/chats/856/generate
2025-08-21 11:34:05,094 - dig_connector - DEBUG - [dig_connector.py:122] - Message payload: {'model_id': 42, 'message_text': 'What is the source link where you got this data from?', 'history': [{'role': 'user', 'content': 'What is the source link where you got this data from?'}]}
2025-08-21 11:34:10,182 - urllib3.connectionpool - DEBUG - [connectionpool.py:549] - https://ai.digdev.cbsicloud.com:443 "POST /fastapi/chats/856/generate HTTP/1.1" 200 607
2025-08-21 11:34:10,183 - dig_connector - DEBUG - [dig_connector.py:125] - DIG API response: status=200
2025-08-21 11:34:10,184 - dig_connector - DEBUG - [dig_connector.py:129] - DIG API response data: {'message_text': 'The information provided was sourced from:\n\n*   `https://paramount.atlassian.net/wiki/spaces/PLQA/pages/47712177`\n*   `https://paramount.atlassian.net/wiki/spaces/PLQA/pages/159000899`\n*   `https://paramount.atlassian.net/wiki/spaces/PLQA/pages/47715975`\n*   `https://paramount.atlassian.net/wiki/spaces/PLQA/pages/47711460`\n*   `https://paramount.atlassian.net/wiki/spaces/PLQA/pages/47713566`\n*   `https://paramount.atlassian.net/wiki/spaces/PLQA/pages/47719632`\n*   `https://paramount.atlassian.net/wiki/spaces/PLQA/pages/47738761`', 'requires_approval': False, 'execution_id': 1557}
2025-08-21 11:34:10,184 - dig_connector - INFO - [dig_connector.py:154] - Extracting response content...
2025-08-21 11:34:10,184 - dig_connector - DEBUG - [dig_connector.py:221] - Found message_text in response
2025-08-21 11:34:10,184 - dig_connector - INFO - [dig_connector.py:157] - Successfully generated response (length: 534)
2025-08-21 11:34:10,184 - __main__ - INFO - [main.py:471] - Received DM response from DIG AI
2025-08-21 11:34:10,185 - __main__ - DEBUG - [main.py:472] - DIG AI DM response: The information provided was sourced from:

*   `https://paramount.atlassian.net/wiki/spaces/PLQA/pages/47712177`
*   `https://paramount.atlassian.net/wiki/spaces/PLQA/pages/159000899`
*   `https://paramount.atlassian.net/wiki/spaces/PLQA/pages/47715975`
*   `https://paramount.atlassian.net/wiki/spaces/PLQA/pages/47711460`
*   `https://paramount.atlassian.net/wiki/spaces/PLQA/pages/47713566`
*   `https://paramount.atlassian.net/wiki/spaces/PLQA/pages/47719632`
*   `https://paramount.atlassian.net/wiki/spaces/PLQA/pages/47738761`
2025-08-21 11:34:10,185 - __main__ - DEBUG - [main.py:477] - Formatted DM response: *Your Query:* What is the source link where you got this data from?

*Answer:*
The information provided was sourced from:

*   `https://paramount.atlassian.net/wiki/spaces/PLQA/pages/47712177`
*   `https://paramount.atlassian.net/wiki/spaces/PLQA/pages/159000899`
*   `https://paramount.atlassian.net/wiki/spaces/PLQA/pages/47715975`
*   `https://paramount.atlassian.net/wiki/spaces/PLQA/pages/47711460`
*   `https://paramount.atlassian.net/wiki/spaces/PLQA/pages/47713566`
*   `https://paramount.atlassian.net/wiki/spaces/PLQA/pages/47719632`
*   `https://paramount.atlassian.net/wiki/spaces/PLQA/pages/47738761`
2025-08-21 11:34:10,185 - slack_sdk.web.base_client - DEBUG - [base_client.py:255] - Sending a request - url: https://slack.com/api/reactions.remove, query_params: {}, body_params: {'name': 'thinking_face', 'channel': 'D09A0LFHK8R', 'timestamp': '1755801205.002949', 'team_id': 'T010QS7UQNA'}, files: {}, json_body: None, headers: {'Content-Type': 'application/x-www-form-urlencoded', 'Authorization': '(redacted)', 'User-Agent': 'Python/3.12.0 slackclient/3.34.0 Darwin/23.4.0'}
2025-08-21 11:34:10,571 - slack_sdk.web.base_client - DEBUG - [base_client.py:546] - Received the following response - status: 200, headers: {'date': 'Thu, 21 Aug 2025 18:34:10 GMT', 'server': 'Apache', 'vary': 'Accept-Encoding', 'x-slack-req-id': '65f35f489d4dab923da0aa69a72050d8', 'x-content-type-options': 'nosniff', 'x-xss-protection': '0', 'pragma': 'no-cache', 'cache-control': 'private, no-cache, no-store, must-revalidate', 'expires': 'Sat, 26 Jul 1997 05:00:00 GMT', 'content-type': 'application/json; charset=utf-8', 'x-accepted-oauth-scopes': 'reactions:write', 'x-oauth-scopes': 'app_mentions:read,channels:history,chat:write,im:history,im:read,im:write,users:read,reactions:write,users:read.email', 'access-control-expose-headers': 'x-slack-req-id, retry-after', 'access-control-allow-headers': 'slack-route, x-slack-version-ts, x-b3-traceid, x-b3-spanid, x-b3-parentspanid, x-b3-sampled, x-b3-flags', 'strict-transport-security': 'max-age=31536000; includeSubDomains; preload', 'referrer-policy': 'no-referrer', 'x-slack-unique-id': 'aKdmopCvi-7hIAxKbNGfWwAAEDQ', 'x-slack-backend': 'r', 'access-control-allow-origin': '*', 'content-length': '11', 'via': '1.1 slack-prod.tinyspeck.com, envoy-www-iad-hsxlstik,envoy-edge-pdx-bohtpkie', 'x-envoy-attempt-count': '1', 'x-envoy-upstream-service-time': '163', 'x-backend': 'main_normal main_canary_with_overflow main_control_with_overflow', 'x-server': 'slack-www-hhvm-main-iad-wmao', 'x-slack-shared-secret-outcome': 'no-match', 'x-edge-backend': 'envoy-www', 'timing-allow-origin': '*', 'x-slack-edge-shared-secret-outcome': 'no-match', 'connection': 'close'}, body: {"ok":true}
2025-08-21 11:34:10,572 - slack_sdk.web.base_client - DEBUG - [base_client.py:255] - Sending a request - url: https://slack.com/api/chat.postMessage, query_params: {}, body_params: {}, files: {}, json_body: {'channel': 'D09A0LFHK8R', 'text': '*Your Query:* What is the source link where you got this data from?\n\n*Answer:*\nThe information provided was sourced from:\n\n*   `https://paramount.atlassian.net/wiki/spaces/PLQA/pages/47712177`\n*   `https://paramount.atlassian.net/wiki/spaces/PLQA/pages/159000899`\n*   `https://paramount.atlassian.net/wiki/spaces/PLQA/pages/47715975`\n*   `https://paramount.atlassian.net/wiki/spaces/PLQA/pages/47711460`\n*   `https://paramount.atlassian.net/wiki/spaces/PLQA/pages/47713566`\n*   `https://paramount.atlassian.net/wiki/spaces/PLQA/pages/47719632`\n*   `https://paramount.atlassian.net/wiki/spaces/PLQA/pages/47738761`', 'thread_ts': '1755801205.002949', 'team_id': 'T010QS7UQNA'}, headers: {'Content-Type': 'application/json;charset=utf-8', 'Authorization': '(redacted)', 'User-Agent': 'Python/3.12.0 slackclient/3.34.0 Darwin/23.4.0'}
2025-08-21 11:34:10,980 - slack_sdk.web.base_client - DEBUG - [base_client.py:546] - Received the following response - status: 200, headers: {'date': 'Thu, 21 Aug 2025 18:34:11 GMT', 'server': 'Apache', 'vary': 'Accept-Encoding', 'x-slack-req-id': 'a252ffa3d0f175df087a641439b59bac', 'x-content-type-options': 'nosniff', 'x-xss-protection': '0', 'pragma': 'no-cache', 'cache-control': 'private, no-cache, no-store, must-revalidate', 'expires': 'Sat, 26 Jul 1997 05:00:00 GMT', 'content-type': 'application/json; charset=utf-8', 'x-accepted-oauth-scopes': 'chat:write', 'x-oauth-scopes': 'app_mentions:read,channels:history,chat:write,im:history,im:read,im:write,users:read,reactions:write,users:read.email', 'access-control-expose-headers': 'x-slack-req-id, retry-after', 'access-control-allow-headers': 'slack-route, x-slack-version-ts, x-b3-traceid, x-b3-spanid, x-b3-parentspanid, x-b3-sampled, x-b3-flags', 'strict-transport-security': 'max-age=31536000; includeSubDomains; preload', 'referrer-policy': 'no-referrer', 'x-slack-unique-id': 'aKdmojMv5bdfpbAY6yODSAAAEAc', 'x-slack-backend': 'r', 'access-control-allow-origin': '*', 'content-length': '2645', 'via': '1.1 slack-prod.tinyspeck.com, envoy-www-iad-eahugxns,envoy-edge-pdx-dltvtwor', 'x-envoy-attempt-count': '1', 'x-envoy-upstream-service-time': '170', 'x-backend': 'main_normal main_canary_with_overflow main_control_with_overflow', 'x-server': 'slack-www-hhvm-main-iad-mjrf', 'x-slack-shared-secret-outcome': 'no-match', 'x-edge-backend': 'envoy-www', 'timing-allow-origin': '*', 'x-slack-edge-shared-secret-outcome': 'no-match', 'connection': 'close'}, body: {"ok":true,"channel":"D09A0LFHK8R","ts":"1755801250.966129","message":{"user":"U099R6WTZ9S","type":"message","ts":"1755801250.966129","bot_id":"B099R6WTRU4","app_id":"A099LACAB2R","text":"*Your Query:* What is the source link where you got this data from?\n\n*Answer:*\nThe information provided was sourced from:\n\n*   `<https://paramount.atlassian.net/wiki/spaces/PLQA/pages/47712177>`\n*   `<https://paramount.atlassian.net/wiki/spaces/PLQA/pages/159000899>`\n*   `<https://paramount.atlassian.net/wiki/spaces/PLQA/pages/47715975>`\n*   `<https://paramount.atlassian.net/wiki/spaces/PLQA/pages/47711460>`\n*   `<https://paramount.atlassian.net/wiki/spaces/PLQA/pages/47713566>`\n*   `<https://paramount.atlassian.net/wiki/spaces/PLQA/pages/47719632>`\n*   `<https://paramount.atlassian.net/wiki/spaces/PLQA/pages/47738761>`","team":"T010QS7UQNA","bot_profile":{"id":"B099R6WTRU4","app_id":"A099LACAB2R","user_id":"U099R6WTZ9S","name":"AutoBot","icons":{"image_36":"https://a.slack-edge.com/80588/img/plugins/app/bot_36.png","image_48":"https://a.slack-edge.com/80588/img/plugins/app/bot_48.png","image_72":"https://a.slack-edge.com/80588/img/plugins/app/service_72.png"},"deleted":false,"updated":1754677948,"team_id":"T010QS7UQNA"},"thread_ts":"1755801205.002949","parent_user_id":"U01RMTFMALF","blocks":[{"type":"rich_text","block_id":"Uqk9d","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Your Query:","style":{"bold":true}},{"type":"text","text":" What is the source link where you got this data from?\n\n"},{"type":"text","text":"Answer:","style":{"bold":true}},{"type":"text","text":"\nThe information provided was sourced from:\n\n*   "},{"type":"link","url":"https://paramount.atlassian.net/wiki/spaces/PLQA/pages/47712177","style":{"code":true}},{"type":"text","text":"\n*   "},{"type":"link","url":"https://paramount.atlassian.net/wiki/spaces/PLQA/pages/159000899","style":{"code":true}},{"type":"text","text":"\n*   "},{"type":"link","url":"https://paramount.atlassian.net/wiki/spaces/PLQA/pages/47715975","style":{"code":true}},{"type":"text","text":"\n*   "},{"type":"link","url":"https://paramount.atlassian.net/wiki/spaces/PLQA/pages/47711460","style":{"code":true}},{"type":"text","text":"\n*   "},{"type":"link","url":"https://paramount.atlassian.net/wiki/spaces/PLQA/pages/47713566","style":{"code":true}},{"type":"text","text":"\n*   "},{"type":"link","url":"https://paramount.atlassian.net/wiki/spaces/PLQA/pages/47719632","style":{"code":true}},{"type":"text","text":"\n*   "},{"type":"link","url":"https://paramount.atlassian.net/wiki/spaces/PLQA/pages/47738761","style":{"code":true}}]}]}]}}
2025-08-21 11:34:10,982 - __main__ - DEBUG - [main.py:502] - Cleaning up DM thread tracking...
2025-08-21 11:34:10,982 - utils - DEBUG - [utils.py:67] - Managing thread: D09A0LFHK8R:1755801205.002949, action: remove, user: U01RMTFMALF
2025-08-21 11:34:10,982 - utils - INFO - [utils.py:100] - Removed thread D09A0LFHK8R:1755801205.002949 from active tracking (remaining: 0)
2025-08-21 11:34:12,063 - slack_bolt.App - DEBUG - [client.py:235] - on_message invoked: (message: {"envelope_id":"74d278d9-25ba-45e3-955e-4814fafb1479","payload":{"token":"yq71khZBCyJF1Ri2hG5aNqr5","team_id":"T010QS7UQNA","enterprise_id":"ERV4P7NAD","context_team_id":null,"context_enterprise_id":"ERV4P7NAD","api_app_id":"A099LACAB2R","event":{"user":"U099R6WTZ9S","type":"message","ts":"1755801250.966129","bot_id":"B099R6WTRU4","app_id":"A099LACAB2R","text":"*Your Query:* What is the source link where you got this data from?\n\n*Answer:*\nThe information provided was sourced from:\n\n*   `<https:\/\/paramount.atlassian.net\/wiki\/spaces\/PLQA\/pages\/47712177>`\n*   `<https:\/\/paramount.atlassian.net\/wiki\/spaces\/PLQA\/pages\/159000899>`\n*   `<https:\/\/paramount.atlassian.net\/wiki\/spaces\/PLQA\/pages\/47715975>`\n*   `<https:\/\/paramount.atlassian.net\/wiki\/spaces\/PLQA\/pages\/47711460>`\n*   `<https:\/\/paramount.atlassian.net\/wiki\/spaces\/PLQA\/pages\/47713566>`\n*   `<https:\/\/paramount.atlassian.net\/wiki\/spaces\/PLQA\/pages\/47719632>`\n*   `<https:\/\/paramount.atlassian.net\/wiki\/spaces\/PLQA\/pages\/47738761>`","team":"T010QS7UQNA","bot_profile":{"id":"B099R6WTRU4","deleted":false,"name":"AutoBot","updated":1754677948,"app_id":"A099LACAB2R","user_id":"U099R6WTZ9S","icons":{"image_36":"https:\/\/a.slack-edge.com\/80588\/img\/plugins\/app\/bot_36.png","image_48":"https:\/\/a.slack-edge.com\/80588\/img\/plugins\/app\/bot_48.png","image_72":"https:\/\/a.slack-edge.com\/80588\/img\/plugins\/app\/service_72.png"},"team_id":"T010QS7UQNA"},"thread_ts":"1755801205.002949","parent_user_id":"U01RMTFMALF","blocks":[{"type":"rich_text","block_id":"lHn","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Your Query:","style":{"bold":true}},{"type":"text","text":" What is the source link where you got this data from?\n\n"},{"type":"text","text":"Answer:","style":{"bold":true}},{"type":"text","text":"\nThe information provided was sourced from:\n\n*   "},{"type":"link","url":"https:\/\/paramount.atlassian.net\/wiki\/spaces\/PLQA\/pages\/47712177","style":{"code":true}},{"type":"text","text":"\n*   "},{"type":"link","url":"https:\/\/paramount.atlassian.net\/wiki\/spaces\/PLQA\/pages\/159000899","style":{"code":true}},{"type":"text","text":"\n*   "},{"type":"link","url":"https:\/\/paramount.atlassian.net\/wiki\/spaces\/PLQA\/pages\/47715975","style":{"code":true}},{"type":"text","text":"\n*   "},{"type":"link","url":"https:\/\/paramount.atlassian.net\/wiki\/spaces\/PLQA\/pages\/47711460","style":{"code":true}},{"type":"text","text":"\n*   "},{"type":"link","url":"https:\/\/paramount.atlassian.net\/wiki\/spaces\/PLQA\/pages\/47713566","style":{"code":true}},{"type":"text","text":"\n*   "},{"type":"link","url":"https:\/\/paramount.atlassian.net\/wiki\/spaces\/PLQA\/pages\/47719632","style":{"code":true}},{"type":"text","text":"\n*   "},{"type":"link","url":"https:\/\/paramount.atlassian.net\/wiki\/spaces\/PLQA\/pages\/47738761","style":{"code":true}}]}]}],"channel":"D09A0LFHK8R","event_ts":"1755801250.966129","channel_type":"im"},"type":"event_callback","event_id":"Ev09BG4C4W90","event_time":1755801250,"authorizations":[{"enterprise_id":"ERV4P7NAD","team_id":"T010QS7UQNA","user_id":"U099R6WTZ9S","is_bot":true,"is_enterprise_install":false}],"is_ext_shared_channel":false,"event_context":"4-eyJldCI6Im1lc3NhZ2UiLCJ0aWQiOiJUMDEwUVM3VVFOQSIsImFpZCI6IkEwOTlMQUNBQjJSIiwiY2lkIjoiRDA5QTBMRkhLOFIifQ"},"type":"events_api","accepts_response_payload":false,"retry_attempt":0,"retry_reason":""})
2025-08-21 11:34:12,064 - slack_bolt.App - DEBUG - [client.py:99] - A new message enqueued (current queue size: 1)
2025-08-21 11:34:12,064 - slack_bolt.App - DEBUG - [client.py:105] - A message dequeued (current queue size: 0)
2025-08-21 11:34:12,065 - slack_bolt.App - DEBUG - [client.py:125] - Message processing started (type: events_api, envelope_id: 74d278d9-25ba-45e3-955e-4814fafb1479)
2025-08-21 11:34:12,065 - slack_bolt.App - DEBUG - [app.py:476] - Applying slack_bolt.middleware.ssl_check.ssl_check.SslCheck
2025-08-21 11:34:12,065 - slack_bolt.App - DEBUG - [app.py:476] - Applying slack_bolt.middleware.request_verification.request_verification.RequestVerification
2025-08-21 11:34:12,066 - slack_bolt.App - DEBUG - [app.py:476] - Applying slack_bolt.middleware.authorization.single_team_authorization.SingleTeamAuthorization
2025-08-21 11:34:12,066 - slack_bolt.App - DEBUG - [app.py:476] - Applying slack_bolt.middleware.ignoring_self_events.ignoring_self_events.IgnoringSelfEvents
2025-08-21 11:34:12,066 - slack_bolt.IgnoringSelfEvents - DEBUG - [ignoring_self_events.py:60] - Skipped self event: {'user': 'U099R6WTZ9S', 'type': 'message', 'ts': '1755801250.966129', 'bot_id': 'B099R6WTRU4', 'app_id': 'A099LACAB2R', 'text': '*Your Query:* What is the source link where you got this data from?\n\n*Answer:*\nThe information provided was sourced from:\n\n*   `<https://paramount.atlassian.net/wiki/spaces/PLQA/pages/47712177>`\n*   `<https://paramount.atlassian.net/wiki/spaces/PLQA/pages/159000899>`\n*   `<https://paramount.atlassian.net/wiki/spaces/PLQA/pages/47715975>`\n*   `<https://paramount.atlassian.net/wiki/spaces/PLQA/pages/47711460>`\n*   `<https://paramount.atlassian.net/wiki/spaces/PLQA/pages/47713566>`\n*   `<https://paramount.atlassian.net/wiki/spaces/PLQA/pages/47719632>`\n*   `<https://paramount.atlassian.net/wiki/spaces/PLQA/pages/47738761>`', 'team': 'T010QS7UQNA', 'bot_profile': {'id': 'B099R6WTRU4', 'deleted': False, 'name': 'AutoBot', 'updated': 1754677948, 'app_id': 'A099LACAB2R', 'user_id': 'U099R6WTZ9S', 'icons': {'image_36': 'https://a.slack-edge.com/80588/img/plugins/app/bot_36.png', 'image_48': 'https://a.slack-edge.com/80588/img/plugins/app/bot_48.png', 'image_72': 'https://a.slack-edge.com/80588/img/plugins/app/service_72.png'}, 'team_id': 'T010QS7UQNA'}, 'thread_ts': '1755801205.002949', 'parent_user_id': 'U01RMTFMALF', 'blocks': [{'type': 'rich_text', 'block_id': 'lHn', 'elements': [{'type': 'rich_text_section', 'elements': [{'type': 'text', 'text': 'Your Query:', 'style': {'bold': True}}, {'type': 'text', 'text': ' What is the source link where you got this data from?\n\n'}, {'type': 'text', 'text': 'Answer:', 'style': {'bold': True}}, {'type': 'text', 'text': '\nThe information provided was sourced from:\n\n*   '}, {'type': 'link', 'url': 'https://paramount.atlassian.net/wiki/spaces/PLQA/pages/47712177', 'style': {'code': True}}, {'type': 'text', 'text': '\n*   '}, {'type': 'link', 'url': 'https://paramount.atlassian.net/wiki/spaces/PLQA/pages/159000899', 'style': {'code': True}}, {'type': 'text', 'text': '\n*   '}, {'type': 'link', 'url': 'https://paramount.atlassian.net/wiki/spaces/PLQA/pages/47715975', 'style': {'code': True}}, {'type': 'text', 'text': '\n*   '}, {'type': 'link', 'url': 'https://paramount.atlassian.net/wiki/spaces/PLQA/pages/47711460', 'style': {'code': True}}, {'type': 'text', 'text': '\n*   '}, {'type': 'link', 'url': 'https://paramount.atlassian.net/wiki/spaces/PLQA/pages/47713566', 'style': {'code': True}}, {'type': 'text', 'text': '\n*   '}, {'type': 'link', 'url': 'https://paramount.atlassian.net/wiki/spaces/PLQA/pages/47719632', 'style': {'code': True}}, {'type': 'text', 'text': '\n*   '}, {'type': 'link', 'url': 'https://paramount.atlassian.net/wiki/spaces/PLQA/pages/47738761', 'style': {'code': True}}]}]}], 'channel': 'D09A0LFHK8R', 'event_ts': '1755801250.966129', 'channel_type': 'im'}
2025-08-21 11:34:12,066 - slack_bolt.App - DEBUG - [client.py:200] - Sending a message (session id: c2814dc4-78ad-4dc6-bd76-d8979ee0a38d, message: {"envelope_id": "74d278d9-25ba-45e3-955e-4814fafb1479"})
2025-08-21 11:34:12,067 - slack_bolt.App - DEBUG - [internals.py:41] - Response time: 1 milliseconds
2025-08-21 11:34:12,067 - slack_bolt.App - DEBUG - [client.py:150] - Message processing completed (type: events_api, envelope_id: 74d278d9-25ba-45e3-955e-4814fafb1479)
2025-08-21 11:34:48,661 - __main__ - INFO - [main.py:43] - Loading application configuration...
2025-08-21 11:34:48,661 - __main__ - INFO - [main.py:45] - Configuration loaded successfully
2025-08-21 11:34:48,661 - __main__ - INFO - [main.py:48] - Initializing security components...
2025-08-21 11:34:48,661 - __main__ - DEBUG - [main.py:50] - Slack validator initialized
2025-08-21 11:34:48,661 - security.content_filter - INFO - [content_filter.py:39] - Content filter initialized with 11 patterns
2025-08-21 11:34:48,661 - __main__ - DEBUG - [main.py:53] - Content filter initialized
2025-08-21 11:34:48,661 - auth.admin_manager - INFO - [admin_manager.py:27] - Admin manager initialized with 2 admin users
2025-08-21 11:34:48,661 - __main__ - DEBUG - [main.py:56] - Admin manager initialized
2025-08-21 11:34:48,661 - auth.email_whitelist - INFO - [email_whitelist.py:28] - Email whitelist initialized with 1 whitelisted emails
2025-08-21 11:34:48,661 - auth.email_whitelist - INFO - [email_whitelist.py:37] - Whitelisted domains: paramount.com
2025-08-21 11:34:48,661 - __main__ - DEBUG - [main.py:59] - Email whitelist initialized with 1 emails
2025-08-21 11:34:48,661 - auth.slack_user_info - DEBUG - [slack_user_info.py:25] - Slack user info manager initialized
2025-08-21 11:34:48,661 - __main__ - DEBUG - [main.py:62] - Slack user info manager initialized
2025-08-21 11:34:48,661 - __main__ - INFO - [main.py:63] - Security components initialized successfully
2025-08-21 11:34:48,661 - __main__ - INFO - [main.py:66] - Initializing Slack app...
2025-08-21 11:34:48,697 - slack_bolt.App - DEBUG - [base_client.py:255] - Sending a request - url: https://slack.com/api/auth.test, query_params: {}, body_params: {}, files: {}, json_body: None, headers: {'Content-Type': 'application/x-www-form-urlencoded', 'Authorization': '(redacted)', 'User-Agent': 'Bolt/1.16.0 Python/3.12.0 slackclient/3.34.0 Darwin/23.4.0'}
2025-08-21 11:34:48,989 - slack_bolt.App - DEBUG - [base_client.py:546] - Received the following response - status: 200, headers: {'date': 'Thu, 21 Aug 2025 18:34:49 GMT', 'server': 'Apache', 'vary': 'Accept-Encoding', 'x-slack-req-id': '42628b98cd2a5f0f29712cf89d384b66', 'x-content-type-options': 'nosniff', 'x-xss-protection': '0', 'pragma': 'no-cache', 'cache-control': 'private, no-cache, no-store, must-revalidate', 'expires': 'Sat, 26 Jul 1997 05:00:00 GMT', 'content-type': 'application/json; charset=utf-8', 'x-oauth-scopes': 'app_mentions:read,channels:history,chat:write,im:history,im:read,im:write,users:read,reactions:write,users:read.email', 'access-control-expose-headers': 'x-slack-req-id, retry-after', 'access-control-allow-headers': 'slack-route, x-slack-version-ts, x-b3-traceid, x-b3-spanid, x-b3-parentspanid, x-b3-sampled, x-b3-flags', 'strict-transport-security': 'max-age=31536000; includeSubDomains; preload', 'referrer-policy': 'no-referrer', 'x-slack-unique-id': 'aKdmyen0lmEcqDEfpDATmgAAEBE', 'x-slack-backend': 'r', 'access-control-allow-origin': '*', 'content-length': '228', 'via': '1.1 slack-prod.tinyspeck.com, envoy-www-iad-ivetkwxm,envoy-edge-pdx-urkxyuvo', 'x-envoy-attempt-count': '1', 'x-envoy-upstream-service-time': '83', 'x-backend': 'main_normal main_canary_with_overflow main_control_with_overflow', 'x-server': 'slack-www-hhvm-main-iad-uomw', 'x-slack-shared-secret-outcome': 'no-match', 'x-edge-backend': 'envoy-www', 'timing-allow-origin': '*', 'x-slack-edge-shared-secret-outcome': 'no-match', 'connection': 'close'}, body: {"ok":true,"url":"https://viacomcbs-grid-test.slack.com/","team":"Test Workspace","user":"autobot","team_id":"T010QS7UQNA","user_id":"U099R6WTZ9S","bot_id":"B099R6WTRU4","enterprise_id":"ERV4P7NAD","is_enterprise_install":false}
2025-08-21 11:34:48,989 - __main__ - INFO - [main.py:68] - Slack app initialized successfully
2025-08-21 11:34:48,989 - __main__ - DEBUG - [main.py:72] - Message deduplication cache initialized
2025-08-21 11:34:48,989 - __main__ - DEBUG - [main.py:77] - Thread tracking initialized
2025-08-21 11:34:48,989 - __main__ - INFO - [main.py:80] - Initializing DIG AI integration...
2025-08-21 11:34:48,989 - __main__ - INFO - [main.py:83] - DIG AI is enabled, setting up connector...
2025-08-21 11:34:48,990 - dig_connector - INFO - [dig_connector.py:287] - Initializing DIG AI with model ID: 42
2025-08-21 11:34:48,990 - dig_connector - INFO - [dig_connector.py:49] - Starting DIG chat session initialization...
2025-08-21 11:34:48,990 - dig_connector - DEBUG - [dig_connector.py:52] - Creating chat with name: Slack Bot Session 2025-08-21T18:34:48.990155+00:00
2025-08-21 11:34:48,990 - dig_connector - DEBUG - [dig_connector.py:63] - Creating chat - URL: https://ai.digdev.cbsicloud.com/fastapi/chats, Payload: {'chat_nm': 'Slack Bot Session 2025-08-21T18:34:48.990155+00:00', 'model_id': 42}
2025-08-21 11:34:48,991 - urllib3.connectionpool - DEBUG - [connectionpool.py:1055] - Starting new HTTPS connection (1): ai.digdev.cbsicloud.com:443
2025-08-21 11:34:49,247 - urllib3.connectionpool - DEBUG - [connectionpool.py:549] - https://ai.digdev.cbsicloud.com:443 "POST /fastapi/chats HTTP/1.1" 200 217
2025-08-21 11:34:49,248 - dig_connector - DEBUG - [dig_connector.py:66] - Create chat response: status=200
2025-08-21 11:34:49,248 - dig_connector - INFO - [dig_connector.py:54] - Successfully initialized DIG chat session with ID: 857
2025-08-21 11:34:49,248 - __main__ - INFO - [main.py:86] - DIG AI integration successfully initialized
2025-08-21 11:34:49,249 - __main__ - INFO - [main.py:92] - Setting up event handlers...
2025-08-21 11:34:49,250 - __main__ - INFO - [main.py:610] - Starting AI Assistant Bot...
2025-08-21 11:34:49,250 - __main__ - INFO - [main.py:611] - Registering event handlers...
2025-08-21 11:34:49,250 - __main__ - DEBUG - [main.py:612] - Event handlers registered: app_mention, message, app_home_opened
2025-08-21 11:34:49,250 - __main__ - INFO - [main.py:615] - Connecting to Slack via Socket Mode...
2025-08-21 11:34:49,251 - __main__ - INFO - [main.py:619] - Socket Mode handler created successfully
2025-08-21 11:34:49,251 - __main__ - INFO - [main.py:621] - ✅ Bot is now running and listening for events!
2025-08-21 11:34:49,251 - slack_bolt.App - DEBUG - [base_client.py:255] - Sending a request - url: https://slack.com/api/apps.connections.open, query_params: {}, body_params: {}, files: {}, json_body: None, headers: {'Content-Type': 'application/x-www-form-urlencoded', 'Authorization': '(redacted)', 'User-Agent': 'Bolt/1.16.0 Python/3.12.0 slackclient/3.34.0 Darwin/23.4.0'}
2025-08-21 11:34:49,547 - slack_bolt.App - DEBUG - [base_client.py:546] - Received the following response - status: 200, headers: {'date': 'Thu, 21 Aug 2025 18:34:49 GMT', 'server': 'Apache', 'vary': 'Accept-Encoding', 'x-slack-req-id': 'b927f7ed1eb2a00fb7785eea73926770', 'x-content-type-options': 'nosniff', 'x-xss-protection': '0', 'x-robots-tag': 'noindex,nofollow', 'pragma': 'no-cache', 'cache-control': 'private, no-cache, no-store, must-revalidate', 'expires': 'Sat, 26 Jul 1997 05:00:00 GMT', 'content-type': 'application/json; charset=utf-8', 'x-accepted-oauth-scopes': 'connections:write', 'x-oauth-scopes': 'connections:write', 'access-control-expose-headers': 'x-slack-req-id, retry-after', 'access-control-allow-headers': 'slack-route, x-slack-version-ts, x-b3-traceid, x-b3-spanid, x-b3-parentspanid, x-b3-sampled, x-b3-flags', 'strict-transport-security': 'max-age=31536000; includeSubDomains; preload', 'referrer-policy': 'no-referrer', 'x-slack-unique-id': 'aKdmyQjTYn2wip4N8GwLEQAAEDE', 'x-slack-backend': 'r', 'access-control-allow-origin': '*', 'content-length': '173', 'via': '1.1 slack-prod.tinyspeck.com, envoy-www-iad-lntkdbzn,envoy-edge-pdx-dxjonhof', 'x-envoy-attempt-count': '1', 'x-envoy-upstream-service-time': '82', 'x-backend': 'main_normal main_canary_with_overflow main_control_with_overflow', 'x-server': 'slack-www-hhvm-main-iad-avks', 'x-slack-shared-secret-outcome': 'no-match', 'x-edge-backend': 'envoy-www', 'timing-allow-origin': '*', 'x-slack-edge-shared-secret-outcome': 'no-match', 'connection': 'close'}, body: {"ok":true,"url":"wss:\/\/wss-primary.slack.com\/link\/?ticket=661c9f96-392b-48ef-96b4-2cfcc85003eb&app_id=a6c8d361ee1c6f398c5b4afec831555b78d7affa753b16bcc0fc64d7c13f3766"}
2025-08-21 11:34:50,078 - slack_bolt.App - INFO - [client.py:192] - A new session has been established (session id: f3995ac4-d679-48ce-ad2f-215c021f424a)
2025-08-21 11:34:50,079 - slack_bolt.App - INFO - [base_handler.py:50] - ⚡️ Bolt app is running!
2025-08-21 11:34:50,176 - slack_bolt.App - INFO - [client.py:265] - Starting to receive messages from a new connection (session id: f3995ac4-d679-48ce-ad2f-215c021f424a)
2025-08-21 11:34:50,177 - slack_bolt.App - DEBUG - [client.py:235] - on_message invoked: (message: {"type":"hello","num_connections":2,"debug_info":{"host":"applink-14","build_number":0,"approximate_connection_time":18060},"connection_info":{"app_id":"A099LACAB2R"}})
2025-08-21 11:34:50,177 - slack_bolt.App - DEBUG - [client.py:99] - A new message enqueued (current queue size: 1)
2025-08-21 11:34:50,177 - slack_bolt.App - DEBUG - [client.py:105] - A message dequeued (current queue size: 0)
2025-08-21 11:34:50,179 - slack_bolt.App - DEBUG - [client.py:125] - Message processing started (type: hello, envelope_id: None)
2025-08-21 11:34:50,179 - slack_bolt.App - DEBUG - [client.py:150] - Message processing completed (type: hello, envelope_id: None)
2025-08-21 11:35:08,611 - slack_bolt.App - DEBUG - [client.py:235] - on_message invoked: (message: {"envelope_id":"19b245b3-5dc6-44a9-ac83-90fcbe3f68c1","payload":{"token":"yq71khZBCyJF1Ri2hG5aNqr5","team_id":"T010QS7UQNA","enterprise_id":"ERV4P7NAD","context_team_id":null,"context_enterprise_id":"ERV4P7NAD","api_app_id":"A099LACAB2R","event":{"user":"U01RMTFMALF","type":"message","ts":"1755801292.462349","client_msg_id":"b7a3af3d-ac77-4a15-a4e1-e5af0f86b300","text":"How to connect an iOS device?","blocks":[{"type":"rich_text","block_id":"rRS58","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"How to connect an iOS device?"}]}]}],"channel":"D09A0LFHK8R","event_ts":"1755801292.462349","channel_type":"im"},"type":"event_callback","event_id":"Ev09BJ2FR2KY","event_time":1755801292,"authorizations":[{"enterprise_id":"ERV4P7NAD","team_id":"T010QS7UQNA","user_id":"U099R6WTZ9S","is_bot":true,"is_enterprise_install":false}],"is_ext_shared_channel":false,"event_context":"4-eyJldCI6Im1lc3NhZ2UiLCJ0aWQiOiJUMDEwUVM3VVFOQSIsImFpZCI6IkEwOTlMQUNBQjJSIiwiY2lkIjoiRDA5QTBMRkhLOFIifQ"},"type":"events_api","accepts_response_payload":false,"retry_attempt":0,"retry_reason":""})
2025-08-21 11:35:08,613 - slack_bolt.App - DEBUG - [client.py:99] - A new message enqueued (current queue size: 1)
2025-08-21 11:35:08,613 - slack_bolt.App - DEBUG - [client.py:105] - A message dequeued (current queue size: 0)
2025-08-21 11:35:08,614 - slack_bolt.App - DEBUG - [client.py:125] - Message processing started (type: events_api, envelope_id: 19b245b3-5dc6-44a9-ac83-90fcbe3f68c1)
2025-08-21 11:35:08,615 - slack_bolt.App - DEBUG - [app.py:476] - Applying slack_bolt.middleware.ssl_check.ssl_check.SslCheck
2025-08-21 11:35:08,615 - slack_bolt.App - DEBUG - [app.py:476] - Applying slack_bolt.middleware.request_verification.request_verification.RequestVerification
2025-08-21 11:35:08,615 - slack_bolt.App - DEBUG - [app.py:476] - Applying slack_bolt.middleware.authorization.single_team_authorization.SingleTeamAuthorization
2025-08-21 11:35:08,616 - slack_bolt.App - DEBUG - [app.py:476] - Applying slack_bolt.middleware.ignoring_self_events.ignoring_self_events.IgnoringSelfEvents
2025-08-21 11:35:08,616 - slack_bolt.App - DEBUG - [app.py:476] - Applying slack_bolt.middleware.url_verification.url_verification.UrlVerification
2025-08-21 11:35:08,616 - slack_bolt.App - DEBUG - [app.py:500] - Checking listener: handle_app_mentions ...
2025-08-21 11:35:08,616 - slack_bolt.App - DEBUG - [app.py:500] - Checking listener: help_message ...
2025-08-21 11:35:08,617 - slack_bolt.App - DEBUG - [app.py:500] - Checking listener: handle_dm_messages ...
2025-08-21 11:35:08,617 - slack_bolt.App - DEBUG - [app.py:522] - Running listener: handle_dm_messages ...
2025-08-21 11:35:08,618 - __main__ - INFO - [main.py:358] - === DM MESSAGE EVENT RECEIVED ===
2025-08-21 11:35:08,618 - slack_bolt.App - DEBUG - [thread_runner.py:198] - Responding with status: 200 body: "" (0 millis)
2025-08-21 11:35:08,618 - __main__ - DEBUG - [main.py:359] - Full event body: {'token': 'yq71khZBCyJF1Ri2hG5aNqr5', 'team_id': 'T010QS7UQNA', 'enterprise_id': 'ERV4P7NAD', 'context_team_id': None, 'context_enterprise_id': 'ERV4P7NAD', 'api_app_id': 'A099LACAB2R', 'event': {'user': 'U01RMTFMALF', 'type': 'message', 'ts': '1755801292.462349', 'client_msg_id': 'b7a3af3d-ac77-4a15-a4e1-e5af0f86b300', 'text': 'How to connect an iOS device?', 'blocks': [{'type': 'rich_text', 'block_id': 'rRS58', 'elements': [{'type': 'rich_text_section', 'elements': [{'type': 'text', 'text': 'How to connect an iOS device?'}]}]}], 'channel': 'D09A0LFHK8R', 'event_ts': '1755801292.462349', 'channel_type': 'im'}, 'type': 'event_callback', 'event_id': 'Ev09BJ2FR2KY', 'event_time': 1755801292, 'authorizations': [{'enterprise_id': 'ERV4P7NAD', 'team_id': 'T010QS7UQNA', 'user_id': 'U099R6WTZ9S', 'is_bot': True, 'is_enterprise_install': False}], 'is_ext_shared_channel': False, 'event_context': '4-eyJldCI6Im1lc3NhZ2UiLCJ0aWQiOiJUMDEwUVM3VVFOQSIsImFpZCI6IkEwOTlMQUNBQjJSIiwiY2lkIjoiRDA5QTBMRkhLOFIifQ'}
2025-08-21 11:35:08,619 - slack_bolt.App - DEBUG - [client.py:200] - Sending a message (session id: f3995ac4-d679-48ce-ad2f-215c021f424a, message: {"envelope_id": "19b245b3-5dc6-44a9-ac83-90fcbe3f68c1"})
2025-08-21 11:35:08,619 - __main__ - INFO - [main.py:368] - DM Event details: channel=D09A0LFHK8R, user=U01RMTFMALF, ts=1755801292.462349
2025-08-21 11:35:08,620 - __main__ - DEBUG - [main.py:369] - DM Event text: How to connect an iOS device?
2025-08-21 11:35:08,620 - utils - DEBUG - [utils.py:27] - Checking message processing: channel=D09A0LFHK8R, ts=1755801292.462349, text='How to connect an iOS device?...'
2025-08-21 11:35:08,620 - slack_bolt.App - DEBUG - [internals.py:41] - Response time: 5 milliseconds
2025-08-21 11:35:08,620 - utils - DEBUG - [utils.py:31] - Message hash: 52da856dc52eeabd6e2d5a10d8c14b04
2025-08-21 11:35:08,620 - slack_bolt.App - DEBUG - [client.py:150] - Message processing completed (type: events_api, envelope_id: 19b245b3-5dc6-44a9-ac83-90fcbe3f68c1)
2025-08-21 11:35:08,620 - utils - DEBUG - [utils.py:53] - Added message to processing cache (total entries: 1)
2025-08-21 11:35:08,620 - __main__ - DEBUG - [main.py:382] - Bot check: bot_id=None, user_id=U01RMTFMALF
2025-08-21 11:35:08,621 - __main__ - DEBUG - [main.py:387] - Question received: 'How to connect an iOS device?'
2025-08-21 11:35:08,621 - __main__ - DEBUG - [main.py:393] - Checking user access for DM...
2025-08-21 11:35:08,621 - auth.slack_user_info - DEBUG - [slack_user_info.py:48] - Fetching user info for user_id: U01RMTFMALF
2025-08-21 11:35:08,621 - slack_sdk.web.base_client - DEBUG - [base_client.py:255] - Sending a request - url: https://slack.com/api/users.info, query_params: {}, body_params: {'user': 'U01RMTFMALF', 'team_id': 'T010QS7UQNA'}, files: {}, json_body: None, headers: {'Content-Type': 'application/x-www-form-urlencoded', 'Authorization': '(redacted)', 'User-Agent': 'Python/3.12.0 slackclient/3.34.0 Darwin/23.4.0'}
2025-08-21 11:35:08,964 - slack_sdk.web.base_client - DEBUG - [base_client.py:546] - Received the following response - status: 200, headers: {'date': 'Thu, 21 Aug 2025 18:35:09 GMT', 'server': 'Apache', 'vary': 'Accept-Encoding', 'x-slack-req-id': 'f1509c5820e5ace7c96bcb62970f69ff', 'x-content-type-options': 'nosniff', 'x-xss-protection': '0', 'pragma': 'no-cache', 'cache-control': 'private, no-cache, no-store, must-revalidate', 'expires': 'Sat, 26 Jul 1997 05:00:00 GMT', 'content-type': 'application/json; charset=utf-8', 'x-accepted-oauth-scopes': 'users:read', 'x-oauth-scopes': 'app_mentions:read,channels:history,chat:write,im:history,im:read,im:write,users:read,reactions:write,users:read.email', 'access-control-expose-headers': 'x-slack-req-id, retry-after', 'access-control-allow-headers': 'slack-route, x-slack-version-ts, x-b3-traceid, x-b3-spanid, x-b3-parentspanid, x-b3-sampled, x-b3-flags', 'strict-transport-security': 'max-age=31536000; includeSubDomains; preload', 'referrer-policy': 'no-referrer', 'x-slack-unique-id': 'aKdm3BJNUxBiz8JHeJAy9QAAEDQ', 'x-slack-backend': 'r', 'access-control-allow-origin': '*', 'content-length': '2057', 'via': '1.1 slack-prod.tinyspeck.com, envoy-www-iad-ehyfqnrt,envoy-edge-pdx-muwqnfqe', 'x-envoy-attempt-count': '1', 'x-envoy-upstream-service-time': '94', 'x-backend': 'main_normal main_canary_with_overflow main_control_with_overflow', 'x-server': 'slack-www-hhvm-main-iad-xhyp', 'x-slack-shared-secret-outcome': 'no-match', 'x-edge-backend': 'envoy-www', 'timing-allow-origin': '*', 'x-slack-edge-shared-secret-outcome': 'no-match', 'connection': 'close'}, body: {"ok":true,"user":{"id":"U01RMTFMALF","name":"popov8533","is_bot":false,"updated":1755719704,"is_app_user":false,"team_id":"T010QS7UQNA","deleted":false,"color":"4bbe2e","is_email_confirmed":true,"real_name":"Alexandr Popov","tz":"America\/Los_Angeles","tz_label":"Pacific Daylight Time","tz_offset":-25200,"is_admin":false,"is_owner":false,"is_primary_owner":false,"is_restricted":false,"is_ultra_restricted":false,"enterprise_user":{"id":"U01RMTFMALF","enterprise_id":"ERV4P7NAD","enterprise_name":"Paramount Global","is_admin":false,"is_owner":false,"is_primary_owner":false,"teams":["T010QS7UQNA","T02H1PQMF"]},"who_can_share_contact_card":"EVERYONE","profile":{"real_name":"Alexandr Popov","display_name":"Alex Popov","avatar_hash":"a64f82312a14","real_name_normalized":"Alexandr Popov","display_name_normalized":"Alex Popov","image_24":"https:\/\/avatars.slack-edge.com\/2023-03-29\/5033076824964_a64f82312a141123fbbf_24.png","image_32":"https:\/\/avatars.slack-edge.com\/2023-03-29\/5033076824964_a64f82312a141123fbbf_32.png","image_48":"https:\/\/avatars.slack-edge.com\/2023-03-29\/5033076824964_a64f82312a141123fbbf_48.png","image_72":"https:\/\/avatars.slack-edge.com\/2023-03-29\/5033076824964_a64f82312a141123fbbf_72.png","image_192":"https:\/\/avatars.slack-edge.com\/2023-03-29\/5033076824964_a64f82312a141123fbbf_192.png","image_512":"https:\/\/avatars.slack-edge.com\/2023-03-29\/5033076824964_a64f82312a141123fbbf_512.png","image_1024":"https:\/\/avatars.slack-edge.com\/2023-03-29\/5033076824964_a64f82312a141123fbbf_1024.png","image_original":"https:\/\/avatars.slack-edge.com\/2023-03-29\/5033076824964_a64f82312a141123fbbf_original.png","is_custom_image":true,"first_name":"Alexandr","last_name":"Popov","team":"T010QS7UQNA","email":"alexandr.popov@paramount.com","title":"Senior Software Quality Assurance Engineer","phone":"","skype":"","status_text":"","status_text_canonical":"","status_emoji":"","status_emoji_display_info":[],"status_expiration":0,"huddle_state":"default_unset","huddle_state_expiration_ts":0,"ooo_message":""}}}
2025-08-21 11:35:08,966 - auth.slack_user_info - DEBUG - [slack_user_info.py:63] - Retrieved email for user U01RMTFMALF: alexandr.popov@paramount.com
2025-08-21 11:35:08,967 - auth.email_whitelist - WARNING - [email_whitelist.py:59] - Email access denied: alexandr.popov@paramount.com
2025-08-21 11:35:08,967 - __main__ - WARNING - [main.py:126] - Access denied to user U01RMTFMALF with email alexandr.popov@paramount.com
2025-08-21 11:35:08,967 - __main__ - WARNING - [main.py:396] - Access denied for user U01RMTFMALF in DM
2025-08-21 11:35:08,967 - slack_sdk.web.base_client - DEBUG - [base_client.py:255] - Sending a request - url: https://slack.com/api/chat.postMessage, query_params: {}, body_params: {}, files: {}, json_body: {'channel': 'D09A0LFHK8R', 'text': "I'm sorry, but you don't have access to this information. Please contact your administrator if you believe this is an error.", 'team_id': 'T010QS7UQNA'}, headers: {'Content-Type': 'application/json;charset=utf-8', 'Authorization': '(redacted)', 'User-Agent': 'Python/3.12.0 slackclient/3.34.0 Darwin/23.4.0'}
2025-08-21 11:35:09,372 - slack_sdk.web.base_client - DEBUG - [base_client.py:546] - Received the following response - status: 200, headers: {'date': 'Thu, 21 Aug 2025 18:35:09 GMT', 'server': 'Apache', 'vary': 'Accept-Encoding', 'x-slack-req-id': '010d2912bb22c8a4f12a112965ebe577', 'x-content-type-options': 'nosniff', 'x-xss-protection': '0', 'pragma': 'no-cache', 'cache-control': 'private, no-cache, no-store, must-revalidate', 'expires': 'Sat, 26 Jul 1997 05:00:00 GMT', 'content-type': 'application/json; charset=utf-8', 'x-accepted-oauth-scopes': 'chat:write', 'x-oauth-scopes': 'app_mentions:read,channels:history,chat:write,im:history,im:read,im:write,users:read,reactions:write,users:read.email', 'access-control-expose-headers': 'x-slack-req-id, retry-after', 'access-control-allow-headers': 'slack-route, x-slack-version-ts, x-b3-traceid, x-b3-spanid, x-b3-parentspanid, x-b3-sampled, x-b3-flags', 'strict-transport-security': 'max-age=31536000; includeSubDomains; preload', 'referrer-policy': 'no-referrer', 'x-slack-unique-id': 'aKdm3b5MsVzsDoEDRh9L3QAAEAU', 'x-slack-backend': 'r', 'access-control-allow-origin': '*', 'content-length': '977', 'via': '1.1 slack-prod.tinyspeck.com, envoy-www-iad-rtuwfkxd,envoy-edge-pdx-pheeazut', 'x-envoy-attempt-count': '1', 'x-envoy-upstream-service-time': '166', 'x-backend': 'main_normal main_canary_with_overflow main_control_with_overflow', 'x-server': 'slack-www-hhvm-main-iad-huwo', 'x-slack-shared-secret-outcome': 'no-match', 'x-edge-backend': 'envoy-www', 'timing-allow-origin': '*', 'x-slack-edge-shared-secret-outcome': 'no-match', 'connection': 'close'}, body: {"ok":true,"channel":"D09A0LFHK8R","ts":"1755801309.380829","message":{"user":"U099R6WTZ9S","type":"message","ts":"1755801309.380829","bot_id":"B099R6WTRU4","app_id":"A099LACAB2R","text":"I'm sorry, but you don't have access to this information. Please contact your administrator if you believe this is an error.","team":"T010QS7UQNA","bot_profile":{"id":"B099R6WTRU4","app_id":"A099LACAB2R","user_id":"U099R6WTZ9S","name":"AutoBot","icons":{"image_36":"https://a.slack-edge.com/80588/img/plugins/app/bot_36.png","image_48":"https://a.slack-edge.com/80588/img/plugins/app/bot_48.png","image_72":"https://a.slack-edge.com/80588/img/plugins/app/service_72.png"},"deleted":false,"updated":1754677948,"team_id":"T010QS7UQNA"},"blocks":[{"type":"rich_text","block_id":"3CE","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"I'm sorry, but you don't have access to this information. Please contact your administrator if you believe this is an error."}]}]}]}}
2025-08-21 11:35:12,127 - slack_bolt.App - DEBUG - [client.py:235] - on_message invoked: (message: {"envelope_id":"ddd6a348-5525-4892-9d90-ee1fe48cea68","payload":{"token":"yq71khZBCyJF1Ri2hG5aNqr5","team_id":"T010QS7UQNA","enterprise_id":"ERV4P7NAD","context_team_id":null,"context_enterprise_id":"ERV4P7NAD","api_app_id":"A099LACAB2R","event":{"user":"U01RMTFMALF","type":"message","ts":"1755801292.462349","client_msg_id":"b7a3af3d-ac77-4a15-a4e1-e5af0f86b300","text":"How to connect an iOS device?","blocks":[{"type":"rich_text","block_id":"rRS58","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"How to connect an iOS device?"}]}]}],"channel":"D09A0LFHK8R","event_ts":"1755801292.462349","channel_type":"im"},"type":"event_callback","event_id":"Ev09BJ2FR2KY","event_time":1755801292,"authorizations":[{"enterprise_id":"ERV4P7NAD","team_id":"T010QS7UQNA","user_id":"U099R6WTZ9S","is_bot":true,"is_enterprise_install":false}],"is_ext_shared_channel":false,"event_context":"4-eyJldCI6Im1lc3NhZ2UiLCJ0aWQiOiJUMDEwUVM3VVFOQSIsImFpZCI6IkEwOTlMQUNBQjJSIiwiY2lkIjoiRDA5QTBMRkhLOFIifQ"},"type":"events_api","accepts_response_payload":false,"retry_attempt":1,"retry_reason":"timeout"})
2025-08-21 11:35:12,127 - slack_bolt.App - DEBUG - [client.py:99] - A new message enqueued (current queue size: 1)
2025-08-21 11:35:12,127 - slack_bolt.App - DEBUG - [client.py:105] - A message dequeued (current queue size: 0)
2025-08-21 11:35:12,128 - slack_bolt.App - DEBUG - [client.py:125] - Message processing started (type: events_api, envelope_id: ddd6a348-5525-4892-9d90-ee1fe48cea68)
2025-08-21 11:35:12,128 - slack_bolt.App - DEBUG - [app.py:476] - Applying slack_bolt.middleware.ssl_check.ssl_check.SslCheck
2025-08-21 11:35:12,128 - slack_bolt.App - DEBUG - [app.py:476] - Applying slack_bolt.middleware.request_verification.request_verification.RequestVerification
2025-08-21 11:35:12,129 - slack_bolt.App - DEBUG - [app.py:476] - Applying slack_bolt.middleware.authorization.single_team_authorization.SingleTeamAuthorization
2025-08-21 11:35:12,129 - slack_bolt.App - DEBUG - [app.py:476] - Applying slack_bolt.middleware.ignoring_self_events.ignoring_self_events.IgnoringSelfEvents
2025-08-21 11:35:12,129 - slack_bolt.App - DEBUG - [app.py:476] - Applying slack_bolt.middleware.url_verification.url_verification.UrlVerification
2025-08-21 11:35:12,129 - slack_bolt.App - DEBUG - [app.py:500] - Checking listener: handle_app_mentions ...
2025-08-21 11:35:12,129 - slack_bolt.App - DEBUG - [app.py:500] - Checking listener: help_message ...
2025-08-21 11:35:12,129 - slack_bolt.App - DEBUG - [app.py:500] - Checking listener: handle_dm_messages ...
2025-08-21 11:35:12,129 - slack_bolt.App - DEBUG - [app.py:522] - Running listener: handle_dm_messages ...
2025-08-21 11:35:12,130 - slack_bolt.App - DEBUG - [thread_runner.py:198] - Responding with status: 200 body: "" (0 millis)
2025-08-21 11:35:12,130 - __main__ - INFO - [main.py:358] - === DM MESSAGE EVENT RECEIVED ===
2025-08-21 11:35:12,130 - slack_bolt.App - DEBUG - [client.py:200] - Sending a message (session id: f3995ac4-d679-48ce-ad2f-215c021f424a, message: {"envelope_id": "ddd6a348-5525-4892-9d90-ee1fe48cea68"})
2025-08-21 11:35:12,130 - __main__ - DEBUG - [main.py:359] - Full event body: {'token': 'yq71khZBCyJF1Ri2hG5aNqr5', 'team_id': 'T010QS7UQNA', 'enterprise_id': 'ERV4P7NAD', 'context_team_id': None, 'context_enterprise_id': 'ERV4P7NAD', 'api_app_id': 'A099LACAB2R', 'event': {'user': 'U01RMTFMALF', 'type': 'message', 'ts': '1755801292.462349', 'client_msg_id': 'b7a3af3d-ac77-4a15-a4e1-e5af0f86b300', 'text': 'How to connect an iOS device?', 'blocks': [{'type': 'rich_text', 'block_id': 'rRS58', 'elements': [{'type': 'rich_text_section', 'elements': [{'type': 'text', 'text': 'How to connect an iOS device?'}]}]}], 'channel': 'D09A0LFHK8R', 'event_ts': '1755801292.462349', 'channel_type': 'im'}, 'type': 'event_callback', 'event_id': 'Ev09BJ2FR2KY', 'event_time': 1755801292, 'authorizations': [{'enterprise_id': 'ERV4P7NAD', 'team_id': 'T010QS7UQNA', 'user_id': 'U099R6WTZ9S', 'is_bot': True, 'is_enterprise_install': False}], 'is_ext_shared_channel': False, 'event_context': '4-eyJldCI6Im1lc3NhZ2UiLCJ0aWQiOiJUMDEwUVM3VVFOQSIsImFpZCI6IkEwOTlMQUNBQjJSIiwiY2lkIjoiRDA5QTBMRkhLOFIifQ'}
2025-08-21 11:35:12,131 - __main__ - INFO - [main.py:368] - DM Event details: channel=D09A0LFHK8R, user=U01RMTFMALF, ts=1755801292.462349
2025-08-21 11:35:12,131 - slack_bolt.App - DEBUG - [internals.py:41] - Response time: 2 milliseconds
2025-08-21 11:35:12,131 - __main__ - DEBUG - [main.py:369] - DM Event text: How to connect an iOS device?
2025-08-21 11:35:12,131 - slack_bolt.App - DEBUG - [client.py:150] - Message processing completed (type: events_api, envelope_id: ddd6a348-5525-4892-9d90-ee1fe48cea68)
2025-08-21 11:35:12,131 - utils - DEBUG - [utils.py:27] - Checking message processing: channel=D09A0LFHK8R, ts=1755801292.462349, text='How to connect an iOS device?...'
2025-08-21 11:35:12,131 - utils - DEBUG - [utils.py:31] - Message hash: 52da856dc52eeabd6e2d5a10d8c14b04
2025-08-21 11:35:12,131 - utils - INFO - [utils.py:48] - Skipping duplicate message (hash: 52da856dc52eeabd6e2d5a10d8c14b04): How to connect an iOS device?...
2025-08-21 11:35:12,131 - __main__ - INFO - [main.py:373] - Skipping DM message - already processed recently
2025-08-21 11:39:49,446 - __main__ - INFO - [main.py:43] - Loading application configuration...
2025-08-21 11:39:49,446 - __main__ - INFO - [main.py:45] - Configuration loaded successfully
2025-08-21 11:39:49,446 - __main__ - INFO - [main.py:48] - Initializing security components...
2025-08-21 11:39:49,446 - __main__ - DEBUG - [main.py:50] - Slack validator initialized
2025-08-21 11:39:49,446 - security.content_filter - INFO - [content_filter.py:39] - Content filter initialized with 11 patterns
2025-08-21 11:39:49,446 - __main__ - DEBUG - [main.py:53] - Content filter initialized
2025-08-21 11:39:49,446 - auth.admin_manager - INFO - [admin_manager.py:27] - Admin manager initialized with 2 admin users
2025-08-21 11:39:49,447 - __main__ - DEBUG - [main.py:56] - Admin manager initialized
2025-08-21 11:39:49,447 - auth.email_whitelist - INFO - [email_whitelist.py:28] - Email whitelist initialized with 1 whitelisted emails
2025-08-21 11:39:49,447 - auth.email_whitelist - INFO - [email_whitelist.py:37] - Whitelisted domains: paramount.com
2025-08-21 11:39:49,447 - __main__ - DEBUG - [main.py:59] - Email whitelist initialized with 1 emails
2025-08-21 11:39:49,447 - auth.slack_user_info - DEBUG - [slack_user_info.py:25] - Slack user info manager initialized
2025-08-21 11:39:49,447 - __main__ - DEBUG - [main.py:62] - Slack user info manager initialized
2025-08-21 11:39:49,447 - __main__ - INFO - [main.py:63] - Security components initialized successfully
2025-08-21 11:39:49,447 - __main__ - INFO - [main.py:66] - Initializing Slack app...
2025-08-21 11:39:49,484 - slack_bolt.App - DEBUG - [base_client.py:255] - Sending a request - url: https://slack.com/api/auth.test, query_params: {}, body_params: {}, files: {}, json_body: None, headers: {'Content-Type': 'application/x-www-form-urlencoded', 'Authorization': '(redacted)', 'User-Agent': 'Bolt/1.16.0 Python/3.12.0 slackclient/3.34.0 Darwin/23.4.0'}
2025-08-21 11:39:49,837 - slack_bolt.App - DEBUG - [base_client.py:546] - Received the following response - status: 200, headers: {'date': 'Thu, 21 Aug 2025 18:39:49 GMT', 'server': 'Apache', 'vary': 'Accept-Encoding', 'x-slack-req-id': '15faf937323a7236b5d09f2fd7c5f097', 'x-content-type-options': 'nosniff', 'x-xss-protection': '0', 'pragma': 'no-cache', 'cache-control': 'private, no-cache, no-store, must-revalidate', 'expires': 'Sat, 26 Jul 1997 05:00:00 GMT', 'content-type': 'application/json; charset=utf-8', 'x-oauth-scopes': 'app_mentions:read,channels:history,chat:write,im:history,im:read,im:write,users:read,reactions:write,users:read.email', 'access-control-expose-headers': 'x-slack-req-id, retry-after', 'access-control-allow-headers': 'slack-route, x-slack-version-ts, x-b3-traceid, x-b3-spanid, x-b3-parentspanid, x-b3-sampled, x-b3-flags', 'strict-transport-security': 'max-age=31536000; includeSubDomains; preload', 'referrer-policy': 'no-referrer', 'x-slack-unique-id': 'aKdn9bSPdJAmRmK-VrVQagAAEDo', 'x-slack-backend': 'r', 'access-control-allow-origin': '*', 'content-length': '228', 'via': '1.1 slack-prod.tinyspeck.com, envoy-www-iad-axghuywx,envoy-edge-pdx-odabbecd', 'x-envoy-attempt-count': '1', 'x-envoy-upstream-service-time': '88', 'x-backend': 'main_normal main_canary_with_overflow main_control_with_overflow', 'x-server': 'slack-www-hhvm-main-iad-bonl', 'x-slack-shared-secret-outcome': 'no-match', 'x-edge-backend': 'envoy-www', 'timing-allow-origin': '*', 'x-slack-edge-shared-secret-outcome': 'no-match', 'connection': 'close'}, body: {"ok":true,"url":"https://viacomcbs-grid-test.slack.com/","team":"Test Workspace","user":"autobot","team_id":"T010QS7UQNA","user_id":"U099R6WTZ9S","bot_id":"B099R6WTRU4","enterprise_id":"ERV4P7NAD","is_enterprise_install":false}
2025-08-21 11:39:49,838 - __main__ - INFO - [main.py:68] - Slack app initialized successfully
2025-08-21 11:39:49,838 - __main__ - DEBUG - [main.py:72] - Message deduplication cache initialized
2025-08-21 11:39:49,838 - __main__ - DEBUG - [main.py:77] - Thread tracking initialized
2025-08-21 11:39:49,838 - __main__ - INFO - [main.py:80] - Initializing DIG AI integration...
2025-08-21 11:39:49,839 - dig_connector - INFO - [dig_connector.py:284] - Initializing DIG AI with model ID: 42
2025-08-21 11:39:49,839 - dig_connector - INFO - [dig_connector.py:49] - Starting DIG chat session initialization...
2025-08-21 11:39:49,839 - dig_connector - DEBUG - [dig_connector.py:52] - Creating chat with name: Slack Bot Session 2025-08-21T18:39:49.839599+00:00
2025-08-21 11:39:49,839 - dig_connector - DEBUG - [dig_connector.py:63] - Creating chat - URL: https://ai.digdev.cbsicloud.com/fastapi/chats, Payload: {'chat_nm': 'Slack Bot Session 2025-08-21T18:39:49.839599+00:00', 'model_id': 42}
2025-08-21 11:39:49,843 - urllib3.connectionpool - DEBUG - [connectionpool.py:1055] - Starting new HTTPS connection (1): ai.digdev.cbsicloud.com:443
2025-08-21 11:39:50,087 - urllib3.connectionpool - DEBUG - [connectionpool.py:549] - https://ai.digdev.cbsicloud.com:443 "POST /fastapi/chats HTTP/1.1" 200 217
2025-08-21 11:39:50,088 - dig_connector - DEBUG - [dig_connector.py:66] - Create chat response: status=200
2025-08-21 11:39:50,089 - dig_connector - INFO - [dig_connector.py:54] - Successfully initialized DIG chat session with ID: 859
2025-08-21 11:39:50,089 - __main__ - INFO - [main.py:83] - DIG AI integration successfully initialized
2025-08-21 11:39:50,089 - __main__ - INFO - [main.py:87] - Setting up event handlers...
2025-08-21 11:39:50,091 - __main__ - INFO - [main.py:605] - Starting AI Assistant Bot...
2025-08-21 11:39:50,091 - __main__ - INFO - [main.py:606] - Registering event handlers...
2025-08-21 11:39:50,091 - __main__ - DEBUG - [main.py:607] - Event handlers registered: app_mention, message, app_home_opened
2025-08-21 11:39:50,091 - __main__ - INFO - [main.py:610] - Connecting to Slack via Socket Mode...
2025-08-21 11:39:50,092 - __main__ - INFO - [main.py:614] - Socket Mode handler created successfully
2025-08-21 11:39:50,092 - __main__ - INFO - [main.py:616] - ✅ Bot is now running and listening for events!
2025-08-21 11:39:50,092 - slack_bolt.App - DEBUG - [base_client.py:255] - Sending a request - url: https://slack.com/api/apps.connections.open, query_params: {}, body_params: {}, files: {}, json_body: None, headers: {'Content-Type': 'application/x-www-form-urlencoded', 'Authorization': '(redacted)', 'User-Agent': 'Bolt/1.16.0 Python/3.12.0 slackclient/3.34.0 Darwin/23.4.0'}
2025-08-21 11:39:50,380 - slack_bolt.App - DEBUG - [base_client.py:546] - Received the following response - status: 200, headers: {'date': 'Thu, 21 Aug 2025 18:39:50 GMT', 'server': 'Apache', 'vary': 'Accept-Encoding', 'x-slack-req-id': '30dffbbf6eab4cae15aeff6be2eb9253', 'x-content-type-options': 'nosniff', 'x-xss-protection': '0', 'x-robots-tag': 'noindex,nofollow', 'pragma': 'no-cache', 'cache-control': 'private, no-cache, no-store, must-revalidate', 'expires': 'Sat, 26 Jul 1997 05:00:00 GMT', 'content-type': 'application/json; charset=utf-8', 'x-accepted-oauth-scopes': 'connections:write', 'x-oauth-scopes': 'connections:write', 'access-control-expose-headers': 'x-slack-req-id, retry-after', 'access-control-allow-headers': 'slack-route, x-slack-version-ts, x-b3-traceid, x-b3-spanid, x-b3-parentspanid, x-b3-sampled, x-b3-flags', 'strict-transport-security': 'max-age=31536000; includeSubDomains; preload', 'referrer-policy': 'no-referrer', 'x-slack-unique-id': 'aKdn9nSo6GooXf5r3sgkcwAAEBc', 'x-slack-backend': 'r', 'access-control-allow-origin': '*', 'content-length': '173', 'via': '1.1 slack-prod.tinyspeck.com, envoy-www-iad-xemamixz,envoy-edge-pdx-szshaioe', 'x-envoy-attempt-count': '1', 'x-envoy-upstream-service-time': '77', 'x-backend': 'main_normal main_canary_with_overflow main_control_with_overflow', 'x-server': 'slack-www-hhvm-main-iad-usjp', 'x-slack-shared-secret-outcome': 'no-match', 'x-edge-backend': 'envoy-www', 'timing-allow-origin': '*', 'x-slack-edge-shared-secret-outcome': 'no-match', 'connection': 'close'}, body: {"ok":true,"url":"wss:\/\/wss-primary.slack.com\/link\/?ticket=f4daf457-ed36-4e90-8a1c-a9ced61d7617&app_id=a6c8d361ee1c6f398c5b4afec831555b78d7affa753b16bcc0fc64d7c13f3766"}
2025-08-21 11:39:50,937 - slack_bolt.App - INFO - [client.py:192] - A new session has been established (session id: 9adf3bcc-e9d3-4f5c-b2bc-938d72bdb603)
2025-08-21 11:39:50,937 - slack_bolt.App - INFO - [base_handler.py:50] - ⚡️ Bolt app is running!
2025-08-21 11:39:51,023 - slack_bolt.App - INFO - [client.py:265] - Starting to receive messages from a new connection (session id: 9adf3bcc-e9d3-4f5c-b2bc-938d72bdb603)
2025-08-21 11:39:51,024 - slack_bolt.App - DEBUG - [client.py:235] - on_message invoked: (message: {"type":"hello","num_connections":1,"debug_info":{"host":"applink-0","build_number":0,"approximate_connection_time":18060},"connection_info":{"app_id":"A099LACAB2R"}})
2025-08-21 11:39:51,025 - slack_bolt.App - DEBUG - [client.py:99] - A new message enqueued (current queue size: 1)
2025-08-21 11:39:51,025 - slack_bolt.App - DEBUG - [client.py:105] - A message dequeued (current queue size: 0)
2025-08-21 11:39:51,026 - slack_bolt.App - DEBUG - [client.py:125] - Message processing started (type: hello, envelope_id: None)
2025-08-21 11:39:51,027 - slack_bolt.App - DEBUG - [client.py:150] - Message processing completed (type: hello, envelope_id: None)
2025-08-21 11:40:08,581 - slack_bolt.App - DEBUG - [client.py:235] - on_message invoked: (message: {"envelope_id":"c4b0349a-0990-4142-9d19-a4c5bfd24f45","payload":{"token":"yq71khZBCyJF1Ri2hG5aNqr5","team_id":"T010QS7UQNA","enterprise_id":"ERV4P7NAD","context_team_id":null,"context_enterprise_id":"ERV4P7NAD","api_app_id":"A099LACAB2R","event":{"user":"U01RMTFMALF","type":"message","ts":"1755801607.484319","client_msg_id":"e5e11c90-7ae5-48ce-9051-9928e695172b","text":"How can i run an automated test on a local Android phone?","blocks":[{"type":"rich_text","block_id":"vQwBP","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"How can i run an automated test on a local Android phone?"}]}]}],"channel":"D09A0LFHK8R","event_ts":"1755801607.484319","channel_type":"im"},"type":"event_callback","event_id":"Ev09BG5ADBHQ","event_time":1755801607,"authorizations":[{"enterprise_id":"ERV4P7NAD","team_id":"T010QS7UQNA","user_id":"U099R6WTZ9S","is_bot":true,"is_enterprise_install":false}],"is_ext_shared_channel":false,"event_context":"4-eyJldCI6Im1lc3NhZ2UiLCJ0aWQiOiJUMDEwUVM3VVFOQSIsImFpZCI6IkEwOTlMQUNBQjJSIiwiY2lkIjoiRDA5QTBMRkhLOFIifQ"},"type":"events_api","accepts_response_payload":false,"retry_attempt":0,"retry_reason":""})
2025-08-21 11:40:08,581 - slack_bolt.App - DEBUG - [client.py:99] - A new message enqueued (current queue size: 1)
2025-08-21 11:40:08,581 - slack_bolt.App - DEBUG - [client.py:105] - A message dequeued (current queue size: 0)
2025-08-21 11:40:08,582 - slack_bolt.App - DEBUG - [client.py:125] - Message processing started (type: events_api, envelope_id: c4b0349a-0990-4142-9d19-a4c5bfd24f45)
2025-08-21 11:40:08,583 - slack_bolt.App - DEBUG - [app.py:476] - Applying slack_bolt.middleware.ssl_check.ssl_check.SslCheck
2025-08-21 11:40:08,583 - slack_bolt.App - DEBUG - [app.py:476] - Applying slack_bolt.middleware.request_verification.request_verification.RequestVerification
2025-08-21 11:40:08,583 - slack_bolt.App - DEBUG - [app.py:476] - Applying slack_bolt.middleware.authorization.single_team_authorization.SingleTeamAuthorization
2025-08-21 11:40:08,583 - slack_bolt.App - DEBUG - [app.py:476] - Applying slack_bolt.middleware.ignoring_self_events.ignoring_self_events.IgnoringSelfEvents
2025-08-21 11:40:08,584 - slack_bolt.App - DEBUG - [app.py:476] - Applying slack_bolt.middleware.url_verification.url_verification.UrlVerification
2025-08-21 11:40:08,584 - slack_bolt.App - DEBUG - [app.py:500] - Checking listener: handle_app_mentions ...
2025-08-21 11:40:08,584 - slack_bolt.App - DEBUG - [app.py:500] - Checking listener: help_message ...
2025-08-21 11:40:08,584 - slack_bolt.App - DEBUG - [app.py:500] - Checking listener: handle_dm_messages ...
2025-08-21 11:40:08,584 - slack_bolt.App - DEBUG - [app.py:522] - Running listener: handle_dm_messages ...
2025-08-21 11:40:08,585 - __main__ - INFO - [main.py:354] - === DM MESSAGE EVENT RECEIVED ===
2025-08-21 11:40:08,585 - slack_bolt.App - DEBUG - [thread_runner.py:198] - Responding with status: 200 body: "" (0 millis)
2025-08-21 11:40:08,585 - __main__ - DEBUG - [main.py:355] - Full event body: {'token': 'yq71khZBCyJF1Ri2hG5aNqr5', 'team_id': 'T010QS7UQNA', 'enterprise_id': 'ERV4P7NAD', 'context_team_id': None, 'context_enterprise_id': 'ERV4P7NAD', 'api_app_id': 'A099LACAB2R', 'event': {'user': 'U01RMTFMALF', 'type': 'message', 'ts': '1755801607.484319', 'client_msg_id': 'e5e11c90-7ae5-48ce-9051-9928e695172b', 'text': 'How can i run an automated test on a local Android phone?', 'blocks': [{'type': 'rich_text', 'block_id': 'vQwBP', 'elements': [{'type': 'rich_text_section', 'elements': [{'type': 'text', 'text': 'How can i run an automated test on a local Android phone?'}]}]}], 'channel': 'D09A0LFHK8R', 'event_ts': '1755801607.484319', 'channel_type': 'im'}, 'type': 'event_callback', 'event_id': 'Ev09BG5ADBHQ', 'event_time': 1755801607, 'authorizations': [{'enterprise_id': 'ERV4P7NAD', 'team_id': 'T010QS7UQNA', 'user_id': 'U099R6WTZ9S', 'is_bot': True, 'is_enterprise_install': False}], 'is_ext_shared_channel': False, 'event_context': '4-eyJldCI6Im1lc3NhZ2UiLCJ0aWQiOiJUMDEwUVM3VVFOQSIsImFpZCI6IkEwOTlMQUNBQjJSIiwiY2lkIjoiRDA5QTBMRkhLOFIifQ'}
2025-08-21 11:40:08,585 - slack_bolt.App - DEBUG - [client.py:200] - Sending a message (session id: 9adf3bcc-e9d3-4f5c-b2bc-938d72bdb603, message: {"envelope_id": "c4b0349a-0990-4142-9d19-a4c5bfd24f45"})
2025-08-21 11:40:08,586 - __main__ - INFO - [main.py:364] - DM Event details: channel=D09A0LFHK8R, user=U01RMTFMALF, ts=1755801607.484319
2025-08-21 11:40:08,586 - __main__ - DEBUG - [main.py:365] - DM Event text: How can i run an automated test on a local Android phone?
2025-08-21 11:40:08,586 - utils - DEBUG - [utils.py:27] - Checking message processing: channel=D09A0LFHK8R, ts=1755801607.484319, text='How can i run an automated test on a local Android...'
2025-08-21 11:40:08,586 - slack_bolt.App - DEBUG - [internals.py:41] - Response time: 3 milliseconds
2025-08-21 11:40:08,586 - utils - DEBUG - [utils.py:31] - Message hash: fbe7d2a37991babbb1fd5414904bf3cd
2025-08-21 11:40:08,587 - slack_bolt.App - DEBUG - [client.py:150] - Message processing completed (type: events_api, envelope_id: c4b0349a-0990-4142-9d19-a4c5bfd24f45)
2025-08-21 11:40:08,587 - utils - DEBUG - [utils.py:53] - Added message to processing cache (total entries: 1)
2025-08-21 11:40:08,587 - __main__ - DEBUG - [main.py:378] - Bot check: bot_id=None, user_id=U01RMTFMALF
2025-08-21 11:40:08,587 - __main__ - DEBUG - [main.py:383] - Question received: 'How can i run an automated test on a local Android phone?'
2025-08-21 11:40:08,587 - __main__ - DEBUG - [main.py:389] - Checking user access for DM...
2025-08-21 11:40:08,587 - auth.slack_user_info - DEBUG - [slack_user_info.py:48] - Fetching user info for user_id: U01RMTFMALF
2025-08-21 11:40:08,587 - slack_sdk.web.base_client - DEBUG - [base_client.py:255] - Sending a request - url: https://slack.com/api/users.info, query_params: {}, body_params: {'user': 'U01RMTFMALF', 'team_id': 'T010QS7UQNA'}, files: {}, json_body: None, headers: {'Content-Type': 'application/x-www-form-urlencoded', 'Authorization': '(redacted)', 'User-Agent': 'Python/3.12.0 slackclient/3.34.0 Darwin/23.4.0'}
2025-08-21 11:40:08,939 - slack_sdk.web.base_client - DEBUG - [base_client.py:546] - Received the following response - status: 200, headers: {'date': 'Thu, 21 Aug 2025 18:40:08 GMT', 'server': 'Apache', 'vary': 'Accept-Encoding', 'x-slack-req-id': '0a360e824737ad36aceaa6d3a2c9dba8', 'x-content-type-options': 'nosniff', 'x-xss-protection': '0', 'pragma': 'no-cache', 'cache-control': 'private, no-cache, no-store, must-revalidate', 'expires': 'Sat, 26 Jul 1997 05:00:00 GMT', 'content-type': 'application/json; charset=utf-8', 'x-accepted-oauth-scopes': 'users:read', 'x-oauth-scopes': 'app_mentions:read,channels:history,chat:write,im:history,im:read,im:write,users:read,reactions:write,users:read.email', 'access-control-expose-headers': 'x-slack-req-id, retry-after', 'access-control-allow-headers': 'slack-route, x-slack-version-ts, x-b3-traceid, x-b3-spanid, x-b3-parentspanid, x-b3-sampled, x-b3-flags', 'strict-transport-security': 'max-age=31536000; includeSubDomains; preload', 'referrer-policy': 'no-referrer', 'x-slack-unique-id': 'aKdoCCLT5t5t5hDDmWd3pgAAECo', 'x-slack-backend': 'r', 'access-control-allow-origin': '*', 'content-length': '2057', 'via': '1.1 slack-prod.tinyspeck.com, envoy-www-iad-jcqdtzrl,envoy-edge-pdx-kiblsbqi', 'x-envoy-attempt-count': '1', 'x-envoy-upstream-service-time': '89', 'x-backend': 'main_normal main_canary_with_overflow main_control_with_overflow', 'x-server': 'slack-www-hhvm-main-iad-iemx', 'x-slack-shared-secret-outcome': 'no-match', 'x-edge-backend': 'envoy-www', 'timing-allow-origin': '*', 'x-slack-edge-shared-secret-outcome': 'no-match', 'connection': 'close'}, body: {"ok":true,"user":{"id":"U01RMTFMALF","name":"popov8533","is_bot":false,"updated":1755719704,"is_app_user":false,"team_id":"T010QS7UQNA","deleted":false,"color":"4bbe2e","is_email_confirmed":true,"real_name":"Alexandr Popov","tz":"America\/Los_Angeles","tz_label":"Pacific Daylight Time","tz_offset":-25200,"is_admin":false,"is_owner":false,"is_primary_owner":false,"is_restricted":false,"is_ultra_restricted":false,"enterprise_user":{"id":"U01RMTFMALF","enterprise_id":"ERV4P7NAD","enterprise_name":"Paramount Global","is_admin":false,"is_owner":false,"is_primary_owner":false,"teams":["T010QS7UQNA","T02H1PQMF"]},"who_can_share_contact_card":"EVERYONE","profile":{"real_name":"Alexandr Popov","display_name":"Alex Popov","avatar_hash":"a64f82312a14","real_name_normalized":"Alexandr Popov","display_name_normalized":"Alex Popov","image_24":"https:\/\/avatars.slack-edge.com\/2023-03-29\/5033076824964_a64f82312a141123fbbf_24.png","image_32":"https:\/\/avatars.slack-edge.com\/2023-03-29\/5033076824964_a64f82312a141123fbbf_32.png","image_48":"https:\/\/avatars.slack-edge.com\/2023-03-29\/5033076824964_a64f82312a141123fbbf_48.png","image_72":"https:\/\/avatars.slack-edge.com\/2023-03-29\/5033076824964_a64f82312a141123fbbf_72.png","image_192":"https:\/\/avatars.slack-edge.com\/2023-03-29\/5033076824964_a64f82312a141123fbbf_192.png","image_512":"https:\/\/avatars.slack-edge.com\/2023-03-29\/5033076824964_a64f82312a141123fbbf_512.png","image_1024":"https:\/\/avatars.slack-edge.com\/2023-03-29\/5033076824964_a64f82312a141123fbbf_1024.png","image_original":"https:\/\/avatars.slack-edge.com\/2023-03-29\/5033076824964_a64f82312a141123fbbf_original.png","is_custom_image":true,"first_name":"Alexandr","last_name":"Popov","team":"T010QS7UQNA","email":"alexandr.popov@paramount.com","title":"Senior Software Quality Assurance Engineer","phone":"","skype":"","status_text":"","status_text_canonical":"","status_emoji":"","status_emoji_display_info":[],"status_expiration":0,"huddle_state":"default_unset","huddle_state_expiration_ts":0,"ooo_message":""}}}
2025-08-21 11:40:08,940 - auth.slack_user_info - DEBUG - [slack_user_info.py:63] - Retrieved email for user U01RMTFMALF: alexandr.popov@paramount.com
2025-08-21 11:40:08,940 - auth.email_whitelist - DEBUG - [email_whitelist.py:57] - Email access granted: alexandr.popov@paramount.com
2025-08-21 11:40:08,940 - __main__ - INFO - [main.py:118] - Access granted to user U01RMTFMALF with email alexandr.popov@paramount.com
2025-08-21 11:40:08,941 - __main__ - DEBUG - [main.py:395] - User access check passed for DM
2025-08-21 11:40:08,941 - __main__ - INFO - [main.py:397] - Processing DM question from user U01RMTFMALF: How can i run an automated test on a local Android phone?
2025-08-21 11:40:08,941 - __main__ - DEBUG - [main.py:400] - Starting DM processing...
2025-08-21 11:40:08,941 - __main__ - DEBUG - [main.py:403] - Checking if 'how can i run an automated test on a local android phone?' is an admin command in DM
2025-08-21 11:40:08,941 - __main__ - DEBUG - [main.py:439] - Checking if DM thread is already being processed...
2025-08-21 11:40:08,941 - utils - DEBUG - [utils.py:67] - Managing thread: D09A0LFHK8R:1755801607.484319, action: add, user: U01RMTFMALF
2025-08-21 11:40:08,941 - utils - INFO - [utils.py:94] - Added thread D09A0LFHK8R:1755801607.484319 to active tracking (total: 1)
2025-08-21 11:40:08,941 - __main__ - DEBUG - [main.py:444] - DM thread management check passed
2025-08-21 11:40:08,941 - slack_sdk.web.base_client - DEBUG - [base_client.py:255] - Sending a request - url: https://slack.com/api/reactions.add, query_params: {}, body_params: {'channel': 'D09A0LFHK8R', 'name': 'thinking_face', 'timestamp': '1755801607.484319', 'team_id': 'T010QS7UQNA'}, files: {}, json_body: None, headers: {'Content-Type': 'application/x-www-form-urlencoded', 'Authorization': '(redacted)', 'User-Agent': 'Python/3.12.0 slackclient/3.34.0 Darwin/23.4.0'}
2025-08-21 11:40:09,304 - slack_sdk.web.base_client - DEBUG - [base_client.py:546] - Received the following response - status: 200, headers: {'date': 'Thu, 21 Aug 2025 18:40:09 GMT', 'server': 'Apache', 'vary': 'Accept-Encoding', 'x-slack-req-id': '96344c993025c21b5e2a151b55c5fee0', 'x-content-type-options': 'nosniff', 'x-xss-protection': '0', 'pragma': 'no-cache', 'cache-control': 'private, no-cache, no-store, must-revalidate', 'expires': 'Sat, 26 Jul 1997 05:00:00 GMT', 'content-type': 'application/json; charset=utf-8', 'x-accepted-oauth-scopes': 'reactions:write', 'x-oauth-scopes': 'app_mentions:read,channels:history,chat:write,im:history,im:read,im:write,users:read,reactions:write,users:read.email', 'access-control-expose-headers': 'x-slack-req-id, retry-after', 'access-control-allow-headers': 'slack-route, x-slack-version-ts, x-b3-traceid, x-b3-spanid, x-b3-parentspanid, x-b3-sampled, x-b3-flags', 'strict-transport-security': 'max-age=31536000; includeSubDomains; preload', 'referrer-policy': 'no-referrer', 'x-slack-unique-id': 'aKdoCbmGjc4BygiOIeQWigAAECk', 'x-slack-backend': 'r', 'access-control-allow-origin': '*', 'content-length': '11', 'via': '1.1 slack-prod.tinyspeck.com, envoy-www-iad-nfgscnwz,envoy-edge-pdx-hpetvyef', 'x-envoy-attempt-count': '1', 'x-envoy-upstream-service-time': '139', 'x-backend': 'main_normal main_canary_with_overflow main_control_with_overflow', 'x-server': 'slack-www-hhvm-main-iad-mqbj', 'x-slack-shared-secret-outcome': 'no-match', 'x-edge-backend': 'envoy-www', 'timing-allow-origin': '*', 'x-slack-edge-shared-secret-outcome': 'no-match', 'connection': 'close'}, body: {"ok":true}
2025-08-21 11:40:09,304 - __main__ - INFO - [main.py:461] - Processing DM question from <@U01RMTFMALF>: How can i run an automated test on a local Android phone?
2025-08-21 11:40:09,305 - __main__ - INFO - [main.py:465] - Sending DM request to DIG AI...
2025-08-21 11:40:09,305 - dig_connector - INFO - [dig_connector.py:134] - Generating response for query: 'How can i run an automated test on a local Android phone?' with 0 chunks
2025-08-21 11:40:09,305 - dig_connector - DEBUG - [dig_connector.py:138] - Formatted context length: 0
2025-08-21 11:40:09,305 - dig_connector - INFO - [dig_connector.py:141] - No context available, using direct query
2025-08-21 11:40:09,305 - dig_connector - INFO - [dig_connector.py:150] - Sending prompt to DIG platform...
2025-08-21 11:40:09,305 - dig_connector - INFO - [dig_connector.py:121] - Sending message to DIG API - URL: https://ai.digdev.cbsicloud.com/fastapi/chats/859/generate
2025-08-21 11:40:09,305 - dig_connector - DEBUG - [dig_connector.py:122] - Message payload: {'model_id': 42, 'message_text': 'How can i run an automated test on a local Android phone?', 'history': [{'role': 'user', 'content': 'How can i run an automated test on a local Android phone?'}]}
2025-08-21 11:40:20,505 - urllib3.connectionpool - DEBUG - [connectionpool.py:549] - https://ai.digdev.cbsicloud.com:443 "POST /fastapi/chats/859/generate HTTP/1.1" 200 3940
2025-08-21 11:40:20,506 - dig_connector - DEBUG - [dig_connector.py:125] - DIG API response: status=200
2025-08-21 11:40:20,507 - dig_connector - DEBUG - [dig_connector.py:129] - DIG API response data: {'message_text': 'To run an automated test on a local Android phone, you\'ll need to follow several steps, primarily involving configuration and using specific commands.\n\nHere\'s a breakdown based on the provided documentation:\n\n**1. Prerequisites & Setup:**\n*   **VPN Connection:** Connect to the VPN at `connect.cbsinteractive.com/VPNFT` (Source: https://paramount.atlassian.net/wiki/spaces/PLQA/pages/47720266).\n*   **Synergy Server:** Download the latest version of the Synergy server and run its `.jar` file (Websocket) (Source: https://paramount.atlassian.net/wiki/spaces/PLQA/pages/47720266).\n*   **Appium Server:** For local runs, you might need to start an Appium server. A sample test class indicates that an Appium server can be started if the environment is "local" and the driver is "android" (Source: https://paramount.atlassian.net/wiki/spaces/PLQA/pages/47711460, SampleTest Class).\n*   **Android Home Environment Variable:** Ensure your Run Configuration has the `$ANDROID_HOME` environment variable set and included in the path, especially for Android Emulator smoke tests (Source: https://paramount.atlassian.net/wiki/spaces/PLQA/pages/47713566).\n\n**2. Configure Test Parameters:**\n*   **Update `.config` file:** Navigate to the `mqe-hob-mobile-tests` directory and update the desired capabilities in the `.config` file. Key parameters to set include:\n    *   `Platform=ANDROID`\n    *   `Locale=en-us` (for domestic tests)\n    *   `MobileDeviceCategory=PHONE`\n    *   `DeviceStartOrientation=PORTRAIT`\n    *   `DebugDeviceID`: Add the device ID of your real mobile device (you can find this by typing `adb devices` in the terminal) (Source: https://paramount.atlassian.net/wiki/spaces/PLQA/pages/47720266). This is important for targeting a real device.\n    *   `AppPackageUrl`: URL of the build.\n    *   `AppBuildType=DEBUG`\n    *   `ClientID`: Your machine serial number for local executions or to target a specific private lab machine.\n    *   Other parameters like `ServerURL`, `Environment`, `UseGeoVPN`, `TestRailProjectId`, `ReRunOnFailure`, `SendChatReport`, `SendEmailReport`, etc., can also be configured (Source: https://paramount.atlassian.net/wiki/spaces/PLQA/pages/47720266).\n\n*   **Mobile Local Android Run Configuration Arguments:** When setting up your run configuration, consider these arguments:\n    *   `-Ddriver=android`\n    *   `-DplatformName=Android`\n    *   `-DplatformVersion=11.0` (or your Android version)\n    *   `-DdeviceName="Google Pixel 2XL"` (or your device name)\n    *   `-Denvironment=local`\n    *   `-Dheadless=false`\n    *   `-Dapp="/pathToPackage/your-app.apk"`\n    *   `-Dudid=set this if running on Real Mobile Device only` (Source: https://paramount.atlassian.net/wiki/spaces/PLQA/pages/47711460).\n\n**3. Run the Test:**\n\nOnce configured, you have a couple of options to run the test:\n\n*   **From Terminal (using Maven):**\n    Open your IDE terminal window and execute the following command:\n    ```\n    mvn clean test -pl mqe-hob-mobile-tests -am -Dgroups=Your test case number or tag\n    ```\n    (Source: https://paramount.atlassian.net/wiki/spaces/PLQA/pages/47720266). You can also pass parameters in the maven command, for example, `-Dgroups=Smoke` (Source: https://paramount.atlassian.net/wiki/spaces/PLQA/pages/47720266).\n\n*   **From TestNGSuiteConfig.xml:**\n    1.  Navigate to the `TestNGSuiteConfig.xml` file.\n    2.  Right-click on the file and select "Run TestNGSuiteConfig.xml".\n    3.  Provide the necessary test case ID or tag name within the `<include name=""/`> section in the XML (Source: https://paramount.atlassian.net/wiki/spaces/PLQA/pages/47720266). For example:\n        ```xml\n        <groups>\n            <run>\n                <include name="Debug"/>\n                <exclude name="Broken"/>\n            </run>\n        </groups>\n        ```', 'requires_approval': False, 'execution_id': 1559}
2025-08-21 11:40:20,508 - dig_connector - INFO - [dig_connector.py:154] - Extracting response content...
2025-08-21 11:40:20,508 - dig_connector - DEBUG - [dig_connector.py:221] - Found message_text in response
2025-08-21 11:40:20,508 - dig_connector - INFO - [dig_connector.py:157] - Successfully generated response (length: 3805)
2025-08-21 11:40:20,508 - __main__ - INFO - [main.py:468] - Received DM response from DIG AI
2025-08-21 11:40:20,508 - __main__ - DEBUG - [main.py:469] - DIG AI DM response: To run an automated test on a local Android phone, you'll need to follow several steps, primarily involving configuration and using specific commands.

Here's a breakdown based on the provided documentation:

**1. Prerequisites & Setup:**
*   **VPN Connection:** Connect to the VPN at `connect.cbsinteractive.com/VPNFT` (Source: https://paramount.atlassian.net/wiki/spaces/PLQA/pages/47720266).
*   **Synergy Server:** Download the latest version of the Synergy server and run its `.jar` file (Websocket) (Source: https://paramount.atlassian.net/wiki/spaces/PLQA/pages/47720266).
*   **Appium Server:** For local runs, you might need to start an Appium server. A sample test class indicates that an Appium server can be started if the environment is "local" and the driver is "android" (Source: https://paramount.atlassian.net/wiki/spaces/PLQA/pages/47711460, SampleTest Class).
*   **Android Home Environment Variable:** Ensure your Run Configuration has the `$ANDROID_HOME` environment variable set and included in the path, especially for Android Emulator smoke tests (Source: https://paramount.atlassian.net/wiki/spaces/PLQA/pages/47713566).

**2. Configure Test Parameters:**
*   **Update `.config` file:** Navigate to the `mqe-hob-mobile-tests` directory and update the desired capabilities in the `.config` file. Key parameters to set include:
    *   `Platform=ANDROID`
    *   `Locale=en-us` (for domestic tests)
    *   `MobileDeviceCategory=PHONE`
    *   `DeviceStartOrientation=PORTRAIT`
    *   `DebugDeviceID`: Add the device ID of your real mobile device (you can find this by typing `adb devices` in the terminal) (Source: https://paramount.atlassian.net/wiki/spaces/PLQA/pages/47720266). This is important for targeting a real device.
    *   `AppPackageUrl`: URL of the build.
    *   `AppBuildType=DEBUG`
    *   `ClientID`: Your machine serial number for local executions or to target a specific private lab machine.
    *   Other parameters like `ServerURL`, `Environment`, `UseGeoVPN`, `TestRailProjectId`, `ReRunOnFailure`, `SendChatReport`, `SendEmailReport`, etc., can also be configured (Source: https://paramount.atlassian.net/wiki/spaces/PLQA/pages/47720266).

*   **Mobile Local Android Run Configuration Arguments:** When setting up your run configuration, consider these arguments:
    *   `-Ddriver=android`
    *   `-DplatformName=Android`
    *   `-DplatformVersion=11.0` (or your Android version)
    *   `-DdeviceName="Google Pixel 2XL"` (or your device name)
    *   `-Denvironment=local`
    *   `-Dheadless=false`
    *   `-Dapp="/pathToPackage/your-app.apk"`
    *   `-Dudid=set this if running on Real Mobile Device only` (Source: https://paramount.atlassian.net/wiki/spaces/PLQA/pages/47711460).

**3. Run the Test:**

Once configured, you have a couple of options to run the test:

*   **From Terminal (using Maven):**
    Open your IDE terminal window and execute the following command:
    ```
    mvn clean test -pl mqe-hob-mobile-tests -am -Dgroups=Your test case number or tag
    ```
    (Source: https://paramount.atlassian.net/wiki/spaces/PLQA/pages/47720266). You can also pass parameters in the maven command, for example, `-Dgroups=Smoke` (Source: https://paramount.atlassian.net/wiki/spaces/PLQA/pages/47720266).

*   **From TestNGSuiteConfig.xml:**
    1.  Navigate to the `TestNGSuiteConfig.xml` file.
    2.  Right-click on the file and select "Run TestNGSuiteConfig.xml".
    3.  Provide the necessary test case ID or tag name within the `<include name=""/`> section in the XML (Source: https://paramount.atlassian.net/wiki/spaces/PLQA/pages/47720266). For example:
        ```xml
        <groups>
            <run>
                <include name="Debug"/>
                <exclude name="Broken"/>
            </run>
        </groups>
        ```
2025-08-21 11:40:20,509 - __main__ - DEBUG - [main.py:474] - Formatted DM response: *Your Query:* How can i run an automated test on a local Android phone?

*Answer:*
To run an automated test on a local Android phone, you'll need to follow several steps, primarily involving configuration and using specific commands.

Here's a breakdown based on the provided documentation:

*1. Prerequisites & Setup:*
*   *VPN Connection:* Connect to the VPN at `connect.cbsinteractive.com/VPNFT` (Source: https://paramount.atlassian.net/wiki/spaces/PLQA/pages/47720266).
*   *Synergy Server:* Download the latest version of the Synergy server and run its `.jar` file (Websocket) (Source: https://paramount.atlassian.net/wiki/spaces/PLQA/pages/47720266).
*   *Appium Server:* For local runs, you might need to start an Appium server. A sample test class indicates that an Appium server can be started if the environment is "local" and the driver is "android" (Source: https://paramount.atlassian.net/wiki/spaces/PLQA/pages/47711460, SampleTest Class).
*   *Android Home Environment Variable:* Ensure your Run Configuration has the `$ANDROID_HOME` environment variable set and included in the path, especially for Android Emulator smoke tests (Source: https://paramount.atlassian.net/wiki/spaces/PLQA/pages/47713566).

*2. Configure Test Parameters:*
*   *Update `.config` file:* Navigate to the `mqe-hob-mobile-tests` directory and update the desired capabilities in the `.config` file. Key parameters to set include:
    *   `Platform=ANDROID`
    *   `Locale=en-us` (for domestic tests)
    *   `MobileDeviceCategory=PHONE`
    *   `DeviceStartOrientation=PORTRAIT`
    *   `DebugDeviceID`: Add the device ID of your real mobile device (you can find this by typing `adb devices` in the terminal) (Source: https://paramount.atlassian.net/wiki/spaces/PLQA/pages/47720266). This is important for targeting a real device.
    *   `AppPackageUrl`: URL of the build.
    *   `AppBuildType=DEBUG`
    *   `ClientID`: Your machine serial number for local executions or to target a specific private lab machine.
    *   Other parameters like `ServerURL`, `Environment`, `UseGeoVPN`, `TestRailProjectId`, `ReRunOnFailure`, `SendChatReport`, `SendEmailReport`, etc., can also be configured (Source: https://paramount.atlassian.net/wiki/spaces/PLQA/pages/47720266).

*   *Mobile Local Android Run Configuration Arguments:* When setting up your run configuration, consider these arguments:
    *   `-Ddriver=android`
    *   `-DplatformName=Android`
    *   `-DplatformVersion=11.0` (or your Android version)
    *   `-DdeviceName="Google Pixel 2XL"` (or your device name)
    *   `-Denvironment=local`
    *   `-Dheadless=false`
    *   `-Dapp="/pathToPackage/your-app.apk"`
    *   `-Dudid=set this if running on Real Mobile Device only` (Source: https://paramount.atlassian.net/wiki/spaces/PLQA/pages/47711460).

*3. Run the Test:*

Once configured, you have a couple of options to run the test:

*   *From Terminal (using Maven):*
    Open your IDE terminal window and execute the following command:
    ```
    mvn clean test -pl mqe-hob-mobile-tests -am -Dgroups=Your test case number or tag
    ```
    (Source: https://paramount.atlassian.net/wiki/spaces/PLQA/pages/47720266). You can also pass parameters in the maven command, for example, `-Dgroups=Smoke` (Source: https://paramount.atlassian.net/wiki/spaces/PLQA/pages/47720266).

*   *From TestNGSuiteConfig.xml:*
    1.  Navigate to the `TestNGSuiteConfig.xml` file.
    2.  Right-click on the file and select "Run TestNGSuiteConfig.xml".
    3.  Provide the necessary test case ID or tag name within the `<include name=""/`> section in the XML (Source: https://paramount.atlassian.net/wiki/spaces/PLQA/pages/47720266). For example:
        ```xml
        <groups>
            <run>
                <include name="Debug"/>
                <exclude name="Broken"/>
            </run>
        </groups>
        ```
2025-08-21 11:40:20,510 - slack_sdk.web.base_client - DEBUG - [base_client.py:255] - Sending a request - url: https://slack.com/api/reactions.remove, query_params: {}, body_params: {'name': 'thinking_face', 'channel': 'D09A0LFHK8R', 'timestamp': '1755801607.484319', 'team_id': 'T010QS7UQNA'}, files: {}, json_body: None, headers: {'Content-Type': 'application/x-www-form-urlencoded', 'Authorization': '(redacted)', 'User-Agent': 'Python/3.12.0 slackclient/3.34.0 Darwin/23.4.0'}
2025-08-21 11:40:20,872 - slack_sdk.web.base_client - DEBUG - [base_client.py:546] - Received the following response - status: 200, headers: {'date': 'Thu, 21 Aug 2025 18:40:20 GMT', 'server': 'Apache', 'vary': 'Accept-Encoding', 'x-slack-req-id': '3754386401260f0888cc37e5a5bc22fa', 'x-content-type-options': 'nosniff', 'x-xss-protection': '0', 'pragma': 'no-cache', 'cache-control': 'private, no-cache, no-store, must-revalidate', 'expires': 'Sat, 26 Jul 1997 05:00:00 GMT', 'content-type': 'application/json; charset=utf-8', 'x-accepted-oauth-scopes': 'reactions:write', 'x-oauth-scopes': 'app_mentions:read,channels:history,chat:write,im:history,im:read,im:write,users:read,reactions:write,users:read.email', 'access-control-expose-headers': 'x-slack-req-id, retry-after', 'access-control-allow-headers': 'slack-route, x-slack-version-ts, x-b3-traceid, x-b3-spanid, x-b3-parentspanid, x-b3-sampled, x-b3-flags', 'strict-transport-security': 'max-age=31536000; includeSubDomains; preload', 'referrer-policy': 'no-referrer', 'x-slack-unique-id': 'aKdoFItgaVT2fNdDDYoV9QAAAAo', 'x-slack-backend': 'r', 'access-control-allow-origin': '*', 'content-length': '11', 'via': '1.1 slack-prod.tinyspeck.com, envoy-www-iad-nkhajalz,envoy-edge-pdx-cxvjrazu', 'x-envoy-attempt-count': '1', 'x-envoy-upstream-service-time': '146', 'x-backend': 'main_normal main_canary_with_overflow main_control_with_overflow', 'x-server': 'slack-www-hhvm-main-iad-nptv', 'x-slack-shared-secret-outcome': 'no-match', 'x-edge-backend': 'envoy-www', 'timing-allow-origin': '*', 'x-slack-edge-shared-secret-outcome': 'no-match', 'connection': 'close'}, body: {"ok":true}
2025-08-21 11:40:20,897 - slack_sdk.web.base_client - DEBUG - [base_client.py:255] - Sending a request - url: https://slack.com/api/chat.postMessage, query_params: {}, body_params: {}, files: {}, json_body: {'channel': 'D09A0LFHK8R', 'text': '*Your Query:* How can i run an automated test on a local Android phone? *Answer:*\nTo run an automated test on a local Android phone, you\'ll need to follow several steps, primarily involving configuration and using specific commands. Here\'s a breakdown based on the provided documentation:\n\n*1. Prerequisites & Setup:*\n*   *VPN Connection:* Connect to the VPN at `connect.cbsinteractive.com/VPNFT` (Source: https://paramount.atlassian.net/wiki/spaces/PLQA/pages/47720266). *   *Synergy Server:* Download the latest version of the Synergy server and run its `.jar` file (Websocket) (Source: https://paramount.atlassian.net/wiki/spaces/PLQA/pages/47720266). *   *Appium Server:* For local runs, you might need to start an Appium server. A sample test class indicates that an Appium server can be started if the environment is "local" and the driver is "android" (Source: https://paramount.atlassian.net/wiki/spaces/PLQA/pages/47711460, SampleTest Class). *   *Android Home Environment Variable:* Ensure your Run Configuration has the `$ANDROID_HOME` environment variable set and included in the path, especially for Android Emulator smoke tests (Source: https://paramount.atlassian.net/wiki/spaces/PLQA/pages/47713566). *2. Configure Test Parameters:*\n*   *Update `.config` file:* Navigate to the `mqe-hob-mobile-tests` directory and update the desired capabilities in the `.config` file. Key parameters to set include:\n    *   `Platform=ANDROID`\n    *   `Locale=en-us` (for domestic tests)\n    *   `MobileDeviceCategory=PHONE`\n    *   `DeviceStartOrientation=PORTRAIT`\n    *   `DebugDeviceID`: Add the device ID of your real mobile device (you can find this by typing `adb devices` in the terminal) (Source: https://paramount.atlassian.net/wiki/spaces/PLQA/pages/47720266). This is important for targeting a real device. *   `AppPackageUrl`: URL of the build. *   `AppBuildType=DEBUG`\n    *   `ClientID`: Your machine serial number for local executions or to target a specific private lab machine. *   Other parameters like `ServerURL`, `Environment`, `UseGeoVPN`, `TestRailProjectId`, `ReRunOnFailure`, `SendChatReport`, `SendEmailReport`, etc., can also be configured (Source: https://paramount.atlassian.net/wiki/spaces/PLQA/pages/47720266). *   *Mobile Local Android Run Configuration Arguments:* When setting up your run configuration, consider these arguments:\n    *   `-Ddriver=android`\n    *   `-DplatformName=Android`\n    *   `-DplatformVersion=11.0` (or your Android version)\n    *   `-DdeviceName="Google Pixel 2XL"` (or your device name)\n    *   `-Denvironment=local`\n    *   `-Dheadless=false`\n    *   `-Dapp="/pathToPackage/your-app.apk"`\n    *   `-Dudid=set this if running on Real Mobile Device only` (Source: https://paramount.atlassian.net/wiki/spaces/PLQA/pages/47711460). *3.\n\n_(message continued in thread...)_', 'thread_ts': '1755801607.484319', 'team_id': 'T010QS7UQNA'}, headers: {'Content-Type': 'application/json;charset=utf-8', 'Authorization': '(redacted)', 'User-Agent': 'Python/3.12.0 slackclient/3.34.0 Darwin/23.4.0'}
2025-08-21 11:40:21,335 - slack_sdk.web.base_client - DEBUG - [base_client.py:546] - Received the following response - status: 200, headers: {'date': 'Thu, 21 Aug 2025 18:40:21 GMT', 'server': 'Apache', 'vary': 'Accept-Encoding', 'x-slack-req-id': 'f4b1baa93f27bb1e9eda6916c60e66a8', 'x-content-type-options': 'nosniff', 'x-xss-protection': '0', 'pragma': 'no-cache', 'cache-control': 'private, no-cache, no-store, must-revalidate', 'expires': 'Sat, 26 Jul 1997 05:00:00 GMT', 'content-type': 'application/json; charset=utf-8', 'x-accepted-oauth-scopes': 'chat:write', 'x-oauth-scopes': 'app_mentions:read,channels:history,chat:write,im:history,im:read,im:write,users:read,reactions:write,users:read.email', 'access-control-expose-headers': 'x-slack-req-id, retry-after', 'access-control-allow-headers': 'slack-route, x-slack-version-ts, x-b3-traceid, x-b3-spanid, x-b3-parentspanid, x-b3-sampled, x-b3-flags', 'strict-transport-security': 'max-age=31536000; includeSubDomains; preload', 'referrer-policy': 'no-referrer', 'x-slack-unique-id': 'aKdoFchuXv5sbc_AeHFsYwAAEAw', 'x-slack-backend': 'r', 'access-control-allow-origin': '*', 'content-length': '9909', 'via': '1.1 slack-prod.tinyspeck.com, envoy-www-iad-saxkheca,envoy-edge-pdx-nikrgwzt', 'x-envoy-attempt-count': '1', 'x-envoy-upstream-service-time': '208', 'x-backend': 'main_normal main_canary_with_overflow main_control_with_overflow', 'x-server': 'slack-www-hhvm-main-iad-aulj', 'x-slack-shared-secret-outcome': 'no-match', 'x-edge-backend': 'envoy-www', 'timing-allow-origin': '*', 'x-slack-edge-shared-secret-outcome': 'no-match', 'connection': 'close'}, body: {"ok":true,"channel":"D09A0LFHK8R","ts":"1755801621.332649","message":{"user":"U099R6WTZ9S","type":"message","ts":"1755801621.332649","bot_id":"B099R6WTRU4","app_id":"A099LACAB2R","text":"*Your Query:* How can i run an automated test on a local Android phone? *Answer:*\nTo run an automated test on a local Android phone, you'll need to follow several steps, primarily involving configuration and using specific commands. Here's a breakdown based on the provided documentation:\n\n*1. Prerequisites &amp; Setup:*\n*   *VPN Connection:* Connect to the VPN at `<http://connect.cbsinteractive.com/VPNFT|connect.cbsinteractive.com/VPNFT>` (Source: <https://paramount.atlassian.net/wiki/spaces/PLQA/pages/47720266>). *   *Synergy Server:* Download the latest version of the Synergy server and run its `.jar` file (Websocket) (Source: <https://paramount.atlassian.net/wiki/spaces/PLQA/pages/47720266>). *   *Appium Server:* For local runs, you might need to start an Appium server. A sample test class indicates that an Appium server can be started if the environment is \"local\" and the driver is \"android\" (Source: <https://paramount.atlassian.net/wiki/spaces/PLQA/pages/47711460>, SampleTest Class). *   *Android Home Environment Variable:* Ensure your Run Configuration has the `$ANDROID_HOME` environment variable set and included in the path, especially for Android Emulator smoke tests (Source: <https://paramount.atlassian.net/wiki/spaces/PLQA/pages/47713566>). *2. Configure Test Parameters:*\n*   *Update `.config` file:* Navigate to the `mqe-hob-mobile-tests` directory and update the desired capabilities in the `.config` file. Key parameters to set include:\n    *   `Platform=ANDROID`\n    *   `Locale=en-us` (for domestic tests)\n    *   `MobileDeviceCategory=PHONE`\n    *   `DeviceStartOrientation=PORTRAIT`\n    *   `DebugDeviceID`: Add the device ID of your real mobile device (you can find this by typing `adb devices` in the terminal) (Source: <https://paramount.atlassian.net/wiki/spaces/PLQA/pages/47720266>). This is important for targeting a real device. *   `AppPackageUrl`: URL of the build. *   `AppBuildType=DEBUG`\n    *   `ClientID`: Your machine serial number for local executions or to target a specific private lab machine. *   Other parameters like `ServerURL`, `Environment`, `UseGeoVPN`, `TestRailProjectId`, `ReRunOnFailure`, `SendChatReport`, `SendEmailReport`, etc., can also be configured (Source: <https://paramount.atlassian.net/wiki/spaces/PLQA/pages/47720266>). *   *Mobile Local Android Run Configuration Arguments:* When setting up your run configuration, consider these arguments:\n    *   `-Ddriver=android`\n    *   `-DplatformName=Android`\n    *   `-DplatformVersion=11.0` (or your Android version)\n    *   `-DdeviceName=\"Google Pixel 2XL\"` (or your device name)\n    *   `-Denvironment=local`\n    *   `-Dheadless=false`\n    *   `-Dapp=\"/pathToPackage/your-app.apk\"`\n    *   `-Dudid=set this if running on Real Mobile Device only` (Source: <https://paramount.atlassian.net/wiki/spaces/PLQA/pages/47711460>). *3.\n\n_(message continued in thread...)_","team":"T010QS7UQNA","bot_profile":{"id":"B099R6WTRU4","app_id":"A099LACAB2R","user_id":"U099R6WTZ9S","name":"AutoBot","icons":{"image_36":"https://a.slack-edge.com/80588/img/plugins/app/bot_36.png","image_48":"https://a.slack-edge.com/80588/img/plugins/app/bot_48.png","image_72":"https://a.slack-edge.com/80588/img/plugins/app/service_72.png"},"deleted":false,"updated":1754677948,"team_id":"T010QS7UQNA"},"thread_ts":"1755801607.484319","parent_user_id":"U01RMTFMALF","blocks":[{"type":"rich_text","block_id":"GaA","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Your Query:","style":{"bold":true}},{"type":"text","text":" How can i run an automated test on a local Android phone? "},{"type":"text","text":"Answer:","style":{"bold":true}},{"type":"text","text":"\nTo run an automated test on a local Android phone, you'll need to follow several steps, primarily involving configuration and using specific commands. Here's a breakdown based on the provided documentation:\n\n"},{"type":"text","text":"1. Prerequisites & Setup:","style":{"bold":true}},{"type":"text","text":"\n*   "},{"type":"text","text":"VPN Connection:","style":{"bold":true}},{"type":"text","text":" Connect to the VPN at "},{"type":"link","url":"http://connect.cbsinteractive.com/VPNFT","text":"connect.cbsinteractive.com/VPNFT","style":{"code":true}},{"type":"text","text":" (Source: "},{"type":"link","url":"https://paramount.atlassian.net/wiki/spaces/PLQA/pages/47720266"},{"type":"text","text":"). *   "},{"type":"text","text":"Synergy Server:","style":{"bold":true}},{"type":"text","text":" Download the latest version of the Synergy server and run its "},{"type":"text","text":".jar","style":{"code":true}},{"type":"text","text":" file (Websocket) (Source: "},{"type":"link","url":"https://paramount.atlassian.net/wiki/spaces/PLQA/pages/47720266"},{"type":"text","text":"). *   "},{"type":"text","text":"Appium Server:","style":{"bold":true}},{"type":"text","text":" For local runs, you might need to start an Appium server. A sample test class indicates that an Appium server can be started if the environment is \"local\" and the driver is \"android\" (Source: "},{"type":"link","url":"https://paramount.atlassian.net/wiki/spaces/PLQA/pages/47711460"},{"type":"text","text":", SampleTest Class). *   "},{"type":"text","text":"Android Home Environment Variable:","style":{"bold":true}},{"type":"text","text":" Ensure your Run Configuration has the "},{"type":"text","text":"$ANDROID_HOME","style":{"code":true}},{"type":"text","text":" environment variable set and included in the path, especially for Android Emulator smoke tests (Source: "},{"type":"link","url":"https://paramount.atlassian.net/wiki/spaces/PLQA/pages/47713566"},{"type":"text","text":"). "},{"type":"text","text":"2. Configure Test Parameters:","style":{"bold":true}},{"type":"text","text":"\n*   "},{"type":"text","text":"Update ","style":{"bold":true}},{"type":"text","text":".config","style":{"bold":true,"code":true}},{"type":"text","text":" file:","style":{"bold":true}},{"type":"text","text":" Navigate to the "},{"type":"text","text":"mqe-hob-mobile-tests","style":{"code":true}},{"type":"text","text":" directory and update the desired capabilities in the "},{"type":"text","text":".config","style":{"code":true}},{"type":"text","text":" file. Key parameters to set include:\n    *   "},{"type":"text","text":"Platform=ANDROID","style":{"code":true}},{"type":"text","text":"\n    *   "},{"type":"text","text":"Locale=en-us","style":{"code":true}},{"type":"text","text":" (for domestic tests)\n    *   "},{"type":"text","text":"MobileDeviceCategory=PHONE","style":{"code":true}},{"type":"text","text":"\n    *   "},{"type":"text","text":"DeviceStartOrientation=PORTRAIT","style":{"code":true}},{"type":"text","text":"\n    *   "},{"type":"text","text":"DebugDeviceID","style":{"code":true}},{"type":"text","text":": Add the device ID of your real mobile device (you can find this by typing "},{"type":"text","text":"adb devices","style":{"code":true}},{"type":"text","text":" in the terminal) (Source: "},{"type":"link","url":"https://paramount.atlassian.net/wiki/spaces/PLQA/pages/47720266"},{"type":"text","text":"). This is important for targeting a real device. *   "},{"type":"text","text":"AppPackageUrl","style":{"code":true}},{"type":"text","text":": URL of the build. *   "},{"type":"text","text":"AppBuildType=DEBUG","style":{"code":true}},{"type":"text","text":"\n    *   "},{"type":"text","text":"ClientID","style":{"code":true}},{"type":"text","text":": Your machine serial number for local executions or to target a specific private lab machine. *   Other parameters like "},{"type":"text","text":"ServerURL","style":{"code":true}},{"type":"text","text":", "},{"type":"text","text":"Environment","style":{"code":true}},{"type":"text","text":", "},{"type":"text","text":"UseGeoVPN","style":{"code":true}},{"type":"text","text":", "},{"type":"text","text":"TestRailProjectId","style":{"code":true}},{"type":"text","text":", "},{"type":"text","text":"ReRunOnFailure","style":{"code":true}},{"type":"text","text":", "},{"type":"text","text":"SendChatReport","style":{"code":true}},{"type":"text","text":", "},{"type":"text","text":"SendEmailReport","style":{"code":true}},{"type":"text","text":", etc., can also be configured (Source: "},{"type":"link","url":"https://paramount.atlassian.net/wiki/spaces/PLQA/pages/47720266"},{"type":"text","text":"). *   "},{"type":"text","text":"Mobile Local Android Run Configuration Arguments:","style":{"bold":true}},{"type":"text","text":" When setting up your run configuration, consider these arguments:\n    *   "},{"type":"text","text":"-Ddriver=android","style":{"code":true}},{"type":"text","text":"\n    *   "},{"type":"text","text":"-DplatformName=Android","style":{"code":true}},{"type":"text","text":"\n    *   "},{"type":"text","text":"-DplatformVersion=11.0","style":{"code":true}},{"type":"text","text":" (or your Android version)\n    *   "},{"type":"text","text":"-DdeviceName=\"Google Pixel 2XL\"","style":{"code":true}},{"type":"text","text":" (or your device name)\n    *   "},{"type":"text","text":"-Denvironment=local","style":{"code":true}},{"type":"text","text":"\n    *   "},{"type":"text","text":"-Dheadless=false","style":{"code":true}},{"type":"text","text":"\n    *   "},{"type":"text","text":"-Dapp=\"/pathToPackage/your-app.apk\"","style":{"code":true}},{"type":"text","text":"\n    *   "},{"type":"text","text":"-Dudid=set this if running on Real Mobile Device only","style":{"code":true}},{"type":"text","text":" (Source: "},{"type":"link","url":"https://paramount.atlassian.net/wiki/spaces/PLQA/pages/47711460"},{"type":"text","text":"). *3.\n\n"},{"type":"text","text":"(message continued in thread...)","style":{"italic":true}}]}]}]}}
2025-08-21 11:40:21,336 - slack_sdk.web.base_client - DEBUG - [base_client.py:255] - Sending a request - url: https://slack.com/api/chat.postMessage, query_params: {}, body_params: {}, files: {}, json_body: {'channel': 'D09A0LFHK8R', 'text': '_(part 2/2)_\n\nRun the Test:*\n\nOnce configured, you have a couple of options to run the test:\n\n*   *From Terminal (using Maven):*\n    Open your IDE terminal window and execute the following command:\n    ```\n    mvn clean test -pl mqe-hob-mobile-tests -am -Dgroups=Your test case number or tag\n    ```\n    (Source: https://paramount.atlassian.net/wiki/spaces/PLQA/pages/47720266). You can also pass parameters in the maven command, for example, `-Dgroups=Smoke` (Source: https://paramount.atlassian.net/wiki/spaces/PLQA/pages/47720266). *   *From TestNGSuiteConfig.xml:*\n    1. Navigate to the `TestNGSuiteConfig.xml` file. 2. Right-click on the file and select "Run TestNGSuiteConfig.xml". 3. Provide the necessary test case ID or tag name within the `<include name=""/`> section in the XML (Source: https://paramount.atlassian.net/wiki/spaces/PLQA/pages/47720266). For example:\n        ```xml\n        <groups>\n            <run>\n                <include name="Debug"/>\n                <exclude name="Broken"/>\n            </run>\n        </groups>\n        ```', 'thread_ts': '1755801607.484319', 'team_id': 'T010QS7UQNA'}, headers: {'Content-Type': 'application/json;charset=utf-8', 'Authorization': '(redacted)', 'User-Agent': 'Python/3.12.0 slackclient/3.34.0 Darwin/23.4.0'}
2025-08-21 11:40:21,726 - slack_sdk.web.base_client - DEBUG - [base_client.py:546] - Received the following response - status: 200, headers: {'date': 'Thu, 21 Aug 2025 18:40:21 GMT', 'server': 'Apache', 'vary': 'Accept-Encoding', 'x-slack-req-id': '6c23d8891a93a8d334d4ea9123fe6eca', 'x-content-type-options': 'nosniff', 'x-xss-protection': '0', 'pragma': 'no-cache', 'cache-control': 'private, no-cache, no-store, must-revalidate', 'expires': 'Sat, 26 Jul 1997 05:00:00 GMT', 'content-type': 'application/json; charset=utf-8', 'x-accepted-oauth-scopes': 'chat:write', 'x-oauth-scopes': 'app_mentions:read,channels:history,chat:write,im:history,im:read,im:write,users:read,reactions:write,users:read.email', 'access-control-expose-headers': 'x-slack-req-id, retry-after', 'access-control-allow-headers': 'slack-route, x-slack-version-ts, x-b3-traceid, x-b3-spanid, x-b3-parentspanid, x-b3-sampled, x-b3-flags', 'strict-transport-security': 'max-age=31536000; includeSubDomains; preload', 'referrer-policy': 'no-referrer', 'x-slack-unique-id': 'aKdoFd51sOmfMInrJ-gxEwAAADs', 'x-slack-backend': 'r', 'access-control-allow-origin': '*', 'content-length': '3770', 'via': '1.1 slack-prod.tinyspeck.com, envoy-www-iad-qvsffjdi,envoy-edge-pdx-hyuxslbj', 'x-envoy-attempt-count': '1', 'x-envoy-upstream-service-time': '161', 'x-backend': 'main_normal main_canary_with_overflow main_control_with_overflow', 'x-server': 'slack-www-hhvm-main-iad-staf', 'x-slack-shared-secret-outcome': 'no-match', 'x-edge-backend': 'envoy-www', 'timing-allow-origin': '*', 'x-slack-edge-shared-secret-outcome': 'no-match', 'connection': 'close'}, body: {"ok":true,"channel":"D09A0LFHK8R","ts":"1755801621.730319","message":{"user":"U099R6WTZ9S","type":"message","ts":"1755801621.730319","bot_id":"B099R6WTRU4","app_id":"A099LACAB2R","text":"_(part 2/2)_\n\nRun the Test:*\n\nOnce configured, you have a couple of options to run the test:\n\n*   *From Terminal (using Maven):*\n    Open your IDE terminal window and execute the following command:\n    ```\n    mvn clean test -pl mqe-hob-mobile-tests -am -Dgroups=Your test case number or tag\n    ```\n    (Source: <https://paramount.atlassian.net/wiki/spaces/PLQA/pages/47720266>). You can also pass parameters in the maven command, for example, `-Dgroups=Smoke` (Source: <https://paramount.atlassian.net/wiki/spaces/PLQA/pages/47720266>). *   *From TestNGSuiteConfig.xml:*\n    1. Navigate to the `TestNGSuiteConfig.xml` file. 2. Right-click on the file and select \"Run TestNGSuiteConfig.xml\". 3. Provide the necessary test case ID or tag name within the `&lt;include name=\"\"/`&gt; section in the XML (Source: <https://paramount.atlassian.net/wiki/spaces/PLQA/pages/47720266>). For example:\n        ```xml\n        &lt;groups&gt;\n            &lt;run&gt;\n                &lt;include name=\"Debug\"/&gt;\n                &lt;exclude name=\"Broken\"/&gt;\n            &lt;/run&gt;\n        &lt;/groups&gt;\n        ```","team":"T010QS7UQNA","bot_profile":{"id":"B099R6WTRU4","app_id":"A099LACAB2R","user_id":"U099R6WTZ9S","name":"AutoBot","icons":{"image_36":"https://a.slack-edge.com/80588/img/plugins/app/bot_36.png","image_48":"https://a.slack-edge.com/80588/img/plugins/app/bot_48.png","image_72":"https://a.slack-edge.com/80588/img/plugins/app/service_72.png"},"deleted":false,"updated":1754677948,"team_id":"T010QS7UQNA"},"thread_ts":"1755801607.484319","parent_user_id":"U01RMTFMALF","blocks":[{"type":"rich_text","block_id":"2GxN","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"(part 2/2)","style":{"italic":true}},{"type":"text","text":"\n\nRun the Test:*\n\nOnce configured, you have a couple of options to run the test:\n\n*   "},{"type":"text","text":"From Terminal (using Maven):","style":{"bold":true}},{"type":"text","text":"\n    Open your IDE terminal window and execute the following command:\n    "}]},{"type":"rich_text_preformatted","elements":[{"type":"text","text":"    mvn clean test -pl mqe-hob-mobile-tests -am -Dgroups=Your test case number or tag\n    "}]},{"type":"rich_text_section","elements":[{"type":"text","text":"    (Source: "},{"type":"link","url":"https://paramount.atlassian.net/wiki/spaces/PLQA/pages/47720266"},{"type":"text","text":"). You can also pass parameters in the maven command, for example, "},{"type":"text","text":"-Dgroups=Smoke","style":{"code":true}},{"type":"text","text":" (Source: "},{"type":"link","url":"https://paramount.atlassian.net/wiki/spaces/PLQA/pages/47720266"},{"type":"text","text":"). *   "},{"type":"text","text":"From TestNGSuiteConfig.xml:","style":{"bold":true}},{"type":"text","text":"\n    1. Navigate to the "},{"type":"text","text":"TestNGSuiteConfig.xml","style":{"code":true}},{"type":"text","text":" file. 2. Right-click on the file and select \"Run TestNGSuiteConfig.xml\". 3. Provide the necessary test case ID or tag name within the "},{"type":"text","text":"<include name=\"\"/","style":{"code":true}},{"type":"text","text":"> section in the XML (Source: "},{"type":"link","url":"https://paramount.atlassian.net/wiki/spaces/PLQA/pages/47720266"},{"type":"text","text":"). For example:\n        "}]},{"type":"rich_text_preformatted","elements":[{"type":"text","text":"xml\n        <groups>\n            <run>\n                <include name=\"Debug\"/>\n                <exclude name=\"Broken\"/>\n            </run>\n        </groups>\n        "}]}]}]}}
2025-08-21 11:40:21,727 - __main__ - DEBUG - [main.py:499] - Cleaning up DM thread tracking...
2025-08-21 11:40:21,728 - utils - DEBUG - [utils.py:67] - Managing thread: D09A0LFHK8R:1755801607.484319, action: remove, user: U01RMTFMALF
2025-08-21 11:40:21,728 - utils - INFO - [utils.py:100] - Removed thread D09A0LFHK8R:1755801607.484319 from active tracking (remaining: 0)
2025-08-21 11:40:22,850 - slack_bolt.App - DEBUG - [client.py:235] - on_message invoked: (message: {"envelope_id":"67ba0108-ce73-4d98-aa9d-e21d0200a25d","payload":{"token":"yq71khZBCyJF1Ri2hG5aNqr5","team_id":"T010QS7UQNA","enterprise_id":"ERV4P7NAD","context_team_id":null,"context_enterprise_id":"ERV4P7NAD","api_app_id":"A099LACAB2R","event":{"user":"U099R6WTZ9S","type":"message","ts":"1755801621.730319","bot_id":"B099R6WTRU4","app_id":"A099LACAB2R","text":"_(part 2\/2)_\n\nRun the Test:*\n\nOnce configured, you have a couple of options to run the test:\n\n*   *From Terminal (using Maven):*\n    Open your IDE terminal window and execute the following command:\n    ```\n    mvn clean test -pl mqe-hob-mobile-tests -am -Dgroups=Your test case number or tag\n    ```\n    (Source: <https:\/\/paramount.atlassian.net\/wiki\/spaces\/PLQA\/pages\/47720266>). You can also pass parameters in the maven command, for example, `-Dgroups=Smoke` (Source: <https:\/\/paramount.atlassian.net\/wiki\/spaces\/PLQA\/pages\/47720266>). *   *From TestNGSuiteConfig.xml:*\n    1. Navigate to the `TestNGSuiteConfig.xml` file. 2. Right-click on the file and select \"Run TestNGSuiteConfig.xml\". 3. Provide the necessary test case ID or tag name within the `&lt;include name=\"\"\/`&gt; section in the XML (Source: <https:\/\/paramount.atlassian.net\/wiki\/spaces\/PLQA\/pages\/47720266>). For example:\n        ```xml\n        &lt;groups&gt;\n            &lt;run&gt;\n                &lt;include name=\"Debug\"\/&gt;\n                &lt;exclude name=\"Broken\"\/&gt;\n            &lt;\/run&gt;\n        &lt;\/groups&gt;\n        ```","team":"T010QS7UQNA","bot_profile":{"id":"B099R6WTRU4","deleted":false,"name":"AutoBot","updated":1754677948,"app_id":"A099LACAB2R","user_id":"U099R6WTZ9S","icons":{"image_36":"https:\/\/a.slack-edge.com\/80588\/img\/plugins\/app\/bot_36.png","image_48":"https:\/\/a.slack-edge.com\/80588\/img\/plugins\/app\/bot_48.png","image_72":"https:\/\/a.slack-edge.com\/80588\/img\/plugins\/app\/service_72.png"},"team_id":"T010QS7UQNA"},"thread_ts":"1755801607.484319","parent_user_id":"U01RMTFMALF","blocks":[{"type":"rich_text","block_id":"deMZ","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"(part 2\/2)","style":{"italic":true}},{"type":"text","text":"\n\nRun the Test:*\n\nOnce configured, you have a couple of options to run the test:\n\n*   "},{"type":"text","text":"From Terminal (using Maven):","style":{"bold":true}},{"type":"text","text":"\n    Open your IDE terminal window and execute the following command:\n    "}]},{"type":"rich_text_preformatted","elements":[{"type":"text","text":"    mvn clean test -pl mqe-hob-mobile-tests -am -Dgroups=Your test case number or tag\n    "}]},{"type":"rich_text_section","elements":[{"type":"text","text":"    (Source: "},{"type":"link","url":"https:\/\/paramount.atlassian.net\/wiki\/spaces\/PLQA\/pages\/47720266"},{"type":"text","text":"). You can also pass parameters in the maven command, for example, "},{"type":"text","text":"-Dgroups=Smoke","style":{"code":true}},{"type":"text","text":" (Source: "},{"type":"link","url":"https:\/\/paramount.atlassian.net\/wiki\/spaces\/PLQA\/pages\/47720266"},{"type":"text","text":"). *   "},{"type":"text","text":"From TestNGSuiteConfig.xml:","style":{"bold":true}},{"type":"text","text":"\n    1. Navigate to the "},{"type":"text","text":"TestNGSuiteConfig.xml","style":{"code":true}},{"type":"text","text":" file. 2. Right-click on the file and select \"Run TestNGSuiteConfig.xml\". 3. Provide the necessary test case ID or tag name within the "},{"type":"text","text":"<include name=\"\"\/","style":{"code":true}},{"type":"text","text":"> section in the XML (Source: "},{"type":"link","url":"https:\/\/paramount.atlassian.net\/wiki\/spaces\/PLQA\/pages\/47720266"},{"type":"text","text":"). For example:\n        "}]},{"type":"rich_text_preformatted","elements":[{"type":"text","text":"xml\n        <groups>\n            <run>\n                <include name=\"Debug\"\/>\n                <exclude name=\"Broken\"\/>\n            <\/run>\n        <\/groups>\n        "}]}]}],"channel":"D09A0LFHK8R","event_ts":"1755801621.730319","channel_type":"im"},"type":"event_callback","event_id":"Ev09BB4NRSRZ","event_time":1755801621,"authorizations":[{"enterprise_id":"ERV4P7NAD","team_id":"T010QS7UQNA","user_id":"U099R6WTZ9S","is_bot":true,"is_enterprise_install":false}],"is_ext_shared_channel":false,"event_context":"4-eyJldCI6Im1lc3NhZ2UiLCJ0aWQiOiJUMDEwUVM3VVFOQSIsImFpZCI6IkEwOTlMQUNBQjJSIiwiY2lkIjoiRDA5QTBMRkhLOFIifQ"},"type":"events_api","accepts_response_payload":false,"retry_attempt":0,"retry_reason":""})
2025-08-21 11:40:22,851 - slack_bolt.App - DEBUG - [client.py:99] - A new message enqueued (current queue size: 1)
2025-08-21 11:40:22,851 - slack_bolt.App - DEBUG - [client.py:105] - A message dequeued (current queue size: 0)
2025-08-21 11:40:22,851 - slack_bolt.App - DEBUG - [client.py:125] - Message processing started (type: events_api, envelope_id: 67ba0108-ce73-4d98-aa9d-e21d0200a25d)
2025-08-21 11:40:22,852 - slack_bolt.App - DEBUG - [app.py:476] - Applying slack_bolt.middleware.ssl_check.ssl_check.SslCheck
2025-08-21 11:40:22,852 - slack_bolt.App - DEBUG - [app.py:476] - Applying slack_bolt.middleware.request_verification.request_verification.RequestVerification
2025-08-21 11:40:22,852 - slack_bolt.App - DEBUG - [app.py:476] - Applying slack_bolt.middleware.authorization.single_team_authorization.SingleTeamAuthorization
2025-08-21 11:40:22,852 - slack_bolt.App - DEBUG - [app.py:476] - Applying slack_bolt.middleware.ignoring_self_events.ignoring_self_events.IgnoringSelfEvents
2025-08-21 11:40:22,853 - slack_bolt.IgnoringSelfEvents - DEBUG - [ignoring_self_events.py:60] - Skipped self event: {'user': 'U099R6WTZ9S', 'type': 'message', 'ts': '1755801621.730319', 'bot_id': 'B099R6WTRU4', 'app_id': 'A099LACAB2R', 'text': '_(part 2/2)_\n\nRun the Test:*\n\nOnce configured, you have a couple of options to run the test:\n\n*   *From Terminal (using Maven):*\n    Open your IDE terminal window and execute the following command:\n    ```\n    mvn clean test -pl mqe-hob-mobile-tests -am -Dgroups=Your test case number or tag\n    ```\n    (Source: <https://paramount.atlassian.net/wiki/spaces/PLQA/pages/47720266>). You can also pass parameters in the maven command, for example, `-Dgroups=Smoke` (Source: <https://paramount.atlassian.net/wiki/spaces/PLQA/pages/47720266>). *   *From TestNGSuiteConfig.xml:*\n    1. Navigate to the `TestNGSuiteConfig.xml` file. 2. Right-click on the file and select "Run TestNGSuiteConfig.xml". 3. Provide the necessary test case ID or tag name within the `&lt;include name=""/`&gt; section in the XML (Source: <https://paramount.atlassian.net/wiki/spaces/PLQA/pages/47720266>). For example:\n        ```xml\n        &lt;groups&gt;\n            &lt;run&gt;\n                &lt;include name="Debug"/&gt;\n                &lt;exclude name="Broken"/&gt;\n            &lt;/run&gt;\n        &lt;/groups&gt;\n        ```', 'team': 'T010QS7UQNA', 'bot_profile': {'id': 'B099R6WTRU4', 'deleted': False, 'name': 'AutoBot', 'updated': 1754677948, 'app_id': 'A099LACAB2R', 'user_id': 'U099R6WTZ9S', 'icons': {'image_36': 'https://a.slack-edge.com/80588/img/plugins/app/bot_36.png', 'image_48': 'https://a.slack-edge.com/80588/img/plugins/app/bot_48.png', 'image_72': 'https://a.slack-edge.com/80588/img/plugins/app/service_72.png'}, 'team_id': 'T010QS7UQNA'}, 'thread_ts': '1755801607.484319', 'parent_user_id': 'U01RMTFMALF', 'blocks': [{'type': 'rich_text', 'block_id': 'deMZ', 'elements': [{'type': 'rich_text_section', 'elements': [{'type': 'text', 'text': '(part 2/2)', 'style': {'italic': True}}, {'type': 'text', 'text': '\n\nRun the Test:*\n\nOnce configured, you have a couple of options to run the test:\n\n*   '}, {'type': 'text', 'text': 'From Terminal (using Maven):', 'style': {'bold': True}}, {'type': 'text', 'text': '\n    Open your IDE terminal window and execute the following command:\n    '}]}, {'type': 'rich_text_preformatted', 'elements': [{'type': 'text', 'text': '    mvn clean test -pl mqe-hob-mobile-tests -am -Dgroups=Your test case number or tag\n    '}]}, {'type': 'rich_text_section', 'elements': [{'type': 'text', 'text': '    (Source: '}, {'type': 'link', 'url': 'https://paramount.atlassian.net/wiki/spaces/PLQA/pages/47720266'}, {'type': 'text', 'text': '). You can also pass parameters in the maven command, for example, '}, {'type': 'text', 'text': '-Dgroups=Smoke', 'style': {'code': True}}, {'type': 'text', 'text': ' (Source: '}, {'type': 'link', 'url': 'https://paramount.atlassian.net/wiki/spaces/PLQA/pages/47720266'}, {'type': 'text', 'text': '). *   '}, {'type': 'text', 'text': 'From TestNGSuiteConfig.xml:', 'style': {'bold': True}}, {'type': 'text', 'text': '\n    1. Navigate to the '}, {'type': 'text', 'text': 'TestNGSuiteConfig.xml', 'style': {'code': True}}, {'type': 'text', 'text': ' file. 2. Right-click on the file and select "Run TestNGSuiteConfig.xml". 3. Provide the necessary test case ID or tag name within the '}, {'type': 'text', 'text': '<include name=""/', 'style': {'code': True}}, {'type': 'text', 'text': '> section in the XML (Source: '}, {'type': 'link', 'url': 'https://paramount.atlassian.net/wiki/spaces/PLQA/pages/47720266'}, {'type': 'text', 'text': '). For example:\n        '}]}, {'type': 'rich_text_preformatted', 'elements': [{'type': 'text', 'text': 'xml\n        <groups>\n            <run>\n                <include name="Debug"/>\n                <exclude name="Broken"/>\n            </run>\n        </groups>\n        '}]}]}], 'channel': 'D09A0LFHK8R', 'event_ts': '1755801621.730319', 'channel_type': 'im'}
2025-08-21 11:40:22,853 - slack_bolt.App - DEBUG - [client.py:200] - Sending a message (session id: 9adf3bcc-e9d3-4f5c-b2bc-938d72bdb603, message: {"envelope_id": "67ba0108-ce73-4d98-aa9d-e21d0200a25d"})
2025-08-21 11:40:22,853 - slack_bolt.App - DEBUG - [internals.py:41] - Response time: 1 milliseconds
2025-08-21 11:40:22,853 - slack_bolt.App - DEBUG - [client.py:150] - Message processing completed (type: events_api, envelope_id: 67ba0108-ce73-4d98-aa9d-e21d0200a25d)
2025-08-21 11:40:23,180 - slack_bolt.App - DEBUG - [client.py:235] - on_message invoked: (message: {"envelope_id":"c7c1f499-df8f-470d-8cfc-942464163076","payload":{"token":"yq71khZBCyJF1Ri2hG5aNqr5","team_id":"T010QS7UQNA","enterprise_id":"ERV4P7NAD","context_team_id":null,"context_enterprise_id":"ERV4P7NAD","api_app_id":"A099LACAB2R","event":{"user":"U099R6WTZ9S","type":"message","ts":"1755801621.332649","bot_id":"B099R6WTRU4","app_id":"A099LACAB2R","text":"*Your Query:* How can i run an automated test on a local Android phone? *Answer:*\nTo run an automated test on a local Android phone, you'll need to follow several steps, primarily involving configuration and using specific commands. Here's a breakdown based on the provided documentation:\n\n*1. Prerequisites &amp; Setup:*\n*   *VPN Connection:* Connect to the VPN at `<http:\/\/connect.cbsinteractive.com\/VPNFT|connect.cbsinteractive.com\/VPNFT>` (Source: <https:\/\/paramount.atlassian.net\/wiki\/spaces\/PLQA\/pages\/47720266>). *   *Synergy Server:* Download the latest version of the Synergy server and run its `.jar` file (Websocket) (Source: <https:\/\/paramount.atlassian.net\/wiki\/spaces\/PLQA\/pages\/47720266>). *   *Appium Server:* For local runs, you might need to start an Appium server. A sample test class indicates that an Appium server can be started if the environment is \"local\" and the driver is \"android\" (Source: <https:\/\/paramount.atlassian.net\/wiki\/spaces\/PLQA\/pages\/47711460>, SampleTest Class). *   *Android Home Environment Variable:* Ensure your Run Configuration has the `$ANDROID_HOME` environment variable set and included in the path, especially for Android Emulator smoke tests (Source: <https:\/\/paramount.atlassian.net\/wiki\/spaces\/PLQA\/pages\/47713566>). *2. Configure Test Parameters:*\n*   *Update `.config` file:* Navigate to the `mqe-hob-mobile-tests` directory and update the desired capabilities in the `.config` file. Key parameters to set include:\n    *   `Platform=ANDROID`\n    *   `Locale=en-us` (for domestic tests)\n    *   `MobileDeviceCategory=PHONE`\n    *   `DeviceStartOrientation=PORTRAIT`\n    *   `DebugDeviceID`: Add the device ID of your real mobile device (you can find this by typing `adb devices` in the terminal) (Source: <https:\/\/paramount.atlassian.net\/wiki\/spaces\/PLQA\/pages\/47720266>). This is important for targeting a real device. *   `AppPackageUrl`: URL of the build. *   `AppBuildType=DEBUG`\n    *   `ClientID`: Your machine serial number for local executions or to target a specific private lab machine. *   Other parameters like `ServerURL`, `Environment`, `UseGeoVPN`, `TestRailProjectId`, `ReRunOnFailure`, `SendChatReport`, `SendEmailReport`, etc., can also be configured (Source: <https:\/\/paramount.atlassian.net\/wiki\/spaces\/PLQA\/pages\/47720266>). *   *Mobile Local Android Run Configuration Arguments:* When setting up your run configuration, consider these arguments:\n    *   `-Ddriver=android`\n    *   `-DplatformName=Android`\n    *   `-DplatformVersion=11.0` (or your Android version)\n    *   `-DdeviceName=\"Google Pixel 2XL\"` (or your device name)\n    *   `-Denvironment=local`\n    *   `-Dheadless=false`\n    *   `-Dapp=\"\/pathToPackage\/your-app.apk\"`\n    *   `-Dudid=set this if running on Real Mobile Device only` (Source: <https:\/\/paramount.atlassian.net\/wiki\/spaces\/PLQA\/pages\/47711460>). *3.\n\n_(message continued in thread...)_","team":"T010QS7UQNA","bot_profile":{"id":"B099R6WTRU4","deleted":false,"name":"AutoBot","updated":1754677948,"app_id":"A099LACAB2R","user_id":"U099R6WTZ9S","icons":{"image_36":"https:\/\/a.slack-edge.com\/80588\/img\/plugins\/app\/bot_36.png","image_48":"https:\/\/a.slack-edge.com\/80588\/img\/plugins\/app\/bot_48.png","image_72":"https:\/\/a.slack-edge.com\/80588\/img\/plugins\/app\/service_72.png"},"team_id":"T010QS7UQNA"},"thread_ts":"1755801607.484319","parent_user_id":"U01RMTFMALF","blocks":[{"type":"rich_text","block_id":"a2VH","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Your Query:","style":{"bold":true}},{"type":"text","text":" How can i run an automated test on a local Android phone? "},{"type":"text","text":"Answer:","style":{"bold":true}},{"type":"text","text":"\nTo run an automated test on a local Android phone, you'll need to follow several steps, primarily involving configuration and using specific commands. Here's a breakdown based on the provided documentation:\n\n"},{"type":"text","text":"1. Prerequisites & Setup:","style":{"bold":true}},{"type":"text","text":"\n*   "},{"type":"text","text":"VPN Connection:","style":{"bold":true}},{"type":"text","text":" Connect to the VPN at "},{"type":"link","url":"http:\/\/connect.cbsinteractive.com\/VPNFT","text":"connect.cbsinteractive.com\/VPNFT","style":{"code":true}},{"type":"text","text":" (Source: "},{"type":"link","url":"https:\/\/paramount.atlassian.net\/wiki\/spaces\/PLQA\/pages\/47720266"},{"type":"text","text":"). *   "},{"type":"text","text":"Synergy Server:","style":{"bold":true}},{"type":"text","text":" Download the latest version of the Synergy server and run its "},{"type":"text","text":".jar","style":{"code":true}},{"type":"text","text":" file (Websocket) (Source: "},{"type":"link","url":"https:\/\/paramount.atlassian.net\/wiki\/spaces\/PLQA\/pages\/47720266"},{"type":"text","text":"). *   "},{"type":"text","text":"Appium Server:","style":{"bold":true}},{"type":"text","text":" For local runs, you might need to start an Appium server. A sample test class indicates that an Appium server can be started if the environment is \"local\" and the driver is \"android\" (Source: "},{"type":"link","url":"https:\/\/paramount.atlassian.net\/wiki\/spaces\/PLQA\/pages\/47711460"},{"type":"text","text":", SampleTest Class). *   "},{"type":"text","text":"Android Home Environment Variable:","style":{"bold":true}},{"type":"text","text":" Ensure your Run Configuration has the "},{"type":"text","text":"$ANDROID_HOME","style":{"code":true}},{"type":"text","text":" environment variable set and included in the path, especially for Android Emulator smoke tests (Source: "},{"type":"link","url":"https:\/\/paramount.atlassian.net\/wiki\/spaces\/PLQA\/pages\/47713566"},{"type":"text","text":"). "},{"type":"text","text":"2. Configure Test Parameters:","style":{"bold":true}},{"type":"text","text":"\n*   "},{"type":"text","text":"Update ","style":{"bold":true}},{"type":"text","text":".config","style":{"bold":true,"code":true}},{"type":"text","text":" file:","style":{"bold":true}},{"type":"text","text":" Navigate to the "},{"type":"text","text":"mqe-hob-mobile-tests","style":{"code":true}},{"type":"text","text":" directory and update the desired capabilities in the "},{"type":"text","text":".config","style":{"code":true}},{"type":"text","text":" file. Key parameters to set include:\n    *   "},{"type":"text","text":"Platform=ANDROID","style":{"code":true}},{"type":"text","text":"\n    *   "},{"type":"text","text":"Locale=en-us","style":{"code":true}},{"type":"text","text":" (for domestic tests)\n    *   "},{"type":"text","text":"MobileDeviceCategory=PHONE","style":{"code":true}},{"type":"text","text":"\n    *   "},{"type":"text","text":"DeviceStartOrientation=PORTRAIT","style":{"code":true}},{"type":"text","text":"\n    *   "},{"type":"text","text":"DebugDeviceID","style":{"code":true}},{"type":"text","text":": Add the device ID of your real mobile device (you can find this by typing "},{"type":"text","text":"adb devices","style":{"code":true}},{"type":"text","text":" in the terminal) (Source: "},{"type":"link","url":"https:\/\/paramount.atlassian.net\/wiki\/spaces\/PLQA\/pages\/47720266"},{"type":"text","text":"). This is important for targeting a real device. *   "},{"type":"text","text":"AppPackageUrl","style":{"code":true}},{"type":"text","text":": URL of the build. *   "},{"type":"text","text":"AppBuildType=DEBUG","style":{"code":true}},{"type":"text","text":"\n    *   "},{"type":"text","text":"ClientID","style":{"code":true}},{"type":"text","text":": Your machine serial number for local executions or to target a specific private lab machine. *   Other parameters like "},{"type":"text","text":"ServerURL","style":{"code":true}},{"type":"text","text":", "},{"type":"text","text":"Environment","style":{"code":true}},{"type":"text","text":", "},{"type":"text","text":"UseGeoVPN","style":{"code":true}},{"type":"text","text":", "},{"type":"text","text":"TestRailProjectId","style":{"code":true}},{"type":"text","text":", "},{"type":"text","text":"ReRunOnFailure","style":{"code":true}},{"type":"text","text":", "},{"type":"text","text":"SendChatReport","style":{"code":true}},{"type":"text","text":", "},{"type":"text","text":"SendEmailReport","style":{"code":true}},{"type":"text","text":", etc., can also be configured (Source: "},{"type":"link","url":"https:\/\/paramount.atlassian.net\/wiki\/spaces\/PLQA\/pages\/47720266"},{"type":"text","text":"). *   "},{"type":"text","text":"Mobile Local Android Run Configuration Arguments:","style":{"bold":true}},{"type":"text","text":" When setting up your run configuration, consider these arguments:\n    *   "},{"type":"text","text":"-Ddriver=android","style":{"code":true}},{"type":"text","text":"\n    *   "},{"type":"text","text":"-DplatformName=Android","style":{"code":true}},{"type":"text","text":"\n    *   "},{"type":"text","text":"-DplatformVersion=11.0","style":{"code":true}},{"type":"text","text":" (or your Android version)\n    *   "},{"type":"text","text":"-DdeviceName=\"Google Pixel 2XL\"","style":{"code":true}},{"type":"text","text":" (or your device name)\n    *   "},{"type":"text","text":"-Denvironment=local","style":{"code":true}},{"type":"text","text":"\n    *   "},{"type":"text","text":"-Dheadless=false","style":{"code":true}},{"type":"text","text":"\n    *   "},{"type":"text","text":"-Dapp=\"\/pathToPackage\/your-app.apk\"","style":{"code":true}},{"type":"text","text":"\n    *   "},{"type":"text","text":"-Dudid=set this if running on Real Mobile Device only","style":{"code":true}},{"type":"text","text":" (Source: "},{"type":"link","url":"https:\/\/paramount.atlassian.net\/wiki\/spaces\/PLQA\/pages\/47711460"},{"type":"text","text":"). *3.\n\n"},{"type":"text","text":"(message continued in thread...)","style":{"italic":true}}]}]}],"channel":"D09A0LFHK8R","event_ts":"1755801621.332649","channel_type":"im"},"type":"event_callback","event_id":"Ev09BJ3AAY14","event_time":1755801621,"authorizations":[{"enterprise_id":"ERV4P7NAD","team_id":"T010QS7UQNA","user_id":"U099R6WTZ9S","is_bot":true,"is_enterprise_install":false}],"is_ext_shared_channel":false,"event_context":"4-eyJldCI6Im1lc3NhZ2UiLCJ0aWQiOiJUMDEwUVM3VVFOQSIsImFpZCI6IkEwOTlMQUNBQjJSIiwiY2lkIjoiRDA5QTBMRkhLOFIifQ"},"type":"events_api","accepts_response_payload":false,"retry_attempt":0,"retry_reason":""})
2025-08-21 11:40:23,182 - slack_bolt.App - DEBUG - [client.py:99] - A new message enqueued (current queue size: 1)
2025-08-21 11:40:23,182 - slack_bolt.App - DEBUG - [client.py:105] - A message dequeued (current queue size: 0)
2025-08-21 11:40:23,183 - slack_bolt.App - DEBUG - [client.py:125] - Message processing started (type: events_api, envelope_id: c7c1f499-df8f-470d-8cfc-942464163076)
2025-08-21 11:40:23,184 - slack_bolt.App - DEBUG - [app.py:476] - Applying slack_bolt.middleware.ssl_check.ssl_check.SslCheck
2025-08-21 11:40:23,184 - slack_bolt.App - DEBUG - [app.py:476] - Applying slack_bolt.middleware.request_verification.request_verification.RequestVerification
2025-08-21 11:40:23,184 - slack_bolt.App - DEBUG - [app.py:476] - Applying slack_bolt.middleware.authorization.single_team_authorization.SingleTeamAuthorization
2025-08-21 11:40:23,184 - slack_bolt.App - DEBUG - [app.py:476] - Applying slack_bolt.middleware.ignoring_self_events.ignoring_self_events.IgnoringSelfEvents
2025-08-21 11:40:23,184 - slack_bolt.IgnoringSelfEvents - DEBUG - [ignoring_self_events.py:60] - Skipped self event: {'user': 'U099R6WTZ9S', 'type': 'message', 'ts': '1755801621.332649', 'bot_id': 'B099R6WTRU4', 'app_id': 'A099LACAB2R', 'text': '*Your Query:* How can i run an automated test on a local Android phone? *Answer:*\nTo run an automated test on a local Android phone, you\'ll need to follow several steps, primarily involving configuration and using specific commands. Here\'s a breakdown based on the provided documentation:\n\n*1. Prerequisites &amp; Setup:*\n*   *VPN Connection:* Connect to the VPN at `<http://connect.cbsinteractive.com/VPNFT|connect.cbsinteractive.com/VPNFT>` (Source: <https://paramount.atlassian.net/wiki/spaces/PLQA/pages/47720266>). *   *Synergy Server:* Download the latest version of the Synergy server and run its `.jar` file (Websocket) (Source: <https://paramount.atlassian.net/wiki/spaces/PLQA/pages/47720266>). *   *Appium Server:* For local runs, you might need to start an Appium server. A sample test class indicates that an Appium server can be started if the environment is "local" and the driver is "android" (Source: <https://paramount.atlassian.net/wiki/spaces/PLQA/pages/47711460>, SampleTest Class). *   *Android Home Environment Variable:* Ensure your Run Configuration has the `$ANDROID_HOME` environment variable set and included in the path, especially for Android Emulator smoke tests (Source: <https://paramount.atlassian.net/wiki/spaces/PLQA/pages/47713566>). *2. Configure Test Parameters:*\n*   *Update `.config` file:* Navigate to the `mqe-hob-mobile-tests` directory and update the desired capabilities in the `.config` file. Key parameters to set include:\n    *   `Platform=ANDROID`\n    *   `Locale=en-us` (for domestic tests)\n    *   `MobileDeviceCategory=PHONE`\n    *   `DeviceStartOrientation=PORTRAIT`\n    *   `DebugDeviceID`: Add the device ID of your real mobile device (you can find this by typing `adb devices` in the terminal) (Source: <https://paramount.atlassian.net/wiki/spaces/PLQA/pages/47720266>). This is important for targeting a real device. *   `AppPackageUrl`: URL of the build. *   `AppBuildType=DEBUG`\n    *   `ClientID`: Your machine serial number for local executions or to target a specific private lab machine. *   Other parameters like `ServerURL`, `Environment`, `UseGeoVPN`, `TestRailProjectId`, `ReRunOnFailure`, `SendChatReport`, `SendEmailReport`, etc., can also be configured (Source: <https://paramount.atlassian.net/wiki/spaces/PLQA/pages/47720266>). *   *Mobile Local Android Run Configuration Arguments:* When setting up your run configuration, consider these arguments:\n    *   `-Ddriver=android`\n    *   `-DplatformName=Android`\n    *   `-DplatformVersion=11.0` (or your Android version)\n    *   `-DdeviceName="Google Pixel 2XL"` (or your device name)\n    *   `-Denvironment=local`\n    *   `-Dheadless=false`\n    *   `-Dapp="/pathToPackage/your-app.apk"`\n    *   `-Dudid=set this if running on Real Mobile Device only` (Source: <https://paramount.atlassian.net/wiki/spaces/PLQA/pages/47711460>). *3.\n\n_(message continued in thread...)_', 'team': 'T010QS7UQNA', 'bot_profile': {'id': 'B099R6WTRU4', 'deleted': False, 'name': 'AutoBot', 'updated': 1754677948, 'app_id': 'A099LACAB2R', 'user_id': 'U099R6WTZ9S', 'icons': {'image_36': 'https://a.slack-edge.com/80588/img/plugins/app/bot_36.png', 'image_48': 'https://a.slack-edge.com/80588/img/plugins/app/bot_48.png', 'image_72': 'https://a.slack-edge.com/80588/img/plugins/app/service_72.png'}, 'team_id': 'T010QS7UQNA'}, 'thread_ts': '1755801607.484319', 'parent_user_id': 'U01RMTFMALF', 'blocks': [{'type': 'rich_text', 'block_id': 'a2VH', 'elements': [{'type': 'rich_text_section', 'elements': [{'type': 'text', 'text': 'Your Query:', 'style': {'bold': True}}, {'type': 'text', 'text': ' How can i run an automated test on a local Android phone? '}, {'type': 'text', 'text': 'Answer:', 'style': {'bold': True}}, {'type': 'text', 'text': "\nTo run an automated test on a local Android phone, you'll need to follow several steps, primarily involving configuration and using specific commands. Here's a breakdown based on the provided documentation:\n\n"}, {'type': 'text', 'text': '1. Prerequisites & Setup:', 'style': {'bold': True}}, {'type': 'text', 'text': '\n*   '}, {'type': 'text', 'text': 'VPN Connection:', 'style': {'bold': True}}, {'type': 'text', 'text': ' Connect to the VPN at '}, {'type': 'link', 'url': 'http://connect.cbsinteractive.com/VPNFT', 'text': 'connect.cbsinteractive.com/VPNFT', 'style': {'code': True}}, {'type': 'text', 'text': ' (Source: '}, {'type': 'link', 'url': 'https://paramount.atlassian.net/wiki/spaces/PLQA/pages/47720266'}, {'type': 'text', 'text': '). *   '}, {'type': 'text', 'text': 'Synergy Server:', 'style': {'bold': True}}, {'type': 'text', 'text': ' Download the latest version of the Synergy server and run its '}, {'type': 'text', 'text': '.jar', 'style': {'code': True}}, {'type': 'text', 'text': ' file (Websocket) (Source: '}, {'type': 'link', 'url': 'https://paramount.atlassian.net/wiki/spaces/PLQA/pages/47720266'}, {'type': 'text', 'text': '). *   '}, {'type': 'text', 'text': 'Appium Server:', 'style': {'bold': True}}, {'type': 'text', 'text': ' For local runs, you might need to start an Appium server. A sample test class indicates that an Appium server can be started if the environment is "local" and the driver is "android" (Source: '}, {'type': 'link', 'url': 'https://paramount.atlassian.net/wiki/spaces/PLQA/pages/47711460'}, {'type': 'text', 'text': ', SampleTest Class). *   '}, {'type': 'text', 'text': 'Android Home Environment Variable:', 'style': {'bold': True}}, {'type': 'text', 'text': ' Ensure your Run Configuration has the '}, {'type': 'text', 'text': '$ANDROID_HOME', 'style': {'code': True}}, {'type': 'text', 'text': ' environment variable set and included in the path, especially for Android Emulator smoke tests (Source: '}, {'type': 'link', 'url': 'https://paramount.atlassian.net/wiki/spaces/PLQA/pages/47713566'}, {'type': 'text', 'text': '). '}, {'type': 'text', 'text': '2. Configure Test Parameters:', 'style': {'bold': True}}, {'type': 'text', 'text': '\n*   '}, {'type': 'text', 'text': 'Update ', 'style': {'bold': True}}, {'type': 'text', 'text': '.config', 'style': {'bold': True, 'code': True}}, {'type': 'text', 'text': ' file:', 'style': {'bold': True}}, {'type': 'text', 'text': ' Navigate to the '}, {'type': 'text', 'text': 'mqe-hob-mobile-tests', 'style': {'code': True}}, {'type': 'text', 'text': ' directory and update the desired capabilities in the '}, {'type': 'text', 'text': '.config', 'style': {'code': True}}, {'type': 'text', 'text': ' file. Key parameters to set include:\n    *   '}, {'type': 'text', 'text': 'Platform=ANDROID', 'style': {'code': True}}, {'type': 'text', 'text': '\n    *   '}, {'type': 'text', 'text': 'Locale=en-us', 'style': {'code': True}}, {'type': 'text', 'text': ' (for domestic tests)\n    *   '}, {'type': 'text', 'text': 'MobileDeviceCategory=PHONE', 'style': {'code': True}}, {'type': 'text', 'text': '\n    *   '}, {'type': 'text', 'text': 'DeviceStartOrientation=PORTRAIT', 'style': {'code': True}}, {'type': 'text', 'text': '\n    *   '}, {'type': 'text', 'text': 'DebugDeviceID', 'style': {'code': True}}, {'type': 'text', 'text': ': Add the device ID of your real mobile device (you can find this by typing '}, {'type': 'text', 'text': 'adb devices', 'style': {'code': True}}, {'type': 'text', 'text': ' in the terminal) (Source: '}, {'type': 'link', 'url': 'https://paramount.atlassian.net/wiki/spaces/PLQA/pages/47720266'}, {'type': 'text', 'text': '). This is important for targeting a real device. *   '}, {'type': 'text', 'text': 'AppPackageUrl', 'style': {'code': True}}, {'type': 'text', 'text': ': URL of the build. *   '}, {'type': 'text', 'text': 'AppBuildType=DEBUG', 'style': {'code': True}}, {'type': 'text', 'text': '\n    *   '}, {'type': 'text', 'text': 'ClientID', 'style': {'code': True}}, {'type': 'text', 'text': ': Your machine serial number for local executions or to target a specific private lab machine. *   Other parameters like '}, {'type': 'text', 'text': 'ServerURL', 'style': {'code': True}}, {'type': 'text', 'text': ', '}, {'type': 'text', 'text': 'Environment', 'style': {'code': True}}, {'type': 'text', 'text': ', '}, {'type': 'text', 'text': 'UseGeoVPN', 'style': {'code': True}}, {'type': 'text', 'text': ', '}, {'type': 'text', 'text': 'TestRailProjectId', 'style': {'code': True}}, {'type': 'text', 'text': ', '}, {'type': 'text', 'text': 'ReRunOnFailure', 'style': {'code': True}}, {'type': 'text', 'text': ', '}, {'type': 'text', 'text': 'SendChatReport', 'style': {'code': True}}, {'type': 'text', 'text': ', '}, {'type': 'text', 'text': 'SendEmailReport', 'style': {'code': True}}, {'type': 'text', 'text': ', etc., can also be configured (Source: '}, {'type': 'link', 'url': 'https://paramount.atlassian.net/wiki/spaces/PLQA/pages/47720266'}, {'type': 'text', 'text': '). *   '}, {'type': 'text', 'text': 'Mobile Local Android Run Configuration Arguments:', 'style': {'bold': True}}, {'type': 'text', 'text': ' When setting up your run configuration, consider these arguments:\n    *   '}, {'type': 'text', 'text': '-Ddriver=android', 'style': {'code': True}}, {'type': 'text', 'text': '\n    *   '}, {'type': 'text', 'text': '-DplatformName=Android', 'style': {'code': True}}, {'type': 'text', 'text': '\n    *   '}, {'type': 'text', 'text': '-DplatformVersion=11.0', 'style': {'code': True}}, {'type': 'text', 'text': ' (or your Android version)\n    *   '}, {'type': 'text', 'text': '-DdeviceName="Google Pixel 2XL"', 'style': {'code': True}}, {'type': 'text', 'text': ' (or your device name)\n    *   '}, {'type': 'text', 'text': '-Denvironment=local', 'style': {'code': True}}, {'type': 'text', 'text': '\n    *   '}, {'type': 'text', 'text': '-Dheadless=false', 'style': {'code': True}}, {'type': 'text', 'text': '\n    *   '}, {'type': 'text', 'text': '-Dapp="/pathToPackage/your-app.apk"', 'style': {'code': True}}, {'type': 'text', 'text': '\n    *   '}, {'type': 'text', 'text': '-Dudid=set this if running on Real Mobile Device only', 'style': {'code': True}}, {'type': 'text', 'text': ' (Source: '}, {'type': 'link', 'url': 'https://paramount.atlassian.net/wiki/spaces/PLQA/pages/47711460'}, {'type': 'text', 'text': '). *3.\n\n'}, {'type': 'text', 'text': '(message continued in thread...)', 'style': {'italic': True}}]}]}], 'channel': 'D09A0LFHK8R', 'event_ts': '1755801621.332649', 'channel_type': 'im'}
2025-08-21 11:40:23,185 - slack_bolt.App - DEBUG - [client.py:200] - Sending a message (session id: 9adf3bcc-e9d3-4f5c-b2bc-938d72bdb603, message: {"envelope_id": "c7c1f499-df8f-470d-8cfc-942464163076"})
2025-08-21 11:40:23,186 - slack_bolt.App - DEBUG - [internals.py:41] - Response time: 2 milliseconds
2025-08-21 11:40:23,186 - slack_bolt.App - DEBUG - [client.py:150] - Message processing completed (type: events_api, envelope_id: c7c1f499-df8f-470d-8cfc-942464163076)
2025-08-21 11:41:01,326 - slack_bolt.App - DEBUG - [client.py:235] - on_message invoked: (message: {"envelope_id":"8eaeb88c-03c7-47be-9abc-d6b046fa9ea9","payload":{"token":"yq71khZBCyJF1Ri2hG5aNqr5","team_id":"T010QS7UQNA","enterprise_id":"ERV4P7NAD","context_team_id":null,"context_enterprise_id":"ERV4P7NAD","api_app_id":"A099LACAB2R","event":{"user":"U01RMTFMALF","type":"message","ts":"1755801292.462349","client_msg_id":"b7a3af3d-ac77-4a15-a4e1-e5af0f86b300","text":"How to connect an iOS device?","blocks":[{"type":"rich_text","block_id":"rRS58","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"How to connect an iOS device?"}]}]}],"channel":"D09A0LFHK8R","event_ts":"1755801292.462349","channel_type":"im"},"type":"event_callback","event_id":"Ev09BJ2FR2KY","event_time":1755801292,"authorizations":[{"enterprise_id":"ERV4P7NAD","team_id":"T010QS7UQNA","user_id":"U099R6WTZ9S","is_bot":true,"is_enterprise_install":false}],"is_ext_shared_channel":false,"event_context":"4-eyJldCI6Im1lc3NhZ2UiLCJ0aWQiOiJUMDEwUVM3VVFOQSIsImFpZCI6IkEwOTlMQUNBQjJSIiwiY2lkIjoiRDA5QTBMRkhLOFIifQ"},"type":"events_api","accepts_response_payload":false,"retry_attempt":3,"retry_reason":"timeout"})
2025-08-21 11:41:01,327 - slack_bolt.App - DEBUG - [client.py:99] - A new message enqueued (current queue size: 1)
2025-08-21 11:41:01,327 - slack_bolt.App - DEBUG - [client.py:105] - A message dequeued (current queue size: 0)
2025-08-21 11:41:01,328 - slack_bolt.App - DEBUG - [client.py:125] - Message processing started (type: events_api, envelope_id: 8eaeb88c-03c7-47be-9abc-d6b046fa9ea9)
2025-08-21 11:41:01,328 - slack_bolt.App - DEBUG - [app.py:476] - Applying slack_bolt.middleware.ssl_check.ssl_check.SslCheck
2025-08-21 11:41:01,328 - slack_bolt.App - DEBUG - [app.py:476] - Applying slack_bolt.middleware.request_verification.request_verification.RequestVerification
2025-08-21 11:41:01,328 - slack_bolt.App - DEBUG - [app.py:476] - Applying slack_bolt.middleware.authorization.single_team_authorization.SingleTeamAuthorization
2025-08-21 11:41:01,328 - slack_bolt.App - DEBUG - [app.py:476] - Applying slack_bolt.middleware.ignoring_self_events.ignoring_self_events.IgnoringSelfEvents
2025-08-21 11:41:01,329 - slack_bolt.App - DEBUG - [app.py:476] - Applying slack_bolt.middleware.url_verification.url_verification.UrlVerification
2025-08-21 11:41:01,329 - slack_bolt.App - DEBUG - [app.py:500] - Checking listener: handle_app_mentions ...
2025-08-21 11:41:01,329 - slack_bolt.App - DEBUG - [app.py:500] - Checking listener: help_message ...
2025-08-21 11:41:01,329 - slack_bolt.App - DEBUG - [app.py:500] - Checking listener: handle_dm_messages ...
2025-08-21 11:41:01,329 - slack_bolt.App - DEBUG - [app.py:522] - Running listener: handle_dm_messages ...
2025-08-21 11:41:01,329 - slack_bolt.App - DEBUG - [thread_runner.py:198] - Responding with status: 200 body: "" (0 millis)
2025-08-21 11:41:01,329 - __main__ - INFO - [main.py:354] - === DM MESSAGE EVENT RECEIVED ===
2025-08-21 11:41:01,329 - slack_bolt.App - DEBUG - [client.py:200] - Sending a message (session id: 9adf3bcc-e9d3-4f5c-b2bc-938d72bdb603, message: {"envelope_id": "8eaeb88c-03c7-47be-9abc-d6b046fa9ea9"})
2025-08-21 11:41:01,329 - __main__ - DEBUG - [main.py:355] - Full event body: {'token': 'yq71khZBCyJF1Ri2hG5aNqr5', 'team_id': 'T010QS7UQNA', 'enterprise_id': 'ERV4P7NAD', 'context_team_id': None, 'context_enterprise_id': 'ERV4P7NAD', 'api_app_id': 'A099LACAB2R', 'event': {'user': 'U01RMTFMALF', 'type': 'message', 'ts': '1755801292.462349', 'client_msg_id': 'b7a3af3d-ac77-4a15-a4e1-e5af0f86b300', 'text': 'How to connect an iOS device?', 'blocks': [{'type': 'rich_text', 'block_id': 'rRS58', 'elements': [{'type': 'rich_text_section', 'elements': [{'type': 'text', 'text': 'How to connect an iOS device?'}]}]}], 'channel': 'D09A0LFHK8R', 'event_ts': '1755801292.462349', 'channel_type': 'im'}, 'type': 'event_callback', 'event_id': 'Ev09BJ2FR2KY', 'event_time': 1755801292, 'authorizations': [{'enterprise_id': 'ERV4P7NAD', 'team_id': 'T010QS7UQNA', 'user_id': 'U099R6WTZ9S', 'is_bot': True, 'is_enterprise_install': False}], 'is_ext_shared_channel': False, 'event_context': '4-eyJldCI6Im1lc3NhZ2UiLCJ0aWQiOiJUMDEwUVM3VVFOQSIsImFpZCI6IkEwOTlMQUNBQjJSIiwiY2lkIjoiRDA5QTBMRkhLOFIifQ'}
2025-08-21 11:41:01,330 - __main__ - INFO - [main.py:364] - DM Event details: channel=D09A0LFHK8R, user=U01RMTFMALF, ts=1755801292.462349
2025-08-21 11:41:01,330 - __main__ - DEBUG - [main.py:365] - DM Event text: How to connect an iOS device?
2025-08-21 11:41:01,330 - slack_bolt.App - DEBUG - [internals.py:41] - Response time: 1 milliseconds
2025-08-21 11:41:01,330 - utils - DEBUG - [utils.py:27] - Checking message processing: channel=D09A0LFHK8R, ts=1755801292.462349, text='How to connect an iOS device?...'
2025-08-21 11:41:01,330 - slack_bolt.App - DEBUG - [client.py:150] - Message processing completed (type: events_api, envelope_id: 8eaeb88c-03c7-47be-9abc-d6b046fa9ea9)
2025-08-21 11:41:01,330 - utils - DEBUG - [utils.py:31] - Message hash: 52da856dc52eeabd6e2d5a10d8c14b04
2025-08-21 11:41:01,331 - utils - DEBUG - [utils.py:53] - Added message to processing cache (total entries: 2)
2025-08-21 11:41:01,331 - __main__ - DEBUG - [main.py:378] - Bot check: bot_id=None, user_id=U01RMTFMALF
2025-08-21 11:41:01,331 - __main__ - DEBUG - [main.py:383] - Question received: 'How to connect an iOS device?'
2025-08-21 11:41:01,331 - __main__ - DEBUG - [main.py:389] - Checking user access for DM...
2025-08-21 11:41:01,331 - auth.slack_user_info - DEBUG - [slack_user_info.py:44] - Using cached email for user U01RMTFMALF
2025-08-21 11:41:01,331 - auth.email_whitelist - DEBUG - [email_whitelist.py:57] - Email access granted: alexandr.popov@paramount.com
2025-08-21 11:41:01,331 - __main__ - INFO - [main.py:118] - Access granted to user U01RMTFMALF with email alexandr.popov@paramount.com
2025-08-21 11:41:01,331 - __main__ - DEBUG - [main.py:395] - User access check passed for DM
2025-08-21 11:41:01,331 - __main__ - INFO - [main.py:397] - Processing DM question from user U01RMTFMALF: How to connect an iOS device?
2025-08-21 11:41:01,331 - __main__ - DEBUG - [main.py:400] - Starting DM processing...
2025-08-21 11:41:01,331 - __main__ - DEBUG - [main.py:403] - Checking if 'how to connect an ios device?' is an admin command in DM
2025-08-21 11:41:01,331 - __main__ - DEBUG - [main.py:439] - Checking if DM thread is already being processed...
2025-08-21 11:41:01,331 - utils - DEBUG - [utils.py:67] - Managing thread: D09A0LFHK8R:1755801292.462349, action: add, user: U01RMTFMALF
2025-08-21 11:41:01,331 - utils - INFO - [utils.py:94] - Added thread D09A0LFHK8R:1755801292.462349 to active tracking (total: 1)
2025-08-21 11:41:01,331 - __main__ - DEBUG - [main.py:444] - DM thread management check passed
2025-08-21 11:41:01,331 - slack_sdk.web.base_client - DEBUG - [base_client.py:255] - Sending a request - url: https://slack.com/api/reactions.add, query_params: {}, body_params: {'channel': 'D09A0LFHK8R', 'name': 'thinking_face', 'timestamp': '1755801292.462349', 'team_id': 'T010QS7UQNA'}, files: {}, json_body: None, headers: {'Content-Type': 'application/x-www-form-urlencoded', 'Authorization': '(redacted)', 'User-Agent': 'Python/3.12.0 slackclient/3.34.0 Darwin/23.4.0'}
2025-08-21 11:41:01,788 - slack_sdk.web.base_client - DEBUG - [base_client.py:546] - Received the following response - status: 200, headers: {'date': 'Thu, 21 Aug 2025 18:41:01 GMT', 'server': 'Apache', 'vary': 'Accept-Encoding', 'x-slack-req-id': '4e2b644d31a0ebb873c9c9460015cc9f', 'x-content-type-options': 'nosniff', 'x-xss-protection': '0', 'pragma': 'no-cache', 'cache-control': 'private, no-cache, no-store, must-revalidate', 'expires': 'Sat, 26 Jul 1997 05:00:00 GMT', 'content-type': 'application/json; charset=utf-8', 'x-accepted-oauth-scopes': 'reactions:write', 'x-oauth-scopes': 'app_mentions:read,channels:history,chat:write,im:history,im:read,im:write,users:read,reactions:write,users:read.email', 'access-control-expose-headers': 'x-slack-req-id, retry-after', 'access-control-allow-headers': 'slack-route, x-slack-version-ts, x-b3-traceid, x-b3-spanid, x-b3-parentspanid, x-b3-sampled, x-b3-flags', 'strict-transport-security': 'max-age=31536000; includeSubDomains; preload', 'referrer-policy': 'no-referrer', 'x-slack-unique-id': 'aKdoPXA1smBSOHRk7llWfwAAEAQ', 'x-slack-backend': 'r', 'access-control-allow-origin': '*', 'content-length': '11', 'via': '1.1 slack-prod.tinyspeck.com, envoy-www-iad-tqsvxcrp,envoy-edge-pdx-krlwxdtp', 'x-envoy-attempt-count': '1', 'x-envoy-upstream-service-time': '196', 'x-backend': 'main_normal main_canary_with_overflow main_control_with_overflow', 'x-server': 'slack-www-hhvm-main-iad-kxyi', 'x-slack-shared-secret-outcome': 'no-match', 'x-edge-backend': 'envoy-www', 'timing-allow-origin': '*', 'x-slack-edge-shared-secret-outcome': 'no-match', 'connection': 'close'}, body: {"ok":true}
2025-08-21 11:41:01,789 - __main__ - INFO - [main.py:461] - Processing DM question from <@U01RMTFMALF>: How to connect an iOS device?
2025-08-21 11:41:01,789 - __main__ - INFO - [main.py:465] - Sending DM request to DIG AI...
2025-08-21 11:41:01,789 - dig_connector - INFO - [dig_connector.py:134] - Generating response for query: 'How to connect an iOS device?' with 0 chunks
2025-08-21 11:41:01,789 - dig_connector - DEBUG - [dig_connector.py:138] - Formatted context length: 0
2025-08-21 11:41:01,789 - dig_connector - INFO - [dig_connector.py:141] - No context available, using direct query
2025-08-21 11:41:01,789 - dig_connector - INFO - [dig_connector.py:150] - Sending prompt to DIG platform...
2025-08-21 11:41:01,789 - dig_connector - INFO - [dig_connector.py:121] - Sending message to DIG API - URL: https://ai.digdev.cbsicloud.com/fastapi/chats/859/generate
2025-08-21 11:41:01,790 - dig_connector - DEBUG - [dig_connector.py:122] - Message payload: {'model_id': 42, 'message_text': 'How to connect an iOS device?', 'history': [{'role': 'user', 'content': 'How to connect an iOS device?'}]}
2025-08-21 11:41:10,810 - urllib3.connectionpool - DEBUG - [connectionpool.py:549] - https://ai.digdev.cbsicloud.com:443 "POST /fastapi/chats/859/generate HTTP/1.1" 200 3485
2025-08-21 11:41:10,811 - dig_connector - DEBUG - [dig_connector.py:125] - DIG API response: status=200
2025-08-21 11:41:10,811 - dig_connector - DEBUG - [dig_connector.py:129] - DIG API response data: {'message_text': 'Connecting an iOS device for testing primarily involves configuring the test environment to correctly identify and interact with the device. Here\'s how you can do it based on the provided information:\n\n**1. Set up Run Configuration Arguments:**\n\nWhen setting up your test run configuration, you\'ll need to specify certain parameters to connect to an iOS device. These can include:\n\n*   `-Ddriver=ios`: This specifies that the test should use an iOS driver.\n*   `-DplatformName=iOS`: Confirms the platform is iOS.\n*   `-DplatformVersion`: Specify the iOS version of your device (e.g., `14.2`, `15.2`).\n*   `-DdeviceName`: The name of your iPhone or iPad (e.g., `"iPhone 12"`, `"iPhone 13"`).\n*   `-Dudid=set this if running on Real Mobile Device only`: This is crucial for real devices. You\'ll need to find the Unique Device Identifier (UDID) of your iOS device and provide it here. The format would be something like `00008101-001D493A26A0001E`.\n*   `-Denvironment=local` (for local testing) or `-Denvironment=synergy` (for Synergy Mobile Cloud).\n*   `-Dapp="/pathToPackage/your-app.ipa"`: The path to your iOS application file (IPA).\n*   `-DbundleId`: Set this to override the default bundle ID of your app, if necessary (e.g., `com.cbsvideodebug.app`).\n\n**Example Run Configuration Arguments for Local iOS Testing:**\n\n```\n-ea\n-Ddriver=ios\n-DplatformName=iOS\n-DplatformVersion=15.2\n-DdeviceName="iPhone 13"\n-Denvironment=local\n-Dheadless=false\n-Dapp="/pathToPackage/PPlus_v8.0.56_b7040_Simulator.app"\n-Dudid=set this if running on Real Mobile Device only\n-DbundleId=set to override default setting\n```\n(Source: https://paramount.atlassian.net/wiki/spaces/PLQA/pages/47711460)\n\n**2. Desired Capabilities in Code:**\n\nIf you are programmatically setting up the connection (e.g., in Java code), you would use `DesiredCapabilities`. An example shows how `iosDevice` capabilities are created, setting properties from `ios.properties` and fetching the app file name:\n\n```java\npublic DesiredCapabilities iosDevice(String environment) {\n    DesiredCapabilities caps = new DesiredCapabilities();\n    config.setProperty("ios.properties");\n    File app = new File(fetchAppFileName());\n    String getDeviceName = System.getProperty("deviceName", config.getConfig().getProperty("ios1.name"));\n    // ... further configurations\n}\n```\n(Source: https://paramount.atlassian.net/wiki/spaces/PLQA/pages/47712177)\n\n**3. Installing the App:**\n\nYou might also need to install the app on the device. An example command for installing an IPA via a `curl` POST request is provided, including a device ID:\n\n```\ncurl -X POST https://d41e8d5432f641ae94508dcce01ed1e9@api-dev.headspin.io/v0/idevice/00008101-001D493A26A0001E/installer/install --data-binary "@PPlusDebug_v8.0.54_b6993_AdHoc.ipa"\n```\n(Source: https://paramount.atlassian.net/wiki/spaces/PLQA/pages/47712177)\n\n**Summary of Key Parameters for iOS Connection:**\n\n*   **`driver=ios`**: Specifies iOS.\n*   **`platformName=iOS`**: Confirms the platform.\n*   **`platformVersion`**: iOS version of the device.\n*   **`deviceName`**: The device model name.\n*   **`udid`**: Crucial for real devices, specifies the unique device identifier.\n*   **`app`**: Path to the application file (.ipa).\n*   **`bundleId`**: Application\'s bundle identifier.\n*   **`environment`**: `local` or `synergy` depending on your setup.', 'requires_approval': False, 'execution_id': 1560}
2025-08-21 11:41:10,812 - dig_connector - INFO - [dig_connector.py:154] - Extracting response content...
2025-08-21 11:41:10,812 - dig_connector - DEBUG - [dig_connector.py:221] - Found message_text in response
2025-08-21 11:41:10,812 - dig_connector - INFO - [dig_connector.py:157] - Successfully generated response (length: 3338)
2025-08-21 11:41:10,813 - __main__ - INFO - [main.py:468] - Received DM response from DIG AI
2025-08-21 11:41:10,813 - __main__ - DEBUG - [main.py:469] - DIG AI DM response: Connecting an iOS device for testing primarily involves configuring the test environment to correctly identify and interact with the device. Here's how you can do it based on the provided information:

**1. Set up Run Configuration Arguments:**

When setting up your test run configuration, you'll need to specify certain parameters to connect to an iOS device. These can include:

*   `-Ddriver=ios`: This specifies that the test should use an iOS driver.
*   `-DplatformName=iOS`: Confirms the platform is iOS.
*   `-DplatformVersion`: Specify the iOS version of your device (e.g., `14.2`, `15.2`).
*   `-DdeviceName`: The name of your iPhone or iPad (e.g., `"iPhone 12"`, `"iPhone 13"`).
*   `-Dudid=set this if running on Real Mobile Device only`: This is crucial for real devices. You'll need to find the Unique Device Identifier (UDID) of your iOS device and provide it here. The format would be something like `00008101-001D493A26A0001E`.
*   `-Denvironment=local` (for local testing) or `-Denvironment=synergy` (for Synergy Mobile Cloud).
*   `-Dapp="/pathToPackage/your-app.ipa"`: The path to your iOS application file (IPA).
*   `-DbundleId`: Set this to override the default bundle ID of your app, if necessary (e.g., `com.cbsvideodebug.app`).

**Example Run Configuration Arguments for Local iOS Testing:**

```
-ea
-Ddriver=ios
-DplatformName=iOS
-DplatformVersion=15.2
-DdeviceName="iPhone 13"
-Denvironment=local
-Dheadless=false
-Dapp="/pathToPackage/PPlus_v8.0.56_b7040_Simulator.app"
-Dudid=set this if running on Real Mobile Device only
-DbundleId=set to override default setting
```
(Source: https://paramount.atlassian.net/wiki/spaces/PLQA/pages/47711460)

**2. Desired Capabilities in Code:**

If you are programmatically setting up the connection (e.g., in Java code), you would use `DesiredCapabilities`. An example shows how `iosDevice` capabilities are created, setting properties from `ios.properties` and fetching the app file name:

```java
public DesiredCapabilities iosDevice(String environment) {
    DesiredCapabilities caps = new DesiredCapabilities();
    config.setProperty("ios.properties");
    File app = new File(fetchAppFileName());
    String getDeviceName = System.getProperty("deviceName", config.getConfig().getProperty("ios1.name"));
    // ... further configurations
}
```
(Source: https://paramount.atlassian.net/wiki/spaces/PLQA/pages/47712177)

**3. Installing the App:**

You might also need to install the app on the device. An example command for installing an IPA via a `curl` POST request is provided, including a device ID:

```
curl -X POST https://d41e8d5432f641ae94508dcce01ed1e9@api-dev.headspin.io/v0/idevice/00008101-001D493A26A0001E/installer/install --data-binary "@PPlusDebug_v8.0.54_b6993_AdHoc.ipa"
```
(Source: https://paramount.atlassian.net/wiki/spaces/PLQA/pages/47712177)

**Summary of Key Parameters for iOS Connection:**

*   **`driver=ios`**: Specifies iOS.
*   **`platformName=iOS`**: Confirms the platform.
*   **`platformVersion`**: iOS version of the device.
*   **`deviceName`**: The device model name.
*   **`udid`**: Crucial for real devices, specifies the unique device identifier.
*   **`app`**: Path to the application file (.ipa).
*   **`bundleId`**: Application's bundle identifier.
*   **`environment`**: `local` or `synergy` depending on your setup.
2025-08-21 11:41:10,813 - __main__ - DEBUG - [main.py:474] - Formatted DM response: *Your Query:* How to connect an iOS device?

*Answer:*
Connecting an iOS device for testing primarily involves configuring the test environment to correctly identify and interact with the device. Here's how you can do it based on the provided information:

*1. Set up Run Configuration Arguments:*

When setting up your test run configuration, you'll need to specify certain parameters to connect to an iOS device. These can include:

*   `-Ddriver=ios`: This specifies that the test should use an iOS driver.
*   `-DplatformName=iOS`: Confirms the platform is iOS.
*   `-DplatformVersion`: Specify the iOS version of your device (e.g., `14.2`, `15.2`).
*   `-DdeviceName`: The name of your iPhone or iPad (e.g., `"iPhone 12"`, `"iPhone 13"`).
*   `-Dudid=set this if running on Real Mobile Device only`: This is crucial for real devices. You'll need to find the Unique Device Identifier (UDID) of your iOS device and provide it here. The format would be something like `00008101-001D493A26A0001E`.
*   `-Denvironment=local` (for local testing) or `-Denvironment=synergy` (for Synergy Mobile Cloud).
*   `-Dapp="/pathToPackage/your-app.ipa"`: The path to your iOS application file (IPA).
*   `-DbundleId`: Set this to override the default bundle ID of your app, if necessary (e.g., `com.cbsvideodebug.app`).

*Example Run Configuration Arguments for Local iOS Testing:*

```
-ea
-Ddriver=ios
-DplatformName=iOS
-DplatformVersion=15.2
-DdeviceName="iPhone 13"
-Denvironment=local
-Dheadless=false
-Dapp="/pathToPackage/PPlus_v8.0.56_b7040_Simulator.app"
-Dudid=set this if running on Real Mobile Device only
-DbundleId=set to override default setting
```
(Source: https://paramount.atlassian.net/wiki/spaces/PLQA/pages/47711460)

*2. Desired Capabilities in Code:*

If you are programmatically setting up the connection (e.g., in Java code), you would use `DesiredCapabilities`. An example shows how `iosDevice` capabilities are created, setting properties from `ios.properties` and fetching the app file name:

```java
public DesiredCapabilities iosDevice(String environment) {
    DesiredCapabilities caps = new DesiredCapabilities();
    config.setProperty("ios.properties");
    File app = new File(fetchAppFileName());
    String getDeviceName = System.getProperty("deviceName", config.getConfig().getProperty("ios1.name"));
    // ... further configurations
}
```
(Source: https://paramount.atlassian.net/wiki/spaces/PLQA/pages/47712177)

*3. Installing the App:*

You might also need to install the app on the device. An example command for installing an IPA via a `curl` POST request is provided, including a device ID:

```
curl -X POST https://d41e8d5432f641ae94508dcce01ed1e9@api-dev.headspin.io/v0/idevice/00008101-001D493A26A0001E/installer/install --data-binary "@PPlusDebug_v8.0.54_b6993_AdHoc.ipa"
```
(Source: https://paramount.atlassian.net/wiki/spaces/PLQA/pages/47712177)

*Summary of Key Parameters for iOS Connection:*

*   *`driver=ios`*: Specifies iOS.
*   *`platformName=iOS`*: Confirms the platform.
*   *`platformVersion`*: iOS version of the device.
*   *`deviceName`*: The device model name.
*   *`udid`*: Crucial for real devices, specifies the unique device identifier.
*   *`app`*: Path to the application file (.ipa).
*   *`bundleId`*: Application's bundle identifier.
*   *`environment`*: `local` or `synergy` depending on your setup.
2025-08-21 11:41:10,814 - slack_sdk.web.base_client - DEBUG - [base_client.py:255] - Sending a request - url: https://slack.com/api/reactions.remove, query_params: {}, body_params: {'name': 'thinking_face', 'channel': 'D09A0LFHK8R', 'timestamp': '1755801292.462349', 'team_id': 'T010QS7UQNA'}, files: {}, json_body: None, headers: {'Content-Type': 'application/x-www-form-urlencoded', 'Authorization': '(redacted)', 'User-Agent': 'Python/3.12.0 slackclient/3.34.0 Darwin/23.4.0'}
2025-08-21 11:41:11,251 - slack_sdk.web.base_client - DEBUG - [base_client.py:546] - Received the following response - status: 200, headers: {'date': 'Thu, 21 Aug 2025 18:41:11 GMT', 'server': 'Apache', 'vary': 'Accept-Encoding', 'x-slack-req-id': 'd4a4696df96dad7e0ff572f045b28bd8', 'x-content-type-options': 'nosniff', 'x-xss-protection': '0', 'pragma': 'no-cache', 'cache-control': 'private, no-cache, no-store, must-revalidate', 'expires': 'Sat, 26 Jul 1997 05:00:00 GMT', 'content-type': 'application/json; charset=utf-8', 'x-accepted-oauth-scopes': 'reactions:write', 'x-oauth-scopes': 'app_mentions:read,channels:history,chat:write,im:history,im:read,im:write,users:read,reactions:write,users:read.email', 'access-control-expose-headers': 'x-slack-req-id, retry-after', 'access-control-allow-headers': 'slack-route, x-slack-version-ts, x-b3-traceid, x-b3-spanid, x-b3-parentspanid, x-b3-sampled, x-b3-flags', 'strict-transport-security': 'max-age=31536000; includeSubDomains; preload', 'referrer-policy': 'no-referrer', 'x-slack-unique-id': 'aKdoR_atDiw-3dZ-1UmKOgAAEB8', 'x-slack-backend': 'r', 'access-control-allow-origin': '*', 'content-length': '11', 'via': '1.1 slack-prod.tinyspeck.com, envoy-www-iad-fcudqbnr,envoy-edge-pdx-kmntbcvm', 'x-envoy-attempt-count': '1', 'x-envoy-upstream-service-time': '230', 'x-backend': 'main_normal main_canary_with_overflow main_control_with_overflow', 'x-server': 'slack-www-hhvm-main-iad-zyua', 'x-slack-shared-secret-outcome': 'no-match', 'x-edge-backend': 'envoy-www', 'timing-allow-origin': '*', 'x-slack-edge-shared-secret-outcome': 'no-match', 'connection': 'close'}, body: {"ok":true}
2025-08-21 11:41:11,254 - slack_sdk.web.base_client - DEBUG - [base_client.py:255] - Sending a request - url: https://slack.com/api/chat.postMessage, query_params: {}, body_params: {}, files: {}, json_body: {'channel': 'D09A0LFHK8R', 'text': '*Your Query:* How to connect an iOS device? *Answer:*\nConnecting an iOS device for testing primarily involves configuring the test environment to correctly identify and interact with the device. Here\'s how you can do it based on the provided information:\n\n*1. Set up Run Configuration Arguments:*\n\nWhen setting up your test run configuration, you\'ll need to specify certain parameters to connect to an iOS device. These can include:\n\n*   `-Ddriver=ios`: This specifies that the test should use an iOS driver. *   `-DplatformName=iOS`: Confirms the platform is iOS. *   `-DplatformVersion`: Specify the iOS version of your device (e.g., `14.2`, `15.2`). *   `-DdeviceName`: The name of your iPhone or iPad (e.g., `"iPhone 12"`, `"iPhone 13"`). *   `-Dudid=set this if running on Real Mobile Device only`: This is crucial for real devices. You\'ll need to find the Unique Device Identifier (UDID) of your iOS device and provide it here. The format would be something like `00008101-001D493A26A0001E`. *   `-Denvironment=local` (for local testing) or `-Denvironment=synergy` (for Synergy Mobile Cloud). *   `-Dapp="/pathToPackage/your-app.ipa"`: The path to your iOS application file (IPA). *   `-DbundleId`: Set this to override the default bundle ID of your app, if necessary (e.g., `com.cbsvideodebug.app`). *Example Run Configuration Arguments for Local iOS Testing:*\n\n```\n-ea\n-Ddriver=ios\n-DplatformName=iOS\n-DplatformVersion=15.2\n-DdeviceName="iPhone 13"\n-Denvironment=local\n-Dheadless=false\n-Dapp="/pathToPackage/PPlus_v8.0.56_b7040_Simulator.app"\n-Dudid=set this if running on Real Mobile Device only\n-DbundleId=set to override default setting\n```\n(Source: https://paramount.atlassian.net/wiki/spaces/PLQA/pages/47711460)\n\n*2. Desired Capabilities in Code:*\n\nIf you are programmatically setting up the connection (e.g., in Java code), you would use `DesiredCapabilities`. An example shows how `iosDevice` capabilities are created, setting properties from `ios.properties` and fetching the app file name:\n\n```java\npublic DesiredCapabilities iosDevice(String environment) {\n    DesiredCapabilities caps = new DesiredCapabilities();\n    config.setProperty("ios.properties");\n    File app = new File(fetchAppFileName());\n    String getDeviceName = System.getProperty("deviceName", config.getConfig().getProperty("ios1.name"));\n    // ... further configurations\n}\n```\n(Source: https://paramount.atlassian.net/wiki/spaces/PLQA/pages/47712177)\n\n*3. Installing the App:*\n\nYou might also need to install the app on the device. An example command for installing an IPA via a `curl` POST request is provided, including a device ID:\n\n```\ncurl -X POST https://d41e8d5432f641ae94508dcce01ed1e9@api-dev.headspin.io/v0/idevice/00008101-001D493A26A0001E/installer/install --data-binary "@PPlusDebug_v8.0.54_b6993_AdHoc.ipa"\n```\n(Source: https://paramount.atlassian.net/wiki/spaces/PLQA/pages/47712177)\n\n*Summary of Key Parameters for iOS Connection:*\n\n*   *`driver=ios`*: Specifies iOS.\n\n_(message continued in thread...)_', 'thread_ts': '1755801292.462349', 'team_id': 'T010QS7UQNA'}, headers: {'Content-Type': 'application/json;charset=utf-8', 'Authorization': '(redacted)', 'User-Agent': 'Python/3.12.0 slackclient/3.34.0 Darwin/23.4.0'}
2025-08-21 11:41:11,657 - slack_sdk.web.base_client - DEBUG - [base_client.py:546] - Received the following response - status: 200, headers: {'date': 'Thu, 21 Aug 2025 18:41:11 GMT', 'server': 'Apache', 'vary': 'Accept-Encoding', 'x-slack-req-id': '417250c27b3e68f09fead5d658cbf634', 'x-content-type-options': 'nosniff', 'x-xss-protection': '0', 'pragma': 'no-cache', 'cache-control': 'private, no-cache, no-store, must-revalidate', 'expires': 'Sat, 26 Jul 1997 05:00:00 GMT', 'content-type': 'application/json; charset=utf-8', 'x-accepted-oauth-scopes': 'chat:write', 'x-oauth-scopes': 'app_mentions:read,channels:history,chat:write,im:history,im:read,im:write,users:read,reactions:write,users:read.email', 'access-control-expose-headers': 'x-slack-req-id, retry-after', 'access-control-allow-headers': 'slack-route, x-slack-version-ts, x-b3-traceid, x-b3-spanid, x-b3-parentspanid, x-b3-sampled, x-b3-flags', 'strict-transport-security': 'max-age=31536000; includeSubDomains; preload', 'referrer-policy': 'no-referrer', 'x-slack-unique-id': 'aKdoR6Y1aCSPkwVM-_gcMQAAABY', 'x-slack-backend': 'r', 'access-control-allow-origin': '*', 'content-length': '9599', 'via': '1.1 slack-prod.tinyspeck.com, envoy-www-iad-wsssjvrt,envoy-edge-pdx-ibbrtiyu', 'x-envoy-attempt-count': '1', 'x-envoy-upstream-service-time': '213', 'x-backend': 'main_normal main_canary_with_overflow main_control_with_overflow', 'x-server': 'slack-www-hhvm-main-iad-texr', 'x-slack-shared-secret-outcome': 'no-match', 'x-edge-backend': 'envoy-www', 'timing-allow-origin': '*', 'x-slack-edge-shared-secret-outcome': 'no-match', 'connection': 'close'}, body: {"ok":true,"channel":"D09A0LFHK8R","ts":"1755801671.650019","message":{"user":"U099R6WTZ9S","type":"message","ts":"1755801671.650019","bot_id":"B099R6WTRU4","app_id":"A099LACAB2R","text":"*Your Query:* How to connect an iOS device? *Answer:*\nConnecting an iOS device for testing primarily involves configuring the test environment to correctly identify and interact with the device. Here's how you can do it based on the provided information:\n\n*1. Set up Run Configuration Arguments:*\n\nWhen setting up your test run configuration, you'll need to specify certain parameters to connect to an iOS device. These can include:\n\n*   `-Ddriver=ios`: This specifies that the test should use an iOS driver. *   `-DplatformName=iOS`: Confirms the platform is iOS. *   `-DplatformVersion`: Specify the iOS version of your device (e.g., `14.2`, `15.2`). *   `-DdeviceName`: The name of your iPhone or iPad (e.g., `\"iPhone 12\"`, `\"iPhone 13\"`). *   `-Dudid=set this if running on Real Mobile Device only`: This is crucial for real devices. You'll need to find the Unique Device Identifier (UDID) of your iOS device and provide it here. The format would be something like `00008101-001D493A26A0001E`. *   `-Denvironment=local` (for local testing) or `-Denvironment=synergy` (for Synergy Mobile Cloud). *   `-Dapp=\"/pathToPackage/your-app.ipa\"`: The path to your iOS application file (IPA). *   `-DbundleId`: Set this to override the default bundle ID of your app, if necessary (e.g., `<http://com.cbsvideodebug.app|com.cbsvideodebug.app>`). *Example Run Configuration Arguments for Local iOS Testing:*\n\n```\n-ea\n-Ddriver=ios\n-DplatformName=iOS\n-DplatformVersion=15.2\n-DdeviceName=\"iPhone 13\"\n-Denvironment=local\n-Dheadless=false\n-Dapp=\"/pathToPackage/PPlus_v8.0.56_b7040_Simulator.app\"\n-Dudid=set this if running on Real Mobile Device only\n-DbundleId=set to override default setting\n```\n(Source: <https://paramount.atlassian.net/wiki/spaces/PLQA/pages/47711460>)\n\n*2. Desired Capabilities in Code:*\n\nIf you are programmatically setting up the connection (e.g., in Java code), you would use `DesiredCapabilities`. An example shows how `iosDevice` capabilities are created, setting properties from `ios.properties` and fetching the app file name:\n\n```java\npublic DesiredCapabilities iosDevice(String environment) {\n    DesiredCapabilities caps = new DesiredCapabilities();\n    config.setProperty(\"ios.properties\");\n    File app = new File(fetchAppFileName());\n    String getDeviceName = System.getProperty(\"deviceName\", config.getConfig().getProperty(\"ios1.name\"));\n    // ... further configurations\n}\n```\n(Source: <https://paramount.atlassian.net/wiki/spaces/PLQA/pages/47712177>)\n\n*3. Installing the App:*\n\nYou might also need to install the app on the device. An example command for installing an IPA via a `curl` POST request is provided, including a device ID:\n\n```\ncurl -X POST <https://d41e8d5432f641ae94508dcce01ed1e9@api-dev.headspin.io/v0/idevice/00008101-001D493A26A0001E/installer/install> --data-binary \"@PPlusDebug_v8.0.54_b6993_AdHoc.ipa\"\n```\n(Source: <https://paramount.atlassian.net/wiki/spaces/PLQA/pages/47712177>)\n\n*Summary of Key Parameters for iOS Connection:*\n\n*   *`driver=ios`*: Specifies iOS.\n\n_(message continued in thread...)_","team":"T010QS7UQNA","bot_profile":{"id":"B099R6WTRU4","app_id":"A099LACAB2R","user_id":"U099R6WTZ9S","name":"AutoBot","icons":{"image_36":"https://a.slack-edge.com/80588/img/plugins/app/bot_36.png","image_48":"https://a.slack-edge.com/80588/img/plugins/app/bot_48.png","image_72":"https://a.slack-edge.com/80588/img/plugins/app/service_72.png"},"deleted":false,"updated":1754677948,"team_id":"T010QS7UQNA"},"thread_ts":"1755801292.462349","parent_user_id":"U01RMTFMALF","blocks":[{"type":"rich_text","block_id":"7Ja","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Your Query:","style":{"bold":true}},{"type":"text","text":" How to connect an iOS device? "},{"type":"text","text":"Answer:","style":{"bold":true}},{"type":"text","text":"\nConnecting an iOS device for testing primarily involves configuring the test environment to correctly identify and interact with the device. Here's how you can do it based on the provided information:\n\n"},{"type":"text","text":"1. Set up Run Configuration Arguments:","style":{"bold":true}},{"type":"text","text":"\n\nWhen setting up your test run configuration, you'll need to specify certain parameters to connect to an iOS device. These can include:\n\n*   "},{"type":"text","text":"-Ddriver=ios","style":{"code":true}},{"type":"text","text":": This specifies that the test should use an iOS driver. *   "},{"type":"text","text":"-DplatformName=iOS","style":{"code":true}},{"type":"text","text":": Confirms the platform is iOS. *   "},{"type":"text","text":"-DplatformVersion","style":{"code":true}},{"type":"text","text":": Specify the iOS version of your device (e.g., "},{"type":"text","text":"14.2","style":{"code":true}},{"type":"text","text":", "},{"type":"text","text":"15.2","style":{"code":true}},{"type":"text","text":"). *   "},{"type":"text","text":"-DdeviceName","style":{"code":true}},{"type":"text","text":": The name of your iPhone or iPad (e.g., "},{"type":"text","text":"\"iPhone 12\"","style":{"code":true}},{"type":"text","text":", "},{"type":"text","text":"\"iPhone 13\"","style":{"code":true}},{"type":"text","text":"). *   "},{"type":"text","text":"-Dudid=set this if running on Real Mobile Device only","style":{"code":true}},{"type":"text","text":": This is crucial for real devices. You'll need to find the Unique Device Identifier (UDID) of your iOS device and provide it here. The format would be something like "},{"type":"text","text":"00008101-001D493A26A0001E","style":{"code":true}},{"type":"text","text":". *   "},{"type":"text","text":"-Denvironment=local","style":{"code":true}},{"type":"text","text":" (for local testing) or "},{"type":"text","text":"-Denvironment=synergy","style":{"code":true}},{"type":"text","text":" (for Synergy Mobile Cloud). *   "},{"type":"text","text":"-Dapp=\"/pathToPackage/your-app.ipa\"","style":{"code":true}},{"type":"text","text":": The path to your iOS application file (IPA). *   "},{"type":"text","text":"-DbundleId","style":{"code":true}},{"type":"text","text":": Set this to override the default bundle ID of your app, if necessary (e.g., "},{"type":"link","url":"http://com.cbsvideodebug.app","text":"com.cbsvideodebug.app","style":{"code":true}},{"type":"text","text":"). "},{"type":"text","text":"Example Run Configuration Arguments for Local iOS Testing:","style":{"bold":true}},{"type":"text","text":"\n\n"}]},{"type":"rich_text_preformatted","elements":[{"type":"text","text":"-ea\n-Ddriver=ios\n-DplatformName=iOS\n-DplatformVersion=15.2\n-DdeviceName=\"iPhone 13\"\n-Denvironment=local\n-Dheadless=false\n-Dapp=\"/pathToPackage/PPlus_v8.0.56_b7040_Simulator.app\"\n-Dudid=set this if running on Real Mobile Device only\n-DbundleId=set to override default setting\n"}]},{"type":"rich_text_section","elements":[{"type":"text","text":"(Source: "},{"type":"link","url":"https://paramount.atlassian.net/wiki/spaces/PLQA/pages/47711460"},{"type":"text","text":")\n\n"},{"type":"text","text":"2. Desired Capabilities in Code:","style":{"bold":true}},{"type":"text","text":"\n\nIf you are programmatically setting up the connection (e.g., in Java code), you would use "},{"type":"text","text":"DesiredCapabilities","style":{"code":true}},{"type":"text","text":". An example shows how "},{"type":"text","text":"iosDevice","style":{"code":true}},{"type":"text","text":" capabilities are created, setting properties from "},{"type":"text","text":"ios.properties","style":{"code":true}},{"type":"text","text":" and fetching the app file name:\n\n"}]},{"type":"rich_text_preformatted","elements":[{"type":"text","text":"java\npublic DesiredCapabilities iosDevice(String environment) {\n    DesiredCapabilities caps = new DesiredCapabilities();\n    config.setProperty(\"ios.properties\");\n    File app = new File(fetchAppFileName());\n    String getDeviceName = System.getProperty(\"deviceName\", config.getConfig().getProperty(\"ios1.name\"));\n    // ... further configurations\n}\n"}]},{"type":"rich_text_section","elements":[{"type":"text","text":"(Source: "},{"type":"link","url":"https://paramount.atlassian.net/wiki/spaces/PLQA/pages/47712177"},{"type":"text","text":")\n\n"},{"type":"text","text":"3. Installing the App:","style":{"bold":true}},{"type":"text","text":"\n\nYou might also need to install the app on the device. An example command for installing an IPA via a "},{"type":"text","text":"curl","style":{"code":true}},{"type":"text","text":" POST request is provided, including a device ID:\n\n"}]},{"type":"rich_text_preformatted","elements":[{"type":"text","text":"curl -X POST "},{"type":"link","url":"https://d41e8d5432f641ae94508dcce01ed1e9@api-dev.headspin.io/v0/idevice/00008101-001D493A26A0001E/installer/install"},{"type":"text","text":" --data-binary \"@PPlusDebug_v8.0.54_b6993_AdHoc.ipa\"\n"}]},{"type":"rich_text_section","elements":[{"type":"text","text":"(Source: "},{"type":"link","url":"https://paramount.atlassian.net/wiki/spaces/PLQA/pages/47712177"},{"type":"text","text":")\n\n"},{"type":"text","text":"Summary of Key Parameters for iOS Connection:","style":{"bold":true}},{"type":"text","text":"\n\n*   "},{"type":"text","text":"driver=ios","style":{"bold":true,"code":true}},{"type":"text","text":": Specifies iOS.\n\n"},{"type":"text","text":"(message continued in thread...)","style":{"italic":true}}]}]}]}}
2025-08-21 11:41:11,659 - slack_sdk.web.base_client - DEBUG - [base_client.py:255] - Sending a request - url: https://slack.com/api/chat.postMessage, query_params: {}, body_params: {}, files: {}, json_body: {'channel': 'D09A0LFHK8R', 'text': "_(part 2/2)_\n\n*   *`platformName=iOS`*: Confirms the platform. *   *`platformVersion`*: iOS version of the device. *   *`deviceName`*: The device model name. *   *`udid`*: Crucial for real devices, specifies the unique device identifier. *   *`app`*: Path to the application file (.ipa). *   *`bundleId`*: Application's bundle identifier. *   *`environment`*: `local` or `synergy` depending on your setup.", 'thread_ts': '1755801292.462349', 'team_id': 'T010QS7UQNA'}, headers: {'Content-Type': 'application/json;charset=utf-8', 'Authorization': '(redacted)', 'User-Agent': 'Python/3.12.0 slackclient/3.34.0 Darwin/23.4.0'}
2025-08-21 11:41:11,996 - slack_sdk.web.base_client - DEBUG - [base_client.py:546] - Received the following response - status: 200, headers: {'date': 'Thu, 21 Aug 2025 18:41:12 GMT', 'server': 'Apache', 'vary': 'Accept-Encoding', 'x-slack-req-id': '36d862dc99a7f1fa137a738ba6cbd9a7', 'x-content-type-options': 'nosniff', 'x-xss-protection': '0', 'pragma': 'no-cache', 'cache-control': 'private, no-cache, no-store, must-revalidate', 'expires': 'Sat, 26 Jul 1997 05:00:00 GMT', 'content-type': 'application/json; charset=utf-8', 'x-accepted-oauth-scopes': 'chat:write', 'x-oauth-scopes': 'app_mentions:read,channels:history,chat:write,im:history,im:read,im:write,users:read,reactions:write,users:read.email', 'access-control-expose-headers': 'x-slack-req-id, retry-after', 'access-control-allow-headers': 'slack-route, x-slack-version-ts, x-b3-traceid, x-b3-spanid, x-b3-parentspanid, x-b3-sampled, x-b3-flags', 'strict-transport-security': 'max-age=31536000; includeSubDomains; preload', 'referrer-policy': 'no-referrer', 'x-slack-unique-id': 'aKdoRyXaokHZ9nS5HgHKMgAAACw', 'x-slack-backend': 'r', 'access-control-allow-origin': '*', 'content-length': '2372', 'via': '1.1 slack-prod.tinyspeck.com, envoy-www-iad-zojqjqyo,envoy-edge-pdx-qswxuxtr', 'x-envoy-attempt-count': '1', 'x-envoy-upstream-service-time': '155', 'x-backend': 'main_normal main_canary_with_overflow main_control_with_overflow', 'x-server': 'slack-www-hhvm-main-iad-tlbt', 'x-slack-shared-secret-outcome': 'no-match', 'x-edge-backend': 'envoy-www', 'timing-allow-origin': '*', 'x-slack-edge-shared-secret-outcome': 'no-match', 'connection': 'close'}, body: {"ok":true,"channel":"D09A0LFHK8R","ts":"1755801672.006389","message":{"user":"U099R6WTZ9S","type":"message","ts":"1755801672.006389","bot_id":"B099R6WTRU4","app_id":"A099LACAB2R","text":"_(part 2/2)_\n\n*   *`platformName=iOS`*: Confirms the platform. *   *`platformVersion`*: iOS version of the device. *   *`deviceName`*: The device model name. *   *`udid`*: Crucial for real devices, specifies the unique device identifier. *   *`app`*: Path to the application file (.ipa). *   *`bundleId`*: Application's bundle identifier. *   *`environment`*: `local` or `synergy` depending on your setup.","team":"T010QS7UQNA","bot_profile":{"id":"B099R6WTRU4","app_id":"A099LACAB2R","user_id":"U099R6WTZ9S","name":"AutoBot","icons":{"image_36":"https://a.slack-edge.com/80588/img/plugins/app/bot_36.png","image_48":"https://a.slack-edge.com/80588/img/plugins/app/bot_48.png","image_72":"https://a.slack-edge.com/80588/img/plugins/app/service_72.png"},"deleted":false,"updated":1754677948,"team_id":"T010QS7UQNA"},"thread_ts":"1755801292.462349","parent_user_id":"U01RMTFMALF","blocks":[{"type":"rich_text","block_id":"q4m","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"(part 2/2)","style":{"italic":true}},{"type":"text","text":"\n\n*   "},{"type":"text","text":"platformName=iOS","style":{"bold":true,"code":true}},{"type":"text","text":": Confirms the platform. *   "},{"type":"text","text":"platformVersion","style":{"bold":true,"code":true}},{"type":"text","text":": iOS version of the device. *   "},{"type":"text","text":"deviceName","style":{"bold":true,"code":true}},{"type":"text","text":": The device model name. *   "},{"type":"text","text":"udid","style":{"bold":true,"code":true}},{"type":"text","text":": Crucial for real devices, specifies the unique device identifier. *   "},{"type":"text","text":"app","style":{"bold":true,"code":true}},{"type":"text","text":": Path to the application file (.ipa). *   "},{"type":"text","text":"bundleId","style":{"bold":true,"code":true}},{"type":"text","text":": Application's bundle identifier. *   "},{"type":"text","text":"environment","style":{"bold":true,"code":true}},{"type":"text","text":": "},{"type":"text","text":"local","style":{"code":true}},{"type":"text","text":" or "},{"type":"text","text":"synergy","style":{"code":true}},{"type":"text","text":" depending on your setup."}]}]}]}}
2025-08-21 11:41:11,997 - __main__ - DEBUG - [main.py:499] - Cleaning up DM thread tracking...
2025-08-21 11:41:11,998 - utils - DEBUG - [utils.py:67] - Managing thread: D09A0LFHK8R:1755801292.462349, action: remove, user: U01RMTFMALF
2025-08-21 11:41:11,998 - utils - INFO - [utils.py:100] - Removed thread D09A0LFHK8R:1755801292.462349 from active tracking (remaining: 0)
2025-08-21 11:41:13,178 - slack_bolt.App - DEBUG - [client.py:235] - on_message invoked: (message: {"envelope_id":"b62ee9c5-446d-4743-b3ac-e3084e2617b1","payload":{"token":"yq71khZBCyJF1Ri2hG5aNqr5","team_id":"T010QS7UQNA","enterprise_id":"ERV4P7NAD","context_team_id":null,"context_enterprise_id":"ERV4P7NAD","api_app_id":"A099LACAB2R","event":{"user":"U099R6WTZ9S","type":"message","ts":"1755801672.006389","bot_id":"B099R6WTRU4","app_id":"A099LACAB2R","text":"_(part 2\/2)_\n\n*   *`platformName=iOS`*: Confirms the platform. *   *`platformVersion`*: iOS version of the device. *   *`deviceName`*: The device model name. *   *`udid`*: Crucial for real devices, specifies the unique device identifier. *   *`app`*: Path to the application file (.ipa). *   *`bundleId`*: Application's bundle identifier. *   *`environment`*: `local` or `synergy` depending on your setup.","team":"T010QS7UQNA","bot_profile":{"id":"B099R6WTRU4","deleted":false,"name":"AutoBot","updated":1754677948,"app_id":"A099LACAB2R","user_id":"U099R6WTZ9S","icons":{"image_36":"https:\/\/a.slack-edge.com\/80588\/img\/plugins\/app\/bot_36.png","image_48":"https:\/\/a.slack-edge.com\/80588\/img\/plugins\/app\/bot_48.png","image_72":"https:\/\/a.slack-edge.com\/80588\/img\/plugins\/app\/service_72.png"},"team_id":"T010QS7UQNA"},"thread_ts":"1755801292.462349","parent_user_id":"U01RMTFMALF","blocks":[{"type":"rich_text","block_id":"VsKAw","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"(part 2\/2)","style":{"italic":true}},{"type":"text","text":"\n\n*   "},{"type":"text","text":"platformName=iOS","style":{"bold":true,"code":true}},{"type":"text","text":": Confirms the platform. *   "},{"type":"text","text":"platformVersion","style":{"bold":true,"code":true}},{"type":"text","text":": iOS version of the device. *   "},{"type":"text","text":"deviceName","style":{"bold":true,"code":true}},{"type":"text","text":": The device model name. *   "},{"type":"text","text":"udid","style":{"bold":true,"code":true}},{"type":"text","text":": Crucial for real devices, specifies the unique device identifier. *   "},{"type":"text","text":"app","style":{"bold":true,"code":true}},{"type":"text","text":": Path to the application file (.ipa). *   "},{"type":"text","text":"bundleId","style":{"bold":true,"code":true}},{"type":"text","text":": Application's bundle identifier. *   "},{"type":"text","text":"environment","style":{"bold":true,"code":true}},{"type":"text","text":": "},{"type":"text","text":"local","style":{"code":true}},{"type":"text","text":" or "},{"type":"text","text":"synergy","style":{"code":true}},{"type":"text","text":" depending on your setup."}]}]}],"channel":"D09A0LFHK8R","event_ts":"1755801672.006389","channel_type":"im"},"type":"event_callback","event_id":"Ev09BL5LFMHA","event_time":1755801672,"authorizations":[{"enterprise_id":"ERV4P7NAD","team_id":"T010QS7UQNA","user_id":"U099R6WTZ9S","is_bot":true,"is_enterprise_install":false}],"is_ext_shared_channel":false,"event_context":"4-eyJldCI6Im1lc3NhZ2UiLCJ0aWQiOiJUMDEwUVM3VVFOQSIsImFpZCI6IkEwOTlMQUNBQjJSIiwiY2lkIjoiRDA5QTBMRkhLOFIifQ"},"type":"events_api","accepts_response_payload":false,"retry_attempt":0,"retry_reason":""})
2025-08-21 11:41:13,179 - slack_bolt.App - DEBUG - [client.py:99] - A new message enqueued (current queue size: 1)
2025-08-21 11:41:13,179 - slack_bolt.App - DEBUG - [client.py:105] - A message dequeued (current queue size: 0)
2025-08-21 11:41:13,179 - slack_bolt.App - DEBUG - [client.py:125] - Message processing started (type: events_api, envelope_id: b62ee9c5-446d-4743-b3ac-e3084e2617b1)
2025-08-21 11:41:13,179 - slack_bolt.App - DEBUG - [app.py:476] - Applying slack_bolt.middleware.ssl_check.ssl_check.SslCheck
2025-08-21 11:41:13,179 - slack_bolt.App - DEBUG - [app.py:476] - Applying slack_bolt.middleware.request_verification.request_verification.RequestVerification
2025-08-21 11:41:13,180 - slack_bolt.App - DEBUG - [app.py:476] - Applying slack_bolt.middleware.authorization.single_team_authorization.SingleTeamAuthorization
2025-08-21 11:41:13,180 - slack_bolt.App - DEBUG - [app.py:476] - Applying slack_bolt.middleware.ignoring_self_events.ignoring_self_events.IgnoringSelfEvents
2025-08-21 11:41:13,180 - slack_bolt.IgnoringSelfEvents - DEBUG - [ignoring_self_events.py:60] - Skipped self event: {'user': 'U099R6WTZ9S', 'type': 'message', 'ts': '1755801672.006389', 'bot_id': 'B099R6WTRU4', 'app_id': 'A099LACAB2R', 'text': "_(part 2/2)_\n\n*   *`platformName=iOS`*: Confirms the platform. *   *`platformVersion`*: iOS version of the device. *   *`deviceName`*: The device model name. *   *`udid`*: Crucial for real devices, specifies the unique device identifier. *   *`app`*: Path to the application file (.ipa). *   *`bundleId`*: Application's bundle identifier. *   *`environment`*: `local` or `synergy` depending on your setup.", 'team': 'T010QS7UQNA', 'bot_profile': {'id': 'B099R6WTRU4', 'deleted': False, 'name': 'AutoBot', 'updated': 1754677948, 'app_id': 'A099LACAB2R', 'user_id': 'U099R6WTZ9S', 'icons': {'image_36': 'https://a.slack-edge.com/80588/img/plugins/app/bot_36.png', 'image_48': 'https://a.slack-edge.com/80588/img/plugins/app/bot_48.png', 'image_72': 'https://a.slack-edge.com/80588/img/plugins/app/service_72.png'}, 'team_id': 'T010QS7UQNA'}, 'thread_ts': '1755801292.462349', 'parent_user_id': 'U01RMTFMALF', 'blocks': [{'type': 'rich_text', 'block_id': 'VsKAw', 'elements': [{'type': 'rich_text_section', 'elements': [{'type': 'text', 'text': '(part 2/2)', 'style': {'italic': True}}, {'type': 'text', 'text': '\n\n*   '}, {'type': 'text', 'text': 'platformName=iOS', 'style': {'bold': True, 'code': True}}, {'type': 'text', 'text': ': Confirms the platform. *   '}, {'type': 'text', 'text': 'platformVersion', 'style': {'bold': True, 'code': True}}, {'type': 'text', 'text': ': iOS version of the device. *   '}, {'type': 'text', 'text': 'deviceName', 'style': {'bold': True, 'code': True}}, {'type': 'text', 'text': ': The device model name. *   '}, {'type': 'text', 'text': 'udid', 'style': {'bold': True, 'code': True}}, {'type': 'text', 'text': ': Crucial for real devices, specifies the unique device identifier. *   '}, {'type': 'text', 'text': 'app', 'style': {'bold': True, 'code': True}}, {'type': 'text', 'text': ': Path to the application file (.ipa). *   '}, {'type': 'text', 'text': 'bundleId', 'style': {'bold': True, 'code': True}}, {'type': 'text', 'text': ": Application's bundle identifier. *   "}, {'type': 'text', 'text': 'environment', 'style': {'bold': True, 'code': True}}, {'type': 'text', 'text': ': '}, {'type': 'text', 'text': 'local', 'style': {'code': True}}, {'type': 'text', 'text': ' or '}, {'type': 'text', 'text': 'synergy', 'style': {'code': True}}, {'type': 'text', 'text': ' depending on your setup.'}]}]}], 'channel': 'D09A0LFHK8R', 'event_ts': '1755801672.006389', 'channel_type': 'im'}
2025-08-21 11:41:13,180 - slack_bolt.App - DEBUG - [client.py:200] - Sending a message (session id: 9adf3bcc-e9d3-4f5c-b2bc-938d72bdb603, message: {"envelope_id": "b62ee9c5-446d-4743-b3ac-e3084e2617b1"})
2025-08-21 11:41:13,180 - slack_bolt.App - DEBUG - [internals.py:41] - Response time: 1 milliseconds
2025-08-21 11:41:13,181 - slack_bolt.App - DEBUG - [client.py:150] - Message processing completed (type: events_api, envelope_id: b62ee9c5-446d-4743-b3ac-e3084e2617b1)
2025-08-21 11:41:13,607 - slack_bolt.App - DEBUG - [client.py:235] - on_message invoked: (message: {"envelope_id":"b9f86f6e-a80b-484b-8501-265ced641277","payload":{"token":"yq71khZBCyJF1Ri2hG5aNqr5","team_id":"T010QS7UQNA","enterprise_id":"ERV4P7NAD","context_team_id":null,"context_enterprise_id":"ERV4P7NAD","api_app_id":"A099LACAB2R","event":{"user":"U099R6WTZ9S","type":"message","ts":"1755801671.650019","bot_id":"B099R6WTRU4","app_id":"A099LACAB2R","text":"*Your Query:* How to connect an iOS device? *Answer:*\nConnecting an iOS device for testing primarily involves configuring the test environment to correctly identify and interact with the device. Here's how you can do it based on the provided information:\n\n*1. Set up Run Configuration Arguments:*\n\nWhen setting up your test run configuration, you'll need to specify certain parameters to connect to an iOS device. These can include:\n\n*   `-Ddriver=ios`: This specifies that the test should use an iOS driver. *   `-DplatformName=iOS`: Confirms the platform is iOS. *   `-DplatformVersion`: Specify the iOS version of your device (e.g., `14.2`, `15.2`). *   `-DdeviceName`: The name of your iPhone or iPad (e.g., `\"iPhone 12\"`, `\"iPhone 13\"`). *   `-Dudid=set this if running on Real Mobile Device only`: This is crucial for real devices. You'll need to find the Unique Device Identifier (UDID) of your iOS device and provide it here. The format would be something like `00008101-001D493A26A0001E`. *   `-Denvironment=local` (for local testing) or `-Denvironment=synergy` (for Synergy Mobile Cloud). *   `-Dapp=\"\/pathToPackage\/your-app.ipa\"`: The path to your iOS application file (IPA). *   `-DbundleId`: Set this to override the default bundle ID of your app, if necessary (e.g., `<http:\/\/com.cbsvideodebug.app|com.cbsvideodebug.app>`). *Example Run Configuration Arguments for Local iOS Testing:*\n\n```\n-ea\n-Ddriver=ios\n-DplatformName=iOS\n-DplatformVersion=15.2\n-DdeviceName=\"iPhone 13\"\n-Denvironment=local\n-Dheadless=false\n-Dapp=\"\/pathToPackage\/PPlus_v8.0.56_b7040_Simulator.app\"\n-Dudid=set this if running on Real Mobile Device only\n-DbundleId=set to override default setting\n```\n(Source: <https:\/\/paramount.atlassian.net\/wiki\/spaces\/PLQA\/pages\/47711460>)\n\n*2. Desired Capabilities in Code:*\n\nIf you are programmatically setting up the connection (e.g., in Java code), you would use `DesiredCapabilities`. An example shows how `iosDevice` capabilities are created, setting properties from `ios.properties` and fetching the app file name:\n\n```java\npublic DesiredCapabilities iosDevice(String environment) {\n    DesiredCapabilities caps = new DesiredCapabilities();\n    config.setProperty(\"ios.properties\");\n    File app = new File(fetchAppFileName());\n    String getDeviceName = System.getProperty(\"deviceName\", config.getConfig().getProperty(\"ios1.name\"));\n    \/\/ ... further configurations\n}\n```\n(Source: <https:\/\/paramount.atlassian.net\/wiki\/spaces\/PLQA\/pages\/47712177>)\n\n*3. Installing the App:*\n\nYou might also need to install the app on the device. An example command for installing an IPA via a `curl` POST request is provided, including a device ID:\n\n```\ncurl -X POST <https:\/\/d41e8d5432f641ae94508dcce01ed1e9@api-dev.headspin.io\/v0\/idevice\/00008101-001D493A26A0001E\/installer\/install> --data-binary \"@PPlusDebug_v8.0.54_b6993_AdHoc.ipa\"\n```\n(Source: <https:\/\/paramount.atlassian.net\/wiki\/spaces\/PLQA\/pages\/47712177>)\n\n*Summary of Key Parameters for iOS Connection:*\n\n*   *`driver=ios`*: Specifies iOS.\n\n_(message continued in thread...)_","team":"T010QS7UQNA","bot_profile":{"id":"B099R6WTRU4","deleted":false,"name":"AutoBot","updated":1754677948,"app_id":"A099LACAB2R","user_id":"U099R6WTZ9S","icons":{"image_36":"https:\/\/a.slack-edge.com\/80588\/img\/plugins\/app\/bot_36.png","image_48":"https:\/\/a.slack-edge.com\/80588\/img\/plugins\/app\/bot_48.png","image_72":"https:\/\/a.slack-edge.com\/80588\/img\/plugins\/app\/service_72.png"},"team_id":"T010QS7UQNA"},"thread_ts":"1755801292.462349","parent_user_id":"U01RMTFMALF","blocks":[{"type":"rich_text","block_id":"lv94","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Your Query:","style":{"bold":true}},{"type":"text","text":" How to connect an iOS device? "},{"type":"text","text":"Answer:","style":{"bold":true}},{"type":"text","text":"\nConnecting an iOS device for testing primarily involves configuring the test environment to correctly identify and interact with the device. Here's how you can do it based on the provided information:\n\n"},{"type":"text","text":"1. Set up Run Configuration Arguments:","style":{"bold":true}},{"type":"text","text":"\n\nWhen setting up your test run configuration, you'll need to specify certain parameters to connect to an iOS device. These can include:\n\n*   "},{"type":"text","text":"-Ddriver=ios","style":{"code":true}},{"type":"text","text":": This specifies that the test should use an iOS driver. *   "},{"type":"text","text":"-DplatformName=iOS","style":{"code":true}},{"type":"text","text":": Confirms the platform is iOS. *   "},{"type":"text","text":"-DplatformVersion","style":{"code":true}},{"type":"text","text":": Specify the iOS version of your device (e.g., "},{"type":"text","text":"14.2","style":{"code":true}},{"type":"text","text":", "},{"type":"text","text":"15.2","style":{"code":true}},{"type":"text","text":"). *   "},{"type":"text","text":"-DdeviceName","style":{"code":true}},{"type":"text","text":": The name of your iPhone or iPad (e.g., "},{"type":"text","text":"\"iPhone 12\"","style":{"code":true}},{"type":"text","text":", "},{"type":"text","text":"\"iPhone 13\"","style":{"code":true}},{"type":"text","text":"). *   "},{"type":"text","text":"-Dudid=set this if running on Real Mobile Device only","style":{"code":true}},{"type":"text","text":": This is crucial for real devices. You'll need to find the Unique Device Identifier (UDID) of your iOS device and provide it here. The format would be something like "},{"type":"text","text":"00008101-001D493A26A0001E","style":{"code":true}},{"type":"text","text":". *   "},{"type":"text","text":"-Denvironment=local","style":{"code":true}},{"type":"text","text":" (for local testing) or "},{"type":"text","text":"-Denvironment=synergy","style":{"code":true}},{"type":"text","text":" (for Synergy Mobile Cloud). *   "},{"type":"text","text":"-Dapp=\"\/pathToPackage\/your-app.ipa\"","style":{"code":true}},{"type":"text","text":": The path to your iOS application file (IPA). *   "},{"type":"text","text":"-DbundleId","style":{"code":true}},{"type":"text","text":": Set this to override the default bundle ID of your app, if necessary (e.g., "},{"type":"link","url":"http:\/\/com.cbsvideodebug.app","text":"com.cbsvideodebug.app","style":{"code":true}},{"type":"text","text":"). "},{"type":"text","text":"Example Run Configuration Arguments for Local iOS Testing:","style":{"bold":true}},{"type":"text","text":"\n\n"}]},{"type":"rich_text_preformatted","elements":[{"type":"text","text":"-ea\n-Ddriver=ios\n-DplatformName=iOS\n-DplatformVersion=15.2\n-DdeviceName=\"iPhone 13\"\n-Denvironment=local\n-Dheadless=false\n-Dapp=\"\/pathToPackage\/PPlus_v8.0.56_b7040_Simulator.app\"\n-Dudid=set this if running on Real Mobile Device only\n-DbundleId=set to override default setting\n"}]},{"type":"rich_text_section","elements":[{"type":"text","text":"(Source: "},{"type":"link","url":"https:\/\/paramount.atlassian.net\/wiki\/spaces\/PLQA\/pages\/47711460"},{"type":"text","text":")\n\n"},{"type":"text","text":"2. Desired Capabilities in Code:","style":{"bold":true}},{"type":"text","text":"\n\nIf you are programmatically setting up the connection (e.g., in Java code), you would use "},{"type":"text","text":"DesiredCapabilities","style":{"code":true}},{"type":"text","text":". An example shows how "},{"type":"text","text":"iosDevice","style":{"code":true}},{"type":"text","text":" capabilities are created, setting properties from "},{"type":"text","text":"ios.properties","style":{"code":true}},{"type":"text","text":" and fetching the app file name:\n\n"}]},{"type":"rich_text_preformatted","elements":[{"type":"text","text":"java\npublic DesiredCapabilities iosDevice(String environment) {\n    DesiredCapabilities caps = new DesiredCapabilities();\n    config.setProperty(\"ios.properties\");\n    File app = new File(fetchAppFileName());\n    String getDeviceName = System.getProperty(\"deviceName\", config.getConfig().getProperty(\"ios1.name\"));\n    \/\/ ... further configurations\n}\n"}]},{"type":"rich_text_section","elements":[{"type":"text","text":"(Source: "},{"type":"link","url":"https:\/\/paramount.atlassian.net\/wiki\/spaces\/PLQA\/pages\/47712177"},{"type":"text","text":")\n\n"},{"type":"text","text":"3. Installing the App:","style":{"bold":true}},{"type":"text","text":"\n\nYou might also need to install the app on the device. An example command for installing an IPA via a "},{"type":"text","text":"curl","style":{"code":true}},{"type":"text","text":" POST request is provided, including a device ID:\n\n"}]},{"type":"rich_text_preformatted","elements":[{"type":"text","text":"curl -X POST "},{"type":"link","url":"https:\/\/d41e8d5432f641ae94508dcce01ed1e9@api-dev.headspin.io\/v0\/idevice\/00008101-001D493A26A0001E\/installer\/install"},{"type":"text","text":" --data-binary \"@PPlusDebug_v8.0.54_b6993_AdHoc.ipa\"\n"}]},{"type":"rich_text_section","elements":[{"type":"text","text":"(Source: "},{"type":"link","url":"https:\/\/paramount.atlassian.net\/wiki\/spaces\/PLQA\/pages\/47712177"},{"type":"text","text":")\n\n"},{"type":"text","text":"Summary of Key Parameters for iOS Connection:","style":{"bold":true}},{"type":"text","text":"\n\n*   "},{"type":"text","text":"driver=ios","style":{"bold":true,"code":true}},{"type":"text","text":": Specifies iOS.\n\n"},{"type":"text","text":"(message continued in thread...)","style":{"italic":true}}]}]}],"channel":"D09A0LFHK8R","event_ts":"1755801671.650019","channel_type":"im"},"type":"event_callback","event_id":"Ev09BL5KPQF6","event_time":1755801671,"authorizations":[{"enterprise_id":"ERV4P7NAD","team_id":"T010QS7UQNA","user_id":"U099R6WTZ9S","is_bot":true,"is_enterprise_install":false}],"is_ext_shared_channel":false,"event_context":"4-eyJldCI6Im1lc3NhZ2UiLCJ0aWQiOiJUMDEwUVM3VVFOQSIsImFpZCI6IkEwOTlMQUNBQjJSIiwiY2lkIjoiRDA5QTBMRkhLOFIifQ"},"type":"events_api","accepts_response_payload":false,"retry_attempt":0,"retry_reason":""})
2025-08-21 11:41:13,608 - slack_bolt.App - DEBUG - [client.py:99] - A new message enqueued (current queue size: 1)
2025-08-21 11:41:13,608 - slack_bolt.App - DEBUG - [client.py:105] - A message dequeued (current queue size: 0)
2025-08-21 11:41:13,609 - slack_bolt.App - DEBUG - [client.py:125] - Message processing started (type: events_api, envelope_id: b9f86f6e-a80b-484b-8501-265ced641277)
2025-08-21 11:41:13,609 - slack_bolt.App - DEBUG - [app.py:476] - Applying slack_bolt.middleware.ssl_check.ssl_check.SslCheck
2025-08-21 11:41:13,609 - slack_bolt.App - DEBUG - [app.py:476] - Applying slack_bolt.middleware.request_verification.request_verification.RequestVerification
2025-08-21 11:41:13,609 - slack_bolt.App - DEBUG - [app.py:476] - Applying slack_bolt.middleware.authorization.single_team_authorization.SingleTeamAuthorization
2025-08-21 11:41:13,609 - slack_bolt.App - DEBUG - [app.py:476] - Applying slack_bolt.middleware.ignoring_self_events.ignoring_self_events.IgnoringSelfEvents
2025-08-21 11:41:13,609 - slack_bolt.IgnoringSelfEvents - DEBUG - [ignoring_self_events.py:60] - Skipped self event: {'user': 'U099R6WTZ9S', 'type': 'message', 'ts': '1755801671.650019', 'bot_id': 'B099R6WTRU4', 'app_id': 'A099LACAB2R', 'text': '*Your Query:* How to connect an iOS device? *Answer:*\nConnecting an iOS device for testing primarily involves configuring the test environment to correctly identify and interact with the device. Here\'s how you can do it based on the provided information:\n\n*1. Set up Run Configuration Arguments:*\n\nWhen setting up your test run configuration, you\'ll need to specify certain parameters to connect to an iOS device. These can include:\n\n*   `-Ddriver=ios`: This specifies that the test should use an iOS driver. *   `-DplatformName=iOS`: Confirms the platform is iOS. *   `-DplatformVersion`: Specify the iOS version of your device (e.g., `14.2`, `15.2`). *   `-DdeviceName`: The name of your iPhone or iPad (e.g., `"iPhone 12"`, `"iPhone 13"`). *   `-Dudid=set this if running on Real Mobile Device only`: This is crucial for real devices. You\'ll need to find the Unique Device Identifier (UDID) of your iOS device and provide it here. The format would be something like `00008101-001D493A26A0001E`. *   `-Denvironment=local` (for local testing) or `-Denvironment=synergy` (for Synergy Mobile Cloud). *   `-Dapp="/pathToPackage/your-app.ipa"`: The path to your iOS application file (IPA). *   `-DbundleId`: Set this to override the default bundle ID of your app, if necessary (e.g., `<http://com.cbsvideodebug.app|com.cbsvideodebug.app>`). *Example Run Configuration Arguments for Local iOS Testing:*\n\n```\n-ea\n-Ddriver=ios\n-DplatformName=iOS\n-DplatformVersion=15.2\n-DdeviceName="iPhone 13"\n-Denvironment=local\n-Dheadless=false\n-Dapp="/pathToPackage/PPlus_v8.0.56_b7040_Simulator.app"\n-Dudid=set this if running on Real Mobile Device only\n-DbundleId=set to override default setting\n```\n(Source: <https://paramount.atlassian.net/wiki/spaces/PLQA/pages/47711460>)\n\n*2. Desired Capabilities in Code:*\n\nIf you are programmatically setting up the connection (e.g., in Java code), you would use `DesiredCapabilities`. An example shows how `iosDevice` capabilities are created, setting properties from `ios.properties` and fetching the app file name:\n\n```java\npublic DesiredCapabilities iosDevice(String environment) {\n    DesiredCapabilities caps = new DesiredCapabilities();\n    config.setProperty("ios.properties");\n    File app = new File(fetchAppFileName());\n    String getDeviceName = System.getProperty("deviceName", config.getConfig().getProperty("ios1.name"));\n    // ... further configurations\n}\n```\n(Source: <https://paramount.atlassian.net/wiki/spaces/PLQA/pages/47712177>)\n\n*3. Installing the App:*\n\nYou might also need to install the app on the device. An example command for installing an IPA via a `curl` POST request is provided, including a device ID:\n\n```\ncurl -X POST <https://d41e8d5432f641ae94508dcce01ed1e9@api-dev.headspin.io/v0/idevice/00008101-001D493A26A0001E/installer/install> --data-binary "@PPlusDebug_v8.0.54_b6993_AdHoc.ipa"\n```\n(Source: <https://paramount.atlassian.net/wiki/spaces/PLQA/pages/47712177>)\n\n*Summary of Key Parameters for iOS Connection:*\n\n*   *`driver=ios`*: Specifies iOS.\n\n_(message continued in thread...)_', 'team': 'T010QS7UQNA', 'bot_profile': {'id': 'B099R6WTRU4', 'deleted': False, 'name': 'AutoBot', 'updated': 1754677948, 'app_id': 'A099LACAB2R', 'user_id': 'U099R6WTZ9S', 'icons': {'image_36': 'https://a.slack-edge.com/80588/img/plugins/app/bot_36.png', 'image_48': 'https://a.slack-edge.com/80588/img/plugins/app/bot_48.png', 'image_72': 'https://a.slack-edge.com/80588/img/plugins/app/service_72.png'}, 'team_id': 'T010QS7UQNA'}, 'thread_ts': '1755801292.462349', 'parent_user_id': 'U01RMTFMALF', 'blocks': [{'type': 'rich_text', 'block_id': 'lv94', 'elements': [{'type': 'rich_text_section', 'elements': [{'type': 'text', 'text': 'Your Query:', 'style': {'bold': True}}, {'type': 'text', 'text': ' How to connect an iOS device? '}, {'type': 'text', 'text': 'Answer:', 'style': {'bold': True}}, {'type': 'text', 'text': "\nConnecting an iOS device for testing primarily involves configuring the test environment to correctly identify and interact with the device. Here's how you can do it based on the provided information:\n\n"}, {'type': 'text', 'text': '1. Set up Run Configuration Arguments:', 'style': {'bold': True}}, {'type': 'text', 'text': "\n\nWhen setting up your test run configuration, you'll need to specify certain parameters to connect to an iOS device. These can include:\n\n*   "}, {'type': 'text', 'text': '-Ddriver=ios', 'style': {'code': True}}, {'type': 'text', 'text': ': This specifies that the test should use an iOS driver. *   '}, {'type': 'text', 'text': '-DplatformName=iOS', 'style': {'code': True}}, {'type': 'text', 'text': ': Confirms the platform is iOS. *   '}, {'type': 'text', 'text': '-DplatformVersion', 'style': {'code': True}}, {'type': 'text', 'text': ': Specify the iOS version of your device (e.g., '}, {'type': 'text', 'text': '14.2', 'style': {'code': True}}, {'type': 'text', 'text': ', '}, {'type': 'text', 'text': '15.2', 'style': {'code': True}}, {'type': 'text', 'text': '). *   '}, {'type': 'text', 'text': '-DdeviceName', 'style': {'code': True}}, {'type': 'text', 'text': ': The name of your iPhone or iPad (e.g., '}, {'type': 'text', 'text': '"iPhone 12"', 'style': {'code': True}}, {'type': 'text', 'text': ', '}, {'type': 'text', 'text': '"iPhone 13"', 'style': {'code': True}}, {'type': 'text', 'text': '). *   '}, {'type': 'text', 'text': '-Dudid=set this if running on Real Mobile Device only', 'style': {'code': True}}, {'type': 'text', 'text': ": This is crucial for real devices. You'll need to find the Unique Device Identifier (UDID) of your iOS device and provide it here. The format would be something like "}, {'type': 'text', 'text': '00008101-001D493A26A0001E', 'style': {'code': True}}, {'type': 'text', 'text': '. *   '}, {'type': 'text', 'text': '-Denvironment=local', 'style': {'code': True}}, {'type': 'text', 'text': ' (for local testing) or '}, {'type': 'text', 'text': '-Denvironment=synergy', 'style': {'code': True}}, {'type': 'text', 'text': ' (for Synergy Mobile Cloud). *   '}, {'type': 'text', 'text': '-Dapp="/pathToPackage/your-app.ipa"', 'style': {'code': True}}, {'type': 'text', 'text': ': The path to your iOS application file (IPA). *   '}, {'type': 'text', 'text': '-DbundleId', 'style': {'code': True}}, {'type': 'text', 'text': ': Set this to override the default bundle ID of your app, if necessary (e.g., '}, {'type': 'link', 'url': 'http://com.cbsvideodebug.app', 'text': 'com.cbsvideodebug.app', 'style': {'code': True}}, {'type': 'text', 'text': '). '}, {'type': 'text', 'text': 'Example Run Configuration Arguments for Local iOS Testing:', 'style': {'bold': True}}, {'type': 'text', 'text': '\n\n'}]}, {'type': 'rich_text_preformatted', 'elements': [{'type': 'text', 'text': '-ea\n-Ddriver=ios\n-DplatformName=iOS\n-DplatformVersion=15.2\n-DdeviceName="iPhone 13"\n-Denvironment=local\n-Dheadless=false\n-Dapp="/pathToPackage/PPlus_v8.0.56_b7040_Simulator.app"\n-Dudid=set this if running on Real Mobile Device only\n-DbundleId=set to override default setting\n'}]}, {'type': 'rich_text_section', 'elements': [{'type': 'text', 'text': '(Source: '}, {'type': 'link', 'url': 'https://paramount.atlassian.net/wiki/spaces/PLQA/pages/47711460'}, {'type': 'text', 'text': ')\n\n'}, {'type': 'text', 'text': '2. Desired Capabilities in Code:', 'style': {'bold': True}}, {'type': 'text', 'text': '\n\nIf you are programmatically setting up the connection (e.g., in Java code), you would use '}, {'type': 'text', 'text': 'DesiredCapabilities', 'style': {'code': True}}, {'type': 'text', 'text': '. An example shows how '}, {'type': 'text', 'text': 'iosDevice', 'style': {'code': True}}, {'type': 'text', 'text': ' capabilities are created, setting properties from '}, {'type': 'text', 'text': 'ios.properties', 'style': {'code': True}}, {'type': 'text', 'text': ' and fetching the app file name:\n\n'}]}, {'type': 'rich_text_preformatted', 'elements': [{'type': 'text', 'text': 'java\npublic DesiredCapabilities iosDevice(String environment) {\n    DesiredCapabilities caps = new DesiredCapabilities();\n    config.setProperty("ios.properties");\n    File app = new File(fetchAppFileName());\n    String getDeviceName = System.getProperty("deviceName", config.getConfig().getProperty("ios1.name"));\n    // ... further configurations\n}\n'}]}, {'type': 'rich_text_section', 'elements': [{'type': 'text', 'text': '(Source: '}, {'type': 'link', 'url': 'https://paramount.atlassian.net/wiki/spaces/PLQA/pages/47712177'}, {'type': 'text', 'text': ')\n\n'}, {'type': 'text', 'text': '3. Installing the App:', 'style': {'bold': True}}, {'type': 'text', 'text': '\n\nYou might also need to install the app on the device. An example command for installing an IPA via a '}, {'type': 'text', 'text': 'curl', 'style': {'code': True}}, {'type': 'text', 'text': ' POST request is provided, including a device ID:\n\n'}]}, {'type': 'rich_text_preformatted', 'elements': [{'type': 'text', 'text': 'curl -X POST '}, {'type': 'link', 'url': 'https://d41e8d5432f641ae94508dcce01ed1e9@api-dev.headspin.io/v0/idevice/00008101-001D493A26A0001E/installer/install'}, {'type': 'text', 'text': ' --data-binary "@PPlusDebug_v8.0.54_b6993_AdHoc.ipa"\n'}]}, {'type': 'rich_text_section', 'elements': [{'type': 'text', 'text': '(Source: '}, {'type': 'link', 'url': 'https://paramount.atlassian.net/wiki/spaces/PLQA/pages/47712177'}, {'type': 'text', 'text': ')\n\n'}, {'type': 'text', 'text': 'Summary of Key Parameters for iOS Connection:', 'style': {'bold': True}}, {'type': 'text', 'text': '\n\n*   '}, {'type': 'text', 'text': 'driver=ios', 'style': {'bold': True, 'code': True}}, {'type': 'text', 'text': ': Specifies iOS.\n\n'}, {'type': 'text', 'text': '(message continued in thread...)', 'style': {'italic': True}}]}]}], 'channel': 'D09A0LFHK8R', 'event_ts': '1755801671.650019', 'channel_type': 'im'}
2025-08-21 11:41:13,610 - slack_bolt.App - DEBUG - [client.py:200] - Sending a message (session id: 9adf3bcc-e9d3-4f5c-b2bc-938d72bdb603, message: {"envelope_id": "b9f86f6e-a80b-484b-8501-265ced641277"})
2025-08-21 11:41:13,610 - slack_bolt.App - DEBUG - [internals.py:41] - Response time: 1 milliseconds
2025-08-21 11:41:13,610 - slack_bolt.App - DEBUG - [client.py:150] - Message processing completed (type: events_api, envelope_id: b9f86f6e-a80b-484b-8501-265ced641277)
2025-08-21 11:41:19,634 - slack_bolt.App - DEBUG - [client.py:235] - on_message invoked: (message: {"envelope_id":"2bbedbe4-52fb-44b8-9acf-20edfd103d1e","payload":{"token":"yq71khZBCyJF1Ri2hG5aNqr5","team_id":"T010QS7UQNA","enterprise_id":"ERV4P7NAD","context_team_id":null,"context_enterprise_id":"ERV4P7NAD","api_app_id":"A099LACAB2R","event":{"user":"U099R6WTZ9S","type":"message","ts":"1755801309.380829","bot_id":"B099R6WTRU4","app_id":"A099LACAB2R","text":"I'm sorry, but you don't have access to this information. Please contact your administrator if you believe this is an error.","team":"T010QS7UQNA","bot_profile":{"id":"B099R6WTRU4","deleted":false,"name":"AutoBot","updated":1754677948,"app_id":"A099LACAB2R","user_id":"U099R6WTZ9S","icons":{"image_36":"https:\/\/a.slack-edge.com\/80588\/img\/plugins\/app\/bot_36.png","image_48":"https:\/\/a.slack-edge.com\/80588\/img\/plugins\/app\/bot_48.png","image_72":"https:\/\/a.slack-edge.com\/80588\/img\/plugins\/app\/service_72.png"},"team_id":"T010QS7UQNA"},"blocks":[{"type":"rich_text","block_id":"sgW7","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"I'm sorry, but you don't have access to this information. Please contact your administrator if you believe this is an error."}]}]}],"channel":"D09A0LFHK8R","event_ts":"1755801309.380829","channel_type":"im"},"type":"event_callback","event_id":"Ev09BVHS3H9P","event_time":1755801309,"authorizations":[{"enterprise_id":"ERV4P7NAD","team_id":"T010QS7UQNA","user_id":"U099R6WTZ9S","is_bot":true,"is_enterprise_install":false}],"is_ext_shared_channel":false,"event_context":"4-eyJldCI6Im1lc3NhZ2UiLCJ0aWQiOiJUMDEwUVM3VVFOQSIsImFpZCI6IkEwOTlMQUNBQjJSIiwiY2lkIjoiRDA5QTBMRkhLOFIifQ"},"type":"events_api","accepts_response_payload":false,"retry_attempt":3,"retry_reason":"timeout"})
2025-08-21 11:41:19,635 - slack_bolt.App - DEBUG - [client.py:99] - A new message enqueued (current queue size: 1)
2025-08-21 11:41:19,635 - slack_bolt.App - DEBUG - [client.py:105] - A message dequeued (current queue size: 0)
2025-08-21 11:41:19,636 - slack_bolt.App - DEBUG - [client.py:125] - Message processing started (type: events_api, envelope_id: 2bbedbe4-52fb-44b8-9acf-20edfd103d1e)
2025-08-21 11:41:19,636 - slack_bolt.App - DEBUG - [app.py:476] - Applying slack_bolt.middleware.ssl_check.ssl_check.SslCheck
2025-08-21 11:41:19,636 - slack_bolt.App - DEBUG - [app.py:476] - Applying slack_bolt.middleware.request_verification.request_verification.RequestVerification
2025-08-21 11:41:19,636 - slack_bolt.App - DEBUG - [app.py:476] - Applying slack_bolt.middleware.authorization.single_team_authorization.SingleTeamAuthorization
2025-08-21 11:41:19,637 - slack_bolt.App - DEBUG - [app.py:476] - Applying slack_bolt.middleware.ignoring_self_events.ignoring_self_events.IgnoringSelfEvents
2025-08-21 11:41:19,637 - slack_bolt.IgnoringSelfEvents - DEBUG - [ignoring_self_events.py:60] - Skipped self event: {'user': 'U099R6WTZ9S', 'type': 'message', 'ts': '1755801309.380829', 'bot_id': 'B099R6WTRU4', 'app_id': 'A099LACAB2R', 'text': "I'm sorry, but you don't have access to this information. Please contact your administrator if you believe this is an error.", 'team': 'T010QS7UQNA', 'bot_profile': {'id': 'B099R6WTRU4', 'deleted': False, 'name': 'AutoBot', 'updated': 1754677948, 'app_id': 'A099LACAB2R', 'user_id': 'U099R6WTZ9S', 'icons': {'image_36': 'https://a.slack-edge.com/80588/img/plugins/app/bot_36.png', 'image_48': 'https://a.slack-edge.com/80588/img/plugins/app/bot_48.png', 'image_72': 'https://a.slack-edge.com/80588/img/plugins/app/service_72.png'}, 'team_id': 'T010QS7UQNA'}, 'blocks': [{'type': 'rich_text', 'block_id': 'sgW7', 'elements': [{'type': 'rich_text_section', 'elements': [{'type': 'text', 'text': "I'm sorry, but you don't have access to this information. Please contact your administrator if you believe this is an error."}]}]}], 'channel': 'D09A0LFHK8R', 'event_ts': '1755801309.380829', 'channel_type': 'im'}
2025-08-21 11:41:19,637 - slack_bolt.App - DEBUG - [client.py:200] - Sending a message (session id: 9adf3bcc-e9d3-4f5c-b2bc-938d72bdb603, message: {"envelope_id": "2bbedbe4-52fb-44b8-9acf-20edfd103d1e"})
2025-08-21 11:41:19,637 - slack_bolt.App - DEBUG - [internals.py:41] - Response time: 1 milliseconds
2025-08-21 11:41:19,637 - slack_bolt.App - DEBUG - [client.py:150] - Message processing completed (type: events_api, envelope_id: 2bbedbe4-52fb-44b8-9acf-20edfd103d1e)
2025-08-21 11:43:29,498 - __main__ - INFO - [main.py:43] - Loading application configuration...
2025-08-21 11:43:29,498 - __main__ - INFO - [main.py:45] - Configuration loaded successfully
2025-08-21 11:43:29,498 - __main__ - INFO - [main.py:48] - Initializing security components...
2025-08-21 11:43:29,498 - __main__ - DEBUG - [main.py:50] - Slack validator initialized
2025-08-21 11:43:29,498 - security.content_filter - INFO - [content_filter.py:39] - Content filter initialized with 11 patterns
2025-08-21 11:43:29,498 - __main__ - DEBUG - [main.py:53] - Content filter initialized
2025-08-21 11:43:29,498 - auth.admin_manager - INFO - [admin_manager.py:27] - Admin manager initialized with 2 admin users
2025-08-21 11:43:29,498 - __main__ - DEBUG - [main.py:56] - Admin manager initialized
2025-08-21 11:43:29,498 - auth.email_whitelist - INFO - [email_whitelist.py:28] - Email whitelist initialized with 1 whitelisted emails
2025-08-21 11:43:29,498 - auth.email_whitelist - INFO - [email_whitelist.py:37] - Whitelisted domains: paramount.com
2025-08-21 11:43:29,498 - __main__ - DEBUG - [main.py:59] - Email whitelist initialized with 1 emails
2025-08-21 11:43:29,498 - auth.slack_user_info - DEBUG - [slack_user_info.py:25] - Slack user info manager initialized
2025-08-21 11:43:29,498 - __main__ - DEBUG - [main.py:62] - Slack user info manager initialized
2025-08-21 11:43:29,498 - __main__ - INFO - [main.py:63] - Security components initialized successfully
2025-08-21 11:43:29,498 - __main__ - INFO - [main.py:66] - Initializing Slack app...
2025-08-21 11:43:29,534 - slack_bolt.App - DEBUG - [base_client.py:255] - Sending a request - url: https://slack.com/api/auth.test, query_params: {}, body_params: {}, files: {}, json_body: None, headers: {'Content-Type': 'application/x-www-form-urlencoded', 'Authorization': '(redacted)', 'User-Agent': 'Bolt/1.16.0 Python/3.12.0 slackclient/3.34.0 Darwin/23.4.0'}
2025-08-21 11:43:29,868 - slack_bolt.App - DEBUG - [base_client.py:546] - Received the following response - status: 200, headers: {'date': 'Thu, 21 Aug 2025 18:43:29 GMT', 'server': 'Apache', 'vary': 'Accept-Encoding', 'x-slack-req-id': 'b56fa8bb0bfc8da45a9ca855a6ac8e19', 'x-content-type-options': 'nosniff', 'x-xss-protection': '0', 'pragma': 'no-cache', 'cache-control': 'private, no-cache, no-store, must-revalidate', 'expires': 'Sat, 26 Jul 1997 05:00:00 GMT', 'content-type': 'application/json; charset=utf-8', 'x-oauth-scopes': 'app_mentions:read,channels:history,chat:write,im:history,im:read,im:write,users:read,reactions:write,users:read.email', 'access-control-expose-headers': 'x-slack-req-id, retry-after', 'access-control-allow-headers': 'slack-route, x-slack-version-ts, x-b3-traceid, x-b3-spanid, x-b3-parentspanid, x-b3-sampled, x-b3-flags', 'strict-transport-security': 'max-age=31536000; includeSubDomains; preload', 'referrer-policy': 'no-referrer', 'x-slack-unique-id': 'aKdo0R9WoDYvzMdUwWpnfQAAABM', 'x-slack-backend': 'r', 'access-control-allow-origin': '*', 'content-length': '228', 'via': '1.1 slack-prod.tinyspeck.com, envoy-www-iad-mzgmlhvs,envoy-edge-pdx-nikrgwzt', 'x-envoy-attempt-count': '1', 'x-envoy-upstream-service-time': '85', 'x-backend': 'main_normal main_canary_with_overflow main_control_with_overflow', 'x-server': 'slack-www-hhvm-main-iad-joju', 'x-slack-shared-secret-outcome': 'no-match', 'x-edge-backend': 'envoy-www', 'timing-allow-origin': '*', 'x-slack-edge-shared-secret-outcome': 'no-match', 'connection': 'close'}, body: {"ok":true,"url":"https://viacomcbs-grid-test.slack.com/","team":"Test Workspace","user":"autobot","team_id":"T010QS7UQNA","user_id":"U099R6WTZ9S","bot_id":"B099R6WTRU4","enterprise_id":"ERV4P7NAD","is_enterprise_install":false}
2025-08-21 11:43:29,868 - __main__ - INFO - [main.py:68] - Slack app initialized successfully
2025-08-21 11:43:29,868 - __main__ - DEBUG - [main.py:72] - Message deduplication cache initialized
2025-08-21 11:43:29,868 - __main__ - DEBUG - [main.py:77] - Thread tracking initialized
2025-08-21 11:43:29,868 - __main__ - INFO - [main.py:80] - Initializing DIG AI integration...
2025-08-21 11:43:29,868 - dig_connector - INFO - [dig_connector.py:284] - Initializing DIG AI with model ID: 42
2025-08-21 11:43:29,868 - dig_connector - INFO - [dig_connector.py:49] - Starting DIG chat session initialization...
2025-08-21 11:43:29,868 - dig_connector - DEBUG - [dig_connector.py:52] - Creating chat with name: Slack Bot Session 2025-08-21T18:43:29.868634+00:00
2025-08-21 11:43:29,868 - dig_connector - DEBUG - [dig_connector.py:63] - Creating chat - URL: https://ai.digdev.cbsicloud.com/fastapi/chats, Payload: {'chat_nm': 'Slack Bot Session 2025-08-21T18:43:29.868634+00:00', 'model_id': 42}
2025-08-21 11:43:29,871 - urllib3.connectionpool - DEBUG - [connectionpool.py:1055] - Starting new HTTPS connection (1): ai.digdev.cbsicloud.com:443
2025-08-21 11:43:30,118 - urllib3.connectionpool - DEBUG - [connectionpool.py:549] - https://ai.digdev.cbsicloud.com:443 "POST /fastapi/chats HTTP/1.1" 200 217
2025-08-21 11:43:30,119 - dig_connector - DEBUG - [dig_connector.py:66] - Create chat response: status=200
2025-08-21 11:43:30,119 - dig_connector - INFO - [dig_connector.py:54] - Successfully initialized DIG chat session with ID: 860
2025-08-21 11:43:30,119 - __main__ - INFO - [main.py:83] - DIG AI integration successfully initialized
2025-08-21 11:43:30,119 - __main__ - INFO - [main.py:87] - Setting up event handlers...
2025-08-21 11:43:30,120 - __main__ - INFO - [main.py:662] - Starting AI Assistant Bot...
2025-08-21 11:43:30,120 - __main__ - INFO - [main.py:663] - Registering event handlers...
2025-08-21 11:43:30,120 - __main__ - DEBUG - [main.py:664] - Event handlers registered: app_mention, message, app_home_opened
2025-08-21 11:43:30,120 - __main__ - INFO - [main.py:667] - Connecting to Slack via Socket Mode...
2025-08-21 11:43:30,120 - __main__ - INFO - [main.py:671] - Socket Mode handler created successfully
2025-08-21 11:43:30,121 - __main__ - INFO - [main.py:673] - ✅ Bot is now running and listening for events!
2025-08-21 11:43:30,121 - slack_bolt.App - DEBUG - [base_client.py:255] - Sending a request - url: https://slack.com/api/apps.connections.open, query_params: {}, body_params: {}, files: {}, json_body: None, headers: {'Content-Type': 'application/x-www-form-urlencoded', 'Authorization': '(redacted)', 'User-Agent': 'Bolt/1.16.0 Python/3.12.0 slackclient/3.34.0 Darwin/23.4.0'}
2025-08-21 11:43:30,440 - slack_bolt.App - DEBUG - [base_client.py:546] - Received the following response - status: 200, headers: {'date': 'Thu, 21 Aug 2025 18:43:30 GMT', 'server': 'Apache', 'vary': 'Accept-Encoding', 'x-slack-req-id': '74a2cf99f971bb708d8740d6608f523b', 'x-content-type-options': 'nosniff', 'x-xss-protection': '0', 'x-robots-tag': 'noindex,nofollow', 'pragma': 'no-cache', 'cache-control': 'private, no-cache, no-store, must-revalidate', 'expires': 'Sat, 26 Jul 1997 05:00:00 GMT', 'content-type': 'application/json; charset=utf-8', 'x-accepted-oauth-scopes': 'connections:write', 'x-oauth-scopes': 'connections:write', 'access-control-expose-headers': 'x-slack-req-id, retry-after', 'access-control-allow-headers': 'slack-route, x-slack-version-ts, x-b3-traceid, x-b3-spanid, x-b3-parentspanid, x-b3-sampled, x-b3-flags', 'strict-transport-security': 'max-age=31536000; includeSubDomains; preload', 'referrer-policy': 'no-referrer', 'x-slack-unique-id': 'aKdo0l4pL3yiWz3sYV3K_gAAAA4', 'x-slack-backend': 'r', 'access-control-allow-origin': '*', 'content-length': '173', 'via': '1.1 slack-prod.tinyspeck.com, envoy-www-iad-xlcpngni,envoy-edge-pdx-novbjgyp', 'x-envoy-attempt-count': '1', 'x-envoy-upstream-service-time': '80', 'x-backend': 'main_normal main_canary_with_overflow main_control_with_overflow', 'x-server': 'slack-www-hhvm-main-iad-qwan', 'x-slack-shared-secret-outcome': 'no-match', 'x-edge-backend': 'envoy-www', 'timing-allow-origin': '*', 'x-slack-edge-shared-secret-outcome': 'no-match', 'connection': 'close'}, body: {"ok":true,"url":"wss:\/\/wss-primary.slack.com\/link\/?ticket=34578022-368d-4169-813a-21373aa836c7&app_id=a6c8d361ee1c6f398c5b4afec831555b78d7affa753b16bcc0fc64d7c13f3766"}
2025-08-21 11:43:33,681 - slack_bolt.App - ERROR - [connection.py:179] - Failed to establish a connection (session id: d8352e9a-b0da-42c9-a078-1559528fceba, error: The read operation timed out)
2025-08-21 11:43:33,682 - slack_bolt.App - ERROR - [client.py:247] - on_error invoked (session id: None, error: TimeoutError, message: The read operation timed out)
2025-08-21 11:43:33,682 - slack_bolt.App - INFO - [connection.py:195] - The connection has been closed (session id: d8352e9a-b0da-42c9-a078-1559528fceba)
2025-08-21 11:43:33,686 - slack_bolt.App - DEBUG - [connection.py:281] - This connection is already closed. (session id: d8352e9a-b0da-42c9-a078-1559528fceba)
2025-08-21 11:43:33,686 - slack_bolt.App - INFO - [client.py:192] - A new session has been established (session id: d8352e9a-b0da-42c9-a078-1559528fceba)
2025-08-21 11:43:33,686 - slack_bolt.App - INFO - [client.py:282] - The session seems to be already closed. Reconnecting... (session id: d8352e9a-b0da-42c9-a078-1559528fceba)
2025-08-21 11:43:33,686 - slack_bolt.App - INFO - [base_handler.py:50] - ⚡️ Bolt app is running!
2025-08-21 11:43:33,687 - slack_bolt.App - INFO - [client.py:76] - Connecting to a new endpoint...
2025-08-21 11:43:33,687 - slack_bolt.App - DEBUG - [base_client.py:255] - Sending a request - url: https://slack.com/api/apps.connections.open, query_params: {}, body_params: {}, files: {}, json_body: None, headers: {'Content-Type': 'application/x-www-form-urlencoded', 'Authorization': '(redacted)', 'User-Agent': 'Bolt/1.16.0 Python/3.12.0 slackclient/3.34.0 Darwin/23.4.0'}
2025-08-21 11:43:33,963 - slack_bolt.App - DEBUG - [base_client.py:546] - Received the following response - status: 200, headers: {'date': 'Thu, 21 Aug 2025 18:43:34 GMT', 'server': 'Apache', 'vary': 'Accept-Encoding', 'x-slack-req-id': '88e9c86ec4b72a4dd2f96d250aa7cb78', 'x-content-type-options': 'nosniff', 'x-xss-protection': '0', 'x-robots-tag': 'noindex,nofollow', 'pragma': 'no-cache', 'cache-control': 'private, no-cache, no-store, must-revalidate', 'expires': 'Sat, 26 Jul 1997 05:00:00 GMT', 'content-type': 'application/json; charset=utf-8', 'x-accepted-oauth-scopes': 'connections:write', 'x-oauth-scopes': 'connections:write', 'access-control-expose-headers': 'x-slack-req-id, retry-after', 'access-control-allow-headers': 'slack-route, x-slack-version-ts, x-b3-traceid, x-b3-spanid, x-b3-parentspanid, x-b3-sampled, x-b3-flags', 'strict-transport-security': 'max-age=31536000; includeSubDomains; preload', 'referrer-policy': 'no-referrer', 'x-slack-unique-id': 'aKdo1ox4Nz_3wngXP6YMbAAAECo', 'x-slack-backend': 'r', 'access-control-allow-origin': '*', 'content-length': '173', 'via': '1.1 slack-prod.tinyspeck.com, envoy-www-iad-vptzldty,envoy-edge-pdx-wwqjlwje', 'x-envoy-attempt-count': '1', 'x-envoy-upstream-service-time': '78', 'x-backend': 'main_normal main_canary_with_overflow main_control_with_overflow', 'x-server': 'slack-www-hhvm-main-iad-ybet', 'x-slack-shared-secret-outcome': 'no-match', 'x-edge-backend': 'envoy-www', 'timing-allow-origin': '*', 'x-slack-edge-shared-secret-outcome': 'no-match', 'connection': 'close'}, body: {"ok":true,"url":"wss:\/\/wss-primary.slack.com\/link\/?ticket=b659f8c1-85ee-4bd1-82bf-e2789a39714a&app_id=a6c8d361ee1c6f398c5b4afec831555b78d7affa753b16bcc0fc64d7c13f3766"}
2025-08-21 11:43:34,467 - slack_bolt.App - INFO - [connection.py:195] - The connection has been closed (session id: d8352e9a-b0da-42c9-a078-1559528fceba)
2025-08-21 11:43:34,468 - slack_bolt.App - INFO - [client.py:192] - A new session has been established (session id: 69149a69-a7e3-483f-8c0d-bc9bf7179cfa)
2025-08-21 11:43:34,468 - slack_bolt.App - INFO - [client.py:79] - Connected to a new endpoint...
2025-08-21 11:43:34,492 - slack_bolt.App - INFO - [client.py:265] - Starting to receive messages from a new connection (session id: 69149a69-a7e3-483f-8c0d-bc9bf7179cfa)
2025-08-21 11:43:34,493 - slack_bolt.App - DEBUG - [client.py:235] - on_message invoked: (message: {"type":"hello","num_connections":2,"debug_info":{"host":"applink-10","build_number":0,"approximate_connection_time":18060},"connection_info":{"app_id":"A099LACAB2R"}})
2025-08-21 11:43:34,493 - slack_bolt.App - DEBUG - [client.py:99] - A new message enqueued (current queue size: 1)
2025-08-21 11:43:34,494 - slack_bolt.App - DEBUG - [client.py:105] - A message dequeued (current queue size: 0)
2025-08-21 11:43:34,494 - slack_bolt.App - DEBUG - [client.py:125] - Message processing started (type: hello, envelope_id: None)
2025-08-21 11:43:34,494 - slack_bolt.App - DEBUG - [client.py:150] - Message processing completed (type: hello, envelope_id: None)
2025-08-21 11:43:37,737 - slack_bolt.App - DEBUG - [client.py:235] - on_message invoked: (message: {"envelope_id":"ba870d39-0c07-4698-9932-ada8c3af8511","payload":{"token":"yq71khZBCyJF1Ri2hG5aNqr5","team_id":"T010QS7UQNA","enterprise_id":"ERV4P7NAD","context_team_id":null,"context_enterprise_id":"ERV4P7NAD","api_app_id":"A099LACAB2R","event":{"user":"U01RMTFMALF","type":"message","ts":"1755801813.351409","client_msg_id":"d0d2a98a-7205-4669-ba19-eeae1ec0c373","text":"How can i run an automated test on a local Android phone?","blocks":[{"type":"rich_text","block_id":"vQwBP","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"How can i run an automated test on a local Android phone?"}]}]}],"channel":"D09A0LFHK8R","event_ts":"1755801813.351409","channel_type":"im"},"type":"event_callback","event_id":"Ev09C9HX15NC","event_time":1755801813,"authorizations":[{"enterprise_id":"ERV4P7NAD","team_id":"T010QS7UQNA","user_id":"U099R6WTZ9S","is_bot":true,"is_enterprise_install":false}],"is_ext_shared_channel":false,"event_context":"4-eyJldCI6Im1lc3NhZ2UiLCJ0aWQiOiJUMDEwUVM3VVFOQSIsImFpZCI6IkEwOTlMQUNBQjJSIiwiY2lkIjoiRDA5QTBMRkhLOFIifQ"},"type":"events_api","accepts_response_payload":false,"retry_attempt":1,"retry_reason":"timeout"})
2025-08-21 11:43:37,737 - slack_bolt.App - DEBUG - [client.py:99] - A new message enqueued (current queue size: 1)
2025-08-21 11:43:37,737 - slack_bolt.App - DEBUG - [client.py:105] - A message dequeued (current queue size: 0)
2025-08-21 11:43:37,738 - slack_bolt.App - DEBUG - [client.py:125] - Message processing started (type: events_api, envelope_id: ba870d39-0c07-4698-9932-ada8c3af8511)
2025-08-21 11:43:37,738 - slack_bolt.App - DEBUG - [app.py:476] - Applying slack_bolt.middleware.ssl_check.ssl_check.SslCheck
2025-08-21 11:43:37,738 - slack_bolt.App - DEBUG - [app.py:476] - Applying slack_bolt.middleware.request_verification.request_verification.RequestVerification
2025-08-21 11:43:37,738 - slack_bolt.App - DEBUG - [app.py:476] - Applying slack_bolt.middleware.authorization.single_team_authorization.SingleTeamAuthorization
2025-08-21 11:43:37,738 - slack_bolt.App - DEBUG - [app.py:476] - Applying slack_bolt.middleware.ignoring_self_events.ignoring_self_events.IgnoringSelfEvents
2025-08-21 11:43:37,738 - slack_bolt.App - DEBUG - [app.py:476] - Applying slack_bolt.middleware.url_verification.url_verification.UrlVerification
2025-08-21 11:43:37,738 - slack_bolt.App - DEBUG - [app.py:500] - Checking listener: handle_app_mentions ...
2025-08-21 11:43:37,738 - slack_bolt.App - DEBUG - [app.py:500] - Checking listener: help_message ...
2025-08-21 11:43:37,738 - slack_bolt.App - DEBUG - [app.py:500] - Checking listener: handle_dm_messages ...
2025-08-21 11:43:37,738 - slack_bolt.App - DEBUG - [app.py:522] - Running listener: handle_dm_messages ...
2025-08-21 11:43:37,739 - __main__ - INFO - [main.py:412] - === DM MESSAGE EVENT RECEIVED ===
2025-08-21 11:43:37,739 - slack_bolt.App - DEBUG - [thread_runner.py:198] - Responding with status: 200 body: "" (0 millis)
2025-08-21 11:43:37,739 - __main__ - DEBUG - [main.py:413] - Full event body: {'token': 'yq71khZBCyJF1Ri2hG5aNqr5', 'team_id': 'T010QS7UQNA', 'enterprise_id': 'ERV4P7NAD', 'context_team_id': None, 'context_enterprise_id': 'ERV4P7NAD', 'api_app_id': 'A099LACAB2R', 'event': {'user': 'U01RMTFMALF', 'type': 'message', 'ts': '1755801813.351409', 'client_msg_id': 'd0d2a98a-7205-4669-ba19-eeae1ec0c373', 'text': 'How can i run an automated test on a local Android phone?', 'blocks': [{'type': 'rich_text', 'block_id': 'vQwBP', 'elements': [{'type': 'rich_text_section', 'elements': [{'type': 'text', 'text': 'How can i run an automated test on a local Android phone?'}]}]}], 'channel': 'D09A0LFHK8R', 'event_ts': '1755801813.351409', 'channel_type': 'im'}, 'type': 'event_callback', 'event_id': 'Ev09C9HX15NC', 'event_time': 1755801813, 'authorizations': [{'enterprise_id': 'ERV4P7NAD', 'team_id': 'T010QS7UQNA', 'user_id': 'U099R6WTZ9S', 'is_bot': True, 'is_enterprise_install': False}], 'is_ext_shared_channel': False, 'event_context': '4-eyJldCI6Im1lc3NhZ2UiLCJ0aWQiOiJUMDEwUVM3VVFOQSIsImFpZCI6IkEwOTlMQUNBQjJSIiwiY2lkIjoiRDA5QTBMRkhLOFIifQ'}
2025-08-21 11:43:37,739 - slack_bolt.App - DEBUG - [client.py:200] - Sending a message (session id: 69149a69-a7e3-483f-8c0d-bc9bf7179cfa, message: {"envelope_id": "ba870d39-0c07-4698-9932-ada8c3af8511"})
2025-08-21 11:43:37,739 - __main__ - INFO - [main.py:422] - DM Event details: channel=D09A0LFHK8R, user=U01RMTFMALF, ts=1755801813.351409
2025-08-21 11:43:37,739 - __main__ - DEBUG - [main.py:423] - DM Event text: How can i run an automated test on a local Android phone?
2025-08-21 11:43:37,739 - slack_bolt.App - DEBUG - [internals.py:41] - Response time: 1 milliseconds
2025-08-21 11:43:37,739 - utils - DEBUG - [utils.py:27] - Checking message processing: channel=D09A0LFHK8R, ts=1755801813.351409, text='How can i run an automated test on a local Android...'
2025-08-21 11:43:37,739 - slack_bolt.App - DEBUG - [client.py:150] - Message processing completed (type: events_api, envelope_id: ba870d39-0c07-4698-9932-ada8c3af8511)
2025-08-21 11:43:37,739 - utils - DEBUG - [utils.py:31] - Message hash: 063ea07ed1263573209ad24b4e897473
2025-08-21 11:43:37,739 - utils - DEBUG - [utils.py:53] - Added message to processing cache (total entries: 1)
2025-08-21 11:43:37,739 - __main__ - DEBUG - [main.py:436] - Bot check: bot_id=None, user_id=U01RMTFMALF
2025-08-21 11:43:37,739 - __main__ - DEBUG - [main.py:441] - Question received: 'How can i run an automated test on a local Android phone?'
2025-08-21 11:43:37,740 - __main__ - DEBUG - [main.py:447] - Checking user access for DM...
2025-08-21 11:43:37,740 - auth.slack_user_info - DEBUG - [slack_user_info.py:48] - Fetching user info for user_id: U01RMTFMALF
2025-08-21 11:43:37,740 - slack_sdk.web.base_client - DEBUG - [base_client.py:255] - Sending a request - url: https://slack.com/api/users.info, query_params: {}, body_params: {'user': 'U01RMTFMALF', 'team_id': 'T010QS7UQNA'}, files: {}, json_body: None, headers: {'Content-Type': 'application/x-www-form-urlencoded', 'Authorization': '(redacted)', 'User-Agent': 'Python/3.12.0 slackclient/3.34.0 Darwin/23.4.0'}
2025-08-21 11:43:38,049 - slack_sdk.web.base_client - DEBUG - [base_client.py:546] - Received the following response - status: 200, headers: {'date': 'Thu, 21 Aug 2025 18:43:38 GMT', 'server': 'Apache', 'vary': 'Accept-Encoding', 'x-slack-req-id': '9ef9e7b6903046b1d8d2736a63b364e8', 'x-content-type-options': 'nosniff', 'x-xss-protection': '0', 'pragma': 'no-cache', 'cache-control': 'private, no-cache, no-store, must-revalidate', 'expires': 'Sat, 26 Jul 1997 05:00:00 GMT', 'content-type': 'application/json; charset=utf-8', 'x-accepted-oauth-scopes': 'users:read', 'x-oauth-scopes': 'app_mentions:read,channels:history,chat:write,im:history,im:read,im:write,users:read,reactions:write,users:read.email', 'access-control-expose-headers': 'x-slack-req-id, retry-after', 'access-control-allow-headers': 'slack-route, x-slack-version-ts, x-b3-traceid, x-b3-spanid, x-b3-parentspanid, x-b3-sampled, x-b3-flags', 'strict-transport-security': 'max-age=31536000; includeSubDomains; preload', 'referrer-policy': 'no-referrer', 'x-slack-unique-id': 'aKdo2jvikColNihhUvvrTgAAEAg', 'x-slack-backend': 'r', 'access-control-allow-origin': '*', 'content-length': '2057', 'via': '1.1 slack-prod.tinyspeck.com, envoy-www-iad-pdzrpbbe,envoy-edge-pdx-vexjlceg', 'x-envoy-attempt-count': '1', 'x-envoy-upstream-service-time': '90', 'x-backend': 'main_normal main_canary_with_overflow main_control_with_overflow', 'x-server': 'slack-www-hhvm-main-iad-agcv', 'x-slack-shared-secret-outcome': 'no-match', 'x-edge-backend': 'envoy-www', 'timing-allow-origin': '*', 'x-slack-edge-shared-secret-outcome': 'no-match', 'connection': 'close'}, body: {"ok":true,"user":{"id":"U01RMTFMALF","name":"popov8533","is_bot":false,"updated":1755719704,"is_app_user":false,"team_id":"T010QS7UQNA","deleted":false,"color":"4bbe2e","is_email_confirmed":true,"real_name":"Alexandr Popov","tz":"America\/Los_Angeles","tz_label":"Pacific Daylight Time","tz_offset":-25200,"is_admin":false,"is_owner":false,"is_primary_owner":false,"is_restricted":false,"is_ultra_restricted":false,"enterprise_user":{"id":"U01RMTFMALF","enterprise_id":"ERV4P7NAD","enterprise_name":"Paramount Global","is_admin":false,"is_owner":false,"is_primary_owner":false,"teams":["T010QS7UQNA","T02H1PQMF"]},"who_can_share_contact_card":"EVERYONE","profile":{"real_name":"Alexandr Popov","display_name":"Alex Popov","avatar_hash":"a64f82312a14","real_name_normalized":"Alexandr Popov","display_name_normalized":"Alex Popov","image_24":"https:\/\/avatars.slack-edge.com\/2023-03-29\/5033076824964_a64f82312a141123fbbf_24.png","image_32":"https:\/\/avatars.slack-edge.com\/2023-03-29\/5033076824964_a64f82312a141123fbbf_32.png","image_48":"https:\/\/avatars.slack-edge.com\/2023-03-29\/5033076824964_a64f82312a141123fbbf_48.png","image_72":"https:\/\/avatars.slack-edge.com\/2023-03-29\/5033076824964_a64f82312a141123fbbf_72.png","image_192":"https:\/\/avatars.slack-edge.com\/2023-03-29\/5033076824964_a64f82312a141123fbbf_192.png","image_512":"https:\/\/avatars.slack-edge.com\/2023-03-29\/5033076824964_a64f82312a141123fbbf_512.png","image_1024":"https:\/\/avatars.slack-edge.com\/2023-03-29\/5033076824964_a64f82312a141123fbbf_1024.png","image_original":"https:\/\/avatars.slack-edge.com\/2023-03-29\/5033076824964_a64f82312a141123fbbf_original.png","is_custom_image":true,"first_name":"Alexandr","last_name":"Popov","team":"T010QS7UQNA","email":"alexandr.popov@paramount.com","title":"Senior Software Quality Assurance Engineer","phone":"","skype":"","status_text":"","status_text_canonical":"","status_emoji":"","status_emoji_display_info":[],"status_expiration":0,"huddle_state":"default_unset","huddle_state_expiration_ts":0,"ooo_message":""}}}
2025-08-21 11:43:38,050 - auth.slack_user_info - DEBUG - [slack_user_info.py:63] - Retrieved email for user U01RMTFMALF: alexandr.popov@paramount.com
2025-08-21 11:43:38,050 - auth.email_whitelist - DEBUG - [email_whitelist.py:57] - Email access granted: alexandr.popov@paramount.com
2025-08-21 11:43:38,050 - __main__ - INFO - [main.py:118] - Access granted to user U01RMTFMALF with email alexandr.popov@paramount.com
2025-08-21 11:43:38,050 - __main__ - DEBUG - [main.py:453] - User access check passed for DM
2025-08-21 11:43:38,050 - __main__ - INFO - [main.py:455] - Processing DM question from user U01RMTFMALF: How can i run an automated test on a local Android phone?
2025-08-21 11:43:38,050 - __main__ - DEBUG - [main.py:458] - Starting DM processing...
2025-08-21 11:43:38,050 - __main__ - DEBUG - [main.py:461] - Checking if 'how can i run an automated test on a local android phone?' is an admin command in DM
2025-08-21 11:43:38,050 - __main__ - DEBUG - [main.py:497] - Checking if DM thread is already being processed...
2025-08-21 11:43:38,050 - utils - DEBUG - [utils.py:67] - Managing thread: D09A0LFHK8R:1755801813.351409, action: add, user: U01RMTFMALF
2025-08-21 11:43:38,050 - utils - INFO - [utils.py:94] - Added thread D09A0LFHK8R:1755801813.351409 to active tracking (total: 1)
2025-08-21 11:43:38,050 - __main__ - DEBUG - [main.py:502] - DM thread management check passed
2025-08-21 11:43:38,050 - slack_sdk.web.base_client - DEBUG - [base_client.py:255] - Sending a request - url: https://slack.com/api/reactions.add, query_params: {}, body_params: {'channel': 'D09A0LFHK8R', 'name': 'thinking_face', 'timestamp': '1755801813.351409', 'team_id': 'T010QS7UQNA'}, files: {}, json_body: None, headers: {'Content-Type': 'application/x-www-form-urlencoded', 'Authorization': '(redacted)', 'User-Agent': 'Python/3.12.0 slackclient/3.34.0 Darwin/23.4.0'}
2025-08-21 11:43:38,405 - slack_sdk.web.base_client - DEBUG - [base_client.py:546] - Received the following response - status: 200, headers: {'date': 'Thu, 21 Aug 2025 18:43:38 GMT', 'server': 'Apache', 'vary': 'Accept-Encoding', 'x-slack-req-id': '5b3a3ab3f2d14985f4bcf68aeaf8cbc9', 'x-content-type-options': 'nosniff', 'x-xss-protection': '0', 'pragma': 'no-cache', 'cache-control': 'private, no-cache, no-store, must-revalidate', 'expires': 'Sat, 26 Jul 1997 05:00:00 GMT', 'content-type': 'application/json; charset=utf-8', 'x-accepted-oauth-scopes': 'reactions:write', 'x-oauth-scopes': 'app_mentions:read,channels:history,chat:write,im:history,im:read,im:write,users:read,reactions:write,users:read.email', 'access-control-expose-headers': 'x-slack-req-id, retry-after', 'access-control-allow-headers': 'slack-route, x-slack-version-ts, x-b3-traceid, x-b3-spanid, x-b3-parentspanid, x-b3-sampled, x-b3-flags', 'strict-transport-security': 'max-age=31536000; includeSubDomains; preload', 'referrer-policy': 'no-referrer', 'x-slack-unique-id': 'aKdo2nx4nD7jceu42EIhegAAEC4', 'x-slack-backend': 'r', 'access-control-allow-origin': '*', 'content-length': '11', 'via': '1.1 slack-prod.tinyspeck.com, envoy-www-iad-fluiyhqc,envoy-edge-pdx-qfkygnsg', 'x-envoy-attempt-count': '1', 'x-envoy-upstream-service-time': '143', 'x-backend': 'main_normal main_canary_with_overflow main_control_with_overflow', 'x-server': 'slack-www-hhvm-main-iad-cgwh', 'x-slack-shared-secret-outcome': 'no-match', 'x-edge-backend': 'envoy-www', 'timing-allow-origin': '*', 'x-slack-edge-shared-secret-outcome': 'no-match', 'connection': 'close'}, body: {"ok":true}
2025-08-21 11:43:38,406 - __main__ - INFO - [main.py:519] - Processing DM question from <@U01RMTFMALF>: How can i run an automated test on a local Android phone?
2025-08-21 11:43:38,406 - __main__ - INFO - [main.py:523] - Sending DM request to DIG AI...
2025-08-21 11:43:38,406 - dig_connector - INFO - [dig_connector.py:134] - Generating response for query: 'How can i run an automated test on a local Android phone?' with 0 chunks
2025-08-21 11:43:38,406 - dig_connector - DEBUG - [dig_connector.py:138] - Formatted context length: 0
2025-08-21 11:43:38,407 - dig_connector - INFO - [dig_connector.py:141] - No context available, using direct query
2025-08-21 11:43:38,407 - dig_connector - INFO - [dig_connector.py:150] - Sending prompt to DIG platform...
2025-08-21 11:43:38,407 - dig_connector - INFO - [dig_connector.py:121] - Sending message to DIG API - URL: https://ai.digdev.cbsicloud.com/fastapi/chats/860/generate
2025-08-21 11:43:38,407 - dig_connector - DEBUG - [dig_connector.py:122] - Message payload: {'model_id': 42, 'message_text': 'How can i run an automated test on a local Android phone?', 'history': [{'role': 'user', 'content': 'How can i run an automated test on a local Android phone?'}]}
2025-08-21 11:43:47,365 - urllib3.connectionpool - DEBUG - [connectionpool.py:549] - https://ai.digdev.cbsicloud.com:443 "POST /fastapi/chats/860/generate HTTP/1.1" 200 3423
2025-08-21 11:43:47,366 - dig_connector - DEBUG - [dig_connector.py:125] - DIG API response: status=200
2025-08-21 11:43:47,366 - dig_connector - DEBUG - [dig_connector.py:129] - DIG API response data: {'message_text': 'To run an automated test on a local Android phone, you\'ll need to configure your environment and use specific commands. Here\'s a breakdown of the steps and parameters involved, based on the provided documents:\n\n**1. Environment Setup & Configuration:**\n\n*   **Android Emulator:** If you\'re using an Android Emulator, ensure your Run Configuration has the `$ANDROID_HOME` environment variable set and included in the path (Source: https://paramount.atlassian.net/wiki/spaces/PLQA/pages/47713566).\n*   **Appium Server:** Your test class should be set up to start and stop the Appium server. A `SampleTest.java` class is mentioned as an example, using `@BeforeSuite` to instantiate the Web or Mobile Driver and start Appium (Source: https://paramount.atlassian.net/wiki/spaces/PLQA/pages/47711460).\n*   **Synergy Server (if applicable):**\n    *   Connect to VPN: `connect.cbsinteractive.com/VPNFT` (Source: https://paramount.atlassian.net/wiki/spaces/PLQA/pages/47720266).\n    *   Download and run the latest version of Synergy server\'s `.jar` file (Websocket) (Source: https://paramount.atlassian.net/wiki/spaces/PLQA/pages/47720266).\n    *   Update desired capabilities in the `.config` file within the `mqe-hob-mobile-tests` directory. Key parameters include `ServerURL`, `Platform` (set to `ANDROID`), `Locale`, `Environment`, `MobileDeviceCategory`, `DeviceStartOrientation`, `AppBuildType`, `DebugProxyPort`, and `ClientID` (Source: https://paramount.atlassian.net/wiki/spaces/PLQA/pages/47720266).\n\n**2. Mobile Local Android Run Configuration Arguments (Source: https://paramount.atlassian.net/wiki/spaces/PLQA/pages/47711460):**\n\nWhen running your tests, you\'ll typically pass arguments like these:\n\n*   `-ea`\n*   `-Ddriver=android`\n*   `-DplatformName=Android`\n*   `-DplatformVersion=11.0` (example version)\n*   `-DdeviceName="Google Pixel 2XL"` (example device)\n*   `-Denvironment=local`\n*   `-Dheadless=false`\n*   `-Dapp="/pathToPackage/mobile-8.0.44-210804410-3.5.25-paramountPlus-playStore-release.apk"` (path to your application package)\n*   `-Dudid=set this if running on Real Mobile Device only` (Unique Device Identifier for real devices)\n*   `-DbundleId=set to override default setting`\n\n**3. Command to Run Android Test on Local (Source: https://paramount.atlassian.net/wiki/spaces/PLQA/pages/47720266):**\n\nYou\'ll need to add `debugdeviceid` and `clientid` to run tests locally.\n\nTo run from the terminal, use a command similar to this example:\n`mvn clean test -pl mqe-hob-mobile-tests -am -Dgroups=Your test case number or tag`\n\nAlternatively, you can run from the `TestNGSuiteConfig.xml` by navigating to the file and executing it. You\'ll specify the test case ID or tag name in the `<include name="" />` section.\n\n**Important Notes:**\n\n*   For Android Emulator, make sure your Run Config has the `$ANDROID_HOME` environment variable set and included in the path (Source: https://paramount.atlassian.net/wiki/spaces/PLQA/pages/47713566).\n*   If running on a real device, you need to add the device\'s IP address to `DebugDeviceID` in the configuration (Source: https://paramount.atlassian.net/wiki/spaces/PLQA/pages/47720266).\n*   Your test class should handle starting and stopping the Appium server and Android Emulator (Source: https://paramount.atlassian.net/wiki/spaces/PLQA/pages/47711460).', 'requires_approval': False, 'execution_id': 1561}
2025-08-21 11:43:47,366 - dig_connector - INFO - [dig_connector.py:154] - Extracting response content...
2025-08-21 11:43:47,366 - dig_connector - DEBUG - [dig_connector.py:221] - Found message_text in response
2025-08-21 11:43:47,367 - dig_connector - INFO - [dig_connector.py:157] - Successfully generated response (length: 3313)
2025-08-21 11:43:47,367 - __main__ - INFO - [main.py:526] - Received DM response from DIG AI
2025-08-21 11:43:47,367 - __main__ - DEBUG - [main.py:527] - DIG AI DM response: To run an automated test on a local Android phone, you'll need to configure your environment and use specific commands. Here's a breakdown of the steps and parameters involved, based on the provided documents:

**1. Environment Setup & Configuration:**

*   **Android Emulator:** If you're using an Android Emulator, ensure your Run Configuration has the `$ANDROID_HOME` environment variable set and included in the path (Source: https://paramount.atlassian.net/wiki/spaces/PLQA/pages/47713566).
*   **Appium Server:** Your test class should be set up to start and stop the Appium server. A `SampleTest.java` class is mentioned as an example, using `@BeforeSuite` to instantiate the Web or Mobile Driver and start Appium (Source: https://paramount.atlassian.net/wiki/spaces/PLQA/pages/47711460).
*   **Synergy Server (if applicable):**
    *   Connect to VPN: `connect.cbsinteractive.com/VPNFT` (Source: https://paramount.atlassian.net/wiki/spaces/PLQA/pages/47720266).
    *   Download and run the latest version of Synergy server's `.jar` file (Websocket) (Source: https://paramount.atlassian.net/wiki/spaces/PLQA/pages/47720266).
    *   Update desired capabilities in the `.config` file within the `mqe-hob-mobile-tests` directory. Key parameters include `ServerURL`, `Platform` (set to `ANDROID`), `Locale`, `Environment`, `MobileDeviceCategory`, `DeviceStartOrientation`, `AppBuildType`, `DebugProxyPort`, and `ClientID` (Source: https://paramount.atlassian.net/wiki/spaces/PLQA/pages/47720266).

**2. Mobile Local Android Run Configuration Arguments (Source: https://paramount.atlassian.net/wiki/spaces/PLQA/pages/47711460):**

When running your tests, you'll typically pass arguments like these:

*   `-ea`
*   `-Ddriver=android`
*   `-DplatformName=Android`
*   `-DplatformVersion=11.0` (example version)
*   `-DdeviceName="Google Pixel 2XL"` (example device)
*   `-Denvironment=local`
*   `-Dheadless=false`
*   `-Dapp="/pathToPackage/mobile-8.0.44-210804410-3.5.25-paramountPlus-playStore-release.apk"` (path to your application package)
*   `-Dudid=set this if running on Real Mobile Device only` (Unique Device Identifier for real devices)
*   `-DbundleId=set to override default setting`

**3. Command to Run Android Test on Local (Source: https://paramount.atlassian.net/wiki/spaces/PLQA/pages/47720266):**

You'll need to add `debugdeviceid` and `clientid` to run tests locally.

To run from the terminal, use a command similar to this example:
`mvn clean test -pl mqe-hob-mobile-tests -am -Dgroups=Your test case number or tag`

Alternatively, you can run from the `TestNGSuiteConfig.xml` by navigating to the file and executing it. You'll specify the test case ID or tag name in the `<include name="" />` section.

**Important Notes:**

*   For Android Emulator, make sure your Run Config has the `$ANDROID_HOME` environment variable set and included in the path (Source: https://paramount.atlassian.net/wiki/spaces/PLQA/pages/47713566).
*   If running on a real device, you need to add the device's IP address to `DebugDeviceID` in the configuration (Source: https://paramount.atlassian.net/wiki/spaces/PLQA/pages/47720266).
*   Your test class should handle starting and stopping the Appium server and Android Emulator (Source: https://paramount.atlassian.net/wiki/spaces/PLQA/pages/47711460).
2025-08-21 11:43:47,370 - __main__ - DEBUG - [main.py:531] - Formatted DM response: *🤖 AI Assistant Response*

*Your Question:*
> How can i run an automated test on a local Android phone?

*Answer:*
To run an automated test on a local Android phone, you'll need to configure your environment and use specific commands. Here's a breakdown of the steps and parameters involved, based on the provided documents:

*1. Environment Setup & Configuration:*

*   *Android Emulator:* If you're using an Android Emulator, ensure your Run Configuration has the `$ANDROID_HOME` environment variable set and included in the path (Source: https://paramount.atlassian.net/wiki/spaces/PLQA/pages/47713566).
*   *Appium Server:* Your test class should be set up to start and stop the Appium server. A `SampleTest.java` class is mentioned as an example, using `@BeforeSuite` to instantiate the Web or Mobile Driver and start Appium (Source: https://paramount.atlassian.net/wiki/spaces/PLQA/pages/47711460).
*   *Synergy Server (if applicable):*
    *   Connect to VPN: `connect.cbsinteractive.com/VPNFT` (Source: https://paramount.atlassian.net/wiki/spaces/PLQA/pages/47720266).
    *   Download and run the latest version of Synergy server's `.jar` file (Websocket) (Source: https://paramount.atlassian.net/wiki/spaces/PLQA/pages/47720266).
    *   Update desired capabilities in the `.config` file within the `mqe-hob-mobile-tests` directory. Key parameters include `ServerURL`, `Platform` (set to `ANDROID`), `Locale`, `Environment`, `MobileDeviceCategory`, `DeviceStartOrientation`, `AppBuildType`, `DebugProxyPort`, and `ClientID` (Source: https://paramount.atlassian.net/wiki/spaces/PLQA/pages/47720266).

*2. Mobile Local Android Run Configuration Arguments (Source: https://paramount.atlassian.net/wiki/spaces/PLQA/pages/47711460):*

When running your tests, you'll typically pass arguments like these:

*   `-ea`
*   `-Ddriver=android`
*   `-DplatformName=Android`
*   `-DplatformVersion=11.0` (example version)
*   `-DdeviceName="Google Pixel 2XL"` (example device)
*   `-Denvironment=local`
*   `-Dheadless=false`
*   `-Dapp="/pathToPackage/mobile-8.0.44-210804410-3.5.25-paramountPlus-playStore-release.apk"` (path to your application package)
*   `-Dudid=set this if running on Real Mobile Device only` (Unique Device Identifier for real devices)
*   `-DbundleId=set to override default setting`

*3. Command to Run Android Test on Local (Source: https://paramount.atlassian.net/wiki/spaces/PLQA/pages/47720266):*

You'll need to add `debugdeviceid` and `clientid` to run tests locally.

To run from the terminal, use a command similar to this example:
`mvn clean test -pl mqe-hob-mobile-tests -am -Dgroups=Your test case number or tag`

Alternatively, you can run from the `TestNGSuiteConfig.xml` by navigating to the file and executing it. You'll specify the test case ID or tag name in the `<include name="" />` section.

*Important Notes:*

*   For Android Emulator, make sure your Run Config has the `$ANDROID_HOME` environment variable set and included in the path (Source: https://paramount.atlassian.net/wiki/spaces/PLQA/pages/47713566).
*   If running on a real device, you need to add the device's IP address to `DebugDeviceID` in the configuration (Source: https://paramount.atlassian.net/wiki/spaces/PLQA/pages/47720266).
*   Your test class should handle starting and stopping the Appium server and Android Emulator (Source: https://paramount.atlassian.net/wiki/spaces/PLQA/pages/47711460).

─────────────────────────────
_Powered by DIG AI Platform_
2025-08-21 11:43:47,371 - slack_sdk.web.base_client - DEBUG - [base_client.py:255] - Sending a request - url: https://slack.com/api/reactions.remove, query_params: {}, body_params: {'name': 'thinking_face', 'channel': 'D09A0LFHK8R', 'timestamp': '1755801813.351409', 'team_id': 'T010QS7UQNA'}, files: {}, json_body: None, headers: {'Content-Type': 'application/x-www-form-urlencoded', 'Authorization': '(redacted)', 'User-Agent': 'Python/3.12.0 slackclient/3.34.0 Darwin/23.4.0'}
2025-08-21 11:43:47,732 - slack_sdk.web.base_client - DEBUG - [base_client.py:546] - Received the following response - status: 200, headers: {'date': 'Thu, 21 Aug 2025 18:43:47 GMT', 'server': 'Apache', 'vary': 'Accept-Encoding', 'x-slack-req-id': 'f532ec824656eab29fe3786968b7c496', 'x-content-type-options': 'nosniff', 'x-xss-protection': '0', 'pragma': 'no-cache', 'cache-control': 'private, no-cache, no-store, must-revalidate', 'expires': 'Sat, 26 Jul 1997 05:00:00 GMT', 'content-type': 'application/json; charset=utf-8', 'x-accepted-oauth-scopes': 'reactions:write', 'x-oauth-scopes': 'app_mentions:read,channels:history,chat:write,im:history,im:read,im:write,users:read,reactions:write,users:read.email', 'access-control-expose-headers': 'x-slack-req-id, retry-after', 'access-control-allow-headers': 'slack-route, x-slack-version-ts, x-b3-traceid, x-b3-spanid, x-b3-parentspanid, x-b3-sampled, x-b3-flags', 'strict-transport-security': 'max-age=31536000; includeSubDomains; preload', 'referrer-policy': 'no-referrer', 'x-slack-unique-id': 'aKdo45_04DFU7Qf78vX5kQAAABQ', 'x-slack-backend': 'r', 'access-control-allow-origin': '*', 'content-length': '11', 'via': '1.1 slack-prod.tinyspeck.com, envoy-www-iad-tyclupdm,envoy-edge-pdx-sqjmrtwy', 'x-envoy-attempt-count': '1', 'x-envoy-upstream-service-time': '148', 'x-backend': 'main_normal main_canary_with_overflow main_control_with_overflow', 'x-server': 'slack-www-hhvm-main-iad-srwt', 'x-slack-shared-secret-outcome': 'no-match', 'x-edge-backend': 'envoy-www', 'timing-allow-origin': '*', 'x-slack-edge-shared-secret-outcome': 'no-match', 'connection': 'close'}, body: {"ok":true}
2025-08-21 11:43:47,757 - slack_sdk.web.base_client - DEBUG - [base_client.py:255] - Sending a request - url: https://slack.com/api/chat.postMessage, query_params: {}, body_params: {}, files: {}, json_body: {'channel': 'D09A0LFHK8R', 'text': '*🤖 AI Assistant Response*\n\n*Your Question:*\n> How can i run an automated test on a local Android phone? *Answer:*\nTo run an automated test on a local Android phone, you\'ll need to configure your environment and use specific commands. Here\'s a breakdown of the steps and parameters involved, based on the provided documents:\n\n*1. Environment Setup & Configuration:*\n\n*   *Android Emulator:* If you\'re using an Android Emulator, ensure your Run Configuration has the `$ANDROID_HOME` environment variable set and included in the path (Source: https://paramount.atlassian.net/wiki/spaces/PLQA/pages/47713566). *   *Appium Server:* Your test class should be set up to start and stop the Appium server. A `SampleTest.java` class is mentioned as an example, using `@BeforeSuite` to instantiate the Web or Mobile Driver and start Appium (Source: https://paramount.atlassian.net/wiki/spaces/PLQA/pages/47711460). *   *Synergy Server (if applicable):*\n    *   Connect to VPN: `connect.cbsinteractive.com/VPNFT` (Source: https://paramount.atlassian.net/wiki/spaces/PLQA/pages/47720266). *   Download and run the latest version of Synergy server\'s `.jar` file (Websocket) (Source: https://paramount.atlassian.net/wiki/spaces/PLQA/pages/47720266). *   Update desired capabilities in the `.config` file within the `mqe-hob-mobile-tests` directory. Key parameters include `ServerURL`, `Platform` (set to `ANDROID`), `Locale`, `Environment`, `MobileDeviceCategory`, `DeviceStartOrientation`, `AppBuildType`, `DebugProxyPort`, and `ClientID` (Source: https://paramount.atlassian.net/wiki/spaces/PLQA/pages/47720266). *2. Mobile Local Android Run Configuration Arguments (Source: https://paramount.atlassian.net/wiki/spaces/PLQA/pages/47711460):*\n\nWhen running your tests, you\'ll typically pass arguments like these:\n\n*   `-ea`\n*   `-Ddriver=android`\n*   `-DplatformName=Android`\n*   `-DplatformVersion=11.0` (example version)\n*   `-DdeviceName="Google Pixel 2XL"` (example device)\n*   `-Denvironment=local`\n*   `-Dheadless=false`\n*   `-Dapp="/pathToPackage/mobile-8.0.44-210804410-3.5.25-paramountPlus-playStore-release.apk"` (path to your application package)\n*   `-Dudid=set this if running on Real Mobile Device only` (Unique Device Identifier for real devices)\n*   `-DbundleId=set to override default setting`\n\n*3. Command to Run Android Test on Local (Source: https://paramount.atlassian.net/wiki/spaces/PLQA/pages/47720266):*\n\nYou\'ll need to add `debugdeviceid` and `clientid` to run tests locally. To run from the terminal, use a command similar to this example:\n`mvn clean test -pl mqe-hob-mobile-tests -am -Dgroups=Your test case number or tag`\n\nAlternatively, you can run from the `TestNGSuiteConfig.xml` by navigating to the file and executing it. You\'ll specify the test case ID or tag name in the `<include name="" />` section.\n\n_(message continued in thread...)_', 'thread_ts': '1755801813.351409', 'team_id': 'T010QS7UQNA'}, headers: {'Content-Type': 'application/json;charset=utf-8', 'Authorization': '(redacted)', 'User-Agent': 'Python/3.12.0 slackclient/3.34.0 Darwin/23.4.0'}
2025-08-21 11:43:48,215 - slack_sdk.web.base_client - DEBUG - [base_client.py:546] - Received the following response - status: 200, headers: {'date': 'Thu, 21 Aug 2025 18:43:48 GMT', 'server': 'Apache', 'vary': 'Accept-Encoding', 'x-slack-req-id': '4b404ec79666e27d693b5555a343dce1', 'x-content-type-options': 'nosniff', 'x-xss-protection': '0', 'pragma': 'no-cache', 'cache-control': 'private, no-cache, no-store, must-revalidate', 'expires': 'Sat, 26 Jul 1997 05:00:00 GMT', 'content-type': 'application/json; charset=utf-8', 'x-accepted-oauth-scopes': 'chat:write', 'x-oauth-scopes': 'app_mentions:read,channels:history,chat:write,im:history,im:read,im:write,users:read,reactions:write,users:read.email', 'access-control-expose-headers': 'x-slack-req-id, retry-after', 'access-control-allow-headers': 'slack-route, x-slack-version-ts, x-b3-traceid, x-b3-spanid, x-b3-parentspanid, x-b3-sampled, x-b3-flags', 'strict-transport-security': 'max-age=31536000; includeSubDomains; preload', 'referrer-policy': 'no-referrer', 'x-slack-unique-id': 'aKdo5EGO6BhPjjd1G_ISqgAAACk', 'x-slack-backend': 'r', 'access-control-allow-origin': '*', 'content-length': '10285', 'via': '1.1 slack-prod.tinyspeck.com, envoy-www-iad-mgkusttv,envoy-edge-pdx-zkkfzfsl', 'x-envoy-attempt-count': '1', 'x-envoy-upstream-service-time': '228', 'x-backend': 'main_normal main_canary_with_overflow main_control_with_overflow', 'x-server': 'slack-www-hhvm-main-iad-ptib', 'x-slack-shared-secret-outcome': 'no-match', 'x-edge-backend': 'envoy-www', 'timing-allow-origin': '*', 'x-slack-edge-shared-secret-outcome': 'no-match', 'connection': 'close'}, body: {"ok":true,"channel":"D09A0LFHK8R","ts":"1755801828.182269","message":{"user":"U099R6WTZ9S","type":"message","ts":"1755801828.182269","bot_id":"B099R6WTRU4","app_id":"A099LACAB2R","text":"*:robot_face: AI Assistant Response*\n\n*Your Question:*\n&gt; How can i run an automated test on a local Android phone? *Answer:*\nTo run an automated test on a local Android phone, you'll need to configure your environment and use specific commands. Here's a breakdown of the steps and parameters involved, based on the provided documents:\n\n*1. Environment Setup &amp; Configuration:*\n\n*   *Android Emulator:* If you're using an Android Emulator, ensure your Run Configuration has the `$ANDROID_HOME` environment variable set and included in the path (Source: <https://paramount.atlassian.net/wiki/spaces/PLQA/pages/47713566>). *   *Appium Server:* Your test class should be set up to start and stop the Appium server. A `SampleTest.java` class is mentioned as an example, using `@BeforeSuite` to instantiate the Web or Mobile Driver and start Appium (Source: <https://paramount.atlassian.net/wiki/spaces/PLQA/pages/47711460>). *   *Synergy Server (if applicable):*\n    *   Connect to VPN: `<http://connect.cbsinteractive.com/VPNFT|connect.cbsinteractive.com/VPNFT>` (Source: <https://paramount.atlassian.net/wiki/spaces/PLQA/pages/47720266>). *   Download and run the latest version of Synergy server's `.jar` file (Websocket) (Source: <https://paramount.atlassian.net/wiki/spaces/PLQA/pages/47720266>). *   Update desired capabilities in the `.config` file within the `mqe-hob-mobile-tests` directory. Key parameters include `ServerURL`, `Platform` (set to `ANDROID`), `Locale`, `Environment`, `MobileDeviceCategory`, `DeviceStartOrientation`, `AppBuildType`, `DebugProxyPort`, and `ClientID` (Source: <https://paramount.atlassian.net/wiki/spaces/PLQA/pages/47720266>). *2. Mobile Local Android Run Configuration Arguments (Source: <https://paramount.atlassian.net/wiki/spaces/PLQA/pages/47711460>):*\n\nWhen running your tests, you'll typically pass arguments like these:\n\n*   `-ea`\n*   `-Ddriver=android`\n*   `-DplatformName=Android`\n*   `-DplatformVersion=11.0` (example version)\n*   `-DdeviceName=\"Google Pixel 2XL\"` (example device)\n*   `-Denvironment=local`\n*   `-Dheadless=false`\n*   `-Dapp=\"/pathToPackage/mobile-8.0.44-210804410-3.5.25-paramountPlus-playStore-release.apk\"` (path to your application package)\n*   `-Dudid=set this if running on Real Mobile Device only` (Unique Device Identifier for real devices)\n*   `-DbundleId=set to override default setting`\n\n*3. Command to Run Android Test on Local (Source: <https://paramount.atlassian.net/wiki/spaces/PLQA/pages/47720266>):*\n\nYou'll need to add `debugdeviceid` and `clientid` to run tests locally. To run from the terminal, use a command similar to this example:\n`mvn clean test -pl mqe-hob-mobile-tests -am -Dgroups=Your test case number or tag`\n\nAlternatively, you can run from the `TestNGSuiteConfig.xml` by navigating to the file and executing it. You'll specify the test case ID or tag name in the `&lt;include name=\"\" /&gt;` section.\n\n_(message continued in thread...)_","team":"T010QS7UQNA","bot_profile":{"id":"B099R6WTRU4","app_id":"A099LACAB2R","user_id":"U099R6WTZ9S","name":"AutoBot","icons":{"image_36":"https://a.slack-edge.com/80588/img/plugins/app/bot_36.png","image_48":"https://a.slack-edge.com/80588/img/plugins/app/bot_48.png","image_72":"https://a.slack-edge.com/80588/img/plugins/app/service_72.png"},"deleted":false,"updated":1754677948,"team_id":"T010QS7UQNA"},"thread_ts":"1755801813.351409","parent_user_id":"U01RMTFMALF","blocks":[{"type":"rich_text","block_id":"+JDnO","elements":[{"type":"rich_text_section","elements":[{"type":"emoji","name":"robot_face","unicode":"1f916","style":{"bold":true}},{"type":"text","text":" AI Assistant Response","style":{"bold":true}},{"type":"text","text":"\n\n"},{"type":"text","text":"Your Question:","style":{"bold":true}}]},{"type":"rich_text_quote","elements":[{"type":"text","text":"How can i run an automated test on a local Android phone? "},{"type":"text","text":"Answer:","style":{"bold":true}}]},{"type":"rich_text_section","elements":[{"type":"text","text":"To run an automated test on a local Android phone, you'll need to configure your environment and use specific commands. Here's a breakdown of the steps and parameters involved, based on the provided documents:\n\n"},{"type":"text","text":"1. Environment Setup & Configuration:","style":{"bold":true}},{"type":"text","text":"\n\n*   "},{"type":"text","text":"Android Emulator:","style":{"bold":true}},{"type":"text","text":" If you're using an Android Emulator, ensure your Run Configuration has the "},{"type":"text","text":"$ANDROID_HOME","style":{"code":true}},{"type":"text","text":" environment variable set and included in the path (Source: "},{"type":"link","url":"https://paramount.atlassian.net/wiki/spaces/PLQA/pages/47713566"},{"type":"text","text":"). *   "},{"type":"text","text":"Appium Server:","style":{"bold":true}},{"type":"text","text":" Your test class should be set up to start and stop the Appium server. A "},{"type":"text","text":"SampleTest.java","style":{"code":true}},{"type":"text","text":" class is mentioned as an example, using "},{"type":"text","text":"@BeforeSuite","style":{"code":true}},{"type":"text","text":" to instantiate the Web or Mobile Driver and start Appium (Source: "},{"type":"link","url":"https://paramount.atlassian.net/wiki/spaces/PLQA/pages/47711460"},{"type":"text","text":"). *   "},{"type":"text","text":"Synergy Server (if applicable):","style":{"bold":true}},{"type":"text","text":"\n    *   Connect to VPN: "},{"type":"link","url":"http://connect.cbsinteractive.com/VPNFT","text":"connect.cbsinteractive.com/VPNFT","style":{"code":true}},{"type":"text","text":" (Source: "},{"type":"link","url":"https://paramount.atlassian.net/wiki/spaces/PLQA/pages/47720266"},{"type":"text","text":"). *   Download and run the latest version of Synergy server's "},{"type":"text","text":".jar","style":{"code":true}},{"type":"text","text":" file (Websocket) (Source: "},{"type":"link","url":"https://paramount.atlassian.net/wiki/spaces/PLQA/pages/47720266"},{"type":"text","text":"). *   Update desired capabilities in the "},{"type":"text","text":".config","style":{"code":true}},{"type":"text","text":" file within the "},{"type":"text","text":"mqe-hob-mobile-tests","style":{"code":true}},{"type":"text","text":" directory. Key parameters include "},{"type":"text","text":"ServerURL","style":{"code":true}},{"type":"text","text":", "},{"type":"text","text":"Platform","style":{"code":true}},{"type":"text","text":" (set to "},{"type":"text","text":"ANDROID","style":{"code":true}},{"type":"text","text":"), "},{"type":"text","text":"Locale","style":{"code":true}},{"type":"text","text":", "},{"type":"text","text":"Environment","style":{"code":true}},{"type":"text","text":", "},{"type":"text","text":"MobileDeviceCategory","style":{"code":true}},{"type":"text","text":", "},{"type":"text","text":"DeviceStartOrientation","style":{"code":true}},{"type":"text","text":", "},{"type":"text","text":"AppBuildType","style":{"code":true}},{"type":"text","text":", "},{"type":"text","text":"DebugProxyPort","style":{"code":true}},{"type":"text","text":", and "},{"type":"text","text":"ClientID","style":{"code":true}},{"type":"text","text":" (Source: "},{"type":"link","url":"https://paramount.atlassian.net/wiki/spaces/PLQA/pages/47720266"},{"type":"text","text":"). "},{"type":"text","text":"2. Mobile Local Android Run Configuration Arguments (Source: ","style":{"bold":true}},{"type":"link","url":"https://paramount.atlassian.net/wiki/spaces/PLQA/pages/47711460","style":{"bold":true}},{"type":"text","text":"):","style":{"bold":true}},{"type":"text","text":"\n\nWhen running your tests, you'll typically pass arguments like these:\n\n*   "},{"type":"text","text":"-ea","style":{"code":true}},{"type":"text","text":"\n*   "},{"type":"text","text":"-Ddriver=android","style":{"code":true}},{"type":"text","text":"\n*   "},{"type":"text","text":"-DplatformName=Android","style":{"code":true}},{"type":"text","text":"\n*   "},{"type":"text","text":"-DplatformVersion=11.0","style":{"code":true}},{"type":"text","text":" (example version)\n*   "},{"type":"text","text":"-DdeviceName=\"Google Pixel 2XL\"","style":{"code":true}},{"type":"text","text":" (example device)\n*   "},{"type":"text","text":"-Denvironment=local","style":{"code":true}},{"type":"text","text":"\n*   "},{"type":"text","text":"-Dheadless=false","style":{"code":true}},{"type":"text","text":"\n*   "},{"type":"text","text":"-Dapp=\"/pathToPackage/mobile-8.0.44-210804410-3.5.25-paramountPlus-playStore-release.apk\"","style":{"code":true}},{"type":"text","text":" (path to your application package)\n*   "},{"type":"text","text":"-Dudid=set this if running on Real Mobile Device only","style":{"code":true}},{"type":"text","text":" (Unique Device Identifier for real devices)\n*   "},{"type":"text","text":"-DbundleId=set to override default setting","style":{"code":true}},{"type":"text","text":"\n\n"},{"type":"text","text":"3. Command to Run Android Test on Local (Source: ","style":{"bold":true}},{"type":"link","url":"https://paramount.atlassian.net/wiki/spaces/PLQA/pages/47720266","style":{"bold":true}},{"type":"text","text":"):","style":{"bold":true}},{"type":"text","text":"\n\nYou'll need to add "},{"type":"text","text":"debugdeviceid","style":{"code":true}},{"type":"text","text":" and "},{"type":"text","text":"clientid","style":{"code":true}},{"type":"text","text":" to run tests locally. To run from the terminal, use a command similar to this example:\n"},{"type":"text","text":"mvn clean test -pl mqe-hob-mobile-tests -am -Dgroups=Your test case number or tag","style":{"code":true}},{"type":"text","text":"\n\nAlternatively, you can run from the "},{"type":"text","text":"TestNGSuiteConfig.xml","style":{"code":true}},{"type":"text","text":" by navigating to the file and executing it. You'll specify the test case ID or tag name in the "},{"type":"text","text":"<include name=\"\" />","style":{"code":true}},{"type":"text","text":" section.\n\n"},{"type":"text","text":"(message continued in thread...)","style":{"italic":true}}]}]}]}}
2025-08-21 11:43:48,217 - slack_sdk.web.base_client - DEBUG - [base_client.py:255] - Sending a request - url: https://slack.com/api/chat.postMessage, query_params: {}, body_params: {}, files: {}, json_body: {'channel': 'D09A0LFHK8R', 'text': "_(part 2/2)_\n\n*Important Notes:*\n\n*   For Android Emulator, make sure your Run Config has the `$ANDROID_HOME` environment variable set and included in the path (Source: https://paramount.atlassian.net/wiki/spaces/PLQA/pages/47713566). *   If running on a real device, you need to add the device's IP address to `DebugDeviceID` in the configuration (Source: https://paramount.atlassian.net/wiki/spaces/PLQA/pages/47720266). *   Your test class should handle starting and stopping the Appium server and Android Emulator (Source: https://paramount.atlassian.net/wiki/spaces/PLQA/pages/47711460). ─────────────────────────────\n_Powered by DIG AI Platform_", 'thread_ts': '1755801813.351409', 'team_id': 'T010QS7UQNA'}, headers: {'Content-Type': 'application/json;charset=utf-8', 'Authorization': '(redacted)', 'User-Agent': 'Python/3.12.0 slackclient/3.34.0 Darwin/23.4.0'}
2025-08-21 11:43:48,599 - slack_sdk.web.base_client - DEBUG - [base_client.py:546] - Received the following response - status: 200, headers: {'date': 'Thu, 21 Aug 2025 18:43:48 GMT', 'server': 'Apache', 'vary': 'Accept-Encoding', 'x-slack-req-id': 'f16e85308d34de1aa34519bb73462114', 'x-content-type-options': 'nosniff', 'x-xss-protection': '0', 'pragma': 'no-cache', 'cache-control': 'private, no-cache, no-store, must-revalidate', 'expires': 'Sat, 26 Jul 1997 05:00:00 GMT', 'content-type': 'application/json; charset=utf-8', 'x-accepted-oauth-scopes': 'chat:write', 'x-oauth-scopes': 'app_mentions:read,channels:history,chat:write,im:history,im:read,im:write,users:read,reactions:write,users:read.email', 'access-control-expose-headers': 'x-slack-req-id, retry-after', 'access-control-allow-headers': 'slack-route, x-slack-version-ts, x-b3-traceid, x-b3-spanid, x-b3-parentspanid, x-b3-sampled, x-b3-flags', 'strict-transport-security': 'max-age=31536000; includeSubDomains; preload', 'referrer-policy': 'no-referrer', 'x-slack-unique-id': 'aKdo5FD8xuuMoOJu5kt7sAAAAC4', 'x-slack-backend': 'r', 'access-control-allow-origin': '*', 'content-length': '2692', 'via': '1.1 slack-prod.tinyspeck.com, envoy-www-iad-fntojmfk,envoy-edge-pdx-sqjmrtwy', 'x-envoy-attempt-count': '1', 'x-envoy-upstream-service-time': '157', 'x-backend': 'main_normal main_canary_with_overflow main_control_with_overflow', 'x-server': 'slack-www-hhvm-control-main-iad-nhjg', 'x-slack-shared-secret-outcome': 'no-match', 'x-edge-backend': 'envoy-www', 'timing-allow-origin': '*', 'x-slack-edge-shared-secret-outcome': 'no-match', 'connection': 'close'}, body: {"ok":true,"channel":"D09A0LFHK8R","ts":"1755801828.606249","message":{"user":"U099R6WTZ9S","type":"message","ts":"1755801828.606249","bot_id":"B099R6WTRU4","app_id":"A099LACAB2R","text":"_(part 2/2)_\n\n*Important Notes:*\n\n*   For Android Emulator, make sure your Run Config has the `$ANDROID_HOME` environment variable set and included in the path (Source: <https://paramount.atlassian.net/wiki/spaces/PLQA/pages/47713566>). *   If running on a real device, you need to add the device's IP address to `DebugDeviceID` in the configuration (Source: <https://paramount.atlassian.net/wiki/spaces/PLQA/pages/47720266>). *   Your test class should handle starting and stopping the Appium server and Android Emulator (Source: <https://paramount.atlassian.net/wiki/spaces/PLQA/pages/47711460>). ─────────────────────────────\n_Powered by DIG AI Platform_","team":"T010QS7UQNA","bot_profile":{"id":"B099R6WTRU4","app_id":"A099LACAB2R","user_id":"U099R6WTZ9S","name":"AutoBot","icons":{"image_36":"https://a.slack-edge.com/80588/img/plugins/app/bot_36.png","image_48":"https://a.slack-edge.com/80588/img/plugins/app/bot_48.png","image_72":"https://a.slack-edge.com/80588/img/plugins/app/service_72.png"},"deleted":false,"updated":1754677948,"team_id":"T010QS7UQNA"},"thread_ts":"1755801813.351409","parent_user_id":"U01RMTFMALF","blocks":[{"type":"rich_text","block_id":"b8+5","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"(part 2/2)","style":{"italic":true}},{"type":"text","text":"\n\n"},{"type":"text","text":"Important Notes:","style":{"bold":true}},{"type":"text","text":"\n\n*   For Android Emulator, make sure your Run Config has the "},{"type":"text","text":"$ANDROID_HOME","style":{"code":true}},{"type":"text","text":" environment variable set and included in the path (Source: "},{"type":"link","url":"https://paramount.atlassian.net/wiki/spaces/PLQA/pages/47713566"},{"type":"text","text":"). *   If running on a real device, you need to add the device's IP address to "},{"type":"text","text":"DebugDeviceID","style":{"code":true}},{"type":"text","text":" in the configuration (Source: "},{"type":"link","url":"https://paramount.atlassian.net/wiki/spaces/PLQA/pages/47720266"},{"type":"text","text":"). *   Your test class should handle starting and stopping the Appium server and Android Emulator (Source: "},{"type":"link","url":"https://paramount.atlassian.net/wiki/spaces/PLQA/pages/47711460"},{"type":"text","text":"). ─────────────────────────────\n"},{"type":"text","text":"Powered by DIG AI Platform","style":{"italic":true}}]}]}]}}
2025-08-21 11:43:48,600 - __main__ - DEBUG - [main.py:556] - Cleaning up DM thread tracking...
2025-08-21 11:43:48,600 - utils - DEBUG - [utils.py:67] - Managing thread: D09A0LFHK8R:1755801813.351409, action: remove, user: U01RMTFMALF
2025-08-21 11:43:48,601 - utils - INFO - [utils.py:100] - Removed thread D09A0LFHK8R:1755801813.351409 from active tracking (remaining: 0)
2025-08-21 11:43:49,374 - slack_bolt.App - DEBUG - [client.py:235] - on_message invoked: (message: {"envelope_id":"0fbb8df4-d896-4e77-9c48-2f47a112ad80","payload":{"token":"yq71khZBCyJF1Ri2hG5aNqr5","team_id":"T010QS7UQNA","enterprise_id":"ERV4P7NAD","context_team_id":null,"context_enterprise_id":"ERV4P7NAD","api_app_id":"A099LACAB2R","event":{"user":"U099R6WTZ9S","type":"message","ts":"1755801828.182269","bot_id":"B099R6WTRU4","app_id":"A099LACAB2R","text":"*:robot_face: AI Assistant Response*\n\n*Your Question:*\n&gt; How can i run an automated test on a local Android phone? *Answer:*\nTo run an automated test on a local Android phone, you'll need to configure your environment and use specific commands. Here's a breakdown of the steps and parameters involved, based on the provided documents:\n\n*1. Environment Setup &amp; Configuration:*\n\n*   *Android Emulator:* If you're using an Android Emulator, ensure your Run Configuration has the `$ANDROID_HOME` environment variable set and included in the path (Source: <https:\/\/paramount.atlassian.net\/wiki\/spaces\/PLQA\/pages\/47713566>). *   *Appium Server:* Your test class should be set up to start and stop the Appium server. A `SampleTest.java` class is mentioned as an example, using `@BeforeSuite` to instantiate the Web or Mobile Driver and start Appium (Source: <https:\/\/paramount.atlassian.net\/wiki\/spaces\/PLQA\/pages\/47711460>). *   *Synergy Server (if applicable):*\n    *   Connect to VPN: `<http:\/\/connect.cbsinteractive.com\/VPNFT|connect.cbsinteractive.com\/VPNFT>` (Source: <https:\/\/paramount.atlassian.net\/wiki\/spaces\/PLQA\/pages\/47720266>). *   Download and run the latest version of Synergy server's `.jar` file (Websocket) (Source: <https:\/\/paramount.atlassian.net\/wiki\/spaces\/PLQA\/pages\/47720266>). *   Update desired capabilities in the `.config` file within the `mqe-hob-mobile-tests` directory. Key parameters include `ServerURL`, `Platform` (set to `ANDROID`), `Locale`, `Environment`, `MobileDeviceCategory`, `DeviceStartOrientation`, `AppBuildType`, `DebugProxyPort`, and `ClientID` (Source: <https:\/\/paramount.atlassian.net\/wiki\/spaces\/PLQA\/pages\/47720266>). *2. Mobile Local Android Run Configuration Arguments (Source: <https:\/\/paramount.atlassian.net\/wiki\/spaces\/PLQA\/pages\/47711460>):*\n\nWhen running your tests, you'll typically pass arguments like these:\n\n*   `-ea`\n*   `-Ddriver=android`\n*   `-DplatformName=Android`\n*   `-DplatformVersion=11.0` (example version)\n*   `-DdeviceName=\"Google Pixel 2XL\"` (example device)\n*   `-Denvironment=local`\n*   `-Dheadless=false`\n*   `-Dapp=\"\/pathToPackage\/mobile-8.0.44-210804410-3.5.25-paramountPlus-playStore-release.apk\"` (path to your application package)\n*   `-Dudid=set this if running on Real Mobile Device only` (Unique Device Identifier for real devices)\n*   `-DbundleId=set to override default setting`\n\n*3. Command to Run Android Test on Local (Source: <https:\/\/paramount.atlassian.net\/wiki\/spaces\/PLQA\/pages\/47720266>):*\n\nYou'll need to add `debugdeviceid` and `clientid` to run tests locally. To run from the terminal, use a command similar to this example:\n`mvn clean test -pl mqe-hob-mobile-tests -am -Dgroups=Your test case number or tag`\n\nAlternatively, you can run from the `TestNGSuiteConfig.xml` by navigating to the file and executing it. You'll specify the test case ID or tag name in the `&lt;include name=\"\" \/&gt;` section.\n\n_(message continued in thread...)_","team":"T010QS7UQNA","bot_profile":{"id":"B099R6WTRU4","deleted":false,"name":"AutoBot","updated":1754677948,"app_id":"A099LACAB2R","user_id":"U099R6WTZ9S","icons":{"image_36":"https:\/\/a.slack-edge.com\/80588\/img\/plugins\/app\/bot_36.png","image_48":"https:\/\/a.slack-edge.com\/80588\/img\/plugins\/app\/bot_48.png","image_72":"https:\/\/a.slack-edge.com\/80588\/img\/plugins\/app\/service_72.png"},"team_id":"T010QS7UQNA"},"thread_ts":"1755801813.351409","parent_user_id":"U01RMTFMALF","blocks":[{"type":"rich_text","block_id":"=DNEj","elements":[{"type":"rich_text_section","elements":[{"type":"emoji","name":"robot_face","unicode":"1f916","style":{"bold":true}},{"type":"text","text":" AI Assistant Response","style":{"bold":true}},{"type":"text","text":"\n\n"},{"type":"text","text":"Your Question:","style":{"bold":true}}]},{"type":"rich_text_quote","elements":[{"type":"text","text":"How can i run an automated test on a local Android phone? "},{"type":"text","text":"Answer:","style":{"bold":true}}]},{"type":"rich_text_section","elements":[{"type":"text","text":"To run an automated test on a local Android phone, you'll need to configure your environment and use specific commands. Here's a breakdown of the steps and parameters involved, based on the provided documents:\n\n"},{"type":"text","text":"1. Environment Setup & Configuration:","style":{"bold":true}},{"type":"text","text":"\n\n*   "},{"type":"text","text":"Android Emulator:","style":{"bold":true}},{"type":"text","text":" If you're using an Android Emulator, ensure your Run Configuration has the "},{"type":"text","text":"$ANDROID_HOME","style":{"code":true}},{"type":"text","text":" environment variable set and included in the path (Source: "},{"type":"link","url":"https:\/\/paramount.atlassian.net\/wiki\/spaces\/PLQA\/pages\/47713566"},{"type":"text","text":"). *   "},{"type":"text","text":"Appium Server:","style":{"bold":true}},{"type":"text","text":" Your test class should be set up to start and stop the Appium server. A "},{"type":"text","text":"SampleTest.java","style":{"code":true}},{"type":"text","text":" class is mentioned as an example, using "},{"type":"text","text":"@BeforeSuite","style":{"code":true}},{"type":"text","text":" to instantiate the Web or Mobile Driver and start Appium (Source: "},{"type":"link","url":"https:\/\/paramount.atlassian.net\/wiki\/spaces\/PLQA\/pages\/47711460"},{"type":"text","text":"). *   "},{"type":"text","text":"Synergy Server (if applicable):","style":{"bold":true}},{"type":"text","text":"\n    *   Connect to VPN: "},{"type":"link","url":"http:\/\/connect.cbsinteractive.com\/VPNFT","text":"connect.cbsinteractive.com\/VPNFT","style":{"code":true}},{"type":"text","text":" (Source: "},{"type":"link","url":"https:\/\/paramount.atlassian.net\/wiki\/spaces\/PLQA\/pages\/47720266"},{"type":"text","text":"). *   Download and run the latest version of Synergy server's "},{"type":"text","text":".jar","style":{"code":true}},{"type":"text","text":" file (Websocket) (Source: "},{"type":"link","url":"https:\/\/paramount.atlassian.net\/wiki\/spaces\/PLQA\/pages\/47720266"},{"type":"text","text":"). *   Update desired capabilities in the "},{"type":"text","text":".config","style":{"code":true}},{"type":"text","text":" file within the "},{"type":"text","text":"mqe-hob-mobile-tests","style":{"code":true}},{"type":"text","text":" directory. Key parameters include "},{"type":"text","text":"ServerURL","style":{"code":true}},{"type":"text","text":", "},{"type":"text","text":"Platform","style":{"code":true}},{"type":"text","text":" (set to "},{"type":"text","text":"ANDROID","style":{"code":true}},{"type":"text","text":"), "},{"type":"text","text":"Locale","style":{"code":true}},{"type":"text","text":", "},{"type":"text","text":"Environment","style":{"code":true}},{"type":"text","text":", "},{"type":"text","text":"MobileDeviceCategory","style":{"code":true}},{"type":"text","text":", "},{"type":"text","text":"DeviceStartOrientation","style":{"code":true}},{"type":"text","text":", "},{"type":"text","text":"AppBuildType","style":{"code":true}},{"type":"text","text":", "},{"type":"text","text":"DebugProxyPort","style":{"code":true}},{"type":"text","text":", and "},{"type":"text","text":"ClientID","style":{"code":true}},{"type":"text","text":" (Source: "},{"type":"link","url":"https:\/\/paramount.atlassian.net\/wiki\/spaces\/PLQA\/pages\/47720266"},{"type":"text","text":"). "},{"type":"text","text":"2. Mobile Local Android Run Configuration Arguments (Source: ","style":{"bold":true}},{"type":"link","url":"https:\/\/paramount.atlassian.net\/wiki\/spaces\/PLQA\/pages\/47711460","style":{"bold":true}},{"type":"text","text":"):","style":{"bold":true}},{"type":"text","text":"\n\nWhen running your tests, you'll typically pass arguments like these:\n\n*   "},{"type":"text","text":"-ea","style":{"code":true}},{"type":"text","text":"\n*   "},{"type":"text","text":"-Ddriver=android","style":{"code":true}},{"type":"text","text":"\n*   "},{"type":"text","text":"-DplatformName=Android","style":{"code":true}},{"type":"text","text":"\n*   "},{"type":"text","text":"-DplatformVersion=11.0","style":{"code":true}},{"type":"text","text":" (example version)\n*   "},{"type":"text","text":"-DdeviceName=\"Google Pixel 2XL\"","style":{"code":true}},{"type":"text","text":" (example device)\n*   "},{"type":"text","text":"-Denvironment=local","style":{"code":true}},{"type":"text","text":"\n*   "},{"type":"text","text":"-Dheadless=false","style":{"code":true}},{"type":"text","text":"\n*   "},{"type":"text","text":"-Dapp=\"\/pathToPackage\/mobile-8.0.44-210804410-3.5.25-paramountPlus-playStore-release.apk\"","style":{"code":true}},{"type":"text","text":" (path to your application package)\n*   "},{"type":"text","text":"-Dudid=set this if running on Real Mobile Device only","style":{"code":true}},{"type":"text","text":" (Unique Device Identifier for real devices)\n*   "},{"type":"text","text":"-DbundleId=set to override default setting","style":{"code":true}},{"type":"text","text":"\n\n"},{"type":"text","text":"3. Command to Run Android Test on Local (Source: ","style":{"bold":true}},{"type":"link","url":"https:\/\/paramount.atlassian.net\/wiki\/spaces\/PLQA\/pages\/47720266","style":{"bold":true}},{"type":"text","text":"):","style":{"bold":true}},{"type":"text","text":"\n\nYou'll need to add "},{"type":"text","text":"debugdeviceid","style":{"code":true}},{"type":"text","text":" and "},{"type":"text","text":"clientid","style":{"code":true}},{"type":"text","text":" to run tests locally. To run from the terminal, use a command similar to this example:\n"},{"type":"text","text":"mvn clean test -pl mqe-hob-mobile-tests -am -Dgroups=Your test case number or tag","style":{"code":true}},{"type":"text","text":"\n\nAlternatively, you can run from the "},{"type":"text","text":"TestNGSuiteConfig.xml","style":{"code":true}},{"type":"text","text":" by navigating to the file and executing it. You'll specify the test case ID or tag name in the "},{"type":"text","text":"<include name=\"\" \/>","style":{"code":true}},{"type":"text","text":" section.\n\n"},{"type":"text","text":"(message continued in thread...)","style":{"italic":true}}]}]}],"channel":"D09A0LFHK8R","event_ts":"1755801828.182269","channel_type":"im"},"type":"event_callback","event_id":"Ev09BVK5KTT3","event_time":1755801828,"authorizations":[{"enterprise_id":"ERV4P7NAD","team_id":"T010QS7UQNA","user_id":"U099R6WTZ9S","is_bot":true,"is_enterprise_install":false}],"is_ext_shared_channel":false,"event_context":"4-eyJldCI6Im1lc3NhZ2UiLCJ0aWQiOiJUMDEwUVM3VVFOQSIsImFpZCI6IkEwOTlMQUNBQjJSIiwiY2lkIjoiRDA5QTBMRkhLOFIifQ"},"type":"events_api","accepts_response_payload":false,"retry_attempt":0,"retry_reason":""})
2025-08-21 11:43:49,376 - slack_bolt.App - DEBUG - [client.py:99] - A new message enqueued (current queue size: 1)
2025-08-21 11:43:49,376 - slack_bolt.App - DEBUG - [client.py:105] - A message dequeued (current queue size: 0)
2025-08-21 11:43:49,377 - slack_bolt.App - DEBUG - [client.py:125] - Message processing started (type: events_api, envelope_id: 0fbb8df4-d896-4e77-9c48-2f47a112ad80)
2025-08-21 11:43:49,377 - slack_bolt.App - DEBUG - [app.py:476] - Applying slack_bolt.middleware.ssl_check.ssl_check.SslCheck
2025-08-21 11:43:49,377 - slack_bolt.App - DEBUG - [app.py:476] - Applying slack_bolt.middleware.request_verification.request_verification.RequestVerification
2025-08-21 11:43:49,377 - slack_bolt.App - DEBUG - [app.py:476] - Applying slack_bolt.middleware.authorization.single_team_authorization.SingleTeamAuthorization
2025-08-21 11:43:49,377 - slack_bolt.App - DEBUG - [app.py:476] - Applying slack_bolt.middleware.ignoring_self_events.ignoring_self_events.IgnoringSelfEvents
2025-08-21 11:43:49,378 - slack_bolt.IgnoringSelfEvents - DEBUG - [ignoring_self_events.py:60] - Skipped self event: {'user': 'U099R6WTZ9S', 'type': 'message', 'ts': '1755801828.182269', 'bot_id': 'B099R6WTRU4', 'app_id': 'A099LACAB2R', 'text': '*:robot_face: AI Assistant Response*\n\n*Your Question:*\n&gt; How can i run an automated test on a local Android phone? *Answer:*\nTo run an automated test on a local Android phone, you\'ll need to configure your environment and use specific commands. Here\'s a breakdown of the steps and parameters involved, based on the provided documents:\n\n*1. Environment Setup &amp; Configuration:*\n\n*   *Android Emulator:* If you\'re using an Android Emulator, ensure your Run Configuration has the `$ANDROID_HOME` environment variable set and included in the path (Source: <https://paramount.atlassian.net/wiki/spaces/PLQA/pages/47713566>). *   *Appium Server:* Your test class should be set up to start and stop the Appium server. A `SampleTest.java` class is mentioned as an example, using `@BeforeSuite` to instantiate the Web or Mobile Driver and start Appium (Source: <https://paramount.atlassian.net/wiki/spaces/PLQA/pages/47711460>). *   *Synergy Server (if applicable):*\n    *   Connect to VPN: `<http://connect.cbsinteractive.com/VPNFT|connect.cbsinteractive.com/VPNFT>` (Source: <https://paramount.atlassian.net/wiki/spaces/PLQA/pages/47720266>). *   Download and run the latest version of Synergy server\'s `.jar` file (Websocket) (Source: <https://paramount.atlassian.net/wiki/spaces/PLQA/pages/47720266>). *   Update desired capabilities in the `.config` file within the `mqe-hob-mobile-tests` directory. Key parameters include `ServerURL`, `Platform` (set to `ANDROID`), `Locale`, `Environment`, `MobileDeviceCategory`, `DeviceStartOrientation`, `AppBuildType`, `DebugProxyPort`, and `ClientID` (Source: <https://paramount.atlassian.net/wiki/spaces/PLQA/pages/47720266>). *2. Mobile Local Android Run Configuration Arguments (Source: <https://paramount.atlassian.net/wiki/spaces/PLQA/pages/47711460>):*\n\nWhen running your tests, you\'ll typically pass arguments like these:\n\n*   `-ea`\n*   `-Ddriver=android`\n*   `-DplatformName=Android`\n*   `-DplatformVersion=11.0` (example version)\n*   `-DdeviceName="Google Pixel 2XL"` (example device)\n*   `-Denvironment=local`\n*   `-Dheadless=false`\n*   `-Dapp="/pathToPackage/mobile-8.0.44-210804410-3.5.25-paramountPlus-playStore-release.apk"` (path to your application package)\n*   `-Dudid=set this if running on Real Mobile Device only` (Unique Device Identifier for real devices)\n*   `-DbundleId=set to override default setting`\n\n*3. Command to Run Android Test on Local (Source: <https://paramount.atlassian.net/wiki/spaces/PLQA/pages/47720266>):*\n\nYou\'ll need to add `debugdeviceid` and `clientid` to run tests locally. To run from the terminal, use a command similar to this example:\n`mvn clean test -pl mqe-hob-mobile-tests -am -Dgroups=Your test case number or tag`\n\nAlternatively, you can run from the `TestNGSuiteConfig.xml` by navigating to the file and executing it. You\'ll specify the test case ID or tag name in the `&lt;include name="" /&gt;` section.\n\n_(message continued in thread...)_', 'team': 'T010QS7UQNA', 'bot_profile': {'id': 'B099R6WTRU4', 'deleted': False, 'name': 'AutoBot', 'updated': 1754677948, 'app_id': 'A099LACAB2R', 'user_id': 'U099R6WTZ9S', 'icons': {'image_36': 'https://a.slack-edge.com/80588/img/plugins/app/bot_36.png', 'image_48': 'https://a.slack-edge.com/80588/img/plugins/app/bot_48.png', 'image_72': 'https://a.slack-edge.com/80588/img/plugins/app/service_72.png'}, 'team_id': 'T010QS7UQNA'}, 'thread_ts': '1755801813.351409', 'parent_user_id': 'U01RMTFMALF', 'blocks': [{'type': 'rich_text', 'block_id': '=DNEj', 'elements': [{'type': 'rich_text_section', 'elements': [{'type': 'emoji', 'name': 'robot_face', 'unicode': '1f916', 'style': {'bold': True}}, {'type': 'text', 'text': ' AI Assistant Response', 'style': {'bold': True}}, {'type': 'text', 'text': '\n\n'}, {'type': 'text', 'text': 'Your Question:', 'style': {'bold': True}}]}, {'type': 'rich_text_quote', 'elements': [{'type': 'text', 'text': 'How can i run an automated test on a local Android phone? '}, {'type': 'text', 'text': 'Answer:', 'style': {'bold': True}}]}, {'type': 'rich_text_section', 'elements': [{'type': 'text', 'text': "To run an automated test on a local Android phone, you'll need to configure your environment and use specific commands. Here's a breakdown of the steps and parameters involved, based on the provided documents:\n\n"}, {'type': 'text', 'text': '1. Environment Setup & Configuration:', 'style': {'bold': True}}, {'type': 'text', 'text': '\n\n*   '}, {'type': 'text', 'text': 'Android Emulator:', 'style': {'bold': True}}, {'type': 'text', 'text': " If you're using an Android Emulator, ensure your Run Configuration has the "}, {'type': 'text', 'text': '$ANDROID_HOME', 'style': {'code': True}}, {'type': 'text', 'text': ' environment variable set and included in the path (Source: '}, {'type': 'link', 'url': 'https://paramount.atlassian.net/wiki/spaces/PLQA/pages/47713566'}, {'type': 'text', 'text': '). *   '}, {'type': 'text', 'text': 'Appium Server:', 'style': {'bold': True}}, {'type': 'text', 'text': ' Your test class should be set up to start and stop the Appium server. A '}, {'type': 'text', 'text': 'SampleTest.java', 'style': {'code': True}}, {'type': 'text', 'text': ' class is mentioned as an example, using '}, {'type': 'text', 'text': '@BeforeSuite', 'style': {'code': True}}, {'type': 'text', 'text': ' to instantiate the Web or Mobile Driver and start Appium (Source: '}, {'type': 'link', 'url': 'https://paramount.atlassian.net/wiki/spaces/PLQA/pages/47711460'}, {'type': 'text', 'text': '). *   '}, {'type': 'text', 'text': 'Synergy Server (if applicable):', 'style': {'bold': True}}, {'type': 'text', 'text': '\n    *   Connect to VPN: '}, {'type': 'link', 'url': 'http://connect.cbsinteractive.com/VPNFT', 'text': 'connect.cbsinteractive.com/VPNFT', 'style': {'code': True}}, {'type': 'text', 'text': ' (Source: '}, {'type': 'link', 'url': 'https://paramount.atlassian.net/wiki/spaces/PLQA/pages/47720266'}, {'type': 'text', 'text': "). *   Download and run the latest version of Synergy server's "}, {'type': 'text', 'text': '.jar', 'style': {'code': True}}, {'type': 'text', 'text': ' file (Websocket) (Source: '}, {'type': 'link', 'url': 'https://paramount.atlassian.net/wiki/spaces/PLQA/pages/47720266'}, {'type': 'text', 'text': '). *   Update desired capabilities in the '}, {'type': 'text', 'text': '.config', 'style': {'code': True}}, {'type': 'text', 'text': ' file within the '}, {'type': 'text', 'text': 'mqe-hob-mobile-tests', 'style': {'code': True}}, {'type': 'text', 'text': ' directory. Key parameters include '}, {'type': 'text', 'text': 'ServerURL', 'style': {'code': True}}, {'type': 'text', 'text': ', '}, {'type': 'text', 'text': 'Platform', 'style': {'code': True}}, {'type': 'text', 'text': ' (set to '}, {'type': 'text', 'text': 'ANDROID', 'style': {'code': True}}, {'type': 'text', 'text': '), '}, {'type': 'text', 'text': 'Locale', 'style': {'code': True}}, {'type': 'text', 'text': ', '}, {'type': 'text', 'text': 'Environment', 'style': {'code': True}}, {'type': 'text', 'text': ', '}, {'type': 'text', 'text': 'MobileDeviceCategory', 'style': {'code': True}}, {'type': 'text', 'text': ', '}, {'type': 'text', 'text': 'DeviceStartOrientation', 'style': {'code': True}}, {'type': 'text', 'text': ', '}, {'type': 'text', 'text': 'AppBuildType', 'style': {'code': True}}, {'type': 'text', 'text': ', '}, {'type': 'text', 'text': 'DebugProxyPort', 'style': {'code': True}}, {'type': 'text', 'text': ', and '}, {'type': 'text', 'text': 'ClientID', 'style': {'code': True}}, {'type': 'text', 'text': ' (Source: '}, {'type': 'link', 'url': 'https://paramount.atlassian.net/wiki/spaces/PLQA/pages/47720266'}, {'type': 'text', 'text': '). '}, {'type': 'text', 'text': '2. Mobile Local Android Run Configuration Arguments (Source: ', 'style': {'bold': True}}, {'type': 'link', 'url': 'https://paramount.atlassian.net/wiki/spaces/PLQA/pages/47711460', 'style': {'bold': True}}, {'type': 'text', 'text': '):', 'style': {'bold': True}}, {'type': 'text', 'text': "\n\nWhen running your tests, you'll typically pass arguments like these:\n\n*   "}, {'type': 'text', 'text': '-ea', 'style': {'code': True}}, {'type': 'text', 'text': '\n*   '}, {'type': 'text', 'text': '-Ddriver=android', 'style': {'code': True}}, {'type': 'text', 'text': '\n*   '}, {'type': 'text', 'text': '-DplatformName=Android', 'style': {'code': True}}, {'type': 'text', 'text': '\n*   '}, {'type': 'text', 'text': '-DplatformVersion=11.0', 'style': {'code': True}}, {'type': 'text', 'text': ' (example version)\n*   '}, {'type': 'text', 'text': '-DdeviceName="Google Pixel 2XL"', 'style': {'code': True}}, {'type': 'text', 'text': ' (example device)\n*   '}, {'type': 'text', 'text': '-Denvironment=local', 'style': {'code': True}}, {'type': 'text', 'text': '\n*   '}, {'type': 'text', 'text': '-Dheadless=false', 'style': {'code': True}}, {'type': 'text', 'text': '\n*   '}, {'type': 'text', 'text': '-Dapp="/pathToPackage/mobile-8.0.44-210804410-3.5.25-paramountPlus-playStore-release.apk"', 'style': {'code': True}}, {'type': 'text', 'text': ' (path to your application package)\n*   '}, {'type': 'text', 'text': '-Dudid=set this if running on Real Mobile Device only', 'style': {'code': True}}, {'type': 'text', 'text': ' (Unique Device Identifier for real devices)\n*   '}, {'type': 'text', 'text': '-DbundleId=set to override default setting', 'style': {'code': True}}, {'type': 'text', 'text': '\n\n'}, {'type': 'text', 'text': '3. Command to Run Android Test on Local (Source: ', 'style': {'bold': True}}, {'type': 'link', 'url': 'https://paramount.atlassian.net/wiki/spaces/PLQA/pages/47720266', 'style': {'bold': True}}, {'type': 'text', 'text': '):', 'style': {'bold': True}}, {'type': 'text', 'text': "\n\nYou'll need to add "}, {'type': 'text', 'text': 'debugdeviceid', 'style': {'code': True}}, {'type': 'text', 'text': ' and '}, {'type': 'text', 'text': 'clientid', 'style': {'code': True}}, {'type': 'text', 'text': ' to run tests locally. To run from the terminal, use a command similar to this example:\n'}, {'type': 'text', 'text': 'mvn clean test -pl mqe-hob-mobile-tests -am -Dgroups=Your test case number or tag', 'style': {'code': True}}, {'type': 'text', 'text': '\n\nAlternatively, you can run from the '}, {'type': 'text', 'text': 'TestNGSuiteConfig.xml', 'style': {'code': True}}, {'type': 'text', 'text': " by navigating to the file and executing it. You'll specify the test case ID or tag name in the "}, {'type': 'text', 'text': '<include name="" />', 'style': {'code': True}}, {'type': 'text', 'text': ' section.\n\n'}, {'type': 'text', 'text': '(message continued in thread...)', 'style': {'italic': True}}]}]}], 'channel': 'D09A0LFHK8R', 'event_ts': '1755801828.182269', 'channel_type': 'im'}
2025-08-21 11:43:49,378 - slack_bolt.App - DEBUG - [client.py:200] - Sending a message (session id: 69149a69-a7e3-483f-8c0d-bc9bf7179cfa, message: {"envelope_id": "0fbb8df4-d896-4e77-9c48-2f47a112ad80"})
2025-08-21 11:43:49,379 - slack_bolt.App - DEBUG - [internals.py:41] - Response time: 1 milliseconds
2025-08-21 11:43:49,379 - slack_bolt.App - DEBUG - [client.py:150] - Message processing completed (type: events_api, envelope_id: 0fbb8df4-d896-4e77-9c48-2f47a112ad80)
2025-08-21 11:44:04,308 - slack_bolt.App - DEBUG - [client.py:235] - on_message invoked: (message: {"envelope_id":"51894a89-31dd-4bb8-822a-978154f390ef","payload":{"token":"yq71khZBCyJF1Ri2hG5aNqr5","team_id":"T010QS7UQNA","enterprise_id":"ERV4P7NAD","context_team_id":null,"context_enterprise_id":"ERV4P7NAD","api_app_id":"A099LACAB2R","event":{"user":"U099R6WTZ9S","type":"message","ts":"1755801828.606249","bot_id":"B099R6WTRU4","app_id":"A099LACAB2R","text":"_(part 2\/2)_\n\n*Important Notes:*\n\n*   For Android Emulator, make sure your Run Config has the `$ANDROID_HOME` environment variable set and included in the path (Source: <https:\/\/paramount.atlassian.net\/wiki\/spaces\/PLQA\/pages\/47713566>). *   If running on a real device, you need to add the device's IP address to `DebugDeviceID` in the configuration (Source: <https:\/\/paramount.atlassian.net\/wiki\/spaces\/PLQA\/pages\/47720266>). *   Your test class should handle starting and stopping the Appium server and Android Emulator (Source: <https:\/\/paramount.atlassian.net\/wiki\/spaces\/PLQA\/pages\/47711460>). \u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\n_Powered by DIG AI Platform_","team":"T010QS7UQNA","bot_profile":{"id":"B099R6WTRU4","deleted":false,"name":"AutoBot","updated":1754677948,"app_id":"A099LACAB2R","user_id":"U099R6WTZ9S","icons":{"image_36":"https:\/\/a.slack-edge.com\/80588\/img\/plugins\/app\/bot_36.png","image_48":"https:\/\/a.slack-edge.com\/80588\/img\/plugins\/app\/bot_48.png","image_72":"https:\/\/a.slack-edge.com\/80588\/img\/plugins\/app\/service_72.png"},"team_id":"T010QS7UQNA"},"thread_ts":"1755801813.351409","parent_user_id":"U01RMTFMALF","blocks":[{"type":"rich_text","block_id":"NwZ","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"(part 2\/2)","style":{"italic":true}},{"type":"text","text":"\n\n"},{"type":"text","text":"Important Notes:","style":{"bold":true}},{"type":"text","text":"\n\n*   For Android Emulator, make sure your Run Config has the "},{"type":"text","text":"$ANDROID_HOME","style":{"code":true}},{"type":"text","text":" environment variable set and included in the path (Source: "},{"type":"link","url":"https:\/\/paramount.atlassian.net\/wiki\/spaces\/PLQA\/pages\/47713566"},{"type":"text","text":"). *   If running on a real device, you need to add the device's IP address to "},{"type":"text","text":"DebugDeviceID","style":{"code":true}},{"type":"text","text":" in the configuration (Source: "},{"type":"link","url":"https:\/\/paramount.atlassian.net\/wiki\/spaces\/PLQA\/pages\/47720266"},{"type":"text","text":"). *   Your test class should handle starting and stopping the Appium server and Android Emulator (Source: "},{"type":"link","url":"https:\/\/paramount.atlassian.net\/wiki\/spaces\/PLQA\/pages\/47711460"},{"type":"text","text":"). \u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\n"},{"type":"text","text":"Powered by DIG AI Platform","style":{"italic":true}}]}]}],"channel":"D09A0LFHK8R","event_ts":"1755801828.606249","channel_type":"im"},"type":"event_callback","event_id":"Ev09BJ3RV54N","event_time":1755801828,"authorizations":[{"enterprise_id":"ERV4P7NAD","team_id":"T010QS7UQNA","user_id":"U099R6WTZ9S","is_bot":true,"is_enterprise_install":false}],"is_ext_shared_channel":false,"event_context":"4-eyJldCI6Im1lc3NhZ2UiLCJ0aWQiOiJUMDEwUVM3VVFOQSIsImFpZCI6IkEwOTlMQUNBQjJSIiwiY2lkIjoiRDA5QTBMRkhLOFIifQ"},"type":"events_api","accepts_response_payload":false,"retry_attempt":0,"retry_reason":""})
2025-08-21 11:44:04,309 - slack_bolt.App - DEBUG - [client.py:99] - A new message enqueued (current queue size: 1)
2025-08-21 11:44:04,309 - slack_bolt.App - DEBUG - [client.py:105] - A message dequeued (current queue size: 0)
2025-08-21 11:44:04,310 - slack_bolt.App - DEBUG - [client.py:125] - Message processing started (type: events_api, envelope_id: 51894a89-31dd-4bb8-822a-978154f390ef)
2025-08-21 11:44:04,311 - slack_bolt.App - DEBUG - [app.py:476] - Applying slack_bolt.middleware.ssl_check.ssl_check.SslCheck
2025-08-21 11:44:04,311 - slack_bolt.App - DEBUG - [app.py:476] - Applying slack_bolt.middleware.request_verification.request_verification.RequestVerification
2025-08-21 11:44:04,311 - slack_bolt.App - DEBUG - [app.py:476] - Applying slack_bolt.middleware.authorization.single_team_authorization.SingleTeamAuthorization
2025-08-21 11:44:04,311 - slack_bolt.App - DEBUG - [app.py:476] - Applying slack_bolt.middleware.ignoring_self_events.ignoring_self_events.IgnoringSelfEvents
2025-08-21 11:44:04,311 - slack_bolt.IgnoringSelfEvents - DEBUG - [ignoring_self_events.py:60] - Skipped self event: {'user': 'U099R6WTZ9S', 'type': 'message', 'ts': '1755801828.606249', 'bot_id': 'B099R6WTRU4', 'app_id': 'A099LACAB2R', 'text': "_(part 2/2)_\n\n*Important Notes:*\n\n*   For Android Emulator, make sure your Run Config has the `$ANDROID_HOME` environment variable set and included in the path (Source: <https://paramount.atlassian.net/wiki/spaces/PLQA/pages/47713566>). *   If running on a real device, you need to add the device's IP address to `DebugDeviceID` in the configuration (Source: <https://paramount.atlassian.net/wiki/spaces/PLQA/pages/47720266>). *   Your test class should handle starting and stopping the Appium server and Android Emulator (Source: <https://paramount.atlassian.net/wiki/spaces/PLQA/pages/47711460>). ─────────────────────────────\n_Powered by DIG AI Platform_", 'team': 'T010QS7UQNA', 'bot_profile': {'id': 'B099R6WTRU4', 'deleted': False, 'name': 'AutoBot', 'updated': 1754677948, 'app_id': 'A099LACAB2R', 'user_id': 'U099R6WTZ9S', 'icons': {'image_36': 'https://a.slack-edge.com/80588/img/plugins/app/bot_36.png', 'image_48': 'https://a.slack-edge.com/80588/img/plugins/app/bot_48.png', 'image_72': 'https://a.slack-edge.com/80588/img/plugins/app/service_72.png'}, 'team_id': 'T010QS7UQNA'}, 'thread_ts': '1755801813.351409', 'parent_user_id': 'U01RMTFMALF', 'blocks': [{'type': 'rich_text', 'block_id': 'NwZ', 'elements': [{'type': 'rich_text_section', 'elements': [{'type': 'text', 'text': '(part 2/2)', 'style': {'italic': True}}, {'type': 'text', 'text': '\n\n'}, {'type': 'text', 'text': 'Important Notes:', 'style': {'bold': True}}, {'type': 'text', 'text': '\n\n*   For Android Emulator, make sure your Run Config has the '}, {'type': 'text', 'text': '$ANDROID_HOME', 'style': {'code': True}}, {'type': 'text', 'text': ' environment variable set and included in the path (Source: '}, {'type': 'link', 'url': 'https://paramount.atlassian.net/wiki/spaces/PLQA/pages/47713566'}, {'type': 'text', 'text': "). *   If running on a real device, you need to add the device's IP address to "}, {'type': 'text', 'text': 'DebugDeviceID', 'style': {'code': True}}, {'type': 'text', 'text': ' in the configuration (Source: '}, {'type': 'link', 'url': 'https://paramount.atlassian.net/wiki/spaces/PLQA/pages/47720266'}, {'type': 'text', 'text': '). *   Your test class should handle starting and stopping the Appium server and Android Emulator (Source: '}, {'type': 'link', 'url': 'https://paramount.atlassian.net/wiki/spaces/PLQA/pages/47711460'}, {'type': 'text', 'text': '). ─────────────────────────────\n'}, {'type': 'text', 'text': 'Powered by DIG AI Platform', 'style': {'italic': True}}]}]}], 'channel': 'D09A0LFHK8R', 'event_ts': '1755801828.606249', 'channel_type': 'im'}
2025-08-21 11:44:04,312 - slack_bolt.App - DEBUG - [client.py:200] - Sending a message (session id: 69149a69-a7e3-483f-8c0d-bc9bf7179cfa, message: {"envelope_id": "51894a89-31dd-4bb8-822a-978154f390ef"})
2025-08-21 11:44:04,312 - slack_bolt.App - DEBUG - [internals.py:41] - Response time: 1 milliseconds
2025-08-21 11:44:04,312 - slack_bolt.App - DEBUG - [client.py:150] - Message processing completed (type: events_api, envelope_id: 51894a89-31dd-4bb8-822a-978154f390ef)
2025-08-21 11:44:07,946 - slack_bolt.App - DEBUG - [client.py:235] - on_message invoked: (message: {"envelope_id":"8fb5a0f4-0044-426e-a074-7fca5fd7f440","payload":{"token":"yq71khZBCyJF1Ri2hG5aNqr5","team_id":"T010QS7UQNA","enterprise_id":"ERV4P7NAD","context_team_id":null,"context_enterprise_id":"ERV4P7NAD","api_app_id":"A099LACAB2R","event":{"user":"U099R6WTZ9S","type":"message","ts":"1755801828.606249","bot_id":"B099R6WTRU4","app_id":"A099LACAB2R","text":"_(part 2\/2)_\n\n*Important Notes:*\n\n*   For Android Emulator, make sure your Run Config has the `$ANDROID_HOME` environment variable set and included in the path (Source: <https:\/\/paramount.atlassian.net\/wiki\/spaces\/PLQA\/pages\/47713566>). *   If running on a real device, you need to add the device's IP address to `DebugDeviceID` in the configuration (Source: <https:\/\/paramount.atlassian.net\/wiki\/spaces\/PLQA\/pages\/47720266>). *   Your test class should handle starting and stopping the Appium server and Android Emulator (Source: <https:\/\/paramount.atlassian.net\/wiki\/spaces\/PLQA\/pages\/47711460>). \u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\n_Powered by DIG AI Platform_","team":"T010QS7UQNA","bot_profile":{"id":"B099R6WTRU4","deleted":false,"name":"AutoBot","updated":1754677948,"app_id":"A099LACAB2R","user_id":"U099R6WTZ9S","icons":{"image_36":"https:\/\/a.slack-edge.com\/80588\/img\/plugins\/app\/bot_36.png","image_48":"https:\/\/a.slack-edge.com\/80588\/img\/plugins\/app\/bot_48.png","image_72":"https:\/\/a.slack-edge.com\/80588\/img\/plugins\/app\/service_72.png"},"team_id":"T010QS7UQNA"},"thread_ts":"1755801813.351409","parent_user_id":"U01RMTFMALF","blocks":[{"type":"rich_text","block_id":"NwZ","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"(part 2\/2)","style":{"italic":true}},{"type":"text","text":"\n\n"},{"type":"text","text":"Important Notes:","style":{"bold":true}},{"type":"text","text":"\n\n*   For Android Emulator, make sure your Run Config has the "},{"type":"text","text":"$ANDROID_HOME","style":{"code":true}},{"type":"text","text":" environment variable set and included in the path (Source: "},{"type":"link","url":"https:\/\/paramount.atlassian.net\/wiki\/spaces\/PLQA\/pages\/47713566"},{"type":"text","text":"). *   If running on a real device, you need to add the device's IP address to "},{"type":"text","text":"DebugDeviceID","style":{"code":true}},{"type":"text","text":" in the configuration (Source: "},{"type":"link","url":"https:\/\/paramount.atlassian.net\/wiki\/spaces\/PLQA\/pages\/47720266"},{"type":"text","text":"). *   Your test class should handle starting and stopping the Appium server and Android Emulator (Source: "},{"type":"link","url":"https:\/\/paramount.atlassian.net\/wiki\/spaces\/PLQA\/pages\/47711460"},{"type":"text","text":"). \u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\n"},{"type":"text","text":"Powered by DIG AI Platform","style":{"italic":true}}]}]}],"channel":"D09A0LFHK8R","event_ts":"1755801828.606249","channel_type":"im"},"type":"event_callback","event_id":"Ev09BJ3RV54N","event_time":1755801828,"authorizations":[{"enterprise_id":"ERV4P7NAD","team_id":"T010QS7UQNA","user_id":"U099R6WTZ9S","is_bot":true,"is_enterprise_install":false}],"is_ext_shared_channel":false,"event_context":"4-eyJldCI6Im1lc3NhZ2UiLCJ0aWQiOiJUMDEwUVM3VVFOQSIsImFpZCI6IkEwOTlMQUNBQjJSIiwiY2lkIjoiRDA5QTBMRkhLOFIifQ"},"type":"events_api","accepts_response_payload":false,"retry_attempt":1,"retry_reason":"timeout"})
2025-08-21 11:44:07,946 - slack_bolt.App - DEBUG - [client.py:99] - A new message enqueued (current queue size: 1)
2025-08-21 11:44:07,946 - slack_bolt.App - DEBUG - [client.py:105] - A message dequeued (current queue size: 0)
2025-08-21 11:44:07,946 - slack_bolt.App - DEBUG - [client.py:125] - Message processing started (type: events_api, envelope_id: 8fb5a0f4-0044-426e-a074-7fca5fd7f440)
2025-08-21 11:44:07,947 - slack_bolt.App - DEBUG - [app.py:476] - Applying slack_bolt.middleware.ssl_check.ssl_check.SslCheck
2025-08-21 11:44:07,947 - slack_bolt.App - DEBUG - [app.py:476] - Applying slack_bolt.middleware.request_verification.request_verification.RequestVerification
2025-08-21 11:44:07,947 - slack_bolt.App - DEBUG - [app.py:476] - Applying slack_bolt.middleware.authorization.single_team_authorization.SingleTeamAuthorization
2025-08-21 11:44:07,947 - slack_bolt.App - DEBUG - [app.py:476] - Applying slack_bolt.middleware.ignoring_self_events.ignoring_self_events.IgnoringSelfEvents
2025-08-21 11:44:07,947 - slack_bolt.IgnoringSelfEvents - DEBUG - [ignoring_self_events.py:60] - Skipped self event: {'user': 'U099R6WTZ9S', 'type': 'message', 'ts': '1755801828.606249', 'bot_id': 'B099R6WTRU4', 'app_id': 'A099LACAB2R', 'text': "_(part 2/2)_\n\n*Important Notes:*\n\n*   For Android Emulator, make sure your Run Config has the `$ANDROID_HOME` environment variable set and included in the path (Source: <https://paramount.atlassian.net/wiki/spaces/PLQA/pages/47713566>). *   If running on a real device, you need to add the device's IP address to `DebugDeviceID` in the configuration (Source: <https://paramount.atlassian.net/wiki/spaces/PLQA/pages/47720266>). *   Your test class should handle starting and stopping the Appium server and Android Emulator (Source: <https://paramount.atlassian.net/wiki/spaces/PLQA/pages/47711460>). ─────────────────────────────\n_Powered by DIG AI Platform_", 'team': 'T010QS7UQNA', 'bot_profile': {'id': 'B099R6WTRU4', 'deleted': False, 'name': 'AutoBot', 'updated': 1754677948, 'app_id': 'A099LACAB2R', 'user_id': 'U099R6WTZ9S', 'icons': {'image_36': 'https://a.slack-edge.com/80588/img/plugins/app/bot_36.png', 'image_48': 'https://a.slack-edge.com/80588/img/plugins/app/bot_48.png', 'image_72': 'https://a.slack-edge.com/80588/img/plugins/app/service_72.png'}, 'team_id': 'T010QS7UQNA'}, 'thread_ts': '1755801813.351409', 'parent_user_id': 'U01RMTFMALF', 'blocks': [{'type': 'rich_text', 'block_id': 'NwZ', 'elements': [{'type': 'rich_text_section', 'elements': [{'type': 'text', 'text': '(part 2/2)', 'style': {'italic': True}}, {'type': 'text', 'text': '\n\n'}, {'type': 'text', 'text': 'Important Notes:', 'style': {'bold': True}}, {'type': 'text', 'text': '\n\n*   For Android Emulator, make sure your Run Config has the '}, {'type': 'text', 'text': '$ANDROID_HOME', 'style': {'code': True}}, {'type': 'text', 'text': ' environment variable set and included in the path (Source: '}, {'type': 'link', 'url': 'https://paramount.atlassian.net/wiki/spaces/PLQA/pages/47713566'}, {'type': 'text', 'text': "). *   If running on a real device, you need to add the device's IP address to "}, {'type': 'text', 'text': 'DebugDeviceID', 'style': {'code': True}}, {'type': 'text', 'text': ' in the configuration (Source: '}, {'type': 'link', 'url': 'https://paramount.atlassian.net/wiki/spaces/PLQA/pages/47720266'}, {'type': 'text', 'text': '). *   Your test class should handle starting and stopping the Appium server and Android Emulator (Source: '}, {'type': 'link', 'url': 'https://paramount.atlassian.net/wiki/spaces/PLQA/pages/47711460'}, {'type': 'text', 'text': '). ─────────────────────────────\n'}, {'type': 'text', 'text': 'Powered by DIG AI Platform', 'style': {'italic': True}}]}]}], 'channel': 'D09A0LFHK8R', 'event_ts': '1755801828.606249', 'channel_type': 'im'}
2025-08-21 11:44:07,947 - slack_bolt.App - DEBUG - [client.py:200] - Sending a message (session id: 69149a69-a7e3-483f-8c0d-bc9bf7179cfa, message: {"envelope_id": "8fb5a0f4-0044-426e-a074-7fca5fd7f440"})
2025-08-21 11:44:07,947 - slack_bolt.App - DEBUG - [internals.py:41] - Response time: 0 milliseconds
2025-08-21 11:44:07,947 - slack_bolt.App - DEBUG - [client.py:150] - Message processing completed (type: events_api, envelope_id: 8fb5a0f4-0044-426e-a074-7fca5fd7f440)
2025-08-21 11:44:57,038 - slack_bolt.App - DEBUG - [client.py:235] - on_message invoked: (message: {"envelope_id":"09439b13-c0a4-4172-acde-3beb4bfc600c","payload":{"token":"yq71khZBCyJF1Ri2hG5aNqr5","team_id":"T010QS7UQNA","enterprise_id":"ERV4P7NAD","context_team_id":null,"context_enterprise_id":"ERV4P7NAD","api_app_id":"A099LACAB2R","event":{"user":"U099R6WTZ9S","type":"message","ts":"1755801828.606249","bot_id":"B099R6WTRU4","app_id":"A099LACAB2R","text":"_(part 2\/2)_\n\n*Important Notes:*\n\n*   For Android Emulator, make sure your Run Config has the `$ANDROID_HOME` environment variable set and included in the path (Source: <https:\/\/paramount.atlassian.net\/wiki\/spaces\/PLQA\/pages\/47713566>). *   If running on a real device, you need to add the device's IP address to `DebugDeviceID` in the configuration (Source: <https:\/\/paramount.atlassian.net\/wiki\/spaces\/PLQA\/pages\/47720266>). *   Your test class should handle starting and stopping the Appium server and Android Emulator (Source: <https:\/\/paramount.atlassian.net\/wiki\/spaces\/PLQA\/pages\/47711460>). \u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\n_Powered by DIG AI Platform_","team":"T010QS7UQNA","bot_profile":{"id":"B099R6WTRU4","deleted":false,"name":"AutoBot","updated":1754677948,"app_id":"A099LACAB2R","user_id":"U099R6WTZ9S","icons":{"image_36":"https:\/\/a.slack-edge.com\/80588\/img\/plugins\/app\/bot_36.png","image_48":"https:\/\/a.slack-edge.com\/80588\/img\/plugins\/app\/bot_48.png","image_72":"https:\/\/a.slack-edge.com\/80588\/img\/plugins\/app\/service_72.png"},"team_id":"T010QS7UQNA"},"thread_ts":"1755801813.351409","parent_user_id":"U01RMTFMALF","blocks":[{"type":"rich_text","block_id":"NwZ","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"(part 2\/2)","style":{"italic":true}},{"type":"text","text":"\n\n"},{"type":"text","text":"Important Notes:","style":{"bold":true}},{"type":"text","text":"\n\n*   For Android Emulator, make sure your Run Config has the "},{"type":"text","text":"$ANDROID_HOME","style":{"code":true}},{"type":"text","text":" environment variable set and included in the path (Source: "},{"type":"link","url":"https:\/\/paramount.atlassian.net\/wiki\/spaces\/PLQA\/pages\/47713566"},{"type":"text","text":"). *   If running on a real device, you need to add the device's IP address to "},{"type":"text","text":"DebugDeviceID","style":{"code":true}},{"type":"text","text":" in the configuration (Source: "},{"type":"link","url":"https:\/\/paramount.atlassian.net\/wiki\/spaces\/PLQA\/pages\/47720266"},{"type":"text","text":"). *   Your test class should handle starting and stopping the Appium server and Android Emulator (Source: "},{"type":"link","url":"https:\/\/paramount.atlassian.net\/wiki\/spaces\/PLQA\/pages\/47711460"},{"type":"text","text":"). \u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\n"},{"type":"text","text":"Powered by DIG AI Platform","style":{"italic":true}}]}]}],"channel":"D09A0LFHK8R","event_ts":"1755801828.606249","channel_type":"im"},"type":"event_callback","event_id":"Ev09BJ3RV54N","event_time":1755801828,"authorizations":[{"enterprise_id":"ERV4P7NAD","team_id":"T010QS7UQNA","user_id":"U099R6WTZ9S","is_bot":true,"is_enterprise_install":false}],"is_ext_shared_channel":false,"event_context":"4-eyJldCI6Im1lc3NhZ2UiLCJ0aWQiOiJUMDEwUVM3VVFOQSIsImFpZCI6IkEwOTlMQUNBQjJSIiwiY2lkIjoiRDA5QTBMRkhLOFIifQ"},"type":"events_api","accepts_response_payload":false,"retry_attempt":2,"retry_reason":"timeout"})
2025-08-21 11:44:57,039 - slack_bolt.App - DEBUG - [client.py:99] - A new message enqueued (current queue size: 1)
2025-08-21 11:44:57,040 - slack_bolt.App - DEBUG - [client.py:105] - A message dequeued (current queue size: 0)
2025-08-21 11:44:57,040 - slack_bolt.App - DEBUG - [client.py:125] - Message processing started (type: events_api, envelope_id: 09439b13-c0a4-4172-acde-3beb4bfc600c)
2025-08-21 11:44:57,041 - slack_bolt.App - DEBUG - [app.py:476] - Applying slack_bolt.middleware.ssl_check.ssl_check.SslCheck
2025-08-21 11:44:57,041 - slack_bolt.App - DEBUG - [app.py:476] - Applying slack_bolt.middleware.request_verification.request_verification.RequestVerification
2025-08-21 11:44:57,041 - slack_bolt.App - DEBUG - [app.py:476] - Applying slack_bolt.middleware.authorization.single_team_authorization.SingleTeamAuthorization
2025-08-21 11:44:57,041 - slack_bolt.App - DEBUG - [app.py:476] - Applying slack_bolt.middleware.ignoring_self_events.ignoring_self_events.IgnoringSelfEvents
2025-08-21 11:44:57,041 - slack_bolt.IgnoringSelfEvents - DEBUG - [ignoring_self_events.py:60] - Skipped self event: {'user': 'U099R6WTZ9S', 'type': 'message', 'ts': '1755801828.606249', 'bot_id': 'B099R6WTRU4', 'app_id': 'A099LACAB2R', 'text': "_(part 2/2)_\n\n*Important Notes:*\n\n*   For Android Emulator, make sure your Run Config has the `$ANDROID_HOME` environment variable set and included in the path (Source: <https://paramount.atlassian.net/wiki/spaces/PLQA/pages/47713566>). *   If running on a real device, you need to add the device's IP address to `DebugDeviceID` in the configuration (Source: <https://paramount.atlassian.net/wiki/spaces/PLQA/pages/47720266>). *   Your test class should handle starting and stopping the Appium server and Android Emulator (Source: <https://paramount.atlassian.net/wiki/spaces/PLQA/pages/47711460>). ─────────────────────────────\n_Powered by DIG AI Platform_", 'team': 'T010QS7UQNA', 'bot_profile': {'id': 'B099R6WTRU4', 'deleted': False, 'name': 'AutoBot', 'updated': 1754677948, 'app_id': 'A099LACAB2R', 'user_id': 'U099R6WTZ9S', 'icons': {'image_36': 'https://a.slack-edge.com/80588/img/plugins/app/bot_36.png', 'image_48': 'https://a.slack-edge.com/80588/img/plugins/app/bot_48.png', 'image_72': 'https://a.slack-edge.com/80588/img/plugins/app/service_72.png'}, 'team_id': 'T010QS7UQNA'}, 'thread_ts': '1755801813.351409', 'parent_user_id': 'U01RMTFMALF', 'blocks': [{'type': 'rich_text', 'block_id': 'NwZ', 'elements': [{'type': 'rich_text_section', 'elements': [{'type': 'text', 'text': '(part 2/2)', 'style': {'italic': True}}, {'type': 'text', 'text': '\n\n'}, {'type': 'text', 'text': 'Important Notes:', 'style': {'bold': True}}, {'type': 'text', 'text': '\n\n*   For Android Emulator, make sure your Run Config has the '}, {'type': 'text', 'text': '$ANDROID_HOME', 'style': {'code': True}}, {'type': 'text', 'text': ' environment variable set and included in the path (Source: '}, {'type': 'link', 'url': 'https://paramount.atlassian.net/wiki/spaces/PLQA/pages/47713566'}, {'type': 'text', 'text': "). *   If running on a real device, you need to add the device's IP address to "}, {'type': 'text', 'text': 'DebugDeviceID', 'style': {'code': True}}, {'type': 'text', 'text': ' in the configuration (Source: '}, {'type': 'link', 'url': 'https://paramount.atlassian.net/wiki/spaces/PLQA/pages/47720266'}, {'type': 'text', 'text': '). *   Your test class should handle starting and stopping the Appium server and Android Emulator (Source: '}, {'type': 'link', 'url': 'https://paramount.atlassian.net/wiki/spaces/PLQA/pages/47711460'}, {'type': 'text', 'text': '). ─────────────────────────────\n'}, {'type': 'text', 'text': 'Powered by DIG AI Platform', 'style': {'italic': True}}]}]}], 'channel': 'D09A0LFHK8R', 'event_ts': '1755801828.606249', 'channel_type': 'im'}
2025-08-21 11:44:57,042 - slack_bolt.App - DEBUG - [client.py:200] - Sending a message (session id: 69149a69-a7e3-483f-8c0d-bc9bf7179cfa, message: {"envelope_id": "09439b13-c0a4-4172-acde-3beb4bfc600c"})
2025-08-21 11:44:57,042 - slack_bolt.App - DEBUG - [internals.py:41] - Response time: 1 milliseconds
2025-08-21 11:44:57,042 - slack_bolt.App - DEBUG - [client.py:150] - Message processing completed (type: events_api, envelope_id: 09439b13-c0a4-4172-acde-3beb4bfc600c)
2025-08-21 14:52:16,463 - __main__ - INFO - [main.py:43] - Loading application configuration...
2025-08-21 14:52:16,463 - __main__ - INFO - [main.py:45] - Configuration loaded successfully
2025-08-21 14:52:16,463 - __main__ - INFO - [main.py:48] - Initializing security components...
2025-08-21 14:52:16,463 - __main__ - DEBUG - [main.py:50] - Slack validator initialized
2025-08-21 14:52:16,463 - security.content_filter - INFO - [content_filter.py:39] - Content filter initialized with 11 patterns
2025-08-21 14:52:16,463 - __main__ - DEBUG - [main.py:53] - Content filter initialized
2025-08-21 14:52:16,463 - auth.admin_manager - INFO - [admin_manager.py:27] - Admin manager initialized with 2 admin users
2025-08-21 14:52:16,463 - __main__ - DEBUG - [main.py:56] - Admin manager initialized
2025-08-21 14:52:16,463 - auth.email_whitelist - INFO - [email_whitelist.py:28] - Email whitelist initialized with 1 whitelisted emails
2025-08-21 14:52:16,463 - auth.email_whitelist - INFO - [email_whitelist.py:37] - Whitelisted domains: paramount.com
2025-08-21 14:52:16,463 - __main__ - DEBUG - [main.py:59] - Email whitelist initialized with 1 emails
2025-08-21 14:52:16,463 - auth.slack_user_info - DEBUG - [slack_user_info.py:25] - Slack user info manager initialized
2025-08-21 14:52:16,463 - __main__ - DEBUG - [main.py:62] - Slack user info manager initialized
2025-08-21 14:52:16,463 - __main__ - INFO - [main.py:63] - Security components initialized successfully
2025-08-21 14:52:16,463 - __main__ - INFO - [main.py:66] - Initializing Slack app...
2025-08-21 14:52:16,499 - slack_bolt.App - DEBUG - [base_client.py:255] - Sending a request - url: https://slack.com/api/auth.test, query_params: {}, body_params: {}, files: {}, json_body: None, headers: {'Content-Type': 'application/x-www-form-urlencoded', 'Authorization': '(redacted)', 'User-Agent': 'Bolt/1.16.0 Python/3.12.0 slackclient/3.34.0 Darwin/23.4.0'}
2025-08-21 14:52:16,964 - slack_bolt.App - DEBUG - [base_client.py:546] - Received the following response - status: 200, headers: {'date': 'Thu, 21 Aug 2025 21:52:16 GMT', 'server': 'Apache', 'vary': 'Accept-Encoding', 'x-slack-req-id': '856540d00939a7673c93e59f25e97a0d', 'x-content-type-options': 'nosniff', 'x-xss-protection': '0', 'pragma': 'no-cache', 'cache-control': 'private, no-cache, no-store, must-revalidate', 'expires': 'Sat, 26 Jul 1997 05:00:00 GMT', 'content-type': 'application/json; charset=utf-8', 'x-oauth-scopes': 'app_mentions:read,channels:history,chat:write,im:history,im:read,im:write,users:read,reactions:write,users:read.email', 'access-control-expose-headers': 'x-slack-req-id, retry-after', 'access-control-allow-headers': 'slack-route, x-slack-version-ts, x-b3-traceid, x-b3-spanid, x-b3-parentspanid, x-b3-sampled, x-b3-flags', 'strict-transport-security': 'max-age=31536000; includeSubDomains; preload', 'referrer-policy': 'no-referrer', 'x-slack-unique-id': 'aKeVEOz4Ve_CgKxJ1MDQZAAAACk', 'x-slack-backend': 'r', 'access-control-allow-origin': '*', 'content-length': '228', 'via': '1.1 slack-prod.tinyspeck.com, envoy-www-iad-xlfpqncm,envoy-edge-pdx-idltamhz', 'x-envoy-attempt-count': '1', 'x-envoy-upstream-service-time': '105', 'x-backend': 'main_normal main_canary_with_overflow main_control_with_overflow', 'x-server': 'slack-www-hhvm-main-iad-jbyk', 'x-slack-shared-secret-outcome': 'no-match', 'x-edge-backend': 'envoy-www', 'timing-allow-origin': '*', 'x-slack-edge-shared-secret-outcome': 'no-match', 'connection': 'close'}, body: {"ok":true,"url":"https://viacomcbs-grid-test.slack.com/","team":"Test Workspace","user":"autobot","team_id":"T010QS7UQNA","user_id":"U099R6WTZ9S","bot_id":"B099R6WTRU4","enterprise_id":"ERV4P7NAD","is_enterprise_install":false}
2025-08-21 14:52:16,965 - __main__ - INFO - [main.py:68] - Slack app initialized successfully
2025-08-21 14:52:16,965 - __main__ - DEBUG - [main.py:72] - Message deduplication cache initialized
2025-08-21 14:52:16,966 - __main__ - DEBUG - [main.py:77] - Thread tracking initialized
2025-08-21 14:52:16,966 - __main__ - INFO - [main.py:80] - Initializing DIG AI integration...
2025-08-21 14:52:16,966 - dig_connector - INFO - [dig_connector.py:284] - Initializing DIG AI with model ID: 42
2025-08-21 14:52:16,966 - dig_connector - INFO - [dig_connector.py:49] - Starting DIG chat session initialization...
2025-08-21 14:52:16,967 - dig_connector - DEBUG - [dig_connector.py:52] - Creating chat with name: Slack Bot Session 2025-08-21T21:52:16.966985+00:00
2025-08-21 14:52:16,967 - dig_connector - DEBUG - [dig_connector.py:63] - Creating chat - URL: https://ai.digdev.cbsicloud.com/fastapi/chats, Payload: {'chat_nm': 'Slack Bot Session 2025-08-21T21:52:16.966985+00:00', 'model_id': 42}
2025-08-21 14:52:16,972 - urllib3.connectionpool - DEBUG - [connectionpool.py:1055] - Starting new HTTPS connection (1): ai.digdev.cbsicloud.com:443
2025-08-21 14:52:17,231 - urllib3.connectionpool - DEBUG - [connectionpool.py:549] - https://ai.digdev.cbsicloud.com:443 "POST /fastapi/chats HTTP/1.1" 200 217
2025-08-21 14:52:17,233 - dig_connector - DEBUG - [dig_connector.py:66] - Create chat response: status=200
2025-08-21 14:52:17,233 - dig_connector - INFO - [dig_connector.py:54] - Successfully initialized DIG chat session with ID: 867
2025-08-21 14:52:17,233 - __main__ - INFO - [main.py:83] - DIG AI integration successfully initialized
2025-08-21 14:52:17,234 - __main__ - INFO - [main.py:87] - Setting up event handlers...
2025-08-21 14:52:17,235 - __main__ - INFO - [main.py:659] - Starting AI Assistant Bot...
2025-08-21 14:52:17,235 - __main__ - INFO - [main.py:660] - Registering event handlers...
2025-08-21 14:52:17,235 - __main__ - DEBUG - [main.py:661] - Event handlers registered: app_mention, message, app_home_opened
2025-08-21 14:52:17,235 - __main__ - INFO - [main.py:664] - Connecting to Slack via Socket Mode...
2025-08-21 14:52:17,236 - __main__ - INFO - [main.py:668] - Socket Mode handler created successfully
2025-08-21 14:52:17,236 - __main__ - INFO - [main.py:670] - ✅ Bot is now running and listening for events!
2025-08-21 14:52:17,237 - slack_bolt.App - DEBUG - [base_client.py:255] - Sending a request - url: https://slack.com/api/apps.connections.open, query_params: {}, body_params: {}, files: {}, json_body: None, headers: {'Content-Type': 'application/x-www-form-urlencoded', 'Authorization': '(redacted)', 'User-Agent': 'Bolt/1.16.0 Python/3.12.0 slackclient/3.34.0 Darwin/23.4.0'}
2025-08-21 14:52:17,543 - slack_bolt.App - DEBUG - [base_client.py:546] - Received the following response - status: 200, headers: {'date': 'Thu, 21 Aug 2025 21:52:17 GMT', 'server': 'Apache', 'vary': 'Accept-Encoding', 'x-slack-req-id': '7b0207a507b83fb5bea8911db5ae57a8', 'x-content-type-options': 'nosniff', 'x-xss-protection': '0', 'x-robots-tag': 'noindex,nofollow', 'pragma': 'no-cache', 'cache-control': 'private, no-cache, no-store, must-revalidate', 'expires': 'Sat, 26 Jul 1997 05:00:00 GMT', 'content-type': 'application/json; charset=utf-8', 'x-accepted-oauth-scopes': 'connections:write', 'x-oauth-scopes': 'connections:write', 'access-control-expose-headers': 'x-slack-req-id, retry-after', 'access-control-allow-headers': 'slack-route, x-slack-version-ts, x-b3-traceid, x-b3-spanid, x-b3-parentspanid, x-b3-sampled, x-b3-flags', 'strict-transport-security': 'max-age=31536000; includeSubDomains; preload', 'referrer-policy': 'no-referrer', 'x-slack-unique-id': 'aKeVEXSxaLvQI_u1jSa6HgAAACk', 'x-slack-backend': 'r', 'access-control-allow-origin': '*', 'content-length': '173', 'via': '1.1 slack-prod.tinyspeck.com, envoy-www-iad-hsnljoza,envoy-edge-pdx-fhitdhrx', 'x-envoy-attempt-count': '1', 'x-envoy-upstream-service-time': '79', 'x-backend': 'main_normal main_canary_with_overflow main_control_with_overflow', 'x-server': 'slack-www-hhvm-main-iad-ctfq', 'x-slack-shared-secret-outcome': 'no-match', 'x-edge-backend': 'envoy-www', 'timing-allow-origin': '*', 'x-slack-edge-shared-secret-outcome': 'no-match', 'connection': 'close'}, body: {"ok":true,"url":"wss:\/\/wss-primary.slack.com\/link\/?ticket=c2b4cff5-b6bd-46bf-968a-f466440c2c33&app_id=a6c8d361ee1c6f398c5b4afec831555b78d7affa753b16bcc0fc64d7c13f3766"}
2025-08-21 14:52:18,072 - slack_bolt.App - INFO - [client.py:192] - A new session has been established (session id: a9e3e27a-b7f1-468d-977b-9a7a192bf09a)
2025-08-21 14:52:18,073 - slack_bolt.App - INFO - [base_handler.py:50] - ⚡️ Bolt app is running!
2025-08-21 14:52:18,163 - slack_bolt.App - INFO - [client.py:265] - Starting to receive messages from a new connection (session id: a9e3e27a-b7f1-468d-977b-9a7a192bf09a)
2025-08-21 14:52:18,164 - slack_bolt.App - DEBUG - [client.py:235] - on_message invoked: (message: {"type":"hello","num_connections":1,"debug_info":{"host":"applink-4","build_number":0,"approximate_connection_time":18060},"connection_info":{"app_id":"A099LACAB2R"}})
2025-08-21 14:52:18,165 - slack_bolt.App - DEBUG - [client.py:99] - A new message enqueued (current queue size: 1)
2025-08-21 14:52:18,165 - slack_bolt.App - DEBUG - [client.py:105] - A message dequeued (current queue size: 0)
2025-08-21 14:52:18,166 - slack_bolt.App - DEBUG - [client.py:125] - Message processing started (type: hello, envelope_id: None)
2025-08-21 14:52:18,167 - slack_bolt.App - DEBUG - [client.py:150] - Message processing completed (type: hello, envelope_id: None)
2025-08-21 14:52:31,297 - slack_bolt.App - DEBUG - [client.py:235] - on_message invoked: (message: {"envelope_id":"a1377ddb-151f-4c66-90fb-41a1412d9350","payload":{"token":"yq71khZBCyJF1Ri2hG5aNqr5","team_id":"T010QS7UQNA","enterprise_id":"ERV4P7NAD","context_team_id":null,"context_enterprise_id":"ERV4P7NAD","api_app_id":"A099LACAB2R","event":{"user":"U01RMTFMALF","type":"message","ts":"1755813150.020259","client_msg_id":"6131538b-6460-4749-9407-2e8175f95152","text":"How can i run an automated test on a local Android phone?","blocks":[{"type":"rich_text","block_id":"vQwBP","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"How can i run an automated test on a local Android phone?"}]}]}],"channel":"D09A0LFHK8R","event_ts":"1755813150.020259","channel_type":"im"},"type":"event_callback","event_id":"Ev09BM3XA5HS","event_time":1755813150,"authorizations":[{"enterprise_id":"ERV4P7NAD","team_id":"T010QS7UQNA","user_id":"U099R6WTZ9S","is_bot":true,"is_enterprise_install":false}],"is_ext_shared_channel":false,"event_context":"4-eyJldCI6Im1lc3NhZ2UiLCJ0aWQiOiJUMDEwUVM3VVFOQSIsImFpZCI6IkEwOTlMQUNBQjJSIiwiY2lkIjoiRDA5QTBMRkhLOFIifQ"},"type":"events_api","accepts_response_payload":false,"retry_attempt":0,"retry_reason":""})
2025-08-21 14:52:31,298 - slack_bolt.App - DEBUG - [client.py:99] - A new message enqueued (current queue size: 1)
2025-08-21 14:52:31,299 - slack_bolt.App - DEBUG - [client.py:105] - A message dequeued (current queue size: 0)
2025-08-21 14:52:31,299 - slack_bolt.App - DEBUG - [client.py:125] - Message processing started (type: events_api, envelope_id: a1377ddb-151f-4c66-90fb-41a1412d9350)
2025-08-21 14:52:31,300 - slack_bolt.App - DEBUG - [app.py:476] - Applying slack_bolt.middleware.ssl_check.ssl_check.SslCheck
2025-08-21 14:52:31,300 - slack_bolt.App - DEBUG - [app.py:476] - Applying slack_bolt.middleware.request_verification.request_verification.RequestVerification
2025-08-21 14:52:31,300 - slack_bolt.App - DEBUG - [app.py:476] - Applying slack_bolt.middleware.authorization.single_team_authorization.SingleTeamAuthorization
2025-08-21 14:52:31,300 - slack_bolt.App - DEBUG - [app.py:476] - Applying slack_bolt.middleware.ignoring_self_events.ignoring_self_events.IgnoringSelfEvents
2025-08-21 14:52:31,301 - slack_bolt.App - DEBUG - [app.py:476] - Applying slack_bolt.middleware.url_verification.url_verification.UrlVerification
2025-08-21 14:52:31,301 - slack_bolt.App - DEBUG - [app.py:500] - Checking listener: handle_app_mentions ...
2025-08-21 14:52:31,301 - slack_bolt.App - DEBUG - [app.py:500] - Checking listener: help_message ...
2025-08-21 14:52:31,301 - slack_bolt.App - DEBUG - [app.py:500] - Checking listener: handle_dm_messages ...
2025-08-21 14:52:31,302 - slack_bolt.App - DEBUG - [app.py:522] - Running listener: handle_dm_messages ...
2025-08-21 14:52:31,302 - __main__ - INFO - [main.py:409] - === DM MESSAGE EVENT RECEIVED ===
2025-08-21 14:52:31,302 - slack_bolt.App - DEBUG - [thread_runner.py:198] - Responding with status: 200 body: "" (0 millis)
2025-08-21 14:52:31,302 - __main__ - DEBUG - [main.py:410] - Full event body: {'token': 'yq71khZBCyJF1Ri2hG5aNqr5', 'team_id': 'T010QS7UQNA', 'enterprise_id': 'ERV4P7NAD', 'context_team_id': None, 'context_enterprise_id': 'ERV4P7NAD', 'api_app_id': 'A099LACAB2R', 'event': {'user': 'U01RMTFMALF', 'type': 'message', 'ts': '1755813150.020259', 'client_msg_id': '6131538b-6460-4749-9407-2e8175f95152', 'text': 'How can i run an automated test on a local Android phone?', 'blocks': [{'type': 'rich_text', 'block_id': 'vQwBP', 'elements': [{'type': 'rich_text_section', 'elements': [{'type': 'text', 'text': 'How can i run an automated test on a local Android phone?'}]}]}], 'channel': 'D09A0LFHK8R', 'event_ts': '1755813150.020259', 'channel_type': 'im'}, 'type': 'event_callback', 'event_id': 'Ev09BM3XA5HS', 'event_time': 1755813150, 'authorizations': [{'enterprise_id': 'ERV4P7NAD', 'team_id': 'T010QS7UQNA', 'user_id': 'U099R6WTZ9S', 'is_bot': True, 'is_enterprise_install': False}], 'is_ext_shared_channel': False, 'event_context': '4-eyJldCI6Im1lc3NhZ2UiLCJ0aWQiOiJUMDEwUVM3VVFOQSIsImFpZCI6IkEwOTlMQUNBQjJSIiwiY2lkIjoiRDA5QTBMRkhLOFIifQ'}
2025-08-21 14:52:31,303 - slack_bolt.App - DEBUG - [client.py:200] - Sending a message (session id: a9e3e27a-b7f1-468d-977b-9a7a192bf09a, message: {"envelope_id": "a1377ddb-151f-4c66-90fb-41a1412d9350"})
2025-08-21 14:52:31,303 - __main__ - INFO - [main.py:419] - DM Event details: channel=D09A0LFHK8R, user=U01RMTFMALF, ts=1755813150.020259
2025-08-21 14:52:31,303 - __main__ - DEBUG - [main.py:420] - DM Event text: How can i run an automated test on a local Android phone?
2025-08-21 14:52:31,304 - utils - DEBUG - [utils.py:27] - Checking message processing: channel=D09A0LFHK8R, ts=1755813150.020259, text='How can i run an automated test on a local Android...'
2025-08-21 14:52:31,305 - utils - DEBUG - [utils.py:31] - Message hash: fdbcd7e8ac11ca79ca5314e7659953b9
2025-08-21 14:52:31,305 - slack_bolt.App - DEBUG - [internals.py:41] - Response time: 5 milliseconds
2025-08-21 14:52:31,305 - utils - DEBUG - [utils.py:53] - Added message to processing cache (total entries: 1)
2025-08-21 14:52:31,305 - __main__ - DEBUG - [main.py:433] - Bot check: bot_id=None, user_id=U01RMTFMALF
2025-08-21 14:52:31,305 - slack_bolt.App - DEBUG - [client.py:150] - Message processing completed (type: events_api, envelope_id: a1377ddb-151f-4c66-90fb-41a1412d9350)
2025-08-21 14:52:31,306 - __main__ - DEBUG - [main.py:438] - Question received: 'How can i run an automated test on a local Android phone?'
2025-08-21 14:52:31,306 - __main__ - DEBUG - [main.py:444] - Checking user access for DM...
2025-08-21 14:52:31,306 - auth.slack_user_info - DEBUG - [slack_user_info.py:48] - Fetching user info for user_id: U01RMTFMALF
2025-08-21 14:52:31,307 - slack_sdk.web.base_client - DEBUG - [base_client.py:255] - Sending a request - url: https://slack.com/api/users.info, query_params: {}, body_params: {'user': 'U01RMTFMALF', 'team_id': 'T010QS7UQNA'}, files: {}, json_body: None, headers: {'Content-Type': 'application/x-www-form-urlencoded', 'Authorization': '(redacted)', 'User-Agent': 'Python/3.12.0 slackclient/3.34.0 Darwin/23.4.0'}
2025-08-21 14:52:31,625 - slack_sdk.web.base_client - DEBUG - [base_client.py:546] - Received the following response - status: 200, headers: {'date': 'Thu, 21 Aug 2025 21:52:31 GMT', 'server': 'Apache', 'vary': 'Accept-Encoding', 'x-slack-req-id': 'b2f5bd2cbd2b46a8c63fdab0cddf4280', 'x-content-type-options': 'nosniff', 'x-xss-protection': '0', 'pragma': 'no-cache', 'cache-control': 'private, no-cache, no-store, must-revalidate', 'expires': 'Sat, 26 Jul 1997 05:00:00 GMT', 'content-type': 'application/json; charset=utf-8', 'x-accepted-oauth-scopes': 'users:read', 'x-oauth-scopes': 'app_mentions:read,channels:history,chat:write,im:history,im:read,im:write,users:read,reactions:write,users:read.email', 'access-control-expose-headers': 'x-slack-req-id, retry-after', 'access-control-allow-headers': 'slack-route, x-slack-version-ts, x-b3-traceid, x-b3-spanid, x-b3-parentspanid, x-b3-sampled, x-b3-flags', 'strict-transport-security': 'max-age=31536000; includeSubDomains; preload', 'referrer-policy': 'no-referrer', 'x-slack-unique-id': 'aKeVH1vdGr5QR5NPP9nfZgAAAB8', 'x-slack-backend': 'r', 'access-control-allow-origin': '*', 'content-length': '2057', 'via': '1.1 slack-prod.tinyspeck.com, envoy-www-iad-wejjcxqn,envoy-edge-pdx-icuvgwxa', 'x-envoy-attempt-count': '1', 'x-envoy-upstream-service-time': '95', 'x-backend': 'main_normal main_canary_with_overflow main_control_with_overflow', 'x-server': 'slack-www-hhvm-main-iad-djae', 'x-slack-shared-secret-outcome': 'no-match', 'x-edge-backend': 'envoy-www', 'timing-allow-origin': '*', 'x-slack-edge-shared-secret-outcome': 'no-match', 'connection': 'close'}, body: {"ok":true,"user":{"id":"U01RMTFMALF","name":"popov8533","is_bot":false,"updated":1755806166,"is_app_user":false,"team_id":"T010QS7UQNA","deleted":false,"color":"4bbe2e","is_email_confirmed":true,"real_name":"Alexandr Popov","tz":"America\/Los_Angeles","tz_label":"Pacific Daylight Time","tz_offset":-25200,"is_admin":false,"is_owner":false,"is_primary_owner":false,"is_restricted":false,"is_ultra_restricted":false,"enterprise_user":{"id":"U01RMTFMALF","enterprise_id":"ERV4P7NAD","enterprise_name":"Paramount Global","is_admin":false,"is_owner":false,"is_primary_owner":false,"teams":["T010QS7UQNA","T02H1PQMF"]},"who_can_share_contact_card":"EVERYONE","profile":{"real_name":"Alexandr Popov","display_name":"Alex Popov","avatar_hash":"a64f82312a14","real_name_normalized":"Alexandr Popov","display_name_normalized":"Alex Popov","image_24":"https:\/\/avatars.slack-edge.com\/2023-03-29\/5033076824964_a64f82312a141123fbbf_24.png","image_32":"https:\/\/avatars.slack-edge.com\/2023-03-29\/5033076824964_a64f82312a141123fbbf_32.png","image_48":"https:\/\/avatars.slack-edge.com\/2023-03-29\/5033076824964_a64f82312a141123fbbf_48.png","image_72":"https:\/\/avatars.slack-edge.com\/2023-03-29\/5033076824964_a64f82312a141123fbbf_72.png","image_192":"https:\/\/avatars.slack-edge.com\/2023-03-29\/5033076824964_a64f82312a141123fbbf_192.png","image_512":"https:\/\/avatars.slack-edge.com\/2023-03-29\/5033076824964_a64f82312a141123fbbf_512.png","image_1024":"https:\/\/avatars.slack-edge.com\/2023-03-29\/5033076824964_a64f82312a141123fbbf_1024.png","image_original":"https:\/\/avatars.slack-edge.com\/2023-03-29\/5033076824964_a64f82312a141123fbbf_original.png","is_custom_image":true,"first_name":"Alexandr","last_name":"Popov","team":"T010QS7UQNA","email":"alexandr.popov@paramount.com","title":"Senior Software Quality Assurance Engineer","phone":"","skype":"","status_text":"","status_text_canonical":"","status_emoji":"","status_emoji_display_info":[],"status_expiration":0,"huddle_state":"default_unset","huddle_state_expiration_ts":0,"ooo_message":""}}}
2025-08-21 14:52:31,626 - auth.slack_user_info - DEBUG - [slack_user_info.py:63] - Retrieved email for user U01RMTFMALF: alexandr.popov@paramount.com
2025-08-21 14:52:31,627 - auth.email_whitelist - DEBUG - [email_whitelist.py:57] - Email access granted: alexandr.popov@paramount.com
2025-08-21 14:52:31,627 - __main__ - INFO - [main.py:118] - Access granted to user U01RMTFMALF with email alexandr.popov@paramount.com
2025-08-21 14:52:31,627 - __main__ - DEBUG - [main.py:450] - User access check passed for DM
2025-08-21 14:52:31,627 - __main__ - INFO - [main.py:452] - Processing DM question from user U01RMTFMALF: How can i run an automated test on a local Android phone?
2025-08-21 14:52:31,627 - __main__ - DEBUG - [main.py:455] - Starting DM processing...
2025-08-21 14:52:31,627 - __main__ - DEBUG - [main.py:458] - Checking if 'how can i run an automated test on a local android phone?' is an admin command in DM
2025-08-21 14:52:31,628 - __main__ - DEBUG - [main.py:494] - Checking if DM thread is already being processed...
2025-08-21 14:52:31,628 - utils - DEBUG - [utils.py:67] - Managing thread: D09A0LFHK8R:1755813150.020259, action: add, user: U01RMTFMALF
2025-08-21 14:52:31,628 - utils - INFO - [utils.py:94] - Added thread D09A0LFHK8R:1755813150.020259 to active tracking (total: 1)
2025-08-21 14:52:31,628 - __main__ - DEBUG - [main.py:499] - DM thread management check passed
2025-08-21 14:52:31,628 - slack_sdk.web.base_client - DEBUG - [base_client.py:255] - Sending a request - url: https://slack.com/api/reactions.add, query_params: {}, body_params: {'channel': 'D09A0LFHK8R', 'name': 'thinking_face', 'timestamp': '1755813150.020259', 'team_id': 'T010QS7UQNA'}, files: {}, json_body: None, headers: {'Content-Type': 'application/x-www-form-urlencoded', 'Authorization': '(redacted)', 'User-Agent': 'Python/3.12.0 slackclient/3.34.0 Darwin/23.4.0'}
2025-08-21 14:52:32,018 - slack_sdk.web.base_client - DEBUG - [base_client.py:546] - Received the following response - status: 200, headers: {'date': 'Thu, 21 Aug 2025 21:52:32 GMT', 'server': 'Apache', 'vary': 'Accept-Encoding', 'x-slack-req-id': 'b07198cff6232a49a15e51d316e1eeeb', 'x-content-type-options': 'nosniff', 'x-xss-protection': '0', 'pragma': 'no-cache', 'cache-control': 'private, no-cache, no-store, must-revalidate', 'expires': 'Sat, 26 Jul 1997 05:00:00 GMT', 'content-type': 'application/json; charset=utf-8', 'x-accepted-oauth-scopes': 'reactions:write', 'x-oauth-scopes': 'app_mentions:read,channels:history,chat:write,im:history,im:read,im:write,users:read,reactions:write,users:read.email', 'access-control-expose-headers': 'x-slack-req-id, retry-after', 'access-control-allow-headers': 'slack-route, x-slack-version-ts, x-b3-traceid, x-b3-spanid, x-b3-parentspanid, x-b3-sampled, x-b3-flags', 'strict-transport-security': 'max-age=31536000; includeSubDomains; preload', 'referrer-policy': 'no-referrer', 'x-slack-unique-id': 'aKeVH8RT3flT6wra4m_WjQAAACo', 'x-slack-backend': 'r', 'access-control-allow-origin': '*', 'content-length': '11', 'via': '1.1 slack-prod.tinyspeck.com, envoy-www-iad-rybhdndw,envoy-edge-pdx-kmntbcvm', 'x-envoy-attempt-count': '1', 'x-envoy-upstream-service-time': '126', 'x-backend': 'main_normal main_canary_with_overflow main_control_with_overflow', 'x-server': 'slack-www-hhvm-main-iad-glrw', 'x-slack-shared-secret-outcome': 'no-match', 'x-edge-backend': 'envoy-www', 'timing-allow-origin': '*', 'x-slack-edge-shared-secret-outcome': 'no-match', 'connection': 'close'}, body: {"ok":true}
2025-08-21 14:52:32,019 - __main__ - INFO - [main.py:516] - Processing DM question from <@U01RMTFMALF>: How can i run an automated test on a local Android phone?
2025-08-21 14:52:32,019 - __main__ - INFO - [main.py:520] - Sending DM request to DIG AI...
2025-08-21 14:52:32,019 - dig_connector - INFO - [dig_connector.py:134] - Generating response for query: 'How can i run an automated test on a local Android phone?' with 0 chunks
2025-08-21 14:52:32,019 - dig_connector - DEBUG - [dig_connector.py:138] - Formatted context length: 0
2025-08-21 14:52:32,019 - dig_connector - INFO - [dig_connector.py:141] - No context available, using direct query
2025-08-21 14:52:32,019 - dig_connector - INFO - [dig_connector.py:150] - Sending prompt to DIG platform...
2025-08-21 14:52:32,019 - dig_connector - INFO - [dig_connector.py:121] - Sending message to DIG API - URL: https://ai.digdev.cbsicloud.com/fastapi/chats/867/generate
2025-08-21 14:52:32,019 - dig_connector - DEBUG - [dig_connector.py:122] - Message payload: {'model_id': 42, 'message_text': 'How can i run an automated test on a local Android phone?', 'history': [{'role': 'user', 'content': 'How can i run an automated test on a local Android phone?'}]}
2025-08-21 14:52:43,434 - urllib3.connectionpool - DEBUG - [connectionpool.py:549] - https://ai.digdev.cbsicloud.com:443 "POST /fastapi/chats/867/generate HTTP/1.1" 200 4742
2025-08-21 14:52:43,435 - dig_connector - DEBUG - [dig_connector.py:125] - DIG API response: status=200
2025-08-21 14:52:43,435 - dig_connector - DEBUG - [dig_connector.py:129] - DIG API response data: {'message_text': 'To run an automated test on a local Android phone, you\'ll need to set up your environment, configure test parameters, and then execute the tests. Here\'s a breakdown of the steps based on the provided documentation:\n\n**1. Environment Setup:**\n*   **Android Emulator:** If you\'re using an Android Emulator, ensure your Run Configuration has the `$ANDROID_HOME` environment variable set and included in the path. (Source: `https://paramount.atlassian.net/wiki/spaces/PLQA/pages/47713566`)\n*   **Appium Server:** For local mobile testing, you will need to start an Appium server. A sample `SampleTest.java` class demonstrates how to start the Appium server using `DriverProvider.getInstance().startAppium()`. (Source: `https://paramount.atlassian.net/wiki/spaces/PLQA/pages/47711460`)\n*   **Launch Emulator:** If using an emulator, you can launch it using `DriverProvider.getInstance().launchEmulator()` when the environment is set to "local" and the driver is "android". (Source: `https://paramount.atlassian.net/wiki/spaces/PLQA/pages/47711460`)\n*   **Connect to VPN:** Connect to the VPN at `http://connect.cbsinteractive.com/VPNFT`. (Source: `https://paramount.atlassian.net/wiki/spaces/PLQA/pages/47720266`)\n*   **Synergy Server:** Download the latest version of the Synergy server and run its `.jar` file (Websocket). (Source: `https://paramount.atlassian.net/wiki/spaces/PLQA/pages/47720266`)\n\n**2. Configure Test Parameters:**\n*   **Maven Command Arguments:** When running tests via Maven, you\'ll need to pass several arguments. For a local Android run, these typically include:\n    *   `-Ddriver=android`\n    *   `-DplatformName=Android`\n    *   `-DplatformVersion=11.0` (or your target Android version)\n    *   `-DdeviceName="Google Pixel 2XL"` (or your device name)\n    *   `-Denvironment=local`\n    *   `-Dheadless=false`\n    *   `-Dapp="/pathToPackage/mobile-8.0.44-210804410-3.5.25-paramountPlus-playStore-release.apk"` (path to your application package)\n    *   `-Dudid=set this if running on Real Mobile Device only` (set the device ID for a real device)\n    *   `-DbundleId=set to override default setting` (Source: `https://paramount.atlassian.net/wiki/spaces/PLQA/pages/47711460`)\n*   **`config.properties` (under `mqe-hob-mobile-tests` directory):** Update this file with desired capabilities:\n    *   `ServerURL=https://www.synergyserver.tech?key=YOUR_SYNERGY_KEY`\n    *   `Platform=ANDROID`\n    *   `Locale=en-us` (or your desired locale)\n    *   `Environment=stage` (or your target environment)\n    *   `UseGeoVPN=false`\n    *   `MobileDeviceCategory=PHONE`\n    *   `DeviceStartOrientation=PORTRAIT`\n    *   `DebugDeviceID=` (Add the device ID of your emulator, obtained by typing `adb devices` in the terminal, or the IP address for a real device)\n    *   `AppPackageUrl=` (URL of the build, will be set once uploaded to the server)\n    *   `AppBuildType=DEBUG`\n    *   `DebugProxyPort=9999`\n    *   `ClientID=` (Machine serial number for local executions or to target a specific private lab machine)\n    *   You can also set `ReRunOnFailure`, `ReRunOnFailureCount`, `SendChatReport`, `SendEmailReport`, `EmailReportRecipients`, `SlackWebhook`, `SlackChannelName`, `SlackTemplateName`, and `EmailTemplateName`. (Source: `https://paramount.atlassian.net/wiki/spaces/PLQA/pages/47720266`)\n\n**3. Run the Test:**\nOnce your environment and configurations are set, you have a few ways to run the tests:\n\n*   **From the Terminal:**\n    *   Navigate to your project directory in the terminal.\n    *   Execute the following Maven command:\n        ```bash\n        mvn clean test -pl mqe-hob-mobile-tests -am -Dgroups=Your test case number or tag\n        ```\n        Replace `"Your test case number or tag"` with the actual test case number or tag you want to run. (Source: `https://paramount.atlassian.net/wiki/spaces/PLQA/pages/47720266`)\n\n*   **From `TestNGSuiteConfig.xml`:**\n    *   Navigate to the `TestNGSuiteConfig.xml` file.\n    *   Right-click on the file and select "Run TestNGSuiteConfig.xml".\n    *   Provide the necessary test case ID or tag name within the `<include name=""/` section. For example:\n        ```xml\n        <test verbose="1" name="All Mobile Tests" annotations="JDK">\n            <groups>\n                <run>\n                    <include name="Debug"/>\n                    <exclude name="Broken"/>\n                </run>\n            </groups>\n        </test>\n        ```\n        (Source: `https://paramount.atlassian.net/wiki/spaces/PLQA/pages/47720266`)\n\nRemember to replace placeholders like paths, device names, and keys with your specific values.', 'requires_approval': False, 'execution_id': 1568}
2025-08-21 14:52:43,436 - dig_connector - INFO - [dig_connector.py:154] - Extracting response content...
2025-08-21 14:52:43,436 - dig_connector - DEBUG - [dig_connector.py:221] - Found message_text in response
2025-08-21 14:52:43,436 - dig_connector - INFO - [dig_connector.py:157] - Successfully generated response (length: 4591)
2025-08-21 14:52:43,436 - __main__ - INFO - [main.py:523] - Received DM response from DIG AI
2025-08-21 14:52:43,436 - __main__ - DEBUG - [main.py:524] - DIG AI DM response: To run an automated test on a local Android phone, you'll need to set up your environment, configure test parameters, and then execute the tests. Here's a breakdown of the steps based on the provided documentation:

**1. Environment Setup:**
*   **Android Emulator:** If you're using an Android Emulator, ensure your Run Configuration has the `$ANDROID_HOME` environment variable set and included in the path. (Source: `https://paramount.atlassian.net/wiki/spaces/PLQA/pages/47713566`)
*   **Appium Server:** For local mobile testing, you will need to start an Appium server. A sample `SampleTest.java` class demonstrates how to start the Appium server using `DriverProvider.getInstance().startAppium()`. (Source: `https://paramount.atlassian.net/wiki/spaces/PLQA/pages/47711460`)
*   **Launch Emulator:** If using an emulator, you can launch it using `DriverProvider.getInstance().launchEmulator()` when the environment is set to "local" and the driver is "android". (Source: `https://paramount.atlassian.net/wiki/spaces/PLQA/pages/47711460`)
*   **Connect to VPN:** Connect to the VPN at `http://connect.cbsinteractive.com/VPNFT`. (Source: `https://paramount.atlassian.net/wiki/spaces/PLQA/pages/47720266`)
*   **Synergy Server:** Download the latest version of the Synergy server and run its `.jar` file (Websocket). (Source: `https://paramount.atlassian.net/wiki/spaces/PLQA/pages/47720266`)

**2. Configure Test Parameters:**
*   **Maven Command Arguments:** When running tests via Maven, you'll need to pass several arguments. For a local Android run, these typically include:
    *   `-Ddriver=android`
    *   `-DplatformName=Android`
    *   `-DplatformVersion=11.0` (or your target Android version)
    *   `-DdeviceName="Google Pixel 2XL"` (or your device name)
    *   `-Denvironment=local`
    *   `-Dheadless=false`
    *   `-Dapp="/pathToPackage/mobile-8.0.44-210804410-3.5.25-paramountPlus-playStore-release.apk"` (path to your application package)
    *   `-Dudid=set this if running on Real Mobile Device only` (set the device ID for a real device)
    *   `-DbundleId=set to override default setting` (Source: `https://paramount.atlassian.net/wiki/spaces/PLQA/pages/47711460`)
*   **`config.properties` (under `mqe-hob-mobile-tests` directory):** Update this file with desired capabilities:
    *   `ServerURL=https://www.synergyserver.tech?key=YOUR_SYNERGY_KEY`
    *   `Platform=ANDROID`
    *   `Locale=en-us` (or your desired locale)
    *   `Environment=stage` (or your target environment)
    *   `UseGeoVPN=false`
    *   `MobileDeviceCategory=PHONE`
    *   `DeviceStartOrientation=PORTRAIT`
    *   `DebugDeviceID=` (Add the device ID of your emulator, obtained by typing `adb devices` in the terminal, or the IP address for a real device)
    *   `AppPackageUrl=` (URL of the build, will be set once uploaded to the server)
    *   `AppBuildType=DEBUG`
    *   `DebugProxyPort=9999`
    *   `ClientID=` (Machine serial number for local executions or to target a specific private lab machine)
    *   You can also set `ReRunOnFailure`, `ReRunOnFailureCount`, `SendChatReport`, `SendEmailReport`, `EmailReportRecipients`, `SlackWebhook`, `SlackChannelName`, `SlackTemplateName`, and `EmailTemplateName`. (Source: `https://paramount.atlassian.net/wiki/spaces/PLQA/pages/47720266`)

**3. Run the Test:**
Once your environment and configurations are set, you have a few ways to run the tests:

*   **From the Terminal:**
    *   Navigate to your project directory in the terminal.
    *   Execute the following Maven command:
        ```bash
        mvn clean test -pl mqe-hob-mobile-tests -am -Dgroups=Your test case number or tag
        ```
        Replace `"Your test case number or tag"` with the actual test case number or tag you want to run. (Source: `https://paramount.atlassian.net/wiki/spaces/PLQA/pages/47720266`)

*   **From `TestNGSuiteConfig.xml`:**
    *   Navigate to the `TestNGSuiteConfig.xml` file.
    *   Right-click on the file and select "Run TestNGSuiteConfig.xml".
    *   Provide the necessary test case ID or tag name within the `<include name=""/` section. For example:
        ```xml
        <test verbose="1" name="All Mobile Tests" annotations="JDK">
            <groups>
                <run>
                    <include name="Debug"/>
                    <exclude name="Broken"/>
                </run>
            </groups>
        </test>
        ```
        (Source: `https://paramount.atlassian.net/wiki/spaces/PLQA/pages/47720266`)

Remember to replace placeholders like paths, device names, and keys with your specific values.
2025-08-21 14:52:43,439 - __main__ - DEBUG - [main.py:528] - Formatted DM response: *🤖 AI Assistant Response*

*Your Question:*
> How can i run an automated test on a local Android phone?

*Answer:*
To run an automated test on a local Android phone, you'll need to set up your environment, configure test parameters, and then execute the tests. Here's a breakdown of the steps based on the provided documentation:

*1. Environment Setup:*
*   *Android Emulator:* If you're using an Android Emulator, ensure your Run Configuration has the `$ANDROID_HOME` environment variable set and included in the path. (Source: `https://paramount.atlassian.net/wiki/spaces/PLQA/pages/47713566`)
*   *Appium Server:* For local mobile testing, you will need to start an Appium server. A sample `SampleTest.java` class demonstrates how to start the Appium server using `DriverProvider.getInstance().startAppium()`. (Source: `https://paramount.atlassian.net/wiki/spaces/PLQA/pages/47711460`)
*   *Launch Emulator:* If using an emulator, you can launch it using `DriverProvider.getInstance().launchEmulator()` when the environment is set to "local" and the driver is "android". (Source: `https://paramount.atlassian.net/wiki/spaces/PLQA/pages/47711460`)
*   *Connect to VPN:* Connect to the VPN at `http://connect.cbsinteractive.com/VPNFT`. (Source: `https://paramount.atlassian.net/wiki/spaces/PLQA/pages/47720266`)
*   *Synergy Server:* Download the latest version of the Synergy server and run its `.jar` file (Websocket). (Source: `https://paramount.atlassian.net/wiki/spaces/PLQA/pages/47720266`)

*2. Configure Test Parameters:*
*   *Maven Command Arguments:* When running tests via Maven, you'll need to pass several arguments. For a local Android run, these typically include:
    *   `-Ddriver=android`
    *   `-DplatformName=Android`
    *   `-DplatformVersion=11.0` (or your target Android version)
    *   `-DdeviceName="Google Pixel 2XL"` (or your device name)
    *   `-Denvironment=local`
    *   `-Dheadless=false`
    *   `-Dapp="/pathToPackage/mobile-8.0.44-210804410-3.5.25-paramountPlus-playStore-release.apk"` (path to your application package)
    *   `-Dudid=set this if running on Real Mobile Device only` (set the device ID for a real device)
    *   `-DbundleId=set to override default setting` (Source: `https://paramount.atlassian.net/wiki/spaces/PLQA/pages/47711460`)
*   *`config.properties` (under `mqe-hob-mobile-tests` directory):* Update this file with desired capabilities:
    *   `ServerURL=https://www.synergyserver.tech?key=YOUR_SYNERGY_KEY`
    *   `Platform=ANDROID`
    *   `Locale=en-us` (or your desired locale)
    *   `Environment=stage` (or your target environment)
    *   `UseGeoVPN=false`
    *   `MobileDeviceCategory=PHONE`
    *   `DeviceStartOrientation=PORTRAIT`
    *   `DebugDeviceID=` (Add the device ID of your emulator, obtained by typing `adb devices` in the terminal, or the IP address for a real device)
    *   `AppPackageUrl=` (URL of the build, will be set once uploaded to the server)
    *   `AppBuildType=DEBUG`
    *   `DebugProxyPort=9999`
    *   `ClientID=` (Machine serial number for local executions or to target a specific private lab machine)
    *   You can also set `ReRunOnFailure`, `ReRunOnFailureCount`, `SendChatReport`, `SendEmailReport`, `EmailReportRecipients`, `SlackWebhook`, `SlackChannelName`, `SlackTemplateName`, and `EmailTemplateName`. (Source: `https://paramount.atlassian.net/wiki/spaces/PLQA/pages/47720266`)

*3. Run the Test:*
Once your environment and configurations are set, you have a few ways to run the tests:

*   *From the Terminal:*
    *   Navigate to your project directory in the terminal.
    *   Execute the following Maven command:
        ```bash
        mvn clean test -pl mqe-hob-mobile-tests -am -Dgroups=Your test case number or tag
        ```
        Replace `"Your test case number or tag"` with the actual test case number or tag you want to run. (Source: `https://paramount.atlassian.net/wiki/spaces/PLQA/pages/47720266`)

*   *From `TestNGSuiteConfig.xml`:*
    *   Navigate to the `TestNGSuiteConfig.xml` file.
    *   Right-click on the file and select "Run TestNGSuiteConfig.xml".
    *   Provide the necessary test case ID or tag name within the `<include name=""/` section. For example:
        ```xml
        <test verbose="1" name="All Mobile Tests" annotations="JDK">
            <groups>
                <run>
                    <include name="Debug"/>
                    <exclude name="Broken"/>
                </run>
            </groups>
        </test>
        ```
        (Source: `https://paramount.atlassian.net/wiki/spaces/PLQA/pages/47720266`)

Remember to replace placeholders like paths, device names, and keys with your specific values.
2025-08-21 14:52:43,442 - slack_sdk.web.base_client - DEBUG - [base_client.py:255] - Sending a request - url: https://slack.com/api/reactions.remove, query_params: {}, body_params: {'name': 'thinking_face', 'channel': 'D09A0LFHK8R', 'timestamp': '1755813150.020259', 'team_id': 'T010QS7UQNA'}, files: {}, json_body: None, headers: {'Content-Type': 'application/x-www-form-urlencoded', 'Authorization': '(redacted)', 'User-Agent': 'Python/3.12.0 slackclient/3.34.0 Darwin/23.4.0'}
2025-08-21 14:52:43,866 - slack_sdk.web.base_client - DEBUG - [base_client.py:546] - Received the following response - status: 200, headers: {'date': 'Thu, 21 Aug 2025 21:52:43 GMT', 'server': 'Apache', 'vary': 'Accept-Encoding', 'x-slack-req-id': '93389215c7bfadf54a70823b14d81b7a', 'x-content-type-options': 'nosniff', 'x-xss-protection': '0', 'pragma': 'no-cache', 'cache-control': 'private, no-cache, no-store, must-revalidate', 'expires': 'Sat, 26 Jul 1997 05:00:00 GMT', 'content-type': 'application/json; charset=utf-8', 'x-accepted-oauth-scopes': 'reactions:write', 'x-oauth-scopes': 'app_mentions:read,channels:history,chat:write,im:history,im:read,im:write,users:read,reactions:write,users:read.email', 'access-control-expose-headers': 'x-slack-req-id, retry-after', 'access-control-allow-headers': 'slack-route, x-slack-version-ts, x-b3-traceid, x-b3-spanid, x-b3-parentspanid, x-b3-sampled, x-b3-flags', 'strict-transport-security': 'max-age=31536000; includeSubDomains; preload', 'referrer-policy': 'no-referrer', 'x-slack-unique-id': 'aKeVKydKOHVSVYwP73JxmgAAAA8', 'x-slack-backend': 'r', 'access-control-allow-origin': '*', 'content-length': '11', 'via': '1.1 slack-prod.tinyspeck.com, envoy-www-iad-fbzuanic,envoy-edge-pdx-tehlolfu', 'x-envoy-attempt-count': '1', 'x-envoy-upstream-service-time': '149', 'x-backend': 'main_normal main_canary_with_overflow main_control_with_overflow', 'x-server': 'slack-www-hhvm-main-iad-btvz', 'x-slack-shared-secret-outcome': 'no-match', 'x-edge-backend': 'envoy-www', 'timing-allow-origin': '*', 'x-slack-edge-shared-secret-outcome': 'no-match', 'connection': 'close'}, body: {"ok":true}
2025-08-21 14:52:43,892 - slack_sdk.web.base_client - DEBUG - [base_client.py:255] - Sending a request - url: https://slack.com/api/chat.postMessage, query_params: {}, body_params: {}, files: {}, json_body: {'channel': 'D09A0LFHK8R', 'text': '*🤖 AI Assistant Response*\n\n*Your Question:*\n> How can i run an automated test on a local Android phone? *Answer:*\nTo run an automated test on a local Android phone, you\'ll need to set up your environment, configure test parameters, and then execute the tests. Here\'s a breakdown of the steps based on the provided documentation:\n\n*1. Environment Setup:*\n*   *Android Emulator:* If you\'re using an Android Emulator, ensure your Run Configuration has the `$ANDROID_HOME` environment variable set and included in the path. (Source: `https://paramount.atlassian.net/wiki/spaces/PLQA/pages/47713566`)\n*   *Appium Server:* For local mobile testing, you will need to start an Appium server. A sample `SampleTest.java` class demonstrates how to start the Appium server using `DriverProvider.getInstance().startAppium()`. (Source: `https://paramount.atlassian.net/wiki/spaces/PLQA/pages/47711460`)\n*   *Launch Emulator:* If using an emulator, you can launch it using `DriverProvider.getInstance().launchEmulator()` when the environment is set to "local" and the driver is "android". (Source: `https://paramount.atlassian.net/wiki/spaces/PLQA/pages/47711460`)\n*   *Connect to VPN:* Connect to the VPN at `http://connect.cbsinteractive.com/VPNFT`. (Source: `https://paramount.atlassian.net/wiki/spaces/PLQA/pages/47720266`)\n*   *Synergy Server:* Download the latest version of the Synergy server and run its `.jar` file (Websocket). (Source: `https://paramount.atlassian.net/wiki/spaces/PLQA/pages/47720266`)\n\n*2. Configure Test Parameters:*\n*   *Maven Command Arguments:* When running tests via Maven, you\'ll need to pass several arguments.\n\n_(message continued in thread...)_', 'thread_ts': '1755813150.020259', 'team_id': 'T010QS7UQNA'}, headers: {'Content-Type': 'application/json;charset=utf-8', 'Authorization': '(redacted)', 'User-Agent': 'Python/3.12.0 slackclient/3.34.0 Darwin/23.4.0'}
2025-08-21 14:52:44,292 - slack_sdk.web.base_client - DEBUG - [base_client.py:546] - Received the following response - status: 200, headers: {'date': 'Thu, 21 Aug 2025 21:52:44 GMT', 'server': 'Apache', 'vary': 'Accept-Encoding', 'x-slack-req-id': 'f24276dec8fedaee48c795aeb4578e11', 'x-content-type-options': 'nosniff', 'x-xss-protection': '0', 'pragma': 'no-cache', 'cache-control': 'private, no-cache, no-store, must-revalidate', 'expires': 'Sat, 26 Jul 1997 05:00:00 GMT', 'content-type': 'application/json; charset=utf-8', 'x-accepted-oauth-scopes': 'chat:write', 'x-oauth-scopes': 'app_mentions:read,channels:history,chat:write,im:history,im:read,im:write,users:read,reactions:write,users:read.email', 'access-control-expose-headers': 'x-slack-req-id, retry-after', 'access-control-allow-headers': 'slack-route, x-slack-version-ts, x-b3-traceid, x-b3-spanid, x-b3-parentspanid, x-b3-sampled, x-b3-flags', 'strict-transport-security': 'max-age=31536000; includeSubDomains; preload', 'referrer-policy': 'no-referrer', 'x-slack-unique-id': 'aKeVLJzmqMFevFTybIUh6QAAEAg', 'x-slack-backend': 'r', 'access-control-allow-origin': '*', 'content-length': '5843', 'via': '1.1 slack-prod.tinyspeck.com, envoy-www-iad-ozaubtnk,envoy-edge-pdx-bigpkglj', 'x-envoy-attempt-count': '1', 'x-envoy-upstream-service-time': '172', 'x-backend': 'main_normal main_canary_with_overflow main_control_with_overflow', 'x-server': 'slack-www-hhvm-main-iad-zjvz', 'x-slack-shared-secret-outcome': 'no-match', 'x-edge-backend': 'envoy-www', 'timing-allow-origin': '*', 'x-slack-edge-shared-secret-outcome': 'no-match', 'connection': 'close'}, body: {"ok":true,"channel":"D09A0LFHK8R","ts":"1755813164.235839","message":{"user":"U099R6WTZ9S","type":"message","ts":"1755813164.235839","bot_id":"B099R6WTRU4","app_id":"A099LACAB2R","text":"*:robot_face: AI Assistant Response*\n\n*Your Question:*\n&gt; How can i run an automated test on a local Android phone? *Answer:*\nTo run an automated test on a local Android phone, you'll need to set up your environment, configure test parameters, and then execute the tests. Here's a breakdown of the steps based on the provided documentation:\n\n*1. Environment Setup:*\n*   *Android Emulator:* If you're using an Android Emulator, ensure your Run Configuration has the `$ANDROID_HOME` environment variable set and included in the path. (Source: `<https://paramount.atlassian.net/wiki/spaces/PLQA/pages/47713566`>)\n*   *Appium Server:* For local mobile testing, you will need to start an Appium server. A sample `SampleTest.java` class demonstrates how to start the Appium server using `DriverProvider.getInstance().startAppium()`. (Source: `<https://paramount.atlassian.net/wiki/spaces/PLQA/pages/47711460`>)\n*   *Launch Emulator:* If using an emulator, you can launch it using `DriverProvider.getInstance().launchEmulator()` when the environment is set to \"local\" and the driver is \"android\". (Source: `<https://paramount.atlassian.net/wiki/spaces/PLQA/pages/47711460`>)\n*   *Connect to VPN:* Connect to the VPN at `<http://connect.cbsinteractive.com/VPNFT>`. (Source: `<https://paramount.atlassian.net/wiki/spaces/PLQA/pages/47720266`>)\n*   *Synergy Server:* Download the latest version of the Synergy server and run its `.jar` file (Websocket). (Source: `<https://paramount.atlassian.net/wiki/spaces/PLQA/pages/47720266`>)\n\n*2. Configure Test Parameters:*\n*   *Maven Command Arguments:* When running tests via Maven, you'll need to pass several arguments.\n\n_(message continued in thread...)_","team":"T010QS7UQNA","bot_profile":{"id":"B099R6WTRU4","app_id":"A099LACAB2R","user_id":"U099R6WTZ9S","name":"AutoBot","icons":{"image_36":"https://a.slack-edge.com/80588/img/plugins/app/bot_36.png","image_48":"https://a.slack-edge.com/80588/img/plugins/app/bot_48.png","image_72":"https://a.slack-edge.com/80588/img/plugins/app/service_72.png"},"deleted":false,"updated":1754677948,"team_id":"T010QS7UQNA"},"thread_ts":"1755813150.020259","parent_user_id":"U01RMTFMALF","blocks":[{"type":"rich_text","block_id":"/XCg","elements":[{"type":"rich_text_section","elements":[{"type":"emoji","name":"robot_face","unicode":"1f916","style":{"bold":true}},{"type":"text","text":" AI Assistant Response","style":{"bold":true}},{"type":"text","text":"\n\n"},{"type":"text","text":"Your Question:","style":{"bold":true}}]},{"type":"rich_text_quote","elements":[{"type":"text","text":"How can i run an automated test on a local Android phone? "},{"type":"text","text":"Answer:","style":{"bold":true}}]},{"type":"rich_text_section","elements":[{"type":"text","text":"To run an automated test on a local Android phone, you'll need to set up your environment, configure test parameters, and then execute the tests. Here's a breakdown of the steps based on the provided documentation:\n\n"},{"type":"text","text":"1. Environment Setup:","style":{"bold":true}},{"type":"text","text":"\n*   "},{"type":"text","text":"Android Emulator:","style":{"bold":true}},{"type":"text","text":" If you're using an Android Emulator, ensure your Run Configuration has the "},{"type":"text","text":"$ANDROID_HOME","style":{"code":true}},{"type":"text","text":" environment variable set and included in the path. (Source: `"},{"type":"link","url":"https://paramount.atlassian.net/wiki/spaces/PLQA/pages/47713566`"},{"type":"text","text":")\n*   "},{"type":"text","text":"Appium Server:","style":{"bold":true}},{"type":"text","text":" For local mobile testing, you will need to start an Appium server. A sample "},{"type":"text","text":"SampleTest.java","style":{"code":true}},{"type":"text","text":" class demonstrates how to start the Appium server using "},{"type":"text","text":"DriverProvider.getInstance().startAppium()","style":{"code":true}},{"type":"text","text":". (Source: `"},{"type":"link","url":"https://paramount.atlassian.net/wiki/spaces/PLQA/pages/47711460`"},{"type":"text","text":")\n*   "},{"type":"text","text":"Launch Emulator:","style":{"bold":true}},{"type":"text","text":" If using an emulator, you can launch it using "},{"type":"text","text":"DriverProvider.getInstance().launchEmulator()","style":{"code":true}},{"type":"text","text":" when the environment is set to \"local\" and the driver is \"android\". (Source: `"},{"type":"link","url":"https://paramount.atlassian.net/wiki/spaces/PLQA/pages/47711460`"},{"type":"text","text":")\n*   "},{"type":"text","text":"Connect to VPN:","style":{"bold":true}},{"type":"text","text":" Connect to the VPN at "},{"type":"link","url":"http://connect.cbsinteractive.com/VPNFT","style":{"code":true}},{"type":"text","text":". (Source: `"},{"type":"link","url":"https://paramount.atlassian.net/wiki/spaces/PLQA/pages/47720266`"},{"type":"text","text":")\n*   "},{"type":"text","text":"Synergy Server:","style":{"bold":true}},{"type":"text","text":" Download the latest version of the Synergy server and run its "},{"type":"text","text":".jar","style":{"code":true}},{"type":"text","text":" file (Websocket). (Source: `"},{"type":"link","url":"https://paramount.atlassian.net/wiki/spaces/PLQA/pages/47720266`"},{"type":"text","text":")\n\n"},{"type":"text","text":"2. Configure Test Parameters:","style":{"bold":true}},{"type":"text","text":"\n*   "},{"type":"text","text":"Maven Command Arguments:","style":{"bold":true}},{"type":"text","text":" When running tests via Maven, you'll need to pass several arguments.\n\n"},{"type":"text","text":"(message continued in thread...)","style":{"italic":true}}]}]}]}}
2025-08-21 14:52:44,293 - slack_sdk.web.base_client - DEBUG - [base_client.py:255] - Sending a request - url: https://slack.com/api/chat.postMessage, query_params: {}, body_params: {}, files: {}, json_body: {'channel': 'D09A0LFHK8R', 'text': '_(part 2/3)_\n\nFor a local Android run, these typically include:\n    *   `-Ddriver=android`\n    *   `-DplatformName=Android`\n    *   `-DplatformVersion=11.0` (or your target Android version)\n    *   `-DdeviceName="Google Pixel 2XL"` (or your device name)\n    *   `-Denvironment=local`\n    *   `-Dheadless=false`\n    *   `-Dapp="/pathToPackage/mobile-8.0.44-210804410-3.5.25-paramountPlus-playStore-release.apk"` (path to your application package)\n    *   `-Dudid=set this if running on Real Mobile Device only` (set the device ID for a real device)\n    *   `-DbundleId=set to override default setting` (Source: `https://paramount.atlassian.net/wiki/spaces/PLQA/pages/47711460`)\n*   *`config.properties` (under `mqe-hob-mobile-tests` directory):* Update this file with desired capabilities:\n    *   `ServerURL=https://www.synergyserver.tech?key=YOUR_SYNERGY_KEY`\n    *   `Platform=ANDROID`\n    *   `Locale=en-us` (or your desired locale)\n    *   `Environment=stage` (or your target environment)\n    *   `UseGeoVPN=false`\n    *   `MobileDeviceCategory=PHONE`\n    *   `DeviceStartOrientation=PORTRAIT`\n    *   `DebugDeviceID=` (Add the device ID of your emulator, obtained by typing `adb devices` in the terminal, or the IP address for a real device)\n    *   `AppPackageUrl=` (URL of the build, will be set once uploaded to the server)\n    *   `AppBuildType=DEBUG`\n    *   `DebugProxyPort=9999`\n    *   `ClientID=` (Machine serial number for local executions or to target a specific private lab machine)\n    *   You can also set `ReRunOnFailure`, `ReRunOnFailureCount`, `SendChatReport`, `SendEmailReport`, `EmailReportRecipients`, `SlackWebhook`, `SlackChannelName`, `SlackTemplateName`, and `EmailTemplateName`. (Source: `https://paramount.atlassian.net/wiki/spaces/PLQA/pages/47720266`)\n\n*3. Run the Test:*\nOnce your environment and configurations are set, you have a few ways to run the tests:\n\n*   *From the Terminal:*\n    *   Navigate to your project directory in the terminal. *   Execute the following Maven command:\n        ```bash\n        mvn clean test -pl mqe-hob-mobile-tests -am -Dgroups=Your test case number or tag\n        ```\n        Replace `"Your test case number or tag"` with the actual test case number or tag you want to run. (Source: `https://paramount.atlassian.net/wiki/spaces/PLQA/pages/47720266`)\n\n*   *From `TestNGSuiteConfig.xml`:*\n    *   Navigate to the `TestNGSuiteConfig.xml` file. *   Right-click on the file and select "Run TestNGSuiteConfig.xml". *   Provide the necessary test case ID or tag name within the `<include name=""/` section.', 'thread_ts': '1755813150.020259', 'team_id': 'T010QS7UQNA'}, headers: {'Content-Type': 'application/json;charset=utf-8', 'Authorization': '(redacted)', 'User-Agent': 'Python/3.12.0 slackclient/3.34.0 Darwin/23.4.0'}
2025-08-21 14:52:44,716 - slack_sdk.web.base_client - DEBUG - [base_client.py:546] - Received the following response - status: 200, headers: {'date': 'Thu, 21 Aug 2025 21:52:44 GMT', 'server': 'Apache', 'vary': 'Accept-Encoding', 'x-slack-req-id': '39a7432e7d5ce926068928c057936c31', 'x-content-type-options': 'nosniff', 'x-xss-protection': '0', 'pragma': 'no-cache', 'cache-control': 'private, no-cache, no-store, must-revalidate', 'expires': 'Sat, 26 Jul 1997 05:00:00 GMT', 'content-type': 'application/json; charset=utf-8', 'x-accepted-oauth-scopes': 'chat:write', 'x-oauth-scopes': 'app_mentions:read,channels:history,chat:write,im:history,im:read,im:write,users:read,reactions:write,users:read.email', 'access-control-expose-headers': 'x-slack-req-id, retry-after', 'access-control-allow-headers': 'slack-route, x-slack-version-ts, x-b3-traceid, x-b3-spanid, x-b3-parentspanid, x-b3-sampled, x-b3-flags', 'strict-transport-security': 'max-age=31536000; includeSubDomains; preload', 'referrer-policy': 'no-referrer', 'x-slack-unique-id': 'aKeVLCid-bHqsQRHNrlxOwAAACY', 'x-slack-backend': 'r', 'access-control-allow-origin': '*', 'content-length': '9426', 'via': '1.1 slack-prod.tinyspeck.com, envoy-www-iad-ydnhyemv,envoy-edge-pdx-sopheimg', 'x-envoy-attempt-count': '1', 'x-envoy-upstream-service-time': '183', 'x-backend': 'main_normal main_canary_with_overflow main_control_with_overflow', 'x-server': 'slack-www-hhvm-main-iad-pzpt', 'x-slack-shared-secret-outcome': 'no-match', 'x-edge-backend': 'envoy-www', 'timing-allow-origin': '*', 'x-slack-edge-shared-secret-outcome': 'no-match', 'connection': 'close'}, body: {"ok":true,"channel":"D09A0LFHK8R","ts":"1755813164.667949","message":{"user":"U099R6WTZ9S","type":"message","ts":"1755813164.667949","bot_id":"B099R6WTRU4","app_id":"A099LACAB2R","text":"_(part 2/3)_\n\nFor a local Android run, these typically include:\n    *   `-Ddriver=android`\n    *   `-DplatformName=Android`\n    *   `-DplatformVersion=11.0` (or your target Android version)\n    *   `-DdeviceName=\"Google Pixel 2XL\"` (or your device name)\n    *   `-Denvironment=local`\n    *   `-Dheadless=false`\n    *   `-Dapp=\"/pathToPackage/mobile-8.0.44-210804410-3.5.25-paramountPlus-playStore-release.apk\"` (path to your application package)\n    *   `-Dudid=set this if running on Real Mobile Device only` (set the device ID for a real device)\n    *   `-DbundleId=set to override default setting` (Source: `<https://paramount.atlassian.net/wiki/spaces/PLQA/pages/47711460`>)\n*   *`config.properties` (under `mqe-hob-mobile-tests` directory):* Update this file with desired capabilities:\n    *   `ServerURL=<https://www.synergyserver.tech?key=YOUR_SYNERGY_KEY>`\n    *   `Platform=ANDROID`\n    *   `Locale=en-us` (or your desired locale)\n    *   `Environment=stage` (or your target environment)\n    *   `UseGeoVPN=false`\n    *   `MobileDeviceCategory=PHONE`\n    *   `DeviceStartOrientation=PORTRAIT`\n    *   `DebugDeviceID=` (Add the device ID of your emulator, obtained by typing `adb devices` in the terminal, or the IP address for a real device)\n    *   `AppPackageUrl=` (URL of the build, will be set once uploaded to the server)\n    *   `AppBuildType=DEBUG`\n    *   `DebugProxyPort=9999`\n    *   `ClientID=` (Machine serial number for local executions or to target a specific private lab machine)\n    *   You can also set `ReRunOnFailure`, `ReRunOnFailureCount`, `SendChatReport`, `SendEmailReport`, `EmailReportRecipients`, `SlackWebhook`, `SlackChannelName`, `SlackTemplateName`, and `EmailTemplateName`. (Source: `<https://paramount.atlassian.net/wiki/spaces/PLQA/pages/47720266`>)\n\n*3. Run the Test:*\nOnce your environment and configurations are set, you have a few ways to run the tests:\n\n*   *From the Terminal:*\n    *   Navigate to your project directory in the terminal. *   Execute the following Maven command:\n        ```bash\n        mvn clean test -pl mqe-hob-mobile-tests -am -Dgroups=Your test case number or tag\n        ```\n        Replace `\"Your test case number or tag\"` with the actual test case number or tag you want to run. (Source: `<https://paramount.atlassian.net/wiki/spaces/PLQA/pages/47720266`>)\n\n*   *From `TestNGSuiteConfig.xml`:*\n    *   Navigate to the `TestNGSuiteConfig.xml` file. *   Right-click on the file and select \"Run TestNGSuiteConfig.xml\". *   Provide the necessary test case ID or tag name within the `&lt;include name=\"\"/` section.","team":"T010QS7UQNA","bot_profile":{"id":"B099R6WTRU4","app_id":"A099LACAB2R","user_id":"U099R6WTZ9S","name":"AutoBot","icons":{"image_36":"https://a.slack-edge.com/80588/img/plugins/app/bot_36.png","image_48":"https://a.slack-edge.com/80588/img/plugins/app/bot_48.png","image_72":"https://a.slack-edge.com/80588/img/plugins/app/service_72.png"},"deleted":false,"updated":1754677948,"team_id":"T010QS7UQNA"},"thread_ts":"1755813150.020259","parent_user_id":"U01RMTFMALF","blocks":[{"type":"rich_text","block_id":"KC0","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"(part 2/3)","style":{"italic":true}},{"type":"text","text":"\n\nFor a local Android run, these typically include:\n    *   "},{"type":"text","text":"-Ddriver=android","style":{"code":true}},{"type":"text","text":"\n    *   "},{"type":"text","text":"-DplatformName=Android","style":{"code":true}},{"type":"text","text":"\n    *   "},{"type":"text","text":"-DplatformVersion=11.0","style":{"code":true}},{"type":"text","text":" (or your target Android version)\n    *   "},{"type":"text","text":"-DdeviceName=\"Google Pixel 2XL\"","style":{"code":true}},{"type":"text","text":" (or your device name)\n    *   "},{"type":"text","text":"-Denvironment=local","style":{"code":true}},{"type":"text","text":"\n    *   "},{"type":"text","text":"-Dheadless=false","style":{"code":true}},{"type":"text","text":"\n    *   "},{"type":"text","text":"-Dapp=\"/pathToPackage/mobile-8.0.44-210804410-3.5.25-paramountPlus-playStore-release.apk\"","style":{"code":true}},{"type":"text","text":" (path to your application package)\n    *   "},{"type":"text","text":"-Dudid=set this if running on Real Mobile Device only","style":{"code":true}},{"type":"text","text":" (set the device ID for a real device)\n    *   "},{"type":"text","text":"-DbundleId=set to override default setting","style":{"code":true}},{"type":"text","text":" (Source: `"},{"type":"link","url":"https://paramount.atlassian.net/wiki/spaces/PLQA/pages/47711460`"},{"type":"text","text":")\n*   "},{"type":"text","text":"config.properties","style":{"bold":true,"code":true}},{"type":"text","text":" (under ","style":{"bold":true}},{"type":"text","text":"mqe-hob-mobile-tests","style":{"bold":true,"code":true}},{"type":"text","text":" directory):","style":{"bold":true}},{"type":"text","text":" Update this file with desired capabilities:\n    *   "},{"type":"text","text":"ServerURL=","style":{"code":true}},{"type":"link","url":"https://www.synergyserver.tech?key=YOUR_SYNERGY_KEY","style":{"code":true}},{"type":"text","text":"\n    *   "},{"type":"text","text":"Platform=ANDROID","style":{"code":true}},{"type":"text","text":"\n    *   "},{"type":"text","text":"Locale=en-us","style":{"code":true}},{"type":"text","text":" (or your desired locale)\n    *   "},{"type":"text","text":"Environment=stage","style":{"code":true}},{"type":"text","text":" (or your target environment)\n    *   "},{"type":"text","text":"UseGeoVPN=false","style":{"code":true}},{"type":"text","text":"\n    *   "},{"type":"text","text":"MobileDeviceCategory=PHONE","style":{"code":true}},{"type":"text","text":"\n    *   "},{"type":"text","text":"DeviceStartOrientation=PORTRAIT","style":{"code":true}},{"type":"text","text":"\n    *   "},{"type":"text","text":"DebugDeviceID=","style":{"code":true}},{"type":"text","text":" (Add the device ID of your emulator, obtained by typing "},{"type":"text","text":"adb devices","style":{"code":true}},{"type":"text","text":" in the terminal, or the IP address for a real device)\n    *   "},{"type":"text","text":"AppPackageUrl=","style":{"code":true}},{"type":"text","text":" (URL of the build, will be set once uploaded to the server)\n    *   "},{"type":"text","text":"AppBuildType=DEBUG","style":{"code":true}},{"type":"text","text":"\n    *   "},{"type":"text","text":"DebugProxyPort=9999","style":{"code":true}},{"type":"text","text":"\n    *   "},{"type":"text","text":"ClientID=","style":{"code":true}},{"type":"text","text":" (Machine serial number for local executions or to target a specific private lab machine)\n    *   You can also set "},{"type":"text","text":"ReRunOnFailure","style":{"code":true}},{"type":"text","text":", "},{"type":"text","text":"ReRunOnFailureCount","style":{"code":true}},{"type":"text","text":", "},{"type":"text","text":"SendChatReport","style":{"code":true}},{"type":"text","text":", "},{"type":"text","text":"SendEmailReport","style":{"code":true}},{"type":"text","text":", "},{"type":"text","text":"EmailReportRecipients","style":{"code":true}},{"type":"text","text":", "},{"type":"text","text":"SlackWebhook","style":{"code":true}},{"type":"text","text":", "},{"type":"text","text":"SlackChannelName","style":{"code":true}},{"type":"text","text":", "},{"type":"text","text":"SlackTemplateName","style":{"code":true}},{"type":"text","text":", and "},{"type":"text","text":"EmailTemplateName","style":{"code":true}},{"type":"text","text":". (Source: `"},{"type":"link","url":"https://paramount.atlassian.net/wiki/spaces/PLQA/pages/47720266`"},{"type":"text","text":")\n\n"},{"type":"text","text":"3. Run the Test:","style":{"bold":true}},{"type":"text","text":"\nOnce your environment and configurations are set, you have a few ways to run the tests:\n\n*   "},{"type":"text","text":"From the Terminal:","style":{"bold":true}},{"type":"text","text":"\n    *   Navigate to your project directory in the terminal. *   Execute the following Maven command:\n        "}]},{"type":"rich_text_preformatted","elements":[{"type":"text","text":"bash\n        mvn clean test -pl mqe-hob-mobile-tests -am -Dgroups=Your test case number or tag\n        "}]},{"type":"rich_text_section","elements":[{"type":"text","text":"        Replace "},{"type":"text","text":"\"Your test case number or tag\"","style":{"code":true}},{"type":"text","text":" with the actual test case number or tag you want to run. (Source: `"},{"type":"link","url":"https://paramount.atlassian.net/wiki/spaces/PLQA/pages/47720266`"},{"type":"text","text":")\n\n*   "},{"type":"text","text":"From ","style":{"bold":true}},{"type":"text","text":"TestNGSuiteConfig.xml","style":{"bold":true,"code":true}},{"type":"text","text":":","style":{"bold":true}},{"type":"text","text":"\n    *   Navigate to the "},{"type":"text","text":"TestNGSuiteConfig.xml","style":{"code":true}},{"type":"text","text":" file. *   Right-click on the file and select \"Run TestNGSuiteConfig.xml\". *   Provide the necessary test case ID or tag name within the "},{"type":"text","text":"<include name=\"\"/","style":{"code":true}},{"type":"text","text":" section."}]}]}]}}
2025-08-21 14:52:44,719 - slack_sdk.web.base_client - DEBUG - [base_client.py:255] - Sending a request - url: https://slack.com/api/chat.postMessage, query_params: {}, body_params: {}, files: {}, json_body: {'channel': 'D09A0LFHK8R', 'text': '_(part 3/3)_\n\nFor example:\n        ```xml\n        <test verbose="1" name="All Mobile Tests" annotations="JDK">\n            <groups>\n                <run>\n                    <include name="Debug"/>\n                    <exclude name="Broken"/>\n                </run>\n            </groups>\n        </test>\n        ```\n        (Source: `https://paramount.atlassian.net/wiki/spaces/PLQA/pages/47720266`)\n\nRemember to replace placeholders like paths, device names, and keys with your specific values.', 'thread_ts': '1755813150.020259', 'team_id': 'T010QS7UQNA'}, headers: {'Content-Type': 'application/json;charset=utf-8', 'Authorization': '(redacted)', 'User-Agent': 'Python/3.12.0 slackclient/3.34.0 Darwin/23.4.0'}
2025-08-21 14:52:45,097 - slack_bolt.App - DEBUG - [client.py:235] - on_message invoked: (message: {"envelope_id":"8699075c-f7f8-4290-9879-ebf325c52feb","payload":{"token":"yq71khZBCyJF1Ri2hG5aNqr5","team_id":"T010QS7UQNA","enterprise_id":"ERV4P7NAD","context_team_id":null,"context_enterprise_id":"ERV4P7NAD","api_app_id":"A099LACAB2R","event":{"user":"U099R6WTZ9S","type":"message","ts":"1755813164.235839","bot_id":"B099R6WTRU4","app_id":"A099LACAB2R","text":"*:robot_face: AI Assistant Response*\n\n*Your Question:*\n&gt; How can i run an automated test on a local Android phone? *Answer:*\nTo run an automated test on a local Android phone, you'll need to set up your environment, configure test parameters, and then execute the tests. Here's a breakdown of the steps based on the provided documentation:\n\n*1. Environment Setup:*\n*   *Android Emulator:* If you're using an Android Emulator, ensure your Run Configuration has the `$ANDROID_HOME` environment variable set and included in the path. (Source: `<https:\/\/paramount.atlassian.net\/wiki\/spaces\/PLQA\/pages\/47713566`>)\n*   *Appium Server:* For local mobile testing, you will need to start an Appium server. A sample `SampleTest.java` class demonstrates how to start the Appium server using `DriverProvider.getInstance().startAppium()`. (Source: `<https:\/\/paramount.atlassian.net\/wiki\/spaces\/PLQA\/pages\/47711460`>)\n*   *Launch Emulator:* If using an emulator, you can launch it using `DriverProvider.getInstance().launchEmulator()` when the environment is set to \"local\" and the driver is \"android\". (Source: `<https:\/\/paramount.atlassian.net\/wiki\/spaces\/PLQA\/pages\/47711460`>)\n*   *Connect to VPN:* Connect to the VPN at `<http:\/\/connect.cbsinteractive.com\/VPNFT>`. (Source: `<https:\/\/paramount.atlassian.net\/wiki\/spaces\/PLQA\/pages\/47720266`>)\n*   *Synergy Server:* Download the latest version of the Synergy server and run its `.jar` file (Websocket). (Source: `<https:\/\/paramount.atlassian.net\/wiki\/spaces\/PLQA\/pages\/47720266`>)\n\n*2. Configure Test Parameters:*\n*   *Maven Command Arguments:* When running tests via Maven, you'll need to pass several arguments.\n\n_(message continued in thread...)_","team":"T010QS7UQNA","bot_profile":{"id":"B099R6WTRU4","deleted":false,"name":"AutoBot","updated":1754677948,"app_id":"A099LACAB2R","user_id":"U099R6WTZ9S","icons":{"image_36":"https:\/\/a.slack-edge.com\/80588\/img\/plugins\/app\/bot_36.png","image_48":"https:\/\/a.slack-edge.com\/80588\/img\/plugins\/app\/bot_48.png","image_72":"https:\/\/a.slack-edge.com\/80588\/img\/plugins\/app\/service_72.png"},"team_id":"T010QS7UQNA"},"thread_ts":"1755813150.020259","parent_user_id":"U01RMTFMALF","blocks":[{"type":"rich_text","block_id":"wa9D","elements":[{"type":"rich_text_section","elements":[{"type":"emoji","name":"robot_face","unicode":"1f916","style":{"bold":true}},{"type":"text","text":" AI Assistant Response","style":{"bold":true}},{"type":"text","text":"\n\n"},{"type":"text","text":"Your Question:","style":{"bold":true}}]},{"type":"rich_text_quote","elements":[{"type":"text","text":"How can i run an automated test on a local Android phone? "},{"type":"text","text":"Answer:","style":{"bold":true}}]},{"type":"rich_text_section","elements":[{"type":"text","text":"To run an automated test on a local Android phone, you'll need to set up your environment, configure test parameters, and then execute the tests. Here's a breakdown of the steps based on the provided documentation:\n\n"},{"type":"text","text":"1. Environment Setup:","style":{"bold":true}},{"type":"text","text":"\n*   "},{"type":"text","text":"Android Emulator:","style":{"bold":true}},{"type":"text","text":" If you're using an Android Emulator, ensure your Run Configuration has the "},{"type":"text","text":"$ANDROID_HOME","style":{"code":true}},{"type":"text","text":" environment variable set and included in the path. (Source: `"},{"type":"link","url":"https:\/\/paramount.atlassian.net\/wiki\/spaces\/PLQA\/pages\/47713566`"},{"type":"text","text":")\n*   "},{"type":"text","text":"Appium Server:","style":{"bold":true}},{"type":"text","text":" For local mobile testing, you will need to start an Appium server. A sample "},{"type":"text","text":"SampleTest.java","style":{"code":true}},{"type":"text","text":" class demonstrates how to start the Appium server using "},{"type":"text","text":"DriverProvider.getInstance().startAppium()","style":{"code":true}},{"type":"text","text":". (Source: `"},{"type":"link","url":"https:\/\/paramount.atlassian.net\/wiki\/spaces\/PLQA\/pages\/47711460`"},{"type":"text","text":")\n*   "},{"type":"text","text":"Launch Emulator:","style":{"bold":true}},{"type":"text","text":" If using an emulator, you can launch it using "},{"type":"text","text":"DriverProvider.getInstance().launchEmulator()","style":{"code":true}},{"type":"text","text":" when the environment is set to \"local\" and the driver is \"android\". (Source: `"},{"type":"link","url":"https:\/\/paramount.atlassian.net\/wiki\/spaces\/PLQA\/pages\/47711460`"},{"type":"text","text":")\n*   "},{"type":"text","text":"Connect to VPN:","style":{"bold":true}},{"type":"text","text":" Connect to the VPN at "},{"type":"link","url":"http:\/\/connect.cbsinteractive.com\/VPNFT","style":{"code":true}},{"type":"text","text":". (Source: `"},{"type":"link","url":"https:\/\/paramount.atlassian.net\/wiki\/spaces\/PLQA\/pages\/47720266`"},{"type":"text","text":")\n*   "},{"type":"text","text":"Synergy Server:","style":{"bold":true}},{"type":"text","text":" Download the latest version of the Synergy server and run its "},{"type":"text","text":".jar","style":{"code":true}},{"type":"text","text":" file (Websocket). (Source: `"},{"type":"link","url":"https:\/\/paramount.atlassian.net\/wiki\/spaces\/PLQA\/pages\/47720266`"},{"type":"text","text":")\n\n"},{"type":"text","text":"2. Configure Test Parameters:","style":{"bold":true}},{"type":"text","text":"\n*   "},{"type":"text","text":"Maven Command Arguments:","style":{"bold":true}},{"type":"text","text":" When running tests via Maven, you'll need to pass several arguments.\n\n"},{"type":"text","text":"(message continued in thread...)","style":{"italic":true}}]}]}],"channel":"D09A0LFHK8R","event_ts":"1755813164.235839","channel_type":"im"},"type":"event_callback","event_id":"Ev09CAGN1N48","event_time":1755813164,"authorizations":[{"enterprise_id":"ERV4P7NAD","team_id":"T010QS7UQNA","user_id":"U099R6WTZ9S","is_bot":true,"is_enterprise_install":false}],"is_ext_shared_channel":false,"event_context":"4-eyJldCI6Im1lc3NhZ2UiLCJ0aWQiOiJUMDEwUVM3VVFOQSIsImFpZCI6IkEwOTlMQUNBQjJSIiwiY2lkIjoiRDA5QTBMRkhLOFIifQ"},"type":"events_api","accepts_response_payload":false,"retry_attempt":0,"retry_reason":""})
2025-08-21 14:52:45,099 - slack_bolt.App - DEBUG - [client.py:99] - A new message enqueued (current queue size: 1)
2025-08-21 14:52:45,099 - slack_bolt.App - DEBUG - [client.py:105] - A message dequeued (current queue size: 0)
2025-08-21 14:52:45,099 - slack_bolt.App - DEBUG - [client.py:125] - Message processing started (type: events_api, envelope_id: 8699075c-f7f8-4290-9879-ebf325c52feb)
2025-08-21 14:52:45,100 - slack_bolt.App - DEBUG - [app.py:476] - Applying slack_bolt.middleware.ssl_check.ssl_check.SslCheck
2025-08-21 14:52:45,100 - slack_bolt.App - DEBUG - [app.py:476] - Applying slack_bolt.middleware.request_verification.request_verification.RequestVerification
2025-08-21 14:52:45,100 - slack_bolt.App - DEBUG - [app.py:476] - Applying slack_bolt.middleware.authorization.single_team_authorization.SingleTeamAuthorization
2025-08-21 14:52:45,100 - slack_bolt.App - DEBUG - [app.py:476] - Applying slack_bolt.middleware.ignoring_self_events.ignoring_self_events.IgnoringSelfEvents
2025-08-21 14:52:45,100 - slack_bolt.IgnoringSelfEvents - DEBUG - [ignoring_self_events.py:60] - Skipped self event: {'user': 'U099R6WTZ9S', 'type': 'message', 'ts': '1755813164.235839', 'bot_id': 'B099R6WTRU4', 'app_id': 'A099LACAB2R', 'text': '*:robot_face: AI Assistant Response*\n\n*Your Question:*\n&gt; How can i run an automated test on a local Android phone? *Answer:*\nTo run an automated test on a local Android phone, you\'ll need to set up your environment, configure test parameters, and then execute the tests. Here\'s a breakdown of the steps based on the provided documentation:\n\n*1. Environment Setup:*\n*   *Android Emulator:* If you\'re using an Android Emulator, ensure your Run Configuration has the `$ANDROID_HOME` environment variable set and included in the path. (Source: `<https://paramount.atlassian.net/wiki/spaces/PLQA/pages/47713566`>)\n*   *Appium Server:* For local mobile testing, you will need to start an Appium server. A sample `SampleTest.java` class demonstrates how to start the Appium server using `DriverProvider.getInstance().startAppium()`. (Source: `<https://paramount.atlassian.net/wiki/spaces/PLQA/pages/47711460`>)\n*   *Launch Emulator:* If using an emulator, you can launch it using `DriverProvider.getInstance().launchEmulator()` when the environment is set to "local" and the driver is "android". (Source: `<https://paramount.atlassian.net/wiki/spaces/PLQA/pages/47711460`>)\n*   *Connect to VPN:* Connect to the VPN at `<http://connect.cbsinteractive.com/VPNFT>`. (Source: `<https://paramount.atlassian.net/wiki/spaces/PLQA/pages/47720266`>)\n*   *Synergy Server:* Download the latest version of the Synergy server and run its `.jar` file (Websocket). (Source: `<https://paramount.atlassian.net/wiki/spaces/PLQA/pages/47720266`>)\n\n*2. Configure Test Parameters:*\n*   *Maven Command Arguments:* When running tests via Maven, you\'ll need to pass several arguments.\n\n_(message continued in thread...)_', 'team': 'T010QS7UQNA', 'bot_profile': {'id': 'B099R6WTRU4', 'deleted': False, 'name': 'AutoBot', 'updated': 1754677948, 'app_id': 'A099LACAB2R', 'user_id': 'U099R6WTZ9S', 'icons': {'image_36': 'https://a.slack-edge.com/80588/img/plugins/app/bot_36.png', 'image_48': 'https://a.slack-edge.com/80588/img/plugins/app/bot_48.png', 'image_72': 'https://a.slack-edge.com/80588/img/plugins/app/service_72.png'}, 'team_id': 'T010QS7UQNA'}, 'thread_ts': '1755813150.020259', 'parent_user_id': 'U01RMTFMALF', 'blocks': [{'type': 'rich_text', 'block_id': 'wa9D', 'elements': [{'type': 'rich_text_section', 'elements': [{'type': 'emoji', 'name': 'robot_face', 'unicode': '1f916', 'style': {'bold': True}}, {'type': 'text', 'text': ' AI Assistant Response', 'style': {'bold': True}}, {'type': 'text', 'text': '\n\n'}, {'type': 'text', 'text': 'Your Question:', 'style': {'bold': True}}]}, {'type': 'rich_text_quote', 'elements': [{'type': 'text', 'text': 'How can i run an automated test on a local Android phone? '}, {'type': 'text', 'text': 'Answer:', 'style': {'bold': True}}]}, {'type': 'rich_text_section', 'elements': [{'type': 'text', 'text': "To run an automated test on a local Android phone, you'll need to set up your environment, configure test parameters, and then execute the tests. Here's a breakdown of the steps based on the provided documentation:\n\n"}, {'type': 'text', 'text': '1. Environment Setup:', 'style': {'bold': True}}, {'type': 'text', 'text': '\n*   '}, {'type': 'text', 'text': 'Android Emulator:', 'style': {'bold': True}}, {'type': 'text', 'text': " If you're using an Android Emulator, ensure your Run Configuration has the "}, {'type': 'text', 'text': '$ANDROID_HOME', 'style': {'code': True}}, {'type': 'text', 'text': ' environment variable set and included in the path. (Source: `'}, {'type': 'link', 'url': 'https://paramount.atlassian.net/wiki/spaces/PLQA/pages/47713566`'}, {'type': 'text', 'text': ')\n*   '}, {'type': 'text', 'text': 'Appium Server:', 'style': {'bold': True}}, {'type': 'text', 'text': ' For local mobile testing, you will need to start an Appium server. A sample '}, {'type': 'text', 'text': 'SampleTest.java', 'style': {'code': True}}, {'type': 'text', 'text': ' class demonstrates how to start the Appium server using '}, {'type': 'text', 'text': 'DriverProvider.getInstance().startAppium()', 'style': {'code': True}}, {'type': 'text', 'text': '. (Source: `'}, {'type': 'link', 'url': 'https://paramount.atlassian.net/wiki/spaces/PLQA/pages/47711460`'}, {'type': 'text', 'text': ')\n*   '}, {'type': 'text', 'text': 'Launch Emulator:', 'style': {'bold': True}}, {'type': 'text', 'text': ' If using an emulator, you can launch it using '}, {'type': 'text', 'text': 'DriverProvider.getInstance().launchEmulator()', 'style': {'code': True}}, {'type': 'text', 'text': ' when the environment is set to "local" and the driver is "android". (Source: `'}, {'type': 'link', 'url': 'https://paramount.atlassian.net/wiki/spaces/PLQA/pages/47711460`'}, {'type': 'text', 'text': ')\n*   '}, {'type': 'text', 'text': 'Connect to VPN:', 'style': {'bold': True}}, {'type': 'text', 'text': ' Connect to the VPN at '}, {'type': 'link', 'url': 'http://connect.cbsinteractive.com/VPNFT', 'style': {'code': True}}, {'type': 'text', 'text': '. (Source: `'}, {'type': 'link', 'url': 'https://paramount.atlassian.net/wiki/spaces/PLQA/pages/47720266`'}, {'type': 'text', 'text': ')\n*   '}, {'type': 'text', 'text': 'Synergy Server:', 'style': {'bold': True}}, {'type': 'text', 'text': ' Download the latest version of the Synergy server and run its '}, {'type': 'text', 'text': '.jar', 'style': {'code': True}}, {'type': 'text', 'text': ' file (Websocket). (Source: `'}, {'type': 'link', 'url': 'https://paramount.atlassian.net/wiki/spaces/PLQA/pages/47720266`'}, {'type': 'text', 'text': ')\n\n'}, {'type': 'text', 'text': '2. Configure Test Parameters:', 'style': {'bold': True}}, {'type': 'text', 'text': '\n*   '}, {'type': 'text', 'text': 'Maven Command Arguments:', 'style': {'bold': True}}, {'type': 'text', 'text': " When running tests via Maven, you'll need to pass several arguments.\n\n"}, {'type': 'text', 'text': '(message continued in thread...)', 'style': {'italic': True}}]}]}], 'channel': 'D09A0LFHK8R', 'event_ts': '1755813164.235839', 'channel_type': 'im'}
2025-08-21 14:52:45,101 - slack_bolt.App - DEBUG - [client.py:200] - Sending a message (session id: a9e3e27a-b7f1-468d-977b-9a7a192bf09a, message: {"envelope_id": "8699075c-f7f8-4290-9879-ebf325c52feb"})
2025-08-21 14:52:45,102 - slack_bolt.App - DEBUG - [internals.py:41] - Response time: 2 milliseconds
2025-08-21 14:52:45,102 - slack_bolt.App - DEBUG - [client.py:150] - Message processing completed (type: events_api, envelope_id: 8699075c-f7f8-4290-9879-ebf325c52feb)
2025-08-21 14:52:45,140 - slack_sdk.web.base_client - DEBUG - [base_client.py:546] - Received the following response - status: 200, headers: {'date': 'Thu, 21 Aug 2025 21:52:45 GMT', 'server': 'Apache', 'vary': 'Accept-Encoding', 'x-slack-req-id': 'edd28c41f6a177228b9df409c00570b1', 'x-content-type-options': 'nosniff', 'x-xss-protection': '0', 'pragma': 'no-cache', 'cache-control': 'private, no-cache, no-store, must-revalidate', 'expires': 'Sat, 26 Jul 1997 05:00:00 GMT', 'content-type': 'application/json; charset=utf-8', 'x-accepted-oauth-scopes': 'chat:write', 'x-oauth-scopes': 'app_mentions:read,channels:history,chat:write,im:history,im:read,im:write,users:read,reactions:write,users:read.email', 'access-control-expose-headers': 'x-slack-req-id, retry-after', 'access-control-allow-headers': 'slack-route, x-slack-version-ts, x-b3-traceid, x-b3-spanid, x-b3-parentspanid, x-b3-sampled, x-b3-flags', 'strict-transport-security': 'max-age=31536000; includeSubDomains; preload', 'referrer-policy': 'no-referrer', 'x-slack-unique-id': 'aKeVLStJuuMdwWOkQ6lMWAAAEBc', 'x-slack-backend': 'r', 'access-control-allow-origin': '*', 'content-length': '2115', 'via': '1.1 slack-prod.tinyspeck.com, envoy-www-iad-vyvlvyvd,envoy-edge-pdx-vvgabbin', 'x-envoy-attempt-count': '1', 'x-envoy-upstream-service-time': '164', 'x-backend': 'main_normal main_canary_with_overflow main_control_with_overflow', 'x-server': 'slack-www-hhvm-main-iad-hwdd', 'x-slack-shared-secret-outcome': 'no-match', 'x-edge-backend': 'envoy-www', 'timing-allow-origin': '*', 'x-slack-edge-shared-secret-outcome': 'no-match', 'connection': 'close'}, body: {"ok":true,"channel":"D09A0LFHK8R","ts":"1755813165.052709","message":{"user":"U099R6WTZ9S","type":"message","ts":"1755813165.052709","bot_id":"B099R6WTRU4","app_id":"A099LACAB2R","text":"_(part 3/3)_\n\nFor example:\n        ```xml\n        &lt;test verbose=\"1\" name=\"All Mobile Tests\" annotations=\"JDK\"&gt;\n            &lt;groups&gt;\n                &lt;run&gt;\n                    &lt;include name=\"Debug\"/&gt;\n                    &lt;exclude name=\"Broken\"/&gt;\n                &lt;/run&gt;\n            &lt;/groups&gt;\n        &lt;/test&gt;\n        ```\n        (Source: `<https://paramount.atlassian.net/wiki/spaces/PLQA/pages/47720266`>)\n\nRemember to replace placeholders like paths, device names, and keys with your specific values.","team":"T010QS7UQNA","bot_profile":{"id":"B099R6WTRU4","app_id":"A099LACAB2R","user_id":"U099R6WTZ9S","name":"AutoBot","icons":{"image_36":"https://a.slack-edge.com/80588/img/plugins/app/bot_36.png","image_48":"https://a.slack-edge.com/80588/img/plugins/app/bot_48.png","image_72":"https://a.slack-edge.com/80588/img/plugins/app/service_72.png"},"deleted":false,"updated":1754677948,"team_id":"T010QS7UQNA"},"thread_ts":"1755813150.020259","parent_user_id":"U01RMTFMALF","blocks":[{"type":"rich_text","block_id":"6PYp","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"(part 3/3)","style":{"italic":true}},{"type":"text","text":"\n\nFor example:\n        "}]},{"type":"rich_text_preformatted","elements":[{"type":"text","text":"xml\n        <test verbose=\"1\" name=\"All Mobile Tests\" annotations=\"JDK\">\n            <groups>\n                <run>\n                    <include name=\"Debug\"/>\n                    <exclude name=\"Broken\"/>\n                </run>\n            </groups>\n        </test>\n        "}]},{"type":"rich_text_section","elements":[{"type":"text","text":"        (Source: `"},{"type":"link","url":"https://paramount.atlassian.net/wiki/spaces/PLQA/pages/47720266`"},{"type":"text","text":")\n\nRemember to replace placeholders like paths, device names, and keys with your specific values."}]}]}]}}
2025-08-21 14:52:45,141 - __main__ - DEBUG - [main.py:553] - Cleaning up DM thread tracking...
2025-08-21 14:52:45,141 - utils - DEBUG - [utils.py:67] - Managing thread: D09A0LFHK8R:1755813150.020259, action: remove, user: U01RMTFMALF
2025-08-21 14:52:45,142 - utils - INFO - [utils.py:100] - Removed thread D09A0LFHK8R:1755813150.020259 from active tracking (remaining: 0)
2025-08-21 14:52:45,590 - slack_bolt.App - DEBUG - [client.py:235] - on_message invoked: (message: {"envelope_id":"3f6c7a89-1afa-4418-afba-5b6bdb40088c","payload":{"token":"yq71khZBCyJF1Ri2hG5aNqr5","team_id":"T010QS7UQNA","enterprise_id":"ERV4P7NAD","context_team_id":null,"context_enterprise_id":"ERV4P7NAD","api_app_id":"A099LACAB2R","event":{"user":"U099R6WTZ9S","type":"message","ts":"1755813164.667949","bot_id":"B099R6WTRU4","app_id":"A099LACAB2R","text":"_(part 2\/3)_\n\nFor a local Android run, these typically include:\n    *   `-Ddriver=android`\n    *   `-DplatformName=Android`\n    *   `-DplatformVersion=11.0` (or your target Android version)\n    *   `-DdeviceName=\"Google Pixel 2XL\"` (or your device name)\n    *   `-Denvironment=local`\n    *   `-Dheadless=false`\n    *   `-Dapp=\"\/pathToPackage\/mobile-8.0.44-210804410-3.5.25-paramountPlus-playStore-release.apk\"` (path to your application package)\n    *   `-Dudid=set this if running on Real Mobile Device only` (set the device ID for a real device)\n    *   `-DbundleId=set to override default setting` (Source: `<https:\/\/paramount.atlassian.net\/wiki\/spaces\/PLQA\/pages\/47711460`>)\n*   *`config.properties` (under `mqe-hob-mobile-tests` directory):* Update this file with desired capabilities:\n    *   `ServerURL=<https:\/\/www.synergyserver.tech?key=YOUR_SYNERGY_KEY>`\n    *   `Platform=ANDROID`\n    *   `Locale=en-us` (or your desired locale)\n    *   `Environment=stage` (or your target environment)\n    *   `UseGeoVPN=false`\n    *   `MobileDeviceCategory=PHONE`\n    *   `DeviceStartOrientation=PORTRAIT`\n    *   `DebugDeviceID=` (Add the device ID of your emulator, obtained by typing `adb devices` in the terminal, or the IP address for a real device)\n    *   `AppPackageUrl=` (URL of the build, will be set once uploaded to the server)\n    *   `AppBuildType=DEBUG`\n    *   `DebugProxyPort=9999`\n    *   `ClientID=` (Machine serial number for local executions or to target a specific private lab machine)\n    *   You can also set `ReRunOnFailure`, `ReRunOnFailureCount`, `SendChatReport`, `SendEmailReport`, `EmailReportRecipients`, `SlackWebhook`, `SlackChannelName`, `SlackTemplateName`, and `EmailTemplateName`. (Source: `<https:\/\/paramount.atlassian.net\/wiki\/spaces\/PLQA\/pages\/47720266`>)\n\n*3. Run the Test:*\nOnce your environment and configurations are set, you have a few ways to run the tests:\n\n*   *From the Terminal:*\n    *   Navigate to your project directory in the terminal. *   Execute the following Maven command:\n        ```bash\n        mvn clean test -pl mqe-hob-mobile-tests -am -Dgroups=Your test case number or tag\n        ```\n        Replace `\"Your test case number or tag\"` with the actual test case number or tag you want to run. (Source: `<https:\/\/paramount.atlassian.net\/wiki\/spaces\/PLQA\/pages\/47720266`>)\n\n*   *From `TestNGSuiteConfig.xml`:*\n    *   Navigate to the `TestNGSuiteConfig.xml` file. *   Right-click on the file and select \"Run TestNGSuiteConfig.xml\". *   Provide the necessary test case ID or tag name within the `&lt;include name=\"\"\/` section.","team":"T010QS7UQNA","bot_profile":{"id":"B099R6WTRU4","deleted":false,"name":"AutoBot","updated":1754677948,"app_id":"A099LACAB2R","user_id":"U099R6WTZ9S","icons":{"image_36":"https:\/\/a.slack-edge.com\/80588\/img\/plugins\/app\/bot_36.png","image_48":"https:\/\/a.slack-edge.com\/80588\/img\/plugins\/app\/bot_48.png","image_72":"https:\/\/a.slack-edge.com\/80588\/img\/plugins\/app\/service_72.png"},"team_id":"T010QS7UQNA"},"thread_ts":"1755813150.020259","parent_user_id":"U01RMTFMALF","blocks":[{"type":"rich_text","block_id":"t8D","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"(part 2\/3)","style":{"italic":true}},{"type":"text","text":"\n\nFor a local Android run, these typically include:\n    *   "},{"type":"text","text":"-Ddriver=android","style":{"code":true}},{"type":"text","text":"\n    *   "},{"type":"text","text":"-DplatformName=Android","style":{"code":true}},{"type":"text","text":"\n    *   "},{"type":"text","text":"-DplatformVersion=11.0","style":{"code":true}},{"type":"text","text":" (or your target Android version)\n    *   "},{"type":"text","text":"-DdeviceName=\"Google Pixel 2XL\"","style":{"code":true}},{"type":"text","text":" (or your device name)\n    *   "},{"type":"text","text":"-Denvironment=local","style":{"code":true}},{"type":"text","text":"\n    *   "},{"type":"text","text":"-Dheadless=false","style":{"code":true}},{"type":"text","text":"\n    *   "},{"type":"text","text":"-Dapp=\"\/pathToPackage\/mobile-8.0.44-210804410-3.5.25-paramountPlus-playStore-release.apk\"","style":{"code":true}},{"type":"text","text":" (path to your application package)\n    *   "},{"type":"text","text":"-Dudid=set this if running on Real Mobile Device only","style":{"code":true}},{"type":"text","text":" (set the device ID for a real device)\n    *   "},{"type":"text","text":"-DbundleId=set to override default setting","style":{"code":true}},{"type":"text","text":" (Source: `"},{"type":"link","url":"https:\/\/paramount.atlassian.net\/wiki\/spaces\/PLQA\/pages\/47711460`"},{"type":"text","text":")\n*   "},{"type":"text","text":"config.properties","style":{"bold":true,"code":true}},{"type":"text","text":" (under ","style":{"bold":true}},{"type":"text","text":"mqe-hob-mobile-tests","style":{"bold":true,"code":true}},{"type":"text","text":" directory):","style":{"bold":true}},{"type":"text","text":" Update this file with desired capabilities:\n    *   "},{"type":"text","text":"ServerURL=","style":{"code":true}},{"type":"link","url":"https:\/\/www.synergyserver.tech?key=YOUR_SYNERGY_KEY","style":{"code":true}},{"type":"text","text":"\n    *   "},{"type":"text","text":"Platform=ANDROID","style":{"code":true}},{"type":"text","text":"\n    *   "},{"type":"text","text":"Locale=en-us","style":{"code":true}},{"type":"text","text":" (or your desired locale)\n    *   "},{"type":"text","text":"Environment=stage","style":{"code":true}},{"type":"text","text":" (or your target environment)\n    *   "},{"type":"text","text":"UseGeoVPN=false","style":{"code":true}},{"type":"text","text":"\n    *   "},{"type":"text","text":"MobileDeviceCategory=PHONE","style":{"code":true}},{"type":"text","text":"\n    *   "},{"type":"text","text":"DeviceStartOrientation=PORTRAIT","style":{"code":true}},{"type":"text","text":"\n    *   "},{"type":"text","text":"DebugDeviceID=","style":{"code":true}},{"type":"text","text":" (Add the device ID of your emulator, obtained by typing "},{"type":"text","text":"adb devices","style":{"code":true}},{"type":"text","text":" in the terminal, or the IP address for a real device)\n    *   "},{"type":"text","text":"AppPackageUrl=","style":{"code":true}},{"type":"text","text":" (URL of the build, will be set once uploaded to the server)\n    *   "},{"type":"text","text":"AppBuildType=DEBUG","style":{"code":true}},{"type":"text","text":"\n    *   "},{"type":"text","text":"DebugProxyPort=9999","style":{"code":true}},{"type":"text","text":"\n    *   "},{"type":"text","text":"ClientID=","style":{"code":true}},{"type":"text","text":" (Machine serial number for local executions or to target a specific private lab machine)\n    *   You can also set "},{"type":"text","text":"ReRunOnFailure","style":{"code":true}},{"type":"text","text":", "},{"type":"text","text":"ReRunOnFailureCount","style":{"code":true}},{"type":"text","text":", "},{"type":"text","text":"SendChatReport","style":{"code":true}},{"type":"text","text":", "},{"type":"text","text":"SendEmailReport","style":{"code":true}},{"type":"text","text":", "},{"type":"text","text":"EmailReportRecipients","style":{"code":true}},{"type":"text","text":", "},{"type":"text","text":"SlackWebhook","style":{"code":true}},{"type":"text","text":", "},{"type":"text","text":"SlackChannelName","style":{"code":true}},{"type":"text","text":", "},{"type":"text","text":"SlackTemplateName","style":{"code":true}},{"type":"text","text":", and "},{"type":"text","text":"EmailTemplateName","style":{"code":true}},{"type":"text","text":". (Source: `"},{"type":"link","url":"https:\/\/paramount.atlassian.net\/wiki\/spaces\/PLQA\/pages\/47720266`"},{"type":"text","text":")\n\n"},{"type":"text","text":"3. Run the Test:","style":{"bold":true}},{"type":"text","text":"\nOnce your environment and configurations are set, you have a few ways to run the tests:\n\n*   "},{"type":"text","text":"From the Terminal:","style":{"bold":true}},{"type":"text","text":"\n    *   Navigate to your project directory in the terminal. *   Execute the following Maven command:\n        "}]},{"type":"rich_text_preformatted","elements":[{"type":"text","text":"bash\n        mvn clean test -pl mqe-hob-mobile-tests -am -Dgroups=Your test case number or tag\n        "}]},{"type":"rich_text_section","elements":[{"type":"text","text":"        Replace "},{"type":"text","text":"\"Your test case number or tag\"","style":{"code":true}},{"type":"text","text":" with the actual test case number or tag you want to run. (Source: `"},{"type":"link","url":"https:\/\/paramount.atlassian.net\/wiki\/spaces\/PLQA\/pages\/47720266`"},{"type":"text","text":")\n\n*   "},{"type":"text","text":"From ","style":{"bold":true}},{"type":"text","text":"TestNGSuiteConfig.xml","style":{"bold":true,"code":true}},{"type":"text","text":":","style":{"bold":true}},{"type":"text","text":"\n    *   Navigate to the "},{"type":"text","text":"TestNGSuiteConfig.xml","style":{"code":true}},{"type":"text","text":" file. *   Right-click on the file and select \"Run TestNGSuiteConfig.xml\". *   Provide the necessary test case ID or tag name within the "},{"type":"text","text":"<include name=\"\"\/","style":{"code":true}},{"type":"text","text":" section."}]}]}],"channel":"D09A0LFHK8R","event_ts":"1755813164.667949","channel_type":"im"},"type":"event_callback","event_id":"Ev09BC4TN8CT","event_time":1755813164,"authorizations":[{"enterprise_id":"ERV4P7NAD","team_id":"T010QS7UQNA","user_id":"U099R6WTZ9S","is_bot":true,"is_enterprise_install":false}],"is_ext_shared_channel":false,"event_context":"4-eyJldCI6Im1lc3NhZ2UiLCJ0aWQiOiJUMDEwUVM3VVFOQSIsImFpZCI6IkEwOTlMQUNBQjJSIiwiY2lkIjoiRDA5QTBMRkhLOFIifQ"},"type":"events_api","accepts_response_payload":false,"retry_attempt":0,"retry_reason":""})
2025-08-21 14:52:45,592 - slack_bolt.App - DEBUG - [client.py:99] - A new message enqueued (current queue size: 1)
2025-08-21 14:52:45,592 - slack_bolt.App - DEBUG - [client.py:105] - A message dequeued (current queue size: 0)
2025-08-21 14:52:45,592 - slack_bolt.App - DEBUG - [client.py:125] - Message processing started (type: events_api, envelope_id: 3f6c7a89-1afa-4418-afba-5b6bdb40088c)
2025-08-21 14:52:45,593 - slack_bolt.App - DEBUG - [app.py:476] - Applying slack_bolt.middleware.ssl_check.ssl_check.SslCheck
2025-08-21 14:52:45,593 - slack_bolt.App - DEBUG - [app.py:476] - Applying slack_bolt.middleware.request_verification.request_verification.RequestVerification
2025-08-21 14:52:45,593 - slack_bolt.App - DEBUG - [app.py:476] - Applying slack_bolt.middleware.authorization.single_team_authorization.SingleTeamAuthorization
2025-08-21 14:52:45,593 - slack_bolt.App - DEBUG - [app.py:476] - Applying slack_bolt.middleware.ignoring_self_events.ignoring_self_events.IgnoringSelfEvents
2025-08-21 14:52:45,593 - slack_bolt.IgnoringSelfEvents - DEBUG - [ignoring_self_events.py:60] - Skipped self event: {'user': 'U099R6WTZ9S', 'type': 'message', 'ts': '1755813164.667949', 'bot_id': 'B099R6WTRU4', 'app_id': 'A099LACAB2R', 'text': '_(part 2/3)_\n\nFor a local Android run, these typically include:\n    *   `-Ddriver=android`\n    *   `-DplatformName=Android`\n    *   `-DplatformVersion=11.0` (or your target Android version)\n    *   `-DdeviceName="Google Pixel 2XL"` (or your device name)\n    *   `-Denvironment=local`\n    *   `-Dheadless=false`\n    *   `-Dapp="/pathToPackage/mobile-8.0.44-210804410-3.5.25-paramountPlus-playStore-release.apk"` (path to your application package)\n    *   `-Dudid=set this if running on Real Mobile Device only` (set the device ID for a real device)\n    *   `-DbundleId=set to override default setting` (Source: `<https://paramount.atlassian.net/wiki/spaces/PLQA/pages/47711460`>)\n*   *`config.properties` (under `mqe-hob-mobile-tests` directory):* Update this file with desired capabilities:\n    *   `ServerURL=<https://www.synergyserver.tech?key=YOUR_SYNERGY_KEY>`\n    *   `Platform=ANDROID`\n    *   `Locale=en-us` (or your desired locale)\n    *   `Environment=stage` (or your target environment)\n    *   `UseGeoVPN=false`\n    *   `MobileDeviceCategory=PHONE`\n    *   `DeviceStartOrientation=PORTRAIT`\n    *   `DebugDeviceID=` (Add the device ID of your emulator, obtained by typing `adb devices` in the terminal, or the IP address for a real device)\n    *   `AppPackageUrl=` (URL of the build, will be set once uploaded to the server)\n    *   `AppBuildType=DEBUG`\n    *   `DebugProxyPort=9999`\n    *   `ClientID=` (Machine serial number for local executions or to target a specific private lab machine)\n    *   You can also set `ReRunOnFailure`, `ReRunOnFailureCount`, `SendChatReport`, `SendEmailReport`, `EmailReportRecipients`, `SlackWebhook`, `SlackChannelName`, `SlackTemplateName`, and `EmailTemplateName`. (Source: `<https://paramount.atlassian.net/wiki/spaces/PLQA/pages/47720266`>)\n\n*3. Run the Test:*\nOnce your environment and configurations are set, you have a few ways to run the tests:\n\n*   *From the Terminal:*\n    *   Navigate to your project directory in the terminal. *   Execute the following Maven command:\n        ```bash\n        mvn clean test -pl mqe-hob-mobile-tests -am -Dgroups=Your test case number or tag\n        ```\n        Replace `"Your test case number or tag"` with the actual test case number or tag you want to run. (Source: `<https://paramount.atlassian.net/wiki/spaces/PLQA/pages/47720266`>)\n\n*   *From `TestNGSuiteConfig.xml`:*\n    *   Navigate to the `TestNGSuiteConfig.xml` file. *   Right-click on the file and select "Run TestNGSuiteConfig.xml". *   Provide the necessary test case ID or tag name within the `&lt;include name=""/` section.', 'team': 'T010QS7UQNA', 'bot_profile': {'id': 'B099R6WTRU4', 'deleted': False, 'name': 'AutoBot', 'updated': 1754677948, 'app_id': 'A099LACAB2R', 'user_id': 'U099R6WTZ9S', 'icons': {'image_36': 'https://a.slack-edge.com/80588/img/plugins/app/bot_36.png', 'image_48': 'https://a.slack-edge.com/80588/img/plugins/app/bot_48.png', 'image_72': 'https://a.slack-edge.com/80588/img/plugins/app/service_72.png'}, 'team_id': 'T010QS7UQNA'}, 'thread_ts': '1755813150.020259', 'parent_user_id': 'U01RMTFMALF', 'blocks': [{'type': 'rich_text', 'block_id': 't8D', 'elements': [{'type': 'rich_text_section', 'elements': [{'type': 'text', 'text': '(part 2/3)', 'style': {'italic': True}}, {'type': 'text', 'text': '\n\nFor a local Android run, these typically include:\n    *   '}, {'type': 'text', 'text': '-Ddriver=android', 'style': {'code': True}}, {'type': 'text', 'text': '\n    *   '}, {'type': 'text', 'text': '-DplatformName=Android', 'style': {'code': True}}, {'type': 'text', 'text': '\n    *   '}, {'type': 'text', 'text': '-DplatformVersion=11.0', 'style': {'code': True}}, {'type': 'text', 'text': ' (or your target Android version)\n    *   '}, {'type': 'text', 'text': '-DdeviceName="Google Pixel 2XL"', 'style': {'code': True}}, {'type': 'text', 'text': ' (or your device name)\n    *   '}, {'type': 'text', 'text': '-Denvironment=local', 'style': {'code': True}}, {'type': 'text', 'text': '\n    *   '}, {'type': 'text', 'text': '-Dheadless=false', 'style': {'code': True}}, {'type': 'text', 'text': '\n    *   '}, {'type': 'text', 'text': '-Dapp="/pathToPackage/mobile-8.0.44-210804410-3.5.25-paramountPlus-playStore-release.apk"', 'style': {'code': True}}, {'type': 'text', 'text': ' (path to your application package)\n    *   '}, {'type': 'text', 'text': '-Dudid=set this if running on Real Mobile Device only', 'style': {'code': True}}, {'type': 'text', 'text': ' (set the device ID for a real device)\n    *   '}, {'type': 'text', 'text': '-DbundleId=set to override default setting', 'style': {'code': True}}, {'type': 'text', 'text': ' (Source: `'}, {'type': 'link', 'url': 'https://paramount.atlassian.net/wiki/spaces/PLQA/pages/47711460`'}, {'type': 'text', 'text': ')\n*   '}, {'type': 'text', 'text': 'config.properties', 'style': {'bold': True, 'code': True}}, {'type': 'text', 'text': ' (under ', 'style': {'bold': True}}, {'type': 'text', 'text': 'mqe-hob-mobile-tests', 'style': {'bold': True, 'code': True}}, {'type': 'text', 'text': ' directory):', 'style': {'bold': True}}, {'type': 'text', 'text': ' Update this file with desired capabilities:\n    *   '}, {'type': 'text', 'text': 'ServerURL=', 'style': {'code': True}}, {'type': 'link', 'url': 'https://www.synergyserver.tech?key=YOUR_SYNERGY_KEY', 'style': {'code': True}}, {'type': 'text', 'text': '\n    *   '}, {'type': 'text', 'text': 'Platform=ANDROID', 'style': {'code': True}}, {'type': 'text', 'text': '\n    *   '}, {'type': 'text', 'text': 'Locale=en-us', 'style': {'code': True}}, {'type': 'text', 'text': ' (or your desired locale)\n    *   '}, {'type': 'text', 'text': 'Environment=stage', 'style': {'code': True}}, {'type': 'text', 'text': ' (or your target environment)\n    *   '}, {'type': 'text', 'text': 'UseGeoVPN=false', 'style': {'code': True}}, {'type': 'text', 'text': '\n    *   '}, {'type': 'text', 'text': 'MobileDeviceCategory=PHONE', 'style': {'code': True}}, {'type': 'text', 'text': '\n    *   '}, {'type': 'text', 'text': 'DeviceStartOrientation=PORTRAIT', 'style': {'code': True}}, {'type': 'text', 'text': '\n    *   '}, {'type': 'text', 'text': 'DebugDeviceID=', 'style': {'code': True}}, {'type': 'text', 'text': ' (Add the device ID of your emulator, obtained by typing '}, {'type': 'text', 'text': 'adb devices', 'style': {'code': True}}, {'type': 'text', 'text': ' in the terminal, or the IP address for a real device)\n    *   '}, {'type': 'text', 'text': 'AppPackageUrl=', 'style': {'code': True}}, {'type': 'text', 'text': ' (URL of the build, will be set once uploaded to the server)\n    *   '}, {'type': 'text', 'text': 'AppBuildType=DEBUG', 'style': {'code': True}}, {'type': 'text', 'text': '\n    *   '}, {'type': 'text', 'text': 'DebugProxyPort=9999', 'style': {'code': True}}, {'type': 'text', 'text': '\n    *   '}, {'type': 'text', 'text': 'ClientID=', 'style': {'code': True}}, {'type': 'text', 'text': ' (Machine serial number for local executions or to target a specific private lab machine)\n    *   You can also set '}, {'type': 'text', 'text': 'ReRunOnFailure', 'style': {'code': True}}, {'type': 'text', 'text': ', '}, {'type': 'text', 'text': 'ReRunOnFailureCount', 'style': {'code': True}}, {'type': 'text', 'text': ', '}, {'type': 'text', 'text': 'SendChatReport', 'style': {'code': True}}, {'type': 'text', 'text': ', '}, {'type': 'text', 'text': 'SendEmailReport', 'style': {'code': True}}, {'type': 'text', 'text': ', '}, {'type': 'text', 'text': 'EmailReportRecipients', 'style': {'code': True}}, {'type': 'text', 'text': ', '}, {'type': 'text', 'text': 'SlackWebhook', 'style': {'code': True}}, {'type': 'text', 'text': ', '}, {'type': 'text', 'text': 'SlackChannelName', 'style': {'code': True}}, {'type': 'text', 'text': ', '}, {'type': 'text', 'text': 'SlackTemplateName', 'style': {'code': True}}, {'type': 'text', 'text': ', and '}, {'type': 'text', 'text': 'EmailTemplateName', 'style': {'code': True}}, {'type': 'text', 'text': '. (Source: `'}, {'type': 'link', 'url': 'https://paramount.atlassian.net/wiki/spaces/PLQA/pages/47720266`'}, {'type': 'text', 'text': ')\n\n'}, {'type': 'text', 'text': '3. Run the Test:', 'style': {'bold': True}}, {'type': 'text', 'text': '\nOnce your environment and configurations are set, you have a few ways to run the tests:\n\n*   '}, {'type': 'text', 'text': 'From the Terminal:', 'style': {'bold': True}}, {'type': 'text', 'text': '\n    *   Navigate to your project directory in the terminal. *   Execute the following Maven command:\n        '}]}, {'type': 'rich_text_preformatted', 'elements': [{'type': 'text', 'text': 'bash\n        mvn clean test -pl mqe-hob-mobile-tests -am -Dgroups=Your test case number or tag\n        '}]}, {'type': 'rich_text_section', 'elements': [{'type': 'text', 'text': '        Replace '}, {'type': 'text', 'text': '"Your test case number or tag"', 'style': {'code': True}}, {'type': 'text', 'text': ' with the actual test case number or tag you want to run. (Source: `'}, {'type': 'link', 'url': 'https://paramount.atlassian.net/wiki/spaces/PLQA/pages/47720266`'}, {'type': 'text', 'text': ')\n\n*   '}, {'type': 'text', 'text': 'From ', 'style': {'bold': True}}, {'type': 'text', 'text': 'TestNGSuiteConfig.xml', 'style': {'bold': True, 'code': True}}, {'type': 'text', 'text': ':', 'style': {'bold': True}}, {'type': 'text', 'text': '\n    *   Navigate to the '}, {'type': 'text', 'text': 'TestNGSuiteConfig.xml', 'style': {'code': True}}, {'type': 'text', 'text': ' file. *   Right-click on the file and select "Run TestNGSuiteConfig.xml". *   Provide the necessary test case ID or tag name within the '}, {'type': 'text', 'text': '<include name=""/', 'style': {'code': True}}, {'type': 'text', 'text': ' section.'}]}]}], 'channel': 'D09A0LFHK8R', 'event_ts': '1755813164.667949', 'channel_type': 'im'}
2025-08-21 14:52:45,593 - slack_bolt.App - DEBUG - [client.py:200] - Sending a message (session id: a9e3e27a-b7f1-468d-977b-9a7a192bf09a, message: {"envelope_id": "3f6c7a89-1afa-4418-afba-5b6bdb40088c"})
2025-08-21 14:52:45,594 - slack_bolt.App - DEBUG - [internals.py:41] - Response time: 1 milliseconds
2025-08-21 14:52:45,594 - slack_bolt.App - DEBUG - [client.py:150] - Message processing completed (type: events_api, envelope_id: 3f6c7a89-1afa-4418-afba-5b6bdb40088c)
2025-08-21 14:52:46,182 - slack_bolt.App - DEBUG - [client.py:235] - on_message invoked: (message: {"envelope_id":"433b0f0a-77c2-44f1-9c70-c8a016c2c3b1","payload":{"token":"yq71khZBCyJF1Ri2hG5aNqr5","team_id":"T010QS7UQNA","enterprise_id":"ERV4P7NAD","context_team_id":null,"context_enterprise_id":"ERV4P7NAD","api_app_id":"A099LACAB2R","event":{"user":"U099R6WTZ9S","type":"message","ts":"1755813165.052709","bot_id":"B099R6WTRU4","app_id":"A099LACAB2R","text":"_(part 3\/3)_\n\nFor example:\n        ```xml\n        &lt;test verbose=\"1\" name=\"All Mobile Tests\" annotations=\"JDK\"&gt;\n            &lt;groups&gt;\n                &lt;run&gt;\n                    &lt;include name=\"Debug\"\/&gt;\n                    &lt;exclude name=\"Broken\"\/&gt;\n                &lt;\/run&gt;\n            &lt;\/groups&gt;\n        &lt;\/test&gt;\n        ```\n        (Source: `<https:\/\/paramount.atlassian.net\/wiki\/spaces\/PLQA\/pages\/47720266`>)\n\nRemember to replace placeholders like paths, device names, and keys with your specific values.","team":"T010QS7UQNA","bot_profile":{"id":"B099R6WTRU4","deleted":false,"name":"AutoBot","updated":1754677948,"app_id":"A099LACAB2R","user_id":"U099R6WTZ9S","icons":{"image_36":"https:\/\/a.slack-edge.com\/80588\/img\/plugins\/app\/bot_36.png","image_48":"https:\/\/a.slack-edge.com\/80588\/img\/plugins\/app\/bot_48.png","image_72":"https:\/\/a.slack-edge.com\/80588\/img\/plugins\/app\/service_72.png"},"team_id":"T010QS7UQNA"},"thread_ts":"1755813150.020259","parent_user_id":"U01RMTFMALF","blocks":[{"type":"rich_text","block_id":"\/r7","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"(part 3\/3)","style":{"italic":true}},{"type":"text","text":"\n\nFor example:\n        "}]},{"type":"rich_text_preformatted","elements":[{"type":"text","text":"xml\n        <test verbose=\"1\" name=\"All Mobile Tests\" annotations=\"JDK\">\n            <groups>\n                <run>\n                    <include name=\"Debug\"\/>\n                    <exclude name=\"Broken\"\/>\n                <\/run>\n            <\/groups>\n        <\/test>\n        "}]},{"type":"rich_text_section","elements":[{"type":"text","text":"        (Source: `"},{"type":"link","url":"https:\/\/paramount.atlassian.net\/wiki\/spaces\/PLQA\/pages\/47720266`"},{"type":"text","text":")\n\nRemember to replace placeholders like paths, device names, and keys with your specific values."}]}]}],"channel":"D09A0LFHK8R","event_ts":"1755813165.052709","channel_type":"im"},"type":"event_callback","event_id":"Ev09BH3MJU4S","event_time":1755813165,"authorizations":[{"enterprise_id":"ERV4P7NAD","team_id":"T010QS7UQNA","user_id":"U099R6WTZ9S","is_bot":true,"is_enterprise_install":false}],"is_ext_shared_channel":false,"event_context":"4-eyJldCI6Im1lc3NhZ2UiLCJ0aWQiOiJUMDEwUVM3VVFOQSIsImFpZCI6IkEwOTlMQUNBQjJSIiwiY2lkIjoiRDA5QTBMRkhLOFIifQ"},"type":"events_api","accepts_response_payload":false,"retry_attempt":0,"retry_reason":""})
2025-08-21 14:52:46,183 - slack_bolt.App - DEBUG - [client.py:99] - A new message enqueued (current queue size: 1)
2025-08-21 14:52:46,183 - slack_bolt.App - DEBUG - [client.py:105] - A message dequeued (current queue size: 0)
2025-08-21 14:52:46,184 - slack_bolt.App - DEBUG - [client.py:125] - Message processing started (type: events_api, envelope_id: 433b0f0a-77c2-44f1-9c70-c8a016c2c3b1)
2025-08-21 14:52:46,184 - slack_bolt.App - DEBUG - [app.py:476] - Applying slack_bolt.middleware.ssl_check.ssl_check.SslCheck
2025-08-21 14:52:46,184 - slack_bolt.App - DEBUG - [app.py:476] - Applying slack_bolt.middleware.request_verification.request_verification.RequestVerification
2025-08-21 14:52:46,184 - slack_bolt.App - DEBUG - [app.py:476] - Applying slack_bolt.middleware.authorization.single_team_authorization.SingleTeamAuthorization
2025-08-21 14:52:46,185 - slack_bolt.App - DEBUG - [app.py:476] - Applying slack_bolt.middleware.ignoring_self_events.ignoring_self_events.IgnoringSelfEvents
2025-08-21 14:52:46,185 - slack_bolt.IgnoringSelfEvents - DEBUG - [ignoring_self_events.py:60] - Skipped self event: {'user': 'U099R6WTZ9S', 'type': 'message', 'ts': '1755813165.052709', 'bot_id': 'B099R6WTRU4', 'app_id': 'A099LACAB2R', 'text': '_(part 3/3)_\n\nFor example:\n        ```xml\n        &lt;test verbose="1" name="All Mobile Tests" annotations="JDK"&gt;\n            &lt;groups&gt;\n                &lt;run&gt;\n                    &lt;include name="Debug"/&gt;\n                    &lt;exclude name="Broken"/&gt;\n                &lt;/run&gt;\n            &lt;/groups&gt;\n        &lt;/test&gt;\n        ```\n        (Source: `<https://paramount.atlassian.net/wiki/spaces/PLQA/pages/47720266`>)\n\nRemember to replace placeholders like paths, device names, and keys with your specific values.', 'team': 'T010QS7UQNA', 'bot_profile': {'id': 'B099R6WTRU4', 'deleted': False, 'name': 'AutoBot', 'updated': 1754677948, 'app_id': 'A099LACAB2R', 'user_id': 'U099R6WTZ9S', 'icons': {'image_36': 'https://a.slack-edge.com/80588/img/plugins/app/bot_36.png', 'image_48': 'https://a.slack-edge.com/80588/img/plugins/app/bot_48.png', 'image_72': 'https://a.slack-edge.com/80588/img/plugins/app/service_72.png'}, 'team_id': 'T010QS7UQNA'}, 'thread_ts': '1755813150.020259', 'parent_user_id': 'U01RMTFMALF', 'blocks': [{'type': 'rich_text', 'block_id': '/r7', 'elements': [{'type': 'rich_text_section', 'elements': [{'type': 'text', 'text': '(part 3/3)', 'style': {'italic': True}}, {'type': 'text', 'text': '\n\nFor example:\n        '}]}, {'type': 'rich_text_preformatted', 'elements': [{'type': 'text', 'text': 'xml\n        <test verbose="1" name="All Mobile Tests" annotations="JDK">\n            <groups>\n                <run>\n                    <include name="Debug"/>\n                    <exclude name="Broken"/>\n                </run>\n            </groups>\n        </test>\n        '}]}, {'type': 'rich_text_section', 'elements': [{'type': 'text', 'text': '        (Source: `'}, {'type': 'link', 'url': 'https://paramount.atlassian.net/wiki/spaces/PLQA/pages/47720266`'}, {'type': 'text', 'text': ')\n\nRemember to replace placeholders like paths, device names, and keys with your specific values.'}]}]}], 'channel': 'D09A0LFHK8R', 'event_ts': '1755813165.052709', 'channel_type': 'im'}
2025-08-21 14:52:46,185 - slack_bolt.App - DEBUG - [client.py:200] - Sending a message (session id: a9e3e27a-b7f1-468d-977b-9a7a192bf09a, message: {"envelope_id": "433b0f0a-77c2-44f1-9c70-c8a016c2c3b1"})
2025-08-21 14:52:46,185 - slack_bolt.App - DEBUG - [internals.py:41] - Response time: 1 milliseconds
2025-08-21 14:52:46,185 - slack_bolt.App - DEBUG - [client.py:150] - Message processing completed (type: events_api, envelope_id: 433b0f0a-77c2-44f1-9c70-c8a016c2c3b1)
2025-08-21 15:05:43,295 - __main__ - INFO - [main.py:43] - Loading application configuration...
2025-08-21 15:05:43,296 - __main__ - INFO - [main.py:45] - Configuration loaded successfully
2025-08-21 15:05:43,296 - __main__ - INFO - [main.py:48] - Initializing security components...
2025-08-21 15:05:43,296 - __main__ - DEBUG - [main.py:50] - Slack validator initialized
2025-08-21 15:05:43,296 - security.content_filter - INFO - [content_filter.py:39] - Content filter initialized with 11 patterns
2025-08-21 15:05:43,296 - __main__ - DEBUG - [main.py:53] - Content filter initialized
2025-08-21 15:05:43,296 - auth.admin_manager - INFO - [admin_manager.py:27] - Admin manager initialized with 2 admin users
2025-08-21 15:05:43,296 - __main__ - DEBUG - [main.py:56] - Admin manager initialized
2025-08-21 15:05:43,296 - auth.email_whitelist - INFO - [email_whitelist.py:28] - Email whitelist initialized with 1 whitelisted emails
2025-08-21 15:05:43,296 - auth.email_whitelist - INFO - [email_whitelist.py:37] - Whitelisted domains: paramount.com
2025-08-21 15:05:43,296 - __main__ - DEBUG - [main.py:59] - Email whitelist initialized with 1 emails
2025-08-21 15:05:43,296 - auth.slack_user_info - DEBUG - [slack_user_info.py:25] - Slack user info manager initialized
2025-08-21 15:05:43,296 - __main__ - DEBUG - [main.py:62] - Slack user info manager initialized
2025-08-21 15:05:43,296 - __main__ - INFO - [main.py:63] - Security components initialized successfully
2025-08-21 15:05:43,296 - __main__ - INFO - [main.py:66] - Initializing Slack app...
2025-08-21 15:05:43,331 - slack_bolt.App - DEBUG - [base_client.py:255] - Sending a request - url: https://slack.com/api/auth.test, query_params: {}, body_params: {}, files: {}, json_body: None, headers: {'Content-Type': 'application/x-www-form-urlencoded', 'Authorization': '(redacted)', 'User-Agent': 'Bolt/1.16.0 Python/3.12.0 slackclient/3.34.0 Darwin/23.4.0'}
2025-08-21 15:05:43,703 - slack_bolt.App - DEBUG - [base_client.py:546] - Received the following response - status: 200, headers: {'date': 'Thu, 21 Aug 2025 22:05:43 GMT', 'server': 'Apache', 'vary': 'Accept-Encoding', 'x-slack-req-id': '5e9770242e85729e1c8ba6ec42a725f6', 'x-content-type-options': 'nosniff', 'x-xss-protection': '0', 'pragma': 'no-cache', 'cache-control': 'private, no-cache, no-store, must-revalidate', 'expires': 'Sat, 26 Jul 1997 05:00:00 GMT', 'content-type': 'application/json; charset=utf-8', 'x-oauth-scopes': 'app_mentions:read,channels:history,chat:write,im:history,im:read,im:write,users:read,reactions:write,users:read.email', 'access-control-expose-headers': 'x-slack-req-id, retry-after', 'access-control-allow-headers': 'slack-route, x-slack-version-ts, x-b3-traceid, x-b3-spanid, x-b3-parentspanid, x-b3-sampled, x-b3-flags', 'strict-transport-security': 'max-age=31536000; includeSubDomains; preload', 'referrer-policy': 'no-referrer', 'x-slack-unique-id': 'aKeYNzP_JAirWYgcVRNj_QAAAD0', 'x-slack-backend': 'r', 'access-control-allow-origin': '*', 'content-length': '228', 'via': '1.1 slack-prod.tinyspeck.com, envoy-www-iad-qekjveog,envoy-edge-pdx-kiblsbqi', 'x-envoy-attempt-count': '1', 'x-envoy-upstream-service-time': '90', 'x-backend': 'main_normal main_canary_with_overflow main_control_with_overflow', 'x-server': 'slack-www-hhvm-main-iad-vpjo', 'x-slack-shared-secret-outcome': 'no-match', 'x-edge-backend': 'envoy-www', 'timing-allow-origin': '*', 'x-slack-edge-shared-secret-outcome': 'no-match', 'connection': 'close'}, body: {"ok":true,"url":"https://viacomcbs-grid-test.slack.com/","team":"Test Workspace","user":"autobot","team_id":"T010QS7UQNA","user_id":"U099R6WTZ9S","bot_id":"B099R6WTRU4","enterprise_id":"ERV4P7NAD","is_enterprise_install":false}
2025-08-21 15:05:43,704 - __main__ - INFO - [main.py:68] - Slack app initialized successfully
2025-08-21 15:05:43,704 - __main__ - DEBUG - [main.py:72] - Message deduplication cache initialized
2025-08-21 15:05:43,704 - __main__ - DEBUG - [main.py:77] - Thread tracking initialized
2025-08-21 15:05:43,704 - __main__ - INFO - [main.py:80] - Initializing DIG AI integration...
2025-08-21 15:05:43,705 - dig_connector - INFO - [dig_connector.py:284] - Initializing DIG AI with model ID: 42
2025-08-21 15:05:43,705 - dig_connector - INFO - [dig_connector.py:49] - Starting DIG chat session initialization...
2025-08-21 15:05:43,705 - dig_connector - DEBUG - [dig_connector.py:52] - Creating chat with name: Slack Bot Session 2025-08-21T22:05:43.705500+00:00
2025-08-21 15:05:43,705 - dig_connector - DEBUG - [dig_connector.py:63] - Creating chat - URL: https://ai.digdev.cbsicloud.com/fastapi/chats, Payload: {'chat_nm': 'Slack Bot Session 2025-08-21T22:05:43.705500+00:00', 'model_id': 42}
2025-08-21 15:05:43,710 - urllib3.connectionpool - DEBUG - [connectionpool.py:1055] - Starting new HTTPS connection (1): ai.digdev.cbsicloud.com:443
2025-08-21 15:05:43,992 - urllib3.connectionpool - DEBUG - [connectionpool.py:549] - https://ai.digdev.cbsicloud.com:443 "POST /fastapi/chats HTTP/1.1" 200 217
2025-08-21 15:05:43,993 - dig_connector - DEBUG - [dig_connector.py:66] - Create chat response: status=200
2025-08-21 15:05:43,993 - dig_connector - INFO - [dig_connector.py:54] - Successfully initialized DIG chat session with ID: 868
2025-08-21 15:05:43,993 - __main__ - INFO - [main.py:83] - DIG AI integration successfully initialized
2025-08-21 15:05:43,993 - __main__ - INFO - [main.py:87] - Setting up event handlers...
2025-08-21 15:05:43,994 - __main__ - INFO - [main.py:683] - Starting AI Assistant Bot...
2025-08-21 15:05:43,995 - __main__ - INFO - [main.py:684] - Registering event handlers...
2025-08-21 15:05:43,995 - __main__ - DEBUG - [main.py:685] - Event handlers registered: app_mention, message, app_home_opened
2025-08-21 15:05:43,995 - __main__ - INFO - [main.py:688] - Connecting to Slack via Socket Mode...
2025-08-21 15:05:43,995 - __main__ - INFO - [main.py:692] - Socket Mode handler created successfully
2025-08-21 15:05:43,996 - __main__ - INFO - [main.py:694] - ✅ Bot is now running and listening for events!
2025-08-21 15:05:43,996 - slack_bolt.App - DEBUG - [base_client.py:255] - Sending a request - url: https://slack.com/api/apps.connections.open, query_params: {}, body_params: {}, files: {}, json_body: None, headers: {'Content-Type': 'application/x-www-form-urlencoded', 'Authorization': '(redacted)', 'User-Agent': 'Bolt/1.16.0 Python/3.12.0 slackclient/3.34.0 Darwin/23.4.0'}
2025-08-21 15:05:44,308 - slack_bolt.App - DEBUG - [base_client.py:546] - Received the following response - status: 200, headers: {'date': 'Thu, 21 Aug 2025 22:05:44 GMT', 'server': 'Apache', 'vary': 'Accept-Encoding', 'x-slack-req-id': 'f8035f2cbccec6e98dd214e3a84c9fb8', 'x-content-type-options': 'nosniff', 'x-xss-protection': '0', 'x-robots-tag': 'noindex,nofollow', 'pragma': 'no-cache', 'cache-control': 'private, no-cache, no-store, must-revalidate', 'expires': 'Sat, 26 Jul 1997 05:00:00 GMT', 'content-type': 'application/json; charset=utf-8', 'x-accepted-oauth-scopes': 'connections:write', 'x-oauth-scopes': 'connections:write', 'access-control-expose-headers': 'x-slack-req-id, retry-after', 'access-control-allow-headers': 'slack-route, x-slack-version-ts, x-b3-traceid, x-b3-spanid, x-b3-parentspanid, x-b3-sampled, x-b3-flags', 'strict-transport-security': 'max-age=31536000; includeSubDomains; preload', 'referrer-policy': 'no-referrer', 'x-slack-unique-id': 'aKeYOJuvGWMKPQW0LL-w5AAAADY', 'x-slack-backend': 'r', 'access-control-allow-origin': '*', 'content-length': '173', 'via': '1.1 slack-prod.tinyspeck.com, envoy-www-iad-rkbmbuoe,envoy-edge-pdx-xyahxoze', 'x-envoy-attempt-count': '1', 'x-envoy-upstream-service-time': '81', 'x-backend': 'main_normal main_canary_with_overflow main_control_with_overflow', 'x-server': 'slack-www-hhvm-main-iad-iich', 'x-slack-shared-secret-outcome': 'no-match', 'x-edge-backend': 'envoy-www', 'timing-allow-origin': '*', 'x-slack-edge-shared-secret-outcome': 'no-match', 'connection': 'close'}, body: {"ok":true,"url":"wss:\/\/wss-primary.slack.com\/link\/?ticket=4bd7087c-5280-4cfd-8b26-ea0dde6fd67d&app_id=a6c8d361ee1c6f398c5b4afec831555b78d7affa753b16bcc0fc64d7c13f3766"}
2025-08-21 15:05:44,910 - slack_bolt.App - INFO - [client.py:192] - A new session has been established (session id: ba76bde4-0d28-43d6-8d56-c30fb04ace9a)
2025-08-21 15:05:44,910 - slack_bolt.App - INFO - [base_handler.py:50] - ⚡️ Bolt app is running!
2025-08-21 15:05:44,929 - slack_bolt.App - INFO - [client.py:265] - Starting to receive messages from a new connection (session id: ba76bde4-0d28-43d6-8d56-c30fb04ace9a)
2025-08-21 15:05:44,930 - slack_bolt.App - DEBUG - [client.py:235] - on_message invoked: (message: {"type":"hello","num_connections":1,"debug_info":{"host":"applink-13","build_number":0,"approximate_connection_time":18060},"connection_info":{"app_id":"A099LACAB2R"}})
2025-08-21 15:05:44,931 - slack_bolt.App - DEBUG - [client.py:99] - A new message enqueued (current queue size: 1)
2025-08-21 15:05:44,931 - slack_bolt.App - DEBUG - [client.py:105] - A message dequeued (current queue size: 0)
2025-08-21 15:05:44,932 - slack_bolt.App - DEBUG - [client.py:125] - Message processing started (type: hello, envelope_id: None)
2025-08-21 15:05:44,932 - slack_bolt.App - DEBUG - [client.py:150] - Message processing completed (type: hello, envelope_id: None)
2025-08-21 15:05:50,119 - slack_bolt.App - DEBUG - [client.py:235] - on_message invoked: (message: {"envelope_id":"714a7223-bc41-4886-8296-214e988ca1a7","payload":{"token":"yq71khZBCyJF1Ri2hG5aNqr5","team_id":"T010QS7UQNA","enterprise_id":"ERV4P7NAD","context_team_id":null,"context_enterprise_id":"ERV4P7NAD","api_app_id":"A099LACAB2R","event":{"user":"U01RMTFMALF","type":"message","ts":"1755813948.960839","client_msg_id":"0b1d98c8-f687-4f8a-bec8-267dd0e68481","text":"How can i run an automated test on a local Android phone?","blocks":[{"type":"rich_text","block_id":"vQwBP","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"How can i run an automated test on a local Android phone?"}]}]}],"channel":"D09A0LFHK8R","event_ts":"1755813948.960839","channel_type":"im"},"type":"event_callback","event_id":"Ev09BK2BEM1U","event_time":1755813948,"authorizations":[{"enterprise_id":"ERV4P7NAD","team_id":"T010QS7UQNA","user_id":"U099R6WTZ9S","is_bot":true,"is_enterprise_install":false}],"is_ext_shared_channel":false,"event_context":"4-eyJldCI6Im1lc3NhZ2UiLCJ0aWQiOiJUMDEwUVM3VVFOQSIsImFpZCI6IkEwOTlMQUNBQjJSIiwiY2lkIjoiRDA5QTBMRkhLOFIifQ"},"type":"events_api","accepts_response_payload":false,"retry_attempt":0,"retry_reason":""})
2025-08-21 15:05:50,120 - slack_bolt.App - DEBUG - [client.py:99] - A new message enqueued (current queue size: 1)
2025-08-21 15:05:50,120 - slack_bolt.App - DEBUG - [client.py:105] - A message dequeued (current queue size: 0)
2025-08-21 15:05:50,122 - slack_bolt.App - DEBUG - [client.py:125] - Message processing started (type: events_api, envelope_id: 714a7223-bc41-4886-8296-214e988ca1a7)
2025-08-21 15:05:50,123 - slack_bolt.App - DEBUG - [app.py:476] - Applying slack_bolt.middleware.ssl_check.ssl_check.SslCheck
2025-08-21 15:05:50,123 - slack_bolt.App - DEBUG - [app.py:476] - Applying slack_bolt.middleware.request_verification.request_verification.RequestVerification
2025-08-21 15:05:50,123 - slack_bolt.App - DEBUG - [app.py:476] - Applying slack_bolt.middleware.authorization.single_team_authorization.SingleTeamAuthorization
2025-08-21 15:05:50,124 - slack_bolt.App - DEBUG - [app.py:476] - Applying slack_bolt.middleware.ignoring_self_events.ignoring_self_events.IgnoringSelfEvents
2025-08-21 15:05:50,124 - slack_bolt.App - DEBUG - [app.py:476] - Applying slack_bolt.middleware.url_verification.url_verification.UrlVerification
2025-08-21 15:05:50,124 - slack_bolt.App - DEBUG - [app.py:500] - Checking listener: handle_app_mentions ...
2025-08-21 15:05:50,124 - slack_bolt.App - DEBUG - [app.py:500] - Checking listener: help_message ...
2025-08-21 15:05:50,125 - slack_bolt.App - DEBUG - [app.py:500] - Checking listener: handle_dm_messages ...
2025-08-21 15:05:50,125 - slack_bolt.App - DEBUG - [app.py:522] - Running listener: handle_dm_messages ...
2025-08-21 15:05:50,125 - __main__ - INFO - [main.py:433] - === DM MESSAGE EVENT RECEIVED ===
2025-08-21 15:05:50,125 - slack_bolt.App - DEBUG - [thread_runner.py:198] - Responding with status: 200 body: "" (0 millis)
2025-08-21 15:05:50,125 - __main__ - DEBUG - [main.py:434] - Full event body: {'token': 'yq71khZBCyJF1Ri2hG5aNqr5', 'team_id': 'T010QS7UQNA', 'enterprise_id': 'ERV4P7NAD', 'context_team_id': None, 'context_enterprise_id': 'ERV4P7NAD', 'api_app_id': 'A099LACAB2R', 'event': {'user': 'U01RMTFMALF', 'type': 'message', 'ts': '1755813948.960839', 'client_msg_id': '0b1d98c8-f687-4f8a-bec8-267dd0e68481', 'text': 'How can i run an automated test on a local Android phone?', 'blocks': [{'type': 'rich_text', 'block_id': 'vQwBP', 'elements': [{'type': 'rich_text_section', 'elements': [{'type': 'text', 'text': 'How can i run an automated test on a local Android phone?'}]}]}], 'channel': 'D09A0LFHK8R', 'event_ts': '1755813948.960839', 'channel_type': 'im'}, 'type': 'event_callback', 'event_id': 'Ev09BK2BEM1U', 'event_time': 1755813948, 'authorizations': [{'enterprise_id': 'ERV4P7NAD', 'team_id': 'T010QS7UQNA', 'user_id': 'U099R6WTZ9S', 'is_bot': True, 'is_enterprise_install': False}], 'is_ext_shared_channel': False, 'event_context': '4-eyJldCI6Im1lc3NhZ2UiLCJ0aWQiOiJUMDEwUVM3VVFOQSIsImFpZCI6IkEwOTlMQUNBQjJSIiwiY2lkIjoiRDA5QTBMRkhLOFIifQ'}
2025-08-21 15:05:50,125 - slack_bolt.App - DEBUG - [client.py:200] - Sending a message (session id: ba76bde4-0d28-43d6-8d56-c30fb04ace9a, message: {"envelope_id": "714a7223-bc41-4886-8296-214e988ca1a7"})
2025-08-21 15:05:50,126 - __main__ - INFO - [main.py:443] - DM Event details: channel=D09A0LFHK8R, user=U01RMTFMALF, ts=1755813948.960839
2025-08-21 15:05:50,126 - __main__ - DEBUG - [main.py:444] - DM Event text: How can i run an automated test on a local Android phone?
2025-08-21 15:05:50,126 - utils - DEBUG - [utils.py:27] - Checking message processing: channel=D09A0LFHK8R, ts=1755813948.960839, text='How can i run an automated test on a local Android...'
2025-08-21 15:05:50,126 - slack_bolt.App - DEBUG - [internals.py:41] - Response time: 3 milliseconds
2025-08-21 15:05:50,126 - utils - DEBUG - [utils.py:31] - Message hash: 05a7b559f85a02124fee3f2ab31c4241
2025-08-21 15:05:50,126 - slack_bolt.App - DEBUG - [client.py:150] - Message processing completed (type: events_api, envelope_id: 714a7223-bc41-4886-8296-214e988ca1a7)
2025-08-21 15:05:50,126 - utils - DEBUG - [utils.py:53] - Added message to processing cache (total entries: 1)
2025-08-21 15:05:50,127 - __main__ - DEBUG - [main.py:457] - Bot check: bot_id=None, user_id=U01RMTFMALF
2025-08-21 15:05:50,127 - __main__ - DEBUG - [main.py:462] - Question received: 'How can i run an automated test on a local Android phone?'
2025-08-21 15:05:50,127 - __main__ - DEBUG - [main.py:468] - Checking user access for DM...
2025-08-21 15:05:50,127 - auth.slack_user_info - DEBUG - [slack_user_info.py:48] - Fetching user info for user_id: U01RMTFMALF
2025-08-21 15:05:50,127 - slack_sdk.web.base_client - DEBUG - [base_client.py:255] - Sending a request - url: https://slack.com/api/users.info, query_params: {}, body_params: {'user': 'U01RMTFMALF', 'team_id': 'T010QS7UQNA'}, files: {}, json_body: None, headers: {'Content-Type': 'application/x-www-form-urlencoded', 'Authorization': '(redacted)', 'User-Agent': 'Python/3.12.0 slackclient/3.34.0 Darwin/23.4.0'}
2025-08-21 15:05:50,485 - slack_sdk.web.base_client - DEBUG - [base_client.py:546] - Received the following response - status: 200, headers: {'date': 'Thu, 21 Aug 2025 22:05:50 GMT', 'server': 'Apache', 'vary': 'Accept-Encoding', 'x-slack-req-id': '4a76261842f48e7289462250b9392930', 'x-content-type-options': 'nosniff', 'x-xss-protection': '0', 'pragma': 'no-cache', 'cache-control': 'private, no-cache, no-store, must-revalidate', 'expires': 'Sat, 26 Jul 1997 05:00:00 GMT', 'content-type': 'application/json; charset=utf-8', 'x-accepted-oauth-scopes': 'users:read', 'x-oauth-scopes': 'app_mentions:read,channels:history,chat:write,im:history,im:read,im:write,users:read,reactions:write,users:read.email', 'access-control-expose-headers': 'x-slack-req-id, retry-after', 'access-control-allow-headers': 'slack-route, x-slack-version-ts, x-b3-traceid, x-b3-spanid, x-b3-parentspanid, x-b3-sampled, x-b3-flags', 'strict-transport-security': 'max-age=31536000; includeSubDomains; preload', 'referrer-policy': 'no-referrer', 'x-slack-unique-id': 'aKeYPgaMwUX7I3Fx2_vemgAAABk', 'x-slack-backend': 'r', 'access-control-allow-origin': '*', 'content-length': '2057', 'via': '1.1 slack-prod.tinyspeck.com, envoy-www-iad-ywaessrw,envoy-edge-pdx-ulbteqqt', 'x-envoy-attempt-count': '1', 'x-envoy-upstream-service-time': '92', 'x-backend': 'main_normal main_canary_with_overflow main_control_with_overflow', 'x-server': 'slack-www-hhvm-main-iad-exlk', 'x-slack-shared-secret-outcome': 'no-match', 'x-edge-backend': 'envoy-www', 'timing-allow-origin': '*', 'x-slack-edge-shared-secret-outcome': 'no-match', 'connection': 'close'}, body: {"ok":true,"user":{"id":"U01RMTFMALF","name":"popov8533","is_bot":false,"updated":1755806166,"is_app_user":false,"team_id":"T010QS7UQNA","deleted":false,"color":"4bbe2e","is_email_confirmed":true,"real_name":"Alexandr Popov","tz":"America\/Los_Angeles","tz_label":"Pacific Daylight Time","tz_offset":-25200,"is_admin":false,"is_owner":false,"is_primary_owner":false,"is_restricted":false,"is_ultra_restricted":false,"enterprise_user":{"id":"U01RMTFMALF","enterprise_id":"ERV4P7NAD","enterprise_name":"Paramount Global","is_admin":false,"is_owner":false,"is_primary_owner":false,"teams":["T010QS7UQNA","T02H1PQMF"]},"who_can_share_contact_card":"EVERYONE","profile":{"real_name":"Alexandr Popov","display_name":"Alex Popov","avatar_hash":"a64f82312a14","real_name_normalized":"Alexandr Popov","display_name_normalized":"Alex Popov","image_24":"https:\/\/avatars.slack-edge.com\/2023-03-29\/5033076824964_a64f82312a141123fbbf_24.png","image_32":"https:\/\/avatars.slack-edge.com\/2023-03-29\/5033076824964_a64f82312a141123fbbf_32.png","image_48":"https:\/\/avatars.slack-edge.com\/2023-03-29\/5033076824964_a64f82312a141123fbbf_48.png","image_72":"https:\/\/avatars.slack-edge.com\/2023-03-29\/5033076824964_a64f82312a141123fbbf_72.png","image_192":"https:\/\/avatars.slack-edge.com\/2023-03-29\/5033076824964_a64f82312a141123fbbf_192.png","image_512":"https:\/\/avatars.slack-edge.com\/2023-03-29\/5033076824964_a64f82312a141123fbbf_512.png","image_1024":"https:\/\/avatars.slack-edge.com\/2023-03-29\/5033076824964_a64f82312a141123fbbf_1024.png","image_original":"https:\/\/avatars.slack-edge.com\/2023-03-29\/5033076824964_a64f82312a141123fbbf_original.png","is_custom_image":true,"first_name":"Alexandr","last_name":"Popov","team":"T010QS7UQNA","email":"alexandr.popov@paramount.com","title":"Senior Software Quality Assurance Engineer","phone":"","skype":"","status_text":"","status_text_canonical":"","status_emoji":"","status_emoji_display_info":[],"status_expiration":0,"huddle_state":"default_unset","huddle_state_expiration_ts":0,"ooo_message":""}}}
2025-08-21 15:05:50,486 - auth.slack_user_info - DEBUG - [slack_user_info.py:63] - Retrieved email for user U01RMTFMALF: alexandr.popov@paramount.com
2025-08-21 15:05:50,486 - auth.email_whitelist - DEBUG - [email_whitelist.py:57] - Email access granted: alexandr.popov@paramount.com
2025-08-21 15:05:50,486 - __main__ - INFO - [main.py:118] - Access granted to user U01RMTFMALF with email alexandr.popov@paramount.com
2025-08-21 15:05:50,486 - __main__ - DEBUG - [main.py:474] - User access check passed for DM
2025-08-21 15:05:50,486 - __main__ - INFO - [main.py:476] - Processing DM question from user U01RMTFMALF: How can i run an automated test on a local Android phone?
2025-08-21 15:05:50,486 - __main__ - DEBUG - [main.py:479] - Starting DM processing...
2025-08-21 15:05:50,487 - __main__ - DEBUG - [main.py:482] - Checking if 'how can i run an automated test on a local android phone?' is an admin command in DM
2025-08-21 15:05:50,487 - __main__ - DEBUG - [main.py:518] - Checking if DM thread is already being processed...
2025-08-21 15:05:50,487 - utils - DEBUG - [utils.py:67] - Managing thread: D09A0LFHK8R:1755813948.960839, action: add, user: U01RMTFMALF
2025-08-21 15:05:50,487 - utils - INFO - [utils.py:94] - Added thread D09A0LFHK8R:1755813948.960839 to active tracking (total: 1)
2025-08-21 15:05:50,487 - __main__ - DEBUG - [main.py:523] - DM thread management check passed
2025-08-21 15:05:50,487 - slack_sdk.web.base_client - DEBUG - [base_client.py:255] - Sending a request - url: https://slack.com/api/reactions.add, query_params: {}, body_params: {'channel': 'D09A0LFHK8R', 'name': 'thinking_face', 'timestamp': '1755813948.960839', 'team_id': 'T010QS7UQNA'}, files: {}, json_body: None, headers: {'Content-Type': 'application/x-www-form-urlencoded', 'Authorization': '(redacted)', 'User-Agent': 'Python/3.12.0 slackclient/3.34.0 Darwin/23.4.0'}
2025-08-21 15:05:50,858 - slack_sdk.web.base_client - DEBUG - [base_client.py:546] - Received the following response - status: 200, headers: {'date': 'Thu, 21 Aug 2025 22:05:50 GMT', 'server': 'Apache', 'vary': 'Accept-Encoding', 'x-slack-req-id': '8cf031c8c6859cfea6e4fa35a8fe94f6', 'x-content-type-options': 'nosniff', 'x-xss-protection': '0', 'pragma': 'no-cache', 'cache-control': 'private, no-cache, no-store, must-revalidate', 'expires': 'Sat, 26 Jul 1997 05:00:00 GMT', 'content-type': 'application/json; charset=utf-8', 'x-accepted-oauth-scopes': 'reactions:write', 'x-oauth-scopes': 'app_mentions:read,channels:history,chat:write,im:history,im:read,im:write,users:read,reactions:write,users:read.email', 'access-control-expose-headers': 'x-slack-req-id, retry-after', 'access-control-allow-headers': 'slack-route, x-slack-version-ts, x-b3-traceid, x-b3-spanid, x-b3-parentspanid, x-b3-sampled, x-b3-flags', 'strict-transport-security': 'max-age=31536000; includeSubDomains; preload', 'referrer-policy': 'no-referrer', 'x-slack-unique-id': 'aKeYPpqv0afvjk-b2WRprwAAEDM', 'x-slack-backend': 'r', 'access-control-allow-origin': '*', 'content-length': '11', 'via': '1.1 slack-prod.tinyspeck.com, envoy-www-iad-zihtmmkz,envoy-edge-pdx-qswxuxtr', 'x-envoy-attempt-count': '1', 'x-envoy-upstream-service-time': '126', 'x-backend': 'main_normal main_canary_with_overflow main_control_with_overflow', 'x-server': 'slack-www-hhvm-main-iad-tjzx', 'x-slack-shared-secret-outcome': 'no-match', 'x-edge-backend': 'envoy-www', 'timing-allow-origin': '*', 'x-slack-edge-shared-secret-outcome': 'no-match', 'connection': 'close'}, body: {"ok":true}
2025-08-21 15:05:50,859 - __main__ - INFO - [main.py:540] - Processing DM question from <@U01RMTFMALF>: How can i run an automated test on a local Android phone?
2025-08-21 15:05:50,859 - __main__ - INFO - [main.py:544] - Sending DM request to DIG AI...
2025-08-21 15:05:50,859 - dig_connector - INFO - [dig_connector.py:134] - Generating response for query: 'How can i run an automated test on a local Android phone?' with 0 chunks
2025-08-21 15:05:50,859 - dig_connector - DEBUG - [dig_connector.py:138] - Formatted context length: 0
2025-08-21 15:05:50,860 - dig_connector - INFO - [dig_connector.py:141] - No context available, using direct query
2025-08-21 15:05:50,860 - dig_connector - INFO - [dig_connector.py:150] - Sending prompt to DIG platform...
2025-08-21 15:05:50,860 - dig_connector - INFO - [dig_connector.py:121] - Sending message to DIG API - URL: https://ai.digdev.cbsicloud.com/fastapi/chats/868/generate
2025-08-21 15:05:50,860 - dig_connector - DEBUG - [dig_connector.py:122] - Message payload: {'model_id': 42, 'message_text': 'How can i run an automated test on a local Android phone?', 'history': [{'role': 'user', 'content': 'How can i run an automated test on a local Android phone?'}]}
2025-08-21 15:06:02,898 - urllib3.connectionpool - DEBUG - [connectionpool.py:549] - https://ai.digdev.cbsicloud.com:443 "POST /fastapi/chats/868/generate HTTP/1.1" 200 4799
2025-08-21 15:06:02,985 - dig_connector - DEBUG - [dig_connector.py:125] - DIG API response: status=200
2025-08-21 15:06:02,986 - dig_connector - DEBUG - [dig_connector.py:129] - DIG API response data: {'message_text': 'To run an automated test on a local Android phone, you generally need to configure your test environment and use specific commands for execution.\n\nHere\'s a breakdown of the steps and considerations:\n\n**1. Prerequisites & Setup:**\n\n*   **Android SDK:** Ensure your Android SDK is correctly set up. If using an Android Emulator, make sure your Run Configuration has the `$ANDROID_HOME` environment variable set and included in the path (Source: [https://paramount.atlassian.net/wiki/spaces/PLQA/pages/47713566](https://paramount.atlassian.net/wiki/spaces/PLQA/pages/47713566)).\n*   **Appium Server:** For local mobile tests, you\'ll need to start an Appium server. A `SampleTest.java` class is mentioned that uses TestNG annotated methods to instantiate the Web or Mobile Driver and start/stop the Appium server (Source: [https://paramount.atlassian.net/wiki/spaces/PLQA/pages/47711460](https://paramount.atlassian.net/wiki/spaces/PLQA/pages/47711460), "SampleTest Class" code example).\n*   **Synergy Server (if applicable):** If your setup uses Synergy, you\'ll need to download and run the Synergy server\'s `.jar` file and connect to VPN (Source: [https://paramount.atlassian.net/wiki/spaces/PLQA/pages/47720266](https://paramount.atlassian.net/wiki/spaces/PLQA/pages/47720266)).\n\n**2. Test Configuration:**\n\n*   **`config.properties`:** In your `resources/config.properties` file within the `mqe-hob-mobile-tests` module, add or update the following properties for local Android testing (Source: [https://paramount.atlassian.net/wiki/spaces/PLQA/pages/47720266](https://paramount.atlassian.net/wiki/spaces/PLQA/pages/47720266)):\n    *   `Platform=ANDROID`\n    *   `MobileDeviceCategory=PHONE`\n    *   `DeviceStartOrientation=PORTRAIT` (or LANDSCAPE)\n    *   `DebugDeviceID`: Add the device ID of your emulator or local phone (you can get this by typing `adb devices` in the terminal). This is crucial for running tests on a real device.\n    *   `ClientID`: This machine serial number is for local executions or to target a specific private lab machine (Source: [https://paramount.atlassian.net/wiki/spaces/PLQA/pages/47720266](https://paramount.atlassian.net/wiki/spaces/PLQA/pages/47720266)).\n*   **Run Configuration Arguments:** When setting up your run configuration, include arguments like (Source: [https://paramount.atlassian.net/wiki/spaces/PLQA/pages/47711460](https://paramount.atlassian.net/wiki/spaces/PLQA/pages/47711460)):\n    *   `-Ddriver=android`\n    *   `-DplatformName=Android`\n    *   `-DplatformVersion=11.0` (example version, use your device\'s version)\n    *   `-DdeviceName="Google Pixel 2XL"` (example device name, use your device\'s name)\n    *   `-Denvironment=local`\n    *   `-Dheadless=false`\n    *   `-Dapp="/pathToPackage/your-app-release.apk"` (path to your app\'s APK)\n    *   `-Dudid=set this if running on Real Mobile Device only` (This is another way to specify your device ID for a real mobile device)\n\n**3. Running the Test:**\n\nYou can run the tests from your terminal or via an XML configuration.\n\n*   **From Terminal:**\n    Open your IDE terminal window and enter the following command (Source: [https://paramount.atlassian.net/wiki/spaces/PLQA/pages/47720266](https://paramount.atlassian.net/wiki/spaces/PLQA/pages/47720266)):\n    ```\n    mvn clean test -pl mqe-hob-mobile-tests -am -Dgroups=Your test case number or tag\n    ```\n    You might also see commands like this for more specific configurations (Source: [https://paramount.atlassian.net/wiki/spaces/PLQA/pages/47721257](https://paramount.atlassian.net/wiki/spaces/PLQA/pages/47721257)):\n    ```\n    mvn test -Dmaven.repo.local=./.m2 -Dcucumber.features="$test" -Ddriver=android -DplatformName=android -Dudid= -Denvironment=lambdatest -DtargetURL=test-www.paramountplus.com -Dapp=lt://APP10160361191691076976834962 -DbundleId=com.cbsvideodebug.app -DappPackage=com.cbs.app -DlambdaKey=sureshkumar.palus:AdIBfntJTMxJhLRB18p7sgTEFMxAphu2X2cVmsQiu9KlESMhXq -Dbuild=P+_Android_phone_test-www -Dproject="P+ Android Mobile" -DqueueTimeout=300\n    ```\n\n*   **From TestNGSuiteConfig.xml:**\n    Navigate to the `TestNGSuiteConfig.xml` file, right-click, and select "Run TestNGSuiteConfig.xml". You will need to provide the necessary test case ID or tag name in the `<include name="" />` section (Source: [https://paramount.atlassian.net/wiki/spaces/PLQA/pages/47720266](https://paramount.atlassian.net/wiki/spaces/PLQA/pages/47720266)):\n    ```xml\n    <!-- TEST EXECUTION QUEUE -->\n    <test verbose="1" name="All Mobile Tests" annotations="JDK">\n    <groups>\n    <run>\n    <include name="Debug"/>\n    <exclude name="Broken"/>\n    </run>\n    </groups>\n    </test>\n    ```', 'requires_approval': False, 'execution_id': 1569}
2025-08-21 15:06:02,986 - dig_connector - INFO - [dig_connector.py:154] - Extracting response content...
2025-08-21 15:06:02,986 - dig_connector - DEBUG - [dig_connector.py:221] - Found message_text in response
2025-08-21 15:06:02,986 - dig_connector - INFO - [dig_connector.py:157] - Successfully generated response (length: 4656)
2025-08-21 15:06:02,986 - __main__ - INFO - [main.py:547] - Received DM response from DIG AI
2025-08-21 15:06:02,986 - __main__ - DEBUG - [main.py:548] - DIG AI DM response: To run an automated test on a local Android phone, you generally need to configure your test environment and use specific commands for execution.

Here's a breakdown of the steps and considerations:

**1. Prerequisites & Setup:**

*   **Android SDK:** Ensure your Android SDK is correctly set up. If using an Android Emulator, make sure your Run Configuration has the `$ANDROID_HOME` environment variable set and included in the path (Source: [https://paramount.atlassian.net/wiki/spaces/PLQA/pages/47713566](https://paramount.atlassian.net/wiki/spaces/PLQA/pages/47713566)).
*   **Appium Server:** For local mobile tests, you'll need to start an Appium server. A `SampleTest.java` class is mentioned that uses TestNG annotated methods to instantiate the Web or Mobile Driver and start/stop the Appium server (Source: [https://paramount.atlassian.net/wiki/spaces/PLQA/pages/47711460](https://paramount.atlassian.net/wiki/spaces/PLQA/pages/47711460), "SampleTest Class" code example).
*   **Synergy Server (if applicable):** If your setup uses Synergy, you'll need to download and run the Synergy server's `.jar` file and connect to VPN (Source: [https://paramount.atlassian.net/wiki/spaces/PLQA/pages/47720266](https://paramount.atlassian.net/wiki/spaces/PLQA/pages/47720266)).

**2. Test Configuration:**

*   **`config.properties`:** In your `resources/config.properties` file within the `mqe-hob-mobile-tests` module, add or update the following properties for local Android testing (Source: [https://paramount.atlassian.net/wiki/spaces/PLQA/pages/47720266](https://paramount.atlassian.net/wiki/spaces/PLQA/pages/47720266)):
    *   `Platform=ANDROID`
    *   `MobileDeviceCategory=PHONE`
    *   `DeviceStartOrientation=PORTRAIT` (or LANDSCAPE)
    *   `DebugDeviceID`: Add the device ID of your emulator or local phone (you can get this by typing `adb devices` in the terminal). This is crucial for running tests on a real device.
    *   `ClientID`: This machine serial number is for local executions or to target a specific private lab machine (Source: [https://paramount.atlassian.net/wiki/spaces/PLQA/pages/47720266](https://paramount.atlassian.net/wiki/spaces/PLQA/pages/47720266)).
*   **Run Configuration Arguments:** When setting up your run configuration, include arguments like (Source: [https://paramount.atlassian.net/wiki/spaces/PLQA/pages/47711460](https://paramount.atlassian.net/wiki/spaces/PLQA/pages/47711460)):
    *   `-Ddriver=android`
    *   `-DplatformName=Android`
    *   `-DplatformVersion=11.0` (example version, use your device's version)
    *   `-DdeviceName="Google Pixel 2XL"` (example device name, use your device's name)
    *   `-Denvironment=local`
    *   `-Dheadless=false`
    *   `-Dapp="/pathToPackage/your-app-release.apk"` (path to your app's APK)
    *   `-Dudid=set this if running on Real Mobile Device only` (This is another way to specify your device ID for a real mobile device)

**3. Running the Test:**

You can run the tests from your terminal or via an XML configuration.

*   **From Terminal:**
    Open your IDE terminal window and enter the following command (Source: [https://paramount.atlassian.net/wiki/spaces/PLQA/pages/47720266](https://paramount.atlassian.net/wiki/spaces/PLQA/pages/47720266)):
    ```
    mvn clean test -pl mqe-hob-mobile-tests -am -Dgroups=Your test case number or tag
    ```
    You might also see commands like this for more specific configurations (Source: [https://paramount.atlassian.net/wiki/spaces/PLQA/pages/47721257](https://paramount.atlassian.net/wiki/spaces/PLQA/pages/47721257)):
    ```
    mvn test -Dmaven.repo.local=./.m2 -Dcucumber.features="$test" -Ddriver=android -DplatformName=android -Dudid= -Denvironment=lambdatest -DtargetURL=test-www.paramountplus.com -Dapp=lt://APP10160361191691076976834962 -DbundleId=com.cbsvideodebug.app -DappPackage=com.cbs.app -DlambdaKey=sureshkumar.palus:AdIBfntJTMxJhLRB18p7sgTEFMxAphu2X2cVmsQiu9KlESMhXq -Dbuild=P+_Android_phone_test-www -Dproject="P+ Android Mobile" -DqueueTimeout=300
    ```

*   **From TestNGSuiteConfig.xml:**
    Navigate to the `TestNGSuiteConfig.xml` file, right-click, and select "Run TestNGSuiteConfig.xml". You will need to provide the necessary test case ID or tag name in the `<include name="" />` section (Source: [https://paramount.atlassian.net/wiki/spaces/PLQA/pages/47720266](https://paramount.atlassian.net/wiki/spaces/PLQA/pages/47720266)):
    ```xml
    <!-- TEST EXECUTION QUEUE -->
    <test verbose="1" name="All Mobile Tests" annotations="JDK">
    <groups>
    <run>
    <include name="Debug"/>
    <exclude name="Broken"/>
    </run>
    </groups>
    </test>
    ```
2025-08-21 15:06:02,989 - __main__ - DEBUG - [main.py:552] - Formatted DM response: *Your Question:*
> How can i run an automated test on a local Android phone?

*Answer:*
To run an automated test on a local Android phone, you generally need to configure your test environment and use specific commands for execution.

Here's a breakdown of the steps and considerations:

*1. Prerequisites & Setup:*

*   *Android SDK:* Ensure your Android SDK is correctly set up. If using an Android Emulator, make sure your Run Configuration has the `$ANDROID_HOME` environment variable set and included in the path (Source: [Source)).
*   *Appium Server:* For local mobile tests, you'll need to start an Appium server. A `SampleTest.java` class is mentioned that uses TestNG annotated methods to instantiate the Web or Mobile Driver and start/stop the Appium server (Source: [Source), "SampleTest Class" code example).
*   *Synergy Server (if applicable):* If your setup uses Synergy, you'll need to download and run the Synergy server's `.jar` file and connect to VPN (Source: [Source)).

*2. Test Configuration:*

*   *`config.properties`:* In your `resources/config.properties` file within the `mqe-hob-mobile-tests` module, add or update the following properties for local Android testing (Source: [Source)):
    *   `Platform=ANDROID`
    *   `MobileDeviceCategory=PHONE`
    *   `DeviceStartOrientation=PORTRAIT` (or LANDSCAPE)
    *   `DebugDeviceID`: Add the device ID of your emulator or local phone (you can get this by typing `adb devices` in the terminal). This is crucial for running tests on a real device.
    *   `ClientID`: This machine serial number is for local executions or to target a specific private lab machine (Source: [Source)).
*   *Run Configuration Arguments:* When setting up your run configuration, include arguments like (Source: [Source)):
    *   `-Ddriver=android`
    *   `-DplatformName=Android`
    *   `-DplatformVersion=11.0` (example version, use your device's version)
    *   `-DdeviceName="Google Pixel 2XL"` (example device name, use your device's name)
    *   `-Denvironment=local`
    *   `-Dheadless=false`
    *   `-Dapp="/pathToPackage/your-app-release.apk"` (path to your app's APK)
    *   `-Dudid=set this if running on Real Mobile Device only` (This is another way to specify your device ID for a real mobile device)

*3. Running the Test:*

You can run the tests from your terminal or via an XML configuration.

*   *From Terminal:*
    Open your IDE terminal window and enter the following command (Source: [Source)):
    ```
    mvn clean test -pl mqe-hob-mobile-tests -am -Dgroups=Your test case number or tag
    ```
    You might also see commands like this for more specific configurations (Source: [Source)):
    ```
    mvn test -Dmaven.repo.local=./.m2 -Dcucumber.features="$test" -Ddriver=android -DplatformName=android -Dudid= -Denvironment=lambdatest -DtargetURL=test-www.paramountplus.com -Dapp=lt://APP10160361191691076976834962 -DbundleId=com.cbsvideodebug.app -DappPackage=com.cbs.app -DlambdaKey=sureshkumar.palus:AdIBfntJTMxJhLRB18p7sgTEFMxAphu2X2cVmsQiu9KlESMhXq -Dbuild=P+_Android_phone_test-www -Dproject="P+ Android Mobile" -DqueueTimeout=300
    ```

*   *From TestNGSuiteConfig.xml:*
    Navigate to the `TestNGSuiteConfig.xml` file, right-click, and select "Run TestNGSuiteConfig.xml". You will need to provide the necessary test case ID or tag name in the `<include name="" />` section (Source: [Source)):
    ```xml
    <!-- TEST EXECUTION QUEUE -->
    <test verbose="1" name="All Mobile Tests" annotations="JDK">
    <groups>
    <run>
    <include name="Debug"/>
    <exclude name="Broken"/>
    </run>
    </groups>
    </test>
    ```

────────────────────────────────────────
*📚 Sources:*
1. <https://paramount.atlassian.net/wiki/spaces/PLQA/pages/47713566](https://paramount.atlassian.net/wiki/spaces/PLQA/pages/47713566|Source>
2. <https://paramount.atlassian.net/wiki/spaces/PLQA/pages/47711460](https://paramount.atlassian.net/wiki/spaces/PLQA/pages/47711460|Source>
3. <https://paramount.atlassian.net/wiki/spaces/PLQA/pages/47720266](https://paramount.atlassian.net/wiki/spaces/PLQA/pages/47720266|Source>
4. <https://paramount.atlassian.net/wiki/spaces/PLQA/pages/47721257](https://paramount.atlassian.net/wiki/spaces/PLQA/pages/47721257|Source>
5. <https://paramount.atlassian.net/wiki/spaces/PLQA/pages/47713566|Source>
6. <https://paramount.atlassian.net/wiki/spaces/PLQA/pages/47711460|Source>
7. <https://paramount.atlassian.net/wiki/spaces/PLQA/pages/47720266|Source>
8. <https://paramount.atlassian.net/wiki/spaces/PLQA/pages/47721257|Source>

2025-08-21 15:06:02,991 - slack_sdk.web.base_client - DEBUG - [base_client.py:255] - Sending a request - url: https://slack.com/api/reactions.remove, query_params: {}, body_params: {'name': 'thinking_face', 'channel': 'D09A0LFHK8R', 'timestamp': '1755813948.960839', 'team_id': 'T010QS7UQNA'}, files: {}, json_body: None, headers: {'Content-Type': 'application/x-www-form-urlencoded', 'Authorization': '(redacted)', 'User-Agent': 'Python/3.12.0 slackclient/3.34.0 Darwin/23.4.0'}
2025-08-21 15:06:03,374 - slack_sdk.web.base_client - DEBUG - [base_client.py:546] - Received the following response - status: 200, headers: {'date': 'Thu, 21 Aug 2025 22:06:03 GMT', 'server': 'Apache', 'vary': 'Accept-Encoding', 'x-slack-req-id': '3832feb048f16d86df2bdf90369de734', 'x-content-type-options': 'nosniff', 'x-xss-protection': '0', 'pragma': 'no-cache', 'cache-control': 'private, no-cache, no-store, must-revalidate', 'expires': 'Sat, 26 Jul 1997 05:00:00 GMT', 'content-type': 'application/json; charset=utf-8', 'x-accepted-oauth-scopes': 'reactions:write', 'x-oauth-scopes': 'app_mentions:read,channels:history,chat:write,im:history,im:read,im:write,users:read,reactions:write,users:read.email', 'access-control-expose-headers': 'x-slack-req-id, retry-after', 'access-control-allow-headers': 'slack-route, x-slack-version-ts, x-b3-traceid, x-b3-spanid, x-b3-parentspanid, x-b3-sampled, x-b3-flags', 'strict-transport-security': 'max-age=31536000; includeSubDomains; preload', 'referrer-policy': 'no-referrer', 'x-slack-unique-id': 'aKeYS036Akl1D7mpjpqsSAAAABU', 'x-slack-backend': 'r', 'access-control-allow-origin': '*', 'content-length': '11', 'via': '1.1 slack-prod.tinyspeck.com, envoy-www-iad-bsmihfwz,envoy-edge-pdx-rjqenqme', 'x-envoy-attempt-count': '1', 'x-envoy-upstream-service-time': '141', 'x-backend': 'main_normal main_canary_with_overflow main_control_with_overflow', 'x-server': 'slack-www-hhvm-main-iad-wasu', 'x-slack-shared-secret-outcome': 'no-match', 'x-edge-backend': 'envoy-www', 'timing-allow-origin': '*', 'x-slack-edge-shared-secret-outcome': 'no-match', 'connection': 'close'}, body: {"ok":true}
2025-08-21 15:06:03,399 - slack_sdk.web.base_client - DEBUG - [base_client.py:255] - Sending a request - url: https://slack.com/api/chat.postMessage, query_params: {}, body_params: {}, files: {}, json_body: {'channel': 'D09A0LFHK8R', 'text': '*Your Question:*\n> How can i run an automated test on a local Android phone? *Answer:*\nTo run an automated test on a local Android phone, you generally need to configure your test environment and use specific commands for execution. Here\'s a breakdown of the steps and considerations:\n\n*1. Prerequisites & Setup:*\n\n*   *Android SDK:* Ensure your Android SDK is correctly set up. If using an Android Emulator, make sure your Run Configuration has the `$ANDROID_HOME` environment variable set and included in the path (Source: [Source)). *   *Appium Server:* For local mobile tests, you\'ll need to start an Appium server. A `SampleTest.java` class is mentioned that uses TestNG annotated methods to instantiate the Web or Mobile Driver and start/stop the Appium server (Source: [Source), "SampleTest Class" code example). *   *Synergy Server (if applicable):* If your setup uses Synergy, you\'ll need to download and run the Synergy server\'s `.jar` file and connect to VPN (Source: [Source)). *2. Test Configuration:*\n\n*   *`config.properties`:* In your `resources/config.properties` file within the `mqe-hob-mobile-tests` module, add or update the following properties for local Android testing (Source: [Source)):\n    *   `Platform=ANDROID`\n    *   `MobileDeviceCategory=PHONE`\n    *   `DeviceStartOrientation=PORTRAIT` (or LANDSCAPE)\n    *   `DebugDeviceID`: Add the device ID of your emulator or local phone (you can get this by typing `adb devices` in the terminal). This is crucial for running tests on a real device. *   `ClientID`: This machine serial number is for local executions or to target a specific private lab machine (Source: [Source)). *   *Run Configuration Arguments:* When setting up your run configuration, include arguments like (Source: [Source)):\n    *   `-Ddriver=android`\n    *   `-DplatformName=Android`\n    *   `-DplatformVersion=11.0` (example version, use your device\'s version)\n    *   `-DdeviceName="Google Pixel 2XL"` (example device name, use your device\'s name)\n    *   `-Denvironment=local`\n    *   `-Dheadless=false`\n    *   `-Dapp="/pathToPackage/your-app-release.apk"` (path to your app\'s APK)\n    *   `-Dudid=set this if running on Real Mobile Device only` (This is another way to specify your device ID for a real mobile device)\n\n*3. Running the Test:*\n\nYou can run the tests from your terminal or via an XML configuration.\n\n_(message continued in thread...)_', 'thread_ts': '1755813948.960839', 'team_id': 'T010QS7UQNA'}, headers: {'Content-Type': 'application/json;charset=utf-8', 'Authorization': '(redacted)', 'User-Agent': 'Python/3.12.0 slackclient/3.34.0 Darwin/23.4.0'}
2025-08-21 15:06:03,811 - slack_sdk.web.base_client - DEBUG - [base_client.py:546] - Received the following response - status: 200, headers: {'date': 'Thu, 21 Aug 2025 22:06:03 GMT', 'server': 'Apache', 'vary': 'Accept-Encoding', 'x-slack-req-id': '7eaa176e1442640c56aa0cbd82f10229', 'x-content-type-options': 'nosniff', 'x-xss-protection': '0', 'pragma': 'no-cache', 'cache-control': 'private, no-cache, no-store, must-revalidate', 'expires': 'Sat, 26 Jul 1997 05:00:00 GMT', 'content-type': 'application/json; charset=utf-8', 'x-accepted-oauth-scopes': 'chat:write', 'x-oauth-scopes': 'app_mentions:read,channels:history,chat:write,im:history,im:read,im:write,users:read,reactions:write,users:read.email', 'access-control-expose-headers': 'x-slack-req-id, retry-after', 'access-control-allow-headers': 'slack-route, x-slack-version-ts, x-b3-traceid, x-b3-spanid, x-b3-parentspanid, x-b3-sampled, x-b3-flags', 'strict-transport-security': 'max-age=31536000; includeSubDomains; preload', 'referrer-policy': 'no-referrer', 'x-slack-unique-id': 'aKeYS75vcGrHwuZSHNz_KgAAECc', 'x-slack-backend': 'r', 'access-control-allow-origin': '*', 'content-length': '7906', 'via': '1.1 slack-prod.tinyspeck.com, envoy-www-iad-zlutbulu,envoy-edge-pdx-xxczocxg', 'x-envoy-attempt-count': '1', 'x-envoy-upstream-service-time': '195', 'x-backend': 'main_normal main_canary_with_overflow main_control_with_overflow', 'x-server': 'slack-www-hhvm-main-iad-yjvn', 'x-slack-shared-secret-outcome': 'no-match', 'x-edge-backend': 'envoy-www', 'timing-allow-origin': '*', 'x-slack-edge-shared-secret-outcome': 'no-match', 'connection': 'close'}, body: {"ok":true,"channel":"D09A0LFHK8R","ts":"1755813963.775369","message":{"user":"U099R6WTZ9S","type":"message","ts":"1755813963.775369","bot_id":"B099R6WTRU4","app_id":"A099LACAB2R","text":"*Your Question:*\n&gt; How can i run an automated test on a local Android phone? *Answer:*\nTo run an automated test on a local Android phone, you generally need to configure your test environment and use specific commands for execution. Here's a breakdown of the steps and considerations:\n\n*1. Prerequisites &amp; Setup:*\n\n*   *Android SDK:* Ensure your Android SDK is correctly set up. If using an Android Emulator, make sure your Run Configuration has the `$ANDROID_HOME` environment variable set and included in the path (Source: [Source)). *   *Appium Server:* For local mobile tests, you'll need to start an Appium server. A `SampleTest.java` class is mentioned that uses TestNG annotated methods to instantiate the Web or Mobile Driver and start/stop the Appium server (Source: [Source), \"SampleTest Class\" code example). *   *Synergy Server (if applicable):* If your setup uses Synergy, you'll need to download and run the Synergy server's `.jar` file and connect to VPN (Source: [Source)). *2. Test Configuration:*\n\n*   *`config.properties`:* In your `resources/config.properties` file within the `mqe-hob-mobile-tests` module, add or update the following properties for local Android testing (Source: [Source)):\n    *   `Platform=ANDROID`\n    *   `MobileDeviceCategory=PHONE`\n    *   `DeviceStartOrientation=PORTRAIT` (or LANDSCAPE)\n    *   `DebugDeviceID`: Add the device ID of your emulator or local phone (you can get this by typing `adb devices` in the terminal). This is crucial for running tests on a real device. *   `ClientID`: This machine serial number is for local executions or to target a specific private lab machine (Source: [Source)). *   *Run Configuration Arguments:* When setting up your run configuration, include arguments like (Source: [Source)):\n    *   `-Ddriver=android`\n    *   `-DplatformName=Android`\n    *   `-DplatformVersion=11.0` (example version, use your device's version)\n    *   `-DdeviceName=\"Google Pixel 2XL\"` (example device name, use your device's name)\n    *   `-Denvironment=local`\n    *   `-Dheadless=false`\n    *   `-Dapp=\"/pathToPackage/your-app-release.apk\"` (path to your app's APK)\n    *   `-Dudid=set this if running on Real Mobile Device only` (This is another way to specify your device ID for a real mobile device)\n\n*3. Running the Test:*\n\nYou can run the tests from your terminal or via an XML configuration.\n\n_(message continued in thread...)_","team":"T010QS7UQNA","bot_profile":{"id":"B099R6WTRU4","app_id":"A099LACAB2R","user_id":"U099R6WTZ9S","name":"AutoBot","icons":{"image_36":"https://a.slack-edge.com/80588/img/plugins/app/bot_36.png","image_48":"https://a.slack-edge.com/80588/img/plugins/app/bot_48.png","image_72":"https://a.slack-edge.com/80588/img/plugins/app/service_72.png"},"deleted":false,"updated":1754677948,"team_id":"T010QS7UQNA"},"thread_ts":"1755813948.960839","parent_user_id":"U01RMTFMALF","blocks":[{"type":"rich_text","block_id":"P=IC","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Your Question:","style":{"bold":true}}]},{"type":"rich_text_quote","elements":[{"type":"text","text":"How can i run an automated test on a local Android phone? "},{"type":"text","text":"Answer:","style":{"bold":true}}]},{"type":"rich_text_section","elements":[{"type":"text","text":"To run an automated test on a local Android phone, you generally need to configure your test environment and use specific commands for execution. Here's a breakdown of the steps and considerations:\n\n"},{"type":"text","text":"1. Prerequisites & Setup:","style":{"bold":true}},{"type":"text","text":"\n\n*   "},{"type":"text","text":"Android SDK:","style":{"bold":true}},{"type":"text","text":" Ensure your Android SDK is correctly set up. If using an Android Emulator, make sure your Run Configuration has the "},{"type":"text","text":"$ANDROID_HOME","style":{"code":true}},{"type":"text","text":" environment variable set and included in the path (Source: [Source)). *   "},{"type":"text","text":"Appium Server:","style":{"bold":true}},{"type":"text","text":" For local mobile tests, you'll need to start an Appium server. A "},{"type":"text","text":"SampleTest.java","style":{"code":true}},{"type":"text","text":" class is mentioned that uses TestNG annotated methods to instantiate the Web or Mobile Driver and start/stop the Appium server (Source: [Source), \"SampleTest Class\" code example). *   "},{"type":"text","text":"Synergy Server (if applicable):","style":{"bold":true}},{"type":"text","text":" If your setup uses Synergy, you'll need to download and run the Synergy server's "},{"type":"text","text":".jar","style":{"code":true}},{"type":"text","text":" file and connect to VPN (Source: [Source)). "},{"type":"text","text":"2. Test Configuration:","style":{"bold":true}},{"type":"text","text":"\n\n*   "},{"type":"text","text":"config.properties","style":{"bold":true,"code":true}},{"type":"text","text":":","style":{"bold":true}},{"type":"text","text":" In your "},{"type":"text","text":"resources/config.properties","style":{"code":true}},{"type":"text","text":" file within the "},{"type":"text","text":"mqe-hob-mobile-tests","style":{"code":true}},{"type":"text","text":" module, add or update the following properties for local Android testing (Source: [Source)):\n    *   "},{"type":"text","text":"Platform=ANDROID","style":{"code":true}},{"type":"text","text":"\n    *   "},{"type":"text","text":"MobileDeviceCategory=PHONE","style":{"code":true}},{"type":"text","text":"\n    *   "},{"type":"text","text":"DeviceStartOrientation=PORTRAIT","style":{"code":true}},{"type":"text","text":" (or LANDSCAPE)\n    *   "},{"type":"text","text":"DebugDeviceID","style":{"code":true}},{"type":"text","text":": Add the device ID of your emulator or local phone (you can get this by typing "},{"type":"text","text":"adb devices","style":{"code":true}},{"type":"text","text":" in the terminal). This is crucial for running tests on a real device. *   "},{"type":"text","text":"ClientID","style":{"code":true}},{"type":"text","text":": This machine serial number is for local executions or to target a specific private lab machine (Source: [Source)). *   "},{"type":"text","text":"Run Configuration Arguments:","style":{"bold":true}},{"type":"text","text":" When setting up your run configuration, include arguments like (Source: [Source)):\n    *   "},{"type":"text","text":"-Ddriver=android","style":{"code":true}},{"type":"text","text":"\n    *   "},{"type":"text","text":"-DplatformName=Android","style":{"code":true}},{"type":"text","text":"\n    *   "},{"type":"text","text":"-DplatformVersion=11.0","style":{"code":true}},{"type":"text","text":" (example version, use your device's version)\n    *   "},{"type":"text","text":"-DdeviceName=\"Google Pixel 2XL\"","style":{"code":true}},{"type":"text","text":" (example device name, use your device's name)\n    *   "},{"type":"text","text":"-Denvironment=local","style":{"code":true}},{"type":"text","text":"\n    *   "},{"type":"text","text":"-Dheadless=false","style":{"code":true}},{"type":"text","text":"\n    *   "},{"type":"text","text":"-Dapp=\"/pathToPackage/your-app-release.apk\"","style":{"code":true}},{"type":"text","text":" (path to your app's APK)\n    *   "},{"type":"text","text":"-Dudid=set this if running on Real Mobile Device only","style":{"code":true}},{"type":"text","text":" (This is another way to specify your device ID for a real mobile device)\n\n"},{"type":"text","text":"3. Running the Test:","style":{"bold":true}},{"type":"text","text":"\n\nYou can run the tests from your terminal or via an XML configuration.\n\n"},{"type":"text","text":"(message continued in thread...)","style":{"italic":true}}]}]}]}}
2025-08-21 15:06:03,814 - slack_sdk.web.base_client - DEBUG - [base_client.py:255] - Sending a request - url: https://slack.com/api/chat.postMessage, query_params: {}, body_params: {}, files: {}, json_body: {'channel': 'D09A0LFHK8R', 'text': '_(part 2/2)_\n\n*   *From Terminal:*\n    Open your IDE terminal window and enter the following command (Source: [Source)):\n    ```\n    mvn clean test -pl mqe-hob-mobile-tests -am -Dgroups=Your test case number or tag\n    ```\n    You might also see commands like this for more specific configurations (Source: [Source)):\n    ```\n    mvn test -Dmaven.repo.local=./.m2 -Dcucumber.features="$test" -Ddriver=android -DplatformName=android -Dudid= -Denvironment=lambdatest -DtargetURL=test-www.paramountplus.com -Dapp=lt://APP10160361191691076976834962 -DbundleId=com.cbsvideodebug.app -DappPackage=com.cbs.app -DlambdaKey=sureshkumar.palus:AdIBfntJTMxJhLRB18p7sgTEFMxAphu2X2cVmsQiu9KlESMhXq -Dbuild=P+_Android_phone_test-www -Dproject="P+ Android Mobile" -DqueueTimeout=300\n    ```\n\n*   *From TestNGSuiteConfig.xml:*\n    Navigate to the `TestNGSuiteConfig.xml` file, right-click, and select "Run TestNGSuiteConfig.xml". You will need to provide the necessary test case ID or tag name in the `<include name="" />` section (Source: [Source)):\n    ```xml\n    <!-- TEST EXECUTION QUEUE -->\n    <test verbose="1" name="All Mobile Tests" annotations="JDK">\n    <groups>\n    <run>\n    <include name="Debug"/>\n    <exclude name="Broken"/>\n    </run>\n    </groups>\n    </test>\n    ```\n\n────────────────────────────────────────\n*📚 Sources:*\n1. <https://paramount.atlassian.net/wiki/spaces/PLQA/pages/47713566](https://paramount.atlassian.net/wiki/spaces/PLQA/pages/47713566|Source>\n2. <https://paramount.atlassian.net/wiki/spaces/PLQA/pages/47711460](https://paramount.atlassian.net/wiki/spaces/PLQA/pages/47711460|Source>\n3. <https://paramount.atlassian.net/wiki/spaces/PLQA/pages/47720266](https://paramount.atlassian.net/wiki/spaces/PLQA/pages/47720266|Source>\n4. <https://paramount.atlassian.net/wiki/spaces/PLQA/pages/47721257](https://paramount.atlassian.net/wiki/spaces/PLQA/pages/47721257|Source>\n5. <https://paramount.atlassian.net/wiki/spaces/PLQA/pages/47713566|Source>\n6. <https://paramount.atlassian.net/wiki/spaces/PLQA/pages/47711460|Source>\n7. <https://paramount.atlassian.net/wiki/spaces/PLQA/pages/47720266|Source>\n8. <https://paramount.atlassian.net/wiki/spaces/PLQA/pages/47721257|Source>', 'thread_ts': '1755813948.960839', 'team_id': 'T010QS7UQNA'}, headers: {'Content-Type': 'application/json;charset=utf-8', 'Authorization': '(redacted)', 'User-Agent': 'Python/3.12.0 slackclient/3.34.0 Darwin/23.4.0'}
2025-08-21 15:06:04,266 - slack_sdk.web.base_client - DEBUG - [base_client.py:546] - Received the following response - status: 200, headers: {'date': 'Thu, 21 Aug 2025 22:06:04 GMT', 'server': 'Apache', 'vary': 'Accept-Encoding', 'x-slack-req-id': '2581c8d9387b5263a1e65b650ad88bd8', 'x-content-type-options': 'nosniff', 'x-xss-protection': '0', 'pragma': 'no-cache', 'cache-control': 'private, no-cache, no-store, must-revalidate', 'expires': 'Sat, 26 Jul 1997 05:00:00 GMT', 'content-type': 'application/json; charset=utf-8', 'x-accepted-oauth-scopes': 'chat:write', 'x-oauth-scopes': 'app_mentions:read,channels:history,chat:write,im:history,im:read,im:write,users:read,reactions:write,users:read.email', 'access-control-expose-headers': 'x-slack-req-id, retry-after', 'access-control-allow-headers': 'slack-route, x-slack-version-ts, x-b3-traceid, x-b3-spanid, x-b3-parentspanid, x-b3-sampled, x-b3-flags', 'strict-transport-security': 'max-age=31536000; includeSubDomains; preload', 'referrer-policy': 'no-referrer', 'x-slack-unique-id': 'aKeYTGMaxdhfnzNYDycagwAAQAo', 'x-slack-backend': 'r', 'access-control-allow-origin': '*', 'content-length': '7240', 'via': '1.1 slack-prod.tinyspeck.com, envoy-www-iad-rmldaefh,envoy-edge-pdx-ikuixonk', 'x-envoy-attempt-count': '1', 'x-envoy-upstream-service-time': '177', 'x-backend': 'main_normal main_canary_with_overflow main_control_with_overflow', 'x-server': 'slack-www-hhvm-main-iad-yndt', 'x-slack-shared-secret-outcome': 'no-match', 'x-edge-backend': 'envoy-www', 'timing-allow-origin': '*', 'x-slack-edge-shared-secret-outcome': 'no-match', 'connection': 'close'}, body: {"ok":true,"channel":"D09A0LFHK8R","ts":"1755813964.187009","message":{"user":"U099R6WTZ9S","type":"message","ts":"1755813964.187009","bot_id":"B099R6WTRU4","app_id":"A099LACAB2R","text":"_(part 2/2)_\n\n*   *From Terminal:*\n    Open your IDE terminal window and enter the following command (Source: [Source)):\n    ```\n    mvn clean test -pl mqe-hob-mobile-tests -am -Dgroups=Your test case number or tag\n    ```\n    You might also see commands like this for more specific configurations (Source: [Source)):\n    ```\n    mvn test -Dmaven.repo.local=./.m2 -Dcucumber.features=\"$test\" -Ddriver=android -DplatformName=android -Dudid= -Denvironment=lambdatest -DtargetURL=<http://test-www.paramountplus.com|test-www.paramountplus.com> -Dapp=<lt://APP10160361191691076976834962> -DbundleId=<http://com.cbsvideodebug.app|com.cbsvideodebug.app> -DappPackage=<http://com.cbs.app|com.cbs.app> -DlambdaKey=sureshkumar.palus:AdIBfntJTMxJhLRB18p7sgTEFMxAphu2X2cVmsQiu9KlESMhXq -Dbuild=P+_Android_phone_test-www -Dproject=\"P+ Android Mobile\" -DqueueTimeout=300\n    ```\n\n*   *From TestNGSuiteConfig.xml:*\n    Navigate to the `TestNGSuiteConfig.xml` file, right-click, and select \"Run TestNGSuiteConfig.xml\". You will need to provide the necessary test case ID or tag name in the `&lt;include name=\"\" /&gt;` section (Source: [Source)):\n    ```xml\n    &lt;!-- TEST EXECUTION QUEUE --&gt;\n    &lt;test verbose=\"1\" name=\"All Mobile Tests\" annotations=\"JDK\"&gt;\n    &lt;groups&gt;\n    &lt;run&gt;\n    &lt;include name=\"Debug\"/&gt;\n    &lt;exclude name=\"Broken\"/&gt;\n    &lt;/run&gt;\n    &lt;/groups&gt;\n    &lt;/test&gt;\n    ```\n\n────────────────────────────────────────\n*:books: Sources:*\n1. <https://paramount.atlassian.net/wiki/spaces/PLQA/pages/47713566](https://paramount.atlassian.net/wiki/spaces/PLQA/pages/47713566|Source>\n2. <https://paramount.atlassian.net/wiki/spaces/PLQA/pages/47711460](https://paramount.atlassian.net/wiki/spaces/PLQA/pages/47711460|Source>\n3. <https://paramount.atlassian.net/wiki/spaces/PLQA/pages/47720266](https://paramount.atlassian.net/wiki/spaces/PLQA/pages/47720266|Source>\n4. <https://paramount.atlassian.net/wiki/spaces/PLQA/pages/47721257](https://paramount.atlassian.net/wiki/spaces/PLQA/pages/47721257|Source>\n5. <https://paramount.atlassian.net/wiki/spaces/PLQA/pages/47713566|Source>\n6. <https://paramount.atlassian.net/wiki/spaces/PLQA/pages/47711460|Source>\n7. <https://paramount.atlassian.net/wiki/spaces/PLQA/pages/47720266|Source>\n8. <https://paramount.atlassian.net/wiki/spaces/PLQA/pages/47721257|Source>","team":"T010QS7UQNA","bot_profile":{"id":"B099R6WTRU4","app_id":"A099LACAB2R","user_id":"U099R6WTZ9S","name":"AutoBot","icons":{"image_36":"https://a.slack-edge.com/80588/img/plugins/app/bot_36.png","image_48":"https://a.slack-edge.com/80588/img/plugins/app/bot_48.png","image_72":"https://a.slack-edge.com/80588/img/plugins/app/service_72.png"},"deleted":false,"updated":1754677948,"team_id":"T010QS7UQNA"},"thread_ts":"1755813948.960839","parent_user_id":"U01RMTFMALF","blocks":[{"type":"rich_text","block_id":"SpmL","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"(part 2/2)","style":{"italic":true}},{"type":"text","text":"\n\n*   "},{"type":"text","text":"From Terminal:","style":{"bold":true}},{"type":"text","text":"\n    Open your IDE terminal window and enter the following command (Source: [Source)):\n    "}]},{"type":"rich_text_preformatted","elements":[{"type":"text","text":"    mvn clean test -pl mqe-hob-mobile-tests -am -Dgroups=Your test case number or tag\n    "}]},{"type":"rich_text_section","elements":[{"type":"text","text":"    You might also see commands like this for more specific configurations (Source: [Source)):\n    "}]},{"type":"rich_text_preformatted","elements":[{"type":"text","text":"    mvn test -Dmaven.repo.local=./.m2 -Dcucumber.features=\"$test\" -Ddriver=android -DplatformName=android -Dudid= -Denvironment=lambdatest -DtargetURL="},{"type":"link","url":"http://test-www.paramountplus.com","text":"test-www.paramountplus.com","unsafe":true},{"type":"text","text":" -Dapp="},{"type":"link","url":"lt://APP10160361191691076976834962"},{"type":"text","text":" -DbundleId="},{"type":"link","url":"http://com.cbsvideodebug.app","text":"com.cbsvideodebug.app"},{"type":"text","text":" -DappPackage="},{"type":"link","url":"http://com.cbs.app","text":"com.cbs.app"},{"type":"text","text":" -DlambdaKey=sureshkumar.palus:AdIBfntJTMxJhLRB18p7sgTEFMxAphu2X2cVmsQiu9KlESMhXq -Dbuild=P+_Android_phone_test-www -Dproject=\"P+ Android Mobile\" -DqueueTimeout=300\n    "}]},{"type":"rich_text_section","elements":[{"type":"text","text":"\n\n*   "},{"type":"text","text":"From TestNGSuiteConfig.xml:","style":{"bold":true}},{"type":"text","text":"\n    Navigate to the "},{"type":"text","text":"TestNGSuiteConfig.xml","style":{"code":true}},{"type":"text","text":" file, right-click, and select \"Run TestNGSuiteConfig.xml\". You will need to provide the necessary test case ID or tag name in the "},{"type":"text","text":"<include name=\"\" />","style":{"code":true}},{"type":"text","text":" section (Source: [Source)):\n    "}]},{"type":"rich_text_preformatted","elements":[{"type":"text","text":"xml\n    <!-- TEST EXECUTION QUEUE -->\n    <test verbose=\"1\" name=\"All Mobile Tests\" annotations=\"JDK\">\n    <groups>\n    <run>\n    <include name=\"Debug\"/>\n    <exclude name=\"Broken\"/>\n    </run>\n    </groups>\n    </test>\n    "}]},{"type":"rich_text_section","elements":[{"type":"text","text":"\n\n────────────────────────────────────────\n"},{"type":"emoji","name":"books","unicode":"1f4da","style":{"bold":true}},{"type":"text","text":" Sources:","style":{"bold":true}},{"type":"text","text":"\n1. "},{"type":"link","url":"https://paramount.atlassian.net/wiki/spaces/PLQA/pages/47713566](https://paramount.atlassian.net/wiki/spaces/PLQA/pages/47713566","text":"Source"},{"type":"text","text":"\n2. "},{"type":"link","url":"https://paramount.atlassian.net/wiki/spaces/PLQA/pages/47711460](https://paramount.atlassian.net/wiki/spaces/PLQA/pages/47711460","text":"Source"},{"type":"text","text":"\n3. "},{"type":"link","url":"https://paramount.atlassian.net/wiki/spaces/PLQA/pages/47720266](https://paramount.atlassian.net/wiki/spaces/PLQA/pages/47720266","text":"Source"},{"type":"text","text":"\n4. "},{"type":"link","url":"https://paramount.atlassian.net/wiki/spaces/PLQA/pages/47721257](https://paramount.atlassian.net/wiki/spaces/PLQA/pages/47721257","text":"Source"},{"type":"text","text":"\n5. "},{"type":"link","url":"https://paramount.atlassian.net/wiki/spaces/PLQA/pages/47713566","text":"Source"},{"type":"text","text":"\n6. "},{"type":"link","url":"https://paramount.atlassian.net/wiki/spaces/PLQA/pages/47711460","text":"Source"},{"type":"text","text":"\n7. "},{"type":"link","url":"https://paramount.atlassian.net/wiki/spaces/PLQA/pages/47720266","text":"Source"},{"type":"text","text":"\n8. "},{"type":"link","url":"https://paramount.atlassian.net/wiki/spaces/PLQA/pages/47721257","text":"Source"}]}]}]}}
2025-08-21 15:06:04,268 - __main__ - DEBUG - [main.py:577] - Cleaning up DM thread tracking...
2025-08-21 15:06:04,268 - utils - DEBUG - [utils.py:67] - Managing thread: D09A0LFHK8R:1755813948.960839, action: remove, user: U01RMTFMALF
2025-08-21 15:06:04,268 - utils - INFO - [utils.py:100] - Removed thread D09A0LFHK8R:1755813948.960839 from active tracking (remaining: 0)
2025-08-21 15:06:04,867 - slack_bolt.App - DEBUG - [client.py:235] - on_message invoked: (message: {"envelope_id":"b385ecf5-28aa-4cd0-bf3f-d0e7c0e9fbd9","payload":{"token":"yq71khZBCyJF1Ri2hG5aNqr5","team_id":"T010QS7UQNA","enterprise_id":"ERV4P7NAD","context_team_id":null,"context_enterprise_id":"ERV4P7NAD","api_app_id":"A099LACAB2R","event":{"user":"U099R6WTZ9S","type":"message","ts":"1755813963.775369","bot_id":"B099R6WTRU4","app_id":"A099LACAB2R","text":"*Your Question:*\n&gt; How can i run an automated test on a local Android phone? *Answer:*\nTo run an automated test on a local Android phone, you generally need to configure your test environment and use specific commands for execution. Here's a breakdown of the steps and considerations:\n\n*1. Prerequisites &amp; Setup:*\n\n*   *Android SDK:* Ensure your Android SDK is correctly set up. If using an Android Emulator, make sure your Run Configuration has the `$ANDROID_HOME` environment variable set and included in the path (Source: [Source)). *   *Appium Server:* For local mobile tests, you'll need to start an Appium server. A `SampleTest.java` class is mentioned that uses TestNG annotated methods to instantiate the Web or Mobile Driver and start\/stop the Appium server (Source: [Source), \"SampleTest Class\" code example). *   *Synergy Server (if applicable):* If your setup uses Synergy, you'll need to download and run the Synergy server's `.jar` file and connect to VPN (Source: [Source)). *2. Test Configuration:*\n\n*   *`config.properties`:* In your `resources\/config.properties` file within the `mqe-hob-mobile-tests` module, add or update the following properties for local Android testing (Source: [Source)):\n    *   `Platform=ANDROID`\n    *   `MobileDeviceCategory=PHONE`\n    *   `DeviceStartOrientation=PORTRAIT` (or LANDSCAPE)\n    *   `DebugDeviceID`: Add the device ID of your emulator or local phone (you can get this by typing `adb devices` in the terminal). This is crucial for running tests on a real device. *   `ClientID`: This machine serial number is for local executions or to target a specific private lab machine (Source: [Source)). *   *Run Configuration Arguments:* When setting up your run configuration, include arguments like (Source: [Source)):\n    *   `-Ddriver=android`\n    *   `-DplatformName=Android`\n    *   `-DplatformVersion=11.0` (example version, use your device's version)\n    *   `-DdeviceName=\"Google Pixel 2XL\"` (example device name, use your device's name)\n    *   `-Denvironment=local`\n    *   `-Dheadless=false`\n    *   `-Dapp=\"\/pathToPackage\/your-app-release.apk\"` (path to your app's APK)\n    *   `-Dudid=set this if running on Real Mobile Device only` (This is another way to specify your device ID for a real mobile device)\n\n*3. Running the Test:*\n\nYou can run the tests from your terminal or via an XML configuration.\n\n_(message continued in thread...)_","team":"T010QS7UQNA","bot_profile":{"id":"B099R6WTRU4","deleted":false,"name":"AutoBot","updated":1754677948,"app_id":"A099LACAB2R","user_id":"U099R6WTZ9S","icons":{"image_36":"https:\/\/a.slack-edge.com\/80588\/img\/plugins\/app\/bot_36.png","image_48":"https:\/\/a.slack-edge.com\/80588\/img\/plugins\/app\/bot_48.png","image_72":"https:\/\/a.slack-edge.com\/80588\/img\/plugins\/app\/service_72.png"},"team_id":"T010QS7UQNA"},"thread_ts":"1755813948.960839","parent_user_id":"U01RMTFMALF","blocks":[{"type":"rich_text","block_id":"=z+","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Your Question:","style":{"bold":true}}]},{"type":"rich_text_quote","elements":[{"type":"text","text":"How can i run an automated test on a local Android phone? "},{"type":"text","text":"Answer:","style":{"bold":true}}]},{"type":"rich_text_section","elements":[{"type":"text","text":"To run an automated test on a local Android phone, you generally need to configure your test environment and use specific commands for execution. Here's a breakdown of the steps and considerations:\n\n"},{"type":"text","text":"1. Prerequisites & Setup:","style":{"bold":true}},{"type":"text","text":"\n\n*   "},{"type":"text","text":"Android SDK:","style":{"bold":true}},{"type":"text","text":" Ensure your Android SDK is correctly set up. If using an Android Emulator, make sure your Run Configuration has the "},{"type":"text","text":"$ANDROID_HOME","style":{"code":true}},{"type":"text","text":" environment variable set and included in the path (Source: [Source)). *   "},{"type":"text","text":"Appium Server:","style":{"bold":true}},{"type":"text","text":" For local mobile tests, you'll need to start an Appium server. A "},{"type":"text","text":"SampleTest.java","style":{"code":true}},{"type":"text","text":" class is mentioned that uses TestNG annotated methods to instantiate the Web or Mobile Driver and start\/stop the Appium server (Source: [Source), \"SampleTest Class\" code example). *   "},{"type":"text","text":"Synergy Server (if applicable):","style":{"bold":true}},{"type":"text","text":" If your setup uses Synergy, you'll need to download and run the Synergy server's "},{"type":"text","text":".jar","style":{"code":true}},{"type":"text","text":" file and connect to VPN (Source: [Source)). "},{"type":"text","text":"2. Test Configuration:","style":{"bold":true}},{"type":"text","text":"\n\n*   "},{"type":"text","text":"config.properties","style":{"bold":true,"code":true}},{"type":"text","text":":","style":{"bold":true}},{"type":"text","text":" In your "},{"type":"text","text":"resources\/config.properties","style":{"code":true}},{"type":"text","text":" file within the "},{"type":"text","text":"mqe-hob-mobile-tests","style":{"code":true}},{"type":"text","text":" module, add or update the following properties for local Android testing (Source: [Source)):\n    *   "},{"type":"text","text":"Platform=ANDROID","style":{"code":true}},{"type":"text","text":"\n    *   "},{"type":"text","text":"MobileDeviceCategory=PHONE","style":{"code":true}},{"type":"text","text":"\n    *   "},{"type":"text","text":"DeviceStartOrientation=PORTRAIT","style":{"code":true}},{"type":"text","text":" (or LANDSCAPE)\n    *   "},{"type":"text","text":"DebugDeviceID","style":{"code":true}},{"type":"text","text":": Add the device ID of your emulator or local phone (you can get this by typing "},{"type":"text","text":"adb devices","style":{"code":true}},{"type":"text","text":" in the terminal). This is crucial for running tests on a real device. *   "},{"type":"text","text":"ClientID","style":{"code":true}},{"type":"text","text":": This machine serial number is for local executions or to target a specific private lab machine (Source: [Source)). *   "},{"type":"text","text":"Run Configuration Arguments:","style":{"bold":true}},{"type":"text","text":" When setting up your run configuration, include arguments like (Source: [Source)):\n    *   "},{"type":"text","text":"-Ddriver=android","style":{"code":true}},{"type":"text","text":"\n    *   "},{"type":"text","text":"-DplatformName=Android","style":{"code":true}},{"type":"text","text":"\n    *   "},{"type":"text","text":"-DplatformVersion=11.0","style":{"code":true}},{"type":"text","text":" (example version, use your device's version)\n    *   "},{"type":"text","text":"-DdeviceName=\"Google Pixel 2XL\"","style":{"code":true}},{"type":"text","text":" (example device name, use your device's name)\n    *   "},{"type":"text","text":"-Denvironment=local","style":{"code":true}},{"type":"text","text":"\n    *   "},{"type":"text","text":"-Dheadless=false","style":{"code":true}},{"type":"text","text":"\n    *   "},{"type":"text","text":"-Dapp=\"\/pathToPackage\/your-app-release.apk\"","style":{"code":true}},{"type":"text","text":" (path to your app's APK)\n    *   "},{"type":"text","text":"-Dudid=set this if running on Real Mobile Device only","style":{"code":true}},{"type":"text","text":" (This is another way to specify your device ID for a real mobile device)\n\n"},{"type":"text","text":"3. Running the Test:","style":{"bold":true}},{"type":"text","text":"\n\nYou can run the tests from your terminal or via an XML configuration.\n\n"},{"type":"text","text":"(message continued in thread...)","style":{"italic":true}}]}]}],"channel":"D09A0LFHK8R","event_ts":"1755813963.775369","channel_type":"im"},"type":"event_callback","event_id":"Ev09BWKN741F","event_time":1755813963,"authorizations":[{"enterprise_id":"ERV4P7NAD","team_id":"T010QS7UQNA","user_id":"U099R6WTZ9S","is_bot":true,"is_enterprise_install":false}],"is_ext_shared_channel":false,"event_context":"4-eyJldCI6Im1lc3NhZ2UiLCJ0aWQiOiJUMDEwUVM3VVFOQSIsImFpZCI6IkEwOTlMQUNBQjJSIiwiY2lkIjoiRDA5QTBMRkhLOFIifQ"},"type":"events_api","accepts_response_payload":false,"retry_attempt":0,"retry_reason":""})
2025-08-21 15:06:04,868 - slack_bolt.App - DEBUG - [client.py:99] - A new message enqueued (current queue size: 1)
2025-08-21 15:06:04,868 - slack_bolt.App - DEBUG - [client.py:105] - A message dequeued (current queue size: 0)
2025-08-21 15:06:04,868 - slack_bolt.App - DEBUG - [client.py:125] - Message processing started (type: events_api, envelope_id: b385ecf5-28aa-4cd0-bf3f-d0e7c0e9fbd9)
2025-08-21 15:06:04,868 - slack_bolt.App - DEBUG - [app.py:476] - Applying slack_bolt.middleware.ssl_check.ssl_check.SslCheck
2025-08-21 15:06:04,869 - slack_bolt.App - DEBUG - [app.py:476] - Applying slack_bolt.middleware.request_verification.request_verification.RequestVerification
2025-08-21 15:06:04,869 - slack_bolt.App - DEBUG - [app.py:476] - Applying slack_bolt.middleware.authorization.single_team_authorization.SingleTeamAuthorization
2025-08-21 15:06:04,869 - slack_bolt.App - DEBUG - [app.py:476] - Applying slack_bolt.middleware.ignoring_self_events.ignoring_self_events.IgnoringSelfEvents
2025-08-21 15:06:04,869 - slack_bolt.IgnoringSelfEvents - DEBUG - [ignoring_self_events.py:60] - Skipped self event: {'user': 'U099R6WTZ9S', 'type': 'message', 'ts': '1755813963.775369', 'bot_id': 'B099R6WTRU4', 'app_id': 'A099LACAB2R', 'text': '*Your Question:*\n&gt; How can i run an automated test on a local Android phone? *Answer:*\nTo run an automated test on a local Android phone, you generally need to configure your test environment and use specific commands for execution. Here\'s a breakdown of the steps and considerations:\n\n*1. Prerequisites &amp; Setup:*\n\n*   *Android SDK:* Ensure your Android SDK is correctly set up. If using an Android Emulator, make sure your Run Configuration has the `$ANDROID_HOME` environment variable set and included in the path (Source: [Source)). *   *Appium Server:* For local mobile tests, you\'ll need to start an Appium server. A `SampleTest.java` class is mentioned that uses TestNG annotated methods to instantiate the Web or Mobile Driver and start/stop the Appium server (Source: [Source), "SampleTest Class" code example). *   *Synergy Server (if applicable):* If your setup uses Synergy, you\'ll need to download and run the Synergy server\'s `.jar` file and connect to VPN (Source: [Source)). *2. Test Configuration:*\n\n*   *`config.properties`:* In your `resources/config.properties` file within the `mqe-hob-mobile-tests` module, add or update the following properties for local Android testing (Source: [Source)):\n    *   `Platform=ANDROID`\n    *   `MobileDeviceCategory=PHONE`\n    *   `DeviceStartOrientation=PORTRAIT` (or LANDSCAPE)\n    *   `DebugDeviceID`: Add the device ID of your emulator or local phone (you can get this by typing `adb devices` in the terminal). This is crucial for running tests on a real device. *   `ClientID`: This machine serial number is for local executions or to target a specific private lab machine (Source: [Source)). *   *Run Configuration Arguments:* When setting up your run configuration, include arguments like (Source: [Source)):\n    *   `-Ddriver=android`\n    *   `-DplatformName=Android`\n    *   `-DplatformVersion=11.0` (example version, use your device\'s version)\n    *   `-DdeviceName="Google Pixel 2XL"` (example device name, use your device\'s name)\n    *   `-Denvironment=local`\n    *   `-Dheadless=false`\n    *   `-Dapp="/pathToPackage/your-app-release.apk"` (path to your app\'s APK)\n    *   `-Dudid=set this if running on Real Mobile Device only` (This is another way to specify your device ID for a real mobile device)\n\n*3. Running the Test:*\n\nYou can run the tests from your terminal or via an XML configuration.\n\n_(message continued in thread...)_', 'team': 'T010QS7UQNA', 'bot_profile': {'id': 'B099R6WTRU4', 'deleted': False, 'name': 'AutoBot', 'updated': 1754677948, 'app_id': 'A099LACAB2R', 'user_id': 'U099R6WTZ9S', 'icons': {'image_36': 'https://a.slack-edge.com/80588/img/plugins/app/bot_36.png', 'image_48': 'https://a.slack-edge.com/80588/img/plugins/app/bot_48.png', 'image_72': 'https://a.slack-edge.com/80588/img/plugins/app/service_72.png'}, 'team_id': 'T010QS7UQNA'}, 'thread_ts': '1755813948.960839', 'parent_user_id': 'U01RMTFMALF', 'blocks': [{'type': 'rich_text', 'block_id': '=z+', 'elements': [{'type': 'rich_text_section', 'elements': [{'type': 'text', 'text': 'Your Question:', 'style': {'bold': True}}]}, {'type': 'rich_text_quote', 'elements': [{'type': 'text', 'text': 'How can i run an automated test on a local Android phone? '}, {'type': 'text', 'text': 'Answer:', 'style': {'bold': True}}]}, {'type': 'rich_text_section', 'elements': [{'type': 'text', 'text': "To run an automated test on a local Android phone, you generally need to configure your test environment and use specific commands for execution. Here's a breakdown of the steps and considerations:\n\n"}, {'type': 'text', 'text': '1. Prerequisites & Setup:', 'style': {'bold': True}}, {'type': 'text', 'text': '\n\n*   '}, {'type': 'text', 'text': 'Android SDK:', 'style': {'bold': True}}, {'type': 'text', 'text': ' Ensure your Android SDK is correctly set up. If using an Android Emulator, make sure your Run Configuration has the '}, {'type': 'text', 'text': '$ANDROID_HOME', 'style': {'code': True}}, {'type': 'text', 'text': ' environment variable set and included in the path (Source: [Source)). *   '}, {'type': 'text', 'text': 'Appium Server:', 'style': {'bold': True}}, {'type': 'text', 'text': " For local mobile tests, you'll need to start an Appium server. A "}, {'type': 'text', 'text': 'SampleTest.java', 'style': {'code': True}}, {'type': 'text', 'text': ' class is mentioned that uses TestNG annotated methods to instantiate the Web or Mobile Driver and start/stop the Appium server (Source: [Source), "SampleTest Class" code example). *   '}, {'type': 'text', 'text': 'Synergy Server (if applicable):', 'style': {'bold': True}}, {'type': 'text', 'text': " If your setup uses Synergy, you'll need to download and run the Synergy server's "}, {'type': 'text', 'text': '.jar', 'style': {'code': True}}, {'type': 'text', 'text': ' file and connect to VPN (Source: [Source)). '}, {'type': 'text', 'text': '2. Test Configuration:', 'style': {'bold': True}}, {'type': 'text', 'text': '\n\n*   '}, {'type': 'text', 'text': 'config.properties', 'style': {'bold': True, 'code': True}}, {'type': 'text', 'text': ':', 'style': {'bold': True}}, {'type': 'text', 'text': ' In your '}, {'type': 'text', 'text': 'resources/config.properties', 'style': {'code': True}}, {'type': 'text', 'text': ' file within the '}, {'type': 'text', 'text': 'mqe-hob-mobile-tests', 'style': {'code': True}}, {'type': 'text', 'text': ' module, add or update the following properties for local Android testing (Source: [Source)):\n    *   '}, {'type': 'text', 'text': 'Platform=ANDROID', 'style': {'code': True}}, {'type': 'text', 'text': '\n    *   '}, {'type': 'text', 'text': 'MobileDeviceCategory=PHONE', 'style': {'code': True}}, {'type': 'text', 'text': '\n    *   '}, {'type': 'text', 'text': 'DeviceStartOrientation=PORTRAIT', 'style': {'code': True}}, {'type': 'text', 'text': ' (or LANDSCAPE)\n    *   '}, {'type': 'text', 'text': 'DebugDeviceID', 'style': {'code': True}}, {'type': 'text', 'text': ': Add the device ID of your emulator or local phone (you can get this by typing '}, {'type': 'text', 'text': 'adb devices', 'style': {'code': True}}, {'type': 'text', 'text': ' in the terminal). This is crucial for running tests on a real device. *   '}, {'type': 'text', 'text': 'ClientID', 'style': {'code': True}}, {'type': 'text', 'text': ': This machine serial number is for local executions or to target a specific private lab machine (Source: [Source)). *   '}, {'type': 'text', 'text': 'Run Configuration Arguments:', 'style': {'bold': True}}, {'type': 'text', 'text': ' When setting up your run configuration, include arguments like (Source: [Source)):\n    *   '}, {'type': 'text', 'text': '-Ddriver=android', 'style': {'code': True}}, {'type': 'text', 'text': '\n    *   '}, {'type': 'text', 'text': '-DplatformName=Android', 'style': {'code': True}}, {'type': 'text', 'text': '\n    *   '}, {'type': 'text', 'text': '-DplatformVersion=11.0', 'style': {'code': True}}, {'type': 'text', 'text': " (example version, use your device's version)\n    *   "}, {'type': 'text', 'text': '-DdeviceName="Google Pixel 2XL"', 'style': {'code': True}}, {'type': 'text', 'text': " (example device name, use your device's name)\n    *   "}, {'type': 'text', 'text': '-Denvironment=local', 'style': {'code': True}}, {'type': 'text', 'text': '\n    *   '}, {'type': 'text', 'text': '-Dheadless=false', 'style': {'code': True}}, {'type': 'text', 'text': '\n    *   '}, {'type': 'text', 'text': '-Dapp="/pathToPackage/your-app-release.apk"', 'style': {'code': True}}, {'type': 'text', 'text': " (path to your app's APK)\n    *   "}, {'type': 'text', 'text': '-Dudid=set this if running on Real Mobile Device only', 'style': {'code': True}}, {'type': 'text', 'text': ' (This is another way to specify your device ID for a real mobile device)\n\n'}, {'type': 'text', 'text': '3. Running the Test:', 'style': {'bold': True}}, {'type': 'text', 'text': '\n\nYou can run the tests from your terminal or via an XML configuration.\n\n'}, {'type': 'text', 'text': '(message continued in thread...)', 'style': {'italic': True}}]}]}], 'channel': 'D09A0LFHK8R', 'event_ts': '1755813963.775369', 'channel_type': 'im'}
2025-08-21 15:06:04,869 - slack_bolt.App - DEBUG - [client.py:200] - Sending a message (session id: ba76bde4-0d28-43d6-8d56-c30fb04ace9a, message: {"envelope_id": "b385ecf5-28aa-4cd0-bf3f-d0e7c0e9fbd9"})
2025-08-21 15:06:04,870 - slack_bolt.App - DEBUG - [internals.py:41] - Response time: 1 milliseconds
2025-08-21 15:06:04,870 - slack_bolt.App - DEBUG - [client.py:150] - Message processing completed (type: events_api, envelope_id: b385ecf5-28aa-4cd0-bf3f-d0e7c0e9fbd9)
2025-08-21 15:06:05,929 - slack_bolt.App - DEBUG - [client.py:235] - on_message invoked: (message: {"envelope_id":"60984d99-78ea-4641-b493-7f97e1b236a2","payload":{"token":"yq71khZBCyJF1Ri2hG5aNqr5","team_id":"T010QS7UQNA","enterprise_id":"ERV4P7NAD","context_team_id":null,"context_enterprise_id":"ERV4P7NAD","api_app_id":"A099LACAB2R","event":{"user":"U099R6WTZ9S","type":"message","ts":"1755813964.187009","bot_id":"B099R6WTRU4","app_id":"A099LACAB2R","text":"_(part 2\/2)_\n\n*   *From Terminal:*\n    Open your IDE terminal window and enter the following command (Source: [Source)):\n    ```\n    mvn clean test -pl mqe-hob-mobile-tests -am -Dgroups=Your test case number or tag\n    ```\n    You might also see commands like this for more specific configurations (Source: [Source)):\n    ```\n    mvn test -Dmaven.repo.local=.\/.m2 -Dcucumber.features=\"$test\" -Ddriver=android -DplatformName=android -Dudid= -Denvironment=lambdatest -DtargetURL=<http:\/\/test-www.paramountplus.com|test-www.paramountplus.com> -Dapp=<lt:\/\/APP10160361191691076976834962> -DbundleId=<http:\/\/com.cbsvideodebug.app|com.cbsvideodebug.app> -DappPackage=<http:\/\/com.cbs.app|com.cbs.app> -DlambdaKey=sureshkumar.palus:AdIBfntJTMxJhLRB18p7sgTEFMxAphu2X2cVmsQiu9KlESMhXq -Dbuild=P+_Android_phone_test-www -Dproject=\"P+ Android Mobile\" -DqueueTimeout=300\n    ```\n\n*   *From TestNGSuiteConfig.xml:*\n    Navigate to the `TestNGSuiteConfig.xml` file, right-click, and select \"Run TestNGSuiteConfig.xml\". You will need to provide the necessary test case ID or tag name in the `&lt;include name=\"\" \/&gt;` section (Source: [Source)):\n    ```xml\n    &lt;!-- TEST EXECUTION QUEUE --&gt;\n    &lt;test verbose=\"1\" name=\"All Mobile Tests\" annotations=\"JDK\"&gt;\n    &lt;groups&gt;\n    &lt;run&gt;\n    &lt;include name=\"Debug\"\/&gt;\n    &lt;exclude name=\"Broken\"\/&gt;\n    &lt;\/run&gt;\n    &lt;\/groups&gt;\n    &lt;\/test&gt;\n    ```\n\n\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\n*:books: Sources:*\n1. <https:\/\/paramount.atlassian.net\/wiki\/spaces\/PLQA\/pages\/47713566](https:\/\/paramount.atlassian.net\/wiki\/spaces\/PLQA\/pages\/47713566|Source>\n2. <https:\/\/paramount.atlassian.net\/wiki\/spaces\/PLQA\/pages\/47711460](https:\/\/paramount.atlassian.net\/wiki\/spaces\/PLQA\/pages\/47711460|Source>\n3. <https:\/\/paramount.atlassian.net\/wiki\/spaces\/PLQA\/pages\/47720266](https:\/\/paramount.atlassian.net\/wiki\/spaces\/PLQA\/pages\/47720266|Source>\n4. <https:\/\/paramount.atlassian.net\/wiki\/spaces\/PLQA\/pages\/47721257](https:\/\/paramount.atlassian.net\/wiki\/spaces\/PLQA\/pages\/47721257|Source>\n5. <https:\/\/paramount.atlassian.net\/wiki\/spaces\/PLQA\/pages\/47713566|Source>\n6. <https:\/\/paramount.atlassian.net\/wiki\/spaces\/PLQA\/pages\/47711460|Source>\n7. <https:\/\/paramount.atlassian.net\/wiki\/spaces\/PLQA\/pages\/47720266|Source>\n8. <https:\/\/paramount.atlassian.net\/wiki\/spaces\/PLQA\/pages\/47721257|Source>","team":"T010QS7UQNA","bot_profile":{"id":"B099R6WTRU4","deleted":false,"name":"AutoBot","updated":1754677948,"app_id":"A099LACAB2R","user_id":"U099R6WTZ9S","icons":{"image_36":"https:\/\/a.slack-edge.com\/80588\/img\/plugins\/app\/bot_36.png","image_48":"https:\/\/a.slack-edge.com\/80588\/img\/plugins\/app\/bot_48.png","image_72":"https:\/\/a.slack-edge.com\/80588\/img\/plugins\/app\/service_72.png"},"team_id":"T010QS7UQNA"},"thread_ts":"1755813948.960839","parent_user_id":"U01RMTFMALF","blocks":[{"type":"rich_text","block_id":"S+o","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"(part 2\/2)","style":{"italic":true}},{"type":"text","text":"\n\n*   "},{"type":"text","text":"From Terminal:","style":{"bold":true}},{"type":"text","text":"\n    Open your IDE terminal window and enter the following command (Source: [Source)):\n    "}]},{"type":"rich_text_preformatted","elements":[{"type":"text","text":"    mvn clean test -pl mqe-hob-mobile-tests -am -Dgroups=Your test case number or tag\n    "}]},{"type":"rich_text_section","elements":[{"type":"text","text":"    You might also see commands like this for more specific configurations (Source: [Source)):\n    "}]},{"type":"rich_text_preformatted","elements":[{"type":"text","text":"    mvn test -Dmaven.repo.local=.\/.m2 -Dcucumber.features=\"$test\" -Ddriver=android -DplatformName=android -Dudid= -Denvironment=lambdatest -DtargetURL="},{"type":"link","url":"http:\/\/test-www.paramountplus.com","text":"test-www.paramountplus.com","unsafe":true},{"type":"text","text":" -Dapp="},{"type":"link","url":"lt:\/\/APP10160361191691076976834962"},{"type":"text","text":" -DbundleId="},{"type":"link","url":"http:\/\/com.cbsvideodebug.app","text":"com.cbsvideodebug.app"},{"type":"text","text":" -DappPackage="},{"type":"link","url":"http:\/\/com.cbs.app","text":"com.cbs.app"},{"type":"text","text":" -DlambdaKey=sureshkumar.palus:AdIBfntJTMxJhLRB18p7sgTEFMxAphu2X2cVmsQiu9KlESMhXq -Dbuild=P+_Android_phone_test-www -Dproject=\"P+ Android Mobile\" -DqueueTimeout=300\n    "}]},{"type":"rich_text_section","elements":[{"type":"text","text":"\n\n*   "},{"type":"text","text":"From TestNGSuiteConfig.xml:","style":{"bold":true}},{"type":"text","text":"\n    Navigate to the "},{"type":"text","text":"TestNGSuiteConfig.xml","style":{"code":true}},{"type":"text","text":" file, right-click, and select \"Run TestNGSuiteConfig.xml\". You will need to provide the necessary test case ID or tag name in the "},{"type":"text","text":"<include name=\"\" \/>","style":{"code":true}},{"type":"text","text":" section (Source: [Source)):\n    "}]},{"type":"rich_text_preformatted","elements":[{"type":"text","text":"xml\n    <!-- TEST EXECUTION QUEUE -->\n    <test verbose=\"1\" name=\"All Mobile Tests\" annotations=\"JDK\">\n    <groups>\n    <run>\n    <include name=\"Debug\"\/>\n    <exclude name=\"Broken\"\/>\n    <\/run>\n    <\/groups>\n    <\/test>\n    "}]},{"type":"rich_text_section","elements":[{"type":"text","text":"\n\n\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\n"},{"type":"emoji","name":"books","unicode":"1f4da","style":{"bold":true}},{"type":"text","text":" Sources:","style":{"bold":true}},{"type":"text","text":"\n1. "},{"type":"link","url":"https:\/\/paramount.atlassian.net\/wiki\/spaces\/PLQA\/pages\/47713566](https:\/\/paramount.atlassian.net\/wiki\/spaces\/PLQA\/pages\/47713566","text":"Source"},{"type":"text","text":"\n2. "},{"type":"link","url":"https:\/\/paramount.atlassian.net\/wiki\/spaces\/PLQA\/pages\/47711460](https:\/\/paramount.atlassian.net\/wiki\/spaces\/PLQA\/pages\/47711460","text":"Source"},{"type":"text","text":"\n3. "},{"type":"link","url":"https:\/\/paramount.atlassian.net\/wiki\/spaces\/PLQA\/pages\/47720266](https:\/\/paramount.atlassian.net\/wiki\/spaces\/PLQA\/pages\/47720266","text":"Source"},{"type":"text","text":"\n4. "},{"type":"link","url":"https:\/\/paramount.atlassian.net\/wiki\/spaces\/PLQA\/pages\/47721257](https:\/\/paramount.atlassian.net\/wiki\/spaces\/PLQA\/pages\/47721257","text":"Source"},{"type":"text","text":"\n5. "},{"type":"link","url":"https:\/\/paramount.atlassian.net\/wiki\/spaces\/PLQA\/pages\/47713566","text":"Source"},{"type":"text","text":"\n6. "},{"type":"link","url":"https:\/\/paramount.atlassian.net\/wiki\/spaces\/PLQA\/pages\/47711460","text":"Source"},{"type":"text","text":"\n7. "},{"type":"link","url":"https:\/\/paramount.atlassian.net\/wiki\/spaces\/PLQA\/pages\/47720266","text":"Source"},{"type":"text","text":"\n8. "},{"type":"link","url":"https:\/\/paramount.atlassian.net\/wiki\/spaces\/PLQA\/pages\/47721257","text":"Source"}]}]}],"channel":"D09A0LFHK8R","event_ts":"1755813964.187009","channel_type":"im"},"type":"event_callback","event_id":"Ev09BFT2MWJZ","event_time":1755813964,"authorizations":[{"enterprise_id":"ERV4P7NAD","team_id":"T010QS7UQNA","user_id":"U099R6WTZ9S","is_bot":true,"is_enterprise_install":false}],"is_ext_shared_channel":false,"event_context":"4-eyJldCI6Im1lc3NhZ2UiLCJ0aWQiOiJUMDEwUVM3VVFOQSIsImFpZCI6IkEwOTlMQUNBQjJSIiwiY2lkIjoiRDA5QTBMRkhLOFIifQ"},"type":"events_api","accepts_response_payload":false,"retry_attempt":0,"retry_reason":""})
2025-08-21 15:06:05,931 - slack_bolt.App - DEBUG - [client.py:99] - A new message enqueued (current queue size: 1)
2025-08-21 15:06:05,931 - slack_bolt.App - DEBUG - [client.py:105] - A message dequeued (current queue size: 0)
2025-08-21 15:06:05,931 - slack_bolt.App - DEBUG - [client.py:125] - Message processing started (type: events_api, envelope_id: 60984d99-78ea-4641-b493-7f97e1b236a2)
2025-08-21 15:06:05,931 - slack_bolt.App - DEBUG - [app.py:476] - Applying slack_bolt.middleware.ssl_check.ssl_check.SslCheck
2025-08-21 15:06:05,932 - slack_bolt.App - DEBUG - [app.py:476] - Applying slack_bolt.middleware.request_verification.request_verification.RequestVerification
2025-08-21 15:06:05,932 - slack_bolt.App - DEBUG - [app.py:476] - Applying slack_bolt.middleware.authorization.single_team_authorization.SingleTeamAuthorization
2025-08-21 15:06:05,932 - slack_bolt.App - DEBUG - [app.py:476] - Applying slack_bolt.middleware.ignoring_self_events.ignoring_self_events.IgnoringSelfEvents
2025-08-21 15:06:05,932 - slack_bolt.IgnoringSelfEvents - DEBUG - [ignoring_self_events.py:60] - Skipped self event: {'user': 'U099R6WTZ9S', 'type': 'message', 'ts': '1755813964.187009', 'bot_id': 'B099R6WTRU4', 'app_id': 'A099LACAB2R', 'text': '_(part 2/2)_\n\n*   *From Terminal:*\n    Open your IDE terminal window and enter the following command (Source: [Source)):\n    ```\n    mvn clean test -pl mqe-hob-mobile-tests -am -Dgroups=Your test case number or tag\n    ```\n    You might also see commands like this for more specific configurations (Source: [Source)):\n    ```\n    mvn test -Dmaven.repo.local=./.m2 -Dcucumber.features="$test" -Ddriver=android -DplatformName=android -Dudid= -Denvironment=lambdatest -DtargetURL=<http://test-www.paramountplus.com|test-www.paramountplus.com> -Dapp=<lt://APP10160361191691076976834962> -DbundleId=<http://com.cbsvideodebug.app|com.cbsvideodebug.app> -DappPackage=<http://com.cbs.app|com.cbs.app> -DlambdaKey=sureshkumar.palus:AdIBfntJTMxJhLRB18p7sgTEFMxAphu2X2cVmsQiu9KlESMhXq -Dbuild=P+_Android_phone_test-www -Dproject="P+ Android Mobile" -DqueueTimeout=300\n    ```\n\n*   *From TestNGSuiteConfig.xml:*\n    Navigate to the `TestNGSuiteConfig.xml` file, right-click, and select "Run TestNGSuiteConfig.xml". You will need to provide the necessary test case ID or tag name in the `&lt;include name="" /&gt;` section (Source: [Source)):\n    ```xml\n    &lt;!-- TEST EXECUTION QUEUE --&gt;\n    &lt;test verbose="1" name="All Mobile Tests" annotations="JDK"&gt;\n    &lt;groups&gt;\n    &lt;run&gt;\n    &lt;include name="Debug"/&gt;\n    &lt;exclude name="Broken"/&gt;\n    &lt;/run&gt;\n    &lt;/groups&gt;\n    &lt;/test&gt;\n    ```\n\n────────────────────────────────────────\n*:books: Sources:*\n1. <https://paramount.atlassian.net/wiki/spaces/PLQA/pages/47713566](https://paramount.atlassian.net/wiki/spaces/PLQA/pages/47713566|Source>\n2. <https://paramount.atlassian.net/wiki/spaces/PLQA/pages/47711460](https://paramount.atlassian.net/wiki/spaces/PLQA/pages/47711460|Source>\n3. <https://paramount.atlassian.net/wiki/spaces/PLQA/pages/47720266](https://paramount.atlassian.net/wiki/spaces/PLQA/pages/47720266|Source>\n4. <https://paramount.atlassian.net/wiki/spaces/PLQA/pages/47721257](https://paramount.atlassian.net/wiki/spaces/PLQA/pages/47721257|Source>\n5. <https://paramount.atlassian.net/wiki/spaces/PLQA/pages/47713566|Source>\n6. <https://paramount.atlassian.net/wiki/spaces/PLQA/pages/47711460|Source>\n7. <https://paramount.atlassian.net/wiki/spaces/PLQA/pages/47720266|Source>\n8. <https://paramount.atlassian.net/wiki/spaces/PLQA/pages/47721257|Source>', 'team': 'T010QS7UQNA', 'bot_profile': {'id': 'B099R6WTRU4', 'deleted': False, 'name': 'AutoBot', 'updated': 1754677948, 'app_id': 'A099LACAB2R', 'user_id': 'U099R6WTZ9S', 'icons': {'image_36': 'https://a.slack-edge.com/80588/img/plugins/app/bot_36.png', 'image_48': 'https://a.slack-edge.com/80588/img/plugins/app/bot_48.png', 'image_72': 'https://a.slack-edge.com/80588/img/plugins/app/service_72.png'}, 'team_id': 'T010QS7UQNA'}, 'thread_ts': '1755813948.960839', 'parent_user_id': 'U01RMTFMALF', 'blocks': [{'type': 'rich_text', 'block_id': 'S+o', 'elements': [{'type': 'rich_text_section', 'elements': [{'type': 'text', 'text': '(part 2/2)', 'style': {'italic': True}}, {'type': 'text', 'text': '\n\n*   '}, {'type': 'text', 'text': 'From Terminal:', 'style': {'bold': True}}, {'type': 'text', 'text': '\n    Open your IDE terminal window and enter the following command (Source: [Source)):\n    '}]}, {'type': 'rich_text_preformatted', 'elements': [{'type': 'text', 'text': '    mvn clean test -pl mqe-hob-mobile-tests -am -Dgroups=Your test case number or tag\n    '}]}, {'type': 'rich_text_section', 'elements': [{'type': 'text', 'text': '    You might also see commands like this for more specific configurations (Source: [Source)):\n    '}]}, {'type': 'rich_text_preformatted', 'elements': [{'type': 'text', 'text': '    mvn test -Dmaven.repo.local=./.m2 -Dcucumber.features="$test" -Ddriver=android -DplatformName=android -Dudid= -Denvironment=lambdatest -DtargetURL='}, {'type': 'link', 'url': 'http://test-www.paramountplus.com', 'text': 'test-www.paramountplus.com', 'unsafe': True}, {'type': 'text', 'text': ' -Dapp='}, {'type': 'link', 'url': 'lt://APP10160361191691076976834962'}, {'type': 'text', 'text': ' -DbundleId='}, {'type': 'link', 'url': 'http://com.cbsvideodebug.app', 'text': 'com.cbsvideodebug.app'}, {'type': 'text', 'text': ' -DappPackage='}, {'type': 'link', 'url': 'http://com.cbs.app', 'text': 'com.cbs.app'}, {'type': 'text', 'text': ' -DlambdaKey=sureshkumar.palus:AdIBfntJTMxJhLRB18p7sgTEFMxAphu2X2cVmsQiu9KlESMhXq -Dbuild=P+_Android_phone_test-www -Dproject="P+ Android Mobile" -DqueueTimeout=300\n    '}]}, {'type': 'rich_text_section', 'elements': [{'type': 'text', 'text': '\n\n*   '}, {'type': 'text', 'text': 'From TestNGSuiteConfig.xml:', 'style': {'bold': True}}, {'type': 'text', 'text': '\n    Navigate to the '}, {'type': 'text', 'text': 'TestNGSuiteConfig.xml', 'style': {'code': True}}, {'type': 'text', 'text': ' file, right-click, and select "Run TestNGSuiteConfig.xml". You will need to provide the necessary test case ID or tag name in the '}, {'type': 'text', 'text': '<include name="" />', 'style': {'code': True}}, {'type': 'text', 'text': ' section (Source: [Source)):\n    '}]}, {'type': 'rich_text_preformatted', 'elements': [{'type': 'text', 'text': 'xml\n    <!-- TEST EXECUTION QUEUE -->\n    <test verbose="1" name="All Mobile Tests" annotations="JDK">\n    <groups>\n    <run>\n    <include name="Debug"/>\n    <exclude name="Broken"/>\n    </run>\n    </groups>\n    </test>\n    '}]}, {'type': 'rich_text_section', 'elements': [{'type': 'text', 'text': '\n\n────────────────────────────────────────\n'}, {'type': 'emoji', 'name': 'books', 'unicode': '1f4da', 'style': {'bold': True}}, {'type': 'text', 'text': ' Sources:', 'style': {'bold': True}}, {'type': 'text', 'text': '\n1. '}, {'type': 'link', 'url': 'https://paramount.atlassian.net/wiki/spaces/PLQA/pages/47713566](https://paramount.atlassian.net/wiki/spaces/PLQA/pages/47713566', 'text': 'Source'}, {'type': 'text', 'text': '\n2. '}, {'type': 'link', 'url': 'https://paramount.atlassian.net/wiki/spaces/PLQA/pages/47711460](https://paramount.atlassian.net/wiki/spaces/PLQA/pages/47711460', 'text': 'Source'}, {'type': 'text', 'text': '\n3. '}, {'type': 'link', 'url': 'https://paramount.atlassian.net/wiki/spaces/PLQA/pages/47720266](https://paramount.atlassian.net/wiki/spaces/PLQA/pages/47720266', 'text': 'Source'}, {'type': 'text', 'text': '\n4. '}, {'type': 'link', 'url': 'https://paramount.atlassian.net/wiki/spaces/PLQA/pages/47721257](https://paramount.atlassian.net/wiki/spaces/PLQA/pages/47721257', 'text': 'Source'}, {'type': 'text', 'text': '\n5. '}, {'type': 'link', 'url': 'https://paramount.atlassian.net/wiki/spaces/PLQA/pages/47713566', 'text': 'Source'}, {'type': 'text', 'text': '\n6. '}, {'type': 'link', 'url': 'https://paramount.atlassian.net/wiki/spaces/PLQA/pages/47711460', 'text': 'Source'}, {'type': 'text', 'text': '\n7. '}, {'type': 'link', 'url': 'https://paramount.atlassian.net/wiki/spaces/PLQA/pages/47720266', 'text': 'Source'}, {'type': 'text', 'text': '\n8. '}, {'type': 'link', 'url': 'https://paramount.atlassian.net/wiki/spaces/PLQA/pages/47721257', 'text': 'Source'}]}]}], 'channel': 'D09A0LFHK8R', 'event_ts': '1755813964.187009', 'channel_type': 'im'}
2025-08-21 15:06:05,932 - slack_bolt.App - DEBUG - [client.py:200] - Sending a message (session id: ba76bde4-0d28-43d6-8d56-c30fb04ace9a, message: {"envelope_id": "60984d99-78ea-4641-b493-7f97e1b236a2"})
2025-08-21 15:06:05,932 - slack_bolt.App - DEBUG - [internals.py:41] - Response time: 0 milliseconds
2025-08-21 15:06:05,932 - slack_bolt.App - DEBUG - [client.py:150] - Message processing completed (type: events_api, envelope_id: 60984d99-78ea-4641-b493-7f97e1b236a2)
2025-08-21 15:08:37,164 - __main__ - INFO - [main.py:43] - Loading application configuration...
2025-08-21 15:08:37,164 - __main__ - INFO - [main.py:45] - Configuration loaded successfully
2025-08-21 15:08:37,164 - __main__ - INFO - [main.py:48] - Initializing security components...
2025-08-21 15:08:37,164 - __main__ - DEBUG - [main.py:50] - Slack validator initialized
2025-08-21 15:08:37,164 - security.content_filter - INFO - [content_filter.py:39] - Content filter initialized with 11 patterns
2025-08-21 15:08:37,164 - __main__ - DEBUG - [main.py:53] - Content filter initialized
2025-08-21 15:08:37,164 - auth.admin_manager - INFO - [admin_manager.py:27] - Admin manager initialized with 2 admin users
2025-08-21 15:08:37,164 - __main__ - DEBUG - [main.py:56] - Admin manager initialized
2025-08-21 15:08:37,164 - auth.email_whitelist - INFO - [email_whitelist.py:28] - Email whitelist initialized with 1 whitelisted emails
2025-08-21 15:08:37,164 - auth.email_whitelist - INFO - [email_whitelist.py:37] - Whitelisted domains: paramount.com
2025-08-21 15:08:37,164 - __main__ - DEBUG - [main.py:59] - Email whitelist initialized with 1 emails
2025-08-21 15:08:37,164 - auth.slack_user_info - DEBUG - [slack_user_info.py:25] - Slack user info manager initialized
2025-08-21 15:08:37,164 - __main__ - DEBUG - [main.py:62] - Slack user info manager initialized
2025-08-21 15:08:37,164 - __main__ - INFO - [main.py:63] - Security components initialized successfully
2025-08-21 15:08:37,164 - __main__ - INFO - [main.py:66] - Initializing Slack app...
2025-08-21 15:08:37,200 - slack_bolt.App - DEBUG - [base_client.py:255] - Sending a request - url: https://slack.com/api/auth.test, query_params: {}, body_params: {}, files: {}, json_body: None, headers: {'Content-Type': 'application/x-www-form-urlencoded', 'Authorization': '(redacted)', 'User-Agent': 'Bolt/1.16.0 Python/3.12.0 slackclient/3.34.0 Darwin/23.4.0'}
2025-08-21 15:08:37,684 - slack_bolt.App - DEBUG - [base_client.py:546] - Received the following response - status: 200, headers: {'date': 'Thu, 21 Aug 2025 22:08:37 GMT', 'server': 'Apache', 'vary': 'Accept-Encoding', 'x-slack-req-id': 'b2384e6b35e7d1a0a78db94aafdbbb3c', 'x-content-type-options': 'nosniff', 'x-xss-protection': '0', 'pragma': 'no-cache', 'cache-control': 'private, no-cache, no-store, must-revalidate', 'expires': 'Sat, 26 Jul 1997 05:00:00 GMT', 'content-type': 'application/json; charset=utf-8', 'x-oauth-scopes': 'app_mentions:read,channels:history,chat:write,im:history,im:read,im:write,users:read,reactions:write,users:read.email', 'access-control-expose-headers': 'x-slack-req-id, retry-after', 'access-control-allow-headers': 'slack-route, x-slack-version-ts, x-b3-traceid, x-b3-spanid, x-b3-parentspanid, x-b3-sampled, x-b3-flags', 'strict-transport-security': 'max-age=31536000; includeSubDomains; preload', 'referrer-policy': 'no-referrer', 'x-slack-unique-id': 'aKeY5cRzOxe987HpFVeHRAAAABc', 'x-slack-backend': 'r', 'access-control-allow-origin': '*', 'content-length': '228', 'via': '1.1 slack-prod.tinyspeck.com, envoy-www-iad-vmjmpfsa,envoy-edge-pdx-nqlcgetr', 'x-envoy-attempt-count': '1', 'x-envoy-upstream-service-time': '86', 'x-backend': 'main_normal main_canary_with_overflow main_control_with_overflow', 'x-server': 'slack-www-hhvm-main-iad-cnyg', 'x-slack-shared-secret-outcome': 'no-match', 'x-edge-backend': 'envoy-www', 'timing-allow-origin': '*', 'x-slack-edge-shared-secret-outcome': 'no-match', 'connection': 'close'}, body: {"ok":true,"url":"https://viacomcbs-grid-test.slack.com/","team":"Test Workspace","user":"autobot","team_id":"T010QS7UQNA","user_id":"U099R6WTZ9S","bot_id":"B099R6WTRU4","enterprise_id":"ERV4P7NAD","is_enterprise_install":false}
2025-08-21 15:08:37,686 - __main__ - INFO - [main.py:68] - Slack app initialized successfully
2025-08-21 15:08:37,686 - __main__ - DEBUG - [main.py:72] - Message deduplication cache initialized
2025-08-21 15:08:37,686 - __main__ - DEBUG - [main.py:77] - Thread tracking initialized
2025-08-21 15:08:37,686 - __main__ - INFO - [main.py:80] - Initializing DIG AI integration...
2025-08-21 15:08:37,686 - dig_connector - INFO - [dig_connector.py:284] - Initializing DIG AI with model ID: 42
2025-08-21 15:08:37,687 - dig_connector - INFO - [dig_connector.py:49] - Starting DIG chat session initialization...
2025-08-21 15:08:37,687 - dig_connector - DEBUG - [dig_connector.py:52] - Creating chat with name: Slack Bot Session 2025-08-21T22:08:37.687185+00:00
2025-08-21 15:08:37,687 - dig_connector - DEBUG - [dig_connector.py:63] - Creating chat - URL: https://ai.digdev.cbsicloud.com/fastapi/chats, Payload: {'chat_nm': 'Slack Bot Session 2025-08-21T22:08:37.687185+00:00', 'model_id': 42}
2025-08-21 15:08:37,692 - urllib3.connectionpool - DEBUG - [connectionpool.py:1055] - Starting new HTTPS connection (1): ai.digdev.cbsicloud.com:443
2025-08-21 15:08:37,950 - urllib3.connectionpool - DEBUG - [connectionpool.py:549] - https://ai.digdev.cbsicloud.com:443 "POST /fastapi/chats HTTP/1.1" 200 217
2025-08-21 15:08:37,952 - dig_connector - DEBUG - [dig_connector.py:66] - Create chat response: status=200
2025-08-21 15:08:37,952 - dig_connector - INFO - [dig_connector.py:54] - Successfully initialized DIG chat session with ID: 869
2025-08-21 15:08:37,953 - __main__ - INFO - [main.py:83] - DIG AI integration successfully initialized
2025-08-21 15:08:37,953 - __main__ - INFO - [main.py:87] - Setting up event handlers...
2025-08-21 15:08:37,955 - __main__ - INFO - [main.py:680] - Starting AI Assistant Bot...
2025-08-21 15:08:37,955 - __main__ - INFO - [main.py:681] - Registering event handlers...
2025-08-21 15:08:37,955 - __main__ - DEBUG - [main.py:682] - Event handlers registered: app_mention, message, app_home_opened
2025-08-21 15:08:37,955 - __main__ - INFO - [main.py:685] - Connecting to Slack via Socket Mode...
2025-08-21 15:08:37,956 - __main__ - INFO - [main.py:689] - Socket Mode handler created successfully
2025-08-21 15:08:37,956 - __main__ - INFO - [main.py:691] - ✅ Bot is now running and listening for events!
2025-08-21 15:08:37,956 - slack_bolt.App - DEBUG - [base_client.py:255] - Sending a request - url: https://slack.com/api/apps.connections.open, query_params: {}, body_params: {}, files: {}, json_body: None, headers: {'Content-Type': 'application/x-www-form-urlencoded', 'Authorization': '(redacted)', 'User-Agent': 'Bolt/1.16.0 Python/3.12.0 slackclient/3.34.0 Darwin/23.4.0'}
2025-08-21 15:08:38,258 - slack_bolt.App - DEBUG - [base_client.py:546] - Received the following response - status: 200, headers: {'date': 'Thu, 21 Aug 2025 22:08:38 GMT', 'server': 'Apache', 'vary': 'Accept-Encoding', 'x-slack-req-id': '760d1527f0ae193ed3004415b5d0e32c', 'x-content-type-options': 'nosniff', 'x-xss-protection': '0', 'x-robots-tag': 'noindex,nofollow', 'pragma': 'no-cache', 'cache-control': 'private, no-cache, no-store, must-revalidate', 'expires': 'Sat, 26 Jul 1997 05:00:00 GMT', 'content-type': 'application/json; charset=utf-8', 'x-accepted-oauth-scopes': 'connections:write', 'x-oauth-scopes': 'connections:write', 'access-control-expose-headers': 'x-slack-req-id, retry-after', 'access-control-allow-headers': 'slack-route, x-slack-version-ts, x-b3-traceid, x-b3-spanid, x-b3-parentspanid, x-b3-sampled, x-b3-flags', 'strict-transport-security': 'max-age=31536000; includeSubDomains; preload', 'referrer-policy': 'no-referrer', 'x-slack-unique-id': 'aKeY5t8GK_8MJ-tIE2kjvAAAEDU', 'x-slack-backend': 'r', 'access-control-allow-origin': '*', 'content-length': '173', 'via': '1.1 slack-prod.tinyspeck.com, envoy-www-iad-vpwpezrn,envoy-edge-pdx-kneifdti', 'x-envoy-attempt-count': '1', 'x-envoy-upstream-service-time': '78', 'x-backend': 'main_normal main_canary_with_overflow main_control_with_overflow', 'x-server': 'slack-www-hhvm-main-iad-lcto', 'x-slack-shared-secret-outcome': 'no-match', 'x-edge-backend': 'envoy-www', 'timing-allow-origin': '*', 'x-slack-edge-shared-secret-outcome': 'no-match', 'connection': 'close'}, body: {"ok":true,"url":"wss:\/\/wss-primary.slack.com\/link\/?ticket=73b8a1fa-34a7-466e-969d-37152bbae55e&app_id=a6c8d361ee1c6f398c5b4afec831555b78d7affa753b16bcc0fc64d7c13f3766"}
2025-08-21 15:08:38,862 - slack_bolt.App - INFO - [client.py:192] - A new session has been established (session id: b6bcaf93-1cfa-4a61-8ab0-906934b1bde0)
2025-08-21 15:08:38,862 - slack_bolt.App - INFO - [base_handler.py:50] - ⚡️ Bolt app is running!
2025-08-21 15:08:38,886 - slack_bolt.App - INFO - [client.py:265] - Starting to receive messages from a new connection (session id: b6bcaf93-1cfa-4a61-8ab0-906934b1bde0)
2025-08-21 15:08:38,887 - slack_bolt.App - DEBUG - [client.py:235] - on_message invoked: (message: {"type":"hello","num_connections":2,"debug_info":{"host":"applink-canary-0","build_number":0,"approximate_connection_time":18060},"connection_info":{"app_id":"A099LACAB2R"}})
2025-08-21 15:08:38,887 - slack_bolt.App - DEBUG - [client.py:99] - A new message enqueued (current queue size: 1)
2025-08-21 15:08:38,887 - slack_bolt.App - DEBUG - [client.py:105] - A message dequeued (current queue size: 0)
2025-08-21 15:08:38,887 - slack_bolt.App - DEBUG - [client.py:125] - Message processing started (type: hello, envelope_id: None)
2025-08-21 15:08:38,888 - slack_bolt.App - DEBUG - [client.py:150] - Message processing completed (type: hello, envelope_id: None)
2025-08-21 15:09:04,291 - slack_bolt.App - DEBUG - [client.py:235] - on_message invoked: (message: {"envelope_id":"42beba2b-ea5b-49d4-97a0-f40c89109b97","payload":{"token":"yq71khZBCyJF1Ri2hG5aNqr5","team_id":"T010QS7UQNA","enterprise_id":"ERV4P7NAD","context_team_id":null,"context_enterprise_id":"ERV4P7NAD","api_app_id":"A099LACAB2R","event":{"user":"U01RMTFMALF","type":"message","ts":"1755814128.589129","client_msg_id":"d1400836-5235-453a-acde-19d9f7d2a4d1","text":"How can i run an automated test on a local Android phone?","blocks":[{"type":"rich_text","block_id":"vQwBP","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"How can i run an automated test on a local Android phone?"}]}]}],"channel":"D09A0LFHK8R","event_ts":"1755814128.589129","channel_type":"im"},"type":"event_callback","event_id":"Ev09BFTCF05B","event_time":1755814128,"authorizations":[{"enterprise_id":"ERV4P7NAD","team_id":"T010QS7UQNA","user_id":"U099R6WTZ9S","is_bot":true,"is_enterprise_install":false}],"is_ext_shared_channel":false,"event_context":"4-eyJldCI6Im1lc3NhZ2UiLCJ0aWQiOiJUMDEwUVM3VVFOQSIsImFpZCI6IkEwOTlMQUNBQjJSIiwiY2lkIjoiRDA5QTBMRkhLOFIifQ"},"type":"events_api","accepts_response_payload":false,"retry_attempt":0,"retry_reason":""})
2025-08-21 15:09:04,292 - slack_bolt.App - DEBUG - [client.py:99] - A new message enqueued (current queue size: 1)
2025-08-21 15:09:04,293 - slack_bolt.App - DEBUG - [client.py:105] - A message dequeued (current queue size: 0)
2025-08-21 15:09:04,293 - slack_bolt.App - DEBUG - [client.py:125] - Message processing started (type: events_api, envelope_id: 42beba2b-ea5b-49d4-97a0-f40c89109b97)
2025-08-21 15:09:04,294 - slack_bolt.App - DEBUG - [app.py:476] - Applying slack_bolt.middleware.ssl_check.ssl_check.SslCheck
2025-08-21 15:09:04,294 - slack_bolt.App - DEBUG - [app.py:476] - Applying slack_bolt.middleware.request_verification.request_verification.RequestVerification
2025-08-21 15:09:04,295 - slack_bolt.App - DEBUG - [app.py:476] - Applying slack_bolt.middleware.authorization.single_team_authorization.SingleTeamAuthorization
2025-08-21 15:09:04,295 - slack_bolt.App - DEBUG - [app.py:476] - Applying slack_bolt.middleware.ignoring_self_events.ignoring_self_events.IgnoringSelfEvents
2025-08-21 15:09:04,295 - slack_bolt.App - DEBUG - [app.py:476] - Applying slack_bolt.middleware.url_verification.url_verification.UrlVerification
2025-08-21 15:09:04,295 - slack_bolt.App - DEBUG - [app.py:500] - Checking listener: handle_app_mentions ...
2025-08-21 15:09:04,295 - slack_bolt.App - DEBUG - [app.py:500] - Checking listener: help_message ...
2025-08-21 15:09:04,296 - slack_bolt.App - DEBUG - [app.py:500] - Checking listener: handle_dm_messages ...
2025-08-21 15:09:04,296 - slack_bolt.App - DEBUG - [app.py:522] - Running listener: handle_dm_messages ...
2025-08-21 15:09:04,296 - __main__ - INFO - [main.py:430] - === DM MESSAGE EVENT RECEIVED ===
2025-08-21 15:09:04,297 - slack_bolt.App - DEBUG - [thread_runner.py:198] - Responding with status: 200 body: "" (0 millis)
2025-08-21 15:09:04,297 - __main__ - DEBUG - [main.py:431] - Full event body: {'token': 'yq71khZBCyJF1Ri2hG5aNqr5', 'team_id': 'T010QS7UQNA', 'enterprise_id': 'ERV4P7NAD', 'context_team_id': None, 'context_enterprise_id': 'ERV4P7NAD', 'api_app_id': 'A099LACAB2R', 'event': {'user': 'U01RMTFMALF', 'type': 'message', 'ts': '1755814128.589129', 'client_msg_id': 'd1400836-5235-453a-acde-19d9f7d2a4d1', 'text': 'How can i run an automated test on a local Android phone?', 'blocks': [{'type': 'rich_text', 'block_id': 'vQwBP', 'elements': [{'type': 'rich_text_section', 'elements': [{'type': 'text', 'text': 'How can i run an automated test on a local Android phone?'}]}]}], 'channel': 'D09A0LFHK8R', 'event_ts': '1755814128.589129', 'channel_type': 'im'}, 'type': 'event_callback', 'event_id': 'Ev09BFTCF05B', 'event_time': 1755814128, 'authorizations': [{'enterprise_id': 'ERV4P7NAD', 'team_id': 'T010QS7UQNA', 'user_id': 'U099R6WTZ9S', 'is_bot': True, 'is_enterprise_install': False}], 'is_ext_shared_channel': False, 'event_context': '4-eyJldCI6Im1lc3NhZ2UiLCJ0aWQiOiJUMDEwUVM3VVFOQSIsImFpZCI6IkEwOTlMQUNBQjJSIiwiY2lkIjoiRDA5QTBMRkhLOFIifQ'}
2025-08-21 15:09:04,297 - slack_bolt.App - DEBUG - [client.py:200] - Sending a message (session id: b6bcaf93-1cfa-4a61-8ab0-906934b1bde0, message: {"envelope_id": "42beba2b-ea5b-49d4-97a0-f40c89109b97"})
2025-08-21 15:09:04,297 - __main__ - INFO - [main.py:440] - DM Event details: channel=D09A0LFHK8R, user=U01RMTFMALF, ts=1755814128.589129
2025-08-21 15:09:04,297 - __main__ - DEBUG - [main.py:441] - DM Event text: How can i run an automated test on a local Android phone?
2025-08-21 15:09:04,298 - utils - DEBUG - [utils.py:27] - Checking message processing: channel=D09A0LFHK8R, ts=1755814128.589129, text='How can i run an automated test on a local Android...'
2025-08-21 15:09:04,298 - slack_bolt.App - DEBUG - [internals.py:41] - Response time: 3 milliseconds
2025-08-21 15:09:04,298 - utils - DEBUG - [utils.py:31] - Message hash: e1f0e6b3f9da03bfd92f3b82921faf08
2025-08-21 15:09:04,298 - slack_bolt.App - DEBUG - [client.py:150] - Message processing completed (type: events_api, envelope_id: 42beba2b-ea5b-49d4-97a0-f40c89109b97)
2025-08-21 15:09:04,298 - utils - DEBUG - [utils.py:53] - Added message to processing cache (total entries: 1)
2025-08-21 15:09:04,298 - __main__ - DEBUG - [main.py:454] - Bot check: bot_id=None, user_id=U01RMTFMALF
2025-08-21 15:09:04,299 - __main__ - DEBUG - [main.py:459] - Question received: 'How can i run an automated test on a local Android phone?'
2025-08-21 15:09:04,299 - __main__ - DEBUG - [main.py:465] - Checking user access for DM...
2025-08-21 15:09:04,299 - auth.slack_user_info - DEBUG - [slack_user_info.py:48] - Fetching user info for user_id: U01RMTFMALF
2025-08-21 15:09:04,300 - slack_sdk.web.base_client - DEBUG - [base_client.py:255] - Sending a request - url: https://slack.com/api/users.info, query_params: {}, body_params: {'user': 'U01RMTFMALF', 'team_id': 'T010QS7UQNA'}, files: {}, json_body: None, headers: {'Content-Type': 'application/x-www-form-urlencoded', 'Authorization': '(redacted)', 'User-Agent': 'Python/3.12.0 slackclient/3.34.0 Darwin/23.4.0'}
2025-08-21 15:09:04,621 - slack_sdk.web.base_client - DEBUG - [base_client.py:546] - Received the following response - status: 200, headers: {'date': 'Thu, 21 Aug 2025 22:09:04 GMT', 'server': 'Apache', 'vary': 'Accept-Encoding', 'x-slack-req-id': '8cbfce400a0aab171e323cff4c432789', 'x-content-type-options': 'nosniff', 'x-xss-protection': '0', 'pragma': 'no-cache', 'cache-control': 'private, no-cache, no-store, must-revalidate', 'expires': 'Sat, 26 Jul 1997 05:00:00 GMT', 'content-type': 'application/json; charset=utf-8', 'x-accepted-oauth-scopes': 'users:read', 'x-oauth-scopes': 'app_mentions:read,channels:history,chat:write,im:history,im:read,im:write,users:read,reactions:write,users:read.email', 'access-control-expose-headers': 'x-slack-req-id, retry-after', 'access-control-allow-headers': 'slack-route, x-slack-version-ts, x-b3-traceid, x-b3-spanid, x-b3-parentspanid, x-b3-sampled, x-b3-flags', 'strict-transport-security': 'max-age=31536000; includeSubDomains; preload', 'referrer-policy': 'no-referrer', 'x-slack-unique-id': 'aKeZAFYxDq2l2t1rCjwjXwAAEDA', 'x-slack-backend': 'r', 'access-control-allow-origin': '*', 'content-length': '2057', 'via': '1.1 slack-prod.tinyspeck.com, envoy-www-iad-qhdynhhn,envoy-edge-pdx-qnhqytql', 'x-envoy-attempt-count': '1', 'x-envoy-upstream-service-time': '87', 'x-backend': 'main_normal main_canary_with_overflow main_control_with_overflow', 'x-server': 'slack-www-hhvm-main-iad-mrpw', 'x-slack-shared-secret-outcome': 'no-match', 'x-edge-backend': 'envoy-www', 'timing-allow-origin': '*', 'x-slack-edge-shared-secret-outcome': 'no-match', 'connection': 'close'}, body: {"ok":true,"user":{"id":"U01RMTFMALF","name":"popov8533","is_bot":false,"updated":1755806166,"is_app_user":false,"team_id":"T010QS7UQNA","deleted":false,"color":"4bbe2e","is_email_confirmed":true,"real_name":"Alexandr Popov","tz":"America\/Los_Angeles","tz_label":"Pacific Daylight Time","tz_offset":-25200,"is_admin":false,"is_owner":false,"is_primary_owner":false,"is_restricted":false,"is_ultra_restricted":false,"enterprise_user":{"id":"U01RMTFMALF","enterprise_id":"ERV4P7NAD","enterprise_name":"Paramount Global","is_admin":false,"is_owner":false,"is_primary_owner":false,"teams":["T010QS7UQNA","T02H1PQMF"]},"who_can_share_contact_card":"EVERYONE","profile":{"real_name":"Alexandr Popov","display_name":"Alex Popov","avatar_hash":"a64f82312a14","real_name_normalized":"Alexandr Popov","display_name_normalized":"Alex Popov","image_24":"https:\/\/avatars.slack-edge.com\/2023-03-29\/5033076824964_a64f82312a141123fbbf_24.png","image_32":"https:\/\/avatars.slack-edge.com\/2023-03-29\/5033076824964_a64f82312a141123fbbf_32.png","image_48":"https:\/\/avatars.slack-edge.com\/2023-03-29\/5033076824964_a64f82312a141123fbbf_48.png","image_72":"https:\/\/avatars.slack-edge.com\/2023-03-29\/5033076824964_a64f82312a141123fbbf_72.png","image_192":"https:\/\/avatars.slack-edge.com\/2023-03-29\/5033076824964_a64f82312a141123fbbf_192.png","image_512":"https:\/\/avatars.slack-edge.com\/2023-03-29\/5033076824964_a64f82312a141123fbbf_512.png","image_1024":"https:\/\/avatars.slack-edge.com\/2023-03-29\/5033076824964_a64f82312a141123fbbf_1024.png","image_original":"https:\/\/avatars.slack-edge.com\/2023-03-29\/5033076824964_a64f82312a141123fbbf_original.png","is_custom_image":true,"first_name":"Alexandr","last_name":"Popov","team":"T010QS7UQNA","email":"alexandr.popov@paramount.com","title":"Senior Software Quality Assurance Engineer","phone":"","skype":"","status_text":"","status_text_canonical":"","status_emoji":"","status_emoji_display_info":[],"status_expiration":0,"huddle_state":"default_unset","huddle_state_expiration_ts":0,"ooo_message":""}}}
2025-08-21 15:09:04,622 - auth.slack_user_info - DEBUG - [slack_user_info.py:63] - Retrieved email for user U01RMTFMALF: alexandr.popov@paramount.com
2025-08-21 15:09:04,622 - auth.email_whitelist - DEBUG - [email_whitelist.py:57] - Email access granted: alexandr.popov@paramount.com
2025-08-21 15:09:04,623 - __main__ - INFO - [main.py:118] - Access granted to user U01RMTFMALF with email alexandr.popov@paramount.com
2025-08-21 15:09:04,623 - __main__ - DEBUG - [main.py:471] - User access check passed for DM
2025-08-21 15:09:04,623 - __main__ - INFO - [main.py:473] - Processing DM question from user U01RMTFMALF: How can i run an automated test on a local Android phone?
2025-08-21 15:09:04,623 - __main__ - DEBUG - [main.py:476] - Starting DM processing...
2025-08-21 15:09:04,623 - __main__ - DEBUG - [main.py:479] - Checking if 'how can i run an automated test on a local android phone?' is an admin command in DM
2025-08-21 15:09:04,623 - __main__ - DEBUG - [main.py:515] - Checking if DM thread is already being processed...
2025-08-21 15:09:04,623 - utils - DEBUG - [utils.py:67] - Managing thread: D09A0LFHK8R:1755814128.589129, action: add, user: U01RMTFMALF
2025-08-21 15:09:04,623 - utils - INFO - [utils.py:94] - Added thread D09A0LFHK8R:1755814128.589129 to active tracking (total: 1)
2025-08-21 15:09:04,623 - __main__ - DEBUG - [main.py:520] - DM thread management check passed
2025-08-21 15:09:04,624 - slack_sdk.web.base_client - DEBUG - [base_client.py:255] - Sending a request - url: https://slack.com/api/reactions.add, query_params: {}, body_params: {'channel': 'D09A0LFHK8R', 'name': 'thinking_face', 'timestamp': '1755814128.589129', 'team_id': 'T010QS7UQNA'}, files: {}, json_body: None, headers: {'Content-Type': 'application/x-www-form-urlencoded', 'Authorization': '(redacted)', 'User-Agent': 'Python/3.12.0 slackclient/3.34.0 Darwin/23.4.0'}
2025-08-21 15:09:04,998 - slack_sdk.web.base_client - DEBUG - [base_client.py:546] - Received the following response - status: 200, headers: {'date': 'Thu, 21 Aug 2025 22:09:05 GMT', 'server': 'Apache', 'vary': 'Accept-Encoding', 'x-slack-req-id': '4b35addd50a42863de90edfad88eb6b3', 'x-content-type-options': 'nosniff', 'x-xss-protection': '0', 'pragma': 'no-cache', 'cache-control': 'private, no-cache, no-store, must-revalidate', 'expires': 'Sat, 26 Jul 1997 05:00:00 GMT', 'content-type': 'application/json; charset=utf-8', 'x-accepted-oauth-scopes': 'reactions:write', 'x-oauth-scopes': 'app_mentions:read,channels:history,chat:write,im:history,im:read,im:write,users:read,reactions:write,users:read.email', 'access-control-expose-headers': 'x-slack-req-id, retry-after', 'access-control-allow-headers': 'slack-route, x-slack-version-ts, x-b3-traceid, x-b3-spanid, x-b3-parentspanid, x-b3-sampled, x-b3-flags', 'strict-transport-security': 'max-age=31536000; includeSubDomains; preload', 'referrer-policy': 'no-referrer', 'x-slack-unique-id': 'aKeZAMeztZyYOtW948FalAAAEBo', 'x-slack-backend': 'r', 'access-control-allow-origin': '*', 'content-length': '11', 'via': '1.1 slack-prod.tinyspeck.com, envoy-www-iad-gkafpwmp,envoy-edge-pdx-yylsjjuh', 'x-envoy-attempt-count': '1', 'x-envoy-upstream-service-time': '140', 'x-backend': 'main_normal main_canary_with_overflow main_control_with_overflow', 'x-server': 'slack-www-hhvm-main-iad-kxfh', 'x-slack-shared-secret-outcome': 'no-match', 'x-edge-backend': 'envoy-www', 'timing-allow-origin': '*', 'x-slack-edge-shared-secret-outcome': 'no-match', 'connection': 'close'}, body: {"ok":true}
2025-08-21 15:09:04,999 - __main__ - INFO - [main.py:537] - Processing DM question from <@U01RMTFMALF>: How can i run an automated test on a local Android phone?
2025-08-21 15:09:05,000 - __main__ - INFO - [main.py:541] - Sending DM request to DIG AI...
2025-08-21 15:09:05,000 - dig_connector - INFO - [dig_connector.py:134] - Generating response for query: 'How can i run an automated test on a local Android phone?' with 0 chunks
2025-08-21 15:09:05,000 - dig_connector - DEBUG - [dig_connector.py:138] - Formatted context length: 0
2025-08-21 15:09:05,000 - dig_connector - INFO - [dig_connector.py:141] - No context available, using direct query
2025-08-21 15:09:05,000 - dig_connector - INFO - [dig_connector.py:150] - Sending prompt to DIG platform...
2025-08-21 15:09:05,000 - dig_connector - INFO - [dig_connector.py:121] - Sending message to DIG API - URL: https://ai.digdev.cbsicloud.com/fastapi/chats/869/generate
2025-08-21 15:09:05,000 - dig_connector - DEBUG - [dig_connector.py:122] - Message payload: {'model_id': 42, 'message_text': 'How can i run an automated test on a local Android phone?', 'history': [{'role': 'user', 'content': 'How can i run an automated test on a local Android phone?'}]}
2025-08-21 15:09:07,739 - slack_bolt.App - DEBUG - [client.py:235] - on_message invoked: (message: {"envelope_id":"6cd7b24d-5bdd-495d-b4ab-730e0094d486","payload":{"token":"yq71khZBCyJF1Ri2hG5aNqr5","team_id":"T010QS7UQNA","enterprise_id":"ERV4P7NAD","context_team_id":null,"context_enterprise_id":"ERV4P7NAD","api_app_id":"A099LACAB2R","event":{"user":"U01RMTFMALF","type":"message","ts":"1755814128.589129","client_msg_id":"d1400836-5235-453a-acde-19d9f7d2a4d1","text":"How can i run an automated test on a local Android phone?","blocks":[{"type":"rich_text","block_id":"vQwBP","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"How can i run an automated test on a local Android phone?"}]}]}],"channel":"D09A0LFHK8R","event_ts":"1755814128.589129","channel_type":"im"},"type":"event_callback","event_id":"Ev09BFTCF05B","event_time":1755814128,"authorizations":[{"enterprise_id":"ERV4P7NAD","team_id":"T010QS7UQNA","user_id":"U099R6WTZ9S","is_bot":true,"is_enterprise_install":false}],"is_ext_shared_channel":false,"event_context":"4-eyJldCI6Im1lc3NhZ2UiLCJ0aWQiOiJUMDEwUVM3VVFOQSIsImFpZCI6IkEwOTlMQUNBQjJSIiwiY2lkIjoiRDA5QTBMRkhLOFIifQ"},"type":"events_api","accepts_response_payload":false,"retry_attempt":1,"retry_reason":"timeout"})
2025-08-21 15:09:07,740 - slack_bolt.App - DEBUG - [client.py:99] - A new message enqueued (current queue size: 1)
2025-08-21 15:09:07,741 - slack_bolt.App - DEBUG - [client.py:105] - A message dequeued (current queue size: 0)
2025-08-21 15:09:07,741 - slack_bolt.App - DEBUG - [client.py:125] - Message processing started (type: events_api, envelope_id: 6cd7b24d-5bdd-495d-b4ab-730e0094d486)
2025-08-21 15:09:07,742 - slack_bolt.App - DEBUG - [app.py:476] - Applying slack_bolt.middleware.ssl_check.ssl_check.SslCheck
2025-08-21 15:09:07,742 - slack_bolt.App - DEBUG - [app.py:476] - Applying slack_bolt.middleware.request_verification.request_verification.RequestVerification
2025-08-21 15:09:07,742 - slack_bolt.App - DEBUG - [app.py:476] - Applying slack_bolt.middleware.authorization.single_team_authorization.SingleTeamAuthorization
2025-08-21 15:09:07,743 - slack_bolt.App - DEBUG - [app.py:476] - Applying slack_bolt.middleware.ignoring_self_events.ignoring_self_events.IgnoringSelfEvents
2025-08-21 15:09:07,743 - slack_bolt.App - DEBUG - [app.py:476] - Applying slack_bolt.middleware.url_verification.url_verification.UrlVerification
2025-08-21 15:09:07,743 - slack_bolt.App - DEBUG - [app.py:500] - Checking listener: handle_app_mentions ...
2025-08-21 15:09:07,743 - slack_bolt.App - DEBUG - [app.py:500] - Checking listener: help_message ...
2025-08-21 15:09:07,743 - slack_bolt.App - DEBUG - [app.py:500] - Checking listener: handle_dm_messages ...
2025-08-21 15:09:07,743 - slack_bolt.App - DEBUG - [app.py:522] - Running listener: handle_dm_messages ...
2025-08-21 15:09:07,744 - __main__ - INFO - [main.py:430] - === DM MESSAGE EVENT RECEIVED ===
2025-08-21 15:09:07,744 - slack_bolt.App - DEBUG - [thread_runner.py:198] - Responding with status: 200 body: "" (0 millis)
2025-08-21 15:09:07,744 - __main__ - DEBUG - [main.py:431] - Full event body: {'token': 'yq71khZBCyJF1Ri2hG5aNqr5', 'team_id': 'T010QS7UQNA', 'enterprise_id': 'ERV4P7NAD', 'context_team_id': None, 'context_enterprise_id': 'ERV4P7NAD', 'api_app_id': 'A099LACAB2R', 'event': {'user': 'U01RMTFMALF', 'type': 'message', 'ts': '1755814128.589129', 'client_msg_id': 'd1400836-5235-453a-acde-19d9f7d2a4d1', 'text': 'How can i run an automated test on a local Android phone?', 'blocks': [{'type': 'rich_text', 'block_id': 'vQwBP', 'elements': [{'type': 'rich_text_section', 'elements': [{'type': 'text', 'text': 'How can i run an automated test on a local Android phone?'}]}]}], 'channel': 'D09A0LFHK8R', 'event_ts': '1755814128.589129', 'channel_type': 'im'}, 'type': 'event_callback', 'event_id': 'Ev09BFTCF05B', 'event_time': 1755814128, 'authorizations': [{'enterprise_id': 'ERV4P7NAD', 'team_id': 'T010QS7UQNA', 'user_id': 'U099R6WTZ9S', 'is_bot': True, 'is_enterprise_install': False}], 'is_ext_shared_channel': False, 'event_context': '4-eyJldCI6Im1lc3NhZ2UiLCJ0aWQiOiJUMDEwUVM3VVFOQSIsImFpZCI6IkEwOTlMQUNBQjJSIiwiY2lkIjoiRDA5QTBMRkhLOFIifQ'}
2025-08-21 15:09:07,744 - slack_bolt.App - DEBUG - [client.py:200] - Sending a message (session id: b6bcaf93-1cfa-4a61-8ab0-906934b1bde0, message: {"envelope_id": "6cd7b24d-5bdd-495d-b4ab-730e0094d486"})
2025-08-21 15:09:07,745 - __main__ - INFO - [main.py:440] - DM Event details: channel=D09A0LFHK8R, user=U01RMTFMALF, ts=1755814128.589129
2025-08-21 15:09:07,745 - __main__ - DEBUG - [main.py:441] - DM Event text: How can i run an automated test on a local Android phone?
2025-08-21 15:09:07,745 - utils - DEBUG - [utils.py:27] - Checking message processing: channel=D09A0LFHK8R, ts=1755814128.589129, text='How can i run an automated test on a local Android...'
2025-08-21 15:09:07,746 - slack_bolt.App - DEBUG - [internals.py:41] - Response time: 3 milliseconds
2025-08-21 15:09:07,746 - utils - DEBUG - [utils.py:31] - Message hash: e1f0e6b3f9da03bfd92f3b82921faf08
2025-08-21 15:09:07,746 - slack_bolt.App - DEBUG - [client.py:150] - Message processing completed (type: events_api, envelope_id: 6cd7b24d-5bdd-495d-b4ab-730e0094d486)
2025-08-21 15:09:07,746 - utils - INFO - [utils.py:48] - Skipping duplicate message (hash: e1f0e6b3f9da03bfd92f3b82921faf08): How can i run an automated tes...
2025-08-21 15:09:07,746 - __main__ - INFO - [main.py:445] - Skipping DM message - already processed recently
2025-08-21 15:09:17,899 - urllib3.connectionpool - DEBUG - [connectionpool.py:549] - https://ai.digdev.cbsicloud.com:443 "POST /fastapi/chats/869/generate HTTP/1.1" 200 4102
2025-08-21 15:09:17,901 - dig_connector - DEBUG - [dig_connector.py:125] - DIG API response: status=200
2025-08-21 15:09:17,901 - dig_connector - DEBUG - [dig_connector.py:129] - DIG API response data: {'message_text': 'To run an automated test on a local Android phone, you\'ll need to follow several steps, including setting up your environment, configuring test parameters, and executing the test.\n\nHere\'s a breakdown based on the provided documents:\n\n### Prerequisites & Setup\n\n1.  **Connect to VPN**: Ensure you are connected to the VPN. (Source: `https://paramount.atlassian.net/wiki/spaces/PLQA/pages/47720266`)\n2.  **Synergy Server**: Download the latest version of the Synergy server and run the `.jar` file (Websocket). (Source: `https://paramount.atlassian.net/wiki/spaces/PLQA/pages/47720266`)\n3.  **Appium Server**: If running a local test, the `SampleTest.java` indicates that the Appium server will be started if the environment is "local" and the driver is "ios" or "android." (Source: `https://paramount.atlassian.net/wiki/spaces/PLQA/pages/47711460`)\n4.  **Android Emulator (if applicable)**: If you\'re using an Android Emulator, make sure your Run Configuration has the `$ANDROID_HOME` environment variable set and included in the path. (Source: `https://paramount.atlassian.net/wiki/spaces/PLQA/pages/47713566`) The system can also launch an emulator if the environment is local and the driver is Android. (Source: `https://paramount.atlassian.net/wiki/spaces/PLQA/pages/47711460`)\n\n### Configuration\n\nUpdate the desired capabilities in the `.config` file, located under the `mqe-hob-mobile-tests` directory.\n(Source: `https://paramount.atlassian.net/wiki/spaces/PLQA/pages/47720266`)\n\nKey parameters to set include:\n\n*   **`Platform`**: Set to `ANDROID`.\n*   **`Locale`**: For domestic testing, use `en-us`.\n*   **`MobileDeviceCategory`**: Set to `PHONE`.\n*   **`DeviceStartOrientation`**: Set to `PORTRAIT`.\n*   **`DebugDeviceID`**: If running on a real mobile device, set this to the device\'s IP address (you can find this by typing `adb devices` in the terminal). This is not needed for Synergy.\n*   **`AppPackageUrl`**: This should be the URL of your build (uploaded build URL from file storage).\n*   **`AppBuildType`**: `DEBUG`.\n\nOther parameters such as `ServerURL`, `TestRailProjectId`, `TestRailMilestoneId`, `TestRailTestRunId`, `Environment`, `UseGeoVPN`, `AppPreInstalled`, `DebugProxyPort`, and `ClientID` may also need to be configured based on your specific setup.\n(Source: `https://paramount.atlassian.net/wiki/spaces/PLQA/pages/47720266`)\n\n### Running the Test\n\nOnce the configuration is updated, you can run the test using one of the following methods:\n\n1.  **From Terminal**:\n    Enter the following command in your IDE terminal window:\n    `mvn clean test -pl mqe-hob-mobile-tests -am -Dgroups=Your test case number or tag`\n    (Source: `https://paramount.atlassian.net/wiki/spaces/PLQA/pages/47720266`)\n\n    You can also pass additional arguments directly in the maven command. For a local Android run, typical arguments include:\n    *   `-Ddriver=android`\n    *   `-DplatformName=Android`\n    *   `-DplatformVersion=11.0` (example version)\n    *   `-DdeviceName="Google Pixel 2XL"` (example device name)\n    *   `-Denvironment=local`\n    *   `-Dheadless=false`\n    *   `-Dapp="/pathToPackage/mobile-8.0.44-210804410-3.5.25-paramountPlus-playStore-release.apk"` (path to your application package)\n    *   `-Dudid=set this if running on Real Mobile Device only`\n    (Source: `https://paramount.atlassian.net/wiki/spaces/PLQA/pages/47711460`)\n\n2.  **From `TestNGSuiteConfig.xml`**:\n    Navigate to the `TestNGSuiteConfig.xml` file, right-click, and select "Run TestNGSuiteConfig.xml." Provide the necessary test case ID or tag name within the `<include name="" />` section under `<groups>`. For example:\n\n    ```xml\n    <test verbose="1" name="All Mobile Tests" annotations="JDK">\n        <groups>\n            <run>\n                <include name="Debug"/>\n                <exclude name="Broken"/>\n            </run>\n        </groups>\n    </test>\n    ```\n    (Source: `https://paramount.atlassian.net/wiki/spaces/PLQA/pages/47720266`)', 'requires_approval': False, 'execution_id': 1570}
2025-08-21 15:09:17,902 - dig_connector - INFO - [dig_connector.py:154] - Extracting response content...
2025-08-21 15:09:17,902 - dig_connector - DEBUG - [dig_connector.py:221] - Found message_text in response
2025-08-21 15:09:17,902 - dig_connector - INFO - [dig_connector.py:157] - Successfully generated response (length: 3951)
2025-08-21 15:09:17,902 - __main__ - INFO - [main.py:544] - Received DM response from DIG AI
2025-08-21 15:09:17,903 - __main__ - DEBUG - [main.py:545] - DIG AI DM response: To run an automated test on a local Android phone, you'll need to follow several steps, including setting up your environment, configuring test parameters, and executing the test.

Here's a breakdown based on the provided documents:

### Prerequisites & Setup

1.  **Connect to VPN**: Ensure you are connected to the VPN. (Source: `https://paramount.atlassian.net/wiki/spaces/PLQA/pages/47720266`)
2.  **Synergy Server**: Download the latest version of the Synergy server and run the `.jar` file (Websocket). (Source: `https://paramount.atlassian.net/wiki/spaces/PLQA/pages/47720266`)
3.  **Appium Server**: If running a local test, the `SampleTest.java` indicates that the Appium server will be started if the environment is "local" and the driver is "ios" or "android." (Source: `https://paramount.atlassian.net/wiki/spaces/PLQA/pages/47711460`)
4.  **Android Emulator (if applicable)**: If you're using an Android Emulator, make sure your Run Configuration has the `$ANDROID_HOME` environment variable set and included in the path. (Source: `https://paramount.atlassian.net/wiki/spaces/PLQA/pages/47713566`) The system can also launch an emulator if the environment is local and the driver is Android. (Source: `https://paramount.atlassian.net/wiki/spaces/PLQA/pages/47711460`)

### Configuration

Update the desired capabilities in the `.config` file, located under the `mqe-hob-mobile-tests` directory.
(Source: `https://paramount.atlassian.net/wiki/spaces/PLQA/pages/47720266`)

Key parameters to set include:

*   **`Platform`**: Set to `ANDROID`.
*   **`Locale`**: For domestic testing, use `en-us`.
*   **`MobileDeviceCategory`**: Set to `PHONE`.
*   **`DeviceStartOrientation`**: Set to `PORTRAIT`.
*   **`DebugDeviceID`**: If running on a real mobile device, set this to the device's IP address (you can find this by typing `adb devices` in the terminal). This is not needed for Synergy.
*   **`AppPackageUrl`**: This should be the URL of your build (uploaded build URL from file storage).
*   **`AppBuildType`**: `DEBUG`.

Other parameters such as `ServerURL`, `TestRailProjectId`, `TestRailMilestoneId`, `TestRailTestRunId`, `Environment`, `UseGeoVPN`, `AppPreInstalled`, `DebugProxyPort`, and `ClientID` may also need to be configured based on your specific setup.
(Source: `https://paramount.atlassian.net/wiki/spaces/PLQA/pages/47720266`)

### Running the Test

Once the configuration is updated, you can run the test using one of the following methods:

1.  **From Terminal**:
    Enter the following command in your IDE terminal window:
    `mvn clean test -pl mqe-hob-mobile-tests -am -Dgroups=Your test case number or tag`
    (Source: `https://paramount.atlassian.net/wiki/spaces/PLQA/pages/47720266`)

    You can also pass additional arguments directly in the maven command. For a local Android run, typical arguments include:
    *   `-Ddriver=android`
    *   `-DplatformName=Android`
    *   `-DplatformVersion=11.0` (example version)
    *   `-DdeviceName="Google Pixel 2XL"` (example device name)
    *   `-Denvironment=local`
    *   `-Dheadless=false`
    *   `-Dapp="/pathToPackage/mobile-8.0.44-210804410-3.5.25-paramountPlus-playStore-release.apk"` (path to your application package)
    *   `-Dudid=set this if running on Real Mobile Device only`
    (Source: `https://paramount.atlassian.net/wiki/spaces/PLQA/pages/47711460`)

2.  **From `TestNGSuiteConfig.xml`**:
    Navigate to the `TestNGSuiteConfig.xml` file, right-click, and select "Run TestNGSuiteConfig.xml." Provide the necessary test case ID or tag name within the `<include name="" />` section under `<groups>`. For example:

    ```xml
    <test verbose="1" name="All Mobile Tests" annotations="JDK">
        <groups>
            <run>
                <include name="Debug"/>
                <exclude name="Broken"/>
            </run>
        </groups>
    </test>
    ```
    (Source: `https://paramount.atlassian.net/wiki/spaces/PLQA/pages/47720266`)
2025-08-21 15:09:17,905 - __main__ - DEBUG - [main.py:549] - Formatted DM response: *Your Question:*
> How can i run an automated test on a local Android phone?

*Answer:*
To run an automated test on a local Android phone, you'll need to follow several steps, including setting up your environment, configuring test parameters, and executing the test.

Here's a breakdown based on the provided documents:

### Prerequisites & Setup

1.  *Connect to VPN*: Ensure you are connected to the VPN. (Source: `https://paramount.atlassian.net/wiki/spaces/PLQA/pages/47720266`)
2.  *Synergy Server*: Download the latest version of the Synergy server and run the `.jar` file (Websocket). (Source: `https://paramount.atlassian.net/wiki/spaces/PLQA/pages/47720266`)
3.  *Appium Server*: If running a local test, the `SampleTest.java` indicates that the Appium server will be started if the environment is "local" and the driver is "ios" or "android." (Source: `https://paramount.atlassian.net/wiki/spaces/PLQA/pages/47711460`)
4.  *Android Emulator (if applicable)*: If you're using an Android Emulator, make sure your Run Configuration has the `$ANDROID_HOME` environment variable set and included in the path. (Source: `https://paramount.atlassian.net/wiki/spaces/PLQA/pages/47713566`) The system can also launch an emulator if the environment is local and the driver is Android. (Source: `https://paramount.atlassian.net/wiki/spaces/PLQA/pages/47711460`)

### Configuration

Update the desired capabilities in the `.config` file, located under the `mqe-hob-mobile-tests` directory.
(Source: `https://paramount.atlassian.net/wiki/spaces/PLQA/pages/47720266`)

Key parameters to set include:

*   *`Platform`*: Set to `ANDROID`.
*   *`Locale`*: For domestic testing, use `en-us`.
*   *`MobileDeviceCategory`*: Set to `PHONE`.
*   *`DeviceStartOrientation`*: Set to `PORTRAIT`.
*   *`DebugDeviceID`*: If running on a real mobile device, set this to the device's IP address (you can find this by typing `adb devices` in the terminal). This is not needed for Synergy.
*   *`AppPackageUrl`*: This should be the URL of your build (uploaded build URL from file storage).
*   *`AppBuildType`*: `DEBUG`.

Other parameters such as `ServerURL`, `TestRailProjectId`, `TestRailMilestoneId`, `TestRailTestRunId`, `Environment`, `UseGeoVPN`, `AppPreInstalled`, `DebugProxyPort`, and `ClientID` may also need to be configured based on your specific setup.
(Source: `https://paramount.atlassian.net/wiki/spaces/PLQA/pages/47720266`)

### Running the Test

Once the configuration is updated, you can run the test using one of the following methods:

1.  *From Terminal*:
    Enter the following command in your IDE terminal window:
    `mvn clean test -pl mqe-hob-mobile-tests -am -Dgroups=Your test case number or tag`
    (Source: `https://paramount.atlassian.net/wiki/spaces/PLQA/pages/47720266`)

    You can also pass additional arguments directly in the maven command. For a local Android run, typical arguments include:
    *   `-Ddriver=android`
    *   `-DplatformName=Android`
    *   `-DplatformVersion=11.0` (example version)
    *   `-DdeviceName="Google Pixel 2XL"` (example device name)
    *   `-Denvironment=local`
    *   `-Dheadless=false`
    *   `-Dapp="/pathToPackage/mobile-8.0.44-210804410-3.5.25-paramountPlus-playStore-release.apk"` (path to your application package)
    *   `-Dudid=set this if running on Real Mobile Device only`
    (Source: `https://paramount.atlassian.net/wiki/spaces/PLQA/pages/47711460`)

2.  *From `TestNGSuiteConfig.xml`*:
    Navigate to the `TestNGSuiteConfig.xml` file, right-click, and select "Run TestNGSuiteConfig.xml." Provide the necessary test case ID or tag name within the `<include name="" />` section under `<groups>`. For example:

    ```xml
    <test verbose="1" name="All Mobile Tests" annotations="JDK">
        <groups>
            <run>
                <include name="Debug"/>
                <exclude name="Broken"/>
            </run>
        </groups>
    </test>
    ```
    (Source: `https://paramount.atlassian.net/wiki/spaces/PLQA/pages/47720266`)

────────────────────────────────────────
*📚 Sources:*
1. <https://paramount.atlassian.net/wiki/spaces/PLQA/pages/47720266`|Source>
2. <https://paramount.atlassian.net/wiki/spaces/PLQA/pages/47711460`|Source>
3. <https://paramount.atlassian.net/wiki/spaces/PLQA/pages/47713566`|Source>

2025-08-21 15:09:17,907 - slack_sdk.web.base_client - DEBUG - [base_client.py:255] - Sending a request - url: https://slack.com/api/reactions.remove, query_params: {}, body_params: {'name': 'thinking_face', 'channel': 'D09A0LFHK8R', 'timestamp': '1755814128.589129', 'team_id': 'T010QS7UQNA'}, files: {}, json_body: None, headers: {'Content-Type': 'application/x-www-form-urlencoded', 'Authorization': '(redacted)', 'User-Agent': 'Python/3.12.0 slackclient/3.34.0 Darwin/23.4.0'}
2025-08-21 15:09:18,294 - slack_sdk.web.base_client - DEBUG - [base_client.py:546] - Received the following response - status: 200, headers: {'date': 'Thu, 21 Aug 2025 22:09:18 GMT', 'server': 'Apache', 'vary': 'Accept-Encoding', 'x-slack-req-id': 'b758cd9241175170fd075b0484b14338', 'x-content-type-options': 'nosniff', 'x-xss-protection': '0', 'pragma': 'no-cache', 'cache-control': 'private, no-cache, no-store, must-revalidate', 'expires': 'Sat, 26 Jul 1997 05:00:00 GMT', 'content-type': 'application/json; charset=utf-8', 'x-accepted-oauth-scopes': 'reactions:write', 'x-oauth-scopes': 'app_mentions:read,channels:history,chat:write,im:history,im:read,im:write,users:read,reactions:write,users:read.email', 'access-control-expose-headers': 'x-slack-req-id, retry-after', 'access-control-allow-headers': 'slack-route, x-slack-version-ts, x-b3-traceid, x-b3-spanid, x-b3-parentspanid, x-b3-sampled, x-b3-flags', 'strict-transport-security': 'max-age=31536000; includeSubDomains; preload', 'referrer-policy': 'no-referrer', 'x-slack-unique-id': 'aKeZDoNAf_R2wOpLYOM5wQAAEAk', 'x-slack-backend': 'r', 'access-control-allow-origin': '*', 'content-length': '11', 'via': '1.1 slack-prod.tinyspeck.com, envoy-www-iad-vmjmpfsa,envoy-edge-pdx-dzhxzxwl', 'x-envoy-attempt-count': '1', 'x-envoy-upstream-service-time': '154', 'x-backend': 'main_normal main_canary_with_overflow main_control_with_overflow', 'x-server': 'slack-www-hhvm-main-iad-jnmq', 'x-slack-shared-secret-outcome': 'no-match', 'x-edge-backend': 'envoy-www', 'timing-allow-origin': '*', 'x-slack-edge-shared-secret-outcome': 'no-match', 'connection': 'close'}, body: {"ok":true}
2025-08-21 15:09:18,315 - slack_sdk.web.base_client - DEBUG - [base_client.py:255] - Sending a request - url: https://slack.com/api/chat.postMessage, query_params: {}, body_params: {}, files: {}, json_body: {'channel': 'D09A0LFHK8R', 'text': '*Your Question:*\n> How can i run an automated test on a local Android phone? *Answer:*\nTo run an automated test on a local Android phone, you\'ll need to follow several steps, including setting up your environment, configuring test parameters, and executing the test. Here\'s a breakdown based on the provided documents:\n\n### Prerequisites & Setup\n\n1. *Connect to VPN*: Ensure you are connected to the VPN. (Source: `https://paramount.atlassian.net/wiki/spaces/PLQA/pages/47720266`)\n2. *Synergy Server*: Download the latest version of the Synergy server and run the `.jar` file (Websocket). (Source: `https://paramount.atlassian.net/wiki/spaces/PLQA/pages/47720266`)\n3. *Appium Server*: If running a local test, the `SampleTest.java` indicates that the Appium server will be started if the environment is "local" and the driver is "ios" or "android." (Source: `https://paramount.atlassian.net/wiki/spaces/PLQA/pages/47711460`)\n4. *Android Emulator (if applicable)*: If you\'re using an Android Emulator, make sure your Run Configuration has the `$ANDROID_HOME` environment variable set and included in the path. (Source: `https://paramount.atlassian.net/wiki/spaces/PLQA/pages/47713566`) The system can also launch an emulator if the environment is local and the driver is Android. (Source: `https://paramount.atlassian.net/wiki/spaces/PLQA/pages/47711460`)\n\n### Configuration\n\nUpdate the desired capabilities in the `.config` file, located under the `mqe-hob-mobile-tests` directory. (Source: `https://paramount.atlassian.net/wiki/spaces/PLQA/pages/47720266`)\n\nKey parameters to set include:\n\n*   *`Platform`*: Set to `ANDROID`. *   *`Locale`*: For domestic testing, use `en-us`. *   *`MobileDeviceCategory`*: Set to `PHONE`. *   *`DeviceStartOrientation`*: Set to `PORTRAIT`. *   *`DebugDeviceID`*: If running on a real mobile device, set this to the device\'s IP address (you can find this by typing `adb devices` in the terminal). This is not needed for Synergy. *   *`AppPackageUrl`*: This should be the URL of your build (uploaded build URL from file storage). *   *`AppBuildType`*: `DEBUG`. Other parameters such as `ServerURL`, `TestRailProjectId`, `TestRailMilestoneId`, `TestRailTestRunId`, `Environment`, `UseGeoVPN`, `AppPreInstalled`, `DebugProxyPort`, and `ClientID` may also need to be configured based on your specific setup. (Source: `https://paramount.atlassian.net/wiki/spaces/PLQA/pages/47720266`)\n\n### Running the Test\n\nOnce the configuration is updated, you can run the test using one of the following methods:\n\n1. *From Terminal*:\n    Enter the following command in your IDE terminal window:\n    `mvn clean test -pl mqe-hob-mobile-tests -am -Dgroups=Your test case number or tag`\n    (Source: `https://paramount.atlassian.net/wiki/spaces/PLQA/pages/47720266`)\n\n    You can also pass additional arguments directly in the maven command.\n\n_(message continued in thread...)_', 'thread_ts': '1755814128.589129', 'team_id': 'T010QS7UQNA'}, headers: {'Content-Type': 'application/json;charset=utf-8', 'Authorization': '(redacted)', 'User-Agent': 'Python/3.12.0 slackclient/3.34.0 Darwin/23.4.0'}
2025-08-21 15:09:18,737 - slack_sdk.web.base_client - DEBUG - [base_client.py:546] - Received the following response - status: 200, headers: {'date': 'Thu, 21 Aug 2025 22:09:18 GMT', 'server': 'Apache', 'vary': 'Accept-Encoding', 'x-slack-req-id': 'c0e9de3fab5e6585e8e1b7a9a1f60fcc', 'x-content-type-options': 'nosniff', 'x-xss-protection': '0', 'pragma': 'no-cache', 'cache-control': 'private, no-cache, no-store, must-revalidate', 'expires': 'Sat, 26 Jul 1997 05:00:00 GMT', 'content-type': 'application/json; charset=utf-8', 'x-accepted-oauth-scopes': 'chat:write', 'x-oauth-scopes': 'app_mentions:read,channels:history,chat:write,im:history,im:read,im:write,users:read,reactions:write,users:read.email', 'access-control-expose-headers': 'x-slack-req-id, retry-after', 'access-control-allow-headers': 'slack-route, x-slack-version-ts, x-b3-traceid, x-b3-spanid, x-b3-parentspanid, x-b3-sampled, x-b3-flags', 'strict-transport-security': 'max-age=31536000; includeSubDomains; preload', 'referrer-policy': 'no-referrer', 'x-slack-unique-id': 'aKeZDtnELhHw--eFfrPumAAAEC8', 'x-slack-backend': 'r', 'access-control-allow-origin': '*', 'content-length': '9804', 'via': '1.1 slack-prod.tinyspeck.com, envoy-www-iad-qnxtyzpf,envoy-edge-pdx-hfxzlufz', 'x-envoy-attempt-count': '1', 'x-envoy-upstream-service-time': '193', 'x-backend': 'main_normal main_canary_with_overflow main_control_with_overflow', 'x-server': 'slack-www-hhvm-main-iad-csys', 'x-slack-shared-secret-outcome': 'no-match', 'x-edge-backend': 'envoy-www', 'timing-allow-origin': '*', 'x-slack-edge-shared-secret-outcome': 'no-match', 'connection': 'close'}, body: {"ok":true,"channel":"D09A0LFHK8R","ts":"1755814158.688479","message":{"user":"U099R6WTZ9S","type":"message","ts":"1755814158.688479","bot_id":"B099R6WTRU4","app_id":"A099LACAB2R","text":"*Your Question:*\n&gt; How can i run an automated test on a local Android phone? *Answer:*\nTo run an automated test on a local Android phone, you'll need to follow several steps, including setting up your environment, configuring test parameters, and executing the test. Here's a breakdown based on the provided documents:\n\n### Prerequisites &amp; Setup\n\n1. *Connect to VPN*: Ensure you are connected to the VPN. (Source: `<https://paramount.atlassian.net/wiki/spaces/PLQA/pages/47720266`>)\n2. *Synergy Server*: Download the latest version of the Synergy server and run the `.jar` file (Websocket). (Source: `<https://paramount.atlassian.net/wiki/spaces/PLQA/pages/47720266`>)\n3. *Appium Server*: If running a local test, the `SampleTest.java` indicates that the Appium server will be started if the environment is \"local\" and the driver is \"ios\" or \"android.\" (Source: `<https://paramount.atlassian.net/wiki/spaces/PLQA/pages/47711460`>)\n4. *Android Emulator (if applicable)*: If you're using an Android Emulator, make sure your Run Configuration has the `$ANDROID_HOME` environment variable set and included in the path. (Source: `<https://paramount.atlassian.net/wiki/spaces/PLQA/pages/47713566`>) The system can also launch an emulator if the environment is local and the driver is Android. (Source: `<https://paramount.atlassian.net/wiki/spaces/PLQA/pages/47711460`>)\n\n### Configuration\n\nUpdate the desired capabilities in the `.config` file, located under the `mqe-hob-mobile-tests` directory. (Source: `<https://paramount.atlassian.net/wiki/spaces/PLQA/pages/47720266`>)\n\nKey parameters to set include:\n\n*   *`Platform`*: Set to `ANDROID`. *   *`Locale`*: For domestic testing, use `en-us`. *   *`MobileDeviceCategory`*: Set to `PHONE`. *   *`DeviceStartOrientation`*: Set to `PORTRAIT`. *   *`DebugDeviceID`*: If running on a real mobile device, set this to the device's IP address (you can find this by typing `adb devices` in the terminal). This is not needed for Synergy. *   *`AppPackageUrl`*: This should be the URL of your build (uploaded build URL from file storage). *   *`AppBuildType`*: `DEBUG`. Other parameters such as `ServerURL`, `TestRailProjectId`, `TestRailMilestoneId`, `TestRailTestRunId`, `Environment`, `UseGeoVPN`, `AppPreInstalled`, `DebugProxyPort`, and `ClientID` may also need to be configured based on your specific setup. (Source: `<https://paramount.atlassian.net/wiki/spaces/PLQA/pages/47720266`>)\n\n### Running the Test\n\nOnce the configuration is updated, you can run the test using one of the following methods:\n\n1. *From Terminal*:\n    Enter the following command in your IDE terminal window:\n    `mvn clean test -pl mqe-hob-mobile-tests -am -Dgroups=Your test case number or tag`\n    (Source: `<https://paramount.atlassian.net/wiki/spaces/PLQA/pages/47720266`>)\n\n    You can also pass additional arguments directly in the maven command.\n\n_(message continued in thread...)_","team":"T010QS7UQNA","bot_profile":{"id":"B099R6WTRU4","app_id":"A099LACAB2R","user_id":"U099R6WTZ9S","name":"AutoBot","icons":{"image_36":"https://a.slack-edge.com/80588/img/plugins/app/bot_36.png","image_48":"https://a.slack-edge.com/80588/img/plugins/app/bot_48.png","image_72":"https://a.slack-edge.com/80588/img/plugins/app/service_72.png"},"deleted":false,"updated":1754677948,"team_id":"T010QS7UQNA"},"thread_ts":"1755814128.589129","parent_user_id":"U01RMTFMALF","blocks":[{"type":"rich_text","block_id":"BnKi","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Your Question:","style":{"bold":true}}]},{"type":"rich_text_quote","elements":[{"type":"text","text":"How can i run an automated test on a local Android phone? "},{"type":"text","text":"Answer:","style":{"bold":true}}]},{"type":"rich_text_section","elements":[{"type":"text","text":"To run an automated test on a local Android phone, you'll need to follow several steps, including setting up your environment, configuring test parameters, and executing the test. Here's a breakdown based on the provided documents:\n\n### Prerequisites & Setup\n\n1. "},{"type":"text","text":"Connect to VPN","style":{"bold":true}},{"type":"text","text":": Ensure you are connected to the VPN. (Source: `"},{"type":"link","url":"https://paramount.atlassian.net/wiki/spaces/PLQA/pages/47720266`"},{"type":"text","text":")\n2. "},{"type":"text","text":"Synergy Server","style":{"bold":true}},{"type":"text","text":": Download the latest version of the Synergy server and run the "},{"type":"text","text":".jar","style":{"code":true}},{"type":"text","text":" file (Websocket). (Source: `"},{"type":"link","url":"https://paramount.atlassian.net/wiki/spaces/PLQA/pages/47720266`"},{"type":"text","text":")\n3. "},{"type":"text","text":"Appium Server","style":{"bold":true}},{"type":"text","text":": If running a local test, the "},{"type":"text","text":"SampleTest.java","style":{"code":true}},{"type":"text","text":" indicates that the Appium server will be started if the environment is \"local\" and the driver is \"ios\" or \"android.\" (Source: `"},{"type":"link","url":"https://paramount.atlassian.net/wiki/spaces/PLQA/pages/47711460`"},{"type":"text","text":")\n4. "},{"type":"text","text":"Android Emulator (if applicable)","style":{"bold":true}},{"type":"text","text":": If you're using an Android Emulator, make sure your Run Configuration has the "},{"type":"text","text":"$ANDROID_HOME","style":{"code":true}},{"type":"text","text":" environment variable set and included in the path. (Source: "},{"type":"link","url":"https://paramount.atlassian.net/wiki/spaces/PLQA/pages/47713566`","style":{"code":true}},{"type":"text","text":") The system can also launch an emulator if the environment is local and the driver is Android. (Source: ","style":{"code":true}},{"type":"link","url":"https://paramount.atlassian.net/wiki/spaces/PLQA/pages/47711460`"},{"type":"text","text":")\n\n### Configuration\n\nUpdate the desired capabilities in the "},{"type":"text","text":".config","style":{"code":true}},{"type":"text","text":" file, located under the "},{"type":"text","text":"mqe-hob-mobile-tests","style":{"code":true}},{"type":"text","text":" directory. (Source: `"},{"type":"link","url":"https://paramount.atlassian.net/wiki/spaces/PLQA/pages/47720266`"},{"type":"text","text":")\n\nKey parameters to set include:\n\n*   "},{"type":"text","text":"Platform","style":{"bold":true,"code":true}},{"type":"text","text":": Set to "},{"type":"text","text":"ANDROID","style":{"code":true}},{"type":"text","text":". *   "},{"type":"text","text":"Locale","style":{"bold":true,"code":true}},{"type":"text","text":": For domestic testing, use "},{"type":"text","text":"en-us","style":{"code":true}},{"type":"text","text":". *   "},{"type":"text","text":"MobileDeviceCategory","style":{"bold":true,"code":true}},{"type":"text","text":": Set to "},{"type":"text","text":"PHONE","style":{"code":true}},{"type":"text","text":". *   "},{"type":"text","text":"DeviceStartOrientation","style":{"bold":true,"code":true}},{"type":"text","text":": Set to "},{"type":"text","text":"PORTRAIT","style":{"code":true}},{"type":"text","text":". *   "},{"type":"text","text":"DebugDeviceID","style":{"bold":true,"code":true}},{"type":"text","text":": If running on a real mobile device, set this to the device's IP address (you can find this by typing "},{"type":"text","text":"adb devices","style":{"code":true}},{"type":"text","text":" in the terminal). This is not needed for Synergy. *   "},{"type":"text","text":"AppPackageUrl","style":{"bold":true,"code":true}},{"type":"text","text":": This should be the URL of your build (uploaded build URL from file storage). *   "},{"type":"text","text":"AppBuildType","style":{"bold":true,"code":true}},{"type":"text","text":": "},{"type":"text","text":"DEBUG","style":{"code":true}},{"type":"text","text":". Other parameters such as "},{"type":"text","text":"ServerURL","style":{"code":true}},{"type":"text","text":", "},{"type":"text","text":"TestRailProjectId","style":{"code":true}},{"type":"text","text":", "},{"type":"text","text":"TestRailMilestoneId","style":{"code":true}},{"type":"text","text":", "},{"type":"text","text":"TestRailTestRunId","style":{"code":true}},{"type":"text","text":", "},{"type":"text","text":"Environment","style":{"code":true}},{"type":"text","text":", "},{"type":"text","text":"UseGeoVPN","style":{"code":true}},{"type":"text","text":", "},{"type":"text","text":"AppPreInstalled","style":{"code":true}},{"type":"text","text":", "},{"type":"text","text":"DebugProxyPort","style":{"code":true}},{"type":"text","text":", and "},{"type":"text","text":"ClientID","style":{"code":true}},{"type":"text","text":" may also need to be configured based on your specific setup. (Source: `"},{"type":"link","url":"https://paramount.atlassian.net/wiki/spaces/PLQA/pages/47720266`"},{"type":"text","text":")\n\n### Running the Test\n\nOnce the configuration is updated, you can run the test using one of the following methods:\n\n1. "},{"type":"text","text":"From Terminal","style":{"bold":true}},{"type":"text","text":":\n    Enter the following command in your IDE terminal window:\n    "},{"type":"text","text":"mvn clean test -pl mqe-hob-mobile-tests -am -Dgroups=Your test case number or tag","style":{"code":true}},{"type":"text","text":"\n    (Source: `"},{"type":"link","url":"https://paramount.atlassian.net/wiki/spaces/PLQA/pages/47720266`"},{"type":"text","text":")\n\n    You can also pass additional arguments directly in the maven command.\n\n"},{"type":"text","text":"(message continued in thread...)","style":{"italic":true}}]}]}]}}
2025-08-21 15:09:18,739 - slack_sdk.web.base_client - DEBUG - [base_client.py:255] - Sending a request - url: https://slack.com/api/chat.postMessage, query_params: {}, body_params: {}, files: {}, json_body: {'channel': 'D09A0LFHK8R', 'text': '_(part 2/2)_\n\nFor a local Android run, typical arguments include:\n    *   `-Ddriver=android`\n    *   `-DplatformName=Android`\n    *   `-DplatformVersion=11.0` (example version)\n    *   `-DdeviceName="Google Pixel 2XL"` (example device name)\n    *   `-Denvironment=local`\n    *   `-Dheadless=false`\n    *   `-Dapp="/pathToPackage/mobile-8.0.44-210804410-3.5.25-paramountPlus-playStore-release.apk"` (path to your application package)\n    *   `-Dudid=set this if running on Real Mobile Device only`\n    (Source: `https://paramount.atlassian.net/wiki/spaces/PLQA/pages/47711460`)\n\n2. *From `TestNGSuiteConfig.xml`*:\n    Navigate to the `TestNGSuiteConfig.xml` file, right-click, and select "Run TestNGSuiteConfig.xml." Provide the necessary test case ID or tag name within the `<include name="" />` section under `<groups>`. For example:\n\n    ```xml\n    <test verbose="1" name="All Mobile Tests" annotations="JDK">\n        <groups>\n            <run>\n                <include name="Debug"/>\n                <exclude name="Broken"/>\n            </run>\n        </groups>\n    </test>\n    ```\n    (Source: `https://paramount.atlassian.net/wiki/spaces/PLQA/pages/47720266`)\n\n────────────────────────────────────────\n*📚 Sources:*\n1. <https://paramount.atlassian.net/wiki/spaces/PLQA/pages/47720266`|Source>\n2. <https://paramount.atlassian.net/wiki/spaces/PLQA/pages/47711460`|Source>\n3. <https://paramount.atlassian.net/wiki/spaces/PLQA/pages/47713566`|Source>', 'thread_ts': '1755814128.589129', 'team_id': 'T010QS7UQNA'}, headers: {'Content-Type': 'application/json;charset=utf-8', 'Authorization': '(redacted)', 'User-Agent': 'Python/3.12.0 slackclient/3.34.0 Darwin/23.4.0'}
2025-08-21 15:09:19,158 - slack_sdk.web.base_client - DEBUG - [base_client.py:546] - Received the following response - status: 200, headers: {'date': 'Thu, 21 Aug 2025 22:09:19 GMT', 'server': 'Apache', 'vary': 'Accept-Encoding', 'x-slack-req-id': '4d02cac982ec628e75cbb32256346227', 'x-content-type-options': 'nosniff', 'x-xss-protection': '0', 'pragma': 'no-cache', 'cache-control': 'private, no-cache, no-store, must-revalidate', 'expires': 'Sat, 26 Jul 1997 05:00:00 GMT', 'content-type': 'application/json; charset=utf-8', 'x-accepted-oauth-scopes': 'chat:write', 'x-oauth-scopes': 'app_mentions:read,channels:history,chat:write,im:history,im:read,im:write,users:read,reactions:write,users:read.email', 'access-control-expose-headers': 'x-slack-req-id, retry-after', 'access-control-allow-headers': 'slack-route, x-slack-version-ts, x-b3-traceid, x-b3-spanid, x-b3-parentspanid, x-b3-sampled, x-b3-flags', 'strict-transport-security': 'max-age=31536000; includeSubDomains; preload', 'referrer-policy': 'no-referrer', 'x-slack-unique-id': 'aKeZDzp_PRKj5WUNTUF0bwAAEBA', 'x-slack-backend': 'r', 'access-control-allow-origin': '*', 'content-length': '5520', 'via': '1.1 slack-prod.tinyspeck.com, envoy-www-iad-duyzqutt,envoy-edge-pdx-jaqozgnx', 'x-envoy-attempt-count': '1', 'x-envoy-upstream-service-time': '173', 'x-backend': 'main_normal main_canary_with_overflow main_control_with_overflow', 'x-server': 'slack-www-hhvm-main-iad-zycz', 'x-slack-shared-secret-outcome': 'no-match', 'x-edge-backend': 'envoy-www', 'timing-allow-origin': '*', 'x-slack-edge-shared-secret-outcome': 'no-match', 'connection': 'close'}, body: {"ok":true,"channel":"D09A0LFHK8R","ts":"1755814159.123839","message":{"user":"U099R6WTZ9S","type":"message","ts":"1755814159.123839","bot_id":"B099R6WTRU4","app_id":"A099LACAB2R","text":"_(part 2/2)_\n\nFor a local Android run, typical arguments include:\n    *   `-Ddriver=android`\n    *   `-DplatformName=Android`\n    *   `-DplatformVersion=11.0` (example version)\n    *   `-DdeviceName=\"Google Pixel 2XL\"` (example device name)\n    *   `-Denvironment=local`\n    *   `-Dheadless=false`\n    *   `-Dapp=\"/pathToPackage/mobile-8.0.44-210804410-3.5.25-paramountPlus-playStore-release.apk\"` (path to your application package)\n    *   `-Dudid=set this if running on Real Mobile Device only`\n    (Source: `<https://paramount.atlassian.net/wiki/spaces/PLQA/pages/47711460`>)\n\n2. *From `TestNGSuiteConfig.xml`*:\n    Navigate to the `TestNGSuiteConfig.xml` file, right-click, and select \"Run TestNGSuiteConfig.xml.\" Provide the necessary test case ID or tag name within the `&lt;include name=\"\" /&gt;` section under `&lt;groups&gt;`. For example:\n\n    ```xml\n    &lt;test verbose=\"1\" name=\"All Mobile Tests\" annotations=\"JDK\"&gt;\n        &lt;groups&gt;\n            &lt;run&gt;\n                &lt;include name=\"Debug\"/&gt;\n                &lt;exclude name=\"Broken\"/&gt;\n            &lt;/run&gt;\n        &lt;/groups&gt;\n    &lt;/test&gt;\n    ```\n    (Source: `<https://paramount.atlassian.net/wiki/spaces/PLQA/pages/47720266`>)\n\n────────────────────────────────────────\n*:books: Sources:*\n1. <https://paramount.atlassian.net/wiki/spaces/PLQA/pages/47720266`|Source>\n2. <https://paramount.atlassian.net/wiki/spaces/PLQA/pages/47711460`|Source>\n3. <https://paramount.atlassian.net/wiki/spaces/PLQA/pages/47713566`|Source>","team":"T010QS7UQNA","bot_profile":{"id":"B099R6WTRU4","app_id":"A099LACAB2R","user_id":"U099R6WTZ9S","name":"AutoBot","icons":{"image_36":"https://a.slack-edge.com/80588/img/plugins/app/bot_36.png","image_48":"https://a.slack-edge.com/80588/img/plugins/app/bot_48.png","image_72":"https://a.slack-edge.com/80588/img/plugins/app/service_72.png"},"deleted":false,"updated":1754677948,"team_id":"T010QS7UQNA"},"thread_ts":"1755814128.589129","parent_user_id":"U01RMTFMALF","blocks":[{"type":"rich_text","block_id":"pBCuu","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"(part 2/2)","style":{"italic":true}},{"type":"text","text":"\n\nFor a local Android run, typical arguments include:\n    *   "},{"type":"text","text":"-Ddriver=android","style":{"code":true}},{"type":"text","text":"\n    *   "},{"type":"text","text":"-DplatformName=Android","style":{"code":true}},{"type":"text","text":"\n    *   "},{"type":"text","text":"-DplatformVersion=11.0","style":{"code":true}},{"type":"text","text":" (example version)\n    *   "},{"type":"text","text":"-DdeviceName=\"Google Pixel 2XL\"","style":{"code":true}},{"type":"text","text":" (example device name)\n    *   "},{"type":"text","text":"-Denvironment=local","style":{"code":true}},{"type":"text","text":"\n    *   "},{"type":"text","text":"-Dheadless=false","style":{"code":true}},{"type":"text","text":"\n    *   "},{"type":"text","text":"-Dapp=\"/pathToPackage/mobile-8.0.44-210804410-3.5.25-paramountPlus-playStore-release.apk\"","style":{"code":true}},{"type":"text","text":" (path to your application package)\n    *   "},{"type":"text","text":"-Dudid=set this if running on Real Mobile Device only","style":{"code":true}},{"type":"text","text":"\n    (Source: `"},{"type":"link","url":"https://paramount.atlassian.net/wiki/spaces/PLQA/pages/47711460`"},{"type":"text","text":")\n\n2. "},{"type":"text","text":"From ","style":{"bold":true}},{"type":"text","text":"TestNGSuiteConfig.xml","style":{"bold":true,"code":true}},{"type":"text","text":":\n    Navigate to the "},{"type":"text","text":"TestNGSuiteConfig.xml","style":{"code":true}},{"type":"text","text":" file, right-click, and select \"Run TestNGSuiteConfig.xml.\" Provide the necessary test case ID or tag name within the "},{"type":"text","text":"<include name=\"\" />","style":{"code":true}},{"type":"text","text":" section under "},{"type":"text","text":"<groups>","style":{"code":true}},{"type":"text","text":". For example:\n\n    "}]},{"type":"rich_text_preformatted","elements":[{"type":"text","text":"xml\n    <test verbose=\"1\" name=\"All Mobile Tests\" annotations=\"JDK\">\n        <groups>\n            <run>\n                <include name=\"Debug\"/>\n                <exclude name=\"Broken\"/>\n            </run>\n        </groups>\n    </test>\n    "}]},{"type":"rich_text_section","elements":[{"type":"text","text":"    (Source: `"},{"type":"link","url":"https://paramount.atlassian.net/wiki/spaces/PLQA/pages/47720266`"},{"type":"text","text":")\n\n────────────────────────────────────────\n"},{"type":"emoji","name":"books","unicode":"1f4da","style":{"bold":true}},{"type":"text","text":" Sources:","style":{"bold":true}},{"type":"text","text":"\n1. "},{"type":"link","url":"https://paramount.atlassian.net/wiki/spaces/PLQA/pages/47720266`","text":"Source"},{"type":"text","text":"\n2. "},{"type":"link","url":"https://paramount.atlassian.net/wiki/spaces/PLQA/pages/47711460`","text":"Source"},{"type":"text","text":"\n3. "},{"type":"link","url":"https://paramount.atlassian.net/wiki/spaces/PLQA/pages/47713566`","text":"Source"}]}]}]}}
2025-08-21 15:09:19,160 - __main__ - DEBUG - [main.py:574] - Cleaning up DM thread tracking...
2025-08-21 15:09:19,160 - utils - DEBUG - [utils.py:67] - Managing thread: D09A0LFHK8R:1755814128.589129, action: remove, user: U01RMTFMALF
2025-08-21 15:09:19,160 - utils - INFO - [utils.py:100] - Removed thread D09A0LFHK8R:1755814128.589129 from active tracking (remaining: 0)
2025-08-21 15:09:19,686 - slack_bolt.App - DEBUG - [client.py:235] - on_message invoked: (message: {"envelope_id":"6f9e0cc7-4e7a-4c39-b631-f941a9dfedae","payload":{"token":"yq71khZBCyJF1Ri2hG5aNqr5","team_id":"T010QS7UQNA","enterprise_id":"ERV4P7NAD","context_team_id":null,"context_enterprise_id":"ERV4P7NAD","api_app_id":"A099LACAB2R","event":{"user":"U099R6WTZ9S","type":"message","ts":"1755814158.688479","bot_id":"B099R6WTRU4","app_id":"A099LACAB2R","text":"*Your Question:*\n&gt; How can i run an automated test on a local Android phone? *Answer:*\nTo run an automated test on a local Android phone, you'll need to follow several steps, including setting up your environment, configuring test parameters, and executing the test. Here's a breakdown based on the provided documents:\n\n### Prerequisites &amp; Setup\n\n1. *Connect to VPN*: Ensure you are connected to the VPN. (Source: `<https:\/\/paramount.atlassian.net\/wiki\/spaces\/PLQA\/pages\/47720266`>)\n2. *Synergy Server*: Download the latest version of the Synergy server and run the `.jar` file (Websocket). (Source: `<https:\/\/paramount.atlassian.net\/wiki\/spaces\/PLQA\/pages\/47720266`>)\n3. *Appium Server*: If running a local test, the `SampleTest.java` indicates that the Appium server will be started if the environment is \"local\" and the driver is \"ios\" or \"android.\" (Source: `<https:\/\/paramount.atlassian.net\/wiki\/spaces\/PLQA\/pages\/47711460`>)\n4. *Android Emulator (if applicable)*: If you're using an Android Emulator, make sure your Run Configuration has the `$ANDROID_HOME` environment variable set and included in the path. (Source: `<https:\/\/paramount.atlassian.net\/wiki\/spaces\/PLQA\/pages\/47713566`>) The system can also launch an emulator if the environment is local and the driver is Android. (Source: `<https:\/\/paramount.atlassian.net\/wiki\/spaces\/PLQA\/pages\/47711460`>)\n\n### Configuration\n\nUpdate the desired capabilities in the `.config` file, located under the `mqe-hob-mobile-tests` directory. (Source: `<https:\/\/paramount.atlassian.net\/wiki\/spaces\/PLQA\/pages\/47720266`>)\n\nKey parameters to set include:\n\n*   *`Platform`*: Set to `ANDROID`. *   *`Locale`*: For domestic testing, use `en-us`. *   *`MobileDeviceCategory`*: Set to `PHONE`. *   *`DeviceStartOrientation`*: Set to `PORTRAIT`. *   *`DebugDeviceID`*: If running on a real mobile device, set this to the device's IP address (you can find this by typing `adb devices` in the terminal). This is not needed for Synergy. *   *`AppPackageUrl`*: This should be the URL of your build (uploaded build URL from file storage). *   *`AppBuildType`*: `DEBUG`. Other parameters such as `ServerURL`, `TestRailProjectId`, `TestRailMilestoneId`, `TestRailTestRunId`, `Environment`, `UseGeoVPN`, `AppPreInstalled`, `DebugProxyPort`, and `ClientID` may also need to be configured based on your specific setup. (Source: `<https:\/\/paramount.atlassian.net\/wiki\/spaces\/PLQA\/pages\/47720266`>)\n\n### Running the Test\n\nOnce the configuration is updated, you can run the test using one of the following methods:\n\n1. *From Terminal*:\n    Enter the following command in your IDE terminal window:\n    `mvn clean test -pl mqe-hob-mobile-tests -am -Dgroups=Your test case number or tag`\n    (Source: `<https:\/\/paramount.atlassian.net\/wiki\/spaces\/PLQA\/pages\/47720266`>)\n\n    You can also pass additional arguments directly in the maven command.\n\n_(message continued in thread...)_","team":"T010QS7UQNA","bot_profile":{"id":"B099R6WTRU4","deleted":false,"name":"AutoBot","updated":1754677948,"app_id":"A099LACAB2R","user_id":"U099R6WTZ9S","icons":{"image_36":"https:\/\/a.slack-edge.com\/80588\/img\/plugins\/app\/bot_36.png","image_48":"https:\/\/a.slack-edge.com\/80588\/img\/plugins\/app\/bot_48.png","image_72":"https:\/\/a.slack-edge.com\/80588\/img\/plugins\/app\/service_72.png"},"team_id":"T010QS7UQNA"},"thread_ts":"1755814128.589129","parent_user_id":"U01RMTFMALF","blocks":[{"type":"rich_text","block_id":"Lar","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Your Question:","style":{"bold":true}}]},{"type":"rich_text_quote","elements":[{"type":"text","text":"How can i run an automated test on a local Android phone? "},{"type":"text","text":"Answer:","style":{"bold":true}}]},{"type":"rich_text_section","elements":[{"type":"text","text":"To run an automated test on a local Android phone, you'll need to follow several steps, including setting up your environment, configuring test parameters, and executing the test. Here's a breakdown based on the provided documents:\n\n### Prerequisites & Setup\n\n1. "},{"type":"text","text":"Connect to VPN","style":{"bold":true}},{"type":"text","text":": Ensure you are connected to the VPN. (Source: `"},{"type":"link","url":"https:\/\/paramount.atlassian.net\/wiki\/spaces\/PLQA\/pages\/47720266`"},{"type":"text","text":")\n2. "},{"type":"text","text":"Synergy Server","style":{"bold":true}},{"type":"text","text":": Download the latest version of the Synergy server and run the "},{"type":"text","text":".jar","style":{"code":true}},{"type":"text","text":" file (Websocket). (Source: `"},{"type":"link","url":"https:\/\/paramount.atlassian.net\/wiki\/spaces\/PLQA\/pages\/47720266`"},{"type":"text","text":")\n3. "},{"type":"text","text":"Appium Server","style":{"bold":true}},{"type":"text","text":": If running a local test, the "},{"type":"text","text":"SampleTest.java","style":{"code":true}},{"type":"text","text":" indicates that the Appium server will be started if the environment is \"local\" and the driver is \"ios\" or \"android.\" (Source: `"},{"type":"link","url":"https:\/\/paramount.atlassian.net\/wiki\/spaces\/PLQA\/pages\/47711460`"},{"type":"text","text":")\n4. "},{"type":"text","text":"Android Emulator (if applicable)","style":{"bold":true}},{"type":"text","text":": If you're using an Android Emulator, make sure your Run Configuration has the "},{"type":"text","text":"$ANDROID_HOME","style":{"code":true}},{"type":"text","text":" environment variable set and included in the path. (Source: "},{"type":"link","url":"https:\/\/paramount.atlassian.net\/wiki\/spaces\/PLQA\/pages\/47713566`","style":{"code":true}},{"type":"text","text":") The system can also launch an emulator if the environment is local and the driver is Android. (Source: ","style":{"code":true}},{"type":"link","url":"https:\/\/paramount.atlassian.net\/wiki\/spaces\/PLQA\/pages\/47711460`"},{"type":"text","text":")\n\n### Configuration\n\nUpdate the desired capabilities in the "},{"type":"text","text":".config","style":{"code":true}},{"type":"text","text":" file, located under the "},{"type":"text","text":"mqe-hob-mobile-tests","style":{"code":true}},{"type":"text","text":" directory. (Source: `"},{"type":"link","url":"https:\/\/paramount.atlassian.net\/wiki\/spaces\/PLQA\/pages\/47720266`"},{"type":"text","text":")\n\nKey parameters to set include:\n\n*   "},{"type":"text","text":"Platform","style":{"bold":true,"code":true}},{"type":"text","text":": Set to "},{"type":"text","text":"ANDROID","style":{"code":true}},{"type":"text","text":". *   "},{"type":"text","text":"Locale","style":{"bold":true,"code":true}},{"type":"text","text":": For domestic testing, use "},{"type":"text","text":"en-us","style":{"code":true}},{"type":"text","text":". *   "},{"type":"text","text":"MobileDeviceCategory","style":{"bold":true,"code":true}},{"type":"text","text":": Set to "},{"type":"text","text":"PHONE","style":{"code":true}},{"type":"text","text":". *   "},{"type":"text","text":"DeviceStartOrientation","style":{"bold":true,"code":true}},{"type":"text","text":": Set to "},{"type":"text","text":"PORTRAIT","style":{"code":true}},{"type":"text","text":". *   "},{"type":"text","text":"DebugDeviceID","style":{"bold":true,"code":true}},{"type":"text","text":": If running on a real mobile device, set this to the device's IP address (you can find this by typing "},{"type":"text","text":"adb devices","style":{"code":true}},{"type":"text","text":" in the terminal). This is not needed for Synergy. *   "},{"type":"text","text":"AppPackageUrl","style":{"bold":true,"code":true}},{"type":"text","text":": This should be the URL of your build (uploaded build URL from file storage). *   "},{"type":"text","text":"AppBuildType","style":{"bold":true,"code":true}},{"type":"text","text":": "},{"type":"text","text":"DEBUG","style":{"code":true}},{"type":"text","text":". Other parameters such as "},{"type":"text","text":"ServerURL","style":{"code":true}},{"type":"text","text":", "},{"type":"text","text":"TestRailProjectId","style":{"code":true}},{"type":"text","text":", "},{"type":"text","text":"TestRailMilestoneId","style":{"code":true}},{"type":"text","text":", "},{"type":"text","text":"TestRailTestRunId","style":{"code":true}},{"type":"text","text":", "},{"type":"text","text":"Environment","style":{"code":true}},{"type":"text","text":", "},{"type":"text","text":"UseGeoVPN","style":{"code":true}},{"type":"text","text":", "},{"type":"text","text":"AppPreInstalled","style":{"code":true}},{"type":"text","text":", "},{"type":"text","text":"DebugProxyPort","style":{"code":true}},{"type":"text","text":", and "},{"type":"text","text":"ClientID","style":{"code":true}},{"type":"text","text":" may also need to be configured based on your specific setup. (Source: `"},{"type":"link","url":"https:\/\/paramount.atlassian.net\/wiki\/spaces\/PLQA\/pages\/47720266`"},{"type":"text","text":")\n\n### Running the Test\n\nOnce the configuration is updated, you can run the test using one of the following methods:\n\n1. "},{"type":"text","text":"From Terminal","style":{"bold":true}},{"type":"text","text":":\n    Enter the following command in your IDE terminal window:\n    "},{"type":"text","text":"mvn clean test -pl mqe-hob-mobile-tests -am -Dgroups=Your test case number or tag","style":{"code":true}},{"type":"text","text":"\n    (Source: `"},{"type":"link","url":"https:\/\/paramount.atlassian.net\/wiki\/spaces\/PLQA\/pages\/47720266`"},{"type":"text","text":")\n\n    You can also pass additional arguments directly in the maven command.\n\n"},{"type":"text","text":"(message continued in thread...)","style":{"italic":true}}]}]}],"channel":"D09A0LFHK8R","event_ts":"1755814158.688479","channel_type":"im"},"type":"event_callback","event_id":"Ev09BC6Z2XK5","event_time":1755814158,"authorizations":[{"enterprise_id":"ERV4P7NAD","team_id":"T010QS7UQNA","user_id":"U099R6WTZ9S","is_bot":true,"is_enterprise_install":false}],"is_ext_shared_channel":false,"event_context":"4-eyJldCI6Im1lc3NhZ2UiLCJ0aWQiOiJUMDEwUVM3VVFOQSIsImFpZCI6IkEwOTlMQUNBQjJSIiwiY2lkIjoiRDA5QTBMRkhLOFIifQ"},"type":"events_api","accepts_response_payload":false,"retry_attempt":0,"retry_reason":""})
2025-08-21 15:09:19,687 - slack_bolt.App - DEBUG - [client.py:99] - A new message enqueued (current queue size: 1)
2025-08-21 15:09:19,687 - slack_bolt.App - DEBUG - [client.py:105] - A message dequeued (current queue size: 0)
2025-08-21 15:09:19,688 - slack_bolt.App - DEBUG - [client.py:125] - Message processing started (type: events_api, envelope_id: 6f9e0cc7-4e7a-4c39-b631-f941a9dfedae)
2025-08-21 15:09:19,688 - slack_bolt.App - DEBUG - [app.py:476] - Applying slack_bolt.middleware.ssl_check.ssl_check.SslCheck
2025-08-21 15:09:19,688 - slack_bolt.App - DEBUG - [app.py:476] - Applying slack_bolt.middleware.request_verification.request_verification.RequestVerification
2025-08-21 15:09:19,688 - slack_bolt.App - DEBUG - [app.py:476] - Applying slack_bolt.middleware.authorization.single_team_authorization.SingleTeamAuthorization
2025-08-21 15:09:19,688 - slack_bolt.App - DEBUG - [app.py:476] - Applying slack_bolt.middleware.ignoring_self_events.ignoring_self_events.IgnoringSelfEvents
2025-08-21 15:09:19,689 - slack_bolt.IgnoringSelfEvents - DEBUG - [ignoring_self_events.py:60] - Skipped self event: {'user': 'U099R6WTZ9S', 'type': 'message', 'ts': '1755814158.688479', 'bot_id': 'B099R6WTRU4', 'app_id': 'A099LACAB2R', 'text': '*Your Question:*\n&gt; How can i run an automated test on a local Android phone? *Answer:*\nTo run an automated test on a local Android phone, you\'ll need to follow several steps, including setting up your environment, configuring test parameters, and executing the test. Here\'s a breakdown based on the provided documents:\n\n### Prerequisites &amp; Setup\n\n1. *Connect to VPN*: Ensure you are connected to the VPN. (Source: `<https://paramount.atlassian.net/wiki/spaces/PLQA/pages/47720266`>)\n2. *Synergy Server*: Download the latest version of the Synergy server and run the `.jar` file (Websocket). (Source: `<https://paramount.atlassian.net/wiki/spaces/PLQA/pages/47720266`>)\n3. *Appium Server*: If running a local test, the `SampleTest.java` indicates that the Appium server will be started if the environment is "local" and the driver is "ios" or "android." (Source: `<https://paramount.atlassian.net/wiki/spaces/PLQA/pages/47711460`>)\n4. *Android Emulator (if applicable)*: If you\'re using an Android Emulator, make sure your Run Configuration has the `$ANDROID_HOME` environment variable set and included in the path. (Source: `<https://paramount.atlassian.net/wiki/spaces/PLQA/pages/47713566`>) The system can also launch an emulator if the environment is local and the driver is Android. (Source: `<https://paramount.atlassian.net/wiki/spaces/PLQA/pages/47711460`>)\n\n### Configuration\n\nUpdate the desired capabilities in the `.config` file, located under the `mqe-hob-mobile-tests` directory. (Source: `<https://paramount.atlassian.net/wiki/spaces/PLQA/pages/47720266`>)\n\nKey parameters to set include:\n\n*   *`Platform`*: Set to `ANDROID`. *   *`Locale`*: For domestic testing, use `en-us`. *   *`MobileDeviceCategory`*: Set to `PHONE`. *   *`DeviceStartOrientation`*: Set to `PORTRAIT`. *   *`DebugDeviceID`*: If running on a real mobile device, set this to the device\'s IP address (you can find this by typing `adb devices` in the terminal). This is not needed for Synergy. *   *`AppPackageUrl`*: This should be the URL of your build (uploaded build URL from file storage). *   *`AppBuildType`*: `DEBUG`. Other parameters such as `ServerURL`, `TestRailProjectId`, `TestRailMilestoneId`, `TestRailTestRunId`, `Environment`, `UseGeoVPN`, `AppPreInstalled`, `DebugProxyPort`, and `ClientID` may also need to be configured based on your specific setup. (Source: `<https://paramount.atlassian.net/wiki/spaces/PLQA/pages/47720266`>)\n\n### Running the Test\n\nOnce the configuration is updated, you can run the test using one of the following methods:\n\n1. *From Terminal*:\n    Enter the following command in your IDE terminal window:\n    `mvn clean test -pl mqe-hob-mobile-tests -am -Dgroups=Your test case number or tag`\n    (Source: `<https://paramount.atlassian.net/wiki/spaces/PLQA/pages/47720266`>)\n\n    You can also pass additional arguments directly in the maven command.\n\n_(message continued in thread...)_', 'team': 'T010QS7UQNA', 'bot_profile': {'id': 'B099R6WTRU4', 'deleted': False, 'name': 'AutoBot', 'updated': 1754677948, 'app_id': 'A099LACAB2R', 'user_id': 'U099R6WTZ9S', 'icons': {'image_36': 'https://a.slack-edge.com/80588/img/plugins/app/bot_36.png', 'image_48': 'https://a.slack-edge.com/80588/img/plugins/app/bot_48.png', 'image_72': 'https://a.slack-edge.com/80588/img/plugins/app/service_72.png'}, 'team_id': 'T010QS7UQNA'}, 'thread_ts': '1755814128.589129', 'parent_user_id': 'U01RMTFMALF', 'blocks': [{'type': 'rich_text', 'block_id': 'Lar', 'elements': [{'type': 'rich_text_section', 'elements': [{'type': 'text', 'text': 'Your Question:', 'style': {'bold': True}}]}, {'type': 'rich_text_quote', 'elements': [{'type': 'text', 'text': 'How can i run an automated test on a local Android phone? '}, {'type': 'text', 'text': 'Answer:', 'style': {'bold': True}}]}, {'type': 'rich_text_section', 'elements': [{'type': 'text', 'text': "To run an automated test on a local Android phone, you'll need to follow several steps, including setting up your environment, configuring test parameters, and executing the test. Here's a breakdown based on the provided documents:\n\n### Prerequisites & Setup\n\n1. "}, {'type': 'text', 'text': 'Connect to VPN', 'style': {'bold': True}}, {'type': 'text', 'text': ': Ensure you are connected to the VPN. (Source: `'}, {'type': 'link', 'url': 'https://paramount.atlassian.net/wiki/spaces/PLQA/pages/47720266`'}, {'type': 'text', 'text': ')\n2. '}, {'type': 'text', 'text': 'Synergy Server', 'style': {'bold': True}}, {'type': 'text', 'text': ': Download the latest version of the Synergy server and run the '}, {'type': 'text', 'text': '.jar', 'style': {'code': True}}, {'type': 'text', 'text': ' file (Websocket). (Source: `'}, {'type': 'link', 'url': 'https://paramount.atlassian.net/wiki/spaces/PLQA/pages/47720266`'}, {'type': 'text', 'text': ')\n3. '}, {'type': 'text', 'text': 'Appium Server', 'style': {'bold': True}}, {'type': 'text', 'text': ': If running a local test, the '}, {'type': 'text', 'text': 'SampleTest.java', 'style': {'code': True}}, {'type': 'text', 'text': ' indicates that the Appium server will be started if the environment is "local" and the driver is "ios" or "android." (Source: `'}, {'type': 'link', 'url': 'https://paramount.atlassian.net/wiki/spaces/PLQA/pages/47711460`'}, {'type': 'text', 'text': ')\n4. '}, {'type': 'text', 'text': 'Android Emulator (if applicable)', 'style': {'bold': True}}, {'type': 'text', 'text': ": If you're using an Android Emulator, make sure your Run Configuration has the "}, {'type': 'text', 'text': '$ANDROID_HOME', 'style': {'code': True}}, {'type': 'text', 'text': ' environment variable set and included in the path. (Source: '}, {'type': 'link', 'url': 'https://paramount.atlassian.net/wiki/spaces/PLQA/pages/47713566`', 'style': {'code': True}}, {'type': 'text', 'text': ') The system can also launch an emulator if the environment is local and the driver is Android. (Source: ', 'style': {'code': True}}, {'type': 'link', 'url': 'https://paramount.atlassian.net/wiki/spaces/PLQA/pages/47711460`'}, {'type': 'text', 'text': ')\n\n### Configuration\n\nUpdate the desired capabilities in the '}, {'type': 'text', 'text': '.config', 'style': {'code': True}}, {'type': 'text', 'text': ' file, located under the '}, {'type': 'text', 'text': 'mqe-hob-mobile-tests', 'style': {'code': True}}, {'type': 'text', 'text': ' directory. (Source: `'}, {'type': 'link', 'url': 'https://paramount.atlassian.net/wiki/spaces/PLQA/pages/47720266`'}, {'type': 'text', 'text': ')\n\nKey parameters to set include:\n\n*   '}, {'type': 'text', 'text': 'Platform', 'style': {'bold': True, 'code': True}}, {'type': 'text', 'text': ': Set to '}, {'type': 'text', 'text': 'ANDROID', 'style': {'code': True}}, {'type': 'text', 'text': '. *   '}, {'type': 'text', 'text': 'Locale', 'style': {'bold': True, 'code': True}}, {'type': 'text', 'text': ': For domestic testing, use '}, {'type': 'text', 'text': 'en-us', 'style': {'code': True}}, {'type': 'text', 'text': '. *   '}, {'type': 'text', 'text': 'MobileDeviceCategory', 'style': {'bold': True, 'code': True}}, {'type': 'text', 'text': ': Set to '}, {'type': 'text', 'text': 'PHONE', 'style': {'code': True}}, {'type': 'text', 'text': '. *   '}, {'type': 'text', 'text': 'DeviceStartOrientation', 'style': {'bold': True, 'code': True}}, {'type': 'text', 'text': ': Set to '}, {'type': 'text', 'text': 'PORTRAIT', 'style': {'code': True}}, {'type': 'text', 'text': '. *   '}, {'type': 'text', 'text': 'DebugDeviceID', 'style': {'bold': True, 'code': True}}, {'type': 'text', 'text': ": If running on a real mobile device, set this to the device's IP address (you can find this by typing "}, {'type': 'text', 'text': 'adb devices', 'style': {'code': True}}, {'type': 'text', 'text': ' in the terminal). This is not needed for Synergy. *   '}, {'type': 'text', 'text': 'AppPackageUrl', 'style': {'bold': True, 'code': True}}, {'type': 'text', 'text': ': This should be the URL of your build (uploaded build URL from file storage). *   '}, {'type': 'text', 'text': 'AppBuildType', 'style': {'bold': True, 'code': True}}, {'type': 'text', 'text': ': '}, {'type': 'text', 'text': 'DEBUG', 'style': {'code': True}}, {'type': 'text', 'text': '. Other parameters such as '}, {'type': 'text', 'text': 'ServerURL', 'style': {'code': True}}, {'type': 'text', 'text': ', '}, {'type': 'text', 'text': 'TestRailProjectId', 'style': {'code': True}}, {'type': 'text', 'text': ', '}, {'type': 'text', 'text': 'TestRailMilestoneId', 'style': {'code': True}}, {'type': 'text', 'text': ', '}, {'type': 'text', 'text': 'TestRailTestRunId', 'style': {'code': True}}, {'type': 'text', 'text': ', '}, {'type': 'text', 'text': 'Environment', 'style': {'code': True}}, {'type': 'text', 'text': ', '}, {'type': 'text', 'text': 'UseGeoVPN', 'style': {'code': True}}, {'type': 'text', 'text': ', '}, {'type': 'text', 'text': 'AppPreInstalled', 'style': {'code': True}}, {'type': 'text', 'text': ', '}, {'type': 'text', 'text': 'DebugProxyPort', 'style': {'code': True}}, {'type': 'text', 'text': ', and '}, {'type': 'text', 'text': 'ClientID', 'style': {'code': True}}, {'type': 'text', 'text': ' may also need to be configured based on your specific setup. (Source: `'}, {'type': 'link', 'url': 'https://paramount.atlassian.net/wiki/spaces/PLQA/pages/47720266`'}, {'type': 'text', 'text': ')\n\n### Running the Test\n\nOnce the configuration is updated, you can run the test using one of the following methods:\n\n1. '}, {'type': 'text', 'text': 'From Terminal', 'style': {'bold': True}}, {'type': 'text', 'text': ':\n    Enter the following command in your IDE terminal window:\n    '}, {'type': 'text', 'text': 'mvn clean test -pl mqe-hob-mobile-tests -am -Dgroups=Your test case number or tag', 'style': {'code': True}}, {'type': 'text', 'text': '\n    (Source: `'}, {'type': 'link', 'url': 'https://paramount.atlassian.net/wiki/spaces/PLQA/pages/47720266`'}, {'type': 'text', 'text': ')\n\n    You can also pass additional arguments directly in the maven command.\n\n'}, {'type': 'text', 'text': '(message continued in thread...)', 'style': {'italic': True}}]}]}], 'channel': 'D09A0LFHK8R', 'event_ts': '1755814158.688479', 'channel_type': 'im'}
2025-08-21 15:09:19,689 - slack_bolt.App - DEBUG - [client.py:200] - Sending a message (session id: b6bcaf93-1cfa-4a61-8ab0-906934b1bde0, message: {"envelope_id": "6f9e0cc7-4e7a-4c39-b631-f941a9dfedae"})
2025-08-21 15:09:19,689 - slack_bolt.App - DEBUG - [internals.py:41] - Response time: 1 milliseconds
2025-08-21 15:09:19,690 - slack_bolt.App - DEBUG - [client.py:150] - Message processing completed (type: events_api, envelope_id: 6f9e0cc7-4e7a-4c39-b631-f941a9dfedae)
2025-08-21 15:09:20,429 - slack_bolt.App - DEBUG - [client.py:235] - on_message invoked: (message: {"envelope_id":"ad6bdc68-00e0-4290-b3bc-02a9ea81af56","payload":{"token":"yq71khZBCyJF1Ri2hG5aNqr5","team_id":"T010QS7UQNA","enterprise_id":"ERV4P7NAD","context_team_id":null,"context_enterprise_id":"ERV4P7NAD","api_app_id":"A099LACAB2R","event":{"user":"U099R6WTZ9S","type":"message","ts":"1755814159.123839","bot_id":"B099R6WTRU4","app_id":"A099LACAB2R","text":"_(part 2\/2)_\n\nFor a local Android run, typical arguments include:\n    *   `-Ddriver=android`\n    *   `-DplatformName=Android`\n    *   `-DplatformVersion=11.0` (example version)\n    *   `-DdeviceName=\"Google Pixel 2XL\"` (example device name)\n    *   `-Denvironment=local`\n    *   `-Dheadless=false`\n    *   `-Dapp=\"\/pathToPackage\/mobile-8.0.44-210804410-3.5.25-paramountPlus-playStore-release.apk\"` (path to your application package)\n    *   `-Dudid=set this if running on Real Mobile Device only`\n    (Source: `<https:\/\/paramount.atlassian.net\/wiki\/spaces\/PLQA\/pages\/47711460`>)\n\n2. *From `TestNGSuiteConfig.xml`*:\n    Navigate to the `TestNGSuiteConfig.xml` file, right-click, and select \"Run TestNGSuiteConfig.xml.\" Provide the necessary test case ID or tag name within the `&lt;include name=\"\" \/&gt;` section under `&lt;groups&gt;`. For example:\n\n    ```xml\n    &lt;test verbose=\"1\" name=\"All Mobile Tests\" annotations=\"JDK\"&gt;\n        &lt;groups&gt;\n            &lt;run&gt;\n                &lt;include name=\"Debug\"\/&gt;\n                &lt;exclude name=\"Broken\"\/&gt;\n            &lt;\/run&gt;\n        &lt;\/groups&gt;\n    &lt;\/test&gt;\n    ```\n    (Source: `<https:\/\/paramount.atlassian.net\/wiki\/spaces\/PLQA\/pages\/47720266`>)\n\n\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\n*:books: Sources:*\n1. <https:\/\/paramount.atlassian.net\/wiki\/spaces\/PLQA\/pages\/47720266`|Source>\n2. <https:\/\/paramount.atlassian.net\/wiki\/spaces\/PLQA\/pages\/47711460`|Source>\n3. <https:\/\/paramount.atlassian.net\/wiki\/spaces\/PLQA\/pages\/47713566`|Source>","team":"T010QS7UQNA","bot_profile":{"id":"B099R6WTRU4","deleted":false,"name":"AutoBot","updated":1754677948,"app_id":"A099LACAB2R","user_id":"U099R6WTZ9S","icons":{"image_36":"https:\/\/a.slack-edge.com\/80588\/img\/plugins\/app\/bot_36.png","image_48":"https:\/\/a.slack-edge.com\/80588\/img\/plugins\/app\/bot_48.png","image_72":"https:\/\/a.slack-edge.com\/80588\/img\/plugins\/app\/service_72.png"},"team_id":"T010QS7UQNA"},"thread_ts":"1755814128.589129","parent_user_id":"U01RMTFMALF","blocks":[{"type":"rich_text","block_id":"7a01","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"(part 2\/2)","style":{"italic":true}},{"type":"text","text":"\n\nFor a local Android run, typical arguments include:\n    *   "},{"type":"text","text":"-Ddriver=android","style":{"code":true}},{"type":"text","text":"\n    *   "},{"type":"text","text":"-DplatformName=Android","style":{"code":true}},{"type":"text","text":"\n    *   "},{"type":"text","text":"-DplatformVersion=11.0","style":{"code":true}},{"type":"text","text":" (example version)\n    *   "},{"type":"text","text":"-DdeviceName=\"Google Pixel 2XL\"","style":{"code":true}},{"type":"text","text":" (example device name)\n    *   "},{"type":"text","text":"-Denvironment=local","style":{"code":true}},{"type":"text","text":"\n    *   "},{"type":"text","text":"-Dheadless=false","style":{"code":true}},{"type":"text","text":"\n    *   "},{"type":"text","text":"-Dapp=\"\/pathToPackage\/mobile-8.0.44-210804410-3.5.25-paramountPlus-playStore-release.apk\"","style":{"code":true}},{"type":"text","text":" (path to your application package)\n    *   "},{"type":"text","text":"-Dudid=set this if running on Real Mobile Device only","style":{"code":true}},{"type":"text","text":"\n    (Source: `"},{"type":"link","url":"https:\/\/paramount.atlassian.net\/wiki\/spaces\/PLQA\/pages\/47711460`"},{"type":"text","text":")\n\n2. "},{"type":"text","text":"From ","style":{"bold":true}},{"type":"text","text":"TestNGSuiteConfig.xml","style":{"bold":true,"code":true}},{"type":"text","text":":\n    Navigate to the "},{"type":"text","text":"TestNGSuiteConfig.xml","style":{"code":true}},{"type":"text","text":" file, right-click, and select \"Run TestNGSuiteConfig.xml.\" Provide the necessary test case ID or tag name within the "},{"type":"text","text":"<include name=\"\" \/>","style":{"code":true}},{"type":"text","text":" section under "},{"type":"text","text":"<groups>","style":{"code":true}},{"type":"text","text":". For example:\n\n    "}]},{"type":"rich_text_preformatted","elements":[{"type":"text","text":"xml\n    <test verbose=\"1\" name=\"All Mobile Tests\" annotations=\"JDK\">\n        <groups>\n            <run>\n                <include name=\"Debug\"\/>\n                <exclude name=\"Broken\"\/>\n            <\/run>\n        <\/groups>\n    <\/test>\n    "}]},{"type":"rich_text_section","elements":[{"type":"text","text":"    (Source: `"},{"type":"link","url":"https:\/\/paramount.atlassian.net\/wiki\/spaces\/PLQA\/pages\/47720266`"},{"type":"text","text":")\n\n\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\n"},{"type":"emoji","name":"books","unicode":"1f4da","style":{"bold":true}},{"type":"text","text":" Sources:","style":{"bold":true}},{"type":"text","text":"\n1. "},{"type":"link","url":"https:\/\/paramount.atlassian.net\/wiki\/spaces\/PLQA\/pages\/47720266`","text":"Source"},{"type":"text","text":"\n2. "},{"type":"link","url":"https:\/\/paramount.atlassian.net\/wiki\/spaces\/PLQA\/pages\/47711460`","text":"Source"},{"type":"text","text":"\n3. "},{"type":"link","url":"https:\/\/paramount.atlassian.net\/wiki\/spaces\/PLQA\/pages\/47713566`","text":"Source"}]}]}],"channel":"D09A0LFHK8R","event_ts":"1755814159.123839","channel_type":"im"},"type":"event_callback","event_id":"Ev09BH5K3GSW","event_time":1755814159,"authorizations":[{"enterprise_id":"ERV4P7NAD","team_id":"T010QS7UQNA","user_id":"U099R6WTZ9S","is_bot":true,"is_enterprise_install":false}],"is_ext_shared_channel":false,"event_context":"4-eyJldCI6Im1lc3NhZ2UiLCJ0aWQiOiJUMDEwUVM3VVFOQSIsImFpZCI6IkEwOTlMQUNBQjJSIiwiY2lkIjoiRDA5QTBMRkhLOFIifQ"},"type":"events_api","accepts_response_payload":false,"retry_attempt":0,"retry_reason":""})
2025-08-21 15:09:20,431 - slack_bolt.App - DEBUG - [client.py:99] - A new message enqueued (current queue size: 1)
2025-08-21 15:09:20,431 - slack_bolt.App - DEBUG - [client.py:105] - A message dequeued (current queue size: 0)
2025-08-21 15:09:20,431 - slack_bolt.App - DEBUG - [client.py:125] - Message processing started (type: events_api, envelope_id: ad6bdc68-00e0-4290-b3bc-02a9ea81af56)
2025-08-21 15:09:20,431 - slack_bolt.App - DEBUG - [app.py:476] - Applying slack_bolt.middleware.ssl_check.ssl_check.SslCheck
2025-08-21 15:09:20,432 - slack_bolt.App - DEBUG - [app.py:476] - Applying slack_bolt.middleware.request_verification.request_verification.RequestVerification
2025-08-21 15:09:20,432 - slack_bolt.App - DEBUG - [app.py:476] - Applying slack_bolt.middleware.authorization.single_team_authorization.SingleTeamAuthorization
2025-08-21 15:09:20,432 - slack_bolt.App - DEBUG - [app.py:476] - Applying slack_bolt.middleware.ignoring_self_events.ignoring_self_events.IgnoringSelfEvents
2025-08-21 15:09:20,432 - slack_bolt.IgnoringSelfEvents - DEBUG - [ignoring_self_events.py:60] - Skipped self event: {'user': 'U099R6WTZ9S', 'type': 'message', 'ts': '1755814159.123839', 'bot_id': 'B099R6WTRU4', 'app_id': 'A099LACAB2R', 'text': '_(part 2/2)_\n\nFor a local Android run, typical arguments include:\n    *   `-Ddriver=android`\n    *   `-DplatformName=Android`\n    *   `-DplatformVersion=11.0` (example version)\n    *   `-DdeviceName="Google Pixel 2XL"` (example device name)\n    *   `-Denvironment=local`\n    *   `-Dheadless=false`\n    *   `-Dapp="/pathToPackage/mobile-8.0.44-210804410-3.5.25-paramountPlus-playStore-release.apk"` (path to your application package)\n    *   `-Dudid=set this if running on Real Mobile Device only`\n    (Source: `<https://paramount.atlassian.net/wiki/spaces/PLQA/pages/47711460`>)\n\n2. *From `TestNGSuiteConfig.xml`*:\n    Navigate to the `TestNGSuiteConfig.xml` file, right-click, and select "Run TestNGSuiteConfig.xml." Provide the necessary test case ID or tag name within the `&lt;include name="" /&gt;` section under `&lt;groups&gt;`. For example:\n\n    ```xml\n    &lt;test verbose="1" name="All Mobile Tests" annotations="JDK"&gt;\n        &lt;groups&gt;\n            &lt;run&gt;\n                &lt;include name="Debug"/&gt;\n                &lt;exclude name="Broken"/&gt;\n            &lt;/run&gt;\n        &lt;/groups&gt;\n    &lt;/test&gt;\n    ```\n    (Source: `<https://paramount.atlassian.net/wiki/spaces/PLQA/pages/47720266`>)\n\n────────────────────────────────────────\n*:books: Sources:*\n1. <https://paramount.atlassian.net/wiki/spaces/PLQA/pages/47720266`|Source>\n2. <https://paramount.atlassian.net/wiki/spaces/PLQA/pages/47711460`|Source>\n3. <https://paramount.atlassian.net/wiki/spaces/PLQA/pages/47713566`|Source>', 'team': 'T010QS7UQNA', 'bot_profile': {'id': 'B099R6WTRU4', 'deleted': False, 'name': 'AutoBot', 'updated': 1754677948, 'app_id': 'A099LACAB2R', 'user_id': 'U099R6WTZ9S', 'icons': {'image_36': 'https://a.slack-edge.com/80588/img/plugins/app/bot_36.png', 'image_48': 'https://a.slack-edge.com/80588/img/plugins/app/bot_48.png', 'image_72': 'https://a.slack-edge.com/80588/img/plugins/app/service_72.png'}, 'team_id': 'T010QS7UQNA'}, 'thread_ts': '1755814128.589129', 'parent_user_id': 'U01RMTFMALF', 'blocks': [{'type': 'rich_text', 'block_id': '7a01', 'elements': [{'type': 'rich_text_section', 'elements': [{'type': 'text', 'text': '(part 2/2)', 'style': {'italic': True}}, {'type': 'text', 'text': '\n\nFor a local Android run, typical arguments include:\n    *   '}, {'type': 'text', 'text': '-Ddriver=android', 'style': {'code': True}}, {'type': 'text', 'text': '\n    *   '}, {'type': 'text', 'text': '-DplatformName=Android', 'style': {'code': True}}, {'type': 'text', 'text': '\n    *   '}, {'type': 'text', 'text': '-DplatformVersion=11.0', 'style': {'code': True}}, {'type': 'text', 'text': ' (example version)\n    *   '}, {'type': 'text', 'text': '-DdeviceName="Google Pixel 2XL"', 'style': {'code': True}}, {'type': 'text', 'text': ' (example device name)\n    *   '}, {'type': 'text', 'text': '-Denvironment=local', 'style': {'code': True}}, {'type': 'text', 'text': '\n    *   '}, {'type': 'text', 'text': '-Dheadless=false', 'style': {'code': True}}, {'type': 'text', 'text': '\n    *   '}, {'type': 'text', 'text': '-Dapp="/pathToPackage/mobile-8.0.44-210804410-3.5.25-paramountPlus-playStore-release.apk"', 'style': {'code': True}}, {'type': 'text', 'text': ' (path to your application package)\n    *   '}, {'type': 'text', 'text': '-Dudid=set this if running on Real Mobile Device only', 'style': {'code': True}}, {'type': 'text', 'text': '\n    (Source: `'}, {'type': 'link', 'url': 'https://paramount.atlassian.net/wiki/spaces/PLQA/pages/47711460`'}, {'type': 'text', 'text': ')\n\n2. '}, {'type': 'text', 'text': 'From ', 'style': {'bold': True}}, {'type': 'text', 'text': 'TestNGSuiteConfig.xml', 'style': {'bold': True, 'code': True}}, {'type': 'text', 'text': ':\n    Navigate to the '}, {'type': 'text', 'text': 'TestNGSuiteConfig.xml', 'style': {'code': True}}, {'type': 'text', 'text': ' file, right-click, and select "Run TestNGSuiteConfig.xml." Provide the necessary test case ID or tag name within the '}, {'type': 'text', 'text': '<include name="" />', 'style': {'code': True}}, {'type': 'text', 'text': ' section under '}, {'type': 'text', 'text': '<groups>', 'style': {'code': True}}, {'type': 'text', 'text': '. For example:\n\n    '}]}, {'type': 'rich_text_preformatted', 'elements': [{'type': 'text', 'text': 'xml\n    <test verbose="1" name="All Mobile Tests" annotations="JDK">\n        <groups>\n            <run>\n                <include name="Debug"/>\n                <exclude name="Broken"/>\n            </run>\n        </groups>\n    </test>\n    '}]}, {'type': 'rich_text_section', 'elements': [{'type': 'text', 'text': '    (Source: `'}, {'type': 'link', 'url': 'https://paramount.atlassian.net/wiki/spaces/PLQA/pages/47720266`'}, {'type': 'text', 'text': ')\n\n────────────────────────────────────────\n'}, {'type': 'emoji', 'name': 'books', 'unicode': '1f4da', 'style': {'bold': True}}, {'type': 'text', 'text': ' Sources:', 'style': {'bold': True}}, {'type': 'text', 'text': '\n1. '}, {'type': 'link', 'url': 'https://paramount.atlassian.net/wiki/spaces/PLQA/pages/47720266`', 'text': 'Source'}, {'type': 'text', 'text': '\n2. '}, {'type': 'link', 'url': 'https://paramount.atlassian.net/wiki/spaces/PLQA/pages/47711460`', 'text': 'Source'}, {'type': 'text', 'text': '\n3. '}, {'type': 'link', 'url': 'https://paramount.atlassian.net/wiki/spaces/PLQA/pages/47713566`', 'text': 'Source'}]}]}], 'channel': 'D09A0LFHK8R', 'event_ts': '1755814159.123839', 'channel_type': 'im'}
2025-08-21 15:09:20,432 - slack_bolt.App - DEBUG - [client.py:200] - Sending a message (session id: b6bcaf93-1cfa-4a61-8ab0-906934b1bde0, message: {"envelope_id": "ad6bdc68-00e0-4290-b3bc-02a9ea81af56"})
2025-08-21 15:09:20,433 - slack_bolt.App - DEBUG - [internals.py:41] - Response time: 1 milliseconds
2025-08-21 15:09:20,433 - slack_bolt.App - DEBUG - [client.py:150] - Message processing completed (type: events_api, envelope_id: ad6bdc68-00e0-4290-b3bc-02a9ea81af56)
2025-08-21 20:06:55,836 - slack_bolt.App - INFO - [connection.py:273] - The connection seems to be stale. Disconnecting... (session id: ad770a8a-86ee-454e-b08e-62523d79a28f, reason: disconnected for 34129+ seconds)
2025-08-22 13:58:26,802 - __main__ - INFO - [main.py:43] - Loading application configuration...
2025-08-22 13:58:26,802 - __main__ - INFO - [main.py:45] - Configuration loaded successfully
2025-08-22 13:58:26,802 - __main__ - INFO - [main.py:48] - Initializing security components...
2025-08-22 13:58:26,802 - __main__ - DEBUG - [main.py:50] - Slack validator initialized
2025-08-22 13:58:26,802 - security.content_filter - INFO - [content_filter.py:39] - Content filter initialized with 11 patterns
2025-08-22 13:58:26,802 - __main__ - DEBUG - [main.py:53] - Content filter initialized
2025-08-22 13:58:26,802 - auth.admin_manager - INFO - [admin_manager.py:27] - Admin manager initialized with 2 admin users
2025-08-22 13:58:26,802 - __main__ - DEBUG - [main.py:56] - Admin manager initialized
2025-08-22 13:58:26,802 - auth.email_whitelist - INFO - [email_whitelist.py:28] - Email whitelist initialized with 1 whitelisted emails
2025-08-22 13:58:26,802 - auth.email_whitelist - INFO - [email_whitelist.py:37] - Whitelisted domains: paramount.com
2025-08-22 13:58:26,802 - __main__ - DEBUG - [main.py:59] - Email whitelist initialized with 1 emails
2025-08-22 13:58:26,802 - auth.slack_user_info - DEBUG - [slack_user_info.py:25] - Slack user info manager initialized
2025-08-22 13:58:26,802 - __main__ - DEBUG - [main.py:62] - Slack user info manager initialized
2025-08-22 13:58:26,802 - __main__ - INFO - [main.py:63] - Security components initialized successfully
2025-08-22 13:58:26,802 - __main__ - INFO - [main.py:66] - Initializing Slack app...
2025-08-22 13:58:26,839 - slack_bolt.App - DEBUG - [base_client.py:255] - Sending a request - url: https://slack.com/api/auth.test, query_params: {}, body_params: {}, files: {}, json_body: None, headers: {'Content-Type': 'application/x-www-form-urlencoded', 'Authorization': '(redacted)', 'User-Agent': 'Bolt/1.16.0 Python/3.12.0 slackclient/3.34.0 Darwin/23.4.0'}
2025-08-22 13:58:27,208 - slack_bolt.App - DEBUG - [base_client.py:546] - Received the following response - status: 200, headers: {'date': 'Fri, 22 Aug 2025 20:58:27 GMT', 'server': 'Apache', 'vary': 'Accept-Encoding', 'x-slack-req-id': 'd9d96d52628083f23e7dc5a6972fb263', 'x-content-type-options': 'nosniff', 'x-xss-protection': '0', 'pragma': 'no-cache', 'cache-control': 'private, no-cache, no-store, must-revalidate', 'expires': 'Sat, 26 Jul 1997 05:00:00 GMT', 'content-type': 'application/json; charset=utf-8', 'x-oauth-scopes': 'app_mentions:read,channels:history,chat:write,im:history,im:read,im:write,users:read,reactions:write,users:read.email', 'access-control-expose-headers': 'x-slack-req-id, retry-after', 'access-control-allow-headers': 'slack-route, x-slack-version-ts, x-b3-traceid, x-b3-spanid, x-b3-parentspanid, x-b3-sampled, x-b3-flags', 'strict-transport-security': 'max-age=31536000; includeSubDomains; preload', 'referrer-policy': 'no-referrer', 'x-slack-unique-id': 'aKjZ88Pg8FblzceGoneI3AAAABU', 'x-slack-backend': 'r', 'access-control-allow-origin': '*', 'content-length': '228', 'via': '1.1 slack-prod.tinyspeck.com, envoy-www-iad-bytbpyfy,envoy-edge-pdx-ggtjadkz', 'x-envoy-attempt-count': '1', 'x-envoy-upstream-service-time': '109', 'x-backend': 'main_normal main_canary_with_overflow main_control_with_overflow', 'x-server': 'slack-www-hhvm-canary-main-iad-aqur', 'x-slack-shared-secret-outcome': 'no-match', 'x-edge-backend': 'envoy-www', 'timing-allow-origin': '*', 'x-slack-edge-shared-secret-outcome': 'no-match', 'connection': 'close'}, body: {"ok":true,"url":"https://viacomcbs-grid-test.slack.com/","team":"Test Workspace","user":"autobot","team_id":"T010QS7UQNA","user_id":"U099R6WTZ9S","bot_id":"B099R6WTRU4","enterprise_id":"ERV4P7NAD","is_enterprise_install":false}
2025-08-22 13:58:27,209 - __main__ - INFO - [main.py:68] - Slack app initialized successfully
2025-08-22 13:58:27,210 - __main__ - DEBUG - [main.py:72] - Message deduplication cache initialized
2025-08-22 13:58:27,210 - __main__ - DEBUG - [main.py:77] - Thread tracking initialized
2025-08-22 13:58:27,210 - __main__ - INFO - [main.py:80] - Initializing DIG AI integration...
2025-08-22 13:58:27,210 - dig_connector - INFO - [dig_connector.py:284] - Initializing DIG AI with model ID: 42
2025-08-22 13:58:27,211 - dig_connector - INFO - [dig_connector.py:49] - Starting DIG chat session initialization...
2025-08-22 13:58:27,211 - dig_connector - DEBUG - [dig_connector.py:52] - Creating chat with name: Slack Bot Session 2025-08-22T20:58:27.211193+00:00
2025-08-22 13:58:27,211 - dig_connector - DEBUG - [dig_connector.py:63] - Creating chat - URL: https://ai.digdev.cbsicloud.com/fastapi/chats, Payload: {'chat_nm': 'Slack Bot Session 2025-08-22T20:58:27.211193+00:00', 'model_id': 42}
2025-08-22 13:58:27,217 - urllib3.connectionpool - DEBUG - [connectionpool.py:1055] - Starting new HTTPS connection (1): ai.digdev.cbsicloud.com:443
2025-08-22 13:58:27,479 - urllib3.connectionpool - DEBUG - [connectionpool.py:549] - https://ai.digdev.cbsicloud.com:443 "POST /fastapi/chats HTTP/1.1" 200 217
2025-08-22 13:58:27,480 - dig_connector - DEBUG - [dig_connector.py:66] - Create chat response: status=200
2025-08-22 13:58:27,480 - dig_connector - INFO - [dig_connector.py:54] - Successfully initialized DIG chat session with ID: 883
2025-08-22 13:58:27,481 - __main__ - INFO - [main.py:83] - DIG AI integration successfully initialized
2025-08-22 13:58:27,481 - __main__ - INFO - [main.py:87] - Setting up event handlers...
2025-08-22 13:58:27,482 - __main__ - INFO - [main.py:680] - Starting AI Assistant Bot...
2025-08-22 13:58:27,482 - __main__ - INFO - [main.py:681] - Registering event handlers...
2025-08-22 13:58:27,482 - __main__ - DEBUG - [main.py:682] - Event handlers registered: app_mention, message, app_home_opened
2025-08-22 13:58:27,482 - __main__ - INFO - [main.py:685] - Connecting to Slack via Socket Mode...
2025-08-22 13:58:27,483 - __main__ - INFO - [main.py:689] - Socket Mode handler created successfully
2025-08-22 13:58:27,483 - __main__ - INFO - [main.py:691] - ✅ Bot is now running and listening for events!
2025-08-22 13:58:27,483 - slack_bolt.App - DEBUG - [base_client.py:255] - Sending a request - url: https://slack.com/api/apps.connections.open, query_params: {}, body_params: {}, files: {}, json_body: None, headers: {'Content-Type': 'application/x-www-form-urlencoded', 'Authorization': '(redacted)', 'User-Agent': 'Bolt/1.16.0 Python/3.12.0 slackclient/3.34.0 Darwin/23.4.0'}
2025-08-22 13:58:27,786 - slack_bolt.App - DEBUG - [base_client.py:546] - Received the following response - status: 200, headers: {'date': 'Fri, 22 Aug 2025 20:58:27 GMT', 'server': 'Apache', 'vary': 'Accept-Encoding', 'x-slack-req-id': 'c26a20dd71084274d508dda0933bb04c', 'x-content-type-options': 'nosniff', 'x-xss-protection': '0', 'x-robots-tag': 'noindex,nofollow', 'pragma': 'no-cache', 'cache-control': 'private, no-cache, no-store, must-revalidate', 'expires': 'Sat, 26 Jul 1997 05:00:00 GMT', 'content-type': 'application/json; charset=utf-8', 'x-accepted-oauth-scopes': 'connections:write', 'x-oauth-scopes': 'connections:write', 'access-control-expose-headers': 'x-slack-req-id, retry-after', 'access-control-allow-headers': 'slack-route, x-slack-version-ts, x-b3-traceid, x-b3-spanid, x-b3-parentspanid, x-b3-sampled, x-b3-flags', 'strict-transport-security': 'max-age=31536000; includeSubDomains; preload', 'referrer-policy': 'no-referrer', 'x-slack-unique-id': 'aKjZ80k0oAiRzKZlQORgrQAAEBM', 'x-slack-backend': 'r', 'access-control-allow-origin': '*', 'content-length': '173', 'via': '1.1 slack-prod.tinyspeck.com, envoy-www-iad-zvaybvjt,envoy-edge-pdx-dpuxhpse', 'x-envoy-attempt-count': '1', 'x-envoy-upstream-service-time': '84', 'x-backend': 'main_normal main_canary_with_overflow main_control_with_overflow', 'x-server': 'slack-www-hhvm-control-main-iad-bkfr', 'x-slack-shared-secret-outcome': 'no-match', 'x-edge-backend': 'envoy-www', 'timing-allow-origin': '*', 'x-slack-edge-shared-secret-outcome': 'no-match', 'connection': 'close'}, body: {"ok":true,"url":"wss:\/\/wss-primary.slack.com\/link\/?ticket=60f1f1c9-13d0-4dee-b05e-e056f8174c0b&app_id=a6c8d361ee1c6f398c5b4afec831555b78d7affa753b16bcc0fc64d7c13f3766"}
2025-08-22 13:58:28,287 - slack_bolt.App - INFO - [client.py:192] - A new session has been established (session id: e3fa3470-3631-40f6-94b2-522059b3b72b)
2025-08-22 13:58:28,288 - slack_bolt.App - INFO - [base_handler.py:50] - ⚡️ Bolt app is running!
2025-08-22 13:58:28,312 - slack_bolt.App - INFO - [client.py:265] - Starting to receive messages from a new connection (session id: e3fa3470-3631-40f6-94b2-522059b3b72b)
2025-08-22 13:58:28,313 - slack_bolt.App - DEBUG - [client.py:235] - on_message invoked: (message: {"type":"hello","num_connections":1,"debug_info":{"host":"applink-0","build_number":0,"approximate_connection_time":18060},"connection_info":{"app_id":"A099LACAB2R"}})
2025-08-22 13:58:28,313 - slack_bolt.App - DEBUG - [client.py:99] - A new message enqueued (current queue size: 1)
2025-08-22 13:58:28,313 - slack_bolt.App - DEBUG - [client.py:105] - A message dequeued (current queue size: 0)
2025-08-22 13:58:28,314 - slack_bolt.App - DEBUG - [client.py:125] - Message processing started (type: hello, envelope_id: None)
2025-08-22 13:58:28,314 - slack_bolt.App - DEBUG - [client.py:150] - Message processing completed (type: hello, envelope_id: None)
2025-08-22 13:59:08,505 - slack_bolt.App - DEBUG - [client.py:235] - on_message invoked: (message: {"envelope_id":"e330d3a3-a7c8-4bdf-b127-4f5753a9506b","payload":{"token":"yq71khZBCyJF1Ri2hG5aNqr5","team_id":"T010QS7UQNA","enterprise_id":"ERV4P7NAD","context_team_id":null,"context_enterprise_id":"ERV4P7NAD","api_app_id":"A099LACAB2R","event":{"user":"U01RMTFMALF","type":"message","ts":"1755896347.270769","client_msg_id":"29df5121-5062-4df0-80dd-23ccc7c942a1","text":"Give me an example question that i can ask you to test connectivity to Confluence","blocks":[{"type":"rich_text","block_id":"ws54m","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Give me an example question that i can ask you to test connectivity to Confluence"}]}]}],"channel":"D09A0LFHK8R","event_ts":"1755896347.270769","channel_type":"im"},"type":"event_callback","event_id":"Ev09CGH94RRN","event_time":1755896347,"authorizations":[{"enterprise_id":"ERV4P7NAD","team_id":"T010QS7UQNA","user_id":"U099R6WTZ9S","is_bot":true,"is_enterprise_install":false}],"is_ext_shared_channel":false,"event_context":"4-eyJldCI6Im1lc3NhZ2UiLCJ0aWQiOiJUMDEwUVM3VVFOQSIsImFpZCI6IkEwOTlMQUNBQjJSIiwiY2lkIjoiRDA5QTBMRkhLOFIifQ"},"type":"events_api","accepts_response_payload":false,"retry_attempt":0,"retry_reason":""})
2025-08-22 13:59:08,505 - slack_bolt.App - DEBUG - [client.py:99] - A new message enqueued (current queue size: 1)
2025-08-22 13:59:08,506 - slack_bolt.App - DEBUG - [client.py:105] - A message dequeued (current queue size: 0)
2025-08-22 13:59:08,506 - slack_bolt.App - DEBUG - [client.py:125] - Message processing started (type: events_api, envelope_id: e330d3a3-a7c8-4bdf-b127-4f5753a9506b)
2025-08-22 13:59:08,507 - slack_bolt.App - DEBUG - [app.py:476] - Applying slack_bolt.middleware.ssl_check.ssl_check.SslCheck
2025-08-22 13:59:08,507 - slack_bolt.App - DEBUG - [app.py:476] - Applying slack_bolt.middleware.request_verification.request_verification.RequestVerification
2025-08-22 13:59:08,507 - slack_bolt.App - DEBUG - [app.py:476] - Applying slack_bolt.middleware.authorization.single_team_authorization.SingleTeamAuthorization
2025-08-22 13:59:08,508 - slack_bolt.App - DEBUG - [app.py:476] - Applying slack_bolt.middleware.ignoring_self_events.ignoring_self_events.IgnoringSelfEvents
2025-08-22 13:59:08,508 - slack_bolt.App - DEBUG - [app.py:476] - Applying slack_bolt.middleware.url_verification.url_verification.UrlVerification
2025-08-22 13:59:08,508 - slack_bolt.App - DEBUG - [app.py:500] - Checking listener: handle_app_mentions ...
2025-08-22 13:59:08,508 - slack_bolt.App - DEBUG - [app.py:500] - Checking listener: help_message ...
2025-08-22 13:59:08,508 - slack_bolt.App - DEBUG - [app.py:500] - Checking listener: handle_dm_messages ...
2025-08-22 13:59:08,509 - slack_bolt.App - DEBUG - [app.py:522] - Running listener: handle_dm_messages ...
2025-08-22 13:59:08,509 - __main__ - INFO - [main.py:430] - === DM MESSAGE EVENT RECEIVED ===
2025-08-22 13:59:08,509 - slack_bolt.App - DEBUG - [thread_runner.py:198] - Responding with status: 200 body: "" (0 millis)
2025-08-22 13:59:08,509 - __main__ - DEBUG - [main.py:431] - Full event body: {'token': 'yq71khZBCyJF1Ri2hG5aNqr5', 'team_id': 'T010QS7UQNA', 'enterprise_id': 'ERV4P7NAD', 'context_team_id': None, 'context_enterprise_id': 'ERV4P7NAD', 'api_app_id': 'A099LACAB2R', 'event': {'user': 'U01RMTFMALF', 'type': 'message', 'ts': '1755896347.270769', 'client_msg_id': '29df5121-5062-4df0-80dd-23ccc7c942a1', 'text': 'Give me an example question that i can ask you to test connectivity to Confluence', 'blocks': [{'type': 'rich_text', 'block_id': 'ws54m', 'elements': [{'type': 'rich_text_section', 'elements': [{'type': 'text', 'text': 'Give me an example question that i can ask you to test connectivity to Confluence'}]}]}], 'channel': 'D09A0LFHK8R', 'event_ts': '1755896347.270769', 'channel_type': 'im'}, 'type': 'event_callback', 'event_id': 'Ev09CGH94RRN', 'event_time': 1755896347, 'authorizations': [{'enterprise_id': 'ERV4P7NAD', 'team_id': 'T010QS7UQNA', 'user_id': 'U099R6WTZ9S', 'is_bot': True, 'is_enterprise_install': False}], 'is_ext_shared_channel': False, 'event_context': '4-eyJldCI6Im1lc3NhZ2UiLCJ0aWQiOiJUMDEwUVM3VVFOQSIsImFpZCI6IkEwOTlMQUNBQjJSIiwiY2lkIjoiRDA5QTBMRkhLOFIifQ'}
2025-08-22 13:59:08,510 - slack_bolt.App - DEBUG - [client.py:200] - Sending a message (session id: e3fa3470-3631-40f6-94b2-522059b3b72b, message: {"envelope_id": "e330d3a3-a7c8-4bdf-b127-4f5753a9506b"})
2025-08-22 13:59:08,510 - __main__ - INFO - [main.py:440] - DM Event details: channel=D09A0LFHK8R, user=U01RMTFMALF, ts=1755896347.270769
2025-08-22 13:59:08,510 - __main__ - DEBUG - [main.py:441] - DM Event text: Give me an example question that i can ask you to test connectivity to Confluence
2025-08-22 13:59:08,510 - utils - DEBUG - [utils.py:27] - Checking message processing: channel=D09A0LFHK8R, ts=1755896347.270769, text='Give me an example question that i can ask you to ...'
2025-08-22 13:59:08,510 - slack_bolt.App - DEBUG - [internals.py:41] - Response time: 3 milliseconds
2025-08-22 13:59:08,510 - utils - DEBUG - [utils.py:31] - Message hash: e35a818c2856b2e27f6bd0e2937f46b0
2025-08-22 13:59:08,510 - slack_bolt.App - DEBUG - [client.py:150] - Message processing completed (type: events_api, envelope_id: e330d3a3-a7c8-4bdf-b127-4f5753a9506b)
2025-08-22 13:59:08,510 - utils - DEBUG - [utils.py:53] - Added message to processing cache (total entries: 1)
2025-08-22 13:59:08,511 - __main__ - DEBUG - [main.py:454] - Bot check: bot_id=None, user_id=U01RMTFMALF
2025-08-22 13:59:08,511 - __main__ - DEBUG - [main.py:459] - Question received: 'Give me an example question that i can ask you to test connectivity to Confluence'
2025-08-22 13:59:08,511 - __main__ - DEBUG - [main.py:465] - Checking user access for DM...
2025-08-22 13:59:08,511 - auth.slack_user_info - DEBUG - [slack_user_info.py:48] - Fetching user info for user_id: U01RMTFMALF
2025-08-22 13:59:08,511 - slack_sdk.web.base_client - DEBUG - [base_client.py:255] - Sending a request - url: https://slack.com/api/users.info, query_params: {}, body_params: {'user': 'U01RMTFMALF', 'team_id': 'T010QS7UQNA'}, files: {}, json_body: None, headers: {'Content-Type': 'application/x-www-form-urlencoded', 'Authorization': '(redacted)', 'User-Agent': 'Python/3.12.0 slackclient/3.34.0 Darwin/23.4.0'}
2025-08-22 13:59:08,818 - slack_sdk.web.base_client - DEBUG - [base_client.py:546] - Received the following response - status: 200, headers: {'date': 'Fri, 22 Aug 2025 20:59:08 GMT', 'server': 'Apache', 'vary': 'Accept-Encoding', 'x-slack-req-id': 'f49f7d6c22ccf9f10a358f4b684adb70', 'x-content-type-options': 'nosniff', 'x-xss-protection': '0', 'pragma': 'no-cache', 'cache-control': 'private, no-cache, no-store, must-revalidate', 'expires': 'Sat, 26 Jul 1997 05:00:00 GMT', 'content-type': 'application/json; charset=utf-8', 'x-accepted-oauth-scopes': 'users:read', 'x-oauth-scopes': 'app_mentions:read,channels:history,chat:write,im:history,im:read,im:write,users:read,reactions:write,users:read.email', 'access-control-expose-headers': 'x-slack-req-id, retry-after', 'access-control-allow-headers': 'slack-route, x-slack-version-ts, x-b3-traceid, x-b3-spanid, x-b3-parentspanid, x-b3-sampled, x-b3-flags', 'strict-transport-security': 'max-age=31536000; includeSubDomains; preload', 'referrer-policy': 'no-referrer', 'x-slack-unique-id': 'aKjaHCCGTlUE322ASVtolwAAEA8', 'x-slack-backend': 'r', 'access-control-allow-origin': '*', 'content-length': '2057', 'via': '1.1 slack-prod.tinyspeck.com, envoy-www-iad-gorvhbnw,envoy-edge-pdx-reektlry', 'x-envoy-attempt-count': '1', 'x-envoy-upstream-service-time': '97', 'x-backend': 'main_normal main_canary_with_overflow main_control_with_overflow', 'x-server': 'slack-www-hhvm-main-iad-ymyw', 'x-slack-shared-secret-outcome': 'no-match', 'x-edge-backend': 'envoy-www', 'timing-allow-origin': '*', 'x-slack-edge-shared-secret-outcome': 'no-match', 'connection': 'close'}, body: {"ok":true,"user":{"id":"U01RMTFMALF","name":"popov8533","is_bot":false,"updated":1755891346,"is_app_user":false,"team_id":"T010QS7UQNA","deleted":false,"color":"4bbe2e","is_email_confirmed":true,"real_name":"Alexandr Popov","tz":"America\/Los_Angeles","tz_label":"Pacific Daylight Time","tz_offset":-25200,"is_admin":false,"is_owner":false,"is_primary_owner":false,"is_restricted":false,"is_ultra_restricted":false,"enterprise_user":{"id":"U01RMTFMALF","enterprise_id":"ERV4P7NAD","enterprise_name":"Paramount Global","is_admin":false,"is_owner":false,"is_primary_owner":false,"teams":["T010QS7UQNA","T02H1PQMF"]},"who_can_share_contact_card":"EVERYONE","profile":{"real_name":"Alexandr Popov","display_name":"Alex Popov","avatar_hash":"a64f82312a14","real_name_normalized":"Alexandr Popov","display_name_normalized":"Alex Popov","image_24":"https:\/\/avatars.slack-edge.com\/2023-03-29\/5033076824964_a64f82312a141123fbbf_24.png","image_32":"https:\/\/avatars.slack-edge.com\/2023-03-29\/5033076824964_a64f82312a141123fbbf_32.png","image_48":"https:\/\/avatars.slack-edge.com\/2023-03-29\/5033076824964_a64f82312a141123fbbf_48.png","image_72":"https:\/\/avatars.slack-edge.com\/2023-03-29\/5033076824964_a64f82312a141123fbbf_72.png","image_192":"https:\/\/avatars.slack-edge.com\/2023-03-29\/5033076824964_a64f82312a141123fbbf_192.png","image_512":"https:\/\/avatars.slack-edge.com\/2023-03-29\/5033076824964_a64f82312a141123fbbf_512.png","image_1024":"https:\/\/avatars.slack-edge.com\/2023-03-29\/5033076824964_a64f82312a141123fbbf_1024.png","image_original":"https:\/\/avatars.slack-edge.com\/2023-03-29\/5033076824964_a64f82312a141123fbbf_original.png","is_custom_image":true,"first_name":"Alexandr","last_name":"Popov","team":"T010QS7UQNA","email":"alexandr.popov@paramount.com","title":"Senior Software Quality Assurance Engineer","phone":"","skype":"","status_text":"","status_text_canonical":"","status_emoji":"","status_emoji_display_info":[],"status_expiration":0,"huddle_state":"default_unset","huddle_state_expiration_ts":0,"ooo_message":""}}}
2025-08-22 13:59:08,820 - auth.slack_user_info - DEBUG - [slack_user_info.py:63] - Retrieved email for user U01RMTFMALF: alexandr.popov@paramount.com
2025-08-22 13:59:08,820 - auth.email_whitelist - DEBUG - [email_whitelist.py:57] - Email access granted: alexandr.popov@paramount.com
2025-08-22 13:59:08,820 - __main__ - INFO - [main.py:118] - Access granted to user U01RMTFMALF with email alexandr.popov@paramount.com
2025-08-22 13:59:08,820 - __main__ - DEBUG - [main.py:471] - User access check passed for DM
2025-08-22 13:59:08,820 - __main__ - INFO - [main.py:473] - Processing DM question from user U01RMTFMALF: Give me an example question that i can ask you to test connectivity to Confluence
2025-08-22 13:59:08,821 - __main__ - DEBUG - [main.py:476] - Starting DM processing...
2025-08-22 13:59:08,821 - __main__ - DEBUG - [main.py:479] - Checking if 'give me an example question that i can ask you to test connectivity to confluence' is an admin command in DM
2025-08-22 13:59:08,821 - __main__ - DEBUG - [main.py:515] - Checking if DM thread is already being processed...
2025-08-22 13:59:08,821 - utils - DEBUG - [utils.py:67] - Managing thread: D09A0LFHK8R:1755896347.270769, action: add, user: U01RMTFMALF
2025-08-22 13:59:08,821 - utils - INFO - [utils.py:94] - Added thread D09A0LFHK8R:1755896347.270769 to active tracking (total: 1)
2025-08-22 13:59:08,822 - __main__ - DEBUG - [main.py:520] - DM thread management check passed
2025-08-22 13:59:08,822 - slack_sdk.web.base_client - DEBUG - [base_client.py:255] - Sending a request - url: https://slack.com/api/reactions.add, query_params: {}, body_params: {'channel': 'D09A0LFHK8R', 'name': 'thinking_face', 'timestamp': '1755896347.270769', 'team_id': 'T010QS7UQNA'}, files: {}, json_body: None, headers: {'Content-Type': 'application/x-www-form-urlencoded', 'Authorization': '(redacted)', 'User-Agent': 'Python/3.12.0 slackclient/3.34.0 Darwin/23.4.0'}
2025-08-22 13:59:09,234 - slack_sdk.web.base_client - DEBUG - [base_client.py:546] - Received the following response - status: 200, headers: {'date': 'Fri, 22 Aug 2025 20:59:09 GMT', 'server': 'Apache', 'vary': 'Accept-Encoding', 'x-slack-req-id': '2d759f7d4bd6871f810a197a104901be', 'x-content-type-options': 'nosniff', 'x-xss-protection': '0', 'pragma': 'no-cache', 'cache-control': 'private, no-cache, no-store, must-revalidate', 'expires': 'Sat, 26 Jul 1997 05:00:00 GMT', 'content-type': 'application/json; charset=utf-8', 'x-accepted-oauth-scopes': 'reactions:write', 'x-oauth-scopes': 'app_mentions:read,channels:history,chat:write,im:history,im:read,im:write,users:read,reactions:write,users:read.email', 'access-control-expose-headers': 'x-slack-req-id, retry-after', 'access-control-allow-headers': 'slack-route, x-slack-version-ts, x-b3-traceid, x-b3-spanid, x-b3-parentspanid, x-b3-sampled, x-b3-flags', 'strict-transport-security': 'max-age=31536000; includeSubDomains; preload', 'referrer-policy': 'no-referrer', 'x-slack-unique-id': 'aKjaHdmZK7gkiptHnYBvJwAAECA', 'x-slack-backend': 'r', 'access-control-allow-origin': '*', 'content-length': '11', 'via': '1.1 slack-prod.tinyspeck.com, envoy-www-iad-mrencepq,envoy-edge-pdx-rjqenqme', 'x-envoy-attempt-count': '1', 'x-envoy-upstream-service-time': '167', 'x-backend': 'main_normal main_canary_with_overflow main_control_with_overflow', 'x-server': 'slack-www-hhvm-main-iad-cjle', 'x-slack-shared-secret-outcome': 'no-match', 'x-edge-backend': 'envoy-www', 'timing-allow-origin': '*', 'x-slack-edge-shared-secret-outcome': 'no-match', 'connection': 'close'}, body: {"ok":true}
2025-08-22 13:59:09,235 - __main__ - INFO - [main.py:537] - Processing DM question from <@U01RMTFMALF>: Give me an example question that i can ask you to test connectivity to Confluence
2025-08-22 13:59:09,235 - __main__ - INFO - [main.py:541] - Sending DM request to DIG AI...
2025-08-22 13:59:09,235 - dig_connector - INFO - [dig_connector.py:134] - Generating response for query: 'Give me an example question that i can ask you to test connectivity to Confluence' with 0 chunks
2025-08-22 13:59:09,235 - dig_connector - DEBUG - [dig_connector.py:138] - Formatted context length: 0
2025-08-22 13:59:09,235 - dig_connector - INFO - [dig_connector.py:141] - No context available, using direct query
2025-08-22 13:59:09,235 - dig_connector - INFO - [dig_connector.py:150] - Sending prompt to DIG platform...
2025-08-22 13:59:09,235 - dig_connector - INFO - [dig_connector.py:121] - Sending message to DIG API - URL: https://ai.digdev.cbsicloud.com/fastapi/chats/883/generate
2025-08-22 13:59:09,235 - dig_connector - DEBUG - [dig_connector.py:122] - Message payload: {'model_id': 42, 'message_text': 'Give me an example question that i can ask you to test connectivity to Confluence', 'history': [{'role': 'user', 'content': 'Give me an example question that i can ask you to test connectivity to Confluence'}]}
2025-08-22 13:59:14,787 - urllib3.connectionpool - DEBUG - [connectionpool.py:549] - https://ai.digdev.cbsicloud.com:443 "POST /fastapi/chats/883/generate HTTP/1.1" 200 347
2025-08-22 13:59:14,789 - dig_connector - DEBUG - [dig_connector.py:125] - DIG API response: status=200
2025-08-22 13:59:14,789 - dig_connector - DEBUG - [dig_connector.py:129] - DIG API response data: {'message_text': 'An example question you can ask to test connectivity to Confluence (assuming I have access to Confluence documentation) would be:\n\n"What are the steps to create a new page in Confluence?"\n\nIf I have relevant documents, I would then attempt to answer by searching through them.', 'requires_approval': False, 'execution_id': 1584}
2025-08-22 13:59:14,789 - dig_connector - INFO - [dig_connector.py:154] - Extracting response content...
2025-08-22 13:59:14,789 - dig_connector - DEBUG - [dig_connector.py:221] - Found message_text in response
2025-08-22 13:59:14,790 - dig_connector - INFO - [dig_connector.py:157] - Successfully generated response (length: 276)
2025-08-22 13:59:14,790 - __main__ - INFO - [main.py:544] - Received DM response from DIG AI
2025-08-22 13:59:14,790 - __main__ - DEBUG - [main.py:545] - DIG AI DM response: An example question you can ask to test connectivity to Confluence (assuming I have access to Confluence documentation) would be:

"What are the steps to create a new page in Confluence?"

If I have relevant documents, I would then attempt to answer by searching through them.
2025-08-22 13:59:14,792 - __main__ - DEBUG - [main.py:549] - Formatted DM response: *Your Question:*
> Give me an example question that i can ask you to test connectivity to Confluence

*Answer:*
An example question you can ask to test connectivity to Confluence (assuming I have access to Confluence documentation) would be:

"What are the steps to create a new page in Confluence?"

If I have relevant documents, I would then attempt to answer by searching through them.
2025-08-22 13:59:14,792 - slack_sdk.web.base_client - DEBUG - [base_client.py:255] - Sending a request - url: https://slack.com/api/reactions.remove, query_params: {}, body_params: {'name': 'thinking_face', 'channel': 'D09A0LFHK8R', 'timestamp': '1755896347.270769', 'team_id': 'T010QS7UQNA'}, files: {}, json_body: None, headers: {'Content-Type': 'application/x-www-form-urlencoded', 'Authorization': '(redacted)', 'User-Agent': 'Python/3.12.0 slackclient/3.34.0 Darwin/23.4.0'}
2025-08-22 13:59:15,210 - slack_sdk.web.base_client - DEBUG - [base_client.py:546] - Received the following response - status: 200, headers: {'date': 'Fri, 22 Aug 2025 20:59:15 GMT', 'server': 'Apache', 'vary': 'Accept-Encoding', 'x-slack-req-id': '16ef279669e3d2bcda6126bfb16babb9', 'x-content-type-options': 'nosniff', 'x-xss-protection': '0', 'pragma': 'no-cache', 'cache-control': 'private, no-cache, no-store, must-revalidate', 'expires': 'Sat, 26 Jul 1997 05:00:00 GMT', 'content-type': 'application/json; charset=utf-8', 'x-accepted-oauth-scopes': 'reactions:write', 'x-oauth-scopes': 'app_mentions:read,channels:history,chat:write,im:history,im:read,im:write,users:read,reactions:write,users:read.email', 'access-control-expose-headers': 'x-slack-req-id, retry-after', 'access-control-allow-headers': 'slack-route, x-slack-version-ts, x-b3-traceid, x-b3-spanid, x-b3-parentspanid, x-b3-sampled, x-b3-flags', 'strict-transport-security': 'max-age=31536000; includeSubDomains; preload', 'referrer-policy': 'no-referrer', 'x-slack-unique-id': 'aKjaI4WoAecbxzdoEI50nwAAABI', 'x-slack-backend': 'r', 'access-control-allow-origin': '*', 'content-length': '11', 'via': '1.1 slack-prod.tinyspeck.com, envoy-www-iad-omnzrova,envoy-edge-pdx-swqafgim', 'x-envoy-attempt-count': '1', 'x-envoy-upstream-service-time': '168', 'x-backend': 'main_normal main_canary_with_overflow main_control_with_overflow', 'x-server': 'slack-www-hhvm-main-iad-pqnu', 'x-slack-shared-secret-outcome': 'no-match', 'x-edge-backend': 'envoy-www', 'timing-allow-origin': '*', 'x-slack-edge-shared-secret-outcome': 'no-match', 'connection': 'close'}, body: {"ok":true}
2025-08-22 13:59:15,210 - slack_sdk.web.base_client - DEBUG - [base_client.py:255] - Sending a request - url: https://slack.com/api/chat.postMessage, query_params: {}, body_params: {}, files: {}, json_body: {'channel': 'D09A0LFHK8R', 'text': '*Your Question:*\n> Give me an example question that i can ask you to test connectivity to Confluence\n\n*Answer:*\nAn example question you can ask to test connectivity to Confluence (assuming I have access to Confluence documentation) would be:\n\n"What are the steps to create a new page in Confluence?"\n\nIf I have relevant documents, I would then attempt to answer by searching through them.', 'thread_ts': '1755896347.270769', 'team_id': 'T010QS7UQNA'}, headers: {'Content-Type': 'application/json;charset=utf-8', 'Authorization': '(redacted)', 'User-Agent': 'Python/3.12.0 slackclient/3.34.0 Darwin/23.4.0'}
2025-08-22 13:59:15,647 - slack_sdk.web.base_client - DEBUG - [base_client.py:546] - Received the following response - status: 200, headers: {'date': 'Fri, 22 Aug 2025 20:59:15 GMT', 'server': 'Apache', 'vary': 'Accept-Encoding', 'x-slack-req-id': '7c460bddbbdcbbcaffe3680351dcbc13', 'x-content-type-options': 'nosniff', 'x-xss-protection': '0', 'pragma': 'no-cache', 'cache-control': 'private, no-cache, no-store, must-revalidate', 'expires': 'Sat, 26 Jul 1997 05:00:00 GMT', 'content-type': 'application/json; charset=utf-8', 'x-accepted-oauth-scopes': 'chat:write', 'x-oauth-scopes': 'app_mentions:read,channels:history,chat:write,im:history,im:read,im:write,users:read,reactions:write,users:read.email', 'access-control-expose-headers': 'x-slack-req-id, retry-after', 'access-control-allow-headers': 'slack-route, x-slack-version-ts, x-b3-traceid, x-b3-spanid, x-b3-parentspanid, x-b3-sampled, x-b3-flags', 'strict-transport-security': 'max-age=31536000; includeSubDomains; preload', 'referrer-policy': 'no-referrer', 'x-slack-unique-id': 'aKjaI3bmmp9jmFsgvXHVZAAAEDE', 'x-slack-backend': 'r', 'access-control-allow-origin': '*', 'content-length': '1814', 'via': '1.1 slack-prod.tinyspeck.com, envoy-www-iad-iwfqdydi,envoy-edge-pdx-fjlvgagw', 'x-envoy-attempt-count': '1', 'x-envoy-upstream-service-time': '207', 'x-backend': 'main_normal main_canary_with_overflow main_control_with_overflow', 'x-server': 'slack-www-hhvm-main-iad-eaxv', 'x-slack-shared-secret-outcome': 'no-match', 'x-edge-backend': 'envoy-www', 'timing-allow-origin': '*', 'x-slack-edge-shared-secret-outcome': 'no-match', 'connection': 'close'}, body: {"ok":true,"channel":"D09A0LFHK8R","ts":"1755896355.552789","message":{"user":"U099R6WTZ9S","type":"message","ts":"1755896355.552789","bot_id":"B099R6WTRU4","app_id":"A099LACAB2R","text":"*Your Question:*\n&gt; Give me an example question that i can ask you to test connectivity to Confluence\n\n*Answer:*\nAn example question you can ask to test connectivity to Confluence (assuming I have access to Confluence documentation) would be:\n\n\"What are the steps to create a new page in Confluence?\"\n\nIf I have relevant documents, I would then attempt to answer by searching through them.","team":"T010QS7UQNA","bot_profile":{"id":"B099R6WTRU4","app_id":"A099LACAB2R","user_id":"U099R6WTZ9S","name":"AutoBot","icons":{"image_36":"https://a.slack-edge.com/80588/img/plugins/app/bot_36.png","image_48":"https://a.slack-edge.com/80588/img/plugins/app/bot_48.png","image_72":"https://a.slack-edge.com/80588/img/plugins/app/service_72.png"},"deleted":false,"updated":1754677948,"team_id":"T010QS7UQNA"},"thread_ts":"1755896347.270769","parent_user_id":"U01RMTFMALF","blocks":[{"type":"rich_text","block_id":"PPb/","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Your Question:","style":{"bold":true}}]},{"type":"rich_text_quote","elements":[{"type":"text","text":"Give me an example question that i can ask you to test connectivity to Confluence"}]},{"type":"rich_text_section","elements":[{"type":"text","text":"\n\n"},{"type":"text","text":"Answer:","style":{"bold":true}},{"type":"text","text":"\nAn example question you can ask to test connectivity to Confluence (assuming I have access to Confluence documentation) would be:\n\n\"What are the steps to create a new page in Confluence?\"\n\nIf I have relevant documents, I would then attempt to answer by searching through them."}]}]}]}}
2025-08-22 13:59:15,649 - __main__ - DEBUG - [main.py:574] - Cleaning up DM thread tracking...
2025-08-22 13:59:15,649 - utils - DEBUG - [utils.py:67] - Managing thread: D09A0LFHK8R:1755896347.270769, action: remove, user: U01RMTFMALF
2025-08-22 13:59:15,649 - utils - INFO - [utils.py:100] - Removed thread D09A0LFHK8R:1755896347.270769 from active tracking (remaining: 0)
2025-08-22 13:59:16,997 - slack_bolt.App - DEBUG - [client.py:235] - on_message invoked: (message: {"envelope_id":"cad3597a-532f-4c6f-a894-061fd95dc01f","payload":{"token":"yq71khZBCyJF1Ri2hG5aNqr5","team_id":"T010QS7UQNA","enterprise_id":"ERV4P7NAD","context_team_id":null,"context_enterprise_id":"ERV4P7NAD","api_app_id":"A099LACAB2R","event":{"user":"U099R6WTZ9S","type":"message","ts":"1755896355.552789","bot_id":"B099R6WTRU4","app_id":"A099LACAB2R","text":"*Your Question:*\n&gt; Give me an example question that i can ask you to test connectivity to Confluence\n\n*Answer:*\nAn example question you can ask to test connectivity to Confluence (assuming I have access to Confluence documentation) would be:\n\n\"What are the steps to create a new page in Confluence?\"\n\nIf I have relevant documents, I would then attempt to answer by searching through them.","team":"T010QS7UQNA","bot_profile":{"id":"B099R6WTRU4","deleted":false,"name":"AutoBot","updated":1754677948,"app_id":"A099LACAB2R","user_id":"U099R6WTZ9S","icons":{"image_36":"https:\/\/a.slack-edge.com\/80588\/img\/plugins\/app\/bot_36.png","image_48":"https:\/\/a.slack-edge.com\/80588\/img\/plugins\/app\/bot_48.png","image_72":"https:\/\/a.slack-edge.com\/80588\/img\/plugins\/app\/service_72.png"},"team_id":"T010QS7UQNA"},"thread_ts":"1755896347.270769","parent_user_id":"U01RMTFMALF","blocks":[{"type":"rich_text","block_id":"loY","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Your Question:","style":{"bold":true}}]},{"type":"rich_text_quote","elements":[{"type":"text","text":"Give me an example question that i can ask you to test connectivity to Confluence"}]},{"type":"rich_text_section","elements":[{"type":"text","text":"\n\n"},{"type":"text","text":"Answer:","style":{"bold":true}},{"type":"text","text":"\nAn example question you can ask to test connectivity to Confluence (assuming I have access to Confluence documentation) would be:\n\n\"What are the steps to create a new page in Confluence?\"\n\nIf I have relevant documents, I would then attempt to answer by searching through them."}]}]}],"channel":"D09A0LFHK8R","event_ts":"1755896355.552789","channel_type":"im"},"type":"event_callback","event_id":"Ev09BJ5QJNQ3","event_time":1755896355,"authorizations":[{"enterprise_id":"ERV4P7NAD","team_id":"T010QS7UQNA","user_id":"U099R6WTZ9S","is_bot":true,"is_enterprise_install":false}],"is_ext_shared_channel":false,"event_context":"4-eyJldCI6Im1lc3NhZ2UiLCJ0aWQiOiJUMDEwUVM3VVFOQSIsImFpZCI6IkEwOTlMQUNBQjJSIiwiY2lkIjoiRDA5QTBMRkhLOFIifQ"},"type":"events_api","accepts_response_payload":false,"retry_attempt":0,"retry_reason":""})
2025-08-22 13:59:16,997 - slack_bolt.App - DEBUG - [client.py:99] - A new message enqueued (current queue size: 1)
2025-08-22 13:59:16,997 - slack_bolt.App - DEBUG - [client.py:105] - A message dequeued (current queue size: 0)
2025-08-22 13:59:16,998 - slack_bolt.App - DEBUG - [client.py:125] - Message processing started (type: events_api, envelope_id: cad3597a-532f-4c6f-a894-061fd95dc01f)
2025-08-22 13:59:16,998 - slack_bolt.App - DEBUG - [app.py:476] - Applying slack_bolt.middleware.ssl_check.ssl_check.SslCheck
2025-08-22 13:59:16,998 - slack_bolt.App - DEBUG - [app.py:476] - Applying slack_bolt.middleware.request_verification.request_verification.RequestVerification
2025-08-22 13:59:16,998 - slack_bolt.App - DEBUG - [app.py:476] - Applying slack_bolt.middleware.authorization.single_team_authorization.SingleTeamAuthorization
2025-08-22 13:59:16,998 - slack_bolt.App - DEBUG - [app.py:476] - Applying slack_bolt.middleware.ignoring_self_events.ignoring_self_events.IgnoringSelfEvents
2025-08-22 13:59:16,998 - slack_bolt.IgnoringSelfEvents - DEBUG - [ignoring_self_events.py:60] - Skipped self event: {'user': 'U099R6WTZ9S', 'type': 'message', 'ts': '1755896355.552789', 'bot_id': 'B099R6WTRU4', 'app_id': 'A099LACAB2R', 'text': '*Your Question:*\n&gt; Give me an example question that i can ask you to test connectivity to Confluence\n\n*Answer:*\nAn example question you can ask to test connectivity to Confluence (assuming I have access to Confluence documentation) would be:\n\n"What are the steps to create a new page in Confluence?"\n\nIf I have relevant documents, I would then attempt to answer by searching through them.', 'team': 'T010QS7UQNA', 'bot_profile': {'id': 'B099R6WTRU4', 'deleted': False, 'name': 'AutoBot', 'updated': 1754677948, 'app_id': 'A099LACAB2R', 'user_id': 'U099R6WTZ9S', 'icons': {'image_36': 'https://a.slack-edge.com/80588/img/plugins/app/bot_36.png', 'image_48': 'https://a.slack-edge.com/80588/img/plugins/app/bot_48.png', 'image_72': 'https://a.slack-edge.com/80588/img/plugins/app/service_72.png'}, 'team_id': 'T010QS7UQNA'}, 'thread_ts': '1755896347.270769', 'parent_user_id': 'U01RMTFMALF', 'blocks': [{'type': 'rich_text', 'block_id': 'loY', 'elements': [{'type': 'rich_text_section', 'elements': [{'type': 'text', 'text': 'Your Question:', 'style': {'bold': True}}]}, {'type': 'rich_text_quote', 'elements': [{'type': 'text', 'text': 'Give me an example question that i can ask you to test connectivity to Confluence'}]}, {'type': 'rich_text_section', 'elements': [{'type': 'text', 'text': '\n\n'}, {'type': 'text', 'text': 'Answer:', 'style': {'bold': True}}, {'type': 'text', 'text': '\nAn example question you can ask to test connectivity to Confluence (assuming I have access to Confluence documentation) would be:\n\n"What are the steps to create a new page in Confluence?"\n\nIf I have relevant documents, I would then attempt to answer by searching through them.'}]}]}], 'channel': 'D09A0LFHK8R', 'event_ts': '1755896355.552789', 'channel_type': 'im'}
2025-08-22 13:59:16,998 - slack_bolt.App - DEBUG - [client.py:200] - Sending a message (session id: e3fa3470-3631-40f6-94b2-522059b3b72b, message: {"envelope_id": "cad3597a-532f-4c6f-a894-061fd95dc01f"})
2025-08-22 13:59:16,999 - slack_bolt.App - DEBUG - [internals.py:41] - Response time: 0 milliseconds
2025-08-22 13:59:16,999 - slack_bolt.App - DEBUG - [client.py:150] - Message processing completed (type: events_api, envelope_id: cad3597a-532f-4c6f-a894-061fd95dc01f)
2025-08-22 13:59:35,610 - slack_bolt.App - DEBUG - [client.py:235] - on_message invoked: (message: {"envelope_id":"b305f2f3-49ab-4d09-a2cc-a3b0d69e75c8","payload":{"token":"yq71khZBCyJF1Ri2hG5aNqr5","team_id":"T010QS7UQNA","enterprise_id":"ERV4P7NAD","context_team_id":null,"context_enterprise_id":"ERV4P7NAD","api_app_id":"A099LACAB2R","event":{"user":"U01RMTFMALF","type":"message","ts":"1755896374.388609","client_msg_id":"537d591a-2812-453c-82e2-79049891c2db","text":"What are the steps to create a new page in Confluence?","thread_ts":"1755896347.270769","parent_user_id":"U01RMTFMALF","blocks":[{"type":"rich_text","block_id":"GlPAf","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"What are the steps to create a new page in Confluence?"}]}]}],"channel":"D09A0LFHK8R","event_ts":"1755896374.388609","channel_type":"im"},"type":"event_callback","event_id":"Ev09BA54U5P1","event_time":1755896374,"authorizations":[{"enterprise_id":"ERV4P7NAD","team_id":"T010QS7UQNA","user_id":"U099R6WTZ9S","is_bot":true,"is_enterprise_install":false}],"is_ext_shared_channel":false,"event_context":"4-eyJldCI6Im1lc3NhZ2UiLCJ0aWQiOiJUMDEwUVM3VVFOQSIsImFpZCI6IkEwOTlMQUNBQjJSIiwiY2lkIjoiRDA5QTBMRkhLOFIifQ"},"type":"events_api","accepts_response_payload":false,"retry_attempt":0,"retry_reason":""})
2025-08-22 13:59:35,611 - slack_bolt.App - DEBUG - [client.py:99] - A new message enqueued (current queue size: 1)
2025-08-22 13:59:35,611 - slack_bolt.App - DEBUG - [client.py:105] - A message dequeued (current queue size: 0)
2025-08-22 13:59:35,611 - slack_bolt.App - DEBUG - [client.py:125] - Message processing started (type: events_api, envelope_id: b305f2f3-49ab-4d09-a2cc-a3b0d69e75c8)
2025-08-22 13:59:35,612 - slack_bolt.App - DEBUG - [app.py:476] - Applying slack_bolt.middleware.ssl_check.ssl_check.SslCheck
2025-08-22 13:59:35,612 - slack_bolt.App - DEBUG - [app.py:476] - Applying slack_bolt.middleware.request_verification.request_verification.RequestVerification
2025-08-22 13:59:35,612 - slack_bolt.App - DEBUG - [app.py:476] - Applying slack_bolt.middleware.authorization.single_team_authorization.SingleTeamAuthorization
2025-08-22 13:59:35,612 - slack_bolt.App - DEBUG - [app.py:476] - Applying slack_bolt.middleware.ignoring_self_events.ignoring_self_events.IgnoringSelfEvents
2025-08-22 13:59:35,612 - slack_bolt.App - DEBUG - [app.py:476] - Applying slack_bolt.middleware.url_verification.url_verification.UrlVerification
2025-08-22 13:59:35,612 - slack_bolt.App - DEBUG - [app.py:500] - Checking listener: handle_app_mentions ...
2025-08-22 13:59:35,613 - slack_bolt.App - DEBUG - [app.py:500] - Checking listener: help_message ...
2025-08-22 13:59:35,613 - slack_bolt.App - DEBUG - [app.py:500] - Checking listener: handle_dm_messages ...
2025-08-22 13:59:35,613 - slack_bolt.App - DEBUG - [app.py:522] - Running listener: handle_dm_messages ...
2025-08-22 13:59:35,613 - slack_bolt.App - DEBUG - [thread_runner.py:198] - Responding with status: 200 body: "" (0 millis)
2025-08-22 13:59:35,613 - __main__ - INFO - [main.py:430] - === DM MESSAGE EVENT RECEIVED ===
2025-08-22 13:59:35,614 - slack_bolt.App - DEBUG - [client.py:200] - Sending a message (session id: e3fa3470-3631-40f6-94b2-522059b3b72b, message: {"envelope_id": "b305f2f3-49ab-4d09-a2cc-a3b0d69e75c8"})
2025-08-22 13:59:35,614 - __main__ - DEBUG - [main.py:431] - Full event body: {'token': 'yq71khZBCyJF1Ri2hG5aNqr5', 'team_id': 'T010QS7UQNA', 'enterprise_id': 'ERV4P7NAD', 'context_team_id': None, 'context_enterprise_id': 'ERV4P7NAD', 'api_app_id': 'A099LACAB2R', 'event': {'user': 'U01RMTFMALF', 'type': 'message', 'ts': '1755896374.388609', 'client_msg_id': '537d591a-2812-453c-82e2-79049891c2db', 'text': 'What are the steps to create a new page in Confluence?', 'thread_ts': '1755896347.270769', 'parent_user_id': 'U01RMTFMALF', 'blocks': [{'type': 'rich_text', 'block_id': 'GlPAf', 'elements': [{'type': 'rich_text_section', 'elements': [{'type': 'text', 'text': 'What are the steps to create a new page in Confluence?'}]}]}], 'channel': 'D09A0LFHK8R', 'event_ts': '1755896374.388609', 'channel_type': 'im'}, 'type': 'event_callback', 'event_id': 'Ev09BA54U5P1', 'event_time': 1755896374, 'authorizations': [{'enterprise_id': 'ERV4P7NAD', 'team_id': 'T010QS7UQNA', 'user_id': 'U099R6WTZ9S', 'is_bot': True, 'is_enterprise_install': False}], 'is_ext_shared_channel': False, 'event_context': '4-eyJldCI6Im1lc3NhZ2UiLCJ0aWQiOiJUMDEwUVM3VVFOQSIsImFpZCI6IkEwOTlMQUNBQjJSIiwiY2lkIjoiRDA5QTBMRkhLOFIifQ'}
2025-08-22 13:59:35,614 - __main__ - INFO - [main.py:440] - DM Event details: channel=D09A0LFHK8R, user=U01RMTFMALF, ts=1755896374.388609
2025-08-22 13:59:35,614 - __main__ - DEBUG - [main.py:441] - DM Event text: What are the steps to create a new page in Confluence?
2025-08-22 13:59:35,614 - slack_bolt.App - DEBUG - [internals.py:41] - Response time: 2 milliseconds
2025-08-22 13:59:35,614 - utils - DEBUG - [utils.py:27] - Checking message processing: channel=D09A0LFHK8R, ts=1755896374.388609, text='What are the steps to create a new page in Conflue...'
2025-08-22 13:59:35,615 - slack_bolt.App - DEBUG - [client.py:150] - Message processing completed (type: events_api, envelope_id: b305f2f3-49ab-4d09-a2cc-a3b0d69e75c8)
2025-08-22 13:59:35,615 - utils - DEBUG - [utils.py:31] - Message hash: d5f07523b78d4ccdecc0a5168203b3c1
2025-08-22 13:59:35,615 - utils - DEBUG - [utils.py:53] - Added message to processing cache (total entries: 2)
2025-08-22 13:59:35,615 - __main__ - DEBUG - [main.py:454] - Bot check: bot_id=None, user_id=U01RMTFMALF
2025-08-22 13:59:35,615 - __main__ - DEBUG - [main.py:459] - Question received: 'What are the steps to create a new page in Confluence?'
2025-08-22 13:59:35,615 - __main__ - DEBUG - [main.py:465] - Checking user access for DM...
2025-08-22 13:59:35,615 - auth.slack_user_info - DEBUG - [slack_user_info.py:44] - Using cached email for user U01RMTFMALF
2025-08-22 13:59:35,616 - auth.email_whitelist - DEBUG - [email_whitelist.py:57] - Email access granted: alexandr.popov@paramount.com
2025-08-22 13:59:35,616 - __main__ - INFO - [main.py:118] - Access granted to user U01RMTFMALF with email alexandr.popov@paramount.com
2025-08-22 13:59:35,616 - __main__ - DEBUG - [main.py:471] - User access check passed for DM
2025-08-22 13:59:35,616 - __main__ - INFO - [main.py:473] - Processing DM question from user U01RMTFMALF: What are the steps to create a new page in Confluence?
2025-08-22 13:59:35,616 - __main__ - DEBUG - [main.py:476] - Starting DM processing...
2025-08-22 13:59:35,616 - __main__ - DEBUG - [main.py:479] - Checking if 'what are the steps to create a new page in confluence?' is an admin command in DM
2025-08-22 13:59:35,616 - __main__ - DEBUG - [main.py:515] - Checking if DM thread is already being processed...
2025-08-22 13:59:35,616 - utils - DEBUG - [utils.py:67] - Managing thread: D09A0LFHK8R:1755896347.270769, action: add, user: U01RMTFMALF
2025-08-22 13:59:35,616 - utils - INFO - [utils.py:94] - Added thread D09A0LFHK8R:1755896347.270769 to active tracking (total: 1)
2025-08-22 13:59:35,616 - __main__ - DEBUG - [main.py:520] - DM thread management check passed
2025-08-22 13:59:35,617 - slack_sdk.web.base_client - DEBUG - [base_client.py:255] - Sending a request - url: https://slack.com/api/reactions.add, query_params: {}, body_params: {'channel': 'D09A0LFHK8R', 'name': 'thinking_face', 'timestamp': '1755896347.270769', 'team_id': 'T010QS7UQNA'}, files: {}, json_body: None, headers: {'Content-Type': 'application/x-www-form-urlencoded', 'Authorization': '(redacted)', 'User-Agent': 'Python/3.12.0 slackclient/3.34.0 Darwin/23.4.0'}
2025-08-22 13:59:35,989 - slack_sdk.web.base_client - DEBUG - [base_client.py:546] - Received the following response - status: 200, headers: {'date': 'Fri, 22 Aug 2025 20:59:35 GMT', 'server': 'Apache', 'vary': 'Accept-Encoding', 'x-slack-req-id': 'cc37e32298e1f1aad2337ceaeeddfae9', 'x-content-type-options': 'nosniff', 'x-xss-protection': '0', 'pragma': 'no-cache', 'cache-control': 'private, no-cache, no-store, must-revalidate', 'expires': 'Sat, 26 Jul 1997 05:00:00 GMT', 'content-type': 'application/json; charset=utf-8', 'x-accepted-oauth-scopes': 'reactions:write', 'x-oauth-scopes': 'app_mentions:read,channels:history,chat:write,im:history,im:read,im:write,users:read,reactions:write,users:read.email', 'access-control-expose-headers': 'x-slack-req-id, retry-after', 'access-control-allow-headers': 'slack-route, x-slack-version-ts, x-b3-traceid, x-b3-spanid, x-b3-parentspanid, x-b3-sampled, x-b3-flags', 'strict-transport-security': 'max-age=31536000; includeSubDomains; preload', 'referrer-policy': 'no-referrer', 'x-slack-unique-id': 'aKjaNw6ng2xCEPIIEhKuLwAAAB0', 'x-slack-backend': 'r', 'access-control-allow-origin': '*', 'content-length': '11', 'via': '1.1 slack-prod.tinyspeck.com, envoy-www-iad-hjpbqkse,envoy-edge-pdx-tpylawuv', 'x-envoy-attempt-count': '1', 'x-envoy-upstream-service-time': '128', 'x-backend': 'main_normal main_canary_with_overflow main_control_with_overflow', 'x-server': 'slack-www-hhvm-main-iad-inkp', 'x-slack-shared-secret-outcome': 'no-match', 'x-edge-backend': 'envoy-www', 'timing-allow-origin': '*', 'x-slack-edge-shared-secret-outcome': 'no-match', 'connection': 'close'}, body: {"ok":true}
2025-08-22 13:59:35,990 - __main__ - INFO - [main.py:537] - Processing DM question from <@U01RMTFMALF>: What are the steps to create a new page in Confluence?
2025-08-22 13:59:35,990 - __main__ - INFO - [main.py:541] - Sending DM request to DIG AI...
2025-08-22 13:59:35,991 - dig_connector - INFO - [dig_connector.py:134] - Generating response for query: 'What are the steps to create a new page in Confluence?' with 0 chunks
2025-08-22 13:59:35,991 - dig_connector - DEBUG - [dig_connector.py:138] - Formatted context length: 0
2025-08-22 13:59:35,991 - dig_connector - INFO - [dig_connector.py:141] - No context available, using direct query
2025-08-22 13:59:35,991 - dig_connector - INFO - [dig_connector.py:150] - Sending prompt to DIG platform...
2025-08-22 13:59:35,991 - dig_connector - INFO - [dig_connector.py:121] - Sending message to DIG API - URL: https://ai.digdev.cbsicloud.com/fastapi/chats/883/generate
2025-08-22 13:59:35,991 - dig_connector - DEBUG - [dig_connector.py:122] - Message payload: {'model_id': 42, 'message_text': 'What are the steps to create a new page in Confluence?', 'history': [{'role': 'user', 'content': 'What are the steps to create a new page in Confluence?'}]}
2025-08-22 13:59:44,012 - urllib3.connectionpool - DEBUG - [connectionpool.py:549] - https://ai.digdev.cbsicloud.com:443 "POST /fastapi/chats/883/generate HTTP/1.1" 200 1199
2025-08-22 13:59:44,012 - dig_connector - DEBUG - [dig_connector.py:125] - DIG API response: status=200
2025-08-22 13:59:44,013 - dig_connector - DEBUG - [dig_connector.py:129] - DIG API response data: {'message_text': 'Based on the documents provided, I can give you information related to creating specific types of pages (like "how-to articles") using templates in Confluence, but not a general step-by-step guide for creating *any* new page from scratch.\n\nFor creating a "how-to article" in Confluence, the document "Source: https://paramount.atlassian.net/wiki/spaces/PLQA/pages/491952767" suggests the following instructions for creating content within such an article:\n\n*   **Instructions:**\n    1.  Add steps that are simple and self-contained.\n    2.  Add illustrations to instructions by typing `/image`.\n    3.  Stick to 3-5 steps per task to avoid overloading readers.\n\nAdditionally, another document (Source: https://paramount.atlassian.net/wiki/spaces/PLQA/pages/47749118) shows structured macros related to "create-from-template" for a "kb-how-to-article-blueprint" and a "file-list-blueprint," implying that you would likely initiate page creation through a template selection.\n\nI do not have information on the very first step of clicking a "create" button or similar general page creation process in Confluence.', 'requires_approval': False, 'execution_id': 1585}
2025-08-22 13:59:44,013 - dig_connector - INFO - [dig_connector.py:154] - Extracting response content...
2025-08-22 13:59:44,013 - dig_connector - DEBUG - [dig_connector.py:221] - Found message_text in response
2025-08-22 13:59:44,013 - dig_connector - INFO - [dig_connector.py:157] - Successfully generated response (length: 1109)
2025-08-22 13:59:44,013 - __main__ - INFO - [main.py:544] - Received DM response from DIG AI
2025-08-22 13:59:44,013 - __main__ - DEBUG - [main.py:545] - DIG AI DM response: Based on the documents provided, I can give you information related to creating specific types of pages (like "how-to articles") using templates in Confluence, but not a general step-by-step guide for creating *any* new page from scratch.

For creating a "how-to article" in Confluence, the document "Source: https://paramount.atlassian.net/wiki/spaces/PLQA/pages/491952767" suggests the following instructions for creating content within such an article:

*   **Instructions:**
    1.  Add steps that are simple and self-contained.
    2.  Add illustrations to instructions by typing `/image`.
    3.  Stick to 3-5 steps per task to avoid overloading readers.

Additionally, another document (Source: https://paramount.atlassian.net/wiki/spaces/PLQA/pages/47749118) shows structured macros related to "create-from-template" for a "kb-how-to-article-blueprint" and a "file-list-blueprint," implying that you would likely initiate page creation through a template selection.

I do not have information on the very first step of clicking a "create" button or similar general page creation process in Confluence.
2025-08-22 13:59:44,013 - __main__ - DEBUG - [main.py:549] - Formatted DM response: *Your Question:*
> What are the steps to create a new page in Confluence?

*Answer:*
Based on the documents provided, I can give you information related to creating specific types of pages (like "how-to articles") using templates in Confluence, but not a general step-by-step guide for creating *any* new page from scratch.

For creating a "how-to article" in Confluence, the document "Source: https://paramount.atlassian.net/wiki/spaces/PLQA/pages/491952767" suggests the following instructions for creating content within such an article:

*   *Instructions:*
    1.  Add steps that are simple and self-contained.
    2.  Add illustrations to instructions by typing `/image`.
    3.  Stick to 3-5 steps per task to avoid overloading readers.

Additionally, another document (Source: https://paramount.atlassian.net/wiki/spaces/PLQA/pages/47749118) shows structured macros related to "create-from-template" for a "kb-how-to-article-blueprint" and a "file-list-blueprint," implying that you would likely initiate page creation through a template selection.

I do not have information on the very first step of clicking a "create" button or similar general page creation process in Confluence.

────────────────────────────────────────
*📚 Sources:*
1. <https://paramount.atlassian.net/wiki/spaces/PLQA/pages/491952767"|Source>
2. <https://paramount.atlassian.net/wiki/spaces/PLQA/pages/47749118|Source>

2025-08-22 13:59:44,014 - slack_sdk.web.base_client - DEBUG - [base_client.py:255] - Sending a request - url: https://slack.com/api/reactions.remove, query_params: {}, body_params: {'name': 'thinking_face', 'channel': 'D09A0LFHK8R', 'timestamp': '1755896347.270769', 'team_id': 'T010QS7UQNA'}, files: {}, json_body: None, headers: {'Content-Type': 'application/x-www-form-urlencoded', 'Authorization': '(redacted)', 'User-Agent': 'Python/3.12.0 slackclient/3.34.0 Darwin/23.4.0'}
2025-08-22 13:59:44,384 - slack_sdk.web.base_client - DEBUG - [base_client.py:546] - Received the following response - status: 200, headers: {'date': 'Fri, 22 Aug 2025 20:59:44 GMT', 'server': 'Apache', 'vary': 'Accept-Encoding', 'x-slack-req-id': '5b6664792c6a7e44bf1412ed2ffd79b1', 'x-content-type-options': 'nosniff', 'x-xss-protection': '0', 'pragma': 'no-cache', 'cache-control': 'private, no-cache, no-store, must-revalidate', 'expires': 'Sat, 26 Jul 1997 05:00:00 GMT', 'content-type': 'application/json; charset=utf-8', 'x-accepted-oauth-scopes': 'reactions:write', 'x-oauth-scopes': 'app_mentions:read,channels:history,chat:write,im:history,im:read,im:write,users:read,reactions:write,users:read.email', 'access-control-expose-headers': 'x-slack-req-id, retry-after', 'access-control-allow-headers': 'slack-route, x-slack-version-ts, x-b3-traceid, x-b3-spanid, x-b3-parentspanid, x-b3-sampled, x-b3-flags', 'strict-transport-security': 'max-age=31536000; includeSubDomains; preload', 'referrer-policy': 'no-referrer', 'x-slack-unique-id': 'aKjaQCgMTe1le_x7h94IlAAAADo', 'x-slack-backend': 'r', 'access-control-allow-origin': '*', 'content-length': '11', 'via': '1.1 slack-prod.tinyspeck.com, envoy-www-iad-yodcdryr,envoy-edge-pdx-asfdojeb', 'x-envoy-attempt-count': '1', 'x-envoy-upstream-service-time': '149', 'x-backend': 'main_normal main_canary_with_overflow main_control_with_overflow', 'x-server': 'slack-www-hhvm-main-iad-bphr', 'x-slack-shared-secret-outcome': 'no-match', 'x-edge-backend': 'envoy-www', 'timing-allow-origin': '*', 'x-slack-edge-shared-secret-outcome': 'no-match', 'connection': 'close'}, body: {"ok":true}
2025-08-22 13:59:44,385 - slack_sdk.web.base_client - DEBUG - [base_client.py:255] - Sending a request - url: https://slack.com/api/chat.postMessage, query_params: {}, body_params: {}, files: {}, json_body: {'channel': 'D09A0LFHK8R', 'text': '*Your Question:*\n> What are the steps to create a new page in Confluence?\n\n*Answer:*\nBased on the documents provided, I can give you information related to creating specific types of pages (like "how-to articles") using templates in Confluence, but not a general step-by-step guide for creating *any* new page from scratch.\n\nFor creating a "how-to article" in Confluence, the document "Source: https://paramount.atlassian.net/wiki/spaces/PLQA/pages/491952767" suggests the following instructions for creating content within such an article:\n\n*   *Instructions:*\n    1.  Add steps that are simple and self-contained.\n    2.  Add illustrations to instructions by typing `/image`.\n    3.  Stick to 3-5 steps per task to avoid overloading readers.\n\nAdditionally, another document (Source: https://paramount.atlassian.net/wiki/spaces/PLQA/pages/47749118) shows structured macros related to "create-from-template" for a "kb-how-to-article-blueprint" and a "file-list-blueprint," implying that you would likely initiate page creation through a template selection.\n\nI do not have information on the very first step of clicking a "create" button or similar general page creation process in Confluence.\n\n────────────────────────────────────────\n*📚 Sources:*\n1. <https://paramount.atlassian.net/wiki/spaces/PLQA/pages/491952767"|Source>\n2. <https://paramount.atlassian.net/wiki/spaces/PLQA/pages/47749118|Source>\n', 'thread_ts': '1755896347.270769', 'team_id': 'T010QS7UQNA'}, headers: {'Content-Type': 'application/json;charset=utf-8', 'Authorization': '(redacted)', 'User-Agent': 'Python/3.12.0 slackclient/3.34.0 Darwin/23.4.0'}
2025-08-22 13:59:44,791 - slack_sdk.web.base_client - DEBUG - [base_client.py:546] - Received the following response - status: 200, headers: {'date': 'Fri, 22 Aug 2025 20:59:44 GMT', 'server': 'Apache', 'vary': 'Accept-Encoding', 'x-slack-req-id': '5282575ae02d5a35d09c56e5b6d5f0da', 'x-content-type-options': 'nosniff', 'x-xss-protection': '0', 'pragma': 'no-cache', 'cache-control': 'private, no-cache, no-store, must-revalidate', 'expires': 'Sat, 26 Jul 1997 05:00:00 GMT', 'content-type': 'application/json; charset=utf-8', 'x-accepted-oauth-scopes': 'chat:write', 'x-oauth-scopes': 'app_mentions:read,channels:history,chat:write,im:history,im:read,im:write,users:read,reactions:write,users:read.email', 'access-control-expose-headers': 'x-slack-req-id, retry-after', 'access-control-allow-headers': 'slack-route, x-slack-version-ts, x-b3-traceid, x-b3-spanid, x-b3-parentspanid, x-b3-sampled, x-b3-flags', 'strict-transport-security': 'max-age=31536000; includeSubDomains; preload', 'referrer-policy': 'no-referrer', 'x-slack-unique-id': 'aKjaQE-bjvUSiBau2pd6mgAAEA8', 'x-slack-backend': 'r', 'access-control-allow-origin': '*', 'content-length': '4617', 'via': '1.1 slack-prod.tinyspeck.com, envoy-www-iad-tgajmpwc,envoy-edge-pdx-zcfgztlh', 'x-envoy-attempt-count': '1', 'x-envoy-upstream-service-time': '172', 'x-backend': 'main_normal main_canary_with_overflow main_control_with_overflow', 'x-server': 'slack-www-hhvm-main-iad-mbou', 'x-slack-shared-secret-outcome': 'no-match', 'x-edge-backend': 'envoy-www', 'timing-allow-origin': '*', 'x-slack-edge-shared-secret-outcome': 'no-match', 'connection': 'close'}, body: {"ok":true,"channel":"D09A0LFHK8R","ts":"1755896384.731759","message":{"user":"U099R6WTZ9S","type":"message","ts":"1755896384.731759","bot_id":"B099R6WTRU4","app_id":"A099LACAB2R","text":"*Your Question:*\n&gt; What are the steps to create a new page in Confluence?\n\n*Answer:*\nBased on the documents provided, I can give you information related to creating specific types of pages (like \"how-to articles\") using templates in Confluence, but not a general step-by-step guide for creating *any* new page from scratch.\n\nFor creating a \"how-to article\" in Confluence, the document \"Source: <https://paramount.atlassian.net/wiki/spaces/PLQA/pages/491952767>\" suggests the following instructions for creating content within such an article:\n\n*   *Instructions:*\n    1.  Add steps that are simple and self-contained.\n    2.  Add illustrations to instructions by typing `/image`.\n    3.  Stick to 3-5 steps per task to avoid overloading readers.\n\nAdditionally, another document (Source: <https://paramount.atlassian.net/wiki/spaces/PLQA/pages/47749118>) shows structured macros related to \"create-from-template\" for a \"kb-how-to-article-blueprint\" and a \"file-list-blueprint,\" implying that you would likely initiate page creation through a template selection.\n\nI do not have information on the very first step of clicking a \"create\" button or similar general page creation process in Confluence.\n\n────────────────────────────────────────\n*:books: Sources:*\n1. <https://paramount.atlassian.net/wiki/spaces/PLQA/pages/491952767\"|Source>\n2. <https://paramount.atlassian.net/wiki/spaces/PLQA/pages/47749118|Source>\n","team":"T010QS7UQNA","bot_profile":{"id":"B099R6WTRU4","app_id":"A099LACAB2R","user_id":"U099R6WTZ9S","name":"AutoBot","icons":{"image_36":"https://a.slack-edge.com/80588/img/plugins/app/bot_36.png","image_48":"https://a.slack-edge.com/80588/img/plugins/app/bot_48.png","image_72":"https://a.slack-edge.com/80588/img/plugins/app/service_72.png"},"deleted":false,"updated":1754677948,"team_id":"T010QS7UQNA"},"thread_ts":"1755896347.270769","parent_user_id":"U01RMTFMALF","blocks":[{"type":"rich_text","block_id":"VmOV","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Your Question:","style":{"bold":true}}]},{"type":"rich_text_quote","elements":[{"type":"text","text":"What are the steps to create a new page in Confluence?"}]},{"type":"rich_text_section","elements":[{"type":"text","text":"\n\n"},{"type":"text","text":"Answer:","style":{"bold":true}},{"type":"text","text":"\nBased on the documents provided, I can give you information related to creating specific types of pages (like \"how-to articles\") using templates in Confluence, but not a general step-by-step guide for creating "},{"type":"text","text":"any","style":{"bold":true}},{"type":"text","text":" new page from scratch.\n\nFor creating a \"how-to article\" in Confluence, the document \"Source: "},{"type":"link","url":"https://paramount.atlassian.net/wiki/spaces/PLQA/pages/491952767"},{"type":"text","text":"\" suggests the following instructions for creating content within such an article:\n\n*   "},{"type":"text","text":"Instructions:","style":{"bold":true}},{"type":"text","text":"\n    1.  Add steps that are simple and self-contained.\n    2.  Add illustrations to instructions by typing "},{"type":"text","text":"/image","style":{"code":true}},{"type":"text","text":".\n    3.  Stick to 3-5 steps per task to avoid overloading readers.\n\nAdditionally, another document (Source: "},{"type":"link","url":"https://paramount.atlassian.net/wiki/spaces/PLQA/pages/47749118"},{"type":"text","text":") shows structured macros related to \"create-from-template\" for a \"kb-how-to-article-blueprint\" and a \"file-list-blueprint,\" implying that you would likely initiate page creation through a template selection.\n\nI do not have information on the very first step of clicking a \"create\" button or similar general page creation process in Confluence.\n\n────────────────────────────────────────\n"},{"type":"emoji","name":"books","unicode":"1f4da","style":{"bold":true}},{"type":"text","text":" Sources:","style":{"bold":true}},{"type":"text","text":"\n1. "},{"type":"link","url":"https://paramount.atlassian.net/wiki/spaces/PLQA/pages/491952767&quot;","text":"Source"},{"type":"text","text":"\n2. "},{"type":"link","url":"https://paramount.atlassian.net/wiki/spaces/PLQA/pages/47749118","text":"Source"}]}]}]}}
2025-08-22 13:59:44,793 - __main__ - DEBUG - [main.py:574] - Cleaning up DM thread tracking...
2025-08-22 13:59:44,793 - utils - DEBUG - [utils.py:67] - Managing thread: D09A0LFHK8R:1755896347.270769, action: remove, user: U01RMTFMALF
2025-08-22 13:59:44,793 - utils - INFO - [utils.py:100] - Removed thread D09A0LFHK8R:1755896347.270769 from active tracking (remaining: 0)
2025-08-22 13:59:46,749 - slack_bolt.App - DEBUG - [client.py:235] - on_message invoked: (message: {"envelope_id":"a5b840c8-00cc-43b8-a500-444414686593","payload":{"token":"yq71khZBCyJF1Ri2hG5aNqr5","team_id":"T010QS7UQNA","enterprise_id":"ERV4P7NAD","context_team_id":null,"context_enterprise_id":"ERV4P7NAD","api_app_id":"A099LACAB2R","event":{"user":"U099R6WTZ9S","type":"message","ts":"1755896384.731759","bot_id":"B099R6WTRU4","app_id":"A099LACAB2R","text":"*Your Question:*\n&gt; What are the steps to create a new page in Confluence?\n\n*Answer:*\nBased on the documents provided, I can give you information related to creating specific types of pages (like \"how-to articles\") using templates in Confluence, but not a general step-by-step guide for creating *any* new page from scratch.\n\nFor creating a \"how-to article\" in Confluence, the document \"Source: <https:\/\/paramount.atlassian.net\/wiki\/spaces\/PLQA\/pages\/491952767>\" suggests the following instructions for creating content within such an article:\n\n*   *Instructions:*\n    1.  Add steps that are simple and self-contained.\n    2.  Add illustrations to instructions by typing `\/image`.\n    3.  Stick to 3-5 steps per task to avoid overloading readers.\n\nAdditionally, another document (Source: <https:\/\/paramount.atlassian.net\/wiki\/spaces\/PLQA\/pages\/47749118>) shows structured macros related to \"create-from-template\" for a \"kb-how-to-article-blueprint\" and a \"file-list-blueprint,\" implying that you would likely initiate page creation through a template selection.\n\nI do not have information on the very first step of clicking a \"create\" button or similar general page creation process in Confluence.\n\n\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\n*:books: Sources:*\n1. <https:\/\/paramount.atlassian.net\/wiki\/spaces\/PLQA\/pages\/491952767\"|Source>\n2. <https:\/\/paramount.atlassian.net\/wiki\/spaces\/PLQA\/pages\/47749118|Source>\n","team":"T010QS7UQNA","bot_profile":{"id":"B099R6WTRU4","deleted":false,"name":"AutoBot","updated":1754677948,"app_id":"A099LACAB2R","user_id":"U099R6WTZ9S","icons":{"image_36":"https:\/\/a.slack-edge.com\/80588\/img\/plugins\/app\/bot_36.png","image_48":"https:\/\/a.slack-edge.com\/80588\/img\/plugins\/app\/bot_48.png","image_72":"https:\/\/a.slack-edge.com\/80588\/img\/plugins\/app\/service_72.png"},"team_id":"T010QS7UQNA"},"thread_ts":"1755896347.270769","parent_user_id":"U01RMTFMALF","blocks":[{"type":"rich_text","block_id":"sfK","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Your Question:","style":{"bold":true}}]},{"type":"rich_text_quote","elements":[{"type":"text","text":"What are the steps to create a new page in Confluence?"}]},{"type":"rich_text_section","elements":[{"type":"text","text":"\n\n"},{"type":"text","text":"Answer:","style":{"bold":true}},{"type":"text","text":"\nBased on the documents provided, I can give you information related to creating specific types of pages (like \"how-to articles\") using templates in Confluence, but not a general step-by-step guide for creating "},{"type":"text","text":"any","style":{"bold":true}},{"type":"text","text":" new page from scratch.\n\nFor creating a \"how-to article\" in Confluence, the document \"Source: "},{"type":"link","url":"https:\/\/paramount.atlassian.net\/wiki\/spaces\/PLQA\/pages\/491952767"},{"type":"text","text":"\" suggests the following instructions for creating content within such an article:\n\n*   "},{"type":"text","text":"Instructions:","style":{"bold":true}},{"type":"text","text":"\n    1.  Add steps that are simple and self-contained.\n    2.  Add illustrations to instructions by typing "},{"type":"text","text":"\/image","style":{"code":true}},{"type":"text","text":".\n    3.  Stick to 3-5 steps per task to avoid overloading readers.\n\nAdditionally, another document (Source: "},{"type":"link","url":"https:\/\/paramount.atlassian.net\/wiki\/spaces\/PLQA\/pages\/47749118"},{"type":"text","text":") shows structured macros related to \"create-from-template\" for a \"kb-how-to-article-blueprint\" and a \"file-list-blueprint,\" implying that you would likely initiate page creation through a template selection.\n\nI do not have information on the very first step of clicking a \"create\" button or similar general page creation process in Confluence.\n\n\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\n"},{"type":"emoji","name":"books","unicode":"1f4da","style":{"bold":true}},{"type":"text","text":" Sources:","style":{"bold":true}},{"type":"text","text":"\n1. "},{"type":"link","url":"https:\/\/paramount.atlassian.net\/wiki\/spaces\/PLQA\/pages\/491952767&quot;","text":"Source"},{"type":"text","text":"\n2. "},{"type":"link","url":"https:\/\/paramount.atlassian.net\/wiki\/spaces\/PLQA\/pages\/47749118","text":"Source"}]}]}],"channel":"D09A0LFHK8R","event_ts":"1755896384.731759","channel_type":"im"},"type":"event_callback","event_id":"Ev09BJ5UABSP","event_time":1755896384,"authorizations":[{"enterprise_id":"ERV4P7NAD","team_id":"T010QS7UQNA","user_id":"U099R6WTZ9S","is_bot":true,"is_enterprise_install":false}],"is_ext_shared_channel":false,"event_context":"4-eyJldCI6Im1lc3NhZ2UiLCJ0aWQiOiJUMDEwUVM3VVFOQSIsImFpZCI6IkEwOTlMQUNBQjJSIiwiY2lkIjoiRDA5QTBMRkhLOFIifQ"},"type":"events_api","accepts_response_payload":false,"retry_attempt":0,"retry_reason":""})
2025-08-22 13:59:46,749 - slack_bolt.App - DEBUG - [client.py:99] - A new message enqueued (current queue size: 1)
2025-08-22 13:59:46,749 - slack_bolt.App - DEBUG - [client.py:105] - A message dequeued (current queue size: 0)
2025-08-22 13:59:46,749 - slack_bolt.App - DEBUG - [client.py:125] - Message processing started (type: events_api, envelope_id: a5b840c8-00cc-43b8-a500-444414686593)
2025-08-22 13:59:46,749 - slack_bolt.App - DEBUG - [app.py:476] - Applying slack_bolt.middleware.ssl_check.ssl_check.SslCheck
2025-08-22 13:59:46,749 - slack_bolt.App - DEBUG - [app.py:476] - Applying slack_bolt.middleware.request_verification.request_verification.RequestVerification
2025-08-22 13:59:46,749 - slack_bolt.App - DEBUG - [app.py:476] - Applying slack_bolt.middleware.authorization.single_team_authorization.SingleTeamAuthorization
2025-08-22 13:59:46,749 - slack_bolt.App - DEBUG - [app.py:476] - Applying slack_bolt.middleware.ignoring_self_events.ignoring_self_events.IgnoringSelfEvents
2025-08-22 13:59:46,750 - slack_bolt.IgnoringSelfEvents - DEBUG - [ignoring_self_events.py:60] - Skipped self event: {'user': 'U099R6WTZ9S', 'type': 'message', 'ts': '1755896384.731759', 'bot_id': 'B099R6WTRU4', 'app_id': 'A099LACAB2R', 'text': '*Your Question:*\n&gt; What are the steps to create a new page in Confluence?\n\n*Answer:*\nBased on the documents provided, I can give you information related to creating specific types of pages (like "how-to articles") using templates in Confluence, but not a general step-by-step guide for creating *any* new page from scratch.\n\nFor creating a "how-to article" in Confluence, the document "Source: <https://paramount.atlassian.net/wiki/spaces/PLQA/pages/491952767>" suggests the following instructions for creating content within such an article:\n\n*   *Instructions:*\n    1.  Add steps that are simple and self-contained.\n    2.  Add illustrations to instructions by typing `/image`.\n    3.  Stick to 3-5 steps per task to avoid overloading readers.\n\nAdditionally, another document (Source: <https://paramount.atlassian.net/wiki/spaces/PLQA/pages/47749118>) shows structured macros related to "create-from-template" for a "kb-how-to-article-blueprint" and a "file-list-blueprint," implying that you would likely initiate page creation through a template selection.\n\nI do not have information on the very first step of clicking a "create" button or similar general page creation process in Confluence.\n\n────────────────────────────────────────\n*:books: Sources:*\n1. <https://paramount.atlassian.net/wiki/spaces/PLQA/pages/491952767"|Source>\n2. <https://paramount.atlassian.net/wiki/spaces/PLQA/pages/47749118|Source>\n', 'team': 'T010QS7UQNA', 'bot_profile': {'id': 'B099R6WTRU4', 'deleted': False, 'name': 'AutoBot', 'updated': 1754677948, 'app_id': 'A099LACAB2R', 'user_id': 'U099R6WTZ9S', 'icons': {'image_36': 'https://a.slack-edge.com/80588/img/plugins/app/bot_36.png', 'image_48': 'https://a.slack-edge.com/80588/img/plugins/app/bot_48.png', 'image_72': 'https://a.slack-edge.com/80588/img/plugins/app/service_72.png'}, 'team_id': 'T010QS7UQNA'}, 'thread_ts': '1755896347.270769', 'parent_user_id': 'U01RMTFMALF', 'blocks': [{'type': 'rich_text', 'block_id': 'sfK', 'elements': [{'type': 'rich_text_section', 'elements': [{'type': 'text', 'text': 'Your Question:', 'style': {'bold': True}}]}, {'type': 'rich_text_quote', 'elements': [{'type': 'text', 'text': 'What are the steps to create a new page in Confluence?'}]}, {'type': 'rich_text_section', 'elements': [{'type': 'text', 'text': '\n\n'}, {'type': 'text', 'text': 'Answer:', 'style': {'bold': True}}, {'type': 'text', 'text': '\nBased on the documents provided, I can give you information related to creating specific types of pages (like "how-to articles") using templates in Confluence, but not a general step-by-step guide for creating '}, {'type': 'text', 'text': 'any', 'style': {'bold': True}}, {'type': 'text', 'text': ' new page from scratch.\n\nFor creating a "how-to article" in Confluence, the document "Source: '}, {'type': 'link', 'url': 'https://paramount.atlassian.net/wiki/spaces/PLQA/pages/491952767'}, {'type': 'text', 'text': '" suggests the following instructions for creating content within such an article:\n\n*   '}, {'type': 'text', 'text': 'Instructions:', 'style': {'bold': True}}, {'type': 'text', 'text': '\n    1.  Add steps that are simple and self-contained.\n    2.  Add illustrations to instructions by typing '}, {'type': 'text', 'text': '/image', 'style': {'code': True}}, {'type': 'text', 'text': '.\n    3.  Stick to 3-5 steps per task to avoid overloading readers.\n\nAdditionally, another document (Source: '}, {'type': 'link', 'url': 'https://paramount.atlassian.net/wiki/spaces/PLQA/pages/47749118'}, {'type': 'text', 'text': ') shows structured macros related to "create-from-template" for a "kb-how-to-article-blueprint" and a "file-list-blueprint," implying that you would likely initiate page creation through a template selection.\n\nI do not have information on the very first step of clicking a "create" button or similar general page creation process in Confluence.\n\n────────────────────────────────────────\n'}, {'type': 'emoji', 'name': 'books', 'unicode': '1f4da', 'style': {'bold': True}}, {'type': 'text', 'text': ' Sources:', 'style': {'bold': True}}, {'type': 'text', 'text': '\n1. '}, {'type': 'link', 'url': 'https://paramount.atlassian.net/wiki/spaces/PLQA/pages/491952767&quot;', 'text': 'Source'}, {'type': 'text', 'text': '\n2. '}, {'type': 'link', 'url': 'https://paramount.atlassian.net/wiki/spaces/PLQA/pages/47749118', 'text': 'Source'}]}]}], 'channel': 'D09A0LFHK8R', 'event_ts': '1755896384.731759', 'channel_type': 'im'}
2025-08-22 13:59:46,750 - slack_bolt.App - DEBUG - [client.py:200] - Sending a message (session id: e3fa3470-3631-40f6-94b2-522059b3b72b, message: {"envelope_id": "a5b840c8-00cc-43b8-a500-444414686593"})
2025-08-22 13:59:46,750 - slack_bolt.App - DEBUG - [internals.py:41] - Response time: 0 milliseconds
2025-08-22 13:59:46,750 - slack_bolt.App - DEBUG - [client.py:150] - Message processing completed (type: events_api, envelope_id: a5b840c8-00cc-43b8-a500-444414686593)
2025-08-22 14:00:46,920 - slack_bolt.App - DEBUG - [client.py:235] - on_message invoked: (message: {"envelope_id":"ec8e7143-6a69-4f44-a95c-034edd889ebb","payload":{"token":"yq71khZBCyJF1Ri2hG5aNqr5","team_id":"T010QS7UQNA","enterprise_id":"ERV4P7NAD","context_team_id":null,"context_enterprise_id":"ERV4P7NAD","api_app_id":"A099LACAB2R","event":{"user":"U01RMTFMALF","type":"message","ts":"1755896446.344379","client_msg_id":"7681cad9-8e64-4745-ab4f-7e4e66b7d3cc","text":"How can i run an automated test on a local Android phone?","blocks":[{"type":"rich_text","block_id":"vQwBP","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"How can i run an automated test on a local Android phone?"}]}]}],"channel":"D09A0LFHK8R","event_ts":"1755896446.344379","channel_type":"im"},"type":"event_callback","event_id":"Ev09BMMCPRGV","event_time":1755896446,"authorizations":[{"enterprise_id":"ERV4P7NAD","team_id":"T010QS7UQNA","user_id":"U099R6WTZ9S","is_bot":true,"is_enterprise_install":false}],"is_ext_shared_channel":false,"event_context":"4-eyJldCI6Im1lc3NhZ2UiLCJ0aWQiOiJUMDEwUVM3VVFOQSIsImFpZCI6IkEwOTlMQUNBQjJSIiwiY2lkIjoiRDA5QTBMRkhLOFIifQ"},"type":"events_api","accepts_response_payload":false,"retry_attempt":0,"retry_reason":""})
2025-08-22 14:00:46,921 - slack_bolt.App - DEBUG - [client.py:99] - A new message enqueued (current queue size: 1)
2025-08-22 14:00:46,922 - slack_bolt.App - DEBUG - [client.py:105] - A message dequeued (current queue size: 0)
2025-08-22 14:00:46,922 - slack_bolt.App - DEBUG - [client.py:125] - Message processing started (type: events_api, envelope_id: ec8e7143-6a69-4f44-a95c-034edd889ebb)
2025-08-22 14:00:46,923 - slack_bolt.App - DEBUG - [app.py:476] - Applying slack_bolt.middleware.ssl_check.ssl_check.SslCheck
2025-08-22 14:00:46,923 - slack_bolt.App - DEBUG - [app.py:476] - Applying slack_bolt.middleware.request_verification.request_verification.RequestVerification
2025-08-22 14:00:46,923 - slack_bolt.App - DEBUG - [app.py:476] - Applying slack_bolt.middleware.authorization.single_team_authorization.SingleTeamAuthorization
2025-08-22 14:00:46,923 - slack_bolt.App - DEBUG - [app.py:476] - Applying slack_bolt.middleware.ignoring_self_events.ignoring_self_events.IgnoringSelfEvents
2025-08-22 14:00:46,923 - slack_bolt.App - DEBUG - [app.py:476] - Applying slack_bolt.middleware.url_verification.url_verification.UrlVerification
2025-08-22 14:00:46,923 - slack_bolt.App - DEBUG - [app.py:500] - Checking listener: handle_app_mentions ...
2025-08-22 14:00:46,923 - slack_bolt.App - DEBUG - [app.py:500] - Checking listener: help_message ...
2025-08-22 14:00:46,923 - slack_bolt.App - DEBUG - [app.py:500] - Checking listener: handle_dm_messages ...
2025-08-22 14:00:46,924 - slack_bolt.App - DEBUG - [app.py:522] - Running listener: handle_dm_messages ...
2025-08-22 14:00:46,924 - slack_bolt.App - DEBUG - [thread_runner.py:198] - Responding with status: 200 body: "" (0 millis)
2025-08-22 14:00:46,924 - __main__ - INFO - [main.py:430] - === DM MESSAGE EVENT RECEIVED ===
2025-08-22 14:00:46,924 - slack_bolt.App - DEBUG - [client.py:200] - Sending a message (session id: e3fa3470-3631-40f6-94b2-522059b3b72b, message: {"envelope_id": "ec8e7143-6a69-4f44-a95c-034edd889ebb"})
2025-08-22 14:00:46,924 - __main__ - DEBUG - [main.py:431] - Full event body: {'token': 'yq71khZBCyJF1Ri2hG5aNqr5', 'team_id': 'T010QS7UQNA', 'enterprise_id': 'ERV4P7NAD', 'context_team_id': None, 'context_enterprise_id': 'ERV4P7NAD', 'api_app_id': 'A099LACAB2R', 'event': {'user': 'U01RMTFMALF', 'type': 'message', 'ts': '1755896446.344379', 'client_msg_id': '7681cad9-8e64-4745-ab4f-7e4e66b7d3cc', 'text': 'How can i run an automated test on a local Android phone?', 'blocks': [{'type': 'rich_text', 'block_id': 'vQwBP', 'elements': [{'type': 'rich_text_section', 'elements': [{'type': 'text', 'text': 'How can i run an automated test on a local Android phone?'}]}]}], 'channel': 'D09A0LFHK8R', 'event_ts': '1755896446.344379', 'channel_type': 'im'}, 'type': 'event_callback', 'event_id': 'Ev09BMMCPRGV', 'event_time': 1755896446, 'authorizations': [{'enterprise_id': 'ERV4P7NAD', 'team_id': 'T010QS7UQNA', 'user_id': 'U099R6WTZ9S', 'is_bot': True, 'is_enterprise_install': False}], 'is_ext_shared_channel': False, 'event_context': '4-eyJldCI6Im1lc3NhZ2UiLCJ0aWQiOiJUMDEwUVM3VVFOQSIsImFpZCI6IkEwOTlMQUNBQjJSIiwiY2lkIjoiRDA5QTBMRkhLOFIifQ'}
2025-08-22 14:00:46,924 - slack_bolt.App - DEBUG - [internals.py:41] - Response time: 1 milliseconds
2025-08-22 14:00:46,924 - __main__ - INFO - [main.py:440] - DM Event details: channel=D09A0LFHK8R, user=U01RMTFMALF, ts=1755896446.344379
2025-08-22 14:00:46,925 - slack_bolt.App - DEBUG - [client.py:150] - Message processing completed (type: events_api, envelope_id: ec8e7143-6a69-4f44-a95c-034edd889ebb)
2025-08-22 14:00:46,925 - __main__ - DEBUG - [main.py:441] - DM Event text: How can i run an automated test on a local Android phone?
2025-08-22 14:00:46,925 - utils - DEBUG - [utils.py:27] - Checking message processing: channel=D09A0LFHK8R, ts=1755896446.344379, text='How can i run an automated test on a local Android...'
2025-08-22 14:00:46,925 - utils - DEBUG - [utils.py:31] - Message hash: e671ea4882f33400fcf6df0322d50843
2025-08-22 14:00:46,925 - utils - DEBUG - [utils.py:42] - Cleaning up 2 expired message entries
2025-08-22 14:00:46,925 - utils - DEBUG - [utils.py:53] - Added message to processing cache (total entries: 1)
2025-08-22 14:00:46,925 - __main__ - DEBUG - [main.py:454] - Bot check: bot_id=None, user_id=U01RMTFMALF
2025-08-22 14:00:46,925 - __main__ - DEBUG - [main.py:459] - Question received: 'How can i run an automated test on a local Android phone?'
2025-08-22 14:00:46,925 - __main__ - DEBUG - [main.py:465] - Checking user access for DM...
2025-08-22 14:00:46,925 - auth.slack_user_info - DEBUG - [slack_user_info.py:44] - Using cached email for user U01RMTFMALF
2025-08-22 14:00:46,926 - auth.email_whitelist - DEBUG - [email_whitelist.py:57] - Email access granted: alexandr.popov@paramount.com
2025-08-22 14:00:46,926 - __main__ - INFO - [main.py:118] - Access granted to user U01RMTFMALF with email alexandr.popov@paramount.com
2025-08-22 14:00:46,926 - __main__ - DEBUG - [main.py:471] - User access check passed for DM
2025-08-22 14:00:46,926 - __main__ - INFO - [main.py:473] - Processing DM question from user U01RMTFMALF: How can i run an automated test on a local Android phone?
2025-08-22 14:00:46,926 - __main__ - DEBUG - [main.py:476] - Starting DM processing...
2025-08-22 14:00:46,926 - __main__ - DEBUG - [main.py:479] - Checking if 'how can i run an automated test on a local android phone?' is an admin command in DM
2025-08-22 14:00:46,926 - __main__ - DEBUG - [main.py:515] - Checking if DM thread is already being processed...
2025-08-22 14:00:46,926 - utils - DEBUG - [utils.py:67] - Managing thread: D09A0LFHK8R:1755896446.344379, action: add, user: U01RMTFMALF
2025-08-22 14:00:46,926 - utils - INFO - [utils.py:94] - Added thread D09A0LFHK8R:1755896446.344379 to active tracking (total: 1)
2025-08-22 14:00:46,926 - __main__ - DEBUG - [main.py:520] - DM thread management check passed
2025-08-22 14:00:46,926 - slack_sdk.web.base_client - DEBUG - [base_client.py:255] - Sending a request - url: https://slack.com/api/reactions.add, query_params: {}, body_params: {'channel': 'D09A0LFHK8R', 'name': 'thinking_face', 'timestamp': '1755896446.344379', 'team_id': 'T010QS7UQNA'}, files: {}, json_body: None, headers: {'Content-Type': 'application/x-www-form-urlencoded', 'Authorization': '(redacted)', 'User-Agent': 'Python/3.12.0 slackclient/3.34.0 Darwin/23.4.0'}
2025-08-22 14:00:47,285 - slack_sdk.web.base_client - DEBUG - [base_client.py:546] - Received the following response - status: 200, headers: {'date': 'Fri, 22 Aug 2025 21:00:47 GMT', 'server': 'Apache', 'vary': 'Accept-Encoding', 'x-slack-req-id': '777ecce501e266615f663ea8f07823d1', 'x-content-type-options': 'nosniff', 'x-xss-protection': '0', 'pragma': 'no-cache', 'cache-control': 'private, no-cache, no-store, must-revalidate', 'expires': 'Sat, 26 Jul 1997 05:00:00 GMT', 'content-type': 'application/json; charset=utf-8', 'x-accepted-oauth-scopes': 'reactions:write', 'x-oauth-scopes': 'app_mentions:read,channels:history,chat:write,im:history,im:read,im:write,users:read,reactions:write,users:read.email', 'access-control-expose-headers': 'x-slack-req-id, retry-after', 'access-control-allow-headers': 'slack-route, x-slack-version-ts, x-b3-traceid, x-b3-spanid, x-b3-parentspanid, x-b3-sampled, x-b3-flags', 'strict-transport-security': 'max-age=31536000; includeSubDomains; preload', 'referrer-policy': 'no-referrer', 'x-slack-unique-id': 'aKjaf0L65ZkDVEFrlZ6jRwAAEAU', 'x-slack-backend': 'r', 'access-control-allow-origin': '*', 'content-length': '11', 'via': '1.1 slack-prod.tinyspeck.com, envoy-www-iad-aaamiszk,envoy-edge-pdx-ribwmmbf', 'x-envoy-attempt-count': '1', 'x-envoy-upstream-service-time': '130', 'x-backend': 'main_normal main_canary_with_overflow main_control_with_overflow', 'x-server': 'slack-www-hhvm-main-iad-xykk', 'x-slack-shared-secret-outcome': 'no-match', 'x-edge-backend': 'envoy-www', 'timing-allow-origin': '*', 'x-slack-edge-shared-secret-outcome': 'no-match', 'connection': 'close'}, body: {"ok":true}
2025-08-22 14:00:47,286 - __main__ - INFO - [main.py:537] - Processing DM question from <@U01RMTFMALF>: How can i run an automated test on a local Android phone?
2025-08-22 14:00:47,286 - __main__ - INFO - [main.py:541] - Sending DM request to DIG AI...
2025-08-22 14:00:47,286 - dig_connector - INFO - [dig_connector.py:134] - Generating response for query: 'How can i run an automated test on a local Android phone?' with 0 chunks
2025-08-22 14:00:47,286 - dig_connector - DEBUG - [dig_connector.py:138] - Formatted context length: 0
2025-08-22 14:00:47,286 - dig_connector - INFO - [dig_connector.py:141] - No context available, using direct query
2025-08-22 14:00:47,286 - dig_connector - INFO - [dig_connector.py:150] - Sending prompt to DIG platform...
2025-08-22 14:00:47,287 - dig_connector - INFO - [dig_connector.py:121] - Sending message to DIG API - URL: https://ai.digdev.cbsicloud.com/fastapi/chats/883/generate
2025-08-22 14:00:47,287 - dig_connector - DEBUG - [dig_connector.py:122] - Message payload: {'model_id': 42, 'message_text': 'How can i run an automated test on a local Android phone?', 'history': [{'role': 'user', 'content': 'How can i run an automated test on a local Android phone?'}]}
2025-08-22 14:00:58,293 - urllib3.connectionpool - DEBUG - [connectionpool.py:549] - https://ai.digdev.cbsicloud.com:443 "POST /fastapi/chats/883/generate HTTP/1.1" 200 2704
2025-08-22 14:00:58,295 - dig_connector - DEBUG - [dig_connector.py:125] - DIG API response: status=200
2025-08-22 14:00:58,295 - dig_connector - DEBUG - [dig_connector.py:129] - DIG API response data: {'message_text': 'To run an automated test on a local Android phone, you\'ll generally follow these steps:\n\n1.  **Environment Setup:**\n    *   Ensure your Run Configuration for Android Emulator has the `$ANDROID_HOME` environment variable set and included in the path. (Source: https://paramount.atlassian.net/wiki/spaces/PLQA/pages/47713566)\n    *   The test class (e.g., `SampleTest.java` mentioned in Source: https://paramount.atlassian.net/wiki/spaces/PLQA/pages/47711460) will likely handle starting and stopping the Appium server and launching the Android emulator if the environment is set to "local". (Source: https://paramount.atlassian.net/wiki/spaces/PLQA/pages/47711460)\n\n2.  **Configuration (Desired Capabilities/Properties):**\n    *   Update the desired capabilities in your `.config` file (located under the `mqe-hob-mobile-tests` directory). (Source: https://paramount.atlassian.net/wiki/spaces/PLQA/pages/47720266)\n    *   Set the `Platform` to `ANDROID`.\n    *   Set `Environment` to `local`.\n    *   Add `DebugDeviceID` with the device\'s IP address if you are running on a real mobile device. (Source: https://paramount.atlassian.net/wiki/spaces/PLQA/pages/47720266)\n    *   You can also pass mobile local Android run configuration arguments such as:\n        *   `-Ddriver=android`\n        *   `-DplatformName=Android`\n        *   `-DplatformVersion` (e.g., `11.0`)\n        *   `-DdeviceName` (e.g., `"Google Pixel 2XL"`)\n        *   `-Dapp="/pathToPackage/your_app.apk"` (path to your Android application package)\n        *   `-Dudid` (set this if running on a real mobile device only). (Source: https://paramount.atlassian.net/wiki/spaces/PLQA/pages/47711460)\n\n3.  **Run the Test:**\n    *   Connect to VPN if required (e.g., `connect.cbsinteractive.com/VPNFT`). (Source: https://paramount.atlassian.net/wiki/spaces/PLQA/pages/47720266)\n    *   Download and run the latest version of the Synergy server `.jar` file (Websocket). (Source: https://paramount.atlassian.net/wiki/spaces/PLQA/pages/47720266)\n    *   To run the test from the terminal, enter a Maven command like this in your IDE terminal window:\n        ```\n        mvn clean test -pl mqe-hob-mobile-tests -am -Dgroups=Your test case number or tag\n        ```\n        (Source: https://paramount.atlassian.net/wiki/spaces/PLQA/pages/47720266)\n    *   Alternatively, you can run from `TestNGSuiteConfig.xml` by navigating to the file, right-clicking, and selecting "run TestNGSuiteConfig.xml". Provide the necessary test case ID or tag name in the `include name` section. (Source: https://paramount.atlassian.net/wiki/spaces/PLQA/pages/47720266)', 'requires_approval': False, 'execution_id': 1586}
2025-08-22 14:00:58,296 - dig_connector - INFO - [dig_connector.py:154] - Extracting response content...
2025-08-22 14:00:58,296 - dig_connector - DEBUG - [dig_connector.py:221] - Found message_text in response
2025-08-22 14:00:58,296 - dig_connector - INFO - [dig_connector.py:157] - Successfully generated response (length: 2604)
2025-08-22 14:00:58,296 - __main__ - INFO - [main.py:544] - Received DM response from DIG AI
2025-08-22 14:00:58,296 - __main__ - DEBUG - [main.py:545] - DIG AI DM response: To run an automated test on a local Android phone, you'll generally follow these steps:

1.  **Environment Setup:**
    *   Ensure your Run Configuration for Android Emulator has the `$ANDROID_HOME` environment variable set and included in the path. (Source: https://paramount.atlassian.net/wiki/spaces/PLQA/pages/47713566)
    *   The test class (e.g., `SampleTest.java` mentioned in Source: https://paramount.atlassian.net/wiki/spaces/PLQA/pages/47711460) will likely handle starting and stopping the Appium server and launching the Android emulator if the environment is set to "local". (Source: https://paramount.atlassian.net/wiki/spaces/PLQA/pages/47711460)

2.  **Configuration (Desired Capabilities/Properties):**
    *   Update the desired capabilities in your `.config` file (located under the `mqe-hob-mobile-tests` directory). (Source: https://paramount.atlassian.net/wiki/spaces/PLQA/pages/47720266)
    *   Set the `Platform` to `ANDROID`.
    *   Set `Environment` to `local`.
    *   Add `DebugDeviceID` with the device's IP address if you are running on a real mobile device. (Source: https://paramount.atlassian.net/wiki/spaces/PLQA/pages/47720266)
    *   You can also pass mobile local Android run configuration arguments such as:
        *   `-Ddriver=android`
        *   `-DplatformName=Android`
        *   `-DplatformVersion` (e.g., `11.0`)
        *   `-DdeviceName` (e.g., `"Google Pixel 2XL"`)
        *   `-Dapp="/pathToPackage/your_app.apk"` (path to your Android application package)
        *   `-Dudid` (set this if running on a real mobile device only). (Source: https://paramount.atlassian.net/wiki/spaces/PLQA/pages/47711460)

3.  **Run the Test:**
    *   Connect to VPN if required (e.g., `connect.cbsinteractive.com/VPNFT`). (Source: https://paramount.atlassian.net/wiki/spaces/PLQA/pages/47720266)
    *   Download and run the latest version of the Synergy server `.jar` file (Websocket). (Source: https://paramount.atlassian.net/wiki/spaces/PLQA/pages/47720266)
    *   To run the test from the terminal, enter a Maven command like this in your IDE terminal window:
        ```
        mvn clean test -pl mqe-hob-mobile-tests -am -Dgroups=Your test case number or tag
        ```
        (Source: https://paramount.atlassian.net/wiki/spaces/PLQA/pages/47720266)
    *   Alternatively, you can run from `TestNGSuiteConfig.xml` by navigating to the file, right-clicking, and selecting "run TestNGSuiteConfig.xml". Provide the necessary test case ID or tag name in the `include name` section. (Source: https://paramount.atlassian.net/wiki/spaces/PLQA/pages/47720266)
2025-08-22 14:00:58,297 - __main__ - DEBUG - [main.py:549] - Formatted DM response: *Your Question:*
> How can i run an automated test on a local Android phone?

*Answer:*
To run an automated test on a local Android phone, you'll generally follow these steps:

1.  *Environment Setup:*
    *   Ensure your Run Configuration for Android Emulator has the `$ANDROID_HOME` environment variable set and included in the path. (Source: https://paramount.atlassian.net/wiki/spaces/PLQA/pages/47713566)
    *   The test class (e.g., `SampleTest.java` mentioned in Source: https://paramount.atlassian.net/wiki/spaces/PLQA/pages/47711460) will likely handle starting and stopping the Appium server and launching the Android emulator if the environment is set to "local". (Source: https://paramount.atlassian.net/wiki/spaces/PLQA/pages/47711460)

2.  *Configuration (Desired Capabilities/Properties):*
    *   Update the desired capabilities in your `.config` file (located under the `mqe-hob-mobile-tests` directory). (Source: https://paramount.atlassian.net/wiki/spaces/PLQA/pages/47720266)
    *   Set the `Platform` to `ANDROID`.
    *   Set `Environment` to `local`.
    *   Add `DebugDeviceID` with the device's IP address if you are running on a real mobile device. (Source: https://paramount.atlassian.net/wiki/spaces/PLQA/pages/47720266)
    *   You can also pass mobile local Android run configuration arguments such as:
        *   `-Ddriver=android`
        *   `-DplatformName=Android`
        *   `-DplatformVersion` (e.g., `11.0`)
        *   `-DdeviceName` (e.g., `"Google Pixel 2XL"`)
        *   `-Dapp="/pathToPackage/your_app.apk"` (path to your Android application package)
        *   `-Dudid` (set this if running on a real mobile device only). (Source: https://paramount.atlassian.net/wiki/spaces/PLQA/pages/47711460)

3.  *Run the Test:*
    *   Connect to VPN if required (e.g., `connect.cbsinteractive.com/VPNFT`). (Source: https://paramount.atlassian.net/wiki/spaces/PLQA/pages/47720266)
    *   Download and run the latest version of the Synergy server `.jar` file (Websocket). (Source: https://paramount.atlassian.net/wiki/spaces/PLQA/pages/47720266)
    *   To run the test from the terminal, enter a Maven command like this in your IDE terminal window:
        ```
        mvn clean test -pl mqe-hob-mobile-tests -am -Dgroups=Your test case number or tag
        ```
        (Source: https://paramount.atlassian.net/wiki/spaces/PLQA/pages/47720266)
    *   Alternatively, you can run from `TestNGSuiteConfig.xml` by navigating to the file, right-clicking, and selecting "run TestNGSuiteConfig.xml". Provide the necessary test case ID or tag name in the `include name` section. (Source: https://paramount.atlassian.net/wiki/spaces/PLQA/pages/47720266)

────────────────────────────────────────
*📚 Sources:*
1. <https://paramount.atlassian.net/wiki/spaces/PLQA/pages/47713566|Source>
2. <https://paramount.atlassian.net/wiki/spaces/PLQA/pages/47711460|Source>
3. <https://paramount.atlassian.net/wiki/spaces/PLQA/pages/47720266|Source>

2025-08-22 14:00:58,297 - slack_sdk.web.base_client - DEBUG - [base_client.py:255] - Sending a request - url: https://slack.com/api/reactions.remove, query_params: {}, body_params: {'name': 'thinking_face', 'channel': 'D09A0LFHK8R', 'timestamp': '1755896446.344379', 'team_id': 'T010QS7UQNA'}, files: {}, json_body: None, headers: {'Content-Type': 'application/x-www-form-urlencoded', 'Authorization': '(redacted)', 'User-Agent': 'Python/3.12.0 slackclient/3.34.0 Darwin/23.4.0'}
2025-08-22 14:00:58,725 - slack_sdk.web.base_client - DEBUG - [base_client.py:546] - Received the following response - status: 200, headers: {'date': 'Fri, 22 Aug 2025 21:00:58 GMT', 'server': 'Apache', 'vary': 'Accept-Encoding', 'x-slack-req-id': '5309f1096989407031cc39dc8772c6bc', 'x-content-type-options': 'nosniff', 'x-xss-protection': '0', 'pragma': 'no-cache', 'cache-control': 'private, no-cache, no-store, must-revalidate', 'expires': 'Sat, 26 Jul 1997 05:00:00 GMT', 'content-type': 'application/json; charset=utf-8', 'x-accepted-oauth-scopes': 'reactions:write', 'x-oauth-scopes': 'app_mentions:read,channels:history,chat:write,im:history,im:read,im:write,users:read,reactions:write,users:read.email', 'access-control-expose-headers': 'x-slack-req-id, retry-after', 'access-control-allow-headers': 'slack-route, x-slack-version-ts, x-b3-traceid, x-b3-spanid, x-b3-parentspanid, x-b3-sampled, x-b3-flags', 'strict-transport-security': 'max-age=31536000; includeSubDomains; preload', 'referrer-policy': 'no-referrer', 'x-slack-unique-id': 'aKjairDy7S6xXvNFWunJlAAAADQ', 'x-slack-backend': 'r', 'access-control-allow-origin': '*', 'content-length': '11', 'via': '1.1 slack-prod.tinyspeck.com, envoy-www-iad-ecazeosk,envoy-edge-pdx-sossozkq', 'x-envoy-attempt-count': '1', 'x-envoy-upstream-service-time': '159', 'x-backend': 'main_normal main_canary_with_overflow main_control_with_overflow', 'x-server': 'slack-www-hhvm-main-iad-jwuw', 'x-slack-shared-secret-outcome': 'no-match', 'x-edge-backend': 'envoy-www', 'timing-allow-origin': '*', 'x-slack-edge-shared-secret-outcome': 'no-match', 'connection': 'close'}, body: {"ok":true}
2025-08-22 14:00:58,725 - slack_sdk.web.base_client - DEBUG - [base_client.py:255] - Sending a request - url: https://slack.com/api/chat.postMessage, query_params: {}, body_params: {}, files: {}, json_body: {'channel': 'D09A0LFHK8R', 'text': '*Your Question:*\n> How can i run an automated test on a local Android phone?\n\n*Answer:*\nTo run an automated test on a local Android phone, you\'ll generally follow these steps:\n\n1.  *Environment Setup:*\n    *   Ensure your Run Configuration for Android Emulator has the `$ANDROID_HOME` environment variable set and included in the path. (Source: https://paramount.atlassian.net/wiki/spaces/PLQA/pages/47713566)\n    *   The test class (e.g., `SampleTest.java` mentioned in Source: https://paramount.atlassian.net/wiki/spaces/PLQA/pages/47711460) will likely handle starting and stopping the Appium server and launching the Android emulator if the environment is set to "local". (Source: https://paramount.atlassian.net/wiki/spaces/PLQA/pages/47711460)\n\n2.  *Configuration (Desired Capabilities/Properties):*\n    *   Update the desired capabilities in your `.config` file (located under the `mqe-hob-mobile-tests` directory). (Source: https://paramount.atlassian.net/wiki/spaces/PLQA/pages/47720266)\n    *   Set the `Platform` to `ANDROID`.\n    *   Set `Environment` to `local`.\n    *   Add `DebugDeviceID` with the device\'s IP address if you are running on a real mobile device. (Source: https://paramount.atlassian.net/wiki/spaces/PLQA/pages/47720266)\n    *   You can also pass mobile local Android run configuration arguments such as:\n        *   `-Ddriver=android`\n        *   `-DplatformName=Android`\n        *   `-DplatformVersion` (e.g., `11.0`)\n        *   `-DdeviceName` (e.g., `"Google Pixel 2XL"`)\n        *   `-Dapp="/pathToPackage/your_app.apk"` (path to your Android application package)\n        *   `-Dudid` (set this if running on a real mobile device only). (Source: https://paramount.atlassian.net/wiki/spaces/PLQA/pages/47711460)\n\n3.  *Run the Test:*\n    *   Connect to VPN if required (e.g., `connect.cbsinteractive.com/VPNFT`). (Source: https://paramount.atlassian.net/wiki/spaces/PLQA/pages/47720266)\n    *   Download and run the latest version of the Synergy server `.jar` file (Websocket). (Source: https://paramount.atlassian.net/wiki/spaces/PLQA/pages/47720266)\n    *   To run the test from the terminal, enter a Maven command like this in your IDE terminal window:\n        ```\n        mvn clean test -pl mqe-hob-mobile-tests -am -Dgroups=Your test case number or tag\n        ```\n        (Source: https://paramount.atlassian.net/wiki/spaces/PLQA/pages/47720266)\n    *   Alternatively, you can run from `TestNGSuiteConfig.xml` by navigating to the file, right-clicking, and selecting "run TestNGSuiteConfig.xml". Provide the necessary test case ID or tag name in the `include name` section. (Source: https://paramount.atlassian.net/wiki/spaces/PLQA/pages/47720266)\n\n────────────────────────────────────────\n*📚 Sources:*\n1. <https://paramount.atlassian.net/wiki/spaces/PLQA/pages/47713566|Source>\n2. <https://paramount.atlassian.net/wiki/spaces/PLQA/pages/47711460|Source>\n3. <https://paramount.atlassian.net/wiki/spaces/PLQA/pages/47720266|Source>\n', 'thread_ts': '1755896446.344379', 'team_id': 'T010QS7UQNA'}, headers: {'Content-Type': 'application/json;charset=utf-8', 'Authorization': '(redacted)', 'User-Agent': 'Python/3.12.0 slackclient/3.34.0 Darwin/23.4.0'}
2025-08-22 14:00:59,202 - slack_sdk.web.base_client - DEBUG - [base_client.py:546] - Received the following response - status: 200, headers: {'date': 'Fri, 22 Aug 2025 21:00:59 GMT', 'server': 'Apache', 'vary': 'Accept-Encoding', 'x-slack-req-id': 'd9ba88c21042b6df34602db758820f37', 'x-content-type-options': 'nosniff', 'x-xss-protection': '0', 'pragma': 'no-cache', 'cache-control': 'private, no-cache, no-store, must-revalidate', 'expires': 'Sat, 26 Jul 1997 05:00:00 GMT', 'content-type': 'application/json; charset=utf-8', 'x-accepted-oauth-scopes': 'chat:write', 'x-oauth-scopes': 'app_mentions:read,channels:history,chat:write,im:history,im:read,im:write,users:read,reactions:write,users:read.email', 'access-control-expose-headers': 'x-slack-req-id, retry-after', 'access-control-allow-headers': 'slack-route, x-slack-version-ts, x-b3-traceid, x-b3-spanid, x-b3-parentspanid, x-b3-sampled, x-b3-flags', 'strict-transport-security': 'max-age=31536000; includeSubDomains; preload', 'referrer-policy': 'no-referrer', 'x-slack-unique-id': 'aKjai6z6ork41Ew8SiN6KgAAEAg', 'x-slack-backend': 'r', 'access-control-allow-origin': '*', 'content-length': '9966', 'via': '1.1 slack-prod.tinyspeck.com, envoy-www-iad-rfmynfgp,envoy-edge-pdx-tlebwkzs', 'x-envoy-attempt-count': '1', 'x-envoy-upstream-service-time': '205', 'x-backend': 'main_normal main_canary_with_overflow main_control_with_overflow', 'x-server': 'slack-www-hhvm-main-iad-apnn', 'x-slack-shared-secret-outcome': 'no-match', 'x-edge-backend': 'envoy-www', 'timing-allow-origin': '*', 'x-slack-edge-shared-secret-outcome': 'no-match', 'connection': 'close'}, body: {"ok":true,"channel":"D09A0LFHK8R","ts":"1755896459.123159","message":{"user":"U099R6WTZ9S","type":"message","ts":"1755896459.123159","bot_id":"B099R6WTRU4","app_id":"A099LACAB2R","text":"*Your Question:*\n&gt; How can i run an automated test on a local Android phone?\n\n*Answer:*\nTo run an automated test on a local Android phone, you'll generally follow these steps:\n\n1.  *Environment Setup:*\n    *   Ensure your Run Configuration for Android Emulator has the `$ANDROID_HOME` environment variable set and included in the path. (Source: <https://paramount.atlassian.net/wiki/spaces/PLQA/pages/47713566>)\n    *   The test class (e.g., `SampleTest.java` mentioned in Source: <https://paramount.atlassian.net/wiki/spaces/PLQA/pages/47711460>) will likely handle starting and stopping the Appium server and launching the Android emulator if the environment is set to \"local\". (Source: <https://paramount.atlassian.net/wiki/spaces/PLQA/pages/47711460>)\n\n2.  *Configuration (Desired Capabilities/Properties):*\n    *   Update the desired capabilities in your `.config` file (located under the `mqe-hob-mobile-tests` directory). (Source: <https://paramount.atlassian.net/wiki/spaces/PLQA/pages/47720266>)\n    *   Set the `Platform` to `ANDROID`.\n    *   Set `Environment` to `local`.\n    *   Add `DebugDeviceID` with the device's IP address if you are running on a real mobile device. (Source: <https://paramount.atlassian.net/wiki/spaces/PLQA/pages/47720266>)\n    *   You can also pass mobile local Android run configuration arguments such as:\n        *   `-Ddriver=android`\n        *   `-DplatformName=Android`\n        *   `-DplatformVersion` (e.g., `11.0`)\n        *   `-DdeviceName` (e.g., `\"Google Pixel 2XL\"`)\n        *   `-Dapp=\"/pathToPackage/your_app.apk\"` (path to your Android application package)\n        *   `-Dudid` (set this if running on a real mobile device only). (Source: <https://paramount.atlassian.net/wiki/spaces/PLQA/pages/47711460>)\n\n3.  *Run the Test:*\n    *   Connect to VPN if required (e.g., `<http://connect.cbsinteractive.com/VPNFT`|connect.cbsinteractive.com/VPNFT`>). (Source: <https://paramount.atlassian.net/wiki/spaces/PLQA/pages/47720266>)\n    *   Download and run the latest version of the Synergy server `.jar` file (Websocket). (Source: <https://paramount.atlassian.net/wiki/spaces/PLQA/pages/47720266>)\n    *   To run the test from the terminal, enter a Maven command like this in your IDE terminal window:\n        ```\n        mvn clean test -pl mqe-hob-mobile-tests -am -Dgroups=Your test case number or tag\n        ```\n        (Source: <https://paramount.atlassian.net/wiki/spaces/PLQA/pages/47720266>)\n    *   Alternatively, you can run from `TestNGSuiteConfig.xml` by navigating to the file, right-clicking, and selecting \"run TestNGSuiteConfig.xml\". Provide the necessary test case ID or tag name in the `include name` section. (Source: <https://paramount.atlassian.net/wiki/spaces/PLQA/pages/47720266>)\n\n────────────────────────────────────────\n*:books: Sources:*\n1. <https://paramount.atlassian.net/wiki/spaces/PLQA/pages/47713566|Source>\n2. <https://paramount.atlassian.net/wiki/spaces/PLQA/pages/47711460|Source>\n3. <https://paramount.atlassian.net/wiki/spaces/PLQA/pages/47720266|Source>\n","team":"T010QS7UQNA","bot_profile":{"id":"B099R6WTRU4","app_id":"A099LACAB2R","user_id":"U099R6WTZ9S","name":"AutoBot","icons":{"image_36":"https://a.slack-edge.com/80588/img/plugins/app/bot_36.png","image_48":"https://a.slack-edge.com/80588/img/plugins/app/bot_48.png","image_72":"https://a.slack-edge.com/80588/img/plugins/app/service_72.png"},"deleted":false,"updated":1754677948,"team_id":"T010QS7UQNA"},"thread_ts":"1755896446.344379","parent_user_id":"U01RMTFMALF","blocks":[{"type":"rich_text","block_id":"PQ7S","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Your Question:","style":{"bold":true}}]},{"type":"rich_text_quote","elements":[{"type":"text","text":"How can i run an automated test on a local Android phone?"}]},{"type":"rich_text_section","elements":[{"type":"text","text":"\n\n"},{"type":"text","text":"Answer:","style":{"bold":true}},{"type":"text","text":"\nTo run an automated test on a local Android phone, you'll generally follow these steps:\n\n1.  "},{"type":"text","text":"Environment Setup:","style":{"bold":true}},{"type":"text","text":"\n    *   Ensure your Run Configuration for Android Emulator has the "},{"type":"text","text":"$ANDROID_HOME","style":{"code":true}},{"type":"text","text":" environment variable set and included in the path. (Source: "},{"type":"link","url":"https://paramount.atlassian.net/wiki/spaces/PLQA/pages/47713566"},{"type":"text","text":")\n    *   The test class (e.g., "},{"type":"text","text":"SampleTest.java","style":{"code":true}},{"type":"text","text":" mentioned in Source: "},{"type":"link","url":"https://paramount.atlassian.net/wiki/spaces/PLQA/pages/47711460"},{"type":"text","text":") will likely handle starting and stopping the Appium server and launching the Android emulator if the environment is set to \"local\". (Source: "},{"type":"link","url":"https://paramount.atlassian.net/wiki/spaces/PLQA/pages/47711460"},{"type":"text","text":")\n\n2.  "},{"type":"text","text":"Configuration (Desired Capabilities/Properties):","style":{"bold":true}},{"type":"text","text":"\n    *   Update the desired capabilities in your "},{"type":"text","text":".config","style":{"code":true}},{"type":"text","text":" file (located under the "},{"type":"text","text":"mqe-hob-mobile-tests","style":{"code":true}},{"type":"text","text":" directory). (Source: "},{"type":"link","url":"https://paramount.atlassian.net/wiki/spaces/PLQA/pages/47720266"},{"type":"text","text":")\n    *   Set the "},{"type":"text","text":"Platform","style":{"code":true}},{"type":"text","text":" to "},{"type":"text","text":"ANDROID","style":{"code":true}},{"type":"text","text":".\n    *   Set "},{"type":"text","text":"Environment","style":{"code":true}},{"type":"text","text":" to "},{"type":"text","text":"local","style":{"code":true}},{"type":"text","text":".\n    *   Add "},{"type":"text","text":"DebugDeviceID","style":{"code":true}},{"type":"text","text":" with the device's IP address if you are running on a real mobile device. (Source: "},{"type":"link","url":"https://paramount.atlassian.net/wiki/spaces/PLQA/pages/47720266"},{"type":"text","text":")\n    *   You can also pass mobile local Android run configuration arguments such as:\n        *   "},{"type":"text","text":"-Ddriver=android","style":{"code":true}},{"type":"text","text":"\n        *   "},{"type":"text","text":"-DplatformName=Android","style":{"code":true}},{"type":"text","text":"\n        *   "},{"type":"text","text":"-DplatformVersion","style":{"code":true}},{"type":"text","text":" (e.g., "},{"type":"text","text":"11.0","style":{"code":true}},{"type":"text","text":")\n        *   "},{"type":"text","text":"-DdeviceName","style":{"code":true}},{"type":"text","text":" (e.g., "},{"type":"text","text":"\"Google Pixel 2XL\"","style":{"code":true}},{"type":"text","text":")\n        *   "},{"type":"text","text":"-Dapp=\"/pathToPackage/your_app.apk\"","style":{"code":true}},{"type":"text","text":" (path to your Android application package)\n        *   "},{"type":"text","text":"-Dudid","style":{"code":true}},{"type":"text","text":" (set this if running on a real mobile device only). (Source: "},{"type":"link","url":"https://paramount.atlassian.net/wiki/spaces/PLQA/pages/47711460"},{"type":"text","text":")\n\n3.  "},{"type":"text","text":"Run the Test:","style":{"bold":true}},{"type":"text","text":"\n    *   Connect to VPN if required (e.g., `"},{"type":"link","url":"http://connect.cbsinteractive.com/VPNFT`","text":"connect.cbsinteractive.com/VPNFT`"},{"type":"text","text":"). (Source: "},{"type":"link","url":"https://paramount.atlassian.net/wiki/spaces/PLQA/pages/47720266"},{"type":"text","text":")\n    *   Download and run the latest version of the Synergy server "},{"type":"text","text":".jar","style":{"code":true}},{"type":"text","text":" file (Websocket). (Source: "},{"type":"link","url":"https://paramount.atlassian.net/wiki/spaces/PLQA/pages/47720266"},{"type":"text","text":")\n    *   To run the test from the terminal, enter a Maven command like this in your IDE terminal window:\n        "}]},{"type":"rich_text_preformatted","elements":[{"type":"text","text":"        mvn clean test -pl mqe-hob-mobile-tests -am -Dgroups=Your test case number or tag\n        "}]},{"type":"rich_text_section","elements":[{"type":"text","text":"        (Source: "},{"type":"link","url":"https://paramount.atlassian.net/wiki/spaces/PLQA/pages/47720266"},{"type":"text","text":")\n    *   Alternatively, you can run from "},{"type":"text","text":"TestNGSuiteConfig.xml","style":{"code":true}},{"type":"text","text":" by navigating to the file, right-clicking, and selecting \"run TestNGSuiteConfig.xml\". Provide the necessary test case ID or tag name in the "},{"type":"text","text":"include name","style":{"code":true}},{"type":"text","text":" section. (Source: "},{"type":"link","url":"https://paramount.atlassian.net/wiki/spaces/PLQA/pages/47720266"},{"type":"text","text":")\n\n────────────────────────────────────────\n"},{"type":"emoji","name":"books","unicode":"1f4da","style":{"bold":true}},{"type":"text","text":" Sources:","style":{"bold":true}},{"type":"text","text":"\n1. "},{"type":"link","url":"https://paramount.atlassian.net/wiki/spaces/PLQA/pages/47713566","text":"Source"},{"type":"text","text":"\n2. "},{"type":"link","url":"https://paramount.atlassian.net/wiki/spaces/PLQA/pages/47711460","text":"Source"},{"type":"text","text":"\n3. "},{"type":"link","url":"https://paramount.atlassian.net/wiki/spaces/PLQA/pages/47720266","text":"Source"}]}]}]}}
2025-08-22 14:00:59,205 - __main__ - DEBUG - [main.py:574] - Cleaning up DM thread tracking...
2025-08-22 14:00:59,205 - utils - DEBUG - [utils.py:67] - Managing thread: D09A0LFHK8R:1755896446.344379, action: remove, user: U01RMTFMALF
2025-08-22 14:00:59,205 - utils - INFO - [utils.py:100] - Removed thread D09A0LFHK8R:1755896446.344379 from active tracking (remaining: 0)
2025-08-22 14:00:59,611 - slack_bolt.App - DEBUG - [client.py:235] - on_message invoked: (message: {"envelope_id":"9e1c0766-020a-4213-b877-1c2bd3ed6941","payload":{"token":"yq71khZBCyJF1Ri2hG5aNqr5","team_id":"T010QS7UQNA","enterprise_id":"ERV4P7NAD","context_team_id":null,"context_enterprise_id":"ERV4P7NAD","api_app_id":"A099LACAB2R","event":{"user":"U099R6WTZ9S","type":"message","ts":"1755896459.123159","bot_id":"B099R6WTRU4","app_id":"A099LACAB2R","text":"*Your Question:*\n&gt; How can i run an automated test on a local Android phone?\n\n*Answer:*\nTo run an automated test on a local Android phone, you'll generally follow these steps:\n\n1.  *Environment Setup:*\n    *   Ensure your Run Configuration for Android Emulator has the `$ANDROID_HOME` environment variable set and included in the path. (Source: <https:\/\/paramount.atlassian.net\/wiki\/spaces\/PLQA\/pages\/47713566>)\n    *   The test class (e.g., `SampleTest.java` mentioned in Source: <https:\/\/paramount.atlassian.net\/wiki\/spaces\/PLQA\/pages\/47711460>) will likely handle starting and stopping the Appium server and launching the Android emulator if the environment is set to \"local\". (Source: <https:\/\/paramount.atlassian.net\/wiki\/spaces\/PLQA\/pages\/47711460>)\n\n2.  *Configuration (Desired Capabilities\/Properties):*\n    *   Update the desired capabilities in your `.config` file (located under the `mqe-hob-mobile-tests` directory). (Source: <https:\/\/paramount.atlassian.net\/wiki\/spaces\/PLQA\/pages\/47720266>)\n    *   Set the `Platform` to `ANDROID`.\n    *   Set `Environment` to `local`.\n    *   Add `DebugDeviceID` with the device's IP address if you are running on a real mobile device. (Source: <https:\/\/paramount.atlassian.net\/wiki\/spaces\/PLQA\/pages\/47720266>)\n    *   You can also pass mobile local Android run configuration arguments such as:\n        *   `-Ddriver=android`\n        *   `-DplatformName=Android`\n        *   `-DplatformVersion` (e.g., `11.0`)\n        *   `-DdeviceName` (e.g., `\"Google Pixel 2XL\"`)\n        *   `-Dapp=\"\/pathToPackage\/your_app.apk\"` (path to your Android application package)\n        *   `-Dudid` (set this if running on a real mobile device only). (Source: <https:\/\/paramount.atlassian.net\/wiki\/spaces\/PLQA\/pages\/47711460>)\n\n3.  *Run the Test:*\n    *   Connect to VPN if required (e.g., `<http:\/\/connect.cbsinteractive.com\/VPNFT`|connect.cbsinteractive.com\/VPNFT`>). (Source: <https:\/\/paramount.atlassian.net\/wiki\/spaces\/PLQA\/pages\/47720266>)\n    *   Download and run the latest version of the Synergy server `.jar` file (Websocket). (Source: <https:\/\/paramount.atlassian.net\/wiki\/spaces\/PLQA\/pages\/47720266>)\n    *   To run the test from the terminal, enter a Maven command like this in your IDE terminal window:\n        ```\n        mvn clean test -pl mqe-hob-mobile-tests -am -Dgroups=Your test case number or tag\n        ```\n        (Source: <https:\/\/paramount.atlassian.net\/wiki\/spaces\/PLQA\/pages\/47720266>)\n    *   Alternatively, you can run from `TestNGSuiteConfig.xml` by navigating to the file, right-clicking, and selecting \"run TestNGSuiteConfig.xml\". Provide the necessary test case ID or tag name in the `include name` section. (Source: <https:\/\/paramount.atlassian.net\/wiki\/spaces\/PLQA\/pages\/47720266>)\n\n\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\n*:books: Sources:*\n1. <https:\/\/paramount.atlassian.net\/wiki\/spaces\/PLQA\/pages\/47713566|Source>\n2. <https:\/\/paramount.atlassian.net\/wiki\/spaces\/PLQA\/pages\/47711460|Source>\n3. <https:\/\/paramount.atlassian.net\/wiki\/spaces\/PLQA\/pages\/47720266|Source>\n","team":"T010QS7UQNA","bot_profile":{"id":"B099R6WTRU4","deleted":false,"name":"AutoBot","updated":1754677948,"app_id":"A099LACAB2R","user_id":"U099R6WTZ9S","icons":{"image_36":"https:\/\/a.slack-edge.com\/80588\/img\/plugins\/app\/bot_36.png","image_48":"https:\/\/a.slack-edge.com\/80588\/img\/plugins\/app\/bot_48.png","image_72":"https:\/\/a.slack-edge.com\/80588\/img\/plugins\/app\/service_72.png"},"team_id":"T010QS7UQNA"},"thread_ts":"1755896446.344379","parent_user_id":"U01RMTFMALF","blocks":[{"type":"rich_text","block_id":"Eik","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Your Question:","style":{"bold":true}}]},{"type":"rich_text_quote","elements":[{"type":"text","text":"How can i run an automated test on a local Android phone?"}]},{"type":"rich_text_section","elements":[{"type":"text","text":"\n\n"},{"type":"text","text":"Answer:","style":{"bold":true}},{"type":"text","text":"\nTo run an automated test on a local Android phone, you'll generally follow these steps:\n\n1.  "},{"type":"text","text":"Environment Setup:","style":{"bold":true}},{"type":"text","text":"\n    *   Ensure your Run Configuration for Android Emulator has the "},{"type":"text","text":"$ANDROID_HOME","style":{"code":true}},{"type":"text","text":" environment variable set and included in the path. (Source: "},{"type":"link","url":"https:\/\/paramount.atlassian.net\/wiki\/spaces\/PLQA\/pages\/47713566"},{"type":"text","text":")\n    *   The test class (e.g., "},{"type":"text","text":"SampleTest.java","style":{"code":true}},{"type":"text","text":" mentioned in Source: "},{"type":"link","url":"https:\/\/paramount.atlassian.net\/wiki\/spaces\/PLQA\/pages\/47711460"},{"type":"text","text":") will likely handle starting and stopping the Appium server and launching the Android emulator if the environment is set to \"local\". (Source: "},{"type":"link","url":"https:\/\/paramount.atlassian.net\/wiki\/spaces\/PLQA\/pages\/47711460"},{"type":"text","text":")\n\n2.  "},{"type":"text","text":"Configuration (Desired Capabilities\/Properties):","style":{"bold":true}},{"type":"text","text":"\n    *   Update the desired capabilities in your "},{"type":"text","text":".config","style":{"code":true}},{"type":"text","text":" file (located under the "},{"type":"text","text":"mqe-hob-mobile-tests","style":{"code":true}},{"type":"text","text":" directory). (Source: "},{"type":"link","url":"https:\/\/paramount.atlassian.net\/wiki\/spaces\/PLQA\/pages\/47720266"},{"type":"text","text":")\n    *   Set the "},{"type":"text","text":"Platform","style":{"code":true}},{"type":"text","text":" to "},{"type":"text","text":"ANDROID","style":{"code":true}},{"type":"text","text":".\n    *   Set "},{"type":"text","text":"Environment","style":{"code":true}},{"type":"text","text":" to "},{"type":"text","text":"local","style":{"code":true}},{"type":"text","text":".\n    *   Add "},{"type":"text","text":"DebugDeviceID","style":{"code":true}},{"type":"text","text":" with the device's IP address if you are running on a real mobile device. (Source: "},{"type":"link","url":"https:\/\/paramount.atlassian.net\/wiki\/spaces\/PLQA\/pages\/47720266"},{"type":"text","text":")\n    *   You can also pass mobile local Android run configuration arguments such as:\n        *   "},{"type":"text","text":"-Ddriver=android","style":{"code":true}},{"type":"text","text":"\n        *   "},{"type":"text","text":"-DplatformName=Android","style":{"code":true}},{"type":"text","text":"\n        *   "},{"type":"text","text":"-DplatformVersion","style":{"code":true}},{"type":"text","text":" (e.g., "},{"type":"text","text":"11.0","style":{"code":true}},{"type":"text","text":")\n        *   "},{"type":"text","text":"-DdeviceName","style":{"code":true}},{"type":"text","text":" (e.g., "},{"type":"text","text":"\"Google Pixel 2XL\"","style":{"code":true}},{"type":"text","text":")\n        *   "},{"type":"text","text":"-Dapp=\"\/pathToPackage\/your_app.apk\"","style":{"code":true}},{"type":"text","text":" (path to your Android application package)\n        *   "},{"type":"text","text":"-Dudid","style":{"code":true}},{"type":"text","text":" (set this if running on a real mobile device only). (Source: "},{"type":"link","url":"https:\/\/paramount.atlassian.net\/wiki\/spaces\/PLQA\/pages\/47711460"},{"type":"text","text":")\n\n3.  "},{"type":"text","text":"Run the Test:","style":{"bold":true}},{"type":"text","text":"\n    *   Connect to VPN if required (e.g., `"},{"type":"link","url":"http:\/\/connect.cbsinteractive.com\/VPNFT`","text":"connect.cbsinteractive.com\/VPNFT`"},{"type":"text","text":"). (Source: "},{"type":"link","url":"https:\/\/paramount.atlassian.net\/wiki\/spaces\/PLQA\/pages\/47720266"},{"type":"text","text":")\n    *   Download and run the latest version of the Synergy server "},{"type":"text","text":".jar","style":{"code":true}},{"type":"text","text":" file (Websocket). (Source: "},{"type":"link","url":"https:\/\/paramount.atlassian.net\/wiki\/spaces\/PLQA\/pages\/47720266"},{"type":"text","text":")\n    *   To run the test from the terminal, enter a Maven command like this in your IDE terminal window:\n        "}]},{"type":"rich_text_preformatted","elements":[{"type":"text","text":"        mvn clean test -pl mqe-hob-mobile-tests -am -Dgroups=Your test case number or tag\n        "}]},{"type":"rich_text_section","elements":[{"type":"text","text":"        (Source: "},{"type":"link","url":"https:\/\/paramount.atlassian.net\/wiki\/spaces\/PLQA\/pages\/47720266"},{"type":"text","text":")\n    *   Alternatively, you can run from "},{"type":"text","text":"TestNGSuiteConfig.xml","style":{"code":true}},{"type":"text","text":" by navigating to the file, right-clicking, and selecting \"run TestNGSuiteConfig.xml\". Provide the necessary test case ID or tag name in the "},{"type":"text","text":"include name","style":{"code":true}},{"type":"text","text":" section. (Source: "},{"type":"link","url":"https:\/\/paramount.atlassian.net\/wiki\/spaces\/PLQA\/pages\/47720266"},{"type":"text","text":")\n\n\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\n"},{"type":"emoji","name":"books","unicode":"1f4da","style":{"bold":true}},{"type":"text","text":" Sources:","style":{"bold":true}},{"type":"text","text":"\n1. "},{"type":"link","url":"https:\/\/paramount.atlassian.net\/wiki\/spaces\/PLQA\/pages\/47713566","text":"Source"},{"type":"text","text":"\n2. "},{"type":"link","url":"https:\/\/paramount.atlassian.net\/wiki\/spaces\/PLQA\/pages\/47711460","text":"Source"},{"type":"text","text":"\n3. "},{"type":"link","url":"https:\/\/paramount.atlassian.net\/wiki\/spaces\/PLQA\/pages\/47720266","text":"Source"}]}]}],"channel":"D09A0LFHK8R","event_ts":"1755896459.123159","channel_type":"im"},"type":"event_callback","event_id":"Ev09C2GE6MMX","event_time":1755896459,"authorizations":[{"enterprise_id":"ERV4P7NAD","team_id":"T010QS7UQNA","user_id":"U099R6WTZ9S","is_bot":true,"is_enterprise_install":false}],"is_ext_shared_channel":false,"event_context":"4-eyJldCI6Im1lc3NhZ2UiLCJ0aWQiOiJUMDEwUVM3VVFOQSIsImFpZCI6IkEwOTlMQUNBQjJSIiwiY2lkIjoiRDA5QTBMRkhLOFIifQ"},"type":"events_api","accepts_response_payload":false,"retry_attempt":0,"retry_reason":""})
2025-08-22 14:00:59,612 - slack_bolt.App - DEBUG - [client.py:99] - A new message enqueued (current queue size: 1)
2025-08-22 14:00:59,612 - slack_bolt.App - DEBUG - [client.py:105] - A message dequeued (current queue size: 0)
2025-08-22 14:00:59,613 - slack_bolt.App - DEBUG - [client.py:125] - Message processing started (type: events_api, envelope_id: 9e1c0766-020a-4213-b877-1c2bd3ed6941)
2025-08-22 14:00:59,614 - slack_bolt.App - DEBUG - [app.py:476] - Applying slack_bolt.middleware.ssl_check.ssl_check.SslCheck
2025-08-22 14:00:59,614 - slack_bolt.App - DEBUG - [app.py:476] - Applying slack_bolt.middleware.request_verification.request_verification.RequestVerification
2025-08-22 14:00:59,614 - slack_bolt.App - DEBUG - [app.py:476] - Applying slack_bolt.middleware.authorization.single_team_authorization.SingleTeamAuthorization
2025-08-22 14:00:59,614 - slack_bolt.App - DEBUG - [app.py:476] - Applying slack_bolt.middleware.ignoring_self_events.ignoring_self_events.IgnoringSelfEvents
2025-08-22 14:00:59,614 - slack_bolt.IgnoringSelfEvents - DEBUG - [ignoring_self_events.py:60] - Skipped self event: {'user': 'U099R6WTZ9S', 'type': 'message', 'ts': '1755896459.123159', 'bot_id': 'B099R6WTRU4', 'app_id': 'A099LACAB2R', 'text': '*Your Question:*\n&gt; How can i run an automated test on a local Android phone?\n\n*Answer:*\nTo run an automated test on a local Android phone, you\'ll generally follow these steps:\n\n1.  *Environment Setup:*\n    *   Ensure your Run Configuration for Android Emulator has the `$ANDROID_HOME` environment variable set and included in the path. (Source: <https://paramount.atlassian.net/wiki/spaces/PLQA/pages/47713566>)\n    *   The test class (e.g., `SampleTest.java` mentioned in Source: <https://paramount.atlassian.net/wiki/spaces/PLQA/pages/47711460>) will likely handle starting and stopping the Appium server and launching the Android emulator if the environment is set to "local". (Source: <https://paramount.atlassian.net/wiki/spaces/PLQA/pages/47711460>)\n\n2.  *Configuration (Desired Capabilities/Properties):*\n    *   Update the desired capabilities in your `.config` file (located under the `mqe-hob-mobile-tests` directory). (Source: <https://paramount.atlassian.net/wiki/spaces/PLQA/pages/47720266>)\n    *   Set the `Platform` to `ANDROID`.\n    *   Set `Environment` to `local`.\n    *   Add `DebugDeviceID` with the device\'s IP address if you are running on a real mobile device. (Source: <https://paramount.atlassian.net/wiki/spaces/PLQA/pages/47720266>)\n    *   You can also pass mobile local Android run configuration arguments such as:\n        *   `-Ddriver=android`\n        *   `-DplatformName=Android`\n        *   `-DplatformVersion` (e.g., `11.0`)\n        *   `-DdeviceName` (e.g., `"Google Pixel 2XL"`)\n        *   `-Dapp="/pathToPackage/your_app.apk"` (path to your Android application package)\n        *   `-Dudid` (set this if running on a real mobile device only). (Source: <https://paramount.atlassian.net/wiki/spaces/PLQA/pages/47711460>)\n\n3.  *Run the Test:*\n    *   Connect to VPN if required (e.g., `<http://connect.cbsinteractive.com/VPNFT`|connect.cbsinteractive.com/VPNFT`>). (Source: <https://paramount.atlassian.net/wiki/spaces/PLQA/pages/47720266>)\n    *   Download and run the latest version of the Synergy server `.jar` file (Websocket). (Source: <https://paramount.atlassian.net/wiki/spaces/PLQA/pages/47720266>)\n    *   To run the test from the terminal, enter a Maven command like this in your IDE terminal window:\n        ```\n        mvn clean test -pl mqe-hob-mobile-tests -am -Dgroups=Your test case number or tag\n        ```\n        (Source: <https://paramount.atlassian.net/wiki/spaces/PLQA/pages/47720266>)\n    *   Alternatively, you can run from `TestNGSuiteConfig.xml` by navigating to the file, right-clicking, and selecting "run TestNGSuiteConfig.xml". Provide the necessary test case ID or tag name in the `include name` section. (Source: <https://paramount.atlassian.net/wiki/spaces/PLQA/pages/47720266>)\n\n────────────────────────────────────────\n*:books: Sources:*\n1. <https://paramount.atlassian.net/wiki/spaces/PLQA/pages/47713566|Source>\n2. <https://paramount.atlassian.net/wiki/spaces/PLQA/pages/47711460|Source>\n3. <https://paramount.atlassian.net/wiki/spaces/PLQA/pages/47720266|Source>\n', 'team': 'T010QS7UQNA', 'bot_profile': {'id': 'B099R6WTRU4', 'deleted': False, 'name': 'AutoBot', 'updated': 1754677948, 'app_id': 'A099LACAB2R', 'user_id': 'U099R6WTZ9S', 'icons': {'image_36': 'https://a.slack-edge.com/80588/img/plugins/app/bot_36.png', 'image_48': 'https://a.slack-edge.com/80588/img/plugins/app/bot_48.png', 'image_72': 'https://a.slack-edge.com/80588/img/plugins/app/service_72.png'}, 'team_id': 'T010QS7UQNA'}, 'thread_ts': '1755896446.344379', 'parent_user_id': 'U01RMTFMALF', 'blocks': [{'type': 'rich_text', 'block_id': 'Eik', 'elements': [{'type': 'rich_text_section', 'elements': [{'type': 'text', 'text': 'Your Question:', 'style': {'bold': True}}]}, {'type': 'rich_text_quote', 'elements': [{'type': 'text', 'text': 'How can i run an automated test on a local Android phone?'}]}, {'type': 'rich_text_section', 'elements': [{'type': 'text', 'text': '\n\n'}, {'type': 'text', 'text': 'Answer:', 'style': {'bold': True}}, {'type': 'text', 'text': "\nTo run an automated test on a local Android phone, you'll generally follow these steps:\n\n1.  "}, {'type': 'text', 'text': 'Environment Setup:', 'style': {'bold': True}}, {'type': 'text', 'text': '\n    *   Ensure your Run Configuration for Android Emulator has the '}, {'type': 'text', 'text': '$ANDROID_HOME', 'style': {'code': True}}, {'type': 'text', 'text': ' environment variable set and included in the path. (Source: '}, {'type': 'link', 'url': 'https://paramount.atlassian.net/wiki/spaces/PLQA/pages/47713566'}, {'type': 'text', 'text': ')\n    *   The test class (e.g., '}, {'type': 'text', 'text': 'SampleTest.java', 'style': {'code': True}}, {'type': 'text', 'text': ' mentioned in Source: '}, {'type': 'link', 'url': 'https://paramount.atlassian.net/wiki/spaces/PLQA/pages/47711460'}, {'type': 'text', 'text': ') will likely handle starting and stopping the Appium server and launching the Android emulator if the environment is set to "local". (Source: '}, {'type': 'link', 'url': 'https://paramount.atlassian.net/wiki/spaces/PLQA/pages/47711460'}, {'type': 'text', 'text': ')\n\n2.  '}, {'type': 'text', 'text': 'Configuration (Desired Capabilities/Properties):', 'style': {'bold': True}}, {'type': 'text', 'text': '\n    *   Update the desired capabilities in your '}, {'type': 'text', 'text': '.config', 'style': {'code': True}}, {'type': 'text', 'text': ' file (located under the '}, {'type': 'text', 'text': 'mqe-hob-mobile-tests', 'style': {'code': True}}, {'type': 'text', 'text': ' directory). (Source: '}, {'type': 'link', 'url': 'https://paramount.atlassian.net/wiki/spaces/PLQA/pages/47720266'}, {'type': 'text', 'text': ')\n    *   Set the '}, {'type': 'text', 'text': 'Platform', 'style': {'code': True}}, {'type': 'text', 'text': ' to '}, {'type': 'text', 'text': 'ANDROID', 'style': {'code': True}}, {'type': 'text', 'text': '.\n    *   Set '}, {'type': 'text', 'text': 'Environment', 'style': {'code': True}}, {'type': 'text', 'text': ' to '}, {'type': 'text', 'text': 'local', 'style': {'code': True}}, {'type': 'text', 'text': '.\n    *   Add '}, {'type': 'text', 'text': 'DebugDeviceID', 'style': {'code': True}}, {'type': 'text', 'text': " with the device's IP address if you are running on a real mobile device. (Source: "}, {'type': 'link', 'url': 'https://paramount.atlassian.net/wiki/spaces/PLQA/pages/47720266'}, {'type': 'text', 'text': ')\n    *   You can also pass mobile local Android run configuration arguments such as:\n        *   '}, {'type': 'text', 'text': '-Ddriver=android', 'style': {'code': True}}, {'type': 'text', 'text': '\n        *   '}, {'type': 'text', 'text': '-DplatformName=Android', 'style': {'code': True}}, {'type': 'text', 'text': '\n        *   '}, {'type': 'text', 'text': '-DplatformVersion', 'style': {'code': True}}, {'type': 'text', 'text': ' (e.g., '}, {'type': 'text', 'text': '11.0', 'style': {'code': True}}, {'type': 'text', 'text': ')\n        *   '}, {'type': 'text', 'text': '-DdeviceName', 'style': {'code': True}}, {'type': 'text', 'text': ' (e.g., '}, {'type': 'text', 'text': '"Google Pixel 2XL"', 'style': {'code': True}}, {'type': 'text', 'text': ')\n        *   '}, {'type': 'text', 'text': '-Dapp="/pathToPackage/your_app.apk"', 'style': {'code': True}}, {'type': 'text', 'text': ' (path to your Android application package)\n        *   '}, {'type': 'text', 'text': '-Dudid', 'style': {'code': True}}, {'type': 'text', 'text': ' (set this if running on a real mobile device only). (Source: '}, {'type': 'link', 'url': 'https://paramount.atlassian.net/wiki/spaces/PLQA/pages/47711460'}, {'type': 'text', 'text': ')\n\n3.  '}, {'type': 'text', 'text': 'Run the Test:', 'style': {'bold': True}}, {'type': 'text', 'text': '\n    *   Connect to VPN if required (e.g., `'}, {'type': 'link', 'url': 'http://connect.cbsinteractive.com/VPNFT`', 'text': 'connect.cbsinteractive.com/VPNFT`'}, {'type': 'text', 'text': '). (Source: '}, {'type': 'link', 'url': 'https://paramount.atlassian.net/wiki/spaces/PLQA/pages/47720266'}, {'type': 'text', 'text': ')\n    *   Download and run the latest version of the Synergy server '}, {'type': 'text', 'text': '.jar', 'style': {'code': True}}, {'type': 'text', 'text': ' file (Websocket). (Source: '}, {'type': 'link', 'url': 'https://paramount.atlassian.net/wiki/spaces/PLQA/pages/47720266'}, {'type': 'text', 'text': ')\n    *   To run the test from the terminal, enter a Maven command like this in your IDE terminal window:\n        '}]}, {'type': 'rich_text_preformatted', 'elements': [{'type': 'text', 'text': '        mvn clean test -pl mqe-hob-mobile-tests -am -Dgroups=Your test case number or tag\n        '}]}, {'type': 'rich_text_section', 'elements': [{'type': 'text', 'text': '        (Source: '}, {'type': 'link', 'url': 'https://paramount.atlassian.net/wiki/spaces/PLQA/pages/47720266'}, {'type': 'text', 'text': ')\n    *   Alternatively, you can run from '}, {'type': 'text', 'text': 'TestNGSuiteConfig.xml', 'style': {'code': True}}, {'type': 'text', 'text': ' by navigating to the file, right-clicking, and selecting "run TestNGSuiteConfig.xml". Provide the necessary test case ID or tag name in the '}, {'type': 'text', 'text': 'include name', 'style': {'code': True}}, {'type': 'text', 'text': ' section. (Source: '}, {'type': 'link', 'url': 'https://paramount.atlassian.net/wiki/spaces/PLQA/pages/47720266'}, {'type': 'text', 'text': ')\n\n────────────────────────────────────────\n'}, {'type': 'emoji', 'name': 'books', 'unicode': '1f4da', 'style': {'bold': True}}, {'type': 'text', 'text': ' Sources:', 'style': {'bold': True}}, {'type': 'text', 'text': '\n1. '}, {'type': 'link', 'url': 'https://paramount.atlassian.net/wiki/spaces/PLQA/pages/47713566', 'text': 'Source'}, {'type': 'text', 'text': '\n2. '}, {'type': 'link', 'url': 'https://paramount.atlassian.net/wiki/spaces/PLQA/pages/47711460', 'text': 'Source'}, {'type': 'text', 'text': '\n3. '}, {'type': 'link', 'url': 'https://paramount.atlassian.net/wiki/spaces/PLQA/pages/47720266', 'text': 'Source'}]}]}], 'channel': 'D09A0LFHK8R', 'event_ts': '1755896459.123159', 'channel_type': 'im'}
2025-08-22 14:00:59,615 - slack_bolt.App - DEBUG - [client.py:200] - Sending a message (session id: e3fa3470-3631-40f6-94b2-522059b3b72b, message: {"envelope_id": "9e1c0766-020a-4213-b877-1c2bd3ed6941"})
2025-08-22 14:00:59,616 - slack_bolt.App - DEBUG - [internals.py:41] - Response time: 2 milliseconds
2025-08-22 14:00:59,616 - slack_bolt.App - DEBUG - [client.py:150] - Message processing completed (type: events_api, envelope_id: 9e1c0766-020a-4213-b877-1c2bd3ed6941)
2025-08-22 14:09:58,900 - __main__ - INFO - [main.py:43] - Loading application configuration...
2025-08-22 14:09:58,901 - __main__ - INFO - [main.py:45] - Configuration loaded successfully
2025-08-22 14:09:58,901 - __main__ - INFO - [main.py:48] - Initializing security components...
2025-08-22 14:09:58,901 - __main__ - DEBUG - [main.py:50] - Slack validator initialized
2025-08-22 14:09:58,901 - security.content_filter - INFO - [content_filter.py:39] - Content filter initialized with 11 patterns
2025-08-22 14:09:58,901 - __main__ - DEBUG - [main.py:53] - Content filter initialized
2025-08-22 14:09:58,901 - auth.admin_manager - INFO - [admin_manager.py:27] - Admin manager initialized with 2 admin users
2025-08-22 14:09:58,901 - __main__ - DEBUG - [main.py:56] - Admin manager initialized
2025-08-22 14:09:58,901 - auth.email_whitelist - INFO - [email_whitelist.py:28] - Email whitelist initialized with 1 whitelisted emails
2025-08-22 14:09:58,901 - auth.email_whitelist - INFO - [email_whitelist.py:37] - Whitelisted domains: paramount.com
2025-08-22 14:09:58,901 - __main__ - DEBUG - [main.py:59] - Email whitelist initialized with 1 emails
2025-08-22 14:09:58,901 - auth.slack_user_info - DEBUG - [slack_user_info.py:25] - Slack user info manager initialized
2025-08-22 14:09:58,901 - __main__ - DEBUG - [main.py:62] - Slack user info manager initialized
2025-08-22 14:09:58,901 - __main__ - INFO - [main.py:63] - Security components initialized successfully
2025-08-22 14:09:58,901 - __main__ - INFO - [main.py:66] - Initializing Slack app...
2025-08-22 14:09:58,938 - slack_bolt.App - DEBUG - [base_client.py:255] - Sending a request - url: https://slack.com/api/auth.test, query_params: {}, body_params: {}, files: {}, json_body: None, headers: {'Content-Type': 'application/x-www-form-urlencoded', 'Authorization': '(redacted)', 'User-Agent': 'Bolt/1.16.0 Python/3.12.0 slackclient/3.34.0 Darwin/23.4.0'}
2025-08-22 14:09:59,286 - slack_bolt.App - DEBUG - [base_client.py:546] - Received the following response - status: 200, headers: {'date': 'Fri, 22 Aug 2025 21:09:59 GMT', 'server': 'Apache', 'vary': 'Accept-Encoding', 'x-slack-req-id': 'bd7987e3ad187a5dc53559c85f58f11d', 'x-content-type-options': 'nosniff', 'x-xss-protection': '0', 'pragma': 'no-cache', 'cache-control': 'private, no-cache, no-store, must-revalidate', 'expires': 'Sat, 26 Jul 1997 05:00:00 GMT', 'content-type': 'application/json; charset=utf-8', 'x-oauth-scopes': 'app_mentions:read,channels:history,chat:write,im:history,im:read,im:write,users:read,reactions:write,users:read.email', 'access-control-expose-headers': 'x-slack-req-id, retry-after', 'access-control-allow-headers': 'slack-route, x-slack-version-ts, x-b3-traceid, x-b3-spanid, x-b3-parentspanid, x-b3-sampled, x-b3-flags', 'strict-transport-security': 'max-age=31536000; includeSubDomains; preload', 'referrer-policy': 'no-referrer', 'x-slack-unique-id': 'aKjcpwyodghqM2YQg27qBQAAAAM', 'x-slack-backend': 'r', 'access-control-allow-origin': '*', 'content-length': '228', 'via': '1.1 slack-prod.tinyspeck.com, envoy-www-iad-oknyxaay,envoy-edge-pdx-mowibesc', 'x-envoy-attempt-count': '1', 'x-envoy-upstream-service-time': '88', 'x-backend': 'main_normal main_canary_with_overflow main_control_with_overflow', 'x-server': 'slack-www-hhvm-main-iad-jklu', 'x-slack-shared-secret-outcome': 'no-match', 'x-edge-backend': 'envoy-www', 'timing-allow-origin': '*', 'x-slack-edge-shared-secret-outcome': 'no-match', 'connection': 'close'}, body: {"ok":true,"url":"https://viacomcbs-grid-test.slack.com/","team":"Test Workspace","user":"autobot","team_id":"T010QS7UQNA","user_id":"U099R6WTZ9S","bot_id":"B099R6WTRU4","enterprise_id":"ERV4P7NAD","is_enterprise_install":false}
2025-08-22 14:09:59,287 - __main__ - INFO - [main.py:68] - Slack app initialized successfully
2025-08-22 14:09:59,287 - __main__ - DEBUG - [main.py:72] - Message deduplication cache initialized
2025-08-22 14:09:59,287 - __main__ - DEBUG - [main.py:77] - Thread tracking initialized
2025-08-22 14:09:59,288 - __main__ - INFO - [main.py:80] - Initializing DIG AI integration...
2025-08-22 14:09:59,288 - dig_connector - INFO - [dig_connector.py:284] - Initializing DIG AI with model ID: 42
2025-08-22 14:09:59,288 - dig_connector - INFO - [dig_connector.py:49] - Starting DIG chat session initialization...
2025-08-22 14:09:59,288 - dig_connector - DEBUG - [dig_connector.py:52] - Creating chat with name: Slack Bot Session 2025-08-22T21:09:59.288602+00:00
2025-08-22 14:09:59,288 - dig_connector - DEBUG - [dig_connector.py:63] - Creating chat - URL: https://ai.digdev.cbsicloud.com/fastapi/chats, Payload: {'chat_nm': 'Slack Bot Session 2025-08-22T21:09:59.288602+00:00', 'model_id': 42}
2025-08-22 14:09:59,293 - urllib3.connectionpool - DEBUG - [connectionpool.py:1055] - Starting new HTTPS connection (1): ai.digdev.cbsicloud.com:443
2025-08-22 14:09:59,586 - urllib3.connectionpool - DEBUG - [connectionpool.py:549] - https://ai.digdev.cbsicloud.com:443 "POST /fastapi/chats HTTP/1.1" 200 217
2025-08-22 14:09:59,588 - dig_connector - DEBUG - [dig_connector.py:66] - Create chat response: status=200
2025-08-22 14:09:59,588 - dig_connector - INFO - [dig_connector.py:54] - Successfully initialized DIG chat session with ID: 884
2025-08-22 14:09:59,588 - __main__ - INFO - [main.py:83] - DIG AI integration successfully initialized
2025-08-22 14:09:59,588 - __main__ - INFO - [main.py:87] - Setting up event handlers...
2025-08-22 14:09:59,590 - __main__ - INFO - [main.py:699] - Starting AI Assistant Bot...
2025-08-22 14:09:59,590 - __main__ - INFO - [main.py:700] - Registering event handlers...
2025-08-22 14:09:59,590 - __main__ - DEBUG - [main.py:701] - Event handlers registered: app_mention, message, app_home_opened
2025-08-22 14:09:59,590 - __main__ - INFO - [main.py:704] - Connecting to Slack via Socket Mode...
2025-08-22 14:09:59,591 - __main__ - INFO - [main.py:708] - Socket Mode handler created successfully
2025-08-22 14:09:59,591 - __main__ - INFO - [main.py:710] - ✅ Bot is now running and listening for events!
2025-08-22 14:09:59,591 - slack_bolt.App - DEBUG - [base_client.py:255] - Sending a request - url: https://slack.com/api/apps.connections.open, query_params: {}, body_params: {}, files: {}, json_body: None, headers: {'Content-Type': 'application/x-www-form-urlencoded', 'Authorization': '(redacted)', 'User-Agent': 'Bolt/1.16.0 Python/3.12.0 slackclient/3.34.0 Darwin/23.4.0'}
2025-08-22 14:09:59,918 - slack_bolt.App - DEBUG - [base_client.py:546] - Received the following response - status: 200, headers: {'date': 'Fri, 22 Aug 2025 21:09:59 GMT', 'server': 'Apache', 'vary': 'Accept-Encoding', 'x-slack-req-id': '5ab3dcec4790d38012541eaf52733a6c', 'x-content-type-options': 'nosniff', 'x-xss-protection': '0', 'x-robots-tag': 'noindex,nofollow', 'pragma': 'no-cache', 'cache-control': 'private, no-cache, no-store, must-revalidate', 'expires': 'Sat, 26 Jul 1997 05:00:00 GMT', 'content-type': 'application/json; charset=utf-8', 'x-accepted-oauth-scopes': 'connections:write', 'x-oauth-scopes': 'connections:write', 'access-control-expose-headers': 'x-slack-req-id, retry-after', 'access-control-allow-headers': 'slack-route, x-slack-version-ts, x-b3-traceid, x-b3-spanid, x-b3-parentspanid, x-b3-sampled, x-b3-flags', 'strict-transport-security': 'max-age=31536000; includeSubDomains; preload', 'referrer-policy': 'no-referrer', 'x-slack-unique-id': 'aKjcp4NQ3n0oOboS1Mb0dAAAABU', 'x-slack-backend': 'r', 'access-control-allow-origin': '*', 'content-length': '173', 'via': '1.1 slack-prod.tinyspeck.com, envoy-www-iad-izfzbgif,envoy-edge-pdx-kmntbcvm', 'x-envoy-attempt-count': '1', 'x-envoy-upstream-service-time': '77', 'x-backend': 'main_normal main_canary_with_overflow main_control_with_overflow', 'x-server': 'slack-www-hhvm-control-main-iad-gazr', 'x-slack-shared-secret-outcome': 'no-match', 'x-edge-backend': 'envoy-www', 'timing-allow-origin': '*', 'x-slack-edge-shared-secret-outcome': 'no-match', 'connection': 'close'}, body: {"ok":true,"url":"wss:\/\/wss-primary.slack.com\/link\/?ticket=78bc5326-12cb-4fc1-8bd9-0531b308acc5&app_id=a6c8d361ee1c6f398c5b4afec831555b78d7affa753b16bcc0fc64d7c13f3766"}
2025-08-22 14:10:00,466 - slack_bolt.App - INFO - [client.py:192] - A new session has been established (session id: f597047c-60d6-49c4-8789-d54d895ebff5)
2025-08-22 14:10:00,467 - slack_bolt.App - INFO - [base_handler.py:50] - ⚡️ Bolt app is running!
2025-08-22 14:10:00,530 - slack_bolt.App - INFO - [client.py:265] - Starting to receive messages from a new connection (session id: f597047c-60d6-49c4-8789-d54d895ebff5)
2025-08-22 14:10:00,531 - slack_bolt.App - DEBUG - [client.py:235] - on_message invoked: (message: {"type":"hello","num_connections":1,"debug_info":{"host":"applink-5","build_number":0,"approximate_connection_time":18060},"connection_info":{"app_id":"A099LACAB2R"}})
2025-08-22 14:10:00,531 - slack_bolt.App - DEBUG - [client.py:99] - A new message enqueued (current queue size: 1)
2025-08-22 14:10:00,531 - slack_bolt.App - DEBUG - [client.py:105] - A message dequeued (current queue size: 0)
2025-08-22 14:10:00,533 - slack_bolt.App - DEBUG - [client.py:125] - Message processing started (type: hello, envelope_id: None)
2025-08-22 14:10:00,533 - slack_bolt.App - DEBUG - [client.py:150] - Message processing completed (type: hello, envelope_id: None)
2025-08-22 14:10:13,311 - slack_bolt.App - DEBUG - [client.py:235] - on_message invoked: (message: {"envelope_id":"c840cc70-6029-44bc-8c45-15e1872f4d00","payload":{"token":"yq71khZBCyJF1Ri2hG5aNqr5","team_id":"T010QS7UQNA","enterprise_id":"ERV4P7NAD","context_team_id":null,"context_enterprise_id":"ERV4P7NAD","api_app_id":"A099LACAB2R","event":{"user":"U01RMTFMALF","type":"message","ts":"1755897012.620639","client_msg_id":"42c68d90-8dae-4e54-861d-9eeb08bcd917","text":"How can i run an automated test on a local Android phone?","blocks":[{"type":"rich_text","block_id":"vQwBP","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"How can i run an automated test on a local Android phone?"}]}]}],"channel":"D09A0LFHK8R","event_ts":"1755897012.620639","channel_type":"im"},"type":"event_callback","event_id":"Ev09BMNG6CRK","event_time":1755897012,"authorizations":[{"enterprise_id":"ERV4P7NAD","team_id":"T010QS7UQNA","user_id":"U099R6WTZ9S","is_bot":true,"is_enterprise_install":false}],"is_ext_shared_channel":false,"event_context":"4-eyJldCI6Im1lc3NhZ2UiLCJ0aWQiOiJUMDEwUVM3VVFOQSIsImFpZCI6IkEwOTlMQUNBQjJSIiwiY2lkIjoiRDA5QTBMRkhLOFIifQ"},"type":"events_api","accepts_response_payload":false,"retry_attempt":0,"retry_reason":""})
2025-08-22 14:10:13,312 - slack_bolt.App - DEBUG - [client.py:99] - A new message enqueued (current queue size: 1)
2025-08-22 14:10:13,312 - slack_bolt.App - DEBUG - [client.py:105] - A message dequeued (current queue size: 0)
2025-08-22 14:10:13,313 - slack_bolt.App - DEBUG - [client.py:125] - Message processing started (type: events_api, envelope_id: c840cc70-6029-44bc-8c45-15e1872f4d00)
2025-08-22 14:10:13,315 - slack_bolt.App - DEBUG - [app.py:476] - Applying slack_bolt.middleware.ssl_check.ssl_check.SslCheck
2025-08-22 14:10:13,315 - slack_bolt.App - DEBUG - [app.py:476] - Applying slack_bolt.middleware.request_verification.request_verification.RequestVerification
2025-08-22 14:10:13,315 - slack_bolt.App - DEBUG - [app.py:476] - Applying slack_bolt.middleware.authorization.single_team_authorization.SingleTeamAuthorization
2025-08-22 14:10:13,315 - slack_bolt.App - DEBUG - [app.py:476] - Applying slack_bolt.middleware.ignoring_self_events.ignoring_self_events.IgnoringSelfEvents
2025-08-22 14:10:13,315 - slack_bolt.App - DEBUG - [app.py:476] - Applying slack_bolt.middleware.url_verification.url_verification.UrlVerification
2025-08-22 14:10:13,315 - slack_bolt.App - DEBUG - [app.py:500] - Checking listener: handle_app_mentions ...
2025-08-22 14:10:13,316 - slack_bolt.App - DEBUG - [app.py:500] - Checking listener: help_message ...
2025-08-22 14:10:13,316 - slack_bolt.App - DEBUG - [app.py:500] - Checking listener: handle_dm_messages ...
2025-08-22 14:10:13,316 - slack_bolt.App - DEBUG - [app.py:522] - Running listener: handle_dm_messages ...
2025-08-22 14:10:13,317 - __main__ - INFO - [main.py:449] - === DM MESSAGE EVENT RECEIVED ===
2025-08-22 14:10:13,317 - slack_bolt.App - DEBUG - [thread_runner.py:198] - Responding with status: 200 body: "" (0 millis)
2025-08-22 14:10:13,317 - __main__ - DEBUG - [main.py:450] - Full event body: {'token': 'yq71khZBCyJF1Ri2hG5aNqr5', 'team_id': 'T010QS7UQNA', 'enterprise_id': 'ERV4P7NAD', 'context_team_id': None, 'context_enterprise_id': 'ERV4P7NAD', 'api_app_id': 'A099LACAB2R', 'event': {'user': 'U01RMTFMALF', 'type': 'message', 'ts': '1755897012.620639', 'client_msg_id': '42c68d90-8dae-4e54-861d-9eeb08bcd917', 'text': 'How can i run an automated test on a local Android phone?', 'blocks': [{'type': 'rich_text', 'block_id': 'vQwBP', 'elements': [{'type': 'rich_text_section', 'elements': [{'type': 'text', 'text': 'How can i run an automated test on a local Android phone?'}]}]}], 'channel': 'D09A0LFHK8R', 'event_ts': '1755897012.620639', 'channel_type': 'im'}, 'type': 'event_callback', 'event_id': 'Ev09BMNG6CRK', 'event_time': 1755897012, 'authorizations': [{'enterprise_id': 'ERV4P7NAD', 'team_id': 'T010QS7UQNA', 'user_id': 'U099R6WTZ9S', 'is_bot': True, 'is_enterprise_install': False}], 'is_ext_shared_channel': False, 'event_context': '4-eyJldCI6Im1lc3NhZ2UiLCJ0aWQiOiJUMDEwUVM3VVFOQSIsImFpZCI6IkEwOTlMQUNBQjJSIiwiY2lkIjoiRDA5QTBMRkhLOFIifQ'}
2025-08-22 14:10:13,318 - slack_bolt.App - DEBUG - [client.py:200] - Sending a message (session id: f597047c-60d6-49c4-8789-d54d895ebff5, message: {"envelope_id": "c840cc70-6029-44bc-8c45-15e1872f4d00"})
2025-08-22 14:10:13,318 - __main__ - INFO - [main.py:459] - DM Event details: channel=D09A0LFHK8R, user=U01RMTFMALF, ts=1755897012.620639
2025-08-22 14:10:13,319 - __main__ - DEBUG - [main.py:460] - DM Event text: How can i run an automated test on a local Android phone?
2025-08-22 14:10:13,319 - utils - DEBUG - [utils.py:27] - Checking message processing: channel=D09A0LFHK8R, ts=1755897012.620639, text='How can i run an automated test on a local Android...'
2025-08-22 14:10:13,319 - slack_bolt.App - DEBUG - [internals.py:41] - Response time: 4 milliseconds
2025-08-22 14:10:13,319 - utils - DEBUG - [utils.py:31] - Message hash: 046411963dde1cf95d04776409f3b64b
2025-08-22 14:10:13,319 - slack_bolt.App - DEBUG - [client.py:150] - Message processing completed (type: events_api, envelope_id: c840cc70-6029-44bc-8c45-15e1872f4d00)
2025-08-22 14:10:13,319 - utils - DEBUG - [utils.py:53] - Added message to processing cache (total entries: 1)
2025-08-22 14:10:13,320 - __main__ - DEBUG - [main.py:473] - Bot check: bot_id=None, user_id=U01RMTFMALF
2025-08-22 14:10:13,320 - __main__ - DEBUG - [main.py:478] - Question received: 'How can i run an automated test on a local Android phone?'
2025-08-22 14:10:13,320 - __main__ - DEBUG - [main.py:484] - Checking user access for DM...
2025-08-22 14:10:13,320 - auth.slack_user_info - DEBUG - [slack_user_info.py:48] - Fetching user info for user_id: U01RMTFMALF
2025-08-22 14:10:13,320 - slack_sdk.web.base_client - DEBUG - [base_client.py:255] - Sending a request - url: https://slack.com/api/users.info, query_params: {}, body_params: {'user': 'U01RMTFMALF', 'team_id': 'T010QS7UQNA'}, files: {}, json_body: None, headers: {'Content-Type': 'application/x-www-form-urlencoded', 'Authorization': '(redacted)', 'User-Agent': 'Python/3.12.0 slackclient/3.34.0 Darwin/23.4.0'}
2025-08-22 14:10:13,629 - slack_sdk.web.base_client - DEBUG - [base_client.py:546] - Received the following response - status: 200, headers: {'date': 'Fri, 22 Aug 2025 21:10:13 GMT', 'server': 'Apache', 'vary': 'Accept-Encoding', 'x-slack-req-id': '6fefc2b4c78ffeb9d1b41647929c4f7c', 'x-content-type-options': 'nosniff', 'x-xss-protection': '0', 'pragma': 'no-cache', 'cache-control': 'private, no-cache, no-store, must-revalidate', 'expires': 'Sat, 26 Jul 1997 05:00:00 GMT', 'content-type': 'application/json; charset=utf-8', 'x-accepted-oauth-scopes': 'users:read', 'x-oauth-scopes': 'app_mentions:read,channels:history,chat:write,im:history,im:read,im:write,users:read,reactions:write,users:read.email', 'access-control-expose-headers': 'x-slack-req-id, retry-after', 'access-control-allow-headers': 'slack-route, x-slack-version-ts, x-b3-traceid, x-b3-spanid, x-b3-parentspanid, x-b3-sampled, x-b3-flags', 'strict-transport-security': 'max-age=31536000; includeSubDomains; preload', 'referrer-policy': 'no-referrer', 'x-slack-unique-id': 'aKjctSECGnA3-nuMWy0xRQAAECE', 'x-slack-backend': 'r', 'access-control-allow-origin': '*', 'content-length': '2057', 'via': '1.1 slack-prod.tinyspeck.com, envoy-www-iad-gnwxduaz,envoy-edge-pdx-icuvgwxa', 'x-envoy-attempt-count': '1', 'x-envoy-upstream-service-time': '93', 'x-backend': 'main_normal main_canary_with_overflow main_control_with_overflow', 'x-server': 'slack-www-hhvm-main-iad-huqp', 'x-slack-shared-secret-outcome': 'no-match', 'x-edge-backend': 'envoy-www', 'timing-allow-origin': '*', 'x-slack-edge-shared-secret-outcome': 'no-match', 'connection': 'close'}, body: {"ok":true,"user":{"id":"U01RMTFMALF","name":"popov8533","is_bot":false,"updated":1755891346,"is_app_user":false,"team_id":"T010QS7UQNA","deleted":false,"color":"4bbe2e","is_email_confirmed":true,"real_name":"Alexandr Popov","tz":"America\/Los_Angeles","tz_label":"Pacific Daylight Time","tz_offset":-25200,"is_admin":false,"is_owner":false,"is_primary_owner":false,"is_restricted":false,"is_ultra_restricted":false,"enterprise_user":{"id":"U01RMTFMALF","enterprise_id":"ERV4P7NAD","enterprise_name":"Paramount Global","is_admin":false,"is_owner":false,"is_primary_owner":false,"teams":["T010QS7UQNA","T02H1PQMF"]},"who_can_share_contact_card":"EVERYONE","profile":{"real_name":"Alexandr Popov","display_name":"Alex Popov","avatar_hash":"a64f82312a14","real_name_normalized":"Alexandr Popov","display_name_normalized":"Alex Popov","image_24":"https:\/\/avatars.slack-edge.com\/2023-03-29\/5033076824964_a64f82312a141123fbbf_24.png","image_32":"https:\/\/avatars.slack-edge.com\/2023-03-29\/5033076824964_a64f82312a141123fbbf_32.png","image_48":"https:\/\/avatars.slack-edge.com\/2023-03-29\/5033076824964_a64f82312a141123fbbf_48.png","image_72":"https:\/\/avatars.slack-edge.com\/2023-03-29\/5033076824964_a64f82312a141123fbbf_72.png","image_192":"https:\/\/avatars.slack-edge.com\/2023-03-29\/5033076824964_a64f82312a141123fbbf_192.png","image_512":"https:\/\/avatars.slack-edge.com\/2023-03-29\/5033076824964_a64f82312a141123fbbf_512.png","image_1024":"https:\/\/avatars.slack-edge.com\/2023-03-29\/5033076824964_a64f82312a141123fbbf_1024.png","image_original":"https:\/\/avatars.slack-edge.com\/2023-03-29\/5033076824964_a64f82312a141123fbbf_original.png","is_custom_image":true,"first_name":"Alexandr","last_name":"Popov","team":"T010QS7UQNA","email":"alexandr.popov@paramount.com","title":"Senior Software Quality Assurance Engineer","phone":"","skype":"","status_text":"","status_text_canonical":"","status_emoji":"","status_emoji_display_info":[],"status_expiration":0,"huddle_state":"default_unset","huddle_state_expiration_ts":0,"ooo_message":""}}}
2025-08-22 14:10:13,630 - auth.slack_user_info - DEBUG - [slack_user_info.py:63] - Retrieved email for user U01RMTFMALF: alexandr.popov@paramount.com
2025-08-22 14:10:13,631 - auth.email_whitelist - DEBUG - [email_whitelist.py:57] - Email access granted: alexandr.popov@paramount.com
2025-08-22 14:10:13,631 - __main__ - INFO - [main.py:118] - Access granted to user U01RMTFMALF with email alexandr.popov@paramount.com
2025-08-22 14:10:13,631 - __main__ - DEBUG - [main.py:490] - User access check passed for DM
2025-08-22 14:10:13,631 - __main__ - INFO - [main.py:492] - Processing DM question from user U01RMTFMALF: How can i run an automated test on a local Android phone?
2025-08-22 14:10:13,631 - __main__ - DEBUG - [main.py:495] - Starting DM processing...
2025-08-22 14:10:13,631 - __main__ - DEBUG - [main.py:498] - Checking if 'how can i run an automated test on a local android phone?' is an admin command in DM
2025-08-22 14:10:13,631 - __main__ - DEBUG - [main.py:534] - Checking if DM thread is already being processed...
2025-08-22 14:10:13,631 - utils - DEBUG - [utils.py:67] - Managing thread: D09A0LFHK8R:1755897012.620639, action: add, user: U01RMTFMALF
2025-08-22 14:10:13,632 - utils - INFO - [utils.py:94] - Added thread D09A0LFHK8R:1755897012.620639 to active tracking (total: 1)
2025-08-22 14:10:13,632 - __main__ - DEBUG - [main.py:539] - DM thread management check passed
2025-08-22 14:10:13,632 - slack_sdk.web.base_client - DEBUG - [base_client.py:255] - Sending a request - url: https://slack.com/api/reactions.add, query_params: {}, body_params: {'channel': 'D09A0LFHK8R', 'name': 'thinking_face', 'timestamp': '1755897012.620639', 'team_id': 'T010QS7UQNA'}, files: {}, json_body: None, headers: {'Content-Type': 'application/x-www-form-urlencoded', 'Authorization': '(redacted)', 'User-Agent': 'Python/3.12.0 slackclient/3.34.0 Darwin/23.4.0'}
2025-08-22 14:10:14,020 - slack_sdk.web.base_client - DEBUG - [base_client.py:546] - Received the following response - status: 200, headers: {'date': 'Fri, 22 Aug 2025 21:10:13 GMT', 'server': 'Apache', 'vary': 'Accept-Encoding', 'x-slack-req-id': '5470b2aef56fee7cdbfe0f7a468ff6f5', 'x-content-type-options': 'nosniff', 'x-xss-protection': '0', 'pragma': 'no-cache', 'cache-control': 'private, no-cache, no-store, must-revalidate', 'expires': 'Sat, 26 Jul 1997 05:00:00 GMT', 'content-type': 'application/json; charset=utf-8', 'x-accepted-oauth-scopes': 'reactions:write', 'x-oauth-scopes': 'app_mentions:read,channels:history,chat:write,im:history,im:read,im:write,users:read,reactions:write,users:read.email', 'access-control-expose-headers': 'x-slack-req-id, retry-after', 'access-control-allow-headers': 'slack-route, x-slack-version-ts, x-b3-traceid, x-b3-spanid, x-b3-parentspanid, x-b3-sampled, x-b3-flags', 'strict-transport-security': 'max-age=31536000; includeSubDomains; preload', 'referrer-policy': 'no-referrer', 'x-slack-unique-id': 'aKjctTGW7dtSwOtCEmLe1wAAACE', 'x-slack-backend': 'r', 'access-control-allow-origin': '*', 'content-length': '11', 'via': '1.1 slack-prod.tinyspeck.com, envoy-www-iad-tknjynoh,envoy-edge-pdx-nqlcgetr', 'x-envoy-attempt-count': '1', 'x-envoy-upstream-service-time': '135', 'x-backend': 'main_normal main_canary_with_overflow main_control_with_overflow', 'x-server': 'slack-www-hhvm-main-iad-wwuz', 'x-slack-shared-secret-outcome': 'no-match', 'x-edge-backend': 'envoy-www', 'timing-allow-origin': '*', 'x-slack-edge-shared-secret-outcome': 'no-match', 'connection': 'close'}, body: {"ok":true}
2025-08-22 14:10:14,020 - __main__ - INFO - [main.py:556] - Processing DM question from <@U01RMTFMALF>: How can i run an automated test on a local Android phone?
2025-08-22 14:10:14,020 - __main__ - INFO - [main.py:560] - Sending DM request to DIG AI...
2025-08-22 14:10:14,020 - dig_connector - INFO - [dig_connector.py:134] - Generating response for query: 'How can i run an automated test on a local Android phone?' with 0 chunks
2025-08-22 14:10:14,020 - dig_connector - DEBUG - [dig_connector.py:138] - Formatted context length: 0
2025-08-22 14:10:14,020 - dig_connector - INFO - [dig_connector.py:141] - No context available, using direct query
2025-08-22 14:10:14,020 - dig_connector - INFO - [dig_connector.py:150] - Sending prompt to DIG platform...
2025-08-22 14:10:14,020 - dig_connector - INFO - [dig_connector.py:121] - Sending message to DIG API - URL: https://ai.digdev.cbsicloud.com/fastapi/chats/884/generate
2025-08-22 14:10:14,021 - dig_connector - DEBUG - [dig_connector.py:122] - Message payload: {'model_id': 42, 'message_text': 'How can i run an automated test on a local Android phone?', 'history': [{'role': 'user', 'content': 'How can i run an automated test on a local Android phone?'}]}
2025-08-22 14:10:25,413 - urllib3.connectionpool - DEBUG - [connectionpool.py:549] - https://ai.digdev.cbsicloud.com:443 "POST /fastapi/chats/884/generate HTTP/1.1" 200 4888
2025-08-22 14:10:25,414 - dig_connector - DEBUG - [dig_connector.py:125] - DIG API response: status=200
2025-08-22 14:10:25,414 - dig_connector - DEBUG - [dig_connector.py:129] - DIG API response data: {'message_text': 'To run an automated test on a local Android phone, you\'ll need to set up your environment and then execute the tests using a command. Here\'s a breakdown of the steps and considerations:\n\n**1. Environment Setup:**\n\n*   **Android Home Environment Variable:** Ensure your `ANDROID_HOME` environment variable is set and included in your system\'s path, especially if you are using an Android Emulator. (Source: https://paramount.atlassian.net/wiki/spaces/PLQA/pages/47713566)\n*   **Appium Server:** If your tests use Appium, you\'ll need to start the Appium server. A sample `Test Class` can include methods to start and stop the Appium server. (Source: https://paramount.atlassian.net/wiki/spaces/PLQA/pages/47711460)\n*   **Android Emulator (Optional):** If you\'re running tests on an emulator instead of a physical device, you can launch the emulator. A sample `Test Class` might include functionality to start and stop the Android Emulator. (Source: https://paramount.atlassian.net/wiki/spaces/PLQA/pages/47711460)\n*   **Connect to VPN:** Connect to the VPN if required for your testing environment. (Source: https://paramount.atlassian.net/wiki/spaces/PLQA/pages/47720266)\n*   **Synergy Server (if applicable):** If your setup involves Synergy, download the latest version of the Synergy server and run the `.jar` file. (Source: https://paramount.atlassian.net/wiki/spaces/PLQA/pages/47720266)\n\n**2. Configuration:**\n\n*   **Update Desired Capabilities:** Update the `.config` file (usually located under the `mqe-hob-mobile-tests` directory) with your desired capabilities. Key parameters for local Android testing include:\n    *   `Platform=ANDROID`\n    *   `MobileDeviceCategory=PHONE`\n    *   `DeviceStartOrientation=PORTRAIT` (or LANDSCAPE)\n    *   `DebugDeviceID`: Add the device ID of your emulator or real device. You can typically find this by typing `adb devices` in your terminal.\n    *   `ClientID`: Machine serial number for local executions or to target a specific private lab machine.\n    *   `Environment=local` (Source: https://paramount.atlassian.net/wiki/spaces/PLQA/pages/47720266, https://paramount.atlassian.net/wiki/spaces/PLQA/pages/47711460)\n*   **App Package:** Provide the path to your Android application package (e.g., `.apk` file) using the `-Dapp` argument in your run configuration. (Source: https://paramount.atlassian.net/wiki/spaces/PLQA/pages/47711460)\n*   **Bundle ID:** You might need to set the bundle ID to override default settings using `-DbundleId`. (Source: https://paramount.atlassian.net/wiki/spaces/PLQA/pages/47711460)\n*   **Real Mobile Device ID (UDID):** If running on a real mobile device, set the `Dudid` parameter. (Source: https://paramount.atlassian.net/wiki/spaces/PLQA/pages/47711460)\n\n**3. Running the Test:**\n\nYou can typically run the tests from your terminal using `maven` commands.\n\n*   **Basic Command:**\n    ```\n    mvn clean test -pl mqe-hob-mobile-tests -am -Dgroups=Your test case number or tag\n    ```\n    (Source: https://paramount.atlassian.net/wiki/spaces/PLQA/pages/47720266)\n\n*   **Example with detailed parameters:**\n    ```\n    mvn test -Dmaven.repo.local=./.m2 -Dcucumber.features="$test" -Ddriver=android -DplatformName=android -Dudid=YOUR_DEVICE_ID -Denvironment=local -DtargetURL=test-www.paramountplus.com -Dapp=/pathToPackage/mobile-8.0.44-210804410-3.5.25-paramountPlus-playStore-release.apk -DbundleId=com.cbsvideodebug.app -Dbuild=P+_Android_phone_test-www -Dproject="P+ Android Mobile"\n    ```\n    (Source: https://paramount.atlassian.net/wiki/spaces/PLQA/pages/47721257, https://paramount.atlassian.net/wiki/spaces/PLQA/pages/47711460)\n\n    *   `-Ddriver=android`: Specifies that the test should use an Android driver.\n    *   `-DplatformName=Android`: Specifies the platform name.\n    *   `-DplatformVersion`: You can specify the Android version, e.g., `-DplatformVersion=11.0`.\n    *   `-DdeviceName`: You can specify the device name, e.g., `-DdeviceName="Google Pixel 2XL"`.\n    *   `-Denvironment=local`: Indicates that the test is running in a local environment.\n    *   `-Dudid`: For real devices, set this to your device\'s Unique Device Identifier.\n\n*   **Running with specific groups:** You can pass a parameter like `-Dgroups=Smoke` to run tests belonging to a specific group. (Source: https://paramount.atlassian.net/wiki/spaces/PLQA/pages/47720266)\n\n**Important Notes:**\n\n*   Ensure that any required dependencies and build tools (like Maven) are correctly installed and configured on your system.\n*   The exact commands and parameters may vary depending on your specific test automation framework (e.g., Appium, Espresso, UI Automator) and project setup.\n*   Refer to the documentation for your chosen testing framework for the most accurate and up-to-date instructions.', 'requires_approval': False, 'execution_id': 1587}
2025-08-22 14:10:25,415 - dig_connector - INFO - [dig_connector.py:154] - Extracting response content...
2025-08-22 14:10:25,415 - dig_connector - DEBUG - [dig_connector.py:221] - Found message_text in response
2025-08-22 14:10:25,416 - dig_connector - INFO - [dig_connector.py:157] - Successfully generated response (length: 4765)
2025-08-22 14:10:25,416 - __main__ - INFO - [main.py:563] - Received DM response from DIG AI
2025-08-22 14:10:25,416 - __main__ - DEBUG - [main.py:564] - DIG AI DM response: To run an automated test on a local Android phone, you'll need to set up your environment and then execute the tests using a command. Here's a breakdown of the steps and considerations:

**1. Environment Setup:**

*   **Android Home Environment Variable:** Ensure your `ANDROID_HOME` environment variable is set and included in your system's path, especially if you are using an Android Emulator. (Source: https://paramount.atlassian.net/wiki/spaces/PLQA/pages/47713566)
*   **Appium Server:** If your tests use Appium, you'll need to start the Appium server. A sample `Test Class` can include methods to start and stop the Appium server. (Source: https://paramount.atlassian.net/wiki/spaces/PLQA/pages/47711460)
*   **Android Emulator (Optional):** If you're running tests on an emulator instead of a physical device, you can launch the emulator. A sample `Test Class` might include functionality to start and stop the Android Emulator. (Source: https://paramount.atlassian.net/wiki/spaces/PLQA/pages/47711460)
*   **Connect to VPN:** Connect to the VPN if required for your testing environment. (Source: https://paramount.atlassian.net/wiki/spaces/PLQA/pages/47720266)
*   **Synergy Server (if applicable):** If your setup involves Synergy, download the latest version of the Synergy server and run the `.jar` file. (Source: https://paramount.atlassian.net/wiki/spaces/PLQA/pages/47720266)

**2. Configuration:**

*   **Update Desired Capabilities:** Update the `.config` file (usually located under the `mqe-hob-mobile-tests` directory) with your desired capabilities. Key parameters for local Android testing include:
    *   `Platform=ANDROID`
    *   `MobileDeviceCategory=PHONE`
    *   `DeviceStartOrientation=PORTRAIT` (or LANDSCAPE)
    *   `DebugDeviceID`: Add the device ID of your emulator or real device. You can typically find this by typing `adb devices` in your terminal.
    *   `ClientID`: Machine serial number for local executions or to target a specific private lab machine.
    *   `Environment=local` (Source: https://paramount.atlassian.net/wiki/spaces/PLQA/pages/47720266, https://paramount.atlassian.net/wiki/spaces/PLQA/pages/47711460)
*   **App Package:** Provide the path to your Android application package (e.g., `.apk` file) using the `-Dapp` argument in your run configuration. (Source: https://paramount.atlassian.net/wiki/spaces/PLQA/pages/47711460)
*   **Bundle ID:** You might need to set the bundle ID to override default settings using `-DbundleId`. (Source: https://paramount.atlassian.net/wiki/spaces/PLQA/pages/47711460)
*   **Real Mobile Device ID (UDID):** If running on a real mobile device, set the `Dudid` parameter. (Source: https://paramount.atlassian.net/wiki/spaces/PLQA/pages/47711460)

**3. Running the Test:**

You can typically run the tests from your terminal using `maven` commands.

*   **Basic Command:**
    ```
    mvn clean test -pl mqe-hob-mobile-tests -am -Dgroups=Your test case number or tag
    ```
    (Source: https://paramount.atlassian.net/wiki/spaces/PLQA/pages/47720266)

*   **Example with detailed parameters:**
    ```
    mvn test -Dmaven.repo.local=./.m2 -Dcucumber.features="$test" -Ddriver=android -DplatformName=android -Dudid=YOUR_DEVICE_ID -Denvironment=local -DtargetURL=test-www.paramountplus.com -Dapp=/pathToPackage/mobile-8.0.44-210804410-3.5.25-paramountPlus-playStore-release.apk -DbundleId=com.cbsvideodebug.app -Dbuild=P+_Android_phone_test-www -Dproject="P+ Android Mobile"
    ```
    (Source: https://paramount.atlassian.net/wiki/spaces/PLQA/pages/47721257, https://paramount.atlassian.net/wiki/spaces/PLQA/pages/47711460)

    *   `-Ddriver=android`: Specifies that the test should use an Android driver.
    *   `-DplatformName=Android`: Specifies the platform name.
    *   `-DplatformVersion`: You can specify the Android version, e.g., `-DplatformVersion=11.0`.
    *   `-DdeviceName`: You can specify the device name, e.g., `-DdeviceName="Google Pixel 2XL"`.
    *   `-Denvironment=local`: Indicates that the test is running in a local environment.
    *   `-Dudid`: For real devices, set this to your device's Unique Device Identifier.

*   **Running with specific groups:** You can pass a parameter like `-Dgroups=Smoke` to run tests belonging to a specific group. (Source: https://paramount.atlassian.net/wiki/spaces/PLQA/pages/47720266)

**Important Notes:**

*   Ensure that any required dependencies and build tools (like Maven) are correctly installed and configured on your system.
*   The exact commands and parameters may vary depending on your specific test automation framework (e.g., Appium, Espresso, UI Automator) and project setup.
*   Refer to the documentation for your chosen testing framework for the most accurate and up-to-date instructions.
2025-08-22 14:10:25,418 - __main__ - DEBUG - [main.py:568] - Formatted DM response: *Your Question:*
> How can i run an automated test on a local Android phone?

*Answer:*
To run an automated test on a local Android phone, you'll need to set up your environment and then execute the tests using a command. Here's a breakdown of the steps and considerations:

*1. Environment Setup:*

*   *Android Home Environment Variable:* Ensure your `ANDROID_HOME` environment variable is set and included in your system's path, especially if you are using an Android Emulator.
*   *Appium Server:* If your tests use Appium, you'll need to start the Appium server. A sample `Test Class` can include methods to start and stop the Appium server.
*   *Android Emulator (Optional):* If you're running tests on an emulator instead of a physical device, you can launch the emulator. A sample `Test Class` might include functionality to start and stop the Android Emulator.
*   *Connect to VPN:* Connect to the VPN if required for your testing environment.
*   *Synergy Server (if applicable):* If your setup involves Synergy, download the latest version of the Synergy server and run the `.jar` file.

*2. Configuration:*

*   *Update Desired Capabilities:* Update the `.config` file (usually located under the `mqe-hob-mobile-tests` directory) with your desired capabilities. Key parameters for local Android testing include:
    *   `Platform=ANDROID`
    *   `MobileDeviceCategory=PHONE`
    *   `DeviceStartOrientation=PORTRAIT` (or LANDSCAPE)
    *   `DebugDeviceID`: Add the device ID of your emulator or real device. You can typically find this by typing `adb devices` in your terminal.
    *   `ClientID`: Machine serial number for local executions or to target a specific private lab machine.
    *   `Environment=local`
*   *App Package:* Provide the path to your Android application package (e.g., `.apk` file) using the `-Dapp` argument in your run configuration.
*   *Bundle ID:* You might need to set the bundle ID to override default settings using `-DbundleId`.
*   *Real Mobile Device ID (UDID):* If running on a real mobile device, set the `Dudid` parameter.

*3. Running the Test:*

You can typically run the tests from your terminal using `maven` commands.

*   *Basic Command:*
    ```
    mvn clean test -pl mqe-hob-mobile-tests -am -Dgroups=Your test case number or tag
    ```

*   *Example with detailed parameters:*
    ```
    mvn test -Dmaven.repo.local=./.m2 -Dcucumber.features="$test" -Ddriver=android -DplatformName=android -Dudid=YOUR_DEVICE_ID -Denvironment=local -DtargetURL=test-www.paramountplus.com -Dapp=/pathToPackage/mobile-8.0.44-210804410-3.5.25-paramountPlus-playStore-release.apk -DbundleId=com.cbsvideodebug.app -Dbuild=P+_Android_phone_test-www -Dproject="P+ Android Mobile"
    ```

    *   `-Ddriver=android`: Specifies that the test should use an Android driver.
    *   `-DplatformName=Android`: Specifies the platform name.
    *   `-DplatformVersion`: You can specify the Android version, e.g., `-DplatformVersion=11.0`.
    *   `-DdeviceName`: You can specify the device name, e.g., `-DdeviceName="Google Pixel 2XL"`.
    *   `-Denvironment=local`: Indicates that the test is running in a local environment.
    *   `-Dudid`: For real devices, set this to your device's Unique Device Identifier.

*   *Running with specific groups:* You can pass a parameter like `-Dgroups=Smoke` to run tests belonging to a specific group.

*Important Notes:*

*   Ensure that any required dependencies and build tools (like Maven) are correctly installed and configured on your system.
*   The exact commands and parameters may vary depending on your specific test automation framework (e.g., Appium, Espresso, UI Automator) and project setup.
*   Refer to the documentation for your chosen testing framework for the most accurate and up-to-date instructions.

────────────────────────────────────────
*📚 Sources:*
1. <https://paramount.atlassian.net/wiki/spaces/PLQA/pages/47713566|Atlassian Documentation>
2. <https://paramount.atlassian.net/wiki/spaces/PLQA/pages/47711460|Atlassian Documentation>
3. <https://paramount.atlassian.net/wiki/spaces/PLQA/pages/47720266|Atlassian Documentation>
4. <https://paramount.atlassian.net/wiki/spaces/PLQA/pages/47720266,|Atlassian Documentation>
5. <https://paramount.atlassian.net/wiki/spaces/PLQA/pages/47721257,|Atlassian Documentation>
6. <https://paramount.atlassian.net/wiki/spaces/PLQA/pages/47720266, https://paramount.atlassian.net/wiki/spaces/PLQA/pages/47711460|Atlassian Documentation>
7. <https://paramount.atlassian.net/wiki/spaces/PLQA/pages/47721257, https://paramount.atlassian.net/wiki/spaces/PLQA/pages/47711460|Atlassian Documentation>

2025-08-22 14:10:25,420 - slack_sdk.web.base_client - DEBUG - [base_client.py:255] - Sending a request - url: https://slack.com/api/reactions.remove, query_params: {}, body_params: {'name': 'thinking_face', 'channel': 'D09A0LFHK8R', 'timestamp': '1755897012.620639', 'team_id': 'T010QS7UQNA'}, files: {}, json_body: None, headers: {'Content-Type': 'application/x-www-form-urlencoded', 'Authorization': '(redacted)', 'User-Agent': 'Python/3.12.0 slackclient/3.34.0 Darwin/23.4.0'}
2025-08-22 14:10:25,793 - slack_sdk.web.base_client - DEBUG - [base_client.py:546] - Received the following response - status: 200, headers: {'date': 'Fri, 22 Aug 2025 21:10:25 GMT', 'server': 'Apache', 'vary': 'Accept-Encoding', 'x-slack-req-id': '52eba175523a206157fc4271781dab2e', 'x-content-type-options': 'nosniff', 'x-xss-protection': '0', 'pragma': 'no-cache', 'cache-control': 'private, no-cache, no-store, must-revalidate', 'expires': 'Sat, 26 Jul 1997 05:00:00 GMT', 'content-type': 'application/json; charset=utf-8', 'x-accepted-oauth-scopes': 'reactions:write', 'x-oauth-scopes': 'app_mentions:read,channels:history,chat:write,im:history,im:read,im:write,users:read,reactions:write,users:read.email', 'access-control-expose-headers': 'x-slack-req-id, retry-after', 'access-control-allow-headers': 'slack-route, x-slack-version-ts, x-b3-traceid, x-b3-spanid, x-b3-parentspanid, x-b3-sampled, x-b3-flags', 'strict-transport-security': 'max-age=31536000; includeSubDomains; preload', 'referrer-policy': 'no-referrer', 'x-slack-unique-id': 'aKjcweNkg5Wk115VA8GokAAAEDA', 'x-slack-backend': 'r', 'access-control-allow-origin': '*', 'content-length': '11', 'via': '1.1 slack-prod.tinyspeck.com, envoy-www-iad-zwmyaurg,envoy-edge-pdx-zmtdfyax', 'x-envoy-attempt-count': '1', 'x-envoy-upstream-service-time': '136', 'x-backend': 'main_normal main_canary_with_overflow main_control_with_overflow', 'x-server': 'slack-www-hhvm-main-iad-umtt', 'x-slack-shared-secret-outcome': 'no-match', 'x-edge-backend': 'envoy-www', 'timing-allow-origin': '*', 'x-slack-edge-shared-secret-outcome': 'no-match', 'connection': 'close'}, body: {"ok":true}
2025-08-22 14:10:25,818 - slack_sdk.web.base_client - DEBUG - [base_client.py:255] - Sending a request - url: https://slack.com/api/chat.postMessage, query_params: {}, body_params: {}, files: {}, json_body: {'channel': 'D09A0LFHK8R', 'text': '*Your Question:*\n> How can i run an automated test on a local Android phone? *Answer:*\nTo run an automated test on a local Android phone, you\'ll need to set up your environment and then execute the tests using a command. Here\'s a breakdown of the steps and considerations:\n\n*1. Environment Setup:*\n\n*   *Android Home Environment Variable:* Ensure your `ANDROID_HOME` environment variable is set and included in your system\'s path, especially if you are using an Android Emulator. *   *Appium Server:* If your tests use Appium, you\'ll need to start the Appium server. A sample `Test Class` can include methods to start and stop the Appium server. *   *Android Emulator (Optional):* If you\'re running tests on an emulator instead of a physical device, you can launch the emulator. A sample `Test Class` might include functionality to start and stop the Android Emulator. *   *Connect to VPN:* Connect to the VPN if required for your testing environment. *   *Synergy Server (if applicable):* If your setup involves Synergy, download the latest version of the Synergy server and run the `.jar` file. *2. Configuration:*\n\n*   *Update Desired Capabilities:* Update the `.config` file (usually located under the `mqe-hob-mobile-tests` directory) with your desired capabilities. Key parameters for local Android testing include:\n    *   `Platform=ANDROID`\n    *   `MobileDeviceCategory=PHONE`\n    *   `DeviceStartOrientation=PORTRAIT` (or LANDSCAPE)\n    *   `DebugDeviceID`: Add the device ID of your emulator or real device. You can typically find this by typing `adb devices` in your terminal. *   `ClientID`: Machine serial number for local executions or to target a specific private lab machine. *   `Environment=local`\n*   *App Package:* Provide the path to your Android application package (e.g., `.apk` file) using the `-Dapp` argument in your run configuration. *   *Bundle ID:* You might need to set the bundle ID to override default settings using `-DbundleId`. *   *Real Mobile Device ID (UDID):* If running on a real mobile device, set the `Dudid` parameter. *3. Running the Test:*\n\nYou can typically run the tests from your terminal using `maven` commands. *   *Basic Command:*\n    ```\n    mvn clean test -pl mqe-hob-mobile-tests -am -Dgroups=Your test case number or tag\n    ```\n\n*   *Example with detailed parameters:*\n    ```\n    mvn test -Dmaven.repo.local=./.m2 -Dcucumber.features="$test" -Ddriver=android -DplatformName=android -Dudid=YOUR_DEVICE_ID -Denvironment=local -DtargetURL=test-www.paramountplus.com -Dapp=/pathToPackage/mobile-8.0.44-210804410-3.5.25-paramountPlus-playStore-release.apk -DbundleId=com.cbsvideodebug.app -Dbuild=P+_Android_phone_test-www -Dproject="P+ Android Mobile"\n    ```\n\n    *   `-Ddriver=android`: Specifies that the test should use an Android driver. *   `-DplatformName=Android`: Specifies the platform name. *   `-DplatformVersion`: You can specify the Android version, e.g., `-DplatformVersion=11.0`.\n\n_(message continued in thread...)_', 'thread_ts': '1755897012.620639', 'team_id': 'T010QS7UQNA'}, headers: {'Content-Type': 'application/json;charset=utf-8', 'Authorization': '(redacted)', 'User-Agent': 'Python/3.12.0 slackclient/3.34.0 Darwin/23.4.0'}
2025-08-22 14:10:26,250 - slack_sdk.web.base_client - DEBUG - [base_client.py:546] - Received the following response - status: 200, headers: {'date': 'Fri, 22 Aug 2025 21:10:26 GMT', 'server': 'Apache', 'vary': 'Accept-Encoding', 'x-slack-req-id': '2b3c1702feb91b2787033f8ba0b17c19', 'x-content-type-options': 'nosniff', 'x-xss-protection': '0', 'pragma': 'no-cache', 'cache-control': 'private, no-cache, no-store, must-revalidate', 'expires': 'Sat, 26 Jul 1997 05:00:00 GMT', 'content-type': 'application/json; charset=utf-8', 'x-accepted-oauth-scopes': 'chat:write', 'x-oauth-scopes': 'app_mentions:read,channels:history,chat:write,im:history,im:read,im:write,users:read,reactions:write,users:read.email', 'access-control-expose-headers': 'x-slack-req-id, retry-after', 'access-control-allow-headers': 'slack-route, x-slack-version-ts, x-b3-traceid, x-b3-spanid, x-b3-parentspanid, x-b3-sampled, x-b3-flags', 'strict-transport-security': 'max-age=31536000; includeSubDomains; preload', 'referrer-policy': 'no-referrer', 'x-slack-unique-id': 'aKjcwqUpToJo1iBpL-n54AAAEAQ', 'x-slack-backend': 'r', 'access-control-allow-origin': '*', 'content-length': '10195', 'via': '1.1 slack-prod.tinyspeck.com, envoy-www-iad-gwnhpxnj,envoy-edge-pdx-gqesicts', 'x-envoy-attempt-count': '1', 'x-envoy-upstream-service-time': '194', 'x-backend': 'main_normal main_canary_with_overflow main_control_with_overflow', 'x-server': 'slack-www-hhvm-main-iad-rxum', 'x-slack-shared-secret-outcome': 'no-match', 'x-edge-backend': 'envoy-www', 'timing-allow-origin': '*', 'x-slack-edge-shared-secret-outcome': 'no-match', 'connection': 'close'}, body: {"ok":true,"channel":"D09A0LFHK8R","ts":"1755897026.166019","message":{"user":"U099R6WTZ9S","type":"message","ts":"1755897026.166019","bot_id":"B099R6WTRU4","app_id":"A099LACAB2R","text":"*Your Question:*\n&gt; How can i run an automated test on a local Android phone? *Answer:*\nTo run an automated test on a local Android phone, you'll need to set up your environment and then execute the tests using a command. Here's a breakdown of the steps and considerations:\n\n*1. Environment Setup:*\n\n*   *Android Home Environment Variable:* Ensure your `ANDROID_HOME` environment variable is set and included in your system's path, especially if you are using an Android Emulator. *   *Appium Server:* If your tests use Appium, you'll need to start the Appium server. A sample `Test Class` can include methods to start and stop the Appium server. *   *Android Emulator (Optional):* If you're running tests on an emulator instead of a physical device, you can launch the emulator. A sample `Test Class` might include functionality to start and stop the Android Emulator. *   *Connect to VPN:* Connect to the VPN if required for your testing environment. *   *Synergy Server (if applicable):* If your setup involves Synergy, download the latest version of the Synergy server and run the `.jar` file. *2. Configuration:*\n\n*   *Update Desired Capabilities:* Update the `.config` file (usually located under the `mqe-hob-mobile-tests` directory) with your desired capabilities. Key parameters for local Android testing include:\n    *   `Platform=ANDROID`\n    *   `MobileDeviceCategory=PHONE`\n    *   `DeviceStartOrientation=PORTRAIT` (or LANDSCAPE)\n    *   `DebugDeviceID`: Add the device ID of your emulator or real device. You can typically find this by typing `adb devices` in your terminal. *   `ClientID`: Machine serial number for local executions or to target a specific private lab machine. *   `Environment=local`\n*   *App Package:* Provide the path to your Android application package (e.g., `.apk` file) using the `-Dapp` argument in your run configuration. *   *Bundle ID:* You might need to set the bundle ID to override default settings using `-DbundleId`. *   *Real Mobile Device ID (UDID):* If running on a real mobile device, set the `Dudid` parameter. *3. Running the Test:*\n\nYou can typically run the tests from your terminal using `maven` commands. *   *Basic Command:*\n    ```\n    mvn clean test -pl mqe-hob-mobile-tests -am -Dgroups=Your test case number or tag\n    ```\n\n*   *Example with detailed parameters:*\n    ```\n    mvn test -Dmaven.repo.local=./.m2 -Dcucumber.features=\"$test\" -Ddriver=android -DplatformName=android -Dudid=YOUR_DEVICE_ID -Denvironment=local -DtargetURL=<http://test-www.paramountplus.com|test-www.paramountplus.com> -Dapp=/pathToPackage/mobile-8.0.44-210804410-3.5.25-paramountPlus-playStore-release.apk -DbundleId=<http://com.cbsvideodebug.app|com.cbsvideodebug.app> -Dbuild=P+_Android_phone_test-www -Dproject=\"P+ Android Mobile\"\n    ```\n\n    *   `-Ddriver=android`: Specifies that the test should use an Android driver. *   `-DplatformName=Android`: Specifies the platform name. *   `-DplatformVersion`: You can specify the Android version, e.g., `-DplatformVersion=11.0`.\n\n_(message continued in thread...)_","team":"T010QS7UQNA","bot_profile":{"id":"B099R6WTRU4","app_id":"A099LACAB2R","user_id":"U099R6WTZ9S","name":"AutoBot","icons":{"image_36":"https://a.slack-edge.com/80588/img/plugins/app/bot_36.png","image_48":"https://a.slack-edge.com/80588/img/plugins/app/bot_48.png","image_72":"https://a.slack-edge.com/80588/img/plugins/app/service_72.png"},"deleted":false,"updated":1754677948,"team_id":"T010QS7UQNA"},"thread_ts":"1755897012.620639","parent_user_id":"U01RMTFMALF","blocks":[{"type":"rich_text","block_id":"AYWdS","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Your Question:","style":{"bold":true}}]},{"type":"rich_text_quote","elements":[{"type":"text","text":"How can i run an automated test on a local Android phone? "},{"type":"text","text":"Answer:","style":{"bold":true}}]},{"type":"rich_text_section","elements":[{"type":"text","text":"To run an automated test on a local Android phone, you'll need to set up your environment and then execute the tests using a command. Here's a breakdown of the steps and considerations:\n\n"},{"type":"text","text":"1. Environment Setup:","style":{"bold":true}},{"type":"text","text":"\n\n*   "},{"type":"text","text":"Android Home Environment Variable:","style":{"bold":true}},{"type":"text","text":" Ensure your "},{"type":"text","text":"ANDROID_HOME","style":{"code":true}},{"type":"text","text":" environment variable is set and included in your system's path, especially if you are using an Android Emulator. *   "},{"type":"text","text":"Appium Server:","style":{"bold":true}},{"type":"text","text":" If your tests use Appium, you'll need to start the Appium server. A sample "},{"type":"text","text":"Test Class","style":{"code":true}},{"type":"text","text":" can include methods to start and stop the Appium server. *   "},{"type":"text","text":"Android Emulator (Optional):","style":{"bold":true}},{"type":"text","text":" If you're running tests on an emulator instead of a physical device, you can launch the emulator. A sample "},{"type":"text","text":"Test Class","style":{"code":true}},{"type":"text","text":" might include functionality to start and stop the Android Emulator. *   "},{"type":"text","text":"Connect to VPN:","style":{"bold":true}},{"type":"text","text":" Connect to the VPN if required for your testing environment. *   "},{"type":"text","text":"Synergy Server (if applicable):","style":{"bold":true}},{"type":"text","text":" If your setup involves Synergy, download the latest version of the Synergy server and run the "},{"type":"text","text":".jar","style":{"code":true}},{"type":"text","text":" file. "},{"type":"text","text":"2. Configuration:","style":{"bold":true}},{"type":"text","text":"\n\n*   "},{"type":"text","text":"Update Desired Capabilities:","style":{"bold":true}},{"type":"text","text":" Update the "},{"type":"text","text":".config","style":{"code":true}},{"type":"text","text":" file (usually located under the "},{"type":"text","text":"mqe-hob-mobile-tests","style":{"code":true}},{"type":"text","text":" directory) with your desired capabilities. Key parameters for local Android testing include:\n    *   "},{"type":"text","text":"Platform=ANDROID","style":{"code":true}},{"type":"text","text":"\n    *   "},{"type":"text","text":"MobileDeviceCategory=PHONE","style":{"code":true}},{"type":"text","text":"\n    *   "},{"type":"text","text":"DeviceStartOrientation=PORTRAIT","style":{"code":true}},{"type":"text","text":" (or LANDSCAPE)\n    *   "},{"type":"text","text":"DebugDeviceID","style":{"code":true}},{"type":"text","text":": Add the device ID of your emulator or real device. You can typically find this by typing "},{"type":"text","text":"adb devices","style":{"code":true}},{"type":"text","text":" in your terminal. *   "},{"type":"text","text":"ClientID","style":{"code":true}},{"type":"text","text":": Machine serial number for local executions or to target a specific private lab machine. *   "},{"type":"text","text":"Environment=local","style":{"code":true}},{"type":"text","text":"\n*   "},{"type":"text","text":"App Package:","style":{"bold":true}},{"type":"text","text":" Provide the path to your Android application package (e.g., "},{"type":"text","text":".apk","style":{"code":true}},{"type":"text","text":" file) using the "},{"type":"text","text":"-Dapp","style":{"code":true}},{"type":"text","text":" argument in your run configuration. *   "},{"type":"text","text":"Bundle ID:","style":{"bold":true}},{"type":"text","text":" You might need to set the bundle ID to override default settings using "},{"type":"text","text":"-DbundleId","style":{"code":true}},{"type":"text","text":". *   "},{"type":"text","text":"Real Mobile Device ID (UDID):","style":{"bold":true}},{"type":"text","text":" If running on a real mobile device, set the "},{"type":"text","text":"Dudid","style":{"code":true}},{"type":"text","text":" parameter. "},{"type":"text","text":"3. Running the Test:","style":{"bold":true}},{"type":"text","text":"\n\nYou can typically run the tests from your terminal using "},{"type":"text","text":"maven","style":{"code":true}},{"type":"text","text":" commands. *   "},{"type":"text","text":"Basic Command:","style":{"bold":true}},{"type":"text","text":"\n    "}]},{"type":"rich_text_preformatted","elements":[{"type":"text","text":"    mvn clean test -pl mqe-hob-mobile-tests -am -Dgroups=Your test case number or tag\n    "}]},{"type":"rich_text_section","elements":[{"type":"text","text":"\n\n*   "},{"type":"text","text":"Example with detailed parameters:","style":{"bold":true}},{"type":"text","text":"\n    "}]},{"type":"rich_text_preformatted","elements":[{"type":"text","text":"    mvn test -Dmaven.repo.local=./.m2 -Dcucumber.features=\"$test\" -Ddriver=android -DplatformName=android -Dudid=YOUR_DEVICE_ID -Denvironment=local -DtargetURL="},{"type":"link","url":"http://test-www.paramountplus.com","text":"test-www.paramountplus.com","unsafe":true},{"type":"text","text":" -Dapp=/pathToPackage/mobile-8.0.44-210804410-3.5.25-paramountPlus-playStore-release.apk -DbundleId="},{"type":"link","url":"http://com.cbsvideodebug.app","text":"com.cbsvideodebug.app"},{"type":"text","text":" -Dbuild=P+_Android_phone_test-www -Dproject=\"P+ Android Mobile\"\n    "}]},{"type":"rich_text_section","elements":[{"type":"text","text":"\n\n    *   "},{"type":"text","text":"-Ddriver=android","style":{"code":true}},{"type":"text","text":": Specifies that the test should use an Android driver. *   "},{"type":"text","text":"-DplatformName=Android","style":{"code":true}},{"type":"text","text":": Specifies the platform name. *   "},{"type":"text","text":"-DplatformVersion","style":{"code":true}},{"type":"text","text":": You can specify the Android version, e.g., "},{"type":"text","text":"-DplatformVersion=11.0","style":{"code":true}},{"type":"text","text":".\n\n"},{"type":"text","text":"(message continued in thread...)","style":{"italic":true}}]}]}]}}
2025-08-22 14:10:26,252 - slack_sdk.web.base_client - DEBUG - [base_client.py:255] - Sending a request - url: https://slack.com/api/chat.postMessage, query_params: {}, body_params: {}, files: {}, json_body: {'channel': 'D09A0LFHK8R', 'text': '_(part 2/2)_\n\n*   `-DdeviceName`: You can specify the device name, e.g., `-DdeviceName="Google Pixel 2XL"`. *   `-Denvironment=local`: Indicates that the test is running in a local environment. *   `-Dudid`: For real devices, set this to your device\'s Unique Device Identifier. *   *Running with specific groups:* You can pass a parameter like `-Dgroups=Smoke` to run tests belonging to a specific group. *Important Notes:*\n\n*   Ensure that any required dependencies and build tools (like Maven) are correctly installed and configured on your system. *   The exact commands and parameters may vary depending on your specific test automation framework (e.g., Appium, Espresso, UI Automator) and project setup. *   Refer to the documentation for your chosen testing framework for the most accurate and up-to-date instructions. ────────────────────────────────────────\n*📚 Sources:*\n1. <https://paramount.atlassian.net/wiki/spaces/PLQA/pages/47713566|Atlassian Documentation>\n2. <https://paramount.atlassian.net/wiki/spaces/PLQA/pages/47711460|Atlassian Documentation>\n3. <https://paramount.atlassian.net/wiki/spaces/PLQA/pages/47720266|Atlassian Documentation>\n4. <https://paramount.atlassian.net/wiki/spaces/PLQA/pages/47720266,|Atlassian Documentation>\n5. <https://paramount.atlassian.net/wiki/spaces/PLQA/pages/47721257,|Atlassian Documentation>\n6. <https://paramount.atlassian.net/wiki/spaces/PLQA/pages/47720266, https://paramount.atlassian.net/wiki/spaces/PLQA/pages/47711460|Atlassian Documentation>\n7. <https://paramount.atlassian.net/wiki/spaces/PLQA/pages/47721257, https://paramount.atlassian.net/wiki/spaces/PLQA/pages/47711460|Atlassian Documentation>', 'thread_ts': '1755897012.620639', 'team_id': 'T010QS7UQNA'}, headers: {'Content-Type': 'application/json;charset=utf-8', 'Authorization': '(redacted)', 'User-Agent': 'Python/3.12.0 slackclient/3.34.0 Darwin/23.4.0'}
2025-08-22 14:10:26,919 - slack_sdk.web.base_client - DEBUG - [base_client.py:546] - Received the following response - status: 200, headers: {'date': 'Fri, 22 Aug 2025 21:10:26 GMT', 'server': 'Apache', 'vary': 'Accept-Encoding', 'x-slack-req-id': '8f7ff89566555d0f73aa5af8961e79d6', 'x-content-type-options': 'nosniff', 'x-xss-protection': '0', 'pragma': 'no-cache', 'cache-control': 'private, no-cache, no-store, must-revalidate', 'expires': 'Sat, 26 Jul 1997 05:00:00 GMT', 'content-type': 'application/json; charset=utf-8', 'x-accepted-oauth-scopes': 'chat:write', 'x-oauth-scopes': 'app_mentions:read,channels:history,chat:write,im:history,im:read,im:write,users:read,reactions:write,users:read.email', 'access-control-expose-headers': 'x-slack-req-id, retry-after', 'access-control-allow-headers': 'slack-route, x-slack-version-ts, x-b3-traceid, x-b3-spanid, x-b3-parentspanid, x-b3-sampled, x-b3-flags', 'strict-transport-security': 'max-age=31536000; includeSubDomains; preload', 'referrer-policy': 'no-referrer', 'x-slack-unique-id': 'aKjcwp3cN4kJKlA4mnGXhAAAABc', 'x-slack-backend': 'r', 'access-control-allow-origin': '*', 'content-length': '5383', 'via': '1.1 slack-prod.tinyspeck.com, envoy-www-iad-mjhvktjt,envoy-edge-pdx-avejhwjw', 'x-envoy-attempt-count': '1', 'x-envoy-upstream-service-time': '172', 'x-backend': 'main_normal main_canary_with_overflow main_control_with_overflow', 'x-server': 'slack-www-hhvm-main-iad-xfrr', 'x-slack-shared-secret-outcome': 'no-match', 'x-edge-backend': 'envoy-www', 'timing-allow-origin': '*', 'x-slack-edge-shared-secret-outcome': 'no-match', 'connection': 'close'}, body: {"ok":true,"channel":"D09A0LFHK8R","ts":"1755897026.612909","message":{"user":"U099R6WTZ9S","type":"message","ts":"1755897026.612909","bot_id":"B099R6WTRU4","app_id":"A099LACAB2R","text":"_(part 2/2)_\n\n*   `-DdeviceName`: You can specify the device name, e.g., `-DdeviceName=\"Google Pixel 2XL\"`. *   `-Denvironment=local`: Indicates that the test is running in a local environment. *   `-Dudid`: For real devices, set this to your device's Unique Device Identifier. *   *Running with specific groups:* You can pass a parameter like `-Dgroups=Smoke` to run tests belonging to a specific group. *Important Notes:*\n\n*   Ensure that any required dependencies and build tools (like Maven) are correctly installed and configured on your system. *   The exact commands and parameters may vary depending on your specific test automation framework (e.g., Appium, Espresso, UI Automator) and project setup. *   Refer to the documentation for your chosen testing framework for the most accurate and up-to-date instructions. ────────────────────────────────────────\n*:books: Sources:*\n1. <https://paramount.atlassian.net/wiki/spaces/PLQA/pages/47713566|Atlassian Documentation>\n2. <https://paramount.atlassian.net/wiki/spaces/PLQA/pages/47711460|Atlassian Documentation>\n3. <https://paramount.atlassian.net/wiki/spaces/PLQA/pages/47720266|Atlassian Documentation>\n4. <https://paramount.atlassian.net/wiki/spaces/PLQA/pages/47720266,|Atlassian Documentation>\n5. <https://paramount.atlassian.net/wiki/spaces/PLQA/pages/47721257,|Atlassian Documentation>\n6. <https://paramount.atlassian.net/wiki/spaces/PLQA/pages/47720266, https://paramount.atlassian.net/wiki/spaces/PLQA/pages/47711460|Atlassian Documentation>\n7. <https://paramount.atlassian.net/wiki/spaces/PLQA/pages/47721257, https://paramount.atlassian.net/wiki/spaces/PLQA/pages/47711460|Atlassian Documentation>","team":"T010QS7UQNA","bot_profile":{"id":"B099R6WTRU4","app_id":"A099LACAB2R","user_id":"U099R6WTZ9S","name":"AutoBot","icons":{"image_36":"https://a.slack-edge.com/80588/img/plugins/app/bot_36.png","image_48":"https://a.slack-edge.com/80588/img/plugins/app/bot_48.png","image_72":"https://a.slack-edge.com/80588/img/plugins/app/service_72.png"},"deleted":false,"updated":1754677948,"team_id":"T010QS7UQNA"},"thread_ts":"1755897012.620639","parent_user_id":"U01RMTFMALF","blocks":[{"type":"rich_text","block_id":"N9W","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"(part 2/2)","style":{"italic":true}},{"type":"text","text":"\n\n*   "},{"type":"text","text":"-DdeviceName","style":{"code":true}},{"type":"text","text":": You can specify the device name, e.g., "},{"type":"text","text":"-DdeviceName=\"Google Pixel 2XL\"","style":{"code":true}},{"type":"text","text":". *   "},{"type":"text","text":"-Denvironment=local","style":{"code":true}},{"type":"text","text":": Indicates that the test is running in a local environment. *   "},{"type":"text","text":"-Dudid","style":{"code":true}},{"type":"text","text":": For real devices, set this to your device's Unique Device Identifier. *   "},{"type":"text","text":"Running with specific groups:","style":{"bold":true}},{"type":"text","text":" You can pass a parameter like "},{"type":"text","text":"-Dgroups=Smoke","style":{"code":true}},{"type":"text","text":" to run tests belonging to a specific group. "},{"type":"text","text":"Important Notes:","style":{"bold":true}},{"type":"text","text":"\n\n*   Ensure that any required dependencies and build tools (like Maven) are correctly installed and configured on your system. *   The exact commands and parameters may vary depending on your specific test automation framework (e.g., Appium, Espresso, UI Automator) and project setup. *   Refer to the documentation for your chosen testing framework for the most accurate and up-to-date instructions. ────────────────────────────────────────\n"},{"type":"emoji","name":"books","unicode":"1f4da","style":{"bold":true}},{"type":"text","text":" Sources:","style":{"bold":true}},{"type":"text","text":"\n1. "},{"type":"link","url":"https://paramount.atlassian.net/wiki/spaces/PLQA/pages/47713566","text":"Atlassian Documentation"},{"type":"text","text":"\n2. "},{"type":"link","url":"https://paramount.atlassian.net/wiki/spaces/PLQA/pages/47711460","text":"Atlassian Documentation"},{"type":"text","text":"\n3. "},{"type":"link","url":"https://paramount.atlassian.net/wiki/spaces/PLQA/pages/47720266","text":"Atlassian Documentation"},{"type":"text","text":"\n4. "},{"type":"link","url":"https://paramount.atlassian.net/wiki/spaces/PLQA/pages/47720266,","text":"Atlassian Documentation"},{"type":"text","text":"\n5. "},{"type":"link","url":"https://paramount.atlassian.net/wiki/spaces/PLQA/pages/47721257,","text":"Atlassian Documentation"},{"type":"text","text":"\n6. "},{"type":"link","url":"https://paramount.atlassian.net/wiki/spaces/PLQA/pages/47720266, https://paramount.atlassian.net/wiki/spaces/PLQA/pages/47711460","text":"Atlassian Documentation"},{"type":"text","text":"\n7. "},{"type":"link","url":"https://paramount.atlassian.net/wiki/spaces/PLQA/pages/47721257, https://paramount.atlassian.net/wiki/spaces/PLQA/pages/47711460","text":"Atlassian Documentation"}]}]}]}}
2025-08-22 14:10:26,921 - __main__ - DEBUG - [main.py:593] - Cleaning up DM thread tracking...
2025-08-22 14:10:26,921 - utils - DEBUG - [utils.py:67] - Managing thread: D09A0LFHK8R:1755897012.620639, action: remove, user: U01RMTFMALF
2025-08-22 14:10:26,921 - utils - INFO - [utils.py:100] - Removed thread D09A0LFHK8R:1755897012.620639 from active tracking (remaining: 0)
2025-08-22 14:10:27,486 - slack_bolt.App - DEBUG - [client.py:235] - on_message invoked: (message: {"envelope_id":"575df92e-8b5e-43b5-abf0-a91b88d49545","payload":{"token":"yq71khZBCyJF1Ri2hG5aNqr5","team_id":"T010QS7UQNA","enterprise_id":"ERV4P7NAD","context_team_id":null,"context_enterprise_id":"ERV4P7NAD","api_app_id":"A099LACAB2R","event":{"user":"U099R6WTZ9S","type":"message","ts":"1755897026.166019","bot_id":"B099R6WTRU4","app_id":"A099LACAB2R","text":"*Your Question:*\n&gt; How can i run an automated test on a local Android phone? *Answer:*\nTo run an automated test on a local Android phone, you'll need to set up your environment and then execute the tests using a command. Here's a breakdown of the steps and considerations:\n\n*1. Environment Setup:*\n\n*   *Android Home Environment Variable:* Ensure your `ANDROID_HOME` environment variable is set and included in your system's path, especially if you are using an Android Emulator. *   *Appium Server:* If your tests use Appium, you'll need to start the Appium server. A sample `Test Class` can include methods to start and stop the Appium server. *   *Android Emulator (Optional):* If you're running tests on an emulator instead of a physical device, you can launch the emulator. A sample `Test Class` might include functionality to start and stop the Android Emulator. *   *Connect to VPN:* Connect to the VPN if required for your testing environment. *   *Synergy Server (if applicable):* If your setup involves Synergy, download the latest version of the Synergy server and run the `.jar` file. *2. Configuration:*\n\n*   *Update Desired Capabilities:* Update the `.config` file (usually located under the `mqe-hob-mobile-tests` directory) with your desired capabilities. Key parameters for local Android testing include:\n    *   `Platform=ANDROID`\n    *   `MobileDeviceCategory=PHONE`\n    *   `DeviceStartOrientation=PORTRAIT` (or LANDSCAPE)\n    *   `DebugDeviceID`: Add the device ID of your emulator or real device. You can typically find this by typing `adb devices` in your terminal. *   `ClientID`: Machine serial number for local executions or to target a specific private lab machine. *   `Environment=local`\n*   *App Package:* Provide the path to your Android application package (e.g., `.apk` file) using the `-Dapp` argument in your run configuration. *   *Bundle ID:* You might need to set the bundle ID to override default settings using `-DbundleId`. *   *Real Mobile Device ID (UDID):* If running on a real mobile device, set the `Dudid` parameter. *3. Running the Test:*\n\nYou can typically run the tests from your terminal using `maven` commands. *   *Basic Command:*\n    ```\n    mvn clean test -pl mqe-hob-mobile-tests -am -Dgroups=Your test case number or tag\n    ```\n\n*   *Example with detailed parameters:*\n    ```\n    mvn test -Dmaven.repo.local=.\/.m2 -Dcucumber.features=\"$test\" -Ddriver=android -DplatformName=android -Dudid=YOUR_DEVICE_ID -Denvironment=local -DtargetURL=<http:\/\/test-www.paramountplus.com|test-www.paramountplus.com> -Dapp=\/pathToPackage\/mobile-8.0.44-210804410-3.5.25-paramountPlus-playStore-release.apk -DbundleId=<http:\/\/com.cbsvideodebug.app|com.cbsvideodebug.app> -Dbuild=P+_Android_phone_test-www -Dproject=\"P+ Android Mobile\"\n    ```\n\n    *   `-Ddriver=android`: Specifies that the test should use an Android driver. *   `-DplatformName=Android`: Specifies the platform name. *   `-DplatformVersion`: You can specify the Android version, e.g., `-DplatformVersion=11.0`.\n\n_(message continued in thread...)_","team":"T010QS7UQNA","bot_profile":{"id":"B099R6WTRU4","deleted":false,"name":"AutoBot","updated":1754677948,"app_id":"A099LACAB2R","user_id":"U099R6WTZ9S","icons":{"image_36":"https:\/\/a.slack-edge.com\/80588\/img\/plugins\/app\/bot_36.png","image_48":"https:\/\/a.slack-edge.com\/80588\/img\/plugins\/app\/bot_48.png","image_72":"https:\/\/a.slack-edge.com\/80588\/img\/plugins\/app\/service_72.png"},"team_id":"T010QS7UQNA"},"thread_ts":"1755897012.620639","parent_user_id":"U01RMTFMALF","blocks":[{"type":"rich_text","block_id":"FxXoI","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Your Question:","style":{"bold":true}}]},{"type":"rich_text_quote","elements":[{"type":"text","text":"How can i run an automated test on a local Android phone? "},{"type":"text","text":"Answer:","style":{"bold":true}}]},{"type":"rich_text_section","elements":[{"type":"text","text":"To run an automated test on a local Android phone, you'll need to set up your environment and then execute the tests using a command. Here's a breakdown of the steps and considerations:\n\n"},{"type":"text","text":"1. Environment Setup:","style":{"bold":true}},{"type":"text","text":"\n\n*   "},{"type":"text","text":"Android Home Environment Variable:","style":{"bold":true}},{"type":"text","text":" Ensure your "},{"type":"text","text":"ANDROID_HOME","style":{"code":true}},{"type":"text","text":" environment variable is set and included in your system's path, especially if you are using an Android Emulator. *   "},{"type":"text","text":"Appium Server:","style":{"bold":true}},{"type":"text","text":" If your tests use Appium, you'll need to start the Appium server. A sample "},{"type":"text","text":"Test Class","style":{"code":true}},{"type":"text","text":" can include methods to start and stop the Appium server. *   "},{"type":"text","text":"Android Emulator (Optional):","style":{"bold":true}},{"type":"text","text":" If you're running tests on an emulator instead of a physical device, you can launch the emulator. A sample "},{"type":"text","text":"Test Class","style":{"code":true}},{"type":"text","text":" might include functionality to start and stop the Android Emulator. *   "},{"type":"text","text":"Connect to VPN:","style":{"bold":true}},{"type":"text","text":" Connect to the VPN if required for your testing environment. *   "},{"type":"text","text":"Synergy Server (if applicable):","style":{"bold":true}},{"type":"text","text":" If your setup involves Synergy, download the latest version of the Synergy server and run the "},{"type":"text","text":".jar","style":{"code":true}},{"type":"text","text":" file. "},{"type":"text","text":"2. Configuration:","style":{"bold":true}},{"type":"text","text":"\n\n*   "},{"type":"text","text":"Update Desired Capabilities:","style":{"bold":true}},{"type":"text","text":" Update the "},{"type":"text","text":".config","style":{"code":true}},{"type":"text","text":" file (usually located under the "},{"type":"text","text":"mqe-hob-mobile-tests","style":{"code":true}},{"type":"text","text":" directory) with your desired capabilities. Key parameters for local Android testing include:\n    *   "},{"type":"text","text":"Platform=ANDROID","style":{"code":true}},{"type":"text","text":"\n    *   "},{"type":"text","text":"MobileDeviceCategory=PHONE","style":{"code":true}},{"type":"text","text":"\n    *   "},{"type":"text","text":"DeviceStartOrientation=PORTRAIT","style":{"code":true}},{"type":"text","text":" (or LANDSCAPE)\n    *   "},{"type":"text","text":"DebugDeviceID","style":{"code":true}},{"type":"text","text":": Add the device ID of your emulator or real device. You can typically find this by typing "},{"type":"text","text":"adb devices","style":{"code":true}},{"type":"text","text":" in your terminal. *   "},{"type":"text","text":"ClientID","style":{"code":true}},{"type":"text","text":": Machine serial number for local executions or to target a specific private lab machine. *   "},{"type":"text","text":"Environment=local","style":{"code":true}},{"type":"text","text":"\n*   "},{"type":"text","text":"App Package:","style":{"bold":true}},{"type":"text","text":" Provide the path to your Android application package (e.g., "},{"type":"text","text":".apk","style":{"code":true}},{"type":"text","text":" file) using the "},{"type":"text","text":"-Dapp","style":{"code":true}},{"type":"text","text":" argument in your run configuration. *   "},{"type":"text","text":"Bundle ID:","style":{"bold":true}},{"type":"text","text":" You might need to set the bundle ID to override default settings using "},{"type":"text","text":"-DbundleId","style":{"code":true}},{"type":"text","text":". *   "},{"type":"text","text":"Real Mobile Device ID (UDID):","style":{"bold":true}},{"type":"text","text":" If running on a real mobile device, set the "},{"type":"text","text":"Dudid","style":{"code":true}},{"type":"text","text":" parameter. "},{"type":"text","text":"3. Running the Test:","style":{"bold":true}},{"type":"text","text":"\n\nYou can typically run the tests from your terminal using "},{"type":"text","text":"maven","style":{"code":true}},{"type":"text","text":" commands. *   "},{"type":"text","text":"Basic Command:","style":{"bold":true}},{"type":"text","text":"\n    "}]},{"type":"rich_text_preformatted","elements":[{"type":"text","text":"    mvn clean test -pl mqe-hob-mobile-tests -am -Dgroups=Your test case number or tag\n    "}]},{"type":"rich_text_section","elements":[{"type":"text","text":"\n\n*   "},{"type":"text","text":"Example with detailed parameters:","style":{"bold":true}},{"type":"text","text":"\n    "}]},{"type":"rich_text_preformatted","elements":[{"type":"text","text":"    mvn test -Dmaven.repo.local=.\/.m2 -Dcucumber.features=\"$test\" -Ddriver=android -DplatformName=android -Dudid=YOUR_DEVICE_ID -Denvironment=local -DtargetURL="},{"type":"link","url":"http:\/\/test-www.paramountplus.com","text":"test-www.paramountplus.com","unsafe":true},{"type":"text","text":" -Dapp=\/pathToPackage\/mobile-8.0.44-210804410-3.5.25-paramountPlus-playStore-release.apk -DbundleId="},{"type":"link","url":"http:\/\/com.cbsvideodebug.app","text":"com.cbsvideodebug.app"},{"type":"text","text":" -Dbuild=P+_Android_phone_test-www -Dproject=\"P+ Android Mobile\"\n    "}]},{"type":"rich_text_section","elements":[{"type":"text","text":"\n\n    *   "},{"type":"text","text":"-Ddriver=android","style":{"code":true}},{"type":"text","text":": Specifies that the test should use an Android driver. *   "},{"type":"text","text":"-DplatformName=Android","style":{"code":true}},{"type":"text","text":": Specifies the platform name. *   "},{"type":"text","text":"-DplatformVersion","style":{"code":true}},{"type":"text","text":": You can specify the Android version, e.g., "},{"type":"text","text":"-DplatformVersion=11.0","style":{"code":true}},{"type":"text","text":".\n\n"},{"type":"text","text":"(message continued in thread...)","style":{"italic":true}}]}]}],"channel":"D09A0LFHK8R","event_ts":"1755897026.166019","channel_type":"im"},"type":"event_callback","event_id":"Ev09BJ75P2TV","event_time":1755897026,"authorizations":[{"enterprise_id":"ERV4P7NAD","team_id":"T010QS7UQNA","user_id":"U099R6WTZ9S","is_bot":true,"is_enterprise_install":false}],"is_ext_shared_channel":false,"event_context":"4-eyJldCI6Im1lc3NhZ2UiLCJ0aWQiOiJUMDEwUVM3VVFOQSIsImFpZCI6IkEwOTlMQUNBQjJSIiwiY2lkIjoiRDA5QTBMRkhLOFIifQ"},"type":"events_api","accepts_response_payload":false,"retry_attempt":0,"retry_reason":""})
2025-08-22 14:10:27,488 - slack_bolt.App - DEBUG - [client.py:99] - A new message enqueued (current queue size: 1)
2025-08-22 14:10:27,488 - slack_bolt.App - DEBUG - [client.py:105] - A message dequeued (current queue size: 0)
2025-08-22 14:10:27,489 - slack_bolt.App - DEBUG - [client.py:125] - Message processing started (type: events_api, envelope_id: 575df92e-8b5e-43b5-abf0-a91b88d49545)
2025-08-22 14:10:27,490 - slack_bolt.App - DEBUG - [app.py:476] - Applying slack_bolt.middleware.ssl_check.ssl_check.SslCheck
2025-08-22 14:10:27,490 - slack_bolt.App - DEBUG - [app.py:476] - Applying slack_bolt.middleware.request_verification.request_verification.RequestVerification
2025-08-22 14:10:27,490 - slack_bolt.App - DEBUG - [app.py:476] - Applying slack_bolt.middleware.authorization.single_team_authorization.SingleTeamAuthorization
2025-08-22 14:10:27,490 - slack_bolt.App - DEBUG - [app.py:476] - Applying slack_bolt.middleware.ignoring_self_events.ignoring_self_events.IgnoringSelfEvents
2025-08-22 14:10:27,490 - slack_bolt.IgnoringSelfEvents - DEBUG - [ignoring_self_events.py:60] - Skipped self event: {'user': 'U099R6WTZ9S', 'type': 'message', 'ts': '1755897026.166019', 'bot_id': 'B099R6WTRU4', 'app_id': 'A099LACAB2R', 'text': '*Your Question:*\n&gt; How can i run an automated test on a local Android phone? *Answer:*\nTo run an automated test on a local Android phone, you\'ll need to set up your environment and then execute the tests using a command. Here\'s a breakdown of the steps and considerations:\n\n*1. Environment Setup:*\n\n*   *Android Home Environment Variable:* Ensure your `ANDROID_HOME` environment variable is set and included in your system\'s path, especially if you are using an Android Emulator. *   *Appium Server:* If your tests use Appium, you\'ll need to start the Appium server. A sample `Test Class` can include methods to start and stop the Appium server. *   *Android Emulator (Optional):* If you\'re running tests on an emulator instead of a physical device, you can launch the emulator. A sample `Test Class` might include functionality to start and stop the Android Emulator. *   *Connect to VPN:* Connect to the VPN if required for your testing environment. *   *Synergy Server (if applicable):* If your setup involves Synergy, download the latest version of the Synergy server and run the `.jar` file. *2. Configuration:*\n\n*   *Update Desired Capabilities:* Update the `.config` file (usually located under the `mqe-hob-mobile-tests` directory) with your desired capabilities. Key parameters for local Android testing include:\n    *   `Platform=ANDROID`\n    *   `MobileDeviceCategory=PHONE`\n    *   `DeviceStartOrientation=PORTRAIT` (or LANDSCAPE)\n    *   `DebugDeviceID`: Add the device ID of your emulator or real device. You can typically find this by typing `adb devices` in your terminal. *   `ClientID`: Machine serial number for local executions or to target a specific private lab machine. *   `Environment=local`\n*   *App Package:* Provide the path to your Android application package (e.g., `.apk` file) using the `-Dapp` argument in your run configuration. *   *Bundle ID:* You might need to set the bundle ID to override default settings using `-DbundleId`. *   *Real Mobile Device ID (UDID):* If running on a real mobile device, set the `Dudid` parameter. *3. Running the Test:*\n\nYou can typically run the tests from your terminal using `maven` commands. *   *Basic Command:*\n    ```\n    mvn clean test -pl mqe-hob-mobile-tests -am -Dgroups=Your test case number or tag\n    ```\n\n*   *Example with detailed parameters:*\n    ```\n    mvn test -Dmaven.repo.local=./.m2 -Dcucumber.features="$test" -Ddriver=android -DplatformName=android -Dudid=YOUR_DEVICE_ID -Denvironment=local -DtargetURL=<http://test-www.paramountplus.com|test-www.paramountplus.com> -Dapp=/pathToPackage/mobile-8.0.44-210804410-3.5.25-paramountPlus-playStore-release.apk -DbundleId=<http://com.cbsvideodebug.app|com.cbsvideodebug.app> -Dbuild=P+_Android_phone_test-www -Dproject="P+ Android Mobile"\n    ```\n\n    *   `-Ddriver=android`: Specifies that the test should use an Android driver. *   `-DplatformName=Android`: Specifies the platform name. *   `-DplatformVersion`: You can specify the Android version, e.g., `-DplatformVersion=11.0`.\n\n_(message continued in thread...)_', 'team': 'T010QS7UQNA', 'bot_profile': {'id': 'B099R6WTRU4', 'deleted': False, 'name': 'AutoBot', 'updated': 1754677948, 'app_id': 'A099LACAB2R', 'user_id': 'U099R6WTZ9S', 'icons': {'image_36': 'https://a.slack-edge.com/80588/img/plugins/app/bot_36.png', 'image_48': 'https://a.slack-edge.com/80588/img/plugins/app/bot_48.png', 'image_72': 'https://a.slack-edge.com/80588/img/plugins/app/service_72.png'}, 'team_id': 'T010QS7UQNA'}, 'thread_ts': '1755897012.620639', 'parent_user_id': 'U01RMTFMALF', 'blocks': [{'type': 'rich_text', 'block_id': 'FxXoI', 'elements': [{'type': 'rich_text_section', 'elements': [{'type': 'text', 'text': 'Your Question:', 'style': {'bold': True}}]}, {'type': 'rich_text_quote', 'elements': [{'type': 'text', 'text': 'How can i run an automated test on a local Android phone? '}, {'type': 'text', 'text': 'Answer:', 'style': {'bold': True}}]}, {'type': 'rich_text_section', 'elements': [{'type': 'text', 'text': "To run an automated test on a local Android phone, you'll need to set up your environment and then execute the tests using a command. Here's a breakdown of the steps and considerations:\n\n"}, {'type': 'text', 'text': '1. Environment Setup:', 'style': {'bold': True}}, {'type': 'text', 'text': '\n\n*   '}, {'type': 'text', 'text': 'Android Home Environment Variable:', 'style': {'bold': True}}, {'type': 'text', 'text': ' Ensure your '}, {'type': 'text', 'text': 'ANDROID_HOME', 'style': {'code': True}}, {'type': 'text', 'text': " environment variable is set and included in your system's path, especially if you are using an Android Emulator. *   "}, {'type': 'text', 'text': 'Appium Server:', 'style': {'bold': True}}, {'type': 'text', 'text': " If your tests use Appium, you'll need to start the Appium server. A sample "}, {'type': 'text', 'text': 'Test Class', 'style': {'code': True}}, {'type': 'text', 'text': ' can include methods to start and stop the Appium server. *   '}, {'type': 'text', 'text': 'Android Emulator (Optional):', 'style': {'bold': True}}, {'type': 'text', 'text': " If you're running tests on an emulator instead of a physical device, you can launch the emulator. A sample "}, {'type': 'text', 'text': 'Test Class', 'style': {'code': True}}, {'type': 'text', 'text': ' might include functionality to start and stop the Android Emulator. *   '}, {'type': 'text', 'text': 'Connect to VPN:', 'style': {'bold': True}}, {'type': 'text', 'text': ' Connect to the VPN if required for your testing environment. *   '}, {'type': 'text', 'text': 'Synergy Server (if applicable):', 'style': {'bold': True}}, {'type': 'text', 'text': ' If your setup involves Synergy, download the latest version of the Synergy server and run the '}, {'type': 'text', 'text': '.jar', 'style': {'code': True}}, {'type': 'text', 'text': ' file. '}, {'type': 'text', 'text': '2. Configuration:', 'style': {'bold': True}}, {'type': 'text', 'text': '\n\n*   '}, {'type': 'text', 'text': 'Update Desired Capabilities:', 'style': {'bold': True}}, {'type': 'text', 'text': ' Update the '}, {'type': 'text', 'text': '.config', 'style': {'code': True}}, {'type': 'text', 'text': ' file (usually located under the '}, {'type': 'text', 'text': 'mqe-hob-mobile-tests', 'style': {'code': True}}, {'type': 'text', 'text': ' directory) with your desired capabilities. Key parameters for local Android testing include:\n    *   '}, {'type': 'text', 'text': 'Platform=ANDROID', 'style': {'code': True}}, {'type': 'text', 'text': '\n    *   '}, {'type': 'text', 'text': 'MobileDeviceCategory=PHONE', 'style': {'code': True}}, {'type': 'text', 'text': '\n    *   '}, {'type': 'text', 'text': 'DeviceStartOrientation=PORTRAIT', 'style': {'code': True}}, {'type': 'text', 'text': ' (or LANDSCAPE)\n    *   '}, {'type': 'text', 'text': 'DebugDeviceID', 'style': {'code': True}}, {'type': 'text', 'text': ': Add the device ID of your emulator or real device. You can typically find this by typing '}, {'type': 'text', 'text': 'adb devices', 'style': {'code': True}}, {'type': 'text', 'text': ' in your terminal. *   '}, {'type': 'text', 'text': 'ClientID', 'style': {'code': True}}, {'type': 'text', 'text': ': Machine serial number for local executions or to target a specific private lab machine. *   '}, {'type': 'text', 'text': 'Environment=local', 'style': {'code': True}}, {'type': 'text', 'text': '\n*   '}, {'type': 'text', 'text': 'App Package:', 'style': {'bold': True}}, {'type': 'text', 'text': ' Provide the path to your Android application package (e.g., '}, {'type': 'text', 'text': '.apk', 'style': {'code': True}}, {'type': 'text', 'text': ' file) using the '}, {'type': 'text', 'text': '-Dapp', 'style': {'code': True}}, {'type': 'text', 'text': ' argument in your run configuration. *   '}, {'type': 'text', 'text': 'Bundle ID:', 'style': {'bold': True}}, {'type': 'text', 'text': ' You might need to set the bundle ID to override default settings using '}, {'type': 'text', 'text': '-DbundleId', 'style': {'code': True}}, {'type': 'text', 'text': '. *   '}, {'type': 'text', 'text': 'Real Mobile Device ID (UDID):', 'style': {'bold': True}}, {'type': 'text', 'text': ' If running on a real mobile device, set the '}, {'type': 'text', 'text': 'Dudid', 'style': {'code': True}}, {'type': 'text', 'text': ' parameter. '}, {'type': 'text', 'text': '3. Running the Test:', 'style': {'bold': True}}, {'type': 'text', 'text': '\n\nYou can typically run the tests from your terminal using '}, {'type': 'text', 'text': 'maven', 'style': {'code': True}}, {'type': 'text', 'text': ' commands. *   '}, {'type': 'text', 'text': 'Basic Command:', 'style': {'bold': True}}, {'type': 'text', 'text': '\n    '}]}, {'type': 'rich_text_preformatted', 'elements': [{'type': 'text', 'text': '    mvn clean test -pl mqe-hob-mobile-tests -am -Dgroups=Your test case number or tag\n    '}]}, {'type': 'rich_text_section', 'elements': [{'type': 'text', 'text': '\n\n*   '}, {'type': 'text', 'text': 'Example with detailed parameters:', 'style': {'bold': True}}, {'type': 'text', 'text': '\n    '}]}, {'type': 'rich_text_preformatted', 'elements': [{'type': 'text', 'text': '    mvn test -Dmaven.repo.local=./.m2 -Dcucumber.features="$test" -Ddriver=android -DplatformName=android -Dudid=YOUR_DEVICE_ID -Denvironment=local -DtargetURL='}, {'type': 'link', 'url': 'http://test-www.paramountplus.com', 'text': 'test-www.paramountplus.com', 'unsafe': True}, {'type': 'text', 'text': ' -Dapp=/pathToPackage/mobile-8.0.44-210804410-3.5.25-paramountPlus-playStore-release.apk -DbundleId='}, {'type': 'link', 'url': 'http://com.cbsvideodebug.app', 'text': 'com.cbsvideodebug.app'}, {'type': 'text', 'text': ' -Dbuild=P+_Android_phone_test-www -Dproject="P+ Android Mobile"\n    '}]}, {'type': 'rich_text_section', 'elements': [{'type': 'text', 'text': '\n\n    *   '}, {'type': 'text', 'text': '-Ddriver=android', 'style': {'code': True}}, {'type': 'text', 'text': ': Specifies that the test should use an Android driver. *   '}, {'type': 'text', 'text': '-DplatformName=Android', 'style': {'code': True}}, {'type': 'text', 'text': ': Specifies the platform name. *   '}, {'type': 'text', 'text': '-DplatformVersion', 'style': {'code': True}}, {'type': 'text', 'text': ': You can specify the Android version, e.g., '}, {'type': 'text', 'text': '-DplatformVersion=11.0', 'style': {'code': True}}, {'type': 'text', 'text': '.\n\n'}, {'type': 'text', 'text': '(message continued in thread...)', 'style': {'italic': True}}]}]}], 'channel': 'D09A0LFHK8R', 'event_ts': '1755897026.166019', 'channel_type': 'im'}
2025-08-22 14:10:27,491 - slack_bolt.App - DEBUG - [client.py:200] - Sending a message (session id: f597047c-60d6-49c4-8789-d54d895ebff5, message: {"envelope_id": "575df92e-8b5e-43b5-abf0-a91b88d49545"})
2025-08-22 14:10:27,491 - slack_bolt.App - DEBUG - [internals.py:41] - Response time: 1 milliseconds
2025-08-22 14:10:27,491 - slack_bolt.App - DEBUG - [client.py:150] - Message processing completed (type: events_api, envelope_id: 575df92e-8b5e-43b5-abf0-a91b88d49545)
2025-08-22 14:10:27,781 - slack_bolt.App - DEBUG - [client.py:235] - on_message invoked: (message: {"envelope_id":"0cdf85e7-10d1-4c9d-9df4-923aca50273f","payload":{"token":"yq71khZBCyJF1Ri2hG5aNqr5","team_id":"T010QS7UQNA","enterprise_id":"ERV4P7NAD","context_team_id":null,"context_enterprise_id":"ERV4P7NAD","api_app_id":"A099LACAB2R","event":{"user":"U099R6WTZ9S","type":"message","ts":"1755897026.612909","bot_id":"B099R6WTRU4","app_id":"A099LACAB2R","text":"_(part 2\/2)_\n\n*   `-DdeviceName`: You can specify the device name, e.g., `-DdeviceName=\"Google Pixel 2XL\"`. *   `-Denvironment=local`: Indicates that the test is running in a local environment. *   `-Dudid`: For real devices, set this to your device's Unique Device Identifier. *   *Running with specific groups:* You can pass a parameter like `-Dgroups=Smoke` to run tests belonging to a specific group. *Important Notes:*\n\n*   Ensure that any required dependencies and build tools (like Maven) are correctly installed and configured on your system. *   The exact commands and parameters may vary depending on your specific test automation framework (e.g., Appium, Espresso, UI Automator) and project setup. *   Refer to the documentation for your chosen testing framework for the most accurate and up-to-date instructions. \u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\n*:books: Sources:*\n1. <https:\/\/paramount.atlassian.net\/wiki\/spaces\/PLQA\/pages\/47713566|Atlassian Documentation>\n2. <https:\/\/paramount.atlassian.net\/wiki\/spaces\/PLQA\/pages\/47711460|Atlassian Documentation>\n3. <https:\/\/paramount.atlassian.net\/wiki\/spaces\/PLQA\/pages\/47720266|Atlassian Documentation>\n4. <https:\/\/paramount.atlassian.net\/wiki\/spaces\/PLQA\/pages\/47720266,|Atlassian Documentation>\n5. <https:\/\/paramount.atlassian.net\/wiki\/spaces\/PLQA\/pages\/47721257,|Atlassian Documentation>\n6. <https:\/\/paramount.atlassian.net\/wiki\/spaces\/PLQA\/pages\/47720266, https:\/\/paramount.atlassian.net\/wiki\/spaces\/PLQA\/pages\/47711460|Atlassian Documentation>\n7. <https:\/\/paramount.atlassian.net\/wiki\/spaces\/PLQA\/pages\/47721257, https:\/\/paramount.atlassian.net\/wiki\/spaces\/PLQA\/pages\/47711460|Atlassian Documentation>","team":"T010QS7UQNA","bot_profile":{"id":"B099R6WTRU4","deleted":false,"name":"AutoBot","updated":1754677948,"app_id":"A099LACAB2R","user_id":"U099R6WTZ9S","icons":{"image_36":"https:\/\/a.slack-edge.com\/80588\/img\/plugins\/app\/bot_36.png","image_48":"https:\/\/a.slack-edge.com\/80588\/img\/plugins\/app\/bot_48.png","image_72":"https:\/\/a.slack-edge.com\/80588\/img\/plugins\/app\/service_72.png"},"team_id":"T010QS7UQNA"},"thread_ts":"1755897012.620639","parent_user_id":"U01RMTFMALF","blocks":[{"type":"rich_text","block_id":"CrhP","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"(part 2\/2)","style":{"italic":true}},{"type":"text","text":"\n\n*   "},{"type":"text","text":"-DdeviceName","style":{"code":true}},{"type":"text","text":": You can specify the device name, e.g., "},{"type":"text","text":"-DdeviceName=\"Google Pixel 2XL\"","style":{"code":true}},{"type":"text","text":". *   "},{"type":"text","text":"-Denvironment=local","style":{"code":true}},{"type":"text","text":": Indicates that the test is running in a local environment. *   "},{"type":"text","text":"-Dudid","style":{"code":true}},{"type":"text","text":": For real devices, set this to your device's Unique Device Identifier. *   "},{"type":"text","text":"Running with specific groups:","style":{"bold":true}},{"type":"text","text":" You can pass a parameter like "},{"type":"text","text":"-Dgroups=Smoke","style":{"code":true}},{"type":"text","text":" to run tests belonging to a specific group. "},{"type":"text","text":"Important Notes:","style":{"bold":true}},{"type":"text","text":"\n\n*   Ensure that any required dependencies and build tools (like Maven) are correctly installed and configured on your system. *   The exact commands and parameters may vary depending on your specific test automation framework (e.g., Appium, Espresso, UI Automator) and project setup. *   Refer to the documentation for your chosen testing framework for the most accurate and up-to-date instructions. \u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\n"},{"type":"emoji","name":"books","unicode":"1f4da","style":{"bold":true}},{"type":"text","text":" Sources:","style":{"bold":true}},{"type":"text","text":"\n1. "},{"type":"link","url":"https:\/\/paramount.atlassian.net\/wiki\/spaces\/PLQA\/pages\/47713566","text":"Atlassian Documentation"},{"type":"text","text":"\n2. "},{"type":"link","url":"https:\/\/paramount.atlassian.net\/wiki\/spaces\/PLQA\/pages\/47711460","text":"Atlassian Documentation"},{"type":"text","text":"\n3. "},{"type":"link","url":"https:\/\/paramount.atlassian.net\/wiki\/spaces\/PLQA\/pages\/47720266","text":"Atlassian Documentation"},{"type":"text","text":"\n4. "},{"type":"link","url":"https:\/\/paramount.atlassian.net\/wiki\/spaces\/PLQA\/pages\/47720266,","text":"Atlassian Documentation"},{"type":"text","text":"\n5. "},{"type":"link","url":"https:\/\/paramount.atlassian.net\/wiki\/spaces\/PLQA\/pages\/47721257,","text":"Atlassian Documentation"},{"type":"text","text":"\n6. "},{"type":"link","url":"https:\/\/paramount.atlassian.net\/wiki\/spaces\/PLQA\/pages\/47720266, https:\/\/paramount.atlassian.net\/wiki\/spaces\/PLQA\/pages\/47711460","text":"Atlassian Documentation"},{"type":"text","text":"\n7. "},{"type":"link","url":"https:\/\/paramount.atlassian.net\/wiki\/spaces\/PLQA\/pages\/47721257, https:\/\/paramount.atlassian.net\/wiki\/spaces\/PLQA\/pages\/47711460","text":"Atlassian Documentation"}]}]}],"channel":"D09A0LFHK8R","event_ts":"1755897026.612909","channel_type":"im"},"type":"event_callback","event_id":"Ev09BQSHPN5U","event_time":1755897026,"authorizations":[{"enterprise_id":"ERV4P7NAD","team_id":"T010QS7UQNA","user_id":"U099R6WTZ9S","is_bot":true,"is_enterprise_install":false}],"is_ext_shared_channel":false,"event_context":"4-eyJldCI6Im1lc3NhZ2UiLCJ0aWQiOiJUMDEwUVM3VVFOQSIsImFpZCI6IkEwOTlMQUNBQjJSIiwiY2lkIjoiRDA5QTBMRkhLOFIifQ"},"type":"events_api","accepts_response_payload":false,"retry_attempt":0,"retry_reason":""})
2025-08-22 14:10:27,783 - slack_bolt.App - DEBUG - [client.py:99] - A new message enqueued (current queue size: 1)
2025-08-22 14:10:27,783 - slack_bolt.App - DEBUG - [client.py:105] - A message dequeued (current queue size: 0)
2025-08-22 14:10:27,784 - slack_bolt.App - DEBUG - [client.py:125] - Message processing started (type: events_api, envelope_id: 0cdf85e7-10d1-4c9d-9df4-923aca50273f)
2025-08-22 14:10:27,784 - slack_bolt.App - DEBUG - [app.py:476] - Applying slack_bolt.middleware.ssl_check.ssl_check.SslCheck
2025-08-22 14:10:27,785 - slack_bolt.App - DEBUG - [app.py:476] - Applying slack_bolt.middleware.request_verification.request_verification.RequestVerification
2025-08-22 14:10:27,785 - slack_bolt.App - DEBUG - [app.py:476] - Applying slack_bolt.middleware.authorization.single_team_authorization.SingleTeamAuthorization
2025-08-22 14:10:27,785 - slack_bolt.App - DEBUG - [app.py:476] - Applying slack_bolt.middleware.ignoring_self_events.ignoring_self_events.IgnoringSelfEvents
2025-08-22 14:10:27,785 - slack_bolt.IgnoringSelfEvents - DEBUG - [ignoring_self_events.py:60] - Skipped self event: {'user': 'U099R6WTZ9S', 'type': 'message', 'ts': '1755897026.612909', 'bot_id': 'B099R6WTRU4', 'app_id': 'A099LACAB2R', 'text': '_(part 2/2)_\n\n*   `-DdeviceName`: You can specify the device name, e.g., `-DdeviceName="Google Pixel 2XL"`. *   `-Denvironment=local`: Indicates that the test is running in a local environment. *   `-Dudid`: For real devices, set this to your device\'s Unique Device Identifier. *   *Running with specific groups:* You can pass a parameter like `-Dgroups=Smoke` to run tests belonging to a specific group. *Important Notes:*\n\n*   Ensure that any required dependencies and build tools (like Maven) are correctly installed and configured on your system. *   The exact commands and parameters may vary depending on your specific test automation framework (e.g., Appium, Espresso, UI Automator) and project setup. *   Refer to the documentation for your chosen testing framework for the most accurate and up-to-date instructions. ────────────────────────────────────────\n*:books: Sources:*\n1. <https://paramount.atlassian.net/wiki/spaces/PLQA/pages/47713566|Atlassian Documentation>\n2. <https://paramount.atlassian.net/wiki/spaces/PLQA/pages/47711460|Atlassian Documentation>\n3. <https://paramount.atlassian.net/wiki/spaces/PLQA/pages/47720266|Atlassian Documentation>\n4. <https://paramount.atlassian.net/wiki/spaces/PLQA/pages/47720266,|Atlassian Documentation>\n5. <https://paramount.atlassian.net/wiki/spaces/PLQA/pages/47721257,|Atlassian Documentation>\n6. <https://paramount.atlassian.net/wiki/spaces/PLQA/pages/47720266, https://paramount.atlassian.net/wiki/spaces/PLQA/pages/47711460|Atlassian Documentation>\n7. <https://paramount.atlassian.net/wiki/spaces/PLQA/pages/47721257, https://paramount.atlassian.net/wiki/spaces/PLQA/pages/47711460|Atlassian Documentation>', 'team': 'T010QS7UQNA', 'bot_profile': {'id': 'B099R6WTRU4', 'deleted': False, 'name': 'AutoBot', 'updated': 1754677948, 'app_id': 'A099LACAB2R', 'user_id': 'U099R6WTZ9S', 'icons': {'image_36': 'https://a.slack-edge.com/80588/img/plugins/app/bot_36.png', 'image_48': 'https://a.slack-edge.com/80588/img/plugins/app/bot_48.png', 'image_72': 'https://a.slack-edge.com/80588/img/plugins/app/service_72.png'}, 'team_id': 'T010QS7UQNA'}, 'thread_ts': '1755897012.620639', 'parent_user_id': 'U01RMTFMALF', 'blocks': [{'type': 'rich_text', 'block_id': 'CrhP', 'elements': [{'type': 'rich_text_section', 'elements': [{'type': 'text', 'text': '(part 2/2)', 'style': {'italic': True}}, {'type': 'text', 'text': '\n\n*   '}, {'type': 'text', 'text': '-DdeviceName', 'style': {'code': True}}, {'type': 'text', 'text': ': You can specify the device name, e.g., '}, {'type': 'text', 'text': '-DdeviceName="Google Pixel 2XL"', 'style': {'code': True}}, {'type': 'text', 'text': '. *   '}, {'type': 'text', 'text': '-Denvironment=local', 'style': {'code': True}}, {'type': 'text', 'text': ': Indicates that the test is running in a local environment. *   '}, {'type': 'text', 'text': '-Dudid', 'style': {'code': True}}, {'type': 'text', 'text': ": For real devices, set this to your device's Unique Device Identifier. *   "}, {'type': 'text', 'text': 'Running with specific groups:', 'style': {'bold': True}}, {'type': 'text', 'text': ' You can pass a parameter like '}, {'type': 'text', 'text': '-Dgroups=Smoke', 'style': {'code': True}}, {'type': 'text', 'text': ' to run tests belonging to a specific group. '}, {'type': 'text', 'text': 'Important Notes:', 'style': {'bold': True}}, {'type': 'text', 'text': '\n\n*   Ensure that any required dependencies and build tools (like Maven) are correctly installed and configured on your system. *   The exact commands and parameters may vary depending on your specific test automation framework (e.g., Appium, Espresso, UI Automator) and project setup. *   Refer to the documentation for your chosen testing framework for the most accurate and up-to-date instructions. ────────────────────────────────────────\n'}, {'type': 'emoji', 'name': 'books', 'unicode': '1f4da', 'style': {'bold': True}}, {'type': 'text', 'text': ' Sources:', 'style': {'bold': True}}, {'type': 'text', 'text': '\n1. '}, {'type': 'link', 'url': 'https://paramount.atlassian.net/wiki/spaces/PLQA/pages/47713566', 'text': 'Atlassian Documentation'}, {'type': 'text', 'text': '\n2. '}, {'type': 'link', 'url': 'https://paramount.atlassian.net/wiki/spaces/PLQA/pages/47711460', 'text': 'Atlassian Documentation'}, {'type': 'text', 'text': '\n3. '}, {'type': 'link', 'url': 'https://paramount.atlassian.net/wiki/spaces/PLQA/pages/47720266', 'text': 'Atlassian Documentation'}, {'type': 'text', 'text': '\n4. '}, {'type': 'link', 'url': 'https://paramount.atlassian.net/wiki/spaces/PLQA/pages/47720266,', 'text': 'Atlassian Documentation'}, {'type': 'text', 'text': '\n5. '}, {'type': 'link', 'url': 'https://paramount.atlassian.net/wiki/spaces/PLQA/pages/47721257,', 'text': 'Atlassian Documentation'}, {'type': 'text', 'text': '\n6. '}, {'type': 'link', 'url': 'https://paramount.atlassian.net/wiki/spaces/PLQA/pages/47720266, https://paramount.atlassian.net/wiki/spaces/PLQA/pages/47711460', 'text': 'Atlassian Documentation'}, {'type': 'text', 'text': '\n7. '}, {'type': 'link', 'url': 'https://paramount.atlassian.net/wiki/spaces/PLQA/pages/47721257, https://paramount.atlassian.net/wiki/spaces/PLQA/pages/47711460', 'text': 'Atlassian Documentation'}]}]}], 'channel': 'D09A0LFHK8R', 'event_ts': '1755897026.612909', 'channel_type': 'im'}
2025-08-22 14:10:27,785 - slack_bolt.App - DEBUG - [client.py:200] - Sending a message (session id: f597047c-60d6-49c4-8789-d54d895ebff5, message: {"envelope_id": "0cdf85e7-10d1-4c9d-9df4-923aca50273f"})
2025-08-22 14:10:27,786 - slack_bolt.App - DEBUG - [internals.py:41] - Response time: 1 milliseconds
2025-08-22 14:10:27,786 - slack_bolt.App - DEBUG - [client.py:150] - Message processing completed (type: events_api, envelope_id: 0cdf85e7-10d1-4c9d-9df4-923aca50273f)
2025-08-22 14:14:23,156 - __main__ - INFO - [main.py:43] - Loading application configuration...
2025-08-22 14:14:23,156 - __main__ - INFO - [main.py:45] - Configuration loaded successfully
2025-08-22 14:14:23,156 - __main__ - INFO - [main.py:48] - Initializing security components...
2025-08-22 14:14:23,156 - __main__ - DEBUG - [main.py:50] - Slack validator initialized
2025-08-22 14:14:23,156 - security.content_filter - INFO - [content_filter.py:39] - Content filter initialized with 11 patterns
2025-08-22 14:14:23,156 - __main__ - DEBUG - [main.py:53] - Content filter initialized
2025-08-22 14:14:23,156 - auth.admin_manager - INFO - [admin_manager.py:27] - Admin manager initialized with 2 admin users
2025-08-22 14:14:23,156 - __main__ - DEBUG - [main.py:56] - Admin manager initialized
2025-08-22 14:14:23,156 - auth.email_whitelist - INFO - [email_whitelist.py:28] - Email whitelist initialized with 1 whitelisted emails
2025-08-22 14:14:23,156 - auth.email_whitelist - INFO - [email_whitelist.py:37] - Whitelisted domains: paramount.com
2025-08-22 14:14:23,156 - __main__ - DEBUG - [main.py:59] - Email whitelist initialized with 1 emails
2025-08-22 14:14:23,156 - auth.slack_user_info - DEBUG - [slack_user_info.py:25] - Slack user info manager initialized
2025-08-22 14:14:23,156 - __main__ - DEBUG - [main.py:62] - Slack user info manager initialized
2025-08-22 14:14:23,156 - __main__ - INFO - [main.py:63] - Security components initialized successfully
2025-08-22 14:14:23,156 - __main__ - INFO - [main.py:66] - Initializing Slack app...
2025-08-22 14:14:23,191 - slack_bolt.App - DEBUG - [base_client.py:255] - Sending a request - url: https://slack.com/api/auth.test, query_params: {}, body_params: {}, files: {}, json_body: None, headers: {'Content-Type': 'application/x-www-form-urlencoded', 'Authorization': '(redacted)', 'User-Agent': 'Bolt/1.16.0 Python/3.12.0 slackclient/3.34.0 Darwin/23.4.0'}
2025-08-22 14:14:23,559 - slack_bolt.App - DEBUG - [base_client.py:546] - Received the following response - status: 200, headers: {'date': 'Fri, 22 Aug 2025 21:14:23 GMT', 'server': 'Apache', 'vary': 'Accept-Encoding', 'x-slack-req-id': 'dcf546fd728259adcb736a60d29135e4', 'x-content-type-options': 'nosniff', 'x-xss-protection': '0', 'pragma': 'no-cache', 'cache-control': 'private, no-cache, no-store, must-revalidate', 'expires': 'Sat, 26 Jul 1997 05:00:00 GMT', 'content-type': 'application/json; charset=utf-8', 'x-oauth-scopes': 'app_mentions:read,channels:history,chat:write,im:history,im:read,im:write,users:read,reactions:write,users:read.email', 'access-control-expose-headers': 'x-slack-req-id, retry-after', 'access-control-allow-headers': 'slack-route, x-slack-version-ts, x-b3-traceid, x-b3-spanid, x-b3-parentspanid, x-b3-sampled, x-b3-flags', 'strict-transport-security': 'max-age=31536000; includeSubDomains; preload', 'referrer-policy': 'no-referrer', 'x-slack-unique-id': 'aKjdr5Vl4fHch_Z16hN82AAAAAk', 'x-slack-backend': 'r', 'access-control-allow-origin': '*', 'content-length': '228', 'via': '1.1 slack-prod.tinyspeck.com, envoy-www-iad-anuvdvww,envoy-edge-pdx-wndoytwk', 'x-envoy-attempt-count': '1', 'x-envoy-upstream-service-time': '86', 'x-backend': 'main_normal main_canary_with_overflow main_control_with_overflow', 'x-server': 'slack-www-hhvm-main-iad-gbac', 'x-slack-shared-secret-outcome': 'no-match', 'x-edge-backend': 'envoy-www', 'timing-allow-origin': '*', 'x-slack-edge-shared-secret-outcome': 'no-match', 'connection': 'close'}, body: {"ok":true,"url":"https://viacomcbs-grid-test.slack.com/","team":"Test Workspace","user":"autobot","team_id":"T010QS7UQNA","user_id":"U099R6WTZ9S","bot_id":"B099R6WTRU4","enterprise_id":"ERV4P7NAD","is_enterprise_install":false}
2025-08-22 14:14:23,560 - __main__ - INFO - [main.py:68] - Slack app initialized successfully
2025-08-22 14:14:23,560 - __main__ - DEBUG - [main.py:72] - Message deduplication cache initialized
2025-08-22 14:14:23,560 - __main__ - DEBUG - [main.py:77] - Thread tracking initialized
2025-08-22 14:14:23,560 - __main__ - INFO - [main.py:80] - Initializing DIG AI integration...
2025-08-22 14:14:23,560 - dig_connector - INFO - [dig_connector.py:284] - Initializing DIG AI with model ID: 42
2025-08-22 14:14:23,560 - dig_connector - INFO - [dig_connector.py:49] - Starting DIG chat session initialization...
2025-08-22 14:14:23,560 - dig_connector - DEBUG - [dig_connector.py:52] - Creating chat with name: Slack Bot Session 2025-08-22T21:14:23.560670+00:00
2025-08-22 14:14:23,560 - dig_connector - DEBUG - [dig_connector.py:63] - Creating chat - URL: https://ai.digdev.cbsicloud.com/fastapi/chats, Payload: {'chat_nm': 'Slack Bot Session 2025-08-22T21:14:23.560670+00:00', 'model_id': 42}
2025-08-22 14:14:23,563 - urllib3.connectionpool - DEBUG - [connectionpool.py:1055] - Starting new HTTPS connection (1): ai.digdev.cbsicloud.com:443
2025-08-22 14:14:23,832 - urllib3.connectionpool - DEBUG - [connectionpool.py:549] - https://ai.digdev.cbsicloud.com:443 "POST /fastapi/chats HTTP/1.1" 200 217
2025-08-22 14:14:23,834 - dig_connector - DEBUG - [dig_connector.py:66] - Create chat response: status=200
2025-08-22 14:14:23,834 - dig_connector - INFO - [dig_connector.py:54] - Successfully initialized DIG chat session with ID: 885
2025-08-22 14:14:23,835 - __main__ - INFO - [main.py:83] - DIG AI integration successfully initialized
2025-08-22 14:14:23,835 - __main__ - INFO - [main.py:87] - Setting up event handlers...
2025-08-22 14:14:23,837 - __main__ - INFO - [main.py:709] - Starting AI Assistant Bot...
2025-08-22 14:14:23,837 - __main__ - INFO - [main.py:710] - Registering event handlers...
2025-08-22 14:14:23,837 - __main__ - DEBUG - [main.py:711] - Event handlers registered: app_mention, message, app_home_opened
2025-08-22 14:14:23,837 - __main__ - INFO - [main.py:714] - Connecting to Slack via Socket Mode...
2025-08-22 14:14:23,838 - __main__ - INFO - [main.py:718] - Socket Mode handler created successfully
2025-08-22 14:14:23,838 - __main__ - INFO - [main.py:720] - ✅ Bot is now running and listening for events!
2025-08-22 14:14:23,839 - slack_bolt.App - DEBUG - [base_client.py:255] - Sending a request - url: https://slack.com/api/apps.connections.open, query_params: {}, body_params: {}, files: {}, json_body: None, headers: {'Content-Type': 'application/x-www-form-urlencoded', 'Authorization': '(redacted)', 'User-Agent': 'Bolt/1.16.0 Python/3.12.0 slackclient/3.34.0 Darwin/23.4.0'}
2025-08-22 14:14:24,141 - slack_bolt.App - DEBUG - [base_client.py:546] - Received the following response - status: 200, headers: {'date': 'Fri, 22 Aug 2025 21:14:24 GMT', 'server': 'Apache', 'vary': 'Accept-Encoding', 'x-slack-req-id': '9d7a7bcea6864978550fa172c1961ac5', 'x-content-type-options': 'nosniff', 'x-xss-protection': '0', 'x-robots-tag': 'noindex,nofollow', 'pragma': 'no-cache', 'cache-control': 'private, no-cache, no-store, must-revalidate', 'expires': 'Sat, 26 Jul 1997 05:00:00 GMT', 'content-type': 'application/json; charset=utf-8', 'x-accepted-oauth-scopes': 'connections:write', 'x-oauth-scopes': 'connections:write', 'access-control-expose-headers': 'x-slack-req-id, retry-after', 'access-control-allow-headers': 'slack-route, x-slack-version-ts, x-b3-traceid, x-b3-spanid, x-b3-parentspanid, x-b3-sampled, x-b3-flags', 'strict-transport-security': 'max-age=31536000; includeSubDomains; preload', 'referrer-policy': 'no-referrer', 'x-slack-unique-id': 'aKjdsAxd7d1PLgizaJ4xSgAAAB4', 'x-slack-backend': 'r', 'access-control-allow-origin': '*', 'content-length': '173', 'via': '1.1 slack-prod.tinyspeck.com, envoy-www-iad-frqecfyv,envoy-edge-pdx-kmntbcvm', 'x-envoy-attempt-count': '1', 'x-envoy-upstream-service-time': '80', 'x-backend': 'main_normal main_canary_with_overflow main_control_with_overflow', 'x-server': 'slack-www-hhvm-main-iad-yfdi', 'x-slack-shared-secret-outcome': 'no-match', 'x-edge-backend': 'envoy-www', 'timing-allow-origin': '*', 'x-slack-edge-shared-secret-outcome': 'no-match', 'connection': 'close'}, body: {"ok":true,"url":"wss:\/\/wss-primary.slack.com\/link\/?ticket=37d74c3f-3010-4b9c-a83e-227cefb6d4ec&app_id=a6c8d361ee1c6f398c5b4afec831555b78d7affa753b16bcc0fc64d7c13f3766"}
2025-08-22 14:14:24,642 - slack_bolt.App - INFO - [client.py:192] - A new session has been established (session id: 0355322f-cce8-4559-bd72-7d4e0cf16a3d)
2025-08-22 14:14:24,642 - slack_bolt.App - INFO - [base_handler.py:50] - ⚡️ Bolt app is running!
2025-08-22 14:14:24,671 - slack_bolt.App - INFO - [client.py:265] - Starting to receive messages from a new connection (session id: 0355322f-cce8-4559-bd72-7d4e0cf16a3d)
2025-08-22 14:14:24,672 - slack_bolt.App - DEBUG - [client.py:235] - on_message invoked: (message: {"type":"hello","num_connections":1,"debug_info":{"host":"applink-4","build_number":0,"approximate_connection_time":18060},"connection_info":{"app_id":"A099LACAB2R"}})
2025-08-22 14:14:24,672 - slack_bolt.App - DEBUG - [client.py:99] - A new message enqueued (current queue size: 1)
2025-08-22 14:14:24,673 - slack_bolt.App - DEBUG - [client.py:105] - A message dequeued (current queue size: 0)
2025-08-22 14:14:24,673 - slack_bolt.App - DEBUG - [client.py:125] - Message processing started (type: hello, envelope_id: None)
2025-08-22 14:14:24,673 - slack_bolt.App - DEBUG - [client.py:150] - Message processing completed (type: hello, envelope_id: None)
2025-08-22 14:14:32,958 - slack_bolt.App - DEBUG - [client.py:235] - on_message invoked: (message: {"envelope_id":"5702641c-f804-4f20-bb8b-a01b5b7c9ab9","payload":{"token":"yq71khZBCyJF1Ri2hG5aNqr5","team_id":"T010QS7UQNA","enterprise_id":"ERV4P7NAD","context_team_id":null,"context_enterprise_id":"ERV4P7NAD","api_app_id":"A099LACAB2R","event":{"user":"U01RMTFMALF","type":"message","ts":"1755897271.924129","client_msg_id":"d65e124b-c7bd-43c0-8cb1-594021214601","text":"How can i run an automated test on a local Android phone?","blocks":[{"type":"rich_text","block_id":"vQwBP","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"How can i run an automated test on a local Android phone?"}]}]}],"channel":"D09A0LFHK8R","event_ts":"1755897271.924129","channel_type":"im"},"type":"event_callback","event_id":"Ev09BSTHSJJG","event_time":1755897271,"authorizations":[{"enterprise_id":"ERV4P7NAD","team_id":"T010QS7UQNA","user_id":"U099R6WTZ9S","is_bot":true,"is_enterprise_install":false}],"is_ext_shared_channel":false,"event_context":"4-eyJldCI6Im1lc3NhZ2UiLCJ0aWQiOiJUMDEwUVM3VVFOQSIsImFpZCI6IkEwOTlMQUNBQjJSIiwiY2lkIjoiRDA5QTBMRkhLOFIifQ"},"type":"events_api","accepts_response_payload":false,"retry_attempt":0,"retry_reason":""})
2025-08-22 14:14:32,960 - slack_bolt.App - DEBUG - [client.py:99] - A new message enqueued (current queue size: 1)
2025-08-22 14:14:32,960 - slack_bolt.App - DEBUG - [client.py:105] - A message dequeued (current queue size: 0)
2025-08-22 14:14:32,960 - slack_bolt.App - DEBUG - [client.py:125] - Message processing started (type: events_api, envelope_id: 5702641c-f804-4f20-bb8b-a01b5b7c9ab9)
2025-08-22 14:14:32,961 - slack_bolt.App - DEBUG - [app.py:476] - Applying slack_bolt.middleware.ssl_check.ssl_check.SslCheck
2025-08-22 14:14:32,962 - slack_bolt.App - DEBUG - [app.py:476] - Applying slack_bolt.middleware.request_verification.request_verification.RequestVerification
2025-08-22 14:14:32,962 - slack_bolt.App - DEBUG - [app.py:476] - Applying slack_bolt.middleware.authorization.single_team_authorization.SingleTeamAuthorization
2025-08-22 14:14:32,962 - slack_bolt.App - DEBUG - [app.py:476] - Applying slack_bolt.middleware.ignoring_self_events.ignoring_self_events.IgnoringSelfEvents
2025-08-22 14:14:32,962 - slack_bolt.App - DEBUG - [app.py:476] - Applying slack_bolt.middleware.url_verification.url_verification.UrlVerification
2025-08-22 14:14:32,962 - slack_bolt.App - DEBUG - [app.py:500] - Checking listener: handle_app_mentions ...
2025-08-22 14:14:32,962 - slack_bolt.App - DEBUG - [app.py:500] - Checking listener: help_message ...
2025-08-22 14:14:32,963 - slack_bolt.App - DEBUG - [app.py:500] - Checking listener: handle_dm_messages ...
2025-08-22 14:14:32,963 - slack_bolt.App - DEBUG - [app.py:522] - Running listener: handle_dm_messages ...
2025-08-22 14:14:32,964 - __main__ - INFO - [main.py:459] - === DM MESSAGE EVENT RECEIVED ===
2025-08-22 14:14:32,964 - slack_bolt.App - DEBUG - [thread_runner.py:198] - Responding with status: 200 body: "" (0 millis)
2025-08-22 14:14:32,964 - __main__ - DEBUG - [main.py:460] - Full event body: {'token': 'yq71khZBCyJF1Ri2hG5aNqr5', 'team_id': 'T010QS7UQNA', 'enterprise_id': 'ERV4P7NAD', 'context_team_id': None, 'context_enterprise_id': 'ERV4P7NAD', 'api_app_id': 'A099LACAB2R', 'event': {'user': 'U01RMTFMALF', 'type': 'message', 'ts': '1755897271.924129', 'client_msg_id': 'd65e124b-c7bd-43c0-8cb1-594021214601', 'text': 'How can i run an automated test on a local Android phone?', 'blocks': [{'type': 'rich_text', 'block_id': 'vQwBP', 'elements': [{'type': 'rich_text_section', 'elements': [{'type': 'text', 'text': 'How can i run an automated test on a local Android phone?'}]}]}], 'channel': 'D09A0LFHK8R', 'event_ts': '1755897271.924129', 'channel_type': 'im'}, 'type': 'event_callback', 'event_id': 'Ev09BSTHSJJG', 'event_time': 1755897271, 'authorizations': [{'enterprise_id': 'ERV4P7NAD', 'team_id': 'T010QS7UQNA', 'user_id': 'U099R6WTZ9S', 'is_bot': True, 'is_enterprise_install': False}], 'is_ext_shared_channel': False, 'event_context': '4-eyJldCI6Im1lc3NhZ2UiLCJ0aWQiOiJUMDEwUVM3VVFOQSIsImFpZCI6IkEwOTlMQUNBQjJSIiwiY2lkIjoiRDA5QTBMRkhLOFIifQ'}
2025-08-22 14:14:32,964 - slack_bolt.App - DEBUG - [client.py:200] - Sending a message (session id: 0355322f-cce8-4559-bd72-7d4e0cf16a3d, message: {"envelope_id": "5702641c-f804-4f20-bb8b-a01b5b7c9ab9"})
2025-08-22 14:14:32,965 - __main__ - INFO - [main.py:469] - DM Event details: channel=D09A0LFHK8R, user=U01RMTFMALF, ts=1755897271.924129
2025-08-22 14:14:32,965 - __main__ - DEBUG - [main.py:470] - DM Event text: How can i run an automated test on a local Android phone?
2025-08-22 14:14:32,965 - utils - DEBUG - [utils.py:27] - Checking message processing: channel=D09A0LFHK8R, ts=1755897271.924129, text='How can i run an automated test on a local Android...'
2025-08-22 14:14:32,965 - slack_bolt.App - DEBUG - [internals.py:41] - Response time: 4 milliseconds
2025-08-22 14:14:32,965 - utils - DEBUG - [utils.py:31] - Message hash: 899a26b7a734662bdc971fe69dcb5bf0
2025-08-22 14:14:32,966 - slack_bolt.App - DEBUG - [client.py:150] - Message processing completed (type: events_api, envelope_id: 5702641c-f804-4f20-bb8b-a01b5b7c9ab9)
2025-08-22 14:14:32,966 - utils - DEBUG - [utils.py:53] - Added message to processing cache (total entries: 1)
2025-08-22 14:14:32,966 - __main__ - DEBUG - [main.py:483] - Bot check: bot_id=None, user_id=U01RMTFMALF
2025-08-22 14:14:32,966 - __main__ - DEBUG - [main.py:488] - Question received: 'How can i run an automated test on a local Android phone?'
2025-08-22 14:14:32,966 - __main__ - DEBUG - [main.py:494] - Checking user access for DM...
2025-08-22 14:14:32,966 - auth.slack_user_info - DEBUG - [slack_user_info.py:48] - Fetching user info for user_id: U01RMTFMALF
2025-08-22 14:14:32,967 - slack_sdk.web.base_client - DEBUG - [base_client.py:255] - Sending a request - url: https://slack.com/api/users.info, query_params: {}, body_params: {'user': 'U01RMTFMALF', 'team_id': 'T010QS7UQNA'}, files: {}, json_body: None, headers: {'Content-Type': 'application/x-www-form-urlencoded', 'Authorization': '(redacted)', 'User-Agent': 'Python/3.12.0 slackclient/3.34.0 Darwin/23.4.0'}
2025-08-22 14:14:33,291 - slack_sdk.web.base_client - DEBUG - [base_client.py:546] - Received the following response - status: 200, headers: {'date': 'Fri, 22 Aug 2025 21:14:33 GMT', 'server': 'Apache', 'vary': 'Accept-Encoding', 'x-slack-req-id': '04a37ccda450af729149ee5afa93e759', 'x-content-type-options': 'nosniff', 'x-xss-protection': '0', 'pragma': 'no-cache', 'cache-control': 'private, no-cache, no-store, must-revalidate', 'expires': 'Sat, 26 Jul 1997 05:00:00 GMT', 'content-type': 'application/json; charset=utf-8', 'x-accepted-oauth-scopes': 'users:read', 'x-oauth-scopes': 'app_mentions:read,channels:history,chat:write,im:history,im:read,im:write,users:read,reactions:write,users:read.email', 'access-control-expose-headers': 'x-slack-req-id, retry-after', 'access-control-allow-headers': 'slack-route, x-slack-version-ts, x-b3-traceid, x-b3-spanid, x-b3-parentspanid, x-b3-sampled, x-b3-flags', 'strict-transport-security': 'max-age=31536000; includeSubDomains; preload', 'referrer-policy': 'no-referrer', 'x-slack-unique-id': 'aKjduQ1lZegwKwqive3qtwAAEB4', 'x-slack-backend': 'r', 'access-control-allow-origin': '*', 'content-length': '2057', 'via': '1.1 slack-prod.tinyspeck.com, envoy-www-iad-lkqiggdt,envoy-edge-pdx-bixqlfcz', 'x-envoy-attempt-count': '1', 'x-envoy-upstream-service-time': '93', 'x-backend': 'main_normal main_canary_with_overflow main_control_with_overflow', 'x-server': 'slack-www-hhvm-main-iad-pemm', 'x-slack-shared-secret-outcome': 'no-match', 'x-edge-backend': 'envoy-www', 'timing-allow-origin': '*', 'x-slack-edge-shared-secret-outcome': 'no-match', 'connection': 'close'}, body: {"ok":true,"user":{"id":"U01RMTFMALF","name":"popov8533","is_bot":false,"updated":1755891346,"is_app_user":false,"team_id":"T010QS7UQNA","deleted":false,"color":"4bbe2e","is_email_confirmed":true,"real_name":"Alexandr Popov","tz":"America\/Los_Angeles","tz_label":"Pacific Daylight Time","tz_offset":-25200,"is_admin":false,"is_owner":false,"is_primary_owner":false,"is_restricted":false,"is_ultra_restricted":false,"enterprise_user":{"id":"U01RMTFMALF","enterprise_id":"ERV4P7NAD","enterprise_name":"Paramount Global","is_admin":false,"is_owner":false,"is_primary_owner":false,"teams":["T010QS7UQNA","T02H1PQMF"]},"who_can_share_contact_card":"EVERYONE","profile":{"real_name":"Alexandr Popov","display_name":"Alex Popov","avatar_hash":"a64f82312a14","real_name_normalized":"Alexandr Popov","display_name_normalized":"Alex Popov","image_24":"https:\/\/avatars.slack-edge.com\/2023-03-29\/5033076824964_a64f82312a141123fbbf_24.png","image_32":"https:\/\/avatars.slack-edge.com\/2023-03-29\/5033076824964_a64f82312a141123fbbf_32.png","image_48":"https:\/\/avatars.slack-edge.com\/2023-03-29\/5033076824964_a64f82312a141123fbbf_48.png","image_72":"https:\/\/avatars.slack-edge.com\/2023-03-29\/5033076824964_a64f82312a141123fbbf_72.png","image_192":"https:\/\/avatars.slack-edge.com\/2023-03-29\/5033076824964_a64f82312a141123fbbf_192.png","image_512":"https:\/\/avatars.slack-edge.com\/2023-03-29\/5033076824964_a64f82312a141123fbbf_512.png","image_1024":"https:\/\/avatars.slack-edge.com\/2023-03-29\/5033076824964_a64f82312a141123fbbf_1024.png","image_original":"https:\/\/avatars.slack-edge.com\/2023-03-29\/5033076824964_a64f82312a141123fbbf_original.png","is_custom_image":true,"first_name":"Alexandr","last_name":"Popov","team":"T010QS7UQNA","email":"alexandr.popov@paramount.com","title":"Senior Software Quality Assurance Engineer","phone":"","skype":"","status_text":"","status_text_canonical":"","status_emoji":"","status_emoji_display_info":[],"status_expiration":0,"huddle_state":"default_unset","huddle_state_expiration_ts":0,"ooo_message":""}}}
2025-08-22 14:14:33,292 - auth.slack_user_info - DEBUG - [slack_user_info.py:63] - Retrieved email for user U01RMTFMALF: alexandr.popov@paramount.com
2025-08-22 14:14:33,292 - auth.email_whitelist - DEBUG - [email_whitelist.py:57] - Email access granted: alexandr.popov@paramount.com
2025-08-22 14:14:33,292 - __main__ - INFO - [main.py:118] - Access granted to user U01RMTFMALF with email alexandr.popov@paramount.com
2025-08-22 14:14:33,292 - __main__ - DEBUG - [main.py:500] - User access check passed for DM
2025-08-22 14:14:33,292 - __main__ - INFO - [main.py:502] - Processing DM question from user U01RMTFMALF: How can i run an automated test on a local Android phone?
2025-08-22 14:14:33,292 - __main__ - DEBUG - [main.py:505] - Starting DM processing...
2025-08-22 14:14:33,292 - __main__ - DEBUG - [main.py:508] - Checking if 'how can i run an automated test on a local android phone?' is an admin command in DM
2025-08-22 14:14:33,292 - __main__ - DEBUG - [main.py:544] - Checking if DM thread is already being processed...
2025-08-22 14:14:33,293 - utils - DEBUG - [utils.py:67] - Managing thread: D09A0LFHK8R:1755897271.924129, action: add, user: U01RMTFMALF
2025-08-22 14:14:33,293 - utils - INFO - [utils.py:94] - Added thread D09A0LFHK8R:1755897271.924129 to active tracking (total: 1)
2025-08-22 14:14:33,293 - __main__ - DEBUG - [main.py:549] - DM thread management check passed
2025-08-22 14:14:33,293 - slack_sdk.web.base_client - DEBUG - [base_client.py:255] - Sending a request - url: https://slack.com/api/reactions.add, query_params: {}, body_params: {'channel': 'D09A0LFHK8R', 'name': 'thinking_face', 'timestamp': '1755897271.924129', 'team_id': 'T010QS7UQNA'}, files: {}, json_body: None, headers: {'Content-Type': 'application/x-www-form-urlencoded', 'Authorization': '(redacted)', 'User-Agent': 'Python/3.12.0 slackclient/3.34.0 Darwin/23.4.0'}
2025-08-22 14:14:33,658 - slack_sdk.web.base_client - DEBUG - [base_client.py:546] - Received the following response - status: 200, headers: {'date': 'Fri, 22 Aug 2025 21:14:33 GMT', 'server': 'Apache', 'vary': 'Accept-Encoding', 'x-slack-req-id': '03d6fcf000213fb656dab4795a3302dc', 'x-content-type-options': 'nosniff', 'x-xss-protection': '0', 'pragma': 'no-cache', 'cache-control': 'private, no-cache, no-store, must-revalidate', 'expires': 'Sat, 26 Jul 1997 05:00:00 GMT', 'content-type': 'application/json; charset=utf-8', 'x-accepted-oauth-scopes': 'reactions:write', 'x-oauth-scopes': 'app_mentions:read,channels:history,chat:write,im:history,im:read,im:write,users:read,reactions:write,users:read.email', 'access-control-expose-headers': 'x-slack-req-id, retry-after', 'access-control-allow-headers': 'slack-route, x-slack-version-ts, x-b3-traceid, x-b3-spanid, x-b3-parentspanid, x-b3-sampled, x-b3-flags', 'strict-transport-security': 'max-age=31536000; includeSubDomains; preload', 'referrer-policy': 'no-referrer', 'x-slack-unique-id': 'aKjduZQNizuj531EDIma-QAAEDU', 'x-slack-backend': 'r', 'access-control-allow-origin': '*', 'content-length': '11', 'via': '1.1 slack-prod.tinyspeck.com, envoy-www-iad-cqspykya,envoy-edge-pdx-dpzvlpsi', 'x-envoy-attempt-count': '1', 'x-envoy-upstream-service-time': '142', 'x-backend': 'main_normal main_canary_with_overflow main_control_with_overflow', 'x-server': 'slack-www-hhvm-main-iad-cuyp', 'x-slack-shared-secret-outcome': 'no-match', 'x-edge-backend': 'envoy-www', 'timing-allow-origin': '*', 'x-slack-edge-shared-secret-outcome': 'no-match', 'connection': 'close'}, body: {"ok":true}
2025-08-22 14:14:33,658 - __main__ - INFO - [main.py:566] - Processing DM question from <@U01RMTFMALF>: How can i run an automated test on a local Android phone?
2025-08-22 14:14:33,658 - __main__ - INFO - [main.py:570] - Sending DM request to DIG AI...
2025-08-22 14:14:33,659 - dig_connector - INFO - [dig_connector.py:134] - Generating response for query: 'How can i run an automated test on a local Android phone?' with 0 chunks
2025-08-22 14:14:33,659 - dig_connector - DEBUG - [dig_connector.py:138] - Formatted context length: 0
2025-08-22 14:14:33,659 - dig_connector - INFO - [dig_connector.py:141] - No context available, using direct query
2025-08-22 14:14:33,659 - dig_connector - INFO - [dig_connector.py:150] - Sending prompt to DIG platform...
2025-08-22 14:14:33,659 - dig_connector - INFO - [dig_connector.py:121] - Sending message to DIG API - URL: https://ai.digdev.cbsicloud.com/fastapi/chats/885/generate
2025-08-22 14:14:33,659 - dig_connector - DEBUG - [dig_connector.py:122] - Message payload: {'model_id': 42, 'message_text': 'How can i run an automated test on a local Android phone?', 'history': [{'role': 'user', 'content': 'How can i run an automated test on a local Android phone?'}]}
2025-08-22 14:14:44,101 - urllib3.connectionpool - DEBUG - [connectionpool.py:549] - https://ai.digdev.cbsicloud.com:443 "POST /fastapi/chats/885/generate HTTP/1.1" 200 4578
2025-08-22 14:14:44,103 - dig_connector - DEBUG - [dig_connector.py:125] - DIG API response: status=200
2025-08-22 14:14:44,103 - dig_connector - DEBUG - [dig_connector.py:129] - DIG API response data: {'message_text': 'To run an automated test on a local Android phone, you\'ll need to configure your test environment and execute the tests, typically using Maven.\n\nHere\'s a breakdown of the steps and parameters involved, based on the provided documents:\n\n1.  **Ensure Android Home is set (for Emulators):** If you are using an Android Emulator, make sure your Run Configuration includes the `$ANDROID_HOME` environment variable and that it\'s part of your system\'s path. (Source: [Local Simulator/Emulator Mobile SmokeTest Runs](https://paramount.atlassian.net/wiki/spaces/PLQA/pages/47713566))\n\n2.  **Configure Test Parameters:** You\'ll need to set various parameters to specify that you\'re running on a local Android device. These can often be passed as arguments or configured in a properties file.\n\n    *   **Driver:** `android` (e.g., `-Ddriver=android`)\n    *   **Platform Name:** `Android` (e.g., `-DplatformName=Android`)\n    *   **Environment:** `local` (e.g., `-Denvironment=local`)\n    *   **App Path:** Provide the local path to your application\'s `.apk` file (e.g., `-Dapp="/pathToPackage/mobile-8.0.44-210804410-3.5.25-paramountPlus-playStore-release.apk"`).\n    *   **Device ID (for Real Device):** Set the `udid` parameter if running on a real mobile device. You can get your device\'s ID by typing `adb devices` in your terminal. This might also be referred to as `DebugDeviceID`. (Source: [https://paramount.atlassian.net/wiki/spaces/PLQA/pages/47711460](https://paramount.atlassian.net/wiki/spaces/PLQA/pages/47711460), [https://paramount.atlassian.net/wiki/spaces/PLQA/pages/47720266](https://paramount.atlassian.net/wiki/spaces/PLQA/pages/47720266))\n    *   **Bundle ID:** You can override the default bundle ID if needed (e.g., `-DbundleId=set to override default setting`).\n    *   **Platform Version:** Specify the Android version (e.g., `-DplatformVersion=11.0`).\n    *   **Device Name:** You can specify a device name (e.g., `-DdeviceName="Google Pixel 2XL"`).\n    *   **Headless Mode:** Set to `false` for local runs (e.g., `-Dheadless=false`).\n    *   **Mobile Device Category:** You can specify `PHONE` or `TABLET` (e.g., `MobileDeviceCategory=PHONE`).\n    *   **Device Start Orientation:** Set to `PORTRAIT` or `LANDSCAPE` (e.g., `DeiceStartOrientation=PORTRAIT`).\n    *   **App Build Type:** `DEBUG` is a common value (e.g., `AppBuildType=DEBUG`).\n\n    (Source: [https://paramount.atlassian.net/wiki/spaces/PLQA/pages/47711460](https://paramount.atlassian.net/wiki/spaces/PLQA/pages/47711460), [https://paramount.atlassian.net/wiki/spaces/PLQA/pages/47720266](https://paramount.atlassian.net/wiki/spaces/PLQA/pages/47720266))\n\n3.  **Update `config.properties`:** In your `resources/config.properties` file (within the `mqe-hob-mobile-tests` module), you may need to add or confirm properties such as `Platform=ANDROID`, `Locale=en-us`, and `MobileDeviceCategory=PHONE`. (Source: [https://paramount.atlassian.net/wiki/spaces/PLQA/pages/47720266](https://paramount.atlassian.net/wiki/spaces/PLQA/pages/47720266))\n\n4.  **Connect to VPN and Run Synergy Server:**\n    *   Connect to VPN: `connect.cbsinteractive.com/VPNFT`.\n    *   Download the latest version of Synergy server and run the `.jar` file (Websocket). (Source: [https://paramount.atlassian.net/wiki/spaces/PLQA/pages/47720266](https://paramount.atlassian.net/wiki/spaces/PLQA/pages/47720266))\n\n5.  **Execute the Test:**\n    You can run the tests from your terminal using Maven commands. A common command structure is:\n    `mvn clean test -pl mqe-hob-mobile-tests -am -Dgroups=Your test case number or tag`\n\n    Alternatively, you can run from `TestNGSuiteConfig.xml` by right-clicking the file and selecting "run TestNGSuiteConfig.xml", providing the necessary test case ID or tag name in the include name section. (Source: [https://paramount.atlassian.net/wiki/spaces/PLQA/pages/47720266](https://paramount.atlassian.net/wiki/spaces/PLQA/pages/47720266))\n\n6.  **Appium Server and Android Emulator:**\n    If you\'re managing the Appium server and Android emulator locally, your test class (e.g., `SampleTest.java`) might include logic to start and stop them. For instance, in a `@BeforeSuite` method, you could start the Appium server, and within the test execution logic, launch the Android emulator if the environment is "local" and the driver is "android". (Source: [https://paramount.atlassian.net/wiki/spaces/PLQA/pages/47711460](https://paramount.atlassian.net/wiki/spaces/PLQA/pages/47711460))', 'requires_approval': False, 'execution_id': 1588}
2025-08-22 14:14:44,104 - dig_connector - INFO - [dig_connector.py:154] - Extracting response content...
2025-08-22 14:14:44,104 - dig_connector - DEBUG - [dig_connector.py:221] - Found message_text in response
2025-08-22 14:14:44,104 - dig_connector - INFO - [dig_connector.py:157] - Successfully generated response (length: 4467)
2025-08-22 14:14:44,104 - __main__ - INFO - [main.py:573] - Received DM response from DIG AI
2025-08-22 14:14:44,104 - __main__ - DEBUG - [main.py:574] - DIG AI DM response: To run an automated test on a local Android phone, you'll need to configure your test environment and execute the tests, typically using Maven.

Here's a breakdown of the steps and parameters involved, based on the provided documents:

1.  **Ensure Android Home is set (for Emulators):** If you are using an Android Emulator, make sure your Run Configuration includes the `$ANDROID_HOME` environment variable and that it's part of your system's path. (Source: [Local Simulator/Emulator Mobile SmokeTest Runs](https://paramount.atlassian.net/wiki/spaces/PLQA/pages/47713566))

2.  **Configure Test Parameters:** You'll need to set various parameters to specify that you're running on a local Android device. These can often be passed as arguments or configured in a properties file.

    *   **Driver:** `android` (e.g., `-Ddriver=android`)
    *   **Platform Name:** `Android` (e.g., `-DplatformName=Android`)
    *   **Environment:** `local` (e.g., `-Denvironment=local`)
    *   **App Path:** Provide the local path to your application's `.apk` file (e.g., `-Dapp="/pathToPackage/mobile-8.0.44-210804410-3.5.25-paramountPlus-playStore-release.apk"`).
    *   **Device ID (for Real Device):** Set the `udid` parameter if running on a real mobile device. You can get your device's ID by typing `adb devices` in your terminal. This might also be referred to as `DebugDeviceID`. (Source: [https://paramount.atlassian.net/wiki/spaces/PLQA/pages/47711460](https://paramount.atlassian.net/wiki/spaces/PLQA/pages/47711460), [https://paramount.atlassian.net/wiki/spaces/PLQA/pages/47720266](https://paramount.atlassian.net/wiki/spaces/PLQA/pages/47720266))
    *   **Bundle ID:** You can override the default bundle ID if needed (e.g., `-DbundleId=set to override default setting`).
    *   **Platform Version:** Specify the Android version (e.g., `-DplatformVersion=11.0`).
    *   **Device Name:** You can specify a device name (e.g., `-DdeviceName="Google Pixel 2XL"`).
    *   **Headless Mode:** Set to `false` for local runs (e.g., `-Dheadless=false`).
    *   **Mobile Device Category:** You can specify `PHONE` or `TABLET` (e.g., `MobileDeviceCategory=PHONE`).
    *   **Device Start Orientation:** Set to `PORTRAIT` or `LANDSCAPE` (e.g., `DeiceStartOrientation=PORTRAIT`).
    *   **App Build Type:** `DEBUG` is a common value (e.g., `AppBuildType=DEBUG`).

    (Source: [https://paramount.atlassian.net/wiki/spaces/PLQA/pages/47711460](https://paramount.atlassian.net/wiki/spaces/PLQA/pages/47711460), [https://paramount.atlassian.net/wiki/spaces/PLQA/pages/47720266](https://paramount.atlassian.net/wiki/spaces/PLQA/pages/47720266))

3.  **Update `config.properties`:** In your `resources/config.properties` file (within the `mqe-hob-mobile-tests` module), you may need to add or confirm properties such as `Platform=ANDROID`, `Locale=en-us`, and `MobileDeviceCategory=PHONE`. (Source: [https://paramount.atlassian.net/wiki/spaces/PLQA/pages/47720266](https://paramount.atlassian.net/wiki/spaces/PLQA/pages/47720266))

4.  **Connect to VPN and Run Synergy Server:**
    *   Connect to VPN: `connect.cbsinteractive.com/VPNFT`.
    *   Download the latest version of Synergy server and run the `.jar` file (Websocket). (Source: [https://paramount.atlassian.net/wiki/spaces/PLQA/pages/47720266](https://paramount.atlassian.net/wiki/spaces/PLQA/pages/47720266))

5.  **Execute the Test:**
    You can run the tests from your terminal using Maven commands. A common command structure is:
    `mvn clean test -pl mqe-hob-mobile-tests -am -Dgroups=Your test case number or tag`

    Alternatively, you can run from `TestNGSuiteConfig.xml` by right-clicking the file and selecting "run TestNGSuiteConfig.xml", providing the necessary test case ID or tag name in the include name section. (Source: [https://paramount.atlassian.net/wiki/spaces/PLQA/pages/47720266](https://paramount.atlassian.net/wiki/spaces/PLQA/pages/47720266))

6.  **Appium Server and Android Emulator:**
    If you're managing the Appium server and Android emulator locally, your test class (e.g., `SampleTest.java`) might include logic to start and stop them. For instance, in a `@BeforeSuite` method, you could start the Appium server, and within the test execution logic, launch the Android emulator if the environment is "local" and the driver is "android". (Source: [https://paramount.atlassian.net/wiki/spaces/PLQA/pages/47711460](https://paramount.atlassian.net/wiki/spaces/PLQA/pages/47711460))
2025-08-22 14:14:44,107 - __main__ - DEBUG - [main.py:578] - Formatted DM response: *Your Question:*
> How can i run an automated test on a local Android phone?

*Answer:*
To run an automated test on a local Android phone, you'll need to configure your test environment and execute the tests, typically using Maven.

Here's a breakdown of the steps and parameters involved, based on the provided documents:

1.  *Ensure Android Home is set (for Emulators):
*
If you are using an Android Emulator, make sure your Run Configuration includes the `$ANDROID_HOME` environment variable and that it's part of your system's path. ()

2.  *Configure Test Parameters:
*
You'll need to set various parameters to specify that you're running on a local Android device. These can often be passed as arguments or configured in a properties file.

    *
*Driver:* `android` (e.g., `-Ddriver=android`)
    *
*Platform Name:* `Android` (e.g., `-DplatformName=Android`)
    *
*Environment:* `local` (e.g., `-Denvironment=local`)
    *
*App Path:* Provide the local path to your application's `.apk` file (e.g., `-Dapp="/pathToPackage/mobile-8.0.44-210804410-3.5.25-paramountPlus-playStore-release.apk"`).
    *
*Device ID (for Real Device):* Set the `udid` parameter if running on a real mobile device. You can get your device's ID by typing `adb devices` in your terminal. This might also be referred to as `DebugDeviceID`. (, [https://paramount.atlassian.net/wiki/spaces/PLQA/pages/47720266](https://paramount.atlassian.net/wiki/spaces/PLQA/pages/47720266))
    *
*Bundle ID:* You can override the default bundle ID if needed (e.g., `-DbundleId=set to override default setting`).
    *
*Platform Version:* Specify the Android version (e.g., `-DplatformVersion=11.0`).
    *
*Device Name:* You can specify a device name (e.g., `-DdeviceName="Google Pixel 2XL"`).
    *
*Headless Mode:* Set to `false` for local runs (e.g., `-Dheadless=false`).
    *
*Mobile Device Category:* You can specify `PHONE` or `TABLET` (e.g., `MobileDeviceCategory=PHONE`).
    *
*Device Start Orientation:* Set to `PORTRAIT` or `LANDSCAPE` (e.g., `DeiceStartOrientation=PORTRAIT`).
    *
*App Build Type:* `DEBUG` is a common value (e.g., `AppBuildType=DEBUG`).

    (, [https://paramount.atlassian.net/wiki/spaces/PLQA/pages/47720266](https://paramount.atlassian.net/wiki/spaces/PLQA/pages/47720266))

3.  *Update `config.properties`:
*
In your `resources/config.properties` file (within the `mqe-hob-mobile-tests` module), you may need to add or confirm properties such as `Platform=ANDROID`, `Locale=en-us`, and `MobileDeviceCategory=PHONE`. ()

4.  *Connect to VPN and Run Synergy Server:
*
*   Connect to VPN: `connect.cbsinteractive.com/VPNFT`.
    *
Download the latest version of Synergy server and run the `.jar` file (Websocket). ()

5.  *Execute the Test:
*
You can run the tests from your terminal using Maven commands. A common command structure is:
    `mvn clean test -pl mqe-hob-mobile-tests -am -Dgroups=Your test case number or tag`

    Alternatively, you can run from `TestNGSuiteConfig.xml` by right-clicking the file and selecting "run TestNGSuiteConfig.xml", providing the necessary test case ID or tag name in the include name section. ()

6.  *Appium Server and Android Emulator:
*
If you're managing the Appium server and Android emulator locally, your test class (e.g., `SampleTest.java`) might include logic to start and stop them. For instance, in a `@BeforeSuite` method, you could start the Appium server, and within the test execution logic, launch the Android emulator if the environment is "local" and the driver is "android". ()

────────────────────────────────────────
*📚 Sources:*
1. https://paramount.atlassian.net/wiki/spaces/PLQA/pages/47713566
2. https://paramount.atlassian.net/wiki/spaces/PLQA/pages/47711460](https://paramount.atlassian.net/wiki/spaces/PLQA/pages/47711460
3. https://paramount.atlassian.net/wiki/spaces/PLQA/pages/47720266](https://paramount.atlassian.net/wiki/spaces/PLQA/pages/47720266
4. https://paramount.atlassian.net/wiki/spaces/PLQA/pages/47711460
5. https://paramount.atlassian.net/wiki/spaces/PLQA/pages/47720266

2025-08-22 14:14:44,109 - slack_sdk.web.base_client - DEBUG - [base_client.py:255] - Sending a request - url: https://slack.com/api/reactions.remove, query_params: {}, body_params: {'name': 'thinking_face', 'channel': 'D09A0LFHK8R', 'timestamp': '1755897271.924129', 'team_id': 'T010QS7UQNA'}, files: {}, json_body: None, headers: {'Content-Type': 'application/x-www-form-urlencoded', 'Authorization': '(redacted)', 'User-Agent': 'Python/3.12.0 slackclient/3.34.0 Darwin/23.4.0'}
2025-08-22 14:14:44,456 - slack_sdk.web.base_client - DEBUG - [base_client.py:546] - Received the following response - status: 200, headers: {'date': 'Fri, 22 Aug 2025 21:14:44 GMT', 'server': 'Apache', 'vary': 'Accept-Encoding', 'x-slack-req-id': 'fc5fed4b5416e35942d88003f3e61153', 'x-content-type-options': 'nosniff', 'x-xss-protection': '0', 'pragma': 'no-cache', 'cache-control': 'private, no-cache, no-store, must-revalidate', 'expires': 'Sat, 26 Jul 1997 05:00:00 GMT', 'content-type': 'application/json; charset=utf-8', 'x-accepted-oauth-scopes': 'reactions:write', 'x-oauth-scopes': 'app_mentions:read,channels:history,chat:write,im:history,im:read,im:write,users:read,reactions:write,users:read.email', 'access-control-expose-headers': 'x-slack-req-id, retry-after', 'access-control-allow-headers': 'slack-route, x-slack-version-ts, x-b3-traceid, x-b3-spanid, x-b3-parentspanid, x-b3-sampled, x-b3-flags', 'strict-transport-security': 'max-age=31536000; includeSubDomains; preload', 'referrer-policy': 'no-referrer', 'x-slack-unique-id': 'aKjdxHamjdHwaN4CCl2kBwAAACI', 'x-slack-backend': 'r', 'access-control-allow-origin': '*', 'content-length': '11', 'via': '1.1 slack-prod.tinyspeck.com, envoy-www-iad-ytgcbffv,envoy-edge-pdx-okoaxmci', 'x-envoy-attempt-count': '1', 'x-envoy-upstream-service-time': '141', 'x-backend': 'main_normal main_canary_with_overflow main_control_with_overflow', 'x-server': 'slack-www-hhvm-main-iad-zpiv', 'x-slack-shared-secret-outcome': 'no-match', 'x-edge-backend': 'envoy-www', 'timing-allow-origin': '*', 'x-slack-edge-shared-secret-outcome': 'no-match', 'connection': 'close'}, body: {"ok":true}
2025-08-22 14:14:44,482 - slack_sdk.web.base_client - DEBUG - [base_client.py:255] - Sending a request - url: https://slack.com/api/chat.postMessage, query_params: {}, body_params: {}, files: {}, json_body: {'channel': 'D09A0LFHK8R', 'text': '*Your Question:*\n> How can i run an automated test on a local Android phone? *Answer:*\nTo run an automated test on a local Android phone, you\'ll need to configure your test environment and execute the tests, typically using Maven. Here\'s a breakdown of the steps and parameters involved, based on the provided documents:\n\n1. *Ensure Android Home is set (for Emulators):\n*\nIf you are using an Android Emulator, make sure your Run Configuration includes the `$ANDROID_HOME` environment variable and that it\'s part of your system\'s path. ()\n\n2. *Configure Test Parameters:\n*\nYou\'ll need to set various parameters to specify that you\'re running on a local Android device. These can often be passed as arguments or configured in a properties file. *\n*Driver:* `android` (e.g., `-Ddriver=android`)\n    *\n*Platform Name:* `Android` (e.g., `-DplatformName=Android`)\n    *\n*Environment:* `local` (e.g., `-Denvironment=local`)\n    *\n*App Path:* Provide the local path to your application\'s `.apk` file (e.g., `-Dapp="/pathToPackage/mobile-8.0.44-210804410-3.5.25-paramountPlus-playStore-release.apk"`). *\n*Device ID (for Real Device):* Set the `udid` parameter if running on a real mobile device. You can get your device\'s ID by typing `adb devices` in your terminal. This might also be referred to as `DebugDeviceID`. (, [https://paramount.atlassian.net/wiki/spaces/PLQA/pages/47720266](https://paramount.atlassian.net/wiki/spaces/PLQA/pages/47720266))\n    *\n*Bundle ID:* You can override the default bundle ID if needed (e.g., `-DbundleId=set to override default setting`). *\n*Platform Version:* Specify the Android version (e.g., `-DplatformVersion=11.0`). *\n*Device Name:* You can specify a device name (e.g., `-DdeviceName="Google Pixel 2XL"`). *\n*Headless Mode:* Set to `false` for local runs (e.g., `-Dheadless=false`). *\n*Mobile Device Category:* You can specify `PHONE` or `TABLET` (e.g., `MobileDeviceCategory=PHONE`). *\n*Device Start Orientation:* Set to `PORTRAIT` or `LANDSCAPE` (e.g., `DeiceStartOrientation=PORTRAIT`). *\n*App Build Type:* `DEBUG` is a common value (e.g., `AppBuildType=DEBUG`). (, [https://paramount.atlassian.net/wiki/spaces/PLQA/pages/47720266](https://paramount.atlassian.net/wiki/spaces/PLQA/pages/47720266))\n\n3. *Update `config.properties`:\n*\nIn your `resources/config.properties` file (within the `mqe-hob-mobile-tests` module), you may need to add or confirm properties such as `Platform=ANDROID`, `Locale=en-us`, and `MobileDeviceCategory=PHONE`. ()\n\n4. *Connect to VPN and Run Synergy Server:\n*\n*   Connect to VPN: `connect.cbsinteractive.com/VPNFT`. *\nDownload the latest version of Synergy server and run the `.jar` file (Websocket). ()\n\n5. *Execute the Test:\n*\nYou can run the tests from your terminal using Maven commands.\n\n_(message continued in thread...)_', 'thread_ts': '1755897271.924129', 'team_id': 'T010QS7UQNA'}, headers: {'Content-Type': 'application/json;charset=utf-8', 'Authorization': '(redacted)', 'User-Agent': 'Python/3.12.0 slackclient/3.34.0 Darwin/23.4.0'}
2025-08-22 14:14:44,936 - slack_sdk.web.base_client - DEBUG - [base_client.py:546] - Received the following response - status: 200, headers: {'date': 'Fri, 22 Aug 2025 21:14:44 GMT', 'server': 'Apache', 'vary': 'Accept-Encoding', 'x-slack-req-id': 'cee39faa7abcd716367ec5a63748fed4', 'x-content-type-options': 'nosniff', 'x-xss-protection': '0', 'pragma': 'no-cache', 'cache-control': 'private, no-cache, no-store, must-revalidate', 'expires': 'Sat, 26 Jul 1997 05:00:00 GMT', 'content-type': 'application/json; charset=utf-8', 'x-accepted-oauth-scopes': 'chat:write', 'x-oauth-scopes': 'app_mentions:read,channels:history,chat:write,im:history,im:read,im:write,users:read,reactions:write,users:read.email', 'access-control-expose-headers': 'x-slack-req-id, retry-after', 'access-control-allow-headers': 'slack-route, x-slack-version-ts, x-b3-traceid, x-b3-spanid, x-b3-parentspanid, x-b3-sampled, x-b3-flags', 'strict-transport-security': 'max-age=31536000; includeSubDomains; preload', 'referrer-policy': 'no-referrer', 'x-slack-unique-id': 'aKjdxAzWLe9JuaFNali8-wAAEAo', 'x-slack-backend': 'r', 'access-control-allow-origin': '*', 'content-length': '10256', 'via': '1.1 slack-prod.tinyspeck.com, envoy-www-iad-lkqiggdt,envoy-edge-pdx-cnfinfot', 'x-envoy-attempt-count': '1', 'x-envoy-upstream-service-time': '194', 'x-backend': 'main_normal main_canary_with_overflow main_control_with_overflow', 'x-server': 'slack-www-hhvm-main-iad-ztmg', 'x-slack-shared-secret-outcome': 'no-match', 'x-edge-backend': 'envoy-www', 'timing-allow-origin': '*', 'x-slack-edge-shared-secret-outcome': 'no-match', 'connection': 'close'}, body: {"ok":true,"channel":"D09A0LFHK8R","ts":"1755897284.871969","message":{"user":"U099R6WTZ9S","type":"message","ts":"1755897284.871969","bot_id":"B099R6WTRU4","app_id":"A099LACAB2R","text":"*Your Question:*\n&gt; How can i run an automated test on a local Android phone? *Answer:*\nTo run an automated test on a local Android phone, you'll need to configure your test environment and execute the tests, typically using Maven. Here's a breakdown of the steps and parameters involved, based on the provided documents:\n\n1. *Ensure Android Home is set (for Emulators):\n*\nIf you are using an Android Emulator, make sure your Run Configuration includes the `$ANDROID_HOME` environment variable and that it's part of your system's path. ()\n\n2. *Configure Test Parameters:\n*\nYou'll need to set various parameters to specify that you're running on a local Android device. These can often be passed as arguments or configured in a properties file. *\n*Driver:* `android` (e.g., `-Ddriver=android`)\n    *\n*Platform Name:* `Android` (e.g., `-DplatformName=Android`)\n    *\n*Environment:* `local` (e.g., `-Denvironment=local`)\n    *\n*App Path:* Provide the local path to your application's `.apk` file (e.g., `-Dapp=\"/pathToPackage/mobile-8.0.44-210804410-3.5.25-paramountPlus-playStore-release.apk\"`). *\n*Device ID (for Real Device):* Set the `udid` parameter if running on a real mobile device. You can get your device's ID by typing `adb devices` in your terminal. This might also be referred to as `DebugDeviceID`. (, [<https://paramount.atlassian.net/wiki/spaces/PLQA/pages/47720266>](<https://paramount.atlassian.net/wiki/spaces/PLQA/pages/47720266>))\n    *\n*Bundle ID:* You can override the default bundle ID if needed (e.g., `-DbundleId=set to override default setting`). *\n*Platform Version:* Specify the Android version (e.g., `-DplatformVersion=11.0`). *\n*Device Name:* You can specify a device name (e.g., `-DdeviceName=\"Google Pixel 2XL\"`). *\n*Headless Mode:* Set to `false` for local runs (e.g., `-Dheadless=false`). *\n*Mobile Device Category:* You can specify `PHONE` or `TABLET` (e.g., `MobileDeviceCategory=PHONE`). *\n*Device Start Orientation:* Set to `PORTRAIT` or `LANDSCAPE` (e.g., `DeiceStartOrientation=PORTRAIT`). *\n*App Build Type:* `DEBUG` is a common value (e.g., `AppBuildType=DEBUG`). (, [<https://paramount.atlassian.net/wiki/spaces/PLQA/pages/47720266>](<https://paramount.atlassian.net/wiki/spaces/PLQA/pages/47720266>))\n\n3. *Update `config.properties`:\n*\nIn your `resources/config.properties` file (within the `mqe-hob-mobile-tests` module), you may need to add or confirm properties such as `Platform=ANDROID`, `Locale=en-us`, and `MobileDeviceCategory=PHONE`. ()\n\n4. *Connect to VPN and Run Synergy Server:\n*\n*   Connect to VPN: `<http://connect.cbsinteractive.com/VPNFT|connect.cbsinteractive.com/VPNFT>`. *\nDownload the latest version of Synergy server and run the `.jar` file (Websocket). ()\n\n5. *Execute the Test:\n*\nYou can run the tests from your terminal using Maven commands.\n\n_(message continued in thread...)_","team":"T010QS7UQNA","bot_profile":{"id":"B099R6WTRU4","app_id":"A099LACAB2R","user_id":"U099R6WTZ9S","name":"AutoBot","icons":{"image_36":"https://a.slack-edge.com/80588/img/plugins/app/bot_36.png","image_48":"https://a.slack-edge.com/80588/img/plugins/app/bot_48.png","image_72":"https://a.slack-edge.com/80588/img/plugins/app/service_72.png"},"deleted":false,"updated":1754677948,"team_id":"T010QS7UQNA"},"thread_ts":"1755897271.924129","parent_user_id":"U01RMTFMALF","blocks":[{"type":"rich_text","block_id":"oorW","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Your Question:","style":{"bold":true}}]},{"type":"rich_text_quote","elements":[{"type":"text","text":"How can i run an automated test on a local Android phone? "},{"type":"text","text":"Answer:","style":{"bold":true}}]},{"type":"rich_text_section","elements":[{"type":"text","text":"To run an automated test on a local Android phone, you'll need to configure your test environment and execute the tests, typically using Maven. Here's a breakdown of the steps and parameters involved, based on the provided documents:\n\n1. *Ensure Android Home is set (for Emulators):\n*\nIf you are using an Android Emulator, make sure your Run Configuration includes the "},{"type":"text","text":"$ANDROID_HOME","style":{"code":true}},{"type":"text","text":" environment variable and that it's part of your system's path. ()\n\n2. *Configure Test Parameters:\n*\nYou'll need to set various parameters to specify that you're running on a local Android device. These can often be passed as arguments or configured in a properties file. *\n"},{"type":"text","text":"Driver:","style":{"bold":true}},{"type":"text","text":" "},{"type":"text","text":"android","style":{"code":true}},{"type":"text","text":" (e.g., "},{"type":"text","text":"-Ddriver=android","style":{"code":true}},{"type":"text","text":")\n    *\n"},{"type":"text","text":"Platform Name:","style":{"bold":true}},{"type":"text","text":" "},{"type":"text","text":"Android","style":{"code":true}},{"type":"text","text":" (e.g., "},{"type":"text","text":"-DplatformName=Android","style":{"code":true}},{"type":"text","text":")\n    *\n"},{"type":"text","text":"Environment:","style":{"bold":true}},{"type":"text","text":" "},{"type":"text","text":"local","style":{"code":true}},{"type":"text","text":" (e.g., "},{"type":"text","text":"-Denvironment=local","style":{"code":true}},{"type":"text","text":")\n    *\n"},{"type":"text","text":"App Path:","style":{"bold":true}},{"type":"text","text":" Provide the local path to your application's "},{"type":"text","text":".apk","style":{"code":true}},{"type":"text","text":" file (e.g., "},{"type":"text","text":"-Dapp=\"/pathToPackage/mobile-8.0.44-210804410-3.5.25-paramountPlus-playStore-release.apk\"","style":{"code":true}},{"type":"text","text":"). *\n"},{"type":"text","text":"Device ID (for Real Device):","style":{"bold":true}},{"type":"text","text":" Set the "},{"type":"text","text":"udid","style":{"code":true}},{"type":"text","text":" parameter if running on a real mobile device. You can get your device's ID by typing "},{"type":"text","text":"adb devices","style":{"code":true}},{"type":"text","text":" in your terminal. This might also be referred to as "},{"type":"text","text":"DebugDeviceID","style":{"code":true}},{"type":"text","text":". (, ["},{"type":"link","url":"https://paramount.atlassian.net/wiki/spaces/PLQA/pages/47720266"},{"type":"text","text":"]("},{"type":"link","url":"https://paramount.atlassian.net/wiki/spaces/PLQA/pages/47720266"},{"type":"text","text":"))\n    *\n"},{"type":"text","text":"Bundle ID:","style":{"bold":true}},{"type":"text","text":" You can override the default bundle ID if needed (e.g., "},{"type":"text","text":"-DbundleId=set to override default setting","style":{"code":true}},{"type":"text","text":"). *\n"},{"type":"text","text":"Platform Version:","style":{"bold":true}},{"type":"text","text":" Specify the Android version (e.g., "},{"type":"text","text":"-DplatformVersion=11.0","style":{"code":true}},{"type":"text","text":"). *\n"},{"type":"text","text":"Device Name:","style":{"bold":true}},{"type":"text","text":" You can specify a device name (e.g., "},{"type":"text","text":"-DdeviceName=\"Google Pixel 2XL\"","style":{"code":true}},{"type":"text","text":"). *\n"},{"type":"text","text":"Headless Mode:","style":{"bold":true}},{"type":"text","text":" Set to "},{"type":"text","text":"false","style":{"code":true}},{"type":"text","text":" for local runs (e.g., "},{"type":"text","text":"-Dheadless=false","style":{"code":true}},{"type":"text","text":"). *\n"},{"type":"text","text":"Mobile Device Category:","style":{"bold":true}},{"type":"text","text":" You can specify "},{"type":"text","text":"PHONE","style":{"code":true}},{"type":"text","text":" or "},{"type":"text","text":"TABLET","style":{"code":true}},{"type":"text","text":" (e.g., "},{"type":"text","text":"MobileDeviceCategory=PHONE","style":{"code":true}},{"type":"text","text":"). *\n"},{"type":"text","text":"Device Start Orientation:","style":{"bold":true}},{"type":"text","text":" Set to "},{"type":"text","text":"PORTRAIT","style":{"code":true}},{"type":"text","text":" or "},{"type":"text","text":"LANDSCAPE","style":{"code":true}},{"type":"text","text":" (e.g., "},{"type":"text","text":"DeiceStartOrientation=PORTRAIT","style":{"code":true}},{"type":"text","text":"). *\n"},{"type":"text","text":"App Build Type:","style":{"bold":true}},{"type":"text","text":" "},{"type":"text","text":"DEBUG","style":{"code":true}},{"type":"text","text":" is a common value (e.g., "},{"type":"text","text":"AppBuildType=DEBUG","style":{"code":true}},{"type":"text","text":"). (, ["},{"type":"link","url":"https://paramount.atlassian.net/wiki/spaces/PLQA/pages/47720266"},{"type":"text","text":"]("},{"type":"link","url":"https://paramount.atlassian.net/wiki/spaces/PLQA/pages/47720266"},{"type":"text","text":"))\n\n3. *Update "},{"type":"text","text":"config.properties","style":{"code":true}},{"type":"text","text":":\n*\nIn your "},{"type":"text","text":"resources/config.properties","style":{"code":true}},{"type":"text","text":" file (within the "},{"type":"text","text":"mqe-hob-mobile-tests","style":{"code":true}},{"type":"text","text":" module), you may need to add or confirm properties such as "},{"type":"text","text":"Platform=ANDROID","style":{"code":true}},{"type":"text","text":", "},{"type":"text","text":"Locale=en-us","style":{"code":true}},{"type":"text","text":", and "},{"type":"text","text":"MobileDeviceCategory=PHONE","style":{"code":true}},{"type":"text","text":". ()\n\n4. *Connect to VPN and Run Synergy Server:\n*\n*   Connect to VPN: "},{"type":"link","url":"http://connect.cbsinteractive.com/VPNFT","text":"connect.cbsinteractive.com/VPNFT","style":{"code":true}},{"type":"text","text":". *\nDownload the latest version of Synergy server and run the "},{"type":"text","text":".jar","style":{"code":true}},{"type":"text","text":" file (Websocket). ()\n\n5. *Execute the Test:\n*\nYou can run the tests from your terminal using Maven commands.\n\n"},{"type":"text","text":"(message continued in thread...)","style":{"italic":true}}]}]}]}}
2025-08-22 14:14:44,938 - slack_sdk.web.base_client - DEBUG - [base_client.py:255] - Sending a request - url: https://slack.com/api/chat.postMessage, query_params: {}, body_params: {}, files: {}, json_body: {'channel': 'D09A0LFHK8R', 'text': '_(part 2/2)_\n\nA common command structure is:\n    `mvn clean test -pl mqe-hob-mobile-tests -am -Dgroups=Your test case number or tag`\n\n    Alternatively, you can run from `TestNGSuiteConfig.xml` by right-clicking the file and selecting "run TestNGSuiteConfig.xml", providing the necessary test case ID or tag name in the include name section. ()\n\n6. *Appium Server and Android Emulator:\n*\nIf you\'re managing the Appium server and Android emulator locally, your test class (e.g., `SampleTest.java`) might include logic to start and stop them. For instance, in a `@BeforeSuite` method, you could start the Appium server, and within the test execution logic, launch the Android emulator if the environment is "local" and the driver is "android". ()\n\n────────────────────────────────────────\n*📚 Sources:*\n1. https://paramount.atlassian.net/wiki/spaces/PLQA/pages/47713566\n2. https://paramount.atlassian.net/wiki/spaces/PLQA/pages/47711460](https://paramount.atlassian.net/wiki/spaces/PLQA/pages/47711460\n3. https://paramount.atlassian.net/wiki/spaces/PLQA/pages/47720266](https://paramount.atlassian.net/wiki/spaces/PLQA/pages/47720266\n4. https://paramount.atlassian.net/wiki/spaces/PLQA/pages/47711460\n5. https://paramount.atlassian.net/wiki/spaces/PLQA/pages/47720266', 'thread_ts': '1755897271.924129', 'team_id': 'T010QS7UQNA'}, headers: {'Content-Type': 'application/json;charset=utf-8', 'Authorization': '(redacted)', 'User-Agent': 'Python/3.12.0 slackclient/3.34.0 Darwin/23.4.0'}
2025-08-22 14:14:45,325 - slack_sdk.web.base_client - DEBUG - [base_client.py:546] - Received the following response - status: 200, headers: {'date': 'Fri, 22 Aug 2025 21:14:45 GMT', 'server': 'Apache', 'vary': 'Accept-Encoding', 'x-slack-req-id': '146bd50fc2257e861c3ff9edcc713e1a', 'x-content-type-options': 'nosniff', 'x-xss-protection': '0', 'pragma': 'no-cache', 'cache-control': 'private, no-cache, no-store, must-revalidate', 'expires': 'Sat, 26 Jul 1997 05:00:00 GMT', 'content-type': 'application/json; charset=utf-8', 'x-accepted-oauth-scopes': 'chat:write', 'x-oauth-scopes': 'app_mentions:read,channels:history,chat:write,im:history,im:read,im:write,users:read,reactions:write,users:read.email', 'access-control-expose-headers': 'x-slack-req-id, retry-after', 'access-control-allow-headers': 'slack-route, x-slack-version-ts, x-b3-traceid, x-b3-spanid, x-b3-parentspanid, x-b3-sampled, x-b3-flags', 'strict-transport-security': 'max-age=31536000; includeSubDomains; preload', 'referrer-policy': 'no-referrer', 'x-slack-unique-id': 'aKjdxarjf2002ER8AwXw3AAAEAA', 'x-slack-backend': 'r', 'access-control-allow-origin': '*', 'content-length': '4303', 'via': '1.1 slack-prod.tinyspeck.com, envoy-www-iad-hsosgbyx,envoy-edge-pdx-bjmxpfcf', 'x-envoy-attempt-count': '1', 'x-envoy-upstream-service-time': '169', 'x-backend': 'main_normal main_canary_with_overflow main_control_with_overflow', 'x-server': 'slack-www-hhvm-main-iad-mpwn', 'x-slack-shared-secret-outcome': 'no-match', 'x-edge-backend': 'envoy-www', 'timing-allow-origin': '*', 'x-slack-edge-shared-secret-outcome': 'no-match', 'connection': 'close'}, body: {"ok":true,"channel":"D09A0LFHK8R","ts":"1755897285.267649","message":{"user":"U099R6WTZ9S","type":"message","ts":"1755897285.267649","bot_id":"B099R6WTRU4","app_id":"A099LACAB2R","text":"_(part 2/2)_\n\nA common command structure is:\n    `mvn clean test -pl mqe-hob-mobile-tests -am -Dgroups=Your test case number or tag`\n\n    Alternatively, you can run from `TestNGSuiteConfig.xml` by right-clicking the file and selecting \"run TestNGSuiteConfig.xml\", providing the necessary test case ID or tag name in the include name section. ()\n\n6. *Appium Server and Android Emulator:\n*\nIf you're managing the Appium server and Android emulator locally, your test class (e.g., `SampleTest.java`) might include logic to start and stop them. For instance, in a `@BeforeSuite` method, you could start the Appium server, and within the test execution logic, launch the Android emulator if the environment is \"local\" and the driver is \"android\". ()\n\n────────────────────────────────────────\n*:books: Sources:*\n1. <https://paramount.atlassian.net/wiki/spaces/PLQA/pages/47713566>\n2. <https://paramount.atlassian.net/wiki/spaces/PLQA/pages/47711460](https://paramount.atlassian.net/wiki/spaces/PLQA/pages/47711460>\n3. <https://paramount.atlassian.net/wiki/spaces/PLQA/pages/47720266]>(<https://paramount.atlassian.net/wiki/spaces/PLQA/pages/47720266>\n4. <https://paramount.atlassian.net/wiki/spaces/PLQA/pages/47711460>\n5. <https://paramount.atlassian.net/wiki/spaces/PLQA/pages/47720266>","team":"T010QS7UQNA","bot_profile":{"id":"B099R6WTRU4","app_id":"A099LACAB2R","user_id":"U099R6WTZ9S","name":"AutoBot","icons":{"image_36":"https://a.slack-edge.com/80588/img/plugins/app/bot_36.png","image_48":"https://a.slack-edge.com/80588/img/plugins/app/bot_48.png","image_72":"https://a.slack-edge.com/80588/img/plugins/app/service_72.png"},"deleted":false,"updated":1754677948,"team_id":"T010QS7UQNA"},"thread_ts":"1755897271.924129","parent_user_id":"U01RMTFMALF","blocks":[{"type":"rich_text","block_id":"JjF","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"(part 2/2)","style":{"italic":true}},{"type":"text","text":"\n\nA common command structure is:\n    "},{"type":"text","text":"mvn clean test -pl mqe-hob-mobile-tests -am -Dgroups=Your test case number or tag","style":{"code":true}},{"type":"text","text":"\n\n    Alternatively, you can run from "},{"type":"text","text":"TestNGSuiteConfig.xml","style":{"code":true}},{"type":"text","text":" by right-clicking the file and selecting \"run TestNGSuiteConfig.xml\", providing the necessary test case ID or tag name in the include name section. ()\n\n6. *Appium Server and Android Emulator:\n*\nIf you're managing the Appium server and Android emulator locally, your test class (e.g., "},{"type":"text","text":"SampleTest.java","style":{"code":true}},{"type":"text","text":") might include logic to start and stop them. For instance, in a "},{"type":"text","text":"@BeforeSuite","style":{"code":true}},{"type":"text","text":" method, you could start the Appium server, and within the test execution logic, launch the Android emulator if the environment is \"local\" and the driver is \"android\". ()\n\n────────────────────────────────────────\n"},{"type":"emoji","name":"books","unicode":"1f4da","style":{"bold":true}},{"type":"text","text":" Sources:","style":{"bold":true}},{"type":"text","text":"\n1. "},{"type":"link","url":"https://paramount.atlassian.net/wiki/spaces/PLQA/pages/47713566"},{"type":"text","text":"\n2. "},{"type":"link","url":"https://paramount.atlassian.net/wiki/spaces/PLQA/pages/47711460](https://paramount.atlassian.net/wiki/spaces/PLQA/pages/47711460"},{"type":"text","text":"\n3. "},{"type":"link","url":"https://paramount.atlassian.net/wiki/spaces/PLQA/pages/47720266]"},{"type":"text","text":"("},{"type":"link","url":"https://paramount.atlassian.net/wiki/spaces/PLQA/pages/47720266"},{"type":"text","text":"\n4. "},{"type":"link","url":"https://paramount.atlassian.net/wiki/spaces/PLQA/pages/47711460"},{"type":"text","text":"\n5. "},{"type":"link","url":"https://paramount.atlassian.net/wiki/spaces/PLQA/pages/47720266"}]}]}]}}
2025-08-22 14:14:45,326 - __main__ - DEBUG - [main.py:603] - Cleaning up DM thread tracking...
2025-08-22 14:14:45,326 - utils - DEBUG - [utils.py:67] - Managing thread: D09A0LFHK8R:1755897271.924129, action: remove, user: U01RMTFMALF
2025-08-22 14:14:45,327 - utils - INFO - [utils.py:100] - Removed thread D09A0LFHK8R:1755897271.924129 from active tracking (remaining: 0)
2025-08-22 14:14:46,202 - slack_bolt.App - DEBUG - [client.py:235] - on_message invoked: (message: {"envelope_id":"b51023a2-caea-4159-b85c-4012f8a625c0","payload":{"token":"yq71khZBCyJF1Ri2hG5aNqr5","team_id":"T010QS7UQNA","enterprise_id":"ERV4P7NAD","context_team_id":null,"context_enterprise_id":"ERV4P7NAD","api_app_id":"A099LACAB2R","event":{"user":"U099R6WTZ9S","type":"message","ts":"1755897285.267649","bot_id":"B099R6WTRU4","app_id":"A099LACAB2R","text":"_(part 2\/2)_\n\nA common command structure is:\n    `mvn clean test -pl mqe-hob-mobile-tests -am -Dgroups=Your test case number or tag`\n\n    Alternatively, you can run from `TestNGSuiteConfig.xml` by right-clicking the file and selecting \"run TestNGSuiteConfig.xml\", providing the necessary test case ID or tag name in the include name section. ()\n\n6. *Appium Server and Android Emulator:\n*\nIf you're managing the Appium server and Android emulator locally, your test class (e.g., `SampleTest.java`) might include logic to start and stop them. For instance, in a `@BeforeSuite` method, you could start the Appium server, and within the test execution logic, launch the Android emulator if the environment is \"local\" and the driver is \"android\". ()\n\n\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\n*:books: Sources:*\n1. <https:\/\/paramount.atlassian.net\/wiki\/spaces\/PLQA\/pages\/47713566>\n2. <https:\/\/paramount.atlassian.net\/wiki\/spaces\/PLQA\/pages\/47711460](https:\/\/paramount.atlassian.net\/wiki\/spaces\/PLQA\/pages\/47711460>\n3. <https:\/\/paramount.atlassian.net\/wiki\/spaces\/PLQA\/pages\/47720266]>(<https:\/\/paramount.atlassian.net\/wiki\/spaces\/PLQA\/pages\/47720266>\n4. <https:\/\/paramount.atlassian.net\/wiki\/spaces\/PLQA\/pages\/47711460>\n5. <https:\/\/paramount.atlassian.net\/wiki\/spaces\/PLQA\/pages\/47720266>","team":"T010QS7UQNA","bot_profile":{"id":"B099R6WTRU4","deleted":false,"name":"AutoBot","updated":1754677948,"app_id":"A099LACAB2R","user_id":"U099R6WTZ9S","icons":{"image_36":"https:\/\/a.slack-edge.com\/80588\/img\/plugins\/app\/bot_36.png","image_48":"https:\/\/a.slack-edge.com\/80588\/img\/plugins\/app\/bot_48.png","image_72":"https:\/\/a.slack-edge.com\/80588\/img\/plugins\/app\/service_72.png"},"team_id":"T010QS7UQNA"},"thread_ts":"1755897271.924129","parent_user_id":"U01RMTFMALF","blocks":[{"type":"rich_text","block_id":"Pwqvv","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"(part 2\/2)","style":{"italic":true}},{"type":"text","text":"\n\nA common command structure is:\n    "},{"type":"text","text":"mvn clean test -pl mqe-hob-mobile-tests -am -Dgroups=Your test case number or tag","style":{"code":true}},{"type":"text","text":"\n\n    Alternatively, you can run from "},{"type":"text","text":"TestNGSuiteConfig.xml","style":{"code":true}},{"type":"text","text":" by right-clicking the file and selecting \"run TestNGSuiteConfig.xml\", providing the necessary test case ID or tag name in the include name section. ()\n\n6. *Appium Server and Android Emulator:\n*\nIf you're managing the Appium server and Android emulator locally, your test class (e.g., "},{"type":"text","text":"SampleTest.java","style":{"code":true}},{"type":"text","text":") might include logic to start and stop them. For instance, in a "},{"type":"text","text":"@BeforeSuite","style":{"code":true}},{"type":"text","text":" method, you could start the Appium server, and within the test execution logic, launch the Android emulator if the environment is \"local\" and the driver is \"android\". ()\n\n\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\n"},{"type":"emoji","name":"books","unicode":"1f4da","style":{"bold":true}},{"type":"text","text":" Sources:","style":{"bold":true}},{"type":"text","text":"\n1. "},{"type":"link","url":"https:\/\/paramount.atlassian.net\/wiki\/spaces\/PLQA\/pages\/47713566"},{"type":"text","text":"\n2. "},{"type":"link","url":"https:\/\/paramount.atlassian.net\/wiki\/spaces\/PLQA\/pages\/47711460](https:\/\/paramount.atlassian.net\/wiki\/spaces\/PLQA\/pages\/47711460"},{"type":"text","text":"\n3. "},{"type":"link","url":"https:\/\/paramount.atlassian.net\/wiki\/spaces\/PLQA\/pages\/47720266]"},{"type":"text","text":"("},{"type":"link","url":"https:\/\/paramount.atlassian.net\/wiki\/spaces\/PLQA\/pages\/47720266"},{"type":"text","text":"\n4. "},{"type":"link","url":"https:\/\/paramount.atlassian.net\/wiki\/spaces\/PLQA\/pages\/47711460"},{"type":"text","text":"\n5. "},{"type":"link","url":"https:\/\/paramount.atlassian.net\/wiki\/spaces\/PLQA\/pages\/47720266"}]}]}],"channel":"D09A0LFHK8R","event_ts":"1755897285.267649","channel_type":"im"},"type":"event_callback","event_id":"Ev09BNU7UVS6","event_time":1755897285,"authorizations":[{"enterprise_id":"ERV4P7NAD","team_id":"T010QS7UQNA","user_id":"U099R6WTZ9S","is_bot":true,"is_enterprise_install":false}],"is_ext_shared_channel":false,"event_context":"4-eyJldCI6Im1lc3NhZ2UiLCJ0aWQiOiJUMDEwUVM3VVFOQSIsImFpZCI6IkEwOTlMQUNBQjJSIiwiY2lkIjoiRDA5QTBMRkhLOFIifQ"},"type":"events_api","accepts_response_payload":false,"retry_attempt":0,"retry_reason":""})
2025-08-22 14:14:46,203 - slack_bolt.App - DEBUG - [client.py:99] - A new message enqueued (current queue size: 1)
2025-08-22 14:14:46,203 - slack_bolt.App - DEBUG - [client.py:105] - A message dequeued (current queue size: 0)
2025-08-22 14:14:46,204 - slack_bolt.App - DEBUG - [client.py:125] - Message processing started (type: events_api, envelope_id: b51023a2-caea-4159-b85c-4012f8a625c0)
2025-08-22 14:14:46,204 - slack_bolt.App - DEBUG - [app.py:476] - Applying slack_bolt.middleware.ssl_check.ssl_check.SslCheck
2025-08-22 14:14:46,205 - slack_bolt.App - DEBUG - [app.py:476] - Applying slack_bolt.middleware.request_verification.request_verification.RequestVerification
2025-08-22 14:14:46,205 - slack_bolt.App - DEBUG - [app.py:476] - Applying slack_bolt.middleware.authorization.single_team_authorization.SingleTeamAuthorization
2025-08-22 14:14:46,205 - slack_bolt.App - DEBUG - [app.py:476] - Applying slack_bolt.middleware.ignoring_self_events.ignoring_self_events.IgnoringSelfEvents
2025-08-22 14:14:46,205 - slack_bolt.IgnoringSelfEvents - DEBUG - [ignoring_self_events.py:60] - Skipped self event: {'user': 'U099R6WTZ9S', 'type': 'message', 'ts': '1755897285.267649', 'bot_id': 'B099R6WTRU4', 'app_id': 'A099LACAB2R', 'text': '_(part 2/2)_\n\nA common command structure is:\n    `mvn clean test -pl mqe-hob-mobile-tests -am -Dgroups=Your test case number or tag`\n\n    Alternatively, you can run from `TestNGSuiteConfig.xml` by right-clicking the file and selecting "run TestNGSuiteConfig.xml", providing the necessary test case ID or tag name in the include name section. ()\n\n6. *Appium Server and Android Emulator:\n*\nIf you\'re managing the Appium server and Android emulator locally, your test class (e.g., `SampleTest.java`) might include logic to start and stop them. For instance, in a `@BeforeSuite` method, you could start the Appium server, and within the test execution logic, launch the Android emulator if the environment is "local" and the driver is "android". ()\n\n────────────────────────────────────────\n*:books: Sources:*\n1. <https://paramount.atlassian.net/wiki/spaces/PLQA/pages/47713566>\n2. <https://paramount.atlassian.net/wiki/spaces/PLQA/pages/47711460](https://paramount.atlassian.net/wiki/spaces/PLQA/pages/47711460>\n3. <https://paramount.atlassian.net/wiki/spaces/PLQA/pages/47720266]>(<https://paramount.atlassian.net/wiki/spaces/PLQA/pages/47720266>\n4. <https://paramount.atlassian.net/wiki/spaces/PLQA/pages/47711460>\n5. <https://paramount.atlassian.net/wiki/spaces/PLQA/pages/47720266>', 'team': 'T010QS7UQNA', 'bot_profile': {'id': 'B099R6WTRU4', 'deleted': False, 'name': 'AutoBot', 'updated': 1754677948, 'app_id': 'A099LACAB2R', 'user_id': 'U099R6WTZ9S', 'icons': {'image_36': 'https://a.slack-edge.com/80588/img/plugins/app/bot_36.png', 'image_48': 'https://a.slack-edge.com/80588/img/plugins/app/bot_48.png', 'image_72': 'https://a.slack-edge.com/80588/img/plugins/app/service_72.png'}, 'team_id': 'T010QS7UQNA'}, 'thread_ts': '1755897271.924129', 'parent_user_id': 'U01RMTFMALF', 'blocks': [{'type': 'rich_text', 'block_id': 'Pwqvv', 'elements': [{'type': 'rich_text_section', 'elements': [{'type': 'text', 'text': '(part 2/2)', 'style': {'italic': True}}, {'type': 'text', 'text': '\n\nA common command structure is:\n    '}, {'type': 'text', 'text': 'mvn clean test -pl mqe-hob-mobile-tests -am -Dgroups=Your test case number or tag', 'style': {'code': True}}, {'type': 'text', 'text': '\n\n    Alternatively, you can run from '}, {'type': 'text', 'text': 'TestNGSuiteConfig.xml', 'style': {'code': True}}, {'type': 'text', 'text': ' by right-clicking the file and selecting "run TestNGSuiteConfig.xml", providing the necessary test case ID or tag name in the include name section. ()\n\n6. *Appium Server and Android Emulator:\n*\nIf you\'re managing the Appium server and Android emulator locally, your test class (e.g., '}, {'type': 'text', 'text': 'SampleTest.java', 'style': {'code': True}}, {'type': 'text', 'text': ') might include logic to start and stop them. For instance, in a '}, {'type': 'text', 'text': '@BeforeSuite', 'style': {'code': True}}, {'type': 'text', 'text': ' method, you could start the Appium server, and within the test execution logic, launch the Android emulator if the environment is "local" and the driver is "android". ()\n\n────────────────────────────────────────\n'}, {'type': 'emoji', 'name': 'books', 'unicode': '1f4da', 'style': {'bold': True}}, {'type': 'text', 'text': ' Sources:', 'style': {'bold': True}}, {'type': 'text', 'text': '\n1. '}, {'type': 'link', 'url': 'https://paramount.atlassian.net/wiki/spaces/PLQA/pages/47713566'}, {'type': 'text', 'text': '\n2. '}, {'type': 'link', 'url': 'https://paramount.atlassian.net/wiki/spaces/PLQA/pages/47711460](https://paramount.atlassian.net/wiki/spaces/PLQA/pages/47711460'}, {'type': 'text', 'text': '\n3. '}, {'type': 'link', 'url': 'https://paramount.atlassian.net/wiki/spaces/PLQA/pages/47720266]'}, {'type': 'text', 'text': '('}, {'type': 'link', 'url': 'https://paramount.atlassian.net/wiki/spaces/PLQA/pages/47720266'}, {'type': 'text', 'text': '\n4. '}, {'type': 'link', 'url': 'https://paramount.atlassian.net/wiki/spaces/PLQA/pages/47711460'}, {'type': 'text', 'text': '\n5. '}, {'type': 'link', 'url': 'https://paramount.atlassian.net/wiki/spaces/PLQA/pages/47720266'}]}]}], 'channel': 'D09A0LFHK8R', 'event_ts': '1755897285.267649', 'channel_type': 'im'}
2025-08-22 14:14:46,205 - slack_bolt.App - DEBUG - [client.py:200] - Sending a message (session id: 0355322f-cce8-4559-bd72-7d4e0cf16a3d, message: {"envelope_id": "b51023a2-caea-4159-b85c-4012f8a625c0"})
2025-08-22 14:14:46,206 - slack_bolt.App - DEBUG - [internals.py:41] - Response time: 1 milliseconds
2025-08-22 14:14:46,206 - slack_bolt.App - DEBUG - [client.py:150] - Message processing completed (type: events_api, envelope_id: b51023a2-caea-4159-b85c-4012f8a625c0)
2025-08-22 14:14:46,387 - slack_bolt.App - DEBUG - [client.py:235] - on_message invoked: (message: {"envelope_id":"4c052332-4c16-42b3-99e8-9ca1dc47348d","payload":{"token":"yq71khZBCyJF1Ri2hG5aNqr5","team_id":"T010QS7UQNA","enterprise_id":"ERV4P7NAD","context_team_id":null,"context_enterprise_id":"ERV4P7NAD","api_app_id":"A099LACAB2R","event":{"user":"U099R6WTZ9S","type":"message","ts":"1755897284.871969","bot_id":"B099R6WTRU4","app_id":"A099LACAB2R","text":"*Your Question:*\n&gt; How can i run an automated test on a local Android phone? *Answer:*\nTo run an automated test on a local Android phone, you'll need to configure your test environment and execute the tests, typically using Maven. Here's a breakdown of the steps and parameters involved, based on the provided documents:\n\n1. *Ensure Android Home is set (for Emulators):\n*\nIf you are using an Android Emulator, make sure your Run Configuration includes the `$ANDROID_HOME` environment variable and that it's part of your system's path. ()\n\n2. *Configure Test Parameters:\n*\nYou'll need to set various parameters to specify that you're running on a local Android device. These can often be passed as arguments or configured in a properties file. *\n*Driver:* `android` (e.g., `-Ddriver=android`)\n    *\n*Platform Name:* `Android` (e.g., `-DplatformName=Android`)\n    *\n*Environment:* `local` (e.g., `-Denvironment=local`)\n    *\n*App Path:* Provide the local path to your application's `.apk` file (e.g., `-Dapp=\"\/pathToPackage\/mobile-8.0.44-210804410-3.5.25-paramountPlus-playStore-release.apk\"`). *\n*Device ID (for Real Device):* Set the `udid` parameter if running on a real mobile device. You can get your device's ID by typing `adb devices` in your terminal. This might also be referred to as `DebugDeviceID`. (, [<https:\/\/paramount.atlassian.net\/wiki\/spaces\/PLQA\/pages\/47720266>](<https:\/\/paramount.atlassian.net\/wiki\/spaces\/PLQA\/pages\/47720266>))\n    *\n*Bundle ID:* You can override the default bundle ID if needed (e.g., `-DbundleId=set to override default setting`). *\n*Platform Version:* Specify the Android version (e.g., `-DplatformVersion=11.0`). *\n*Device Name:* You can specify a device name (e.g., `-DdeviceName=\"Google Pixel 2XL\"`). *\n*Headless Mode:* Set to `false` for local runs (e.g., `-Dheadless=false`). *\n*Mobile Device Category:* You can specify `PHONE` or `TABLET` (e.g., `MobileDeviceCategory=PHONE`). *\n*Device Start Orientation:* Set to `PORTRAIT` or `LANDSCAPE` (e.g., `DeiceStartOrientation=PORTRAIT`). *\n*App Build Type:* `DEBUG` is a common value (e.g., `AppBuildType=DEBUG`). (, [<https:\/\/paramount.atlassian.net\/wiki\/spaces\/PLQA\/pages\/47720266>](<https:\/\/paramount.atlassian.net\/wiki\/spaces\/PLQA\/pages\/47720266>))\n\n3. *Update `config.properties`:\n*\nIn your `resources\/config.properties` file (within the `mqe-hob-mobile-tests` module), you may need to add or confirm properties such as `Platform=ANDROID`, `Locale=en-us`, and `MobileDeviceCategory=PHONE`. ()\n\n4. *Connect to VPN and Run Synergy Server:\n*\n*   Connect to VPN: `<http:\/\/connect.cbsinteractive.com\/VPNFT|connect.cbsinteractive.com\/VPNFT>`. *\nDownload the latest version of Synergy server and run the `.jar` file (Websocket). ()\n\n5. *Execute the Test:\n*\nYou can run the tests from your terminal using Maven commands.\n\n_(message continued in thread...)_","team":"T010QS7UQNA","bot_profile":{"id":"B099R6WTRU4","deleted":false,"name":"AutoBot","updated":1754677948,"app_id":"A099LACAB2R","user_id":"U099R6WTZ9S","icons":{"image_36":"https:\/\/a.slack-edge.com\/80588\/img\/plugins\/app\/bot_36.png","image_48":"https:\/\/a.slack-edge.com\/80588\/img\/plugins\/app\/bot_48.png","image_72":"https:\/\/a.slack-edge.com\/80588\/img\/plugins\/app\/service_72.png"},"team_id":"T010QS7UQNA"},"thread_ts":"1755897271.924129","parent_user_id":"U01RMTFMALF","blocks":[{"type":"rich_text","block_id":"7c=","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Your Question:","style":{"bold":true}}]},{"type":"rich_text_quote","elements":[{"type":"text","text":"How can i run an automated test on a local Android phone? "},{"type":"text","text":"Answer:","style":{"bold":true}}]},{"type":"rich_text_section","elements":[{"type":"text","text":"To run an automated test on a local Android phone, you'll need to configure your test environment and execute the tests, typically using Maven. Here's a breakdown of the steps and parameters involved, based on the provided documents:\n\n1. *Ensure Android Home is set (for Emulators):\n*\nIf you are using an Android Emulator, make sure your Run Configuration includes the "},{"type":"text","text":"$ANDROID_HOME","style":{"code":true}},{"type":"text","text":" environment variable and that it's part of your system's path. ()\n\n2. *Configure Test Parameters:\n*\nYou'll need to set various parameters to specify that you're running on a local Android device. These can often be passed as arguments or configured in a properties file. *\n"},{"type":"text","text":"Driver:","style":{"bold":true}},{"type":"text","text":" "},{"type":"text","text":"android","style":{"code":true}},{"type":"text","text":" (e.g., "},{"type":"text","text":"-Ddriver=android","style":{"code":true}},{"type":"text","text":")\n    *\n"},{"type":"text","text":"Platform Name:","style":{"bold":true}},{"type":"text","text":" "},{"type":"text","text":"Android","style":{"code":true}},{"type":"text","text":" (e.g., "},{"type":"text","text":"-DplatformName=Android","style":{"code":true}},{"type":"text","text":")\n    *\n"},{"type":"text","text":"Environment:","style":{"bold":true}},{"type":"text","text":" "},{"type":"text","text":"local","style":{"code":true}},{"type":"text","text":" (e.g., "},{"type":"text","text":"-Denvironment=local","style":{"code":true}},{"type":"text","text":")\n    *\n"},{"type":"text","text":"App Path:","style":{"bold":true}},{"type":"text","text":" Provide the local path to your application's "},{"type":"text","text":".apk","style":{"code":true}},{"type":"text","text":" file (e.g., "},{"type":"text","text":"-Dapp=\"\/pathToPackage\/mobile-8.0.44-210804410-3.5.25-paramountPlus-playStore-release.apk\"","style":{"code":true}},{"type":"text","text":"). *\n"},{"type":"text","text":"Device ID (for Real Device):","style":{"bold":true}},{"type":"text","text":" Set the "},{"type":"text","text":"udid","style":{"code":true}},{"type":"text","text":" parameter if running on a real mobile device. You can get your device's ID by typing "},{"type":"text","text":"adb devices","style":{"code":true}},{"type":"text","text":" in your terminal. This might also be referred to as "},{"type":"text","text":"DebugDeviceID","style":{"code":true}},{"type":"text","text":". (, ["},{"type":"link","url":"https:\/\/paramount.atlassian.net\/wiki\/spaces\/PLQA\/pages\/47720266"},{"type":"text","text":"]("},{"type":"link","url":"https:\/\/paramount.atlassian.net\/wiki\/spaces\/PLQA\/pages\/47720266"},{"type":"text","text":"))\n    *\n"},{"type":"text","text":"Bundle ID:","style":{"bold":true}},{"type":"text","text":" You can override the default bundle ID if needed (e.g., "},{"type":"text","text":"-DbundleId=set to override default setting","style":{"code":true}},{"type":"text","text":"). *\n"},{"type":"text","text":"Platform Version:","style":{"bold":true}},{"type":"text","text":" Specify the Android version (e.g., "},{"type":"text","text":"-DplatformVersion=11.0","style":{"code":true}},{"type":"text","text":"). *\n"},{"type":"text","text":"Device Name:","style":{"bold":true}},{"type":"text","text":" You can specify a device name (e.g., "},{"type":"text","text":"-DdeviceName=\"Google Pixel 2XL\"","style":{"code":true}},{"type":"text","text":"). *\n"},{"type":"text","text":"Headless Mode:","style":{"bold":true}},{"type":"text","text":" Set to "},{"type":"text","text":"false","style":{"code":true}},{"type":"text","text":" for local runs (e.g., "},{"type":"text","text":"-Dheadless=false","style":{"code":true}},{"type":"text","text":"). *\n"},{"type":"text","text":"Mobile Device Category:","style":{"bold":true}},{"type":"text","text":" You can specify "},{"type":"text","text":"PHONE","style":{"code":true}},{"type":"text","text":" or "},{"type":"text","text":"TABLET","style":{"code":true}},{"type":"text","text":" (e.g., "},{"type":"text","text":"MobileDeviceCategory=PHONE","style":{"code":true}},{"type":"text","text":"). *\n"},{"type":"text","text":"Device Start Orientation:","style":{"bold":true}},{"type":"text","text":" Set to "},{"type":"text","text":"PORTRAIT","style":{"code":true}},{"type":"text","text":" or "},{"type":"text","text":"LANDSCAPE","style":{"code":true}},{"type":"text","text":" (e.g., "},{"type":"text","text":"DeiceStartOrientation=PORTRAIT","style":{"code":true}},{"type":"text","text":"). *\n"},{"type":"text","text":"App Build Type:","style":{"bold":true}},{"type":"text","text":" "},{"type":"text","text":"DEBUG","style":{"code":true}},{"type":"text","text":" is a common value (e.g., "},{"type":"text","text":"AppBuildType=DEBUG","style":{"code":true}},{"type":"text","text":"). (, ["},{"type":"link","url":"https:\/\/paramount.atlassian.net\/wiki\/spaces\/PLQA\/pages\/47720266"},{"type":"text","text":"]("},{"type":"link","url":"https:\/\/paramount.atlassian.net\/wiki\/spaces\/PLQA\/pages\/47720266"},{"type":"text","text":"))\n\n3. *Update "},{"type":"text","text":"config.properties","style":{"code":true}},{"type":"text","text":":\n*\nIn your "},{"type":"text","text":"resources\/config.properties","style":{"code":true}},{"type":"text","text":" file (within the "},{"type":"text","text":"mqe-hob-mobile-tests","style":{"code":true}},{"type":"text","text":" module), you may need to add or confirm properties such as "},{"type":"text","text":"Platform=ANDROID","style":{"code":true}},{"type":"text","text":", "},{"type":"text","text":"Locale=en-us","style":{"code":true}},{"type":"text","text":", and "},{"type":"text","text":"MobileDeviceCategory=PHONE","style":{"code":true}},{"type":"text","text":". ()\n\n4. *Connect to VPN and Run Synergy Server:\n*\n*   Connect to VPN: "},{"type":"link","url":"http:\/\/connect.cbsinteractive.com\/VPNFT","text":"connect.cbsinteractive.com\/VPNFT","style":{"code":true}},{"type":"text","text":". *\nDownload the latest version of Synergy server and run the "},{"type":"text","text":".jar","style":{"code":true}},{"type":"text","text":" file (Websocket). ()\n\n5. *Execute the Test:\n*\nYou can run the tests from your terminal using Maven commands.\n\n"},{"type":"text","text":"(message continued in thread...)","style":{"italic":true}}]}]}],"channel":"D09A0LFHK8R","event_ts":"1755897284.871969","channel_type":"im"},"type":"event_callback","event_id":"Ev09CGK9AQEL","event_time":1755897284,"authorizations":[{"enterprise_id":"ERV4P7NAD","team_id":"T010QS7UQNA","user_id":"U099R6WTZ9S","is_bot":true,"is_enterprise_install":false}],"is_ext_shared_channel":false,"event_context":"4-eyJldCI6Im1lc3NhZ2UiLCJ0aWQiOiJUMDEwUVM3VVFOQSIsImFpZCI6IkEwOTlMQUNBQjJSIiwiY2lkIjoiRDA5QTBMRkhLOFIifQ"},"type":"events_api","accepts_response_payload":false,"retry_attempt":0,"retry_reason":""})
2025-08-22 14:14:46,389 - slack_bolt.App - DEBUG - [client.py:99] - A new message enqueued (current queue size: 1)
2025-08-22 14:14:46,389 - slack_bolt.App - DEBUG - [client.py:105] - A message dequeued (current queue size: 0)
2025-08-22 14:14:46,389 - slack_bolt.App - DEBUG - [client.py:125] - Message processing started (type: events_api, envelope_id: 4c052332-4c16-42b3-99e8-9ca1dc47348d)
2025-08-22 14:14:46,390 - slack_bolt.App - DEBUG - [app.py:476] - Applying slack_bolt.middleware.ssl_check.ssl_check.SslCheck
2025-08-22 14:14:46,390 - slack_bolt.App - DEBUG - [app.py:476] - Applying slack_bolt.middleware.request_verification.request_verification.RequestVerification
2025-08-22 14:14:46,390 - slack_bolt.App - DEBUG - [app.py:476] - Applying slack_bolt.middleware.authorization.single_team_authorization.SingleTeamAuthorization
2025-08-22 14:14:46,390 - slack_bolt.App - DEBUG - [app.py:476] - Applying slack_bolt.middleware.ignoring_self_events.ignoring_self_events.IgnoringSelfEvents
2025-08-22 14:14:46,390 - slack_bolt.IgnoringSelfEvents - DEBUG - [ignoring_self_events.py:60] - Skipped self event: {'user': 'U099R6WTZ9S', 'type': 'message', 'ts': '1755897284.871969', 'bot_id': 'B099R6WTRU4', 'app_id': 'A099LACAB2R', 'text': '*Your Question:*\n&gt; How can i run an automated test on a local Android phone? *Answer:*\nTo run an automated test on a local Android phone, you\'ll need to configure your test environment and execute the tests, typically using Maven. Here\'s a breakdown of the steps and parameters involved, based on the provided documents:\n\n1. *Ensure Android Home is set (for Emulators):\n*\nIf you are using an Android Emulator, make sure your Run Configuration includes the `$ANDROID_HOME` environment variable and that it\'s part of your system\'s path. ()\n\n2. *Configure Test Parameters:\n*\nYou\'ll need to set various parameters to specify that you\'re running on a local Android device. These can often be passed as arguments or configured in a properties file. *\n*Driver:* `android` (e.g., `-Ddriver=android`)\n    *\n*Platform Name:* `Android` (e.g., `-DplatformName=Android`)\n    *\n*Environment:* `local` (e.g., `-Denvironment=local`)\n    *\n*App Path:* Provide the local path to your application\'s `.apk` file (e.g., `-Dapp="/pathToPackage/mobile-8.0.44-210804410-3.5.25-paramountPlus-playStore-release.apk"`). *\n*Device ID (for Real Device):* Set the `udid` parameter if running on a real mobile device. You can get your device\'s ID by typing `adb devices` in your terminal. This might also be referred to as `DebugDeviceID`. (, [<https://paramount.atlassian.net/wiki/spaces/PLQA/pages/47720266>](<https://paramount.atlassian.net/wiki/spaces/PLQA/pages/47720266>))\n    *\n*Bundle ID:* You can override the default bundle ID if needed (e.g., `-DbundleId=set to override default setting`). *\n*Platform Version:* Specify the Android version (e.g., `-DplatformVersion=11.0`). *\n*Device Name:* You can specify a device name (e.g., `-DdeviceName="Google Pixel 2XL"`). *\n*Headless Mode:* Set to `false` for local runs (e.g., `-Dheadless=false`). *\n*Mobile Device Category:* You can specify `PHONE` or `TABLET` (e.g., `MobileDeviceCategory=PHONE`). *\n*Device Start Orientation:* Set to `PORTRAIT` or `LANDSCAPE` (e.g., `DeiceStartOrientation=PORTRAIT`). *\n*App Build Type:* `DEBUG` is a common value (e.g., `AppBuildType=DEBUG`). (, [<https://paramount.atlassian.net/wiki/spaces/PLQA/pages/47720266>](<https://paramount.atlassian.net/wiki/spaces/PLQA/pages/47720266>))\n\n3. *Update `config.properties`:\n*\nIn your `resources/config.properties` file (within the `mqe-hob-mobile-tests` module), you may need to add or confirm properties such as `Platform=ANDROID`, `Locale=en-us`, and `MobileDeviceCategory=PHONE`. ()\n\n4. *Connect to VPN and Run Synergy Server:\n*\n*   Connect to VPN: `<http://connect.cbsinteractive.com/VPNFT|connect.cbsinteractive.com/VPNFT>`. *\nDownload the latest version of Synergy server and run the `.jar` file (Websocket). ()\n\n5. *Execute the Test:\n*\nYou can run the tests from your terminal using Maven commands.\n\n_(message continued in thread...)_', 'team': 'T010QS7UQNA', 'bot_profile': {'id': 'B099R6WTRU4', 'deleted': False, 'name': 'AutoBot', 'updated': 1754677948, 'app_id': 'A099LACAB2R', 'user_id': 'U099R6WTZ9S', 'icons': {'image_36': 'https://a.slack-edge.com/80588/img/plugins/app/bot_36.png', 'image_48': 'https://a.slack-edge.com/80588/img/plugins/app/bot_48.png', 'image_72': 'https://a.slack-edge.com/80588/img/plugins/app/service_72.png'}, 'team_id': 'T010QS7UQNA'}, 'thread_ts': '1755897271.924129', 'parent_user_id': 'U01RMTFMALF', 'blocks': [{'type': 'rich_text', 'block_id': '7c=', 'elements': [{'type': 'rich_text_section', 'elements': [{'type': 'text', 'text': 'Your Question:', 'style': {'bold': True}}]}, {'type': 'rich_text_quote', 'elements': [{'type': 'text', 'text': 'How can i run an automated test on a local Android phone? '}, {'type': 'text', 'text': 'Answer:', 'style': {'bold': True}}]}, {'type': 'rich_text_section', 'elements': [{'type': 'text', 'text': "To run an automated test on a local Android phone, you'll need to configure your test environment and execute the tests, typically using Maven. Here's a breakdown of the steps and parameters involved, based on the provided documents:\n\n1. *Ensure Android Home is set (for Emulators):\n*\nIf you are using an Android Emulator, make sure your Run Configuration includes the "}, {'type': 'text', 'text': '$ANDROID_HOME', 'style': {'code': True}}, {'type': 'text', 'text': " environment variable and that it's part of your system's path. ()\n\n2. *Configure Test Parameters:\n*\nYou'll need to set various parameters to specify that you're running on a local Android device. These can often be passed as arguments or configured in a properties file. *\n"}, {'type': 'text', 'text': 'Driver:', 'style': {'bold': True}}, {'type': 'text', 'text': ' '}, {'type': 'text', 'text': 'android', 'style': {'code': True}}, {'type': 'text', 'text': ' (e.g., '}, {'type': 'text', 'text': '-Ddriver=android', 'style': {'code': True}}, {'type': 'text', 'text': ')\n    *\n'}, {'type': 'text', 'text': 'Platform Name:', 'style': {'bold': True}}, {'type': 'text', 'text': ' '}, {'type': 'text', 'text': 'Android', 'style': {'code': True}}, {'type': 'text', 'text': ' (e.g., '}, {'type': 'text', 'text': '-DplatformName=Android', 'style': {'code': True}}, {'type': 'text', 'text': ')\n    *\n'}, {'type': 'text', 'text': 'Environment:', 'style': {'bold': True}}, {'type': 'text', 'text': ' '}, {'type': 'text', 'text': 'local', 'style': {'code': True}}, {'type': 'text', 'text': ' (e.g., '}, {'type': 'text', 'text': '-Denvironment=local', 'style': {'code': True}}, {'type': 'text', 'text': ')\n    *\n'}, {'type': 'text', 'text': 'App Path:', 'style': {'bold': True}}, {'type': 'text', 'text': " Provide the local path to your application's "}, {'type': 'text', 'text': '.apk', 'style': {'code': True}}, {'type': 'text', 'text': ' file (e.g., '}, {'type': 'text', 'text': '-Dapp="/pathToPackage/mobile-8.0.44-210804410-3.5.25-paramountPlus-playStore-release.apk"', 'style': {'code': True}}, {'type': 'text', 'text': '). *\n'}, {'type': 'text', 'text': 'Device ID (for Real Device):', 'style': {'bold': True}}, {'type': 'text', 'text': ' Set the '}, {'type': 'text', 'text': 'udid', 'style': {'code': True}}, {'type': 'text', 'text': " parameter if running on a real mobile device. You can get your device's ID by typing "}, {'type': 'text', 'text': 'adb devices', 'style': {'code': True}}, {'type': 'text', 'text': ' in your terminal. This might also be referred to as '}, {'type': 'text', 'text': 'DebugDeviceID', 'style': {'code': True}}, {'type': 'text', 'text': '. (, ['}, {'type': 'link', 'url': 'https://paramount.atlassian.net/wiki/spaces/PLQA/pages/47720266'}, {'type': 'text', 'text': ']('}, {'type': 'link', 'url': 'https://paramount.atlassian.net/wiki/spaces/PLQA/pages/47720266'}, {'type': 'text', 'text': '))\n    *\n'}, {'type': 'text', 'text': 'Bundle ID:', 'style': {'bold': True}}, {'type': 'text', 'text': ' You can override the default bundle ID if needed (e.g., '}, {'type': 'text', 'text': '-DbundleId=set to override default setting', 'style': {'code': True}}, {'type': 'text', 'text': '). *\n'}, {'type': 'text', 'text': 'Platform Version:', 'style': {'bold': True}}, {'type': 'text', 'text': ' Specify the Android version (e.g., '}, {'type': 'text', 'text': '-DplatformVersion=11.0', 'style': {'code': True}}, {'type': 'text', 'text': '). *\n'}, {'type': 'text', 'text': 'Device Name:', 'style': {'bold': True}}, {'type': 'text', 'text': ' You can specify a device name (e.g., '}, {'type': 'text', 'text': '-DdeviceName="Google Pixel 2XL"', 'style': {'code': True}}, {'type': 'text', 'text': '). *\n'}, {'type': 'text', 'text': 'Headless Mode:', 'style': {'bold': True}}, {'type': 'text', 'text': ' Set to '}, {'type': 'text', 'text': 'false', 'style': {'code': True}}, {'type': 'text', 'text': ' for local runs (e.g., '}, {'type': 'text', 'text': '-Dheadless=false', 'style': {'code': True}}, {'type': 'text', 'text': '). *\n'}, {'type': 'text', 'text': 'Mobile Device Category:', 'style': {'bold': True}}, {'type': 'text', 'text': ' You can specify '}, {'type': 'text', 'text': 'PHONE', 'style': {'code': True}}, {'type': 'text', 'text': ' or '}, {'type': 'text', 'text': 'TABLET', 'style': {'code': True}}, {'type': 'text', 'text': ' (e.g., '}, {'type': 'text', 'text': 'MobileDeviceCategory=PHONE', 'style': {'code': True}}, {'type': 'text', 'text': '). *\n'}, {'type': 'text', 'text': 'Device Start Orientation:', 'style': {'bold': True}}, {'type': 'text', 'text': ' Set to '}, {'type': 'text', 'text': 'PORTRAIT', 'style': {'code': True}}, {'type': 'text', 'text': ' or '}, {'type': 'text', 'text': 'LANDSCAPE', 'style': {'code': True}}, {'type': 'text', 'text': ' (e.g., '}, {'type': 'text', 'text': 'DeiceStartOrientation=PORTRAIT', 'style': {'code': True}}, {'type': 'text', 'text': '). *\n'}, {'type': 'text', 'text': 'App Build Type:', 'style': {'bold': True}}, {'type': 'text', 'text': ' '}, {'type': 'text', 'text': 'DEBUG', 'style': {'code': True}}, {'type': 'text', 'text': ' is a common value (e.g., '}, {'type': 'text', 'text': 'AppBuildType=DEBUG', 'style': {'code': True}}, {'type': 'text', 'text': '). (, ['}, {'type': 'link', 'url': 'https://paramount.atlassian.net/wiki/spaces/PLQA/pages/47720266'}, {'type': 'text', 'text': ']('}, {'type': 'link', 'url': 'https://paramount.atlassian.net/wiki/spaces/PLQA/pages/47720266'}, {'type': 'text', 'text': '))\n\n3. *Update '}, {'type': 'text', 'text': 'config.properties', 'style': {'code': True}}, {'type': 'text', 'text': ':\n*\nIn your '}, {'type': 'text', 'text': 'resources/config.properties', 'style': {'code': True}}, {'type': 'text', 'text': ' file (within the '}, {'type': 'text', 'text': 'mqe-hob-mobile-tests', 'style': {'code': True}}, {'type': 'text', 'text': ' module), you may need to add or confirm properties such as '}, {'type': 'text', 'text': 'Platform=ANDROID', 'style': {'code': True}}, {'type': 'text', 'text': ', '}, {'type': 'text', 'text': 'Locale=en-us', 'style': {'code': True}}, {'type': 'text', 'text': ', and '}, {'type': 'text', 'text': 'MobileDeviceCategory=PHONE', 'style': {'code': True}}, {'type': 'text', 'text': '. ()\n\n4. *Connect to VPN and Run Synergy Server:\n*\n*   Connect to VPN: '}, {'type': 'link', 'url': 'http://connect.cbsinteractive.com/VPNFT', 'text': 'connect.cbsinteractive.com/VPNFT', 'style': {'code': True}}, {'type': 'text', 'text': '. *\nDownload the latest version of Synergy server and run the '}, {'type': 'text', 'text': '.jar', 'style': {'code': True}}, {'type': 'text', 'text': ' file (Websocket). ()\n\n5. *Execute the Test:\n*\nYou can run the tests from your terminal using Maven commands.\n\n'}, {'type': 'text', 'text': '(message continued in thread...)', 'style': {'italic': True}}]}]}], 'channel': 'D09A0LFHK8R', 'event_ts': '1755897284.871969', 'channel_type': 'im'}
2025-08-22 14:14:46,391 - slack_bolt.App - DEBUG - [client.py:200] - Sending a message (session id: 0355322f-cce8-4559-bd72-7d4e0cf16a3d, message: {"envelope_id": "4c052332-4c16-42b3-99e8-9ca1dc47348d"})
2025-08-22 14:14:46,391 - slack_bolt.App - DEBUG - [internals.py:41] - Response time: 1 milliseconds
2025-08-22 14:14:46,391 - slack_bolt.App - DEBUG - [client.py:150] - Message processing completed (type: events_api, envelope_id: 4c052332-4c16-42b3-99e8-9ca1dc47348d)
2025-08-22 14:18:10,987 - __main__ - INFO - [main.py:43] - Loading application configuration...
2025-08-22 14:18:10,987 - __main__ - INFO - [main.py:45] - Configuration loaded successfully
2025-08-22 14:18:10,987 - __main__ - INFO - [main.py:48] - Initializing security components...
2025-08-22 14:18:10,987 - __main__ - DEBUG - [main.py:50] - Slack validator initialized
2025-08-22 14:18:10,987 - security.content_filter - INFO - [content_filter.py:39] - Content filter initialized with 11 patterns
2025-08-22 14:18:10,987 - __main__ - DEBUG - [main.py:53] - Content filter initialized
2025-08-22 14:18:10,987 - auth.admin_manager - INFO - [admin_manager.py:27] - Admin manager initialized with 2 admin users
2025-08-22 14:18:10,987 - __main__ - DEBUG - [main.py:56] - Admin manager initialized
2025-08-22 14:18:10,987 - auth.email_whitelist - INFO - [email_whitelist.py:28] - Email whitelist initialized with 1 whitelisted emails
2025-08-22 14:18:10,987 - auth.email_whitelist - INFO - [email_whitelist.py:37] - Whitelisted domains: paramount.com
2025-08-22 14:18:10,987 - __main__ - DEBUG - [main.py:59] - Email whitelist initialized with 1 emails
2025-08-22 14:18:10,988 - auth.slack_user_info - DEBUG - [slack_user_info.py:25] - Slack user info manager initialized
2025-08-22 14:18:10,988 - __main__ - DEBUG - [main.py:62] - Slack user info manager initialized
2025-08-22 14:18:10,988 - __main__ - INFO - [main.py:63] - Security components initialized successfully
2025-08-22 14:18:10,988 - __main__ - INFO - [main.py:66] - Initializing Slack app...
2025-08-22 14:18:11,024 - slack_bolt.App - DEBUG - [base_client.py:255] - Sending a request - url: https://slack.com/api/auth.test, query_params: {}, body_params: {}, files: {}, json_body: None, headers: {'Content-Type': 'application/x-www-form-urlencoded', 'Authorization': '(redacted)', 'User-Agent': 'Bolt/1.16.0 Python/3.12.0 slackclient/3.34.0 Darwin/23.4.0'}
2025-08-22 14:18:11,385 - slack_bolt.App - DEBUG - [base_client.py:546] - Received the following response - status: 200, headers: {'date': 'Fri, 22 Aug 2025 21:18:11 GMT', 'server': 'Apache', 'vary': 'Accept-Encoding', 'x-slack-req-id': '05408f18e587e65fcddf49231f65187d', 'x-content-type-options': 'nosniff', 'x-xss-protection': '0', 'pragma': 'no-cache', 'cache-control': 'private, no-cache, no-store, must-revalidate', 'expires': 'Sat, 26 Jul 1997 05:00:00 GMT', 'content-type': 'application/json; charset=utf-8', 'x-oauth-scopes': 'app_mentions:read,channels:history,chat:write,im:history,im:read,im:write,users:read,reactions:write,users:read.email', 'access-control-expose-headers': 'x-slack-req-id, retry-after', 'access-control-allow-headers': 'slack-route, x-slack-version-ts, x-b3-traceid, x-b3-spanid, x-b3-parentspanid, x-b3-sampled, x-b3-flags', 'strict-transport-security': 'max-age=31536000; includeSubDomains; preload', 'referrer-policy': 'no-referrer', 'x-slack-unique-id': 'aKjek_jsz7p4XcFvl859SgAAAAI', 'x-slack-backend': 'r', 'access-control-allow-origin': '*', 'content-length': '228', 'via': '1.1 slack-prod.tinyspeck.com, envoy-www-iad-nntjxqlg,envoy-edge-pdx-ynagnkla', 'x-envoy-attempt-count': '1', 'x-envoy-upstream-service-time': '86', 'x-backend': 'main_normal main_canary_with_overflow main_control_with_overflow', 'x-server': 'slack-www-hhvm-main-iad-qvgj', 'x-slack-shared-secret-outcome': 'no-match', 'x-edge-backend': 'envoy-www', 'timing-allow-origin': '*', 'x-slack-edge-shared-secret-outcome': 'no-match', 'connection': 'close'}, body: {"ok":true,"url":"https://viacomcbs-grid-test.slack.com/","team":"Test Workspace","user":"autobot","team_id":"T010QS7UQNA","user_id":"U099R6WTZ9S","bot_id":"B099R6WTRU4","enterprise_id":"ERV4P7NAD","is_enterprise_install":false}
2025-08-22 14:18:11,385 - __main__ - INFO - [main.py:68] - Slack app initialized successfully
2025-08-22 14:18:11,386 - __main__ - DEBUG - [main.py:72] - Message deduplication cache initialized
2025-08-22 14:18:11,386 - __main__ - DEBUG - [main.py:77] - Thread tracking initialized
2025-08-22 14:18:11,386 - __main__ - INFO - [main.py:80] - Initializing DIG AI integration...
2025-08-22 14:18:11,386 - dig_connector - INFO - [dig_connector.py:284] - Initializing DIG AI with model ID: 42
2025-08-22 14:18:11,386 - dig_connector - INFO - [dig_connector.py:49] - Starting DIG chat session initialization...
2025-08-22 14:18:11,386 - dig_connector - DEBUG - [dig_connector.py:52] - Creating chat with name: Slack Bot Session 2025-08-22T21:18:11.386247+00:00
2025-08-22 14:18:11,386 - dig_connector - DEBUG - [dig_connector.py:63] - Creating chat - URL: https://ai.digdev.cbsicloud.com/fastapi/chats, Payload: {'chat_nm': 'Slack Bot Session 2025-08-22T21:18:11.386247+00:00', 'model_id': 42}
2025-08-22 14:18:11,388 - urllib3.connectionpool - DEBUG - [connectionpool.py:1055] - Starting new HTTPS connection (1): ai.digdev.cbsicloud.com:443
2025-08-22 14:18:11,631 - urllib3.connectionpool - DEBUG - [connectionpool.py:549] - https://ai.digdev.cbsicloud.com:443 "POST /fastapi/chats HTTP/1.1" 200 217
2025-08-22 14:18:11,632 - dig_connector - DEBUG - [dig_connector.py:66] - Create chat response: status=200
2025-08-22 14:18:11,632 - dig_connector - INFO - [dig_connector.py:54] - Successfully initialized DIG chat session with ID: 886
2025-08-22 14:18:11,633 - __main__ - INFO - [main.py:83] - DIG AI integration successfully initialized
2025-08-22 14:18:11,633 - __main__ - INFO - [main.py:87] - Setting up event handlers...
2025-08-22 14:18:11,634 - __main__ - INFO - [main.py:737] - Starting AI Assistant Bot...
2025-08-22 14:18:11,634 - __main__ - INFO - [main.py:738] - Registering event handlers...
2025-08-22 14:18:11,634 - __main__ - DEBUG - [main.py:739] - Event handlers registered: app_mention, message, app_home_opened
2025-08-22 14:18:11,635 - __main__ - INFO - [main.py:742] - Connecting to Slack via Socket Mode...
2025-08-22 14:18:11,635 - __main__ - INFO - [main.py:746] - Socket Mode handler created successfully
2025-08-22 14:18:11,635 - __main__ - INFO - [main.py:748] - ✅ Bot is now running and listening for events!
2025-08-22 14:18:11,635 - slack_bolt.App - DEBUG - [base_client.py:255] - Sending a request - url: https://slack.com/api/apps.connections.open, query_params: {}, body_params: {}, files: {}, json_body: None, headers: {'Content-Type': 'application/x-www-form-urlencoded', 'Authorization': '(redacted)', 'User-Agent': 'Bolt/1.16.0 Python/3.12.0 slackclient/3.34.0 Darwin/23.4.0'}
2025-08-22 14:18:11,948 - slack_bolt.App - DEBUG - [base_client.py:546] - Received the following response - status: 200, headers: {'date': 'Fri, 22 Aug 2025 21:18:11 GMT', 'server': 'Apache', 'vary': 'Accept-Encoding', 'x-slack-req-id': 'f97b17a16e16c312b6d5786d2091a103', 'x-content-type-options': 'nosniff', 'x-xss-protection': '0', 'x-robots-tag': 'noindex,nofollow', 'pragma': 'no-cache', 'cache-control': 'private, no-cache, no-store, must-revalidate', 'expires': 'Sat, 26 Jul 1997 05:00:00 GMT', 'content-type': 'application/json; charset=utf-8', 'x-accepted-oauth-scopes': 'connections:write', 'x-oauth-scopes': 'connections:write', 'access-control-expose-headers': 'x-slack-req-id, retry-after', 'access-control-allow-headers': 'slack-route, x-slack-version-ts, x-b3-traceid, x-b3-spanid, x-b3-parentspanid, x-b3-sampled, x-b3-flags', 'strict-transport-security': 'max-age=31536000; includeSubDomains; preload', 'referrer-policy': 'no-referrer', 'x-slack-unique-id': 'aKjek-PeMcEXrJkaDueQLAAAEBQ', 'x-slack-backend': 'r', 'access-control-allow-origin': '*', 'content-length': '173', 'via': '1.1 slack-prod.tinyspeck.com, envoy-www-iad-fcifgnea,envoy-edge-pdx-dwnswyjy', 'x-envoy-attempt-count': '1', 'x-envoy-upstream-service-time': '89', 'x-backend': 'main_normal main_canary_with_overflow main_control_with_overflow', 'x-server': 'slack-www-hhvm-main-iad-onqk', 'x-slack-shared-secret-outcome': 'no-match', 'x-edge-backend': 'envoy-www', 'timing-allow-origin': '*', 'x-slack-edge-shared-secret-outcome': 'no-match', 'connection': 'close'}, body: {"ok":true,"url":"wss:\/\/wss-primary.slack.com\/link\/?ticket=12b9ee44-7e81-4f2b-94b6-a676fa496488&app_id=a6c8d361ee1c6f398c5b4afec831555b78d7affa753b16bcc0fc64d7c13f3766"}
2025-08-22 14:18:12,482 - slack_bolt.App - INFO - [client.py:192] - A new session has been established (session id: ad2d33eb-27d3-4412-aefd-63b7a0dae44b)
2025-08-22 14:18:12,482 - slack_bolt.App - INFO - [base_handler.py:50] - ⚡️ Bolt app is running!
2025-08-22 14:18:12,579 - slack_bolt.App - INFO - [client.py:265] - Starting to receive messages from a new connection (session id: ad2d33eb-27d3-4412-aefd-63b7a0dae44b)
2025-08-22 14:18:12,581 - slack_bolt.App - DEBUG - [client.py:235] - on_message invoked: (message: {"type":"hello","num_connections":2,"debug_info":{"host":"applink-7","build_number":0,"approximate_connection_time":18060},"connection_info":{"app_id":"A099LACAB2R"}})
2025-08-22 14:18:12,581 - slack_bolt.App - DEBUG - [client.py:99] - A new message enqueued (current queue size: 1)
2025-08-22 14:18:12,581 - slack_bolt.App - DEBUG - [client.py:105] - A message dequeued (current queue size: 0)
2025-08-22 14:18:12,583 - slack_bolt.App - DEBUG - [client.py:125] - Message processing started (type: hello, envelope_id: None)
2025-08-22 14:18:12,583 - slack_bolt.App - DEBUG - [client.py:150] - Message processing completed (type: hello, envelope_id: None)
2025-08-22 14:18:58,522 - slack_bolt.App - DEBUG - [client.py:235] - on_message invoked: (message: {"envelope_id":"d48e0fe7-a54e-49f1-ba8e-5730ac1a8f15","payload":{"token":"yq71khZBCyJF1Ri2hG5aNqr5","team_id":"T010QS7UQNA","enterprise_id":"ERV4P7NAD","context_team_id":null,"context_enterprise_id":"ERV4P7NAD","api_app_id":"A099LACAB2R","event":{"user":"U01RMTFMALF","type":"message","ts":"1755897522.064479","client_msg_id":"5c66244d-47a8-4e0c-9b8e-dceefce76a59","text":"How can i run an automated test on a local Android phone?","blocks":[{"type":"rich_text","block_id":"vQwBP","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"How can i run an automated test on a local Android phone?"}]}]}],"channel":"D09A0LFHK8R","event_ts":"1755897522.064479","channel_type":"im"},"type":"event_callback","event_id":"Ev09BMPCAVPX","event_time":1755897522,"authorizations":[{"enterprise_id":"ERV4P7NAD","team_id":"T010QS7UQNA","user_id":"U099R6WTZ9S","is_bot":true,"is_enterprise_install":false}],"is_ext_shared_channel":false,"event_context":"4-eyJldCI6Im1lc3NhZ2UiLCJ0aWQiOiJUMDEwUVM3VVFOQSIsImFpZCI6IkEwOTlMQUNBQjJSIiwiY2lkIjoiRDA5QTBMRkhLOFIifQ"},"type":"events_api","accepts_response_payload":false,"retry_attempt":0,"retry_reason":""})
2025-08-22 14:18:58,523 - slack_bolt.App - DEBUG - [client.py:99] - A new message enqueued (current queue size: 1)
2025-08-22 14:18:58,524 - slack_bolt.App - DEBUG - [client.py:105] - A message dequeued (current queue size: 0)
2025-08-22 14:18:58,525 - slack_bolt.App - DEBUG - [client.py:125] - Message processing started (type: events_api, envelope_id: d48e0fe7-a54e-49f1-ba8e-5730ac1a8f15)
2025-08-22 14:18:58,526 - slack_bolt.App - DEBUG - [app.py:476] - Applying slack_bolt.middleware.ssl_check.ssl_check.SslCheck
2025-08-22 14:18:58,526 - slack_bolt.App - DEBUG - [app.py:476] - Applying slack_bolt.middleware.request_verification.request_verification.RequestVerification
2025-08-22 14:18:58,527 - slack_bolt.App - DEBUG - [app.py:476] - Applying slack_bolt.middleware.authorization.single_team_authorization.SingleTeamAuthorization
2025-08-22 14:18:58,527 - slack_bolt.App - DEBUG - [app.py:476] - Applying slack_bolt.middleware.ignoring_self_events.ignoring_self_events.IgnoringSelfEvents
2025-08-22 14:18:58,527 - slack_bolt.App - DEBUG - [app.py:476] - Applying slack_bolt.middleware.url_verification.url_verification.UrlVerification
2025-08-22 14:18:58,527 - slack_bolt.App - DEBUG - [app.py:500] - Checking listener: handle_app_mentions ...
2025-08-22 14:18:58,527 - slack_bolt.App - DEBUG - [app.py:500] - Checking listener: help_message ...
2025-08-22 14:18:58,528 - slack_bolt.App - DEBUG - [app.py:500] - Checking listener: handle_dm_messages ...
2025-08-22 14:18:58,528 - slack_bolt.App - DEBUG - [app.py:522] - Running listener: handle_dm_messages ...
2025-08-22 14:18:58,528 - __main__ - INFO - [main.py:487] - === DM MESSAGE EVENT RECEIVED ===
2025-08-22 14:18:58,528 - slack_bolt.App - DEBUG - [thread_runner.py:198] - Responding with status: 200 body: "" (0 millis)
2025-08-22 14:18:58,528 - __main__ - DEBUG - [main.py:488] - Full event body: {'token': 'yq71khZBCyJF1Ri2hG5aNqr5', 'team_id': 'T010QS7UQNA', 'enterprise_id': 'ERV4P7NAD', 'context_team_id': None, 'context_enterprise_id': 'ERV4P7NAD', 'api_app_id': 'A099LACAB2R', 'event': {'user': 'U01RMTFMALF', 'type': 'message', 'ts': '1755897522.064479', 'client_msg_id': '5c66244d-47a8-4e0c-9b8e-dceefce76a59', 'text': 'How can i run an automated test on a local Android phone?', 'blocks': [{'type': 'rich_text', 'block_id': 'vQwBP', 'elements': [{'type': 'rich_text_section', 'elements': [{'type': 'text', 'text': 'How can i run an automated test on a local Android phone?'}]}]}], 'channel': 'D09A0LFHK8R', 'event_ts': '1755897522.064479', 'channel_type': 'im'}, 'type': 'event_callback', 'event_id': 'Ev09BMPCAVPX', 'event_time': 1755897522, 'authorizations': [{'enterprise_id': 'ERV4P7NAD', 'team_id': 'T010QS7UQNA', 'user_id': 'U099R6WTZ9S', 'is_bot': True, 'is_enterprise_install': False}], 'is_ext_shared_channel': False, 'event_context': '4-eyJldCI6Im1lc3NhZ2UiLCJ0aWQiOiJUMDEwUVM3VVFOQSIsImFpZCI6IkEwOTlMQUNBQjJSIiwiY2lkIjoiRDA5QTBMRkhLOFIifQ'}
2025-08-22 14:18:58,529 - slack_bolt.App - DEBUG - [client.py:200] - Sending a message (session id: ad2d33eb-27d3-4412-aefd-63b7a0dae44b, message: {"envelope_id": "d48e0fe7-a54e-49f1-ba8e-5730ac1a8f15"})
2025-08-22 14:18:58,529 - __main__ - INFO - [main.py:497] - DM Event details: channel=D09A0LFHK8R, user=U01RMTFMALF, ts=1755897522.064479
2025-08-22 14:18:58,529 - __main__ - DEBUG - [main.py:498] - DM Event text: How can i run an automated test on a local Android phone?
2025-08-22 14:18:58,529 - utils - DEBUG - [utils.py:27] - Checking message processing: channel=D09A0LFHK8R, ts=1755897522.064479, text='How can i run an automated test on a local Android...'
2025-08-22 14:18:58,530 - utils - DEBUG - [utils.py:31] - Message hash: e2a1edfc4fbd63d9d13920fe0cc0ec34
2025-08-22 14:18:58,530 - slack_bolt.App - DEBUG - [internals.py:41] - Response time: 4 milliseconds
2025-08-22 14:18:58,530 - utils - DEBUG - [utils.py:53] - Added message to processing cache (total entries: 1)
2025-08-22 14:18:58,530 - slack_bolt.App - DEBUG - [client.py:150] - Message processing completed (type: events_api, envelope_id: d48e0fe7-a54e-49f1-ba8e-5730ac1a8f15)
2025-08-22 14:18:58,530 - __main__ - DEBUG - [main.py:511] - Bot check: bot_id=None, user_id=U01RMTFMALF
2025-08-22 14:18:58,530 - __main__ - DEBUG - [main.py:516] - Question received: 'How can i run an automated test on a local Android phone?'
2025-08-22 14:18:58,530 - __main__ - DEBUG - [main.py:522] - Checking user access for DM...
2025-08-22 14:18:58,531 - auth.slack_user_info - DEBUG - [slack_user_info.py:48] - Fetching user info for user_id: U01RMTFMALF
2025-08-22 14:18:58,531 - slack_sdk.web.base_client - DEBUG - [base_client.py:255] - Sending a request - url: https://slack.com/api/users.info, query_params: {}, body_params: {'user': 'U01RMTFMALF', 'team_id': 'T010QS7UQNA'}, files: {}, json_body: None, headers: {'Content-Type': 'application/x-www-form-urlencoded', 'Authorization': '(redacted)', 'User-Agent': 'Python/3.12.0 slackclient/3.34.0 Darwin/23.4.0'}
2025-08-22 14:18:58,830 - slack_sdk.web.base_client - DEBUG - [base_client.py:546] - Received the following response - status: 200, headers: {'date': 'Fri, 22 Aug 2025 21:18:58 GMT', 'server': 'Apache', 'vary': 'Accept-Encoding', 'x-slack-req-id': '84abee403c03f090133471720ab6d4af', 'x-content-type-options': 'nosniff', 'x-xss-protection': '0', 'pragma': 'no-cache', 'cache-control': 'private, no-cache, no-store, must-revalidate', 'expires': 'Sat, 26 Jul 1997 05:00:00 GMT', 'content-type': 'application/json; charset=utf-8', 'x-accepted-oauth-scopes': 'users:read', 'x-oauth-scopes': 'app_mentions:read,channels:history,chat:write,im:history,im:read,im:write,users:read,reactions:write,users:read.email', 'access-control-expose-headers': 'x-slack-req-id, retry-after', 'access-control-allow-headers': 'slack-route, x-slack-version-ts, x-b3-traceid, x-b3-spanid, x-b3-parentspanid, x-b3-sampled, x-b3-flags', 'strict-transport-security': 'max-age=31536000; includeSubDomains; preload', 'referrer-policy': 'no-referrer', 'x-slack-unique-id': 'aKjewlzxIczRhyyojKdRYAAAEDQ', 'x-slack-backend': 'r', 'access-control-allow-origin': '*', 'content-length': '2057', 'via': '1.1 slack-prod.tinyspeck.com, envoy-www-iad-ywkaoxww,envoy-edge-pdx-jlxmuxue', 'x-envoy-attempt-count': '1', 'x-envoy-upstream-service-time': '88', 'x-backend': 'main_normal main_canary_with_overflow main_control_with_overflow', 'x-server': 'slack-www-hhvm-main-iad-xkpk', 'x-slack-shared-secret-outcome': 'no-match', 'x-edge-backend': 'envoy-www', 'timing-allow-origin': '*', 'x-slack-edge-shared-secret-outcome': 'no-match', 'connection': 'close'}, body: {"ok":true,"user":{"id":"U01RMTFMALF","name":"popov8533","is_bot":false,"updated":1755891346,"is_app_user":false,"team_id":"T010QS7UQNA","deleted":false,"color":"4bbe2e","is_email_confirmed":true,"real_name":"Alexandr Popov","tz":"America\/Los_Angeles","tz_label":"Pacific Daylight Time","tz_offset":-25200,"is_admin":false,"is_owner":false,"is_primary_owner":false,"is_restricted":false,"is_ultra_restricted":false,"enterprise_user":{"id":"U01RMTFMALF","enterprise_id":"ERV4P7NAD","enterprise_name":"Paramount Global","is_admin":false,"is_owner":false,"is_primary_owner":false,"teams":["T010QS7UQNA","T02H1PQMF"]},"who_can_share_contact_card":"EVERYONE","profile":{"real_name":"Alexandr Popov","display_name":"Alex Popov","avatar_hash":"a64f82312a14","real_name_normalized":"Alexandr Popov","display_name_normalized":"Alex Popov","image_24":"https:\/\/avatars.slack-edge.com\/2023-03-29\/5033076824964_a64f82312a141123fbbf_24.png","image_32":"https:\/\/avatars.slack-edge.com\/2023-03-29\/5033076824964_a64f82312a141123fbbf_32.png","image_48":"https:\/\/avatars.slack-edge.com\/2023-03-29\/5033076824964_a64f82312a141123fbbf_48.png","image_72":"https:\/\/avatars.slack-edge.com\/2023-03-29\/5033076824964_a64f82312a141123fbbf_72.png","image_192":"https:\/\/avatars.slack-edge.com\/2023-03-29\/5033076824964_a64f82312a141123fbbf_192.png","image_512":"https:\/\/avatars.slack-edge.com\/2023-03-29\/5033076824964_a64f82312a141123fbbf_512.png","image_1024":"https:\/\/avatars.slack-edge.com\/2023-03-29\/5033076824964_a64f82312a141123fbbf_1024.png","image_original":"https:\/\/avatars.slack-edge.com\/2023-03-29\/5033076824964_a64f82312a141123fbbf_original.png","is_custom_image":true,"first_name":"Alexandr","last_name":"Popov","team":"T010QS7UQNA","email":"alexandr.popov@paramount.com","title":"Senior Software Quality Assurance Engineer","phone":"","skype":"","status_text":"","status_text_canonical":"","status_emoji":"","status_emoji_display_info":[],"status_expiration":0,"huddle_state":"default_unset","huddle_state_expiration_ts":0,"ooo_message":""}}}
2025-08-22 14:18:58,832 - auth.slack_user_info - DEBUG - [slack_user_info.py:63] - Retrieved email for user U01RMTFMALF: alexandr.popov@paramount.com
2025-08-22 14:18:58,832 - auth.email_whitelist - DEBUG - [email_whitelist.py:57] - Email access granted: alexandr.popov@paramount.com
2025-08-22 14:18:58,832 - __main__ - INFO - [main.py:118] - Access granted to user U01RMTFMALF with email alexandr.popov@paramount.com
2025-08-22 14:18:58,832 - __main__ - DEBUG - [main.py:528] - User access check passed for DM
2025-08-22 14:18:58,832 - __main__ - INFO - [main.py:530] - Processing DM question from user U01RMTFMALF: How can i run an automated test on a local Android phone?
2025-08-22 14:18:58,832 - __main__ - DEBUG - [main.py:533] - Starting DM processing...
2025-08-22 14:18:58,833 - __main__ - DEBUG - [main.py:536] - Checking if 'how can i run an automated test on a local android phone?' is an admin command in DM
2025-08-22 14:18:58,833 - __main__ - DEBUG - [main.py:572] - Checking if DM thread is already being processed...
2025-08-22 14:18:58,833 - utils - DEBUG - [utils.py:67] - Managing thread: D09A0LFHK8R:1755897522.064479, action: add, user: U01RMTFMALF
2025-08-22 14:18:58,833 - utils - INFO - [utils.py:94] - Added thread D09A0LFHK8R:1755897522.064479 to active tracking (total: 1)
2025-08-22 14:18:58,833 - __main__ - DEBUG - [main.py:577] - DM thread management check passed
2025-08-22 14:18:58,833 - slack_sdk.web.base_client - DEBUG - [base_client.py:255] - Sending a request - url: https://slack.com/api/reactions.add, query_params: {}, body_params: {'channel': 'D09A0LFHK8R', 'name': 'thinking_face', 'timestamp': '1755897522.064479', 'team_id': 'T010QS7UQNA'}, files: {}, json_body: None, headers: {'Content-Type': 'application/x-www-form-urlencoded', 'Authorization': '(redacted)', 'User-Agent': 'Python/3.12.0 slackclient/3.34.0 Darwin/23.4.0'}
2025-08-22 14:18:59,168 - slack_sdk.web.base_client - DEBUG - [base_client.py:546] - Received the following response - status: 200, headers: {'date': 'Fri, 22 Aug 2025 21:18:59 GMT', 'server': 'Apache', 'vary': 'Accept-Encoding', 'x-slack-req-id': '9c01cd39cb7eacf74703dd607d253158', 'x-content-type-options': 'nosniff', 'x-xss-protection': '0', 'pragma': 'no-cache', 'cache-control': 'private, no-cache, no-store, must-revalidate', 'expires': 'Sat, 26 Jul 1997 05:00:00 GMT', 'content-type': 'application/json; charset=utf-8', 'x-accepted-oauth-scopes': 'reactions:write', 'x-oauth-scopes': 'app_mentions:read,channels:history,chat:write,im:history,im:read,im:write,users:read,reactions:write,users:read.email', 'access-control-expose-headers': 'x-slack-req-id, retry-after', 'access-control-allow-headers': 'slack-route, x-slack-version-ts, x-b3-traceid, x-b3-spanid, x-b3-parentspanid, x-b3-sampled, x-b3-flags', 'strict-transport-security': 'max-age=31536000; includeSubDomains; preload', 'referrer-policy': 'no-referrer', 'x-slack-unique-id': 'aKjewxWMlMJPXGraRUtHaQAAAB8', 'x-slack-backend': 'r', 'access-control-allow-origin': '*', 'content-length': '11', 'via': '1.1 slack-prod.tinyspeck.com, envoy-www-iad-zuamhnnh,envoy-edge-pdx-kzvmmtcf', 'x-envoy-attempt-count': '1', 'x-envoy-upstream-service-time': '138', 'x-backend': 'main_normal main_canary_with_overflow main_control_with_overflow', 'x-server': 'slack-www-hhvm-main-iad-pjtr', 'x-slack-shared-secret-outcome': 'no-match', 'x-edge-backend': 'envoy-www', 'timing-allow-origin': '*', 'x-slack-edge-shared-secret-outcome': 'no-match', 'connection': 'close'}, body: {"ok":true}
2025-08-22 14:18:59,169 - __main__ - INFO - [main.py:594] - Processing DM question from <@U01RMTFMALF>: How can i run an automated test on a local Android phone?
2025-08-22 14:18:59,169 - __main__ - INFO - [main.py:598] - Sending DM request to DIG AI...
2025-08-22 14:18:59,169 - dig_connector - INFO - [dig_connector.py:134] - Generating response for query: 'How can i run an automated test on a local Android phone?' with 0 chunks
2025-08-22 14:18:59,169 - dig_connector - DEBUG - [dig_connector.py:138] - Formatted context length: 0
2025-08-22 14:18:59,169 - dig_connector - INFO - [dig_connector.py:141] - No context available, using direct query
2025-08-22 14:18:59,169 - dig_connector - INFO - [dig_connector.py:150] - Sending prompt to DIG platform...
2025-08-22 14:18:59,170 - dig_connector - INFO - [dig_connector.py:121] - Sending message to DIG API - URL: https://ai.digdev.cbsicloud.com/fastapi/chats/886/generate
2025-08-22 14:18:59,170 - dig_connector - DEBUG - [dig_connector.py:122] - Message payload: {'model_id': 42, 'message_text': 'How can i run an automated test on a local Android phone?', 'history': [{'role': 'user', 'content': 'How can i run an automated test on a local Android phone?'}]}
2025-08-22 14:19:01,948 - slack_bolt.App - DEBUG - [client.py:235] - on_message invoked: (message: {"envelope_id":"b36d70da-61fa-428e-a421-f26a135819f3","payload":{"token":"yq71khZBCyJF1Ri2hG5aNqr5","team_id":"T010QS7UQNA","enterprise_id":"ERV4P7NAD","context_team_id":null,"context_enterprise_id":"ERV4P7NAD","api_app_id":"A099LACAB2R","event":{"user":"U01RMTFMALF","type":"message","ts":"1755897522.064479","client_msg_id":"5c66244d-47a8-4e0c-9b8e-dceefce76a59","text":"How can i run an automated test on a local Android phone?","blocks":[{"type":"rich_text","block_id":"vQwBP","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"How can i run an automated test on a local Android phone?"}]}]}],"channel":"D09A0LFHK8R","event_ts":"1755897522.064479","channel_type":"im"},"type":"event_callback","event_id":"Ev09BMPCAVPX","event_time":1755897522,"authorizations":[{"enterprise_id":"ERV4P7NAD","team_id":"T010QS7UQNA","user_id":"U099R6WTZ9S","is_bot":true,"is_enterprise_install":false}],"is_ext_shared_channel":false,"event_context":"4-eyJldCI6Im1lc3NhZ2UiLCJ0aWQiOiJUMDEwUVM3VVFOQSIsImFpZCI6IkEwOTlMQUNBQjJSIiwiY2lkIjoiRDA5QTBMRkhLOFIifQ"},"type":"events_api","accepts_response_payload":false,"retry_attempt":1,"retry_reason":"timeout"})
2025-08-22 14:19:01,949 - slack_bolt.App - DEBUG - [client.py:99] - A new message enqueued (current queue size: 1)
2025-08-22 14:19:01,949 - slack_bolt.App - DEBUG - [client.py:105] - A message dequeued (current queue size: 0)
2025-08-22 14:19:01,950 - slack_bolt.App - DEBUG - [client.py:125] - Message processing started (type: events_api, envelope_id: b36d70da-61fa-428e-a421-f26a135819f3)
2025-08-22 14:19:01,950 - slack_bolt.App - DEBUG - [app.py:476] - Applying slack_bolt.middleware.ssl_check.ssl_check.SslCheck
2025-08-22 14:19:01,950 - slack_bolt.App - DEBUG - [app.py:476] - Applying slack_bolt.middleware.request_verification.request_verification.RequestVerification
2025-08-22 14:19:01,951 - slack_bolt.App - DEBUG - [app.py:476] - Applying slack_bolt.middleware.authorization.single_team_authorization.SingleTeamAuthorization
2025-08-22 14:19:01,951 - slack_bolt.App - DEBUG - [app.py:476] - Applying slack_bolt.middleware.ignoring_self_events.ignoring_self_events.IgnoringSelfEvents
2025-08-22 14:19:01,951 - slack_bolt.App - DEBUG - [app.py:476] - Applying slack_bolt.middleware.url_verification.url_verification.UrlVerification
2025-08-22 14:19:01,951 - slack_bolt.App - DEBUG - [app.py:500] - Checking listener: handle_app_mentions ...
2025-08-22 14:19:01,951 - slack_bolt.App - DEBUG - [app.py:500] - Checking listener: help_message ...
2025-08-22 14:19:01,952 - slack_bolt.App - DEBUG - [app.py:500] - Checking listener: handle_dm_messages ...
2025-08-22 14:19:01,952 - slack_bolt.App - DEBUG - [app.py:522] - Running listener: handle_dm_messages ...
2025-08-22 14:19:01,952 - __main__ - INFO - [main.py:487] - === DM MESSAGE EVENT RECEIVED ===
2025-08-22 14:19:01,952 - slack_bolt.App - DEBUG - [thread_runner.py:198] - Responding with status: 200 body: "" (0 millis)
2025-08-22 14:19:01,952 - __main__ - DEBUG - [main.py:488] - Full event body: {'token': 'yq71khZBCyJF1Ri2hG5aNqr5', 'team_id': 'T010QS7UQNA', 'enterprise_id': 'ERV4P7NAD', 'context_team_id': None, 'context_enterprise_id': 'ERV4P7NAD', 'api_app_id': 'A099LACAB2R', 'event': {'user': 'U01RMTFMALF', 'type': 'message', 'ts': '1755897522.064479', 'client_msg_id': '5c66244d-47a8-4e0c-9b8e-dceefce76a59', 'text': 'How can i run an automated test on a local Android phone?', 'blocks': [{'type': 'rich_text', 'block_id': 'vQwBP', 'elements': [{'type': 'rich_text_section', 'elements': [{'type': 'text', 'text': 'How can i run an automated test on a local Android phone?'}]}]}], 'channel': 'D09A0LFHK8R', 'event_ts': '1755897522.064479', 'channel_type': 'im'}, 'type': 'event_callback', 'event_id': 'Ev09BMPCAVPX', 'event_time': 1755897522, 'authorizations': [{'enterprise_id': 'ERV4P7NAD', 'team_id': 'T010QS7UQNA', 'user_id': 'U099R6WTZ9S', 'is_bot': True, 'is_enterprise_install': False}], 'is_ext_shared_channel': False, 'event_context': '4-eyJldCI6Im1lc3NhZ2UiLCJ0aWQiOiJUMDEwUVM3VVFOQSIsImFpZCI6IkEwOTlMQUNBQjJSIiwiY2lkIjoiRDA5QTBMRkhLOFIifQ'}
2025-08-22 14:19:01,953 - slack_bolt.App - DEBUG - [client.py:200] - Sending a message (session id: ad2d33eb-27d3-4412-aefd-63b7a0dae44b, message: {"envelope_id": "b36d70da-61fa-428e-a421-f26a135819f3"})
2025-08-22 14:19:01,953 - __main__ - INFO - [main.py:497] - DM Event details: channel=D09A0LFHK8R, user=U01RMTFMALF, ts=1755897522.064479
2025-08-22 14:19:01,953 - __main__ - DEBUG - [main.py:498] - DM Event text: How can i run an automated test on a local Android phone?
2025-08-22 14:19:01,953 - slack_bolt.App - DEBUG - [internals.py:41] - Response time: 3 milliseconds
2025-08-22 14:19:01,953 - utils - DEBUG - [utils.py:27] - Checking message processing: channel=D09A0LFHK8R, ts=1755897522.064479, text='How can i run an automated test on a local Android...'
2025-08-22 14:19:01,954 - slack_bolt.App - DEBUG - [client.py:150] - Message processing completed (type: events_api, envelope_id: b36d70da-61fa-428e-a421-f26a135819f3)
2025-08-22 14:19:01,954 - utils - DEBUG - [utils.py:31] - Message hash: e2a1edfc4fbd63d9d13920fe0cc0ec34
2025-08-22 14:19:01,954 - utils - INFO - [utils.py:48] - Skipping duplicate message (hash: e2a1edfc4fbd63d9d13920fe0cc0ec34): How can i run an automated tes...
2025-08-22 14:19:01,954 - __main__ - INFO - [main.py:502] - Skipping DM message - already processed recently
2025-08-22 14:19:09,117 - urllib3.connectionpool - DEBUG - [connectionpool.py:549] - https://ai.digdev.cbsicloud.com:443 "POST /fastapi/chats/886/generate HTTP/1.1" 200 2603
2025-08-22 14:19:09,118 - dig_connector - DEBUG - [dig_connector.py:125] - DIG API response: status=200
2025-08-22 14:19:09,118 - dig_connector - DEBUG - [dig_connector.py:129] - DIG API response data: {'message_text': 'To run an automated test on a local Android phone, you\'ll need to configure your testing environment and execute specific commands.\n\nHere\'s a general approach based on the provided documentation:\n\n1.  **Set up your environment variables**:\n    If you\'re using an Android Emulator, ensure your `ANDROID_HOME` environment variable is set and included in your system\'s path. While this is specifically mentioned for emulators, it\'s good practice for Android development setup (Source: `https://paramount.atlassian.net/wiki/spaces/PLQA/pages/47713566`).\n\n2.  **Configure test parameters**:\n    In your `resources/config.properties` file (likely within the `mqe-hob-mobile-tests` module), set the following properties (Source: `https://paramount.atlassian.net/wiki/spaces/PLQA/pages/47720266`):\n    *   `Platform=ANDROID`\n    *   `MobileDeviceCategory=PHONE`\n    *   `DebugDeviceID=<your_device_id>`: This is essential for running tests on a real device. You can typically find your device ID by running `adb devices` in your terminal.\n    *   You might also need to set `Locale` (e.g., `en-us` for domestic testing) and `DeviceStartOrientation` (e.g., `PORTRAIT`).\n\n3.  **Start Appium server (if applicable)**:\n    If your test framework uses Appium, you\'ll need to ensure the Appium server is running. A sample test class indicates that the Appium server can be started if the environment is set to "local" and the driver is "android" (Source: `https://paramount.atlassian.net/wiki/spaces/PLQA/pages/47711460`).\n\n4.  **Execute the test command**:\n    You can run the test from your terminal using a Maven command. An example command structure is:\n    ```\n    mvn clean test -pl mqe-hob-mobile-tests -am -Dgroups=Your_test_case_number_or_tag\n    ```\n    (Source: `https://paramount.atlassian.net/wiki/spaces/PLQA/pages/47720266`)\n\n    Alternatively, when running with specific configuration arguments, you might include parameters like:\n    ```\n    -Ddriver=android\n    -DplatformName=Android\n    -DplatformVersion=<your_android_version>\n    -DdeviceName="<your_device_name>"\n    -Denvironment=local\n    -Dudid=<your_device_id>  // Set this if running on a real mobile device only\n    -Dapp="<path_to_your_app.apk>"\n    ```\n    (Source: `https://paramount.atlassian.net/wiki/spaces/PLQA/pages/47711460`)\n\nRemember to replace placeholders like `<your_device_id>`, `<your_android_version>`, `<your_device_name>`, `<path_to_your_app.apk>`, and `Your_test_case_number_or_tag` with your specific values.', 'requires_approval': False, 'execution_id': 1589}
2025-08-22 14:19:09,119 - dig_connector - INFO - [dig_connector.py:154] - Extracting response content...
2025-08-22 14:19:09,119 - dig_connector - DEBUG - [dig_connector.py:221] - Found message_text in response
2025-08-22 14:19:09,119 - dig_connector - INFO - [dig_connector.py:157] - Successfully generated response (length: 2494)
2025-08-22 14:19:09,119 - __main__ - INFO - [main.py:601] - Received DM response from DIG AI
2025-08-22 14:19:09,119 - __main__ - DEBUG - [main.py:602] - DIG AI DM response: To run an automated test on a local Android phone, you'll need to configure your testing environment and execute specific commands.

Here's a general approach based on the provided documentation:

1.  **Set up your environment variables**:
    If you're using an Android Emulator, ensure your `ANDROID_HOME` environment variable is set and included in your system's path. While this is specifically mentioned for emulators, it's good practice for Android development setup (Source: `https://paramount.atlassian.net/wiki/spaces/PLQA/pages/47713566`).

2.  **Configure test parameters**:
    In your `resources/config.properties` file (likely within the `mqe-hob-mobile-tests` module), set the following properties (Source: `https://paramount.atlassian.net/wiki/spaces/PLQA/pages/47720266`):
    *   `Platform=ANDROID`
    *   `MobileDeviceCategory=PHONE`
    *   `DebugDeviceID=<your_device_id>`: This is essential for running tests on a real device. You can typically find your device ID by running `adb devices` in your terminal.
    *   You might also need to set `Locale` (e.g., `en-us` for domestic testing) and `DeviceStartOrientation` (e.g., `PORTRAIT`).

3.  **Start Appium server (if applicable)**:
    If your test framework uses Appium, you'll need to ensure the Appium server is running. A sample test class indicates that the Appium server can be started if the environment is set to "local" and the driver is "android" (Source: `https://paramount.atlassian.net/wiki/spaces/PLQA/pages/47711460`).

4.  **Execute the test command**:
    You can run the test from your terminal using a Maven command. An example command structure is:
    ```
    mvn clean test -pl mqe-hob-mobile-tests -am -Dgroups=Your_test_case_number_or_tag
    ```
    (Source: `https://paramount.atlassian.net/wiki/spaces/PLQA/pages/47720266`)

    Alternatively, when running with specific configuration arguments, you might include parameters like:
    ```
    -Ddriver=android
    -DplatformName=Android
    -DplatformVersion=<your_android_version>
    -DdeviceName="<your_device_name>"
    -Denvironment=local
    -Dudid=<your_device_id>  // Set this if running on a real mobile device only
    -Dapp="<path_to_your_app.apk>"
    ```
    (Source: `https://paramount.atlassian.net/wiki/spaces/PLQA/pages/47711460`)

Remember to replace placeholders like `<your_device_id>`, `<your_android_version>`, `<your_device_name>`, `<path_to_your_app.apk>`, and `Your_test_case_number_or_tag` with your specific values.
2025-08-22 14:19:09,121 - __main__ - DEBUG - [main.py:606] - Formatted DM response: *Your Question:*
> How can i run an automated test on a local Android phone?

*Answer:*
To run an automated test on a local Android phone, you'll need to configure your testing environment and execute specific commands.

Here's a general approach based on the provided documentation:

1.  *Set up your environment variables*:
If you're using an Android Emulator, ensure your `ANDROID_HOME` environment variable is set and included in your system's path. While this is specifically mentioned for emulators, it's good practice for Android development setup (Source: `https://paramount.atlassian.net/wiki/spaces/PLQA/pages/47713566`).

2.  *Configure test parameters*:
In your `resources/config.properties` file (likely within the `mqe-hob-mobile-tests` module), set the following properties (Source: `https://paramount.atlassian.net/wiki/spaces/PLQA/pages/47720266`):
    *
`Platform=ANDROID`
    *
`MobileDeviceCategory=PHONE`
    *
`DebugDeviceID=<your_device_id>`: This is essential for running tests on a real device. You can typically find your device ID by running `adb devices` in your terminal.
    *
You might also need to set `Locale` (e.g., `en-us` for domestic testing) and `DeviceStartOrientation` (e.g., `PORTRAIT`).

3.  *Start Appium server (if applicable)*:
If your test framework uses Appium, you'll need to ensure the Appium server is running. A sample test class indicates that the Appium server can be started if the environment is set to "local" and the driver is "android" (Source: `https://paramount.atlassian.net/wiki/spaces/PLQA/pages/47711460`).

4.  *Execute the test command*:
You can run the test from your terminal using a Maven command. An example command structure is:
    ```
    mvn clean test -pl mqe-hob-mobile-tests -am -Dgroups=Your_test_case_number_or_tag
    ```
    (Source: `https://paramount.atlassian.net/wiki/spaces/PLQA/pages/47720266`)

    Alternatively, when running with specific configuration arguments, you might include parameters like:
    ```
    -Ddriver=android
    -DplatformName=Android
    -DplatformVersion=<your_android_version>
    -DdeviceName="<your_device_name>"
    -Denvironment=local
    -Dudid=<your_device_id>  // Set this if running on a real mobile device only
    -Dapp="<path_to_your_app.apk>"
    ```
    (Source: `https://paramount.atlassian.net/wiki/spaces/PLQA/pages/47711460`)

Remember to replace placeholders like `<your_device_id>`, `<your_android_version>`, `<your_device_name>`, `<path_to_your_app.apk>`, and `Your_test_case_number_or_tag` with your specific values.

────────────────────────────────────────
*📚 Sources:*
1. https://paramount.atlassian.net/wiki/spaces/PLQA/pages/47713566`
2. https://paramount.atlassian.net/wiki/spaces/PLQA/pages/47720266`
3. https://paramount.atlassian.net/wiki/spaces/PLQA/pages/47711460`

2025-08-22 14:19:09,122 - slack_sdk.web.base_client - DEBUG - [base_client.py:255] - Sending a request - url: https://slack.com/api/reactions.remove, query_params: {}, body_params: {'name': 'thinking_face', 'channel': 'D09A0LFHK8R', 'timestamp': '1755897522.064479', 'team_id': 'T010QS7UQNA'}, files: {}, json_body: None, headers: {'Content-Type': 'application/x-www-form-urlencoded', 'Authorization': '(redacted)', 'User-Agent': 'Python/3.12.0 slackclient/3.34.0 Darwin/23.4.0'}
2025-08-22 14:19:09,497 - slack_sdk.web.base_client - DEBUG - [base_client.py:546] - Received the following response - status: 200, headers: {'date': 'Fri, 22 Aug 2025 21:19:09 GMT', 'server': 'Apache', 'vary': 'Accept-Encoding', 'x-slack-req-id': '7e9c32ddab7cd52d5ff6cdec73539af6', 'x-content-type-options': 'nosniff', 'x-xss-protection': '0', 'pragma': 'no-cache', 'cache-control': 'private, no-cache, no-store, must-revalidate', 'expires': 'Sat, 26 Jul 1997 05:00:00 GMT', 'content-type': 'application/json; charset=utf-8', 'x-accepted-oauth-scopes': 'reactions:write', 'x-oauth-scopes': 'app_mentions:read,channels:history,chat:write,im:history,im:read,im:write,users:read,reactions:write,users:read.email', 'access-control-expose-headers': 'x-slack-req-id, retry-after', 'access-control-allow-headers': 'slack-route, x-slack-version-ts, x-b3-traceid, x-b3-spanid, x-b3-parentspanid, x-b3-sampled, x-b3-flags', 'strict-transport-security': 'max-age=31536000; includeSubDomains; preload', 'referrer-policy': 'no-referrer', 'x-slack-unique-id': 'aKjezR3YcMGHqRk7QCErrQAAEDM', 'x-slack-backend': 'r', 'access-control-allow-origin': '*', 'content-length': '11', 'via': '1.1 slack-prod.tinyspeck.com, envoy-www-iad-bwoxrunc,envoy-edge-pdx-njhuadyt', 'x-envoy-attempt-count': '1', 'x-envoy-upstream-service-time': '144', 'x-backend': 'main_normal main_canary_with_overflow main_control_with_overflow', 'x-server': 'slack-www-hhvm-main-iad-qmwx', 'x-slack-shared-secret-outcome': 'no-match', 'x-edge-backend': 'envoy-www', 'timing-allow-origin': '*', 'x-slack-edge-shared-secret-outcome': 'no-match', 'connection': 'close'}, body: {"ok":true}
2025-08-22 14:19:09,498 - slack_sdk.web.base_client - DEBUG - [base_client.py:255] - Sending a request - url: https://slack.com/api/chat.postMessage, query_params: {}, body_params: {}, files: {}, json_body: {'channel': 'D09A0LFHK8R', 'text': '*Your Question:*\n> How can i run an automated test on a local Android phone?\n\n*Answer:*\nTo run an automated test on a local Android phone, you\'ll need to configure your testing environment and execute specific commands.\n\nHere\'s a general approach based on the provided documentation:\n\n1.  *Set up your environment variables*:\nIf you\'re using an Android Emulator, ensure your `ANDROID_HOME` environment variable is set and included in your system\'s path. While this is specifically mentioned for emulators, it\'s good practice for Android development setup (Source: `https://paramount.atlassian.net/wiki/spaces/PLQA/pages/47713566`).\n\n2.  *Configure test parameters*:\nIn your `resources/config.properties` file (likely within the `mqe-hob-mobile-tests` module), set the following properties (Source: `https://paramount.atlassian.net/wiki/spaces/PLQA/pages/47720266`):\n    *\n`Platform=ANDROID`\n    *\n`MobileDeviceCategory=PHONE`\n    *\n`DebugDeviceID=<your_device_id>`: This is essential for running tests on a real device. You can typically find your device ID by running `adb devices` in your terminal.\n    *\nYou might also need to set `Locale` (e.g., `en-us` for domestic testing) and `DeviceStartOrientation` (e.g., `PORTRAIT`).\n\n3.  *Start Appium server (if applicable)*:\nIf your test framework uses Appium, you\'ll need to ensure the Appium server is running. A sample test class indicates that the Appium server can be started if the environment is set to "local" and the driver is "android" (Source: `https://paramount.atlassian.net/wiki/spaces/PLQA/pages/47711460`).\n\n4.  *Execute the test command*:\nYou can run the test from your terminal using a Maven command. An example command structure is:\n    ```\n    mvn clean test -pl mqe-hob-mobile-tests -am -Dgroups=Your_test_case_number_or_tag\n    ```\n    (Source: `https://paramount.atlassian.net/wiki/spaces/PLQA/pages/47720266`)\n\n    Alternatively, when running with specific configuration arguments, you might include parameters like:\n    ```\n    -Ddriver=android\n    -DplatformName=Android\n    -DplatformVersion=<your_android_version>\n    -DdeviceName="<your_device_name>"\n    -Denvironment=local\n    -Dudid=<your_device_id>  // Set this if running on a real mobile device only\n    -Dapp="<path_to_your_app.apk>"\n    ```\n    (Source: `https://paramount.atlassian.net/wiki/spaces/PLQA/pages/47711460`)\n\nRemember to replace placeholders like `<your_device_id>`, `<your_android_version>`, `<your_device_name>`, `<path_to_your_app.apk>`, and `Your_test_case_number_or_tag` with your specific values.\n\n────────────────────────────────────────\n*📚 Sources:*\n1. https://paramount.atlassian.net/wiki/spaces/PLQA/pages/47713566`\n2. https://paramount.atlassian.net/wiki/spaces/PLQA/pages/47720266`\n3. https://paramount.atlassian.net/wiki/spaces/PLQA/pages/47711460`\n', 'thread_ts': '1755897522.064479', 'team_id': 'T010QS7UQNA'}, headers: {'Content-Type': 'application/json;charset=utf-8', 'Authorization': '(redacted)', 'User-Agent': 'Python/3.12.0 slackclient/3.34.0 Darwin/23.4.0'}
2025-08-22 14:19:10,000 - slack_sdk.web.base_client - DEBUG - [base_client.py:546] - Received the following response - status: 200, headers: {'date': 'Fri, 22 Aug 2025 21:19:09 GMT', 'server': 'Apache', 'vary': 'Accept-Encoding', 'x-slack-req-id': 'a01b1950be9d4661287e8e01948d21e5', 'x-content-type-options': 'nosniff', 'x-xss-protection': '0', 'pragma': 'no-cache', 'cache-control': 'private, no-cache, no-store, must-revalidate', 'expires': 'Sat, 26 Jul 1997 05:00:00 GMT', 'content-type': 'application/json; charset=utf-8', 'x-accepted-oauth-scopes': 'chat:write', 'x-oauth-scopes': 'app_mentions:read,channels:history,chat:write,im:history,im:read,im:write,users:read,reactions:write,users:read.email', 'access-control-expose-headers': 'x-slack-req-id, retry-after', 'access-control-allow-headers': 'slack-route, x-slack-version-ts, x-b3-traceid, x-b3-spanid, x-b3-parentspanid, x-b3-sampled, x-b3-flags', 'strict-transport-security': 'max-age=31536000; includeSubDomains; preload', 'referrer-policy': 'no-referrer', 'x-slack-unique-id': 'aKjezSXrh7VJP-txxweYywAAAC4', 'x-slack-backend': 'r', 'access-control-allow-origin': '*', 'content-length': '9242', 'via': '1.1 slack-prod.tinyspeck.com, envoy-www-iad-ajbhtgic,envoy-edge-pdx-aadajaug', 'x-envoy-attempt-count': '1', 'x-envoy-upstream-service-time': '266', 'x-backend': 'main_normal main_canary_with_overflow main_control_with_overflow', 'x-server': 'slack-www-hhvm-main-iad-tzzv', 'x-slack-shared-secret-outcome': 'no-match', 'x-edge-backend': 'envoy-www', 'timing-allow-origin': '*', 'x-slack-edge-shared-secret-outcome': 'no-match', 'connection': 'close'}, body: {"ok":true,"channel":"D09A0LFHK8R","ts":"1755897549.930479","message":{"user":"U099R6WTZ9S","type":"message","ts":"1755897549.930479","bot_id":"B099R6WTRU4","app_id":"A099LACAB2R","text":"*Your Question:*\n&gt; How can i run an automated test on a local Android phone?\n\n*Answer:*\nTo run an automated test on a local Android phone, you'll need to configure your testing environment and execute specific commands.\n\nHere's a general approach based on the provided documentation:\n\n1.  *Set up your environment variables*:\nIf you're using an Android Emulator, ensure your `ANDROID_HOME` environment variable is set and included in your system's path. While this is specifically mentioned for emulators, it's good practice for Android development setup (Source: `<https://paramount.atlassian.net/wiki/spaces/PLQA/pages/47713566`>).\n\n2.  *Configure test parameters*:\nIn your `resources/config.properties` file (likely within the `mqe-hob-mobile-tests` module), set the following properties (Source: `<https://paramount.atlassian.net/wiki/spaces/PLQA/pages/47720266`>):\n    *\n`Platform=ANDROID`\n    *\n`MobileDeviceCategory=PHONE`\n    *\n`DebugDeviceID=&lt;your_device_id&gt;`: This is essential for running tests on a real device. You can typically find your device ID by running `adb devices` in your terminal.\n    *\nYou might also need to set `Locale` (e.g., `en-us` for domestic testing) and `DeviceStartOrientation` (e.g., `PORTRAIT`).\n\n3.  *Start Appium server (if applicable)*:\nIf your test framework uses Appium, you'll need to ensure the Appium server is running. A sample test class indicates that the Appium server can be started if the environment is set to \"local\" and the driver is \"android\" (Source: `<https://paramount.atlassian.net/wiki/spaces/PLQA/pages/47711460`>).\n\n4.  *Execute the test command*:\nYou can run the test from your terminal using a Maven command. An example command structure is:\n    ```\n    mvn clean test -pl mqe-hob-mobile-tests -am -Dgroups=Your_test_case_number_or_tag\n    ```\n    (Source: `<https://paramount.atlassian.net/wiki/spaces/PLQA/pages/47720266`>)\n\n    Alternatively, when running with specific configuration arguments, you might include parameters like:\n    ```\n    -Ddriver=android\n    -DplatformName=Android\n    -DplatformVersion=&lt;your_android_version&gt;\n    -DdeviceName=\"&lt;your_device_name&gt;\"\n    -Denvironment=local\n    -Dudid=&lt;your_device_id&gt;  // Set this if running on a real mobile device only\n    -Dapp=\"&lt;path_to_your_app.apk&gt;\"\n    ```\n    (Source: `<https://paramount.atlassian.net/wiki/spaces/PLQA/pages/47711460`>)\n\nRemember to replace placeholders like `&lt;your_device_id&gt;`, `&lt;your_android_version&gt;`, `&lt;your_device_name&gt;`, `&lt;path_to_your_app.apk&gt;`, and `Your_test_case_number_or_tag` with your specific values.\n\n────────────────────────────────────────\n*:books: Sources:*\n1. <https://paramount.atlassian.net/wiki/spaces/PLQA/pages/47713566>`\n2. <https://paramount.atlassian.net/wiki/spaces/PLQA/pages/47720266>`\n3. <https://paramount.atlassian.net/wiki/spaces/PLQA/pages/47711460>`\n","team":"T010QS7UQNA","bot_profile":{"id":"B099R6WTRU4","app_id":"A099LACAB2R","user_id":"U099R6WTZ9S","name":"AutoBot","icons":{"image_36":"https://a.slack-edge.com/80588/img/plugins/app/bot_36.png","image_48":"https://a.slack-edge.com/80588/img/plugins/app/bot_48.png","image_72":"https://a.slack-edge.com/80588/img/plugins/app/service_72.png"},"deleted":false,"updated":1754677948,"team_id":"T010QS7UQNA"},"thread_ts":"1755897522.064479","parent_user_id":"U01RMTFMALF","blocks":[{"type":"rich_text","block_id":"qiw","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Your Question:","style":{"bold":true}}]},{"type":"rich_text_quote","elements":[{"type":"text","text":"How can i run an automated test on a local Android phone?"}]},{"type":"rich_text_section","elements":[{"type":"text","text":"\n\n"},{"type":"text","text":"Answer:","style":{"bold":true}},{"type":"text","text":"\nTo run an automated test on a local Android phone, you'll need to configure your testing environment and execute specific commands.\n\nHere's a general approach based on the provided documentation:\n\n1.  "},{"type":"text","text":"Set up your environment variables","style":{"bold":true}},{"type":"text","text":":\nIf you're using an Android Emulator, ensure your "},{"type":"text","text":"ANDROID_HOME","style":{"code":true}},{"type":"text","text":" environment variable is set and included in your system's path. While this is specifically mentioned for emulators, it's good practice for Android development setup (Source: `"},{"type":"link","url":"https://paramount.atlassian.net/wiki/spaces/PLQA/pages/47713566`"},{"type":"text","text":").\n\n2.  "},{"type":"text","text":"Configure test parameters","style":{"bold":true}},{"type":"text","text":":\nIn your "},{"type":"text","text":"resources/config.properties","style":{"code":true}},{"type":"text","text":" file (likely within the "},{"type":"text","text":"mqe-hob-mobile-tests","style":{"code":true}},{"type":"text","text":" module), set the following properties (Source: `"},{"type":"link","url":"https://paramount.atlassian.net/wiki/spaces/PLQA/pages/47720266`"},{"type":"text","text":"):\n    *\n"},{"type":"text","text":"Platform=ANDROID","style":{"code":true}},{"type":"text","text":"\n    *\n"},{"type":"text","text":"MobileDeviceCategory=PHONE","style":{"code":true}},{"type":"text","text":"\n    *\n"},{"type":"text","text":"DebugDeviceID=<your_device_id>","style":{"code":true}},{"type":"text","text":": This is essential for running tests on a real device. You can typically find your device ID by running "},{"type":"text","text":"adb devices","style":{"code":true}},{"type":"text","text":" in your terminal.\n    *\nYou might also need to set "},{"type":"text","text":"Locale","style":{"code":true}},{"type":"text","text":" (e.g., "},{"type":"text","text":"en-us","style":{"code":true}},{"type":"text","text":" for domestic testing) and "},{"type":"text","text":"DeviceStartOrientation","style":{"code":true}},{"type":"text","text":" (e.g., "},{"type":"text","text":"PORTRAIT","style":{"code":true}},{"type":"text","text":").\n\n3.  "},{"type":"text","text":"Start Appium server (if applicable)","style":{"bold":true}},{"type":"text","text":":\nIf your test framework uses Appium, you'll need to ensure the Appium server is running. A sample test class indicates that the Appium server can be started if the environment is set to \"local\" and the driver is \"android\" (Source: `"},{"type":"link","url":"https://paramount.atlassian.net/wiki/spaces/PLQA/pages/47711460`"},{"type":"text","text":").\n\n4.  "},{"type":"text","text":"Execute the test command","style":{"bold":true}},{"type":"text","text":":\nYou can run the test from your terminal using a Maven command. An example command structure is:\n    "}]},{"type":"rich_text_preformatted","elements":[{"type":"text","text":"    mvn clean test -pl mqe-hob-mobile-tests -am -Dgroups=Your_test_case_number_or_tag\n    "}]},{"type":"rich_text_section","elements":[{"type":"text","text":"    (Source: `"},{"type":"link","url":"https://paramount.atlassian.net/wiki/spaces/PLQA/pages/47720266`"},{"type":"text","text":")\n\n    Alternatively, when running with specific configuration arguments, you might include parameters like:\n    "}]},{"type":"rich_text_preformatted","elements":[{"type":"text","text":"    -Ddriver=android\n    -DplatformName=Android\n    -DplatformVersion=<your_android_version>\n    -DdeviceName=\"<your_device_name>\"\n    -Denvironment=local\n    -Dudid=<your_device_id>  // Set this if running on a real mobile device only\n    -Dapp=\"<path_to_your_app.apk>\"\n    "}]},{"type":"rich_text_section","elements":[{"type":"text","text":"    (Source: `"},{"type":"link","url":"https://paramount.atlassian.net/wiki/spaces/PLQA/pages/47711460`"},{"type":"text","text":")\n\nRemember to replace placeholders like "},{"type":"text","text":"<your_device_id>","style":{"code":true}},{"type":"text","text":", "},{"type":"text","text":"<your_android_version>","style":{"code":true}},{"type":"text","text":", "},{"type":"text","text":"<your_device_name>","style":{"code":true}},{"type":"text","text":", "},{"type":"text","text":"<path_to_your_app.apk>","style":{"code":true}},{"type":"text","text":", and "},{"type":"text","text":"Your_test_case_number_or_tag","style":{"code":true}},{"type":"text","text":" with your specific values.\n\n────────────────────────────────────────\n"},{"type":"emoji","name":"books","unicode":"1f4da","style":{"bold":true}},{"type":"text","text":" Sources:","style":{"bold":true}},{"type":"text","text":"\n1. "},{"type":"link","url":"https://paramount.atlassian.net/wiki/spaces/PLQA/pages/47713566"},{"type":"text","text":"`\n2. "},{"type":"link","url":"https://paramount.atlassian.net/wiki/spaces/PLQA/pages/47720266"},{"type":"text","text":"`\n3. "},{"type":"link","url":"https://paramount.atlassian.net/wiki/spaces/PLQA/pages/47711460"},{"type":"text","text":"`"}]}]}]}}
2025-08-22 14:19:10,002 - __main__ - DEBUG - [main.py:631] - Cleaning up DM thread tracking...
2025-08-22 14:19:10,003 - utils - DEBUG - [utils.py:67] - Managing thread: D09A0LFHK8R:1755897522.064479, action: remove, user: U01RMTFMALF
2025-08-22 14:19:10,003 - utils - INFO - [utils.py:100] - Removed thread D09A0LFHK8R:1755897522.064479 from active tracking (remaining: 0)
2025-08-22 14:19:21,462 - slack_bolt.App - DEBUG - [client.py:235] - on_message invoked: (message: {"envelope_id":"5331af06-662e-4d86-915f-2bd61b712adf","payload":{"token":"yq71khZBCyJF1Ri2hG5aNqr5","team_id":"T010QS7UQNA","enterprise_id":"ERV4P7NAD","context_team_id":null,"context_enterprise_id":"ERV4P7NAD","api_app_id":"A099LACAB2R","event":{"user":"U099R6WTZ9S","type":"message","ts":"1755897549.930479","bot_id":"B099R6WTRU4","app_id":"A099LACAB2R","text":"*Your Question:*\n&gt; How can i run an automated test on a local Android phone?\n\n*Answer:*\nTo run an automated test on a local Android phone, you'll need to configure your testing environment and execute specific commands.\n\nHere's a general approach based on the provided documentation:\n\n1.  *Set up your environment variables*:\nIf you're using an Android Emulator, ensure your `ANDROID_HOME` environment variable is set and included in your system's path. While this is specifically mentioned for emulators, it's good practice for Android development setup (Source: `<https:\/\/paramount.atlassian.net\/wiki\/spaces\/PLQA\/pages\/47713566`>).\n\n2.  *Configure test parameters*:\nIn your `resources\/config.properties` file (likely within the `mqe-hob-mobile-tests` module), set the following properties (Source: `<https:\/\/paramount.atlassian.net\/wiki\/spaces\/PLQA\/pages\/47720266`>):\n    *\n`Platform=ANDROID`\n    *\n`MobileDeviceCategory=PHONE`\n    *\n`DebugDeviceID=&lt;your_device_id&gt;`: This is essential for running tests on a real device. You can typically find your device ID by running `adb devices` in your terminal.\n    *\nYou might also need to set `Locale` (e.g., `en-us` for domestic testing) and `DeviceStartOrientation` (e.g., `PORTRAIT`).\n\n3.  *Start Appium server (if applicable)*:\nIf your test framework uses Appium, you'll need to ensure the Appium server is running. A sample test class indicates that the Appium server can be started if the environment is set to \"local\" and the driver is \"android\" (Source: `<https:\/\/paramount.atlassian.net\/wiki\/spaces\/PLQA\/pages\/47711460`>).\n\n4.  *Execute the test command*:\nYou can run the test from your terminal using a Maven command. An example command structure is:\n    ```\n    mvn clean test -pl mqe-hob-mobile-tests -am -Dgroups=Your_test_case_number_or_tag\n    ```\n    (Source: `<https:\/\/paramount.atlassian.net\/wiki\/spaces\/PLQA\/pages\/47720266`>)\n\n    Alternatively, when running with specific configuration arguments, you might include parameters like:\n    ```\n    -Ddriver=android\n    -DplatformName=Android\n    -DplatformVersion=&lt;your_android_version&gt;\n    -DdeviceName=\"&lt;your_device_name&gt;\"\n    -Denvironment=local\n    -Dudid=&lt;your_device_id&gt;  \/\/ Set this if running on a real mobile device only\n    -Dapp=\"&lt;path_to_your_app.apk&gt;\"\n    ```\n    (Source: `<https:\/\/paramount.atlassian.net\/wiki\/spaces\/PLQA\/pages\/47711460`>)\n\nRemember to replace placeholders like `&lt;your_device_id&gt;`, `&lt;your_android_version&gt;`, `&lt;your_device_name&gt;`, `&lt;path_to_your_app.apk&gt;`, and `Your_test_case_number_or_tag` with your specific values.\n\n\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\n*:books: Sources:*\n1. <https:\/\/paramount.atlassian.net\/wiki\/spaces\/PLQA\/pages\/47713566>`\n2. <https:\/\/paramount.atlassian.net\/wiki\/spaces\/PLQA\/pages\/47720266>`\n3. <https:\/\/paramount.atlassian.net\/wiki\/spaces\/PLQA\/pages\/47711460>`\n","team":"T010QS7UQNA","bot_profile":{"id":"B099R6WTRU4","deleted":false,"name":"AutoBot","updated":1754677948,"app_id":"A099LACAB2R","user_id":"U099R6WTZ9S","icons":{"image_36":"https:\/\/a.slack-edge.com\/80588\/img\/plugins\/app\/bot_36.png","image_48":"https:\/\/a.slack-edge.com\/80588\/img\/plugins\/app\/bot_48.png","image_72":"https:\/\/a.slack-edge.com\/80588\/img\/plugins\/app\/service_72.png"},"team_id":"T010QS7UQNA"},"thread_ts":"1755897522.064479","parent_user_id":"U01RMTFMALF","blocks":[{"type":"rich_text","block_id":"jTyR","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Your Question:","style":{"bold":true}}]},{"type":"rich_text_quote","elements":[{"type":"text","text":"How can i run an automated test on a local Android phone?"}]},{"type":"rich_text_section","elements":[{"type":"text","text":"\n\n"},{"type":"text","text":"Answer:","style":{"bold":true}},{"type":"text","text":"\nTo run an automated test on a local Android phone, you'll need to configure your testing environment and execute specific commands.\n\nHere's a general approach based on the provided documentation:\n\n1.  "},{"type":"text","text":"Set up your environment variables","style":{"bold":true}},{"type":"text","text":":\nIf you're using an Android Emulator, ensure your "},{"type":"text","text":"ANDROID_HOME","style":{"code":true}},{"type":"text","text":" environment variable is set and included in your system's path. While this is specifically mentioned for emulators, it's good practice for Android development setup (Source: `"},{"type":"link","url":"https:\/\/paramount.atlassian.net\/wiki\/spaces\/PLQA\/pages\/47713566`"},{"type":"text","text":").\n\n2.  "},{"type":"text","text":"Configure test parameters","style":{"bold":true}},{"type":"text","text":":\nIn your "},{"type":"text","text":"resources\/config.properties","style":{"code":true}},{"type":"text","text":" file (likely within the "},{"type":"text","text":"mqe-hob-mobile-tests","style":{"code":true}},{"type":"text","text":" module), set the following properties (Source: `"},{"type":"link","url":"https:\/\/paramount.atlassian.net\/wiki\/spaces\/PLQA\/pages\/47720266`"},{"type":"text","text":"):\n    *\n"},{"type":"text","text":"Platform=ANDROID","style":{"code":true}},{"type":"text","text":"\n    *\n"},{"type":"text","text":"MobileDeviceCategory=PHONE","style":{"code":true}},{"type":"text","text":"\n    *\n"},{"type":"text","text":"DebugDeviceID=<your_device_id>","style":{"code":true}},{"type":"text","text":": This is essential for running tests on a real device. You can typically find your device ID by running "},{"type":"text","text":"adb devices","style":{"code":true}},{"type":"text","text":" in your terminal.\n    *\nYou might also need to set "},{"type":"text","text":"Locale","style":{"code":true}},{"type":"text","text":" (e.g., "},{"type":"text","text":"en-us","style":{"code":true}},{"type":"text","text":" for domestic testing) and "},{"type":"text","text":"DeviceStartOrientation","style":{"code":true}},{"type":"text","text":" (e.g., "},{"type":"text","text":"PORTRAIT","style":{"code":true}},{"type":"text","text":").\n\n3.  "},{"type":"text","text":"Start Appium server (if applicable)","style":{"bold":true}},{"type":"text","text":":\nIf your test framework uses Appium, you'll need to ensure the Appium server is running. A sample test class indicates that the Appium server can be started if the environment is set to \"local\" and the driver is \"android\" (Source: `"},{"type":"link","url":"https:\/\/paramount.atlassian.net\/wiki\/spaces\/PLQA\/pages\/47711460`"},{"type":"text","text":").\n\n4.  "},{"type":"text","text":"Execute the test command","style":{"bold":true}},{"type":"text","text":":\nYou can run the test from your terminal using a Maven command. An example command structure is:\n    "}]},{"type":"rich_text_preformatted","elements":[{"type":"text","text":"    mvn clean test -pl mqe-hob-mobile-tests -am -Dgroups=Your_test_case_number_or_tag\n    "}]},{"type":"rich_text_section","elements":[{"type":"text","text":"    (Source: `"},{"type":"link","url":"https:\/\/paramount.atlassian.net\/wiki\/spaces\/PLQA\/pages\/47720266`"},{"type":"text","text":")\n\n    Alternatively, when running with specific configuration arguments, you might include parameters like:\n    "}]},{"type":"rich_text_preformatted","elements":[{"type":"text","text":"    -Ddriver=android\n    -DplatformName=Android\n    -DplatformVersion=<your_android_version>\n    -DdeviceName=\"<your_device_name>\"\n    -Denvironment=local\n    -Dudid=<your_device_id>  \/\/ Set this if running on a real mobile device only\n    -Dapp=\"<path_to_your_app.apk>\"\n    "}]},{"type":"rich_text_section","elements":[{"type":"text","text":"    (Source: `"},{"type":"link","url":"https:\/\/paramount.atlassian.net\/wiki\/spaces\/PLQA\/pages\/47711460`"},{"type":"text","text":")\n\nRemember to replace placeholders like "},{"type":"text","text":"<your_device_id>","style":{"code":true}},{"type":"text","text":", "},{"type":"text","text":"<your_android_version>","style":{"code":true}},{"type":"text","text":", "},{"type":"text","text":"<your_device_name>","style":{"code":true}},{"type":"text","text":", "},{"type":"text","text":"<path_to_your_app.apk>","style":{"code":true}},{"type":"text","text":", and "},{"type":"text","text":"Your_test_case_number_or_tag","style":{"code":true}},{"type":"text","text":" with your specific values.\n\n\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\n"},{"type":"emoji","name":"books","unicode":"1f4da","style":{"bold":true}},{"type":"text","text":" Sources:","style":{"bold":true}},{"type":"text","text":"\n1. "},{"type":"link","url":"https:\/\/paramount.atlassian.net\/wiki\/spaces\/PLQA\/pages\/47713566"},{"type":"text","text":"`\n2. "},{"type":"link","url":"https:\/\/paramount.atlassian.net\/wiki\/spaces\/PLQA\/pages\/47720266"},{"type":"text","text":"`\n3. "},{"type":"link","url":"https:\/\/paramount.atlassian.net\/wiki\/spaces\/PLQA\/pages\/47711460"},{"type":"text","text":"`"}]}]}],"channel":"D09A0LFHK8R","event_ts":"1755897549.930479","channel_type":"im"},"type":"event_callback","event_id":"Ev09BQTFNENS","event_time":1755897549,"authorizations":[{"enterprise_id":"ERV4P7NAD","team_id":"T010QS7UQNA","user_id":"U099R6WTZ9S","is_bot":true,"is_enterprise_install":false}],"is_ext_shared_channel":false,"event_context":"4-eyJldCI6Im1lc3NhZ2UiLCJ0aWQiOiJUMDEwUVM3VVFOQSIsImFpZCI6IkEwOTlMQUNBQjJSIiwiY2lkIjoiRDA5QTBMRkhLOFIifQ"},"type":"events_api","accepts_response_payload":false,"retry_attempt":0,"retry_reason":""})
2025-08-22 14:19:21,464 - slack_bolt.App - DEBUG - [client.py:99] - A new message enqueued (current queue size: 1)
2025-08-22 14:19:21,464 - slack_bolt.App - DEBUG - [client.py:105] - A message dequeued (current queue size: 0)
2025-08-22 14:19:21,465 - slack_bolt.App - DEBUG - [client.py:125] - Message processing started (type: events_api, envelope_id: 5331af06-662e-4d86-915f-2bd61b712adf)
2025-08-22 14:19:21,465 - slack_bolt.App - DEBUG - [app.py:476] - Applying slack_bolt.middleware.ssl_check.ssl_check.SslCheck
2025-08-22 14:19:21,465 - slack_bolt.App - DEBUG - [app.py:476] - Applying slack_bolt.middleware.request_verification.request_verification.RequestVerification
2025-08-22 14:19:21,465 - slack_bolt.App - DEBUG - [app.py:476] - Applying slack_bolt.middleware.authorization.single_team_authorization.SingleTeamAuthorization
2025-08-22 14:19:21,465 - slack_bolt.App - DEBUG - [app.py:476] - Applying slack_bolt.middleware.ignoring_self_events.ignoring_self_events.IgnoringSelfEvents
2025-08-22 14:19:21,466 - slack_bolt.IgnoringSelfEvents - DEBUG - [ignoring_self_events.py:60] - Skipped self event: {'user': 'U099R6WTZ9S', 'type': 'message', 'ts': '1755897549.930479', 'bot_id': 'B099R6WTRU4', 'app_id': 'A099LACAB2R', 'text': '*Your Question:*\n&gt; How can i run an automated test on a local Android phone?\n\n*Answer:*\nTo run an automated test on a local Android phone, you\'ll need to configure your testing environment and execute specific commands.\n\nHere\'s a general approach based on the provided documentation:\n\n1.  *Set up your environment variables*:\nIf you\'re using an Android Emulator, ensure your `ANDROID_HOME` environment variable is set and included in your system\'s path. While this is specifically mentioned for emulators, it\'s good practice for Android development setup (Source: `<https://paramount.atlassian.net/wiki/spaces/PLQA/pages/47713566`>).\n\n2.  *Configure test parameters*:\nIn your `resources/config.properties` file (likely within the `mqe-hob-mobile-tests` module), set the following properties (Source: `<https://paramount.atlassian.net/wiki/spaces/PLQA/pages/47720266`>):\n    *\n`Platform=ANDROID`\n    *\n`MobileDeviceCategory=PHONE`\n    *\n`DebugDeviceID=&lt;your_device_id&gt;`: This is essential for running tests on a real device. You can typically find your device ID by running `adb devices` in your terminal.\n    *\nYou might also need to set `Locale` (e.g., `en-us` for domestic testing) and `DeviceStartOrientation` (e.g., `PORTRAIT`).\n\n3.  *Start Appium server (if applicable)*:\nIf your test framework uses Appium, you\'ll need to ensure the Appium server is running. A sample test class indicates that the Appium server can be started if the environment is set to "local" and the driver is "android" (Source: `<https://paramount.atlassian.net/wiki/spaces/PLQA/pages/47711460`>).\n\n4.  *Execute the test command*:\nYou can run the test from your terminal using a Maven command. An example command structure is:\n    ```\n    mvn clean test -pl mqe-hob-mobile-tests -am -Dgroups=Your_test_case_number_or_tag\n    ```\n    (Source: `<https://paramount.atlassian.net/wiki/spaces/PLQA/pages/47720266`>)\n\n    Alternatively, when running with specific configuration arguments, you might include parameters like:\n    ```\n    -Ddriver=android\n    -DplatformName=Android\n    -DplatformVersion=&lt;your_android_version&gt;\n    -DdeviceName="&lt;your_device_name&gt;"\n    -Denvironment=local\n    -Dudid=&lt;your_device_id&gt;  // Set this if running on a real mobile device only\n    -Dapp="&lt;path_to_your_app.apk&gt;"\n    ```\n    (Source: `<https://paramount.atlassian.net/wiki/spaces/PLQA/pages/47711460`>)\n\nRemember to replace placeholders like `&lt;your_device_id&gt;`, `&lt;your_android_version&gt;`, `&lt;your_device_name&gt;`, `&lt;path_to_your_app.apk&gt;`, and `Your_test_case_number_or_tag` with your specific values.\n\n────────────────────────────────────────\n*:books: Sources:*\n1. <https://paramount.atlassian.net/wiki/spaces/PLQA/pages/47713566>`\n2. <https://paramount.atlassian.net/wiki/spaces/PLQA/pages/47720266>`\n3. <https://paramount.atlassian.net/wiki/spaces/PLQA/pages/47711460>`\n', 'team': 'T010QS7UQNA', 'bot_profile': {'id': 'B099R6WTRU4', 'deleted': False, 'name': 'AutoBot', 'updated': 1754677948, 'app_id': 'A099LACAB2R', 'user_id': 'U099R6WTZ9S', 'icons': {'image_36': 'https://a.slack-edge.com/80588/img/plugins/app/bot_36.png', 'image_48': 'https://a.slack-edge.com/80588/img/plugins/app/bot_48.png', 'image_72': 'https://a.slack-edge.com/80588/img/plugins/app/service_72.png'}, 'team_id': 'T010QS7UQNA'}, 'thread_ts': '1755897522.064479', 'parent_user_id': 'U01RMTFMALF', 'blocks': [{'type': 'rich_text', 'block_id': 'jTyR', 'elements': [{'type': 'rich_text_section', 'elements': [{'type': 'text', 'text': 'Your Question:', 'style': {'bold': True}}]}, {'type': 'rich_text_quote', 'elements': [{'type': 'text', 'text': 'How can i run an automated test on a local Android phone?'}]}, {'type': 'rich_text_section', 'elements': [{'type': 'text', 'text': '\n\n'}, {'type': 'text', 'text': 'Answer:', 'style': {'bold': True}}, {'type': 'text', 'text': "\nTo run an automated test on a local Android phone, you'll need to configure your testing environment and execute specific commands.\n\nHere's a general approach based on the provided documentation:\n\n1.  "}, {'type': 'text', 'text': 'Set up your environment variables', 'style': {'bold': True}}, {'type': 'text', 'text': ":\nIf you're using an Android Emulator, ensure your "}, {'type': 'text', 'text': 'ANDROID_HOME', 'style': {'code': True}}, {'type': 'text', 'text': " environment variable is set and included in your system's path. While this is specifically mentioned for emulators, it's good practice for Android development setup (Source: `"}, {'type': 'link', 'url': 'https://paramount.atlassian.net/wiki/spaces/PLQA/pages/47713566`'}, {'type': 'text', 'text': ').\n\n2.  '}, {'type': 'text', 'text': 'Configure test parameters', 'style': {'bold': True}}, {'type': 'text', 'text': ':\nIn your '}, {'type': 'text', 'text': 'resources/config.properties', 'style': {'code': True}}, {'type': 'text', 'text': ' file (likely within the '}, {'type': 'text', 'text': 'mqe-hob-mobile-tests', 'style': {'code': True}}, {'type': 'text', 'text': ' module), set the following properties (Source: `'}, {'type': 'link', 'url': 'https://paramount.atlassian.net/wiki/spaces/PLQA/pages/47720266`'}, {'type': 'text', 'text': '):\n    *\n'}, {'type': 'text', 'text': 'Platform=ANDROID', 'style': {'code': True}}, {'type': 'text', 'text': '\n    *\n'}, {'type': 'text', 'text': 'MobileDeviceCategory=PHONE', 'style': {'code': True}}, {'type': 'text', 'text': '\n    *\n'}, {'type': 'text', 'text': 'DebugDeviceID=<your_device_id>', 'style': {'code': True}}, {'type': 'text', 'text': ': This is essential for running tests on a real device. You can typically find your device ID by running '}, {'type': 'text', 'text': 'adb devices', 'style': {'code': True}}, {'type': 'text', 'text': ' in your terminal.\n    *\nYou might also need to set '}, {'type': 'text', 'text': 'Locale', 'style': {'code': True}}, {'type': 'text', 'text': ' (e.g., '}, {'type': 'text', 'text': 'en-us', 'style': {'code': True}}, {'type': 'text', 'text': ' for domestic testing) and '}, {'type': 'text', 'text': 'DeviceStartOrientation', 'style': {'code': True}}, {'type': 'text', 'text': ' (e.g., '}, {'type': 'text', 'text': 'PORTRAIT', 'style': {'code': True}}, {'type': 'text', 'text': ').\n\n3.  '}, {'type': 'text', 'text': 'Start Appium server (if applicable)', 'style': {'bold': True}}, {'type': 'text', 'text': ':\nIf your test framework uses Appium, you\'ll need to ensure the Appium server is running. A sample test class indicates that the Appium server can be started if the environment is set to "local" and the driver is "android" (Source: `'}, {'type': 'link', 'url': 'https://paramount.atlassian.net/wiki/spaces/PLQA/pages/47711460`'}, {'type': 'text', 'text': ').\n\n4.  '}, {'type': 'text', 'text': 'Execute the test command', 'style': {'bold': True}}, {'type': 'text', 'text': ':\nYou can run the test from your terminal using a Maven command. An example command structure is:\n    '}]}, {'type': 'rich_text_preformatted', 'elements': [{'type': 'text', 'text': '    mvn clean test -pl mqe-hob-mobile-tests -am -Dgroups=Your_test_case_number_or_tag\n    '}]}, {'type': 'rich_text_section', 'elements': [{'type': 'text', 'text': '    (Source: `'}, {'type': 'link', 'url': 'https://paramount.atlassian.net/wiki/spaces/PLQA/pages/47720266`'}, {'type': 'text', 'text': ')\n\n    Alternatively, when running with specific configuration arguments, you might include parameters like:\n    '}]}, {'type': 'rich_text_preformatted', 'elements': [{'type': 'text', 'text': '    -Ddriver=android\n    -DplatformName=Android\n    -DplatformVersion=<your_android_version>\n    -DdeviceName="<your_device_name>"\n    -Denvironment=local\n    -Dudid=<your_device_id>  // Set this if running on a real mobile device only\n    -Dapp="<path_to_your_app.apk>"\n    '}]}, {'type': 'rich_text_section', 'elements': [{'type': 'text', 'text': '    (Source: `'}, {'type': 'link', 'url': 'https://paramount.atlassian.net/wiki/spaces/PLQA/pages/47711460`'}, {'type': 'text', 'text': ')\n\nRemember to replace placeholders like '}, {'type': 'text', 'text': '<your_device_id>', 'style': {'code': True}}, {'type': 'text', 'text': ', '}, {'type': 'text', 'text': '<your_android_version>', 'style': {'code': True}}, {'type': 'text', 'text': ', '}, {'type': 'text', 'text': '<your_device_name>', 'style': {'code': True}}, {'type': 'text', 'text': ', '}, {'type': 'text', 'text': '<path_to_your_app.apk>', 'style': {'code': True}}, {'type': 'text', 'text': ', and '}, {'type': 'text', 'text': 'Your_test_case_number_or_tag', 'style': {'code': True}}, {'type': 'text', 'text': ' with your specific values.\n\n────────────────────────────────────────\n'}, {'type': 'emoji', 'name': 'books', 'unicode': '1f4da', 'style': {'bold': True}}, {'type': 'text', 'text': ' Sources:', 'style': {'bold': True}}, {'type': 'text', 'text': '\n1. '}, {'type': 'link', 'url': 'https://paramount.atlassian.net/wiki/spaces/PLQA/pages/47713566'}, {'type': 'text', 'text': '`\n2. '}, {'type': 'link', 'url': 'https://paramount.atlassian.net/wiki/spaces/PLQA/pages/47720266'}, {'type': 'text', 'text': '`\n3. '}, {'type': 'link', 'url': 'https://paramount.atlassian.net/wiki/spaces/PLQA/pages/47711460'}, {'type': 'text', 'text': '`'}]}]}], 'channel': 'D09A0LFHK8R', 'event_ts': '1755897549.930479', 'channel_type': 'im'}
2025-08-22 14:19:21,469 - slack_bolt.App - DEBUG - [client.py:200] - Sending a message (session id: ad2d33eb-27d3-4412-aefd-63b7a0dae44b, message: {"envelope_id": "5331af06-662e-4d86-915f-2bd61b712adf"})
2025-08-22 14:19:21,470 - slack_bolt.App - DEBUG - [internals.py:41] - Response time: 4 milliseconds
2025-08-22 14:19:21,470 - slack_bolt.App - DEBUG - [client.py:150] - Message processing completed (type: events_api, envelope_id: 5331af06-662e-4d86-915f-2bd61b712adf)
2025-08-22 14:19:51,043 - slack_bolt.App - DEBUG - [client.py:235] - on_message invoked: (message: {"envelope_id":"8ac96c59-ef7e-4106-8c33-73f9f93981fd","payload":{"token":"yq71khZBCyJF1Ri2hG5aNqr5","team_id":"T010QS7UQNA","enterprise_id":"ERV4P7NAD","context_team_id":null,"context_enterprise_id":"ERV4P7NAD","api_app_id":"A099LACAB2R","event":{"user":"U01RMTFMALF","type":"message","ts":"1755897522.064479","client_msg_id":"5c66244d-47a8-4e0c-9b8e-dceefce76a59","text":"How can i run an automated test on a local Android phone?","blocks":[{"type":"rich_text","block_id":"vQwBP","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"How can i run an automated test on a local Android phone?"}]}]}],"channel":"D09A0LFHK8R","event_ts":"1755897522.064479","channel_type":"im"},"type":"event_callback","event_id":"Ev09BMPCAVPX","event_time":1755897522,"authorizations":[{"enterprise_id":"ERV4P7NAD","team_id":"T010QS7UQNA","user_id":"U099R6WTZ9S","is_bot":true,"is_enterprise_install":false}],"is_ext_shared_channel":false,"event_context":"4-eyJldCI6Im1lc3NhZ2UiLCJ0aWQiOiJUMDEwUVM3VVFOQSIsImFpZCI6IkEwOTlMQUNBQjJSIiwiY2lkIjoiRDA5QTBMRkhLOFIifQ"},"type":"events_api","accepts_response_payload":false,"retry_attempt":2,"retry_reason":"timeout"})
2025-08-22 14:19:51,044 - slack_bolt.App - DEBUG - [client.py:99] - A new message enqueued (current queue size: 1)
2025-08-22 14:19:51,044 - slack_bolt.App - DEBUG - [client.py:105] - A message dequeued (current queue size: 0)
2025-08-22 14:19:51,045 - slack_bolt.App - DEBUG - [client.py:125] - Message processing started (type: events_api, envelope_id: 8ac96c59-ef7e-4106-8c33-73f9f93981fd)
2025-08-22 14:19:51,045 - slack_bolt.App - DEBUG - [app.py:476] - Applying slack_bolt.middleware.ssl_check.ssl_check.SslCheck
2025-08-22 14:19:51,046 - slack_bolt.App - DEBUG - [app.py:476] - Applying slack_bolt.middleware.request_verification.request_verification.RequestVerification
2025-08-22 14:19:51,046 - slack_bolt.App - DEBUG - [app.py:476] - Applying slack_bolt.middleware.authorization.single_team_authorization.SingleTeamAuthorization
2025-08-22 14:19:51,046 - slack_bolt.App - DEBUG - [app.py:476] - Applying slack_bolt.middleware.ignoring_self_events.ignoring_self_events.IgnoringSelfEvents
2025-08-22 14:19:51,046 - slack_bolt.App - DEBUG - [app.py:476] - Applying slack_bolt.middleware.url_verification.url_verification.UrlVerification
2025-08-22 14:19:51,046 - slack_bolt.App - DEBUG - [app.py:500] - Checking listener: handle_app_mentions ...
2025-08-22 14:19:51,046 - slack_bolt.App - DEBUG - [app.py:500] - Checking listener: help_message ...
2025-08-22 14:19:51,047 - slack_bolt.App - DEBUG - [app.py:500] - Checking listener: handle_dm_messages ...
2025-08-22 14:19:51,047 - slack_bolt.App - DEBUG - [app.py:522] - Running listener: handle_dm_messages ...
2025-08-22 14:19:51,047 - slack_bolt.App - DEBUG - [thread_runner.py:198] - Responding with status: 200 body: "" (0 millis)
2025-08-22 14:19:51,047 - __main__ - INFO - [main.py:487] - === DM MESSAGE EVENT RECEIVED ===
2025-08-22 14:19:51,047 - slack_bolt.App - DEBUG - [client.py:200] - Sending a message (session id: ad2d33eb-27d3-4412-aefd-63b7a0dae44b, message: {"envelope_id": "8ac96c59-ef7e-4106-8c33-73f9f93981fd"})
2025-08-22 14:19:51,047 - __main__ - DEBUG - [main.py:488] - Full event body: {'token': 'yq71khZBCyJF1Ri2hG5aNqr5', 'team_id': 'T010QS7UQNA', 'enterprise_id': 'ERV4P7NAD', 'context_team_id': None, 'context_enterprise_id': 'ERV4P7NAD', 'api_app_id': 'A099LACAB2R', 'event': {'user': 'U01RMTFMALF', 'type': 'message', 'ts': '1755897522.064479', 'client_msg_id': '5c66244d-47a8-4e0c-9b8e-dceefce76a59', 'text': 'How can i run an automated test on a local Android phone?', 'blocks': [{'type': 'rich_text', 'block_id': 'vQwBP', 'elements': [{'type': 'rich_text_section', 'elements': [{'type': 'text', 'text': 'How can i run an automated test on a local Android phone?'}]}]}], 'channel': 'D09A0LFHK8R', 'event_ts': '1755897522.064479', 'channel_type': 'im'}, 'type': 'event_callback', 'event_id': 'Ev09BMPCAVPX', 'event_time': 1755897522, 'authorizations': [{'enterprise_id': 'ERV4P7NAD', 'team_id': 'T010QS7UQNA', 'user_id': 'U099R6WTZ9S', 'is_bot': True, 'is_enterprise_install': False}], 'is_ext_shared_channel': False, 'event_context': '4-eyJldCI6Im1lc3NhZ2UiLCJ0aWQiOiJUMDEwUVM3VVFOQSIsImFpZCI6IkEwOTlMQUNBQjJSIiwiY2lkIjoiRDA5QTBMRkhLOFIifQ'}
2025-08-22 14:19:51,048 - __main__ - INFO - [main.py:497] - DM Event details: channel=D09A0LFHK8R, user=U01RMTFMALF, ts=1755897522.064479
2025-08-22 14:19:51,048 - slack_bolt.App - DEBUG - [internals.py:41] - Response time: 2 milliseconds
2025-08-22 14:19:51,048 - __main__ - DEBUG - [main.py:498] - DM Event text: How can i run an automated test on a local Android phone?
2025-08-22 14:19:51,048 - slack_bolt.App - DEBUG - [client.py:150] - Message processing completed (type: events_api, envelope_id: 8ac96c59-ef7e-4106-8c33-73f9f93981fd)
2025-08-22 14:19:51,048 - utils - DEBUG - [utils.py:27] - Checking message processing: channel=D09A0LFHK8R, ts=1755897522.064479, text='How can i run an automated test on a local Android...'
2025-08-22 14:19:51,049 - utils - DEBUG - [utils.py:31] - Message hash: e2a1edfc4fbd63d9d13920fe0cc0ec34
2025-08-22 14:19:51,049 - utils - INFO - [utils.py:48] - Skipping duplicate message (hash: e2a1edfc4fbd63d9d13920fe0cc0ec34): How can i run an automated tes...
2025-08-22 14:19:51,049 - __main__ - INFO - [main.py:502] - Skipping DM message - already processed recently
2025-08-22 14:22:20,047 - __main__ - INFO - [main.py:43] - Loading application configuration...
2025-08-22 14:22:20,047 - __main__ - INFO - [main.py:45] - Configuration loaded successfully
2025-08-22 14:22:20,047 - __main__ - INFO - [main.py:48] - Initializing security components...
2025-08-22 14:22:20,047 - __main__ - DEBUG - [main.py:50] - Slack validator initialized
2025-08-22 14:22:20,047 - security.content_filter - INFO - [content_filter.py:39] - Content filter initialized with 11 patterns
2025-08-22 14:22:20,047 - __main__ - DEBUG - [main.py:53] - Content filter initialized
2025-08-22 14:22:20,047 - auth.admin_manager - INFO - [admin_manager.py:27] - Admin manager initialized with 2 admin users
2025-08-22 14:22:20,047 - __main__ - DEBUG - [main.py:56] - Admin manager initialized
2025-08-22 14:22:20,047 - auth.email_whitelist - INFO - [email_whitelist.py:28] - Email whitelist initialized with 1 whitelisted emails
2025-08-22 14:22:20,047 - auth.email_whitelist - INFO - [email_whitelist.py:37] - Whitelisted domains: paramount.com
2025-08-22 14:22:20,047 - __main__ - DEBUG - [main.py:59] - Email whitelist initialized with 1 emails
2025-08-22 14:22:20,047 - auth.slack_user_info - DEBUG - [slack_user_info.py:25] - Slack user info manager initialized
2025-08-22 14:22:20,047 - __main__ - DEBUG - [main.py:62] - Slack user info manager initialized
2025-08-22 14:22:20,047 - __main__ - INFO - [main.py:63] - Security components initialized successfully
2025-08-22 14:22:20,047 - __main__ - INFO - [main.py:66] - Initializing Slack app...
2025-08-22 14:22:20,083 - slack_bolt.App - DEBUG - [base_client.py:255] - Sending a request - url: https://slack.com/api/auth.test, query_params: {}, body_params: {}, files: {}, json_body: None, headers: {'Content-Type': 'application/x-www-form-urlencoded', 'Authorization': '(redacted)', 'User-Agent': 'Bolt/1.16.0 Python/3.12.0 slackclient/3.34.0 Darwin/23.4.0'}
2025-08-22 14:22:20,443 - slack_bolt.App - DEBUG - [base_client.py:546] - Received the following response - status: 200, headers: {'date': 'Fri, 22 Aug 2025 21:22:20 GMT', 'server': 'Apache', 'vary': 'Accept-Encoding', 'x-slack-req-id': 'a3202164ed028d9f78dea100109a447a', 'x-content-type-options': 'nosniff', 'x-xss-protection': '0', 'pragma': 'no-cache', 'cache-control': 'private, no-cache, no-store, must-revalidate', 'expires': 'Sat, 26 Jul 1997 05:00:00 GMT', 'content-type': 'application/json; charset=utf-8', 'x-oauth-scopes': 'app_mentions:read,channels:history,chat:write,im:history,im:read,im:write,users:read,reactions:write,users:read.email', 'access-control-expose-headers': 'x-slack-req-id, retry-after', 'access-control-allow-headers': 'slack-route, x-slack-version-ts, x-b3-traceid, x-b3-spanid, x-b3-parentspanid, x-b3-sampled, x-b3-flags', 'strict-transport-security': 'max-age=31536000; includeSubDomains; preload', 'referrer-policy': 'no-referrer', 'x-slack-unique-id': 'aKjfjIYnOrYntxB4biqW8wAAACI', 'x-slack-backend': 'r', 'access-control-allow-origin': '*', 'content-length': '228', 'via': '1.1 slack-prod.tinyspeck.com, envoy-www-iad-xbmqkhkc,envoy-edge-pdx-bijurrhp', 'x-envoy-attempt-count': '1', 'x-envoy-upstream-service-time': '83', 'x-backend': 'main_normal main_canary_with_overflow main_control_with_overflow', 'x-server': 'slack-www-hhvm-main-iad-zqfi', 'x-slack-shared-secret-outcome': 'no-match', 'x-edge-backend': 'envoy-www', 'timing-allow-origin': '*', 'x-slack-edge-shared-secret-outcome': 'no-match', 'connection': 'close'}, body: {"ok":true,"url":"https://viacomcbs-grid-test.slack.com/","team":"Test Workspace","user":"autobot","team_id":"T010QS7UQNA","user_id":"U099R6WTZ9S","bot_id":"B099R6WTRU4","enterprise_id":"ERV4P7NAD","is_enterprise_install":false}
2025-08-22 14:22:20,444 - __main__ - INFO - [main.py:68] - Slack app initialized successfully
2025-08-22 14:22:20,444 - __main__ - DEBUG - [main.py:72] - Message deduplication cache initialized
2025-08-22 14:22:20,444 - __main__ - DEBUG - [main.py:77] - Thread tracking initialized
2025-08-22 14:22:20,444 - __main__ - INFO - [main.py:80] - Initializing DIG AI integration...
2025-08-22 14:22:20,444 - dig_connector - INFO - [dig_connector.py:284] - Initializing DIG AI with model ID: 42
2025-08-22 14:22:20,444 - dig_connector - INFO - [dig_connector.py:49] - Starting DIG chat session initialization...
2025-08-22 14:22:20,444 - dig_connector - DEBUG - [dig_connector.py:52] - Creating chat with name: Slack Bot Session 2025-08-22T21:22:20.444643+00:00
2025-08-22 14:22:20,444 - dig_connector - DEBUG - [dig_connector.py:63] - Creating chat - URL: https://ai.digdev.cbsicloud.com/fastapi/chats, Payload: {'chat_nm': 'Slack Bot Session 2025-08-22T21:22:20.444643+00:00', 'model_id': 42}
2025-08-22 14:22:20,446 - urllib3.connectionpool - DEBUG - [connectionpool.py:1055] - Starting new HTTPS connection (1): ai.digdev.cbsicloud.com:443
2025-08-22 14:22:20,716 - urllib3.connectionpool - DEBUG - [connectionpool.py:549] - https://ai.digdev.cbsicloud.com:443 "POST /fastapi/chats HTTP/1.1" 200 217
2025-08-22 14:22:20,717 - dig_connector - DEBUG - [dig_connector.py:66] - Create chat response: status=200
2025-08-22 14:22:20,717 - dig_connector - INFO - [dig_connector.py:54] - Successfully initialized DIG chat session with ID: 887
2025-08-22 14:22:20,717 - __main__ - INFO - [main.py:83] - DIG AI integration successfully initialized
2025-08-22 14:22:20,717 - __main__ - INFO - [main.py:87] - Setting up event handlers...
2025-08-22 14:22:20,719 - __main__ - INFO - [main.py:737] - Starting AI Assistant Bot...
2025-08-22 14:22:20,719 - __main__ - INFO - [main.py:738] - Registering event handlers...
2025-08-22 14:22:20,719 - __main__ - DEBUG - [main.py:739] - Event handlers registered: app_mention, message, app_home_opened
2025-08-22 14:22:20,719 - __main__ - INFO - [main.py:742] - Connecting to Slack via Socket Mode...
2025-08-22 14:22:20,720 - __main__ - INFO - [main.py:746] - Socket Mode handler created successfully
2025-08-22 14:22:20,720 - __main__ - INFO - [main.py:748] - ✅ Bot is now running and listening for events!
2025-08-22 14:22:20,720 - slack_bolt.App - DEBUG - [base_client.py:255] - Sending a request - url: https://slack.com/api/apps.connections.open, query_params: {}, body_params: {}, files: {}, json_body: None, headers: {'Content-Type': 'application/x-www-form-urlencoded', 'Authorization': '(redacted)', 'User-Agent': 'Bolt/1.16.0 Python/3.12.0 slackclient/3.34.0 Darwin/23.4.0'}
2025-08-22 14:22:21,079 - slack_bolt.App - DEBUG - [base_client.py:546] - Received the following response - status: 200, headers: {'date': 'Fri, 22 Aug 2025 21:22:21 GMT', 'server': 'Apache', 'vary': 'Accept-Encoding', 'x-slack-req-id': '70311ef6ca8f85ff9f2acc7cd5df18f8', 'x-content-type-options': 'nosniff', 'x-xss-protection': '0', 'x-robots-tag': 'noindex,nofollow', 'pragma': 'no-cache', 'cache-control': 'private, no-cache, no-store, must-revalidate', 'expires': 'Sat, 26 Jul 1997 05:00:00 GMT', 'content-type': 'application/json; charset=utf-8', 'x-accepted-oauth-scopes': 'connections:write', 'x-oauth-scopes': 'connections:write', 'access-control-expose-headers': 'x-slack-req-id, retry-after', 'access-control-allow-headers': 'slack-route, x-slack-version-ts, x-b3-traceid, x-b3-spanid, x-b3-parentspanid, x-b3-sampled, x-b3-flags', 'strict-transport-security': 'max-age=31536000; includeSubDomains; preload', 'referrer-policy': 'no-referrer', 'x-slack-unique-id': 'aKjfjT_UD0nobQeWzsIGxwAAEDA', 'x-slack-backend': 'r', 'access-control-allow-origin': '*', 'content-length': '173', 'via': '1.1 slack-prod.tinyspeck.com, envoy-www-iad-ybnlgcas,envoy-edge-pdx-ipsntelu', 'x-envoy-attempt-count': '1', 'x-envoy-upstream-service-time': '78', 'x-backend': 'main_normal main_canary_with_overflow main_control_with_overflow', 'x-server': 'slack-www-hhvm-main-iad-llqw', 'x-slack-shared-secret-outcome': 'no-match', 'x-edge-backend': 'envoy-www', 'timing-allow-origin': '*', 'x-slack-edge-shared-secret-outcome': 'no-match', 'connection': 'close'}, body: {"ok":true,"url":"wss:\/\/wss-primary.slack.com\/link\/?ticket=e667e02b-b776-4807-8a2e-bf4bc67e7047&app_id=a6c8d361ee1c6f398c5b4afec831555b78d7affa753b16bcc0fc64d7c13f3766"}
2025-08-22 14:22:21,585 - slack_bolt.App - INFO - [client.py:192] - A new session has been established (session id: dd816a8d-6996-4a1a-a189-5d8c5dc03d03)
2025-08-22 14:22:21,585 - slack_bolt.App - INFO - [base_handler.py:50] - ⚡️ Bolt app is running!
2025-08-22 14:22:21,660 - slack_bolt.App - INFO - [client.py:265] - Starting to receive messages from a new connection (session id: dd816a8d-6996-4a1a-a189-5d8c5dc03d03)
2025-08-22 14:22:21,661 - slack_bolt.App - DEBUG - [client.py:235] - on_message invoked: (message: {"type":"hello","num_connections":1,"debug_info":{"host":"applink-7","build_number":0,"approximate_connection_time":18060},"connection_info":{"app_id":"A099LACAB2R"}})
2025-08-22 14:22:21,661 - slack_bolt.App - DEBUG - [client.py:99] - A new message enqueued (current queue size: 1)
2025-08-22 14:22:21,661 - slack_bolt.App - DEBUG - [client.py:105] - A message dequeued (current queue size: 0)
2025-08-22 14:22:21,662 - slack_bolt.App - DEBUG - [client.py:125] - Message processing started (type: hello, envelope_id: None)
2025-08-22 14:22:21,663 - slack_bolt.App - DEBUG - [client.py:150] - Message processing completed (type: hello, envelope_id: None)
2025-08-22 14:22:38,060 - slack_bolt.App - DEBUG - [client.py:235] - on_message invoked: (message: {"envelope_id":"ea7405c1-8015-4056-be2c-4312c099f558","payload":{"token":"yq71khZBCyJF1Ri2hG5aNqr5","team_id":"T010QS7UQNA","enterprise_id":"ERV4P7NAD","context_team_id":null,"context_enterprise_id":"ERV4P7NAD","api_app_id":"A099LACAB2R","event":{"user":"U01RMTFMALF","type":"message","ts":"1755897757.125359","client_msg_id":"b51769d5-bb15-441c-b0cc-855e1f6a610a","text":"How can i run an automated test on a local Android phone?","blocks":[{"type":"rich_text","block_id":"vQwBP","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"How can i run an automated test on a local Android phone?"}]}]}],"channel":"D09A0LFHK8R","event_ts":"1755897757.125359","channel_type":"im"},"type":"event_callback","event_id":"Ev09BNV1RBCJ","event_time":1755897757,"authorizations":[{"enterprise_id":"ERV4P7NAD","team_id":"T010QS7UQNA","user_id":"U099R6WTZ9S","is_bot":true,"is_enterprise_install":false}],"is_ext_shared_channel":false,"event_context":"4-eyJldCI6Im1lc3NhZ2UiLCJ0aWQiOiJUMDEwUVM3VVFOQSIsImFpZCI6IkEwOTlMQUNBQjJSIiwiY2lkIjoiRDA5QTBMRkhLOFIifQ"},"type":"events_api","accepts_response_payload":false,"retry_attempt":0,"retry_reason":""})
2025-08-22 14:22:38,061 - slack_bolt.App - DEBUG - [client.py:99] - A new message enqueued (current queue size: 1)
2025-08-22 14:22:38,061 - slack_bolt.App - DEBUG - [client.py:105] - A message dequeued (current queue size: 0)
2025-08-22 14:22:38,062 - slack_bolt.App - DEBUG - [client.py:125] - Message processing started (type: events_api, envelope_id: ea7405c1-8015-4056-be2c-4312c099f558)
2025-08-22 14:22:38,063 - slack_bolt.App - DEBUG - [app.py:476] - Applying slack_bolt.middleware.ssl_check.ssl_check.SslCheck
2025-08-22 14:22:38,063 - slack_bolt.App - DEBUG - [app.py:476] - Applying slack_bolt.middleware.request_verification.request_verification.RequestVerification
2025-08-22 14:22:38,063 - slack_bolt.App - DEBUG - [app.py:476] - Applying slack_bolt.middleware.authorization.single_team_authorization.SingleTeamAuthorization
2025-08-22 14:22:38,064 - slack_bolt.App - DEBUG - [app.py:476] - Applying slack_bolt.middleware.ignoring_self_events.ignoring_self_events.IgnoringSelfEvents
2025-08-22 14:22:38,064 - slack_bolt.App - DEBUG - [app.py:476] - Applying slack_bolt.middleware.url_verification.url_verification.UrlVerification
2025-08-22 14:22:38,064 - slack_bolt.App - DEBUG - [app.py:500] - Checking listener: handle_app_mentions ...
2025-08-22 14:22:38,064 - slack_bolt.App - DEBUG - [app.py:500] - Checking listener: help_message ...
2025-08-22 14:22:38,064 - slack_bolt.App - DEBUG - [app.py:500] - Checking listener: handle_dm_messages ...
2025-08-22 14:22:38,064 - slack_bolt.App - DEBUG - [app.py:522] - Running listener: handle_dm_messages ...
2025-08-22 14:22:38,065 - __main__ - INFO - [main.py:487] - === DM MESSAGE EVENT RECEIVED ===
2025-08-22 14:22:38,065 - slack_bolt.App - DEBUG - [thread_runner.py:198] - Responding with status: 200 body: "" (0 millis)
2025-08-22 14:22:38,065 - __main__ - DEBUG - [main.py:488] - Full event body: {'token': 'yq71khZBCyJF1Ri2hG5aNqr5', 'team_id': 'T010QS7UQNA', 'enterprise_id': 'ERV4P7NAD', 'context_team_id': None, 'context_enterprise_id': 'ERV4P7NAD', 'api_app_id': 'A099LACAB2R', 'event': {'user': 'U01RMTFMALF', 'type': 'message', 'ts': '1755897757.125359', 'client_msg_id': 'b51769d5-bb15-441c-b0cc-855e1f6a610a', 'text': 'How can i run an automated test on a local Android phone?', 'blocks': [{'type': 'rich_text', 'block_id': 'vQwBP', 'elements': [{'type': 'rich_text_section', 'elements': [{'type': 'text', 'text': 'How can i run an automated test on a local Android phone?'}]}]}], 'channel': 'D09A0LFHK8R', 'event_ts': '1755897757.125359', 'channel_type': 'im'}, 'type': 'event_callback', 'event_id': 'Ev09BNV1RBCJ', 'event_time': 1755897757, 'authorizations': [{'enterprise_id': 'ERV4P7NAD', 'team_id': 'T010QS7UQNA', 'user_id': 'U099R6WTZ9S', 'is_bot': True, 'is_enterprise_install': False}], 'is_ext_shared_channel': False, 'event_context': '4-eyJldCI6Im1lc3NhZ2UiLCJ0aWQiOiJUMDEwUVM3VVFOQSIsImFpZCI6IkEwOTlMQUNBQjJSIiwiY2lkIjoiRDA5QTBMRkhLOFIifQ'}
2025-08-22 14:22:38,065 - slack_bolt.App - DEBUG - [client.py:200] - Sending a message (session id: dd816a8d-6996-4a1a-a189-5d8c5dc03d03, message: {"envelope_id": "ea7405c1-8015-4056-be2c-4312c099f558"})
2025-08-22 14:22:38,065 - __main__ - INFO - [main.py:497] - DM Event details: channel=D09A0LFHK8R, user=U01RMTFMALF, ts=1755897757.125359
2025-08-22 14:22:38,065 - __main__ - DEBUG - [main.py:498] - DM Event text: How can i run an automated test on a local Android phone?
2025-08-22 14:22:38,066 - utils - DEBUG - [utils.py:27] - Checking message processing: channel=D09A0LFHK8R, ts=1755897757.125359, text='How can i run an automated test on a local Android...'
2025-08-22 14:22:38,066 - slack_bolt.App - DEBUG - [internals.py:41] - Response time: 2 milliseconds
2025-08-22 14:22:38,066 - utils - DEBUG - [utils.py:31] - Message hash: 3d4d322ca9f1464e4d526ae4c7465d09
2025-08-22 14:22:38,066 - slack_bolt.App - DEBUG - [client.py:150] - Message processing completed (type: events_api, envelope_id: ea7405c1-8015-4056-be2c-4312c099f558)
2025-08-22 14:22:38,066 - utils - DEBUG - [utils.py:53] - Added message to processing cache (total entries: 1)
2025-08-22 14:22:38,066 - __main__ - DEBUG - [main.py:511] - Bot check: bot_id=None, user_id=U01RMTFMALF
2025-08-22 14:22:38,066 - __main__ - DEBUG - [main.py:516] - Question received: 'How can i run an automated test on a local Android phone?'
2025-08-22 14:22:38,066 - __main__ - DEBUG - [main.py:522] - Checking user access for DM...
2025-08-22 14:22:38,066 - auth.slack_user_info - DEBUG - [slack_user_info.py:48] - Fetching user info for user_id: U01RMTFMALF
2025-08-22 14:22:38,067 - slack_sdk.web.base_client - DEBUG - [base_client.py:255] - Sending a request - url: https://slack.com/api/users.info, query_params: {}, body_params: {'user': 'U01RMTFMALF', 'team_id': 'T010QS7UQNA'}, files: {}, json_body: None, headers: {'Content-Type': 'application/x-www-form-urlencoded', 'Authorization': '(redacted)', 'User-Agent': 'Python/3.12.0 slackclient/3.34.0 Darwin/23.4.0'}
2025-08-22 14:22:38,415 - slack_sdk.web.base_client - DEBUG - [base_client.py:546] - Received the following response - status: 200, headers: {'date': 'Fri, 22 Aug 2025 21:22:38 GMT', 'server': 'Apache', 'vary': 'Accept-Encoding', 'x-slack-req-id': '0ccc2601cd2ce76f9ff9a9654b77f7b6', 'x-content-type-options': 'nosniff', 'x-xss-protection': '0', 'pragma': 'no-cache', 'cache-control': 'private, no-cache, no-store, must-revalidate', 'expires': 'Sat, 26 Jul 1997 05:00:00 GMT', 'content-type': 'application/json; charset=utf-8', 'x-accepted-oauth-scopes': 'users:read', 'x-oauth-scopes': 'app_mentions:read,channels:history,chat:write,im:history,im:read,im:write,users:read,reactions:write,users:read.email', 'access-control-expose-headers': 'x-slack-req-id, retry-after', 'access-control-allow-headers': 'slack-route, x-slack-version-ts, x-b3-traceid, x-b3-spanid, x-b3-parentspanid, x-b3-sampled, x-b3-flags', 'strict-transport-security': 'max-age=31536000; includeSubDomains; preload', 'referrer-policy': 'no-referrer', 'x-slack-unique-id': 'aKjfnibaUISnkg5HJhyjIAAAABQ', 'x-slack-backend': 'r', 'access-control-allow-origin': '*', 'content-length': '2057', 'via': '1.1 slack-prod.tinyspeck.com, envoy-www-iad-qhdynhhn,envoy-edge-pdx-ibvlzdbs', 'x-envoy-attempt-count': '1', 'x-envoy-upstream-service-time': '88', 'x-backend': 'main_normal main_canary_with_overflow main_control_with_overflow', 'x-server': 'slack-www-hhvm-main-iad-dndu', 'x-slack-shared-secret-outcome': 'no-match', 'x-edge-backend': 'envoy-www', 'timing-allow-origin': '*', 'x-slack-edge-shared-secret-outcome': 'no-match', 'connection': 'close'}, body: {"ok":true,"user":{"id":"U01RMTFMALF","name":"popov8533","is_bot":false,"updated":1755891346,"is_app_user":false,"team_id":"T010QS7UQNA","deleted":false,"color":"4bbe2e","is_email_confirmed":true,"real_name":"Alexandr Popov","tz":"America\/Los_Angeles","tz_label":"Pacific Daylight Time","tz_offset":-25200,"is_admin":false,"is_owner":false,"is_primary_owner":false,"is_restricted":false,"is_ultra_restricted":false,"enterprise_user":{"id":"U01RMTFMALF","enterprise_id":"ERV4P7NAD","enterprise_name":"Paramount Global","is_admin":false,"is_owner":false,"is_primary_owner":false,"teams":["T010QS7UQNA","T02H1PQMF"]},"who_can_share_contact_card":"EVERYONE","profile":{"real_name":"Alexandr Popov","display_name":"Alex Popov","avatar_hash":"a64f82312a14","real_name_normalized":"Alexandr Popov","display_name_normalized":"Alex Popov","image_24":"https:\/\/avatars.slack-edge.com\/2023-03-29\/5033076824964_a64f82312a141123fbbf_24.png","image_32":"https:\/\/avatars.slack-edge.com\/2023-03-29\/5033076824964_a64f82312a141123fbbf_32.png","image_48":"https:\/\/avatars.slack-edge.com\/2023-03-29\/5033076824964_a64f82312a141123fbbf_48.png","image_72":"https:\/\/avatars.slack-edge.com\/2023-03-29\/5033076824964_a64f82312a141123fbbf_72.png","image_192":"https:\/\/avatars.slack-edge.com\/2023-03-29\/5033076824964_a64f82312a141123fbbf_192.png","image_512":"https:\/\/avatars.slack-edge.com\/2023-03-29\/5033076824964_a64f82312a141123fbbf_512.png","image_1024":"https:\/\/avatars.slack-edge.com\/2023-03-29\/5033076824964_a64f82312a141123fbbf_1024.png","image_original":"https:\/\/avatars.slack-edge.com\/2023-03-29\/5033076824964_a64f82312a141123fbbf_original.png","is_custom_image":true,"first_name":"Alexandr","last_name":"Popov","team":"T010QS7UQNA","email":"alexandr.popov@paramount.com","title":"Senior Software Quality Assurance Engineer","phone":"","skype":"","status_text":"","status_text_canonical":"","status_emoji":"","status_emoji_display_info":[],"status_expiration":0,"huddle_state":"default_unset","huddle_state_expiration_ts":0,"ooo_message":""}}}
2025-08-22 14:22:38,417 - auth.slack_user_info - DEBUG - [slack_user_info.py:63] - Retrieved email for user U01RMTFMALF: alexandr.popov@paramount.com
2025-08-22 14:22:38,417 - auth.email_whitelist - DEBUG - [email_whitelist.py:57] - Email access granted: alexandr.popov@paramount.com
2025-08-22 14:22:38,417 - __main__ - INFO - [main.py:118] - Access granted to user U01RMTFMALF with email alexandr.popov@paramount.com
2025-08-22 14:22:38,417 - __main__ - DEBUG - [main.py:528] - User access check passed for DM
2025-08-22 14:22:38,417 - __main__ - INFO - [main.py:530] - Processing DM question from user U01RMTFMALF: How can i run an automated test on a local Android phone?
2025-08-22 14:22:38,418 - __main__ - DEBUG - [main.py:533] - Starting DM processing...
2025-08-22 14:22:38,418 - __main__ - DEBUG - [main.py:536] - Checking if 'how can i run an automated test on a local android phone?' is an admin command in DM
2025-08-22 14:22:38,418 - __main__ - DEBUG - [main.py:572] - Checking if DM thread is already being processed...
2025-08-22 14:22:38,418 - utils - DEBUG - [utils.py:67] - Managing thread: D09A0LFHK8R:1755897757.125359, action: add, user: U01RMTFMALF
2025-08-22 14:22:38,418 - utils - INFO - [utils.py:94] - Added thread D09A0LFHK8R:1755897757.125359 to active tracking (total: 1)
2025-08-22 14:22:38,418 - __main__ - DEBUG - [main.py:577] - DM thread management check passed
2025-08-22 14:22:38,419 - slack_sdk.web.base_client - DEBUG - [base_client.py:255] - Sending a request - url: https://slack.com/api/reactions.add, query_params: {}, body_params: {'channel': 'D09A0LFHK8R', 'name': 'thinking_face', 'timestamp': '1755897757.125359', 'team_id': 'T010QS7UQNA'}, files: {}, json_body: None, headers: {'Content-Type': 'application/x-www-form-urlencoded', 'Authorization': '(redacted)', 'User-Agent': 'Python/3.12.0 slackclient/3.34.0 Darwin/23.4.0'}
2025-08-22 14:22:38,784 - slack_sdk.web.base_client - DEBUG - [base_client.py:546] - Received the following response - status: 200, headers: {'date': 'Fri, 22 Aug 2025 21:22:38 GMT', 'server': 'Apache', 'vary': 'Accept-Encoding', 'x-slack-req-id': '615e1193faa33c935abcfc56193e2c0d', 'x-content-type-options': 'nosniff', 'x-xss-protection': '0', 'pragma': 'no-cache', 'cache-control': 'private, no-cache, no-store, must-revalidate', 'expires': 'Sat, 26 Jul 1997 05:00:00 GMT', 'content-type': 'application/json; charset=utf-8', 'x-accepted-oauth-scopes': 'reactions:write', 'x-oauth-scopes': 'app_mentions:read,channels:history,chat:write,im:history,im:read,im:write,users:read,reactions:write,users:read.email', 'access-control-expose-headers': 'x-slack-req-id, retry-after', 'access-control-allow-headers': 'slack-route, x-slack-version-ts, x-b3-traceid, x-b3-spanid, x-b3-parentspanid, x-b3-sampled, x-b3-flags', 'strict-transport-security': 'max-age=31536000; includeSubDomains; preload', 'referrer-policy': 'no-referrer', 'x-slack-unique-id': 'aKjfnlmDzhcu--7WXfWe9QAAADc', 'x-slack-backend': 'r', 'access-control-allow-origin': '*', 'content-length': '11', 'via': '1.1 slack-prod.tinyspeck.com, envoy-www-iad-zbjvcheh,envoy-edge-pdx-whddruqu', 'x-envoy-attempt-count': '1', 'x-envoy-upstream-service-time': '134', 'x-backend': 'main_normal main_canary_with_overflow main_control_with_overflow', 'x-server': 'slack-www-hhvm-main-iad-xasb', 'x-slack-shared-secret-outcome': 'no-match', 'x-edge-backend': 'envoy-www', 'timing-allow-origin': '*', 'x-slack-edge-shared-secret-outcome': 'no-match', 'connection': 'close'}, body: {"ok":true}
2025-08-22 14:22:38,785 - __main__ - INFO - [main.py:594] - Processing DM question from <@U01RMTFMALF>: How can i run an automated test on a local Android phone?
2025-08-22 14:22:38,786 - __main__ - INFO - [main.py:598] - Sending DM request to DIG AI...
2025-08-22 14:22:38,786 - dig_connector - INFO - [dig_connector.py:134] - Generating response for query: 'How can i run an automated test on a local Android phone?' with 0 chunks
2025-08-22 14:22:38,786 - dig_connector - DEBUG - [dig_connector.py:138] - Formatted context length: 0
2025-08-22 14:22:38,786 - dig_connector - INFO - [dig_connector.py:141] - No context available, using direct query
2025-08-22 14:22:38,786 - dig_connector - INFO - [dig_connector.py:150] - Sending prompt to DIG platform...
2025-08-22 14:22:38,786 - dig_connector - INFO - [dig_connector.py:121] - Sending message to DIG API - URL: https://ai.digdev.cbsicloud.com/fastapi/chats/887/generate
2025-08-22 14:22:38,786 - dig_connector - DEBUG - [dig_connector.py:122] - Message payload: {'model_id': 42, 'message_text': 'How can i run an automated test on a local Android phone?', 'history': [{'role': 'user', 'content': 'How can i run an automated test on a local Android phone?'}]}
2025-08-22 14:22:52,207 - urllib3.connectionpool - DEBUG - [connectionpool.py:549] - https://ai.digdev.cbsicloud.com:443 "POST /fastapi/chats/887/generate HTTP/1.1" 200 3932
2025-08-22 14:22:52,208 - dig_connector - DEBUG - [dig_connector.py:125] - DIG API response: status=200
2025-08-22 14:22:52,208 - dig_connector - DEBUG - [dig_connector.py:129] - DIG API response data: {'message_text': 'To run an automated test on a local Android phone, follow these steps:\n\n**1. Preliminary Setup**\n*   **Environment Variables**: Ensure that the `$ANDROID_HOME` environment variable is set and included in your system\'s path. (Source: `https://paramount.atlassian.net/wiki/spaces/PLQA/pages/47713566`)\n*   **VPN Connection**: Connect to the VPN at `connect.cbsinteractive.com/VPNFT`. (Source: `https://paramount.atlassian.net/wiki/spaces/PLQA/pages/47720266`)\n*   **Synergy Server**: Download the latest version of the Synergy server and run its `.jar` file (Websocket). (Source: `https://paramount.atlassian.net/wiki/spaces/PLQA/pages/47720266`)\n*   **Configuration File**: Update the desired capabilities in the `.config` file located in the `mqe-hob-mobile-tests` directory. Key parameters to set include:\n    *   `Platform=ANDROID`\n    *   `MobileDeviceCategory=PHONE`\n    *   `DeviceStartOrientation=PORTRAIT`\n    *   `DebugDeviceID`: Provide the device ID of your emulator (obtained by typing `adb devices` in the terminal) or the IP address if you are using a real device.\n    *   `ClientID`: This should be your machine\'s serial number for local executions or to target a specific private lab machine. (Source: `https://paramount.atlassian.net/wiki/spaces/PLQA/pages/47720266`)\n\n**2. Test Execution**\n\nTests can be run either from the terminal using Maven commands or through a TestNG suite configuration.\n\n**A. Running from Terminal:**\nUse the following Maven command, replacing `"Your test case number or tag"` with the appropriate identifier for your test:\n```bash\nmvn clean test -pl mqe-hob-mobile-tests -am -Dgroups="Your test case number or tag"\n```\n(Source: `https://paramount.atlassian.net/wiki/spaces/PLQA/pages/47720266`)\n\nYou can also pass specific configuration arguments with your Maven command for local Android runs:\n*   `-ea`\n*   `-Ddriver=android`\n*   `-DplatformName=Android`\n*   `-DplatformVersion=11.0` (replace with your Android version)\n*   `-DdeviceName="Google Pixel 2XL"` (replace with your device name)\n*   `-Denvironment=local`\n*   `-Dheadless=false`\n*   `-Dapp="/pathToPackage/mobile-8.0.44-210804410-3.5.25-paramountPlus-playStore-release.apk"` (replace with the actual path to your application package file)\n*   `-Dudid=set this if running on Real Mobile Device only`\n*   `-DbundleId=set to override default setting`\n(Source: `https://paramount.atlassian.net/wiki/spaces/PLQA/pages/47711460`)\n\n**B. Running from TestNGSuiteConfig.xml:**\n*   Navigate to the `TestNGSuiteConfig.xml` file.\n*   Right-click on the file and select "Run TestNGSuiteConfig.xml".\n*   Provide the necessary test case ID or tag name within the `<include name="" />` section of your configuration.\n(Source: `https://paramount.atlassian.net/wiki/spaces/PLQA/pages/47720266`)\n\n**3. Appium and Emulator Management**\n*   A `SampleTest.java` class is available that uses TestNG annotations to manage the Mobile Driver, start/stop the Appium server, and start/stop the Android Emulator.\n*   The Appium server can be started if the environment is set to "local" and the driver is "android".\n*   The Android emulator can also be launched when the environment is "local" and the driver is "android".\n(Source: `https://paramount.atlassian.net/wiki/spaces/PLQA/pages/47711460`)\n\n**Additional Resources:**\n*   **Android Studio Basics**: `https://developer.android.com/studio/intro` (Source: `https://paramount.atlassian.net/wiki/spaces/PLQA/pages/47722061`)\n*   **Android App Testing Fundamentals**: `https://developer.android.com/training/testing/fundamentals` (Source: `https://paramount.atlassian.net/wiki/spaces/PLQA/pages/47722061`)\n*   **Running Apps on Emulator**: `https://developer.android.com/studio/run/emulator` (Source: `https://paramount.atlassian.net/wiki/spaces/PLQA/pages/47722061`)', 'requires_approval': False, 'execution_id': 1590}
2025-08-22 14:22:52,209 - dig_connector - INFO - [dig_connector.py:154] - Extracting response content...
2025-08-22 14:22:52,209 - dig_connector - DEBUG - [dig_connector.py:221] - Found message_text in response
2025-08-22 14:22:52,209 - dig_connector - INFO - [dig_connector.py:157] - Successfully generated response (length: 3795)
2025-08-22 14:22:52,209 - __main__ - INFO - [main.py:601] - Received DM response from DIG AI
2025-08-22 14:22:52,209 - __main__ - DEBUG - [main.py:602] - DIG AI DM response: To run an automated test on a local Android phone, follow these steps:

**1. Preliminary Setup**
*   **Environment Variables**: Ensure that the `$ANDROID_HOME` environment variable is set and included in your system's path. (Source: `https://paramount.atlassian.net/wiki/spaces/PLQA/pages/47713566`)
*   **VPN Connection**: Connect to the VPN at `connect.cbsinteractive.com/VPNFT`. (Source: `https://paramount.atlassian.net/wiki/spaces/PLQA/pages/47720266`)
*   **Synergy Server**: Download the latest version of the Synergy server and run its `.jar` file (Websocket). (Source: `https://paramount.atlassian.net/wiki/spaces/PLQA/pages/47720266`)
*   **Configuration File**: Update the desired capabilities in the `.config` file located in the `mqe-hob-mobile-tests` directory. Key parameters to set include:
    *   `Platform=ANDROID`
    *   `MobileDeviceCategory=PHONE`
    *   `DeviceStartOrientation=PORTRAIT`
    *   `DebugDeviceID`: Provide the device ID of your emulator (obtained by typing `adb devices` in the terminal) or the IP address if you are using a real device.
    *   `ClientID`: This should be your machine's serial number for local executions or to target a specific private lab machine. (Source: `https://paramount.atlassian.net/wiki/spaces/PLQA/pages/47720266`)

**2. Test Execution**

Tests can be run either from the terminal using Maven commands or through a TestNG suite configuration.

**A. Running from Terminal:**
Use the following Maven command, replacing `"Your test case number or tag"` with the appropriate identifier for your test:
```bash
mvn clean test -pl mqe-hob-mobile-tests -am -Dgroups="Your test case number or tag"
```
(Source: `https://paramount.atlassian.net/wiki/spaces/PLQA/pages/47720266`)

You can also pass specific configuration arguments with your Maven command for local Android runs:
*   `-ea`
*   `-Ddriver=android`
*   `-DplatformName=Android`
*   `-DplatformVersion=11.0` (replace with your Android version)
*   `-DdeviceName="Google Pixel 2XL"` (replace with your device name)
*   `-Denvironment=local`
*   `-Dheadless=false`
*   `-Dapp="/pathToPackage/mobile-8.0.44-210804410-3.5.25-paramountPlus-playStore-release.apk"` (replace with the actual path to your application package file)
*   `-Dudid=set this if running on Real Mobile Device only`
*   `-DbundleId=set to override default setting`
(Source: `https://paramount.atlassian.net/wiki/spaces/PLQA/pages/47711460`)

**B. Running from TestNGSuiteConfig.xml:**
*   Navigate to the `TestNGSuiteConfig.xml` file.
*   Right-click on the file and select "Run TestNGSuiteConfig.xml".
*   Provide the necessary test case ID or tag name within the `<include name="" />` section of your configuration.
(Source: `https://paramount.atlassian.net/wiki/spaces/PLQA/pages/47720266`)

**3. Appium and Emulator Management**
*   A `SampleTest.java` class is available that uses TestNG annotations to manage the Mobile Driver, start/stop the Appium server, and start/stop the Android Emulator.
*   The Appium server can be started if the environment is set to "local" and the driver is "android".
*   The Android emulator can also be launched when the environment is "local" and the driver is "android".
(Source: `https://paramount.atlassian.net/wiki/spaces/PLQA/pages/47711460`)

**Additional Resources:**
*   **Android Studio Basics**: `https://developer.android.com/studio/intro` (Source: `https://paramount.atlassian.net/wiki/spaces/PLQA/pages/47722061`)
*   **Android App Testing Fundamentals**: `https://developer.android.com/training/testing/fundamentals` (Source: `https://paramount.atlassian.net/wiki/spaces/PLQA/pages/47722061`)
*   **Running Apps on Emulator**: `https://developer.android.com/studio/run/emulator` (Source: `https://paramount.atlassian.net/wiki/spaces/PLQA/pages/47722061`)
2025-08-22 14:22:52,212 - __main__ - DEBUG - [main.py:606] - Formatted DM response: *Your Question:*
> How can i run an automated test on a local Android phone?

*Answer:*
To run an automated test on a local Android phone, follow these steps:

*1. Preliminary Setup*
*   *Environment Variables*: Ensure that the `$ANDROID_HOME` environment variable is set and included in your system's path. (Source: `https://paramount.atlassian.net/wiki/spaces/PLQA/pages/47713566`)
*
*VPN Connection*: Connect to the VPN at `connect.cbsinteractive.com/VPNFT`. (Source: `https://paramount.atlassian.net/wiki/spaces/PLQA/pages/47720266`)
*
*Synergy Server*: Download the latest version of the Synergy server and run its `.jar` file (Websocket). (Source: `https://paramount.atlassian.net/wiki/spaces/PLQA/pages/47720266`)
*
*Configuration File*: Update the desired capabilities in the `.config` file located in the `mqe-hob-mobile-tests` directory. Key parameters to set include:
    *
`Platform=ANDROID`
    *
`MobileDeviceCategory=PHONE`
    *
`DeviceStartOrientation=PORTRAIT`
    *
`DebugDeviceID`: Provide the device ID of your emulator (obtained by typing `adb devices` in the terminal) or the IP address if you are using a real device.
    *
`ClientID`: This should be your machine's serial number for local executions or to target a specific private lab machine. (Source: `https://paramount.atlassian.net/wiki/spaces/PLQA/pages/47720266`)

*2. Test Execution*
Tests can be run either from the terminal using Maven commands or through a TestNG suite configuration.

*A. Running from Terminal:*
Use the following Maven command, replacing `"Your test case number or tag"` with the appropriate identifier for your test:
```bash
mvn clean test -pl mqe-hob-mobile-tests -am -Dgroups="Your test case number or tag"
```
(Source: `https://paramount.atlassian.net/wiki/spaces/PLQA/pages/47720266`)

You can also pass specific configuration arguments with your Maven command for local Android runs:
*
`-ea`
*
`-Ddriver=android`
*
`-DplatformName=Android`
*
`-DplatformVersion=11.0` (replace with your Android version)
*
`-DdeviceName="Google Pixel 2XL"` (replace with your device name)
*
`-Denvironment=local`
*
`-Dheadless=false`
*
`-Dapp="/pathToPackage/mobile-8.0.44-210804410-3.5.25-paramountPlus-playStore-release.apk"` (replace with the actual path to your application package file)
*
`-Dudid=set this if running on Real Mobile Device only`
*
`-DbundleId=set to override default setting`
(Source: `https://paramount.atlassian.net/wiki/spaces/PLQA/pages/47711460`)

*B. Running from TestNGSuiteConfig.xml:*
*   Navigate to the `TestNGSuiteConfig.xml` file.
*
Right-click on the file and select "Run TestNGSuiteConfig.xml".
*
Provide the necessary test case ID or tag name within the `<include name="" />` section of your configuration.
(Source: `https://paramount.atlassian.net/wiki/spaces/PLQA/pages/47720266`)

*3. Appium and Emulator Management*
*   A `SampleTest.java` class is available that uses TestNG annotations to manage the Mobile Driver, start/stop the Appium server, and start/stop the Android Emulator.
*
The Appium server can be started if the environment is set to "local" and the driver is "android".
*
The Android emulator can also be launched when the environment is "local" and the driver is "android".
(Source: `https://paramount.atlassian.net/wiki/spaces/PLQA/pages/47711460`)

*Additional Resources:*
*   *Android Studio Basics*: `https://developer.android.com/studio/intro` (Source: `https://paramount.atlassian.net/wiki/spaces/PLQA/pages/47722061`)
*
*Android App Testing Fundamentals*: `https://developer.android.com/training/testing/fundamentals` (Source: `https://paramount.atlassian.net/wiki/spaces/PLQA/pages/47722061`)
*
*Running Apps on Emulator*: `https://developer.android.com/studio/run/emulator` (Source: `https://paramount.atlassian.net/wiki/spaces/PLQA/pages/47722061`)

────────────────────────────────────────
*📚 Sources:*
1. https://paramount.atlassian.net/wiki/spaces/PLQA/pages/47713566
2. https://paramount.atlassian.net/wiki/spaces/PLQA/pages/47720266
3. https://paramount.atlassian.net/wiki/spaces/PLQA/pages/47711460
4. <https://developer.android.com/studio/intro|developer.android.com>
5. https://paramount.atlassian.net/wiki/spaces/PLQA/pages/47722061
6. <https://developer.android.com/training/testing/fundamentals|developer.android.com>
7. <https://developer.android.com/studio/run/emulator|developer.android.com>

2025-08-22 14:22:52,214 - slack_sdk.web.base_client - DEBUG - [base_client.py:255] - Sending a request - url: https://slack.com/api/reactions.remove, query_params: {}, body_params: {'name': 'thinking_face', 'channel': 'D09A0LFHK8R', 'timestamp': '1755897757.125359', 'team_id': 'T010QS7UQNA'}, files: {}, json_body: None, headers: {'Content-Type': 'application/x-www-form-urlencoded', 'Authorization': '(redacted)', 'User-Agent': 'Python/3.12.0 slackclient/3.34.0 Darwin/23.4.0'}
2025-08-22 14:22:52,556 - slack_sdk.web.base_client - DEBUG - [base_client.py:546] - Received the following response - status: 200, headers: {'date': 'Fri, 22 Aug 2025 21:22:52 GMT', 'server': 'Apache', 'vary': 'Accept-Encoding', 'x-slack-req-id': '1d2d021cf80bcbdfde76655093f974d7', 'x-content-type-options': 'nosniff', 'x-xss-protection': '0', 'pragma': 'no-cache', 'cache-control': 'private, no-cache, no-store, must-revalidate', 'expires': 'Sat, 26 Jul 1997 05:00:00 GMT', 'content-type': 'application/json; charset=utf-8', 'x-accepted-oauth-scopes': 'reactions:write', 'x-oauth-scopes': 'app_mentions:read,channels:history,chat:write,im:history,im:read,im:write,users:read,reactions:write,users:read.email', 'access-control-expose-headers': 'x-slack-req-id, retry-after', 'access-control-allow-headers': 'slack-route, x-slack-version-ts, x-b3-traceid, x-b3-spanid, x-b3-parentspanid, x-b3-sampled, x-b3-flags', 'strict-transport-security': 'max-age=31536000; includeSubDomains; preload', 'referrer-policy': 'no-referrer', 'x-slack-unique-id': 'aKjfrFT4c8EWszjV8PkbPwAAEBA', 'x-slack-backend': 'r', 'access-control-allow-origin': '*', 'content-length': '11', 'via': '1.1 slack-prod.tinyspeck.com, envoy-www-iad-cwpxemln,envoy-edge-pdx-evgzkskt', 'x-envoy-attempt-count': '1', 'x-envoy-upstream-service-time': '143', 'x-backend': 'main_normal main_canary_with_overflow main_control_with_overflow', 'x-server': 'slack-www-hhvm-main-iad-hvln', 'x-slack-shared-secret-outcome': 'no-match', 'x-edge-backend': 'envoy-www', 'timing-allow-origin': '*', 'x-slack-edge-shared-secret-outcome': 'no-match', 'connection': 'close'}, body: {"ok":true}
2025-08-22 14:22:52,582 - slack_sdk.web.base_client - DEBUG - [base_client.py:255] - Sending a request - url: https://slack.com/api/chat.postMessage, query_params: {}, body_params: {}, files: {}, json_body: {'channel': 'D09A0LFHK8R', 'text': '*Your Question:*\n> How can i run an automated test on a local Android phone? *Answer:*\nTo run an automated test on a local Android phone, follow these steps:\n\n*1. Preliminary Setup*\n*   *Environment Variables*: Ensure that the `$ANDROID_HOME` environment variable is set and included in your system\'s path. (Source: `https://paramount.atlassian.net/wiki/spaces/PLQA/pages/47713566`)\n*\n*VPN Connection*: Connect to the VPN at `connect.cbsinteractive.com/VPNFT`. (Source: `https://paramount.atlassian.net/wiki/spaces/PLQA/pages/47720266`)\n*\n*Synergy Server*: Download the latest version of the Synergy server and run its `.jar` file (Websocket). (Source: `https://paramount.atlassian.net/wiki/spaces/PLQA/pages/47720266`)\n*\n*Configuration File*: Update the desired capabilities in the `.config` file located in the `mqe-hob-mobile-tests` directory. Key parameters to set include:\n    *\n`Platform=ANDROID`\n    *\n`MobileDeviceCategory=PHONE`\n    *\n`DeviceStartOrientation=PORTRAIT`\n    *\n`DebugDeviceID`: Provide the device ID of your emulator (obtained by typing `adb devices` in the terminal) or the IP address if you are using a real device. *\n`ClientID`: This should be your machine\'s serial number for local executions or to target a specific private lab machine. (Source: `https://paramount.atlassian.net/wiki/spaces/PLQA/pages/47720266`)\n\n*2. Test Execution*\nTests can be run either from the terminal using Maven commands or through a TestNG suite configuration. *A. Running from Terminal:*\nUse the following Maven command, replacing `"Your test case number or tag"` with the appropriate identifier for your test:\n```bash\nmvn clean test -pl mqe-hob-mobile-tests -am -Dgroups="Your test case number or tag"\n```\n(Source: `https://paramount.atlassian.net/wiki/spaces/PLQA/pages/47720266`)\n\nYou can also pass specific configuration arguments with your Maven command for local Android runs:\n*\n`-ea`\n*\n`-Ddriver=android`\n*\n`-DplatformName=Android`\n*\n`-DplatformVersion=11.0` (replace with your Android version)\n*\n`-DdeviceName="Google Pixel 2XL"` (replace with your device name)\n*\n`-Denvironment=local`\n*\n`-Dheadless=false`\n*\n`-Dapp="/pathToPackage/mobile-8.0.44-210804410-3.5.25-paramountPlus-playStore-release.apk"` (replace with the actual path to your application package file)\n*\n`-Dudid=set this if running on Real Mobile Device only`\n*\n`-DbundleId=set to override default setting`\n(Source: `https://paramount.atlassian.net/wiki/spaces/PLQA/pages/47711460`)\n\n*B. Running from TestNGSuiteConfig.xml:*\n*   Navigate to the `TestNGSuiteConfig.xml` file. *\nRight-click on the file and select "Run TestNGSuiteConfig.xml". *\nProvide the necessary test case ID or tag name within the `<include name="" />` section of your configuration. (Source: `https://paramount.atlassian.net/wiki/spaces/PLQA/pages/47720266`)\n\n*3.\n\n_(message continued in thread...)_', 'thread_ts': '1755897757.125359', 'team_id': 'T010QS7UQNA'}, headers: {'Content-Type': 'application/json;charset=utf-8', 'Authorization': '(redacted)', 'User-Agent': 'Python/3.12.0 slackclient/3.34.0 Darwin/23.4.0'}
2025-08-22 14:22:53,007 - slack_sdk.web.base_client - DEBUG - [base_client.py:546] - Received the following response - status: 200, headers: {'date': 'Fri, 22 Aug 2025 21:22:52 GMT', 'server': 'Apache', 'vary': 'Accept-Encoding', 'x-slack-req-id': '151759efbf857082613ddc65298093ab', 'x-content-type-options': 'nosniff', 'x-xss-protection': '0', 'pragma': 'no-cache', 'cache-control': 'private, no-cache, no-store, must-revalidate', 'expires': 'Sat, 26 Jul 1997 05:00:00 GMT', 'content-type': 'application/json; charset=utf-8', 'x-accepted-oauth-scopes': 'chat:write', 'x-oauth-scopes': 'app_mentions:read,channels:history,chat:write,im:history,im:read,im:write,users:read,reactions:write,users:read.email', 'access-control-expose-headers': 'x-slack-req-id, retry-after', 'access-control-allow-headers': 'slack-route, x-slack-version-ts, x-b3-traceid, x-b3-spanid, x-b3-parentspanid, x-b3-sampled, x-b3-flags', 'strict-transport-security': 'max-age=31536000; includeSubDomains; preload', 'referrer-policy': 'no-referrer', 'x-slack-unique-id': 'aKjfrGuq4g3z9wSwAR81FAAAAAU', 'x-slack-backend': 'r', 'access-control-allow-origin': '*', 'content-length': '9777', 'via': '1.1 slack-prod.tinyspeck.com, envoy-www-iad-iwutkvci,envoy-edge-pdx-vsjukqce', 'x-envoy-attempt-count': '1', 'x-envoy-upstream-service-time': '197', 'x-backend': 'main_normal main_canary_with_overflow main_control_with_overflow', 'x-server': 'slack-www-hhvm-main-iad-egso', 'x-slack-shared-secret-outcome': 'no-match', 'x-edge-backend': 'envoy-www', 'timing-allow-origin': '*', 'x-slack-edge-shared-secret-outcome': 'no-match', 'connection': 'close'}, body: {"ok":true,"channel":"D09A0LFHK8R","ts":"1755897772.929319","message":{"user":"U099R6WTZ9S","type":"message","ts":"1755897772.929319","bot_id":"B099R6WTRU4","app_id":"A099LACAB2R","text":"*Your Question:*\n&gt; How can i run an automated test on a local Android phone? *Answer:*\nTo run an automated test on a local Android phone, follow these steps:\n\n*1. Preliminary Setup*\n*   *Environment Variables*: Ensure that the `$ANDROID_HOME` environment variable is set and included in your system's path. (Source: `<https://paramount.atlassian.net/wiki/spaces/PLQA/pages/47713566`>)\n*\n*VPN Connection*: Connect to the VPN at `<http://connect.cbsinteractive.com/VPNFT|connect.cbsinteractive.com/VPNFT>`. (Source: `<https://paramount.atlassian.net/wiki/spaces/PLQA/pages/47720266`>)\n*\n*Synergy Server*: Download the latest version of the Synergy server and run its `.jar` file (Websocket). (Source: `<https://paramount.atlassian.net/wiki/spaces/PLQA/pages/47720266`>)\n*\n*Configuration File*: Update the desired capabilities in the `.config` file located in the `mqe-hob-mobile-tests` directory. Key parameters to set include:\n    *\n`Platform=ANDROID`\n    *\n`MobileDeviceCategory=PHONE`\n    *\n`DeviceStartOrientation=PORTRAIT`\n    *\n`DebugDeviceID`: Provide the device ID of your emulator (obtained by typing `adb devices` in the terminal) or the IP address if you are using a real device. *\n`ClientID`: This should be your machine's serial number for local executions or to target a specific private lab machine. (Source: `<https://paramount.atlassian.net/wiki/spaces/PLQA/pages/47720266`>)\n\n*2. Test Execution*\nTests can be run either from the terminal using Maven commands or through a TestNG suite configuration. *A. Running from Terminal:*\nUse the following Maven command, replacing `\"Your test case number or tag\"` with the appropriate identifier for your test:\n```bash\nmvn clean test -pl mqe-hob-mobile-tests -am -Dgroups=\"Your test case number or tag\"\n```\n(Source: `<https://paramount.atlassian.net/wiki/spaces/PLQA/pages/47720266`>)\n\nYou can also pass specific configuration arguments with your Maven command for local Android runs:\n*\n`-ea`\n*\n`-Ddriver=android`\n*\n`-DplatformName=Android`\n*\n`-DplatformVersion=11.0` (replace with your Android version)\n*\n`-DdeviceName=\"Google Pixel 2XL\"` (replace with your device name)\n*\n`-Denvironment=local`\n*\n`-Dheadless=false`\n*\n`-Dapp=\"/pathToPackage/mobile-8.0.44-210804410-3.5.25-paramountPlus-playStore-release.apk\"` (replace with the actual path to your application package file)\n*\n`-Dudid=set this if running on Real Mobile Device only`\n*\n`-DbundleId=set to override default setting`\n(Source: `<https://paramount.atlassian.net/wiki/spaces/PLQA/pages/47711460`>)\n\n*B. Running from TestNGSuiteConfig.xml:*\n*   Navigate to the `TestNGSuiteConfig.xml` file. *\nRight-click on the file and select \"Run TestNGSuiteConfig.xml\". *\nProvide the necessary test case ID or tag name within the `&lt;include name=\"\" /&gt;` section of your configuration. (Source: `<https://paramount.atlassian.net/wiki/spaces/PLQA/pages/47720266`>)\n\n*3.\n\n_(message continued in thread...)_","team":"T010QS7UQNA","bot_profile":{"id":"B099R6WTRU4","app_id":"A099LACAB2R","user_id":"U099R6WTZ9S","name":"AutoBot","icons":{"image_36":"https://a.slack-edge.com/80588/img/plugins/app/bot_36.png","image_48":"https://a.slack-edge.com/80588/img/plugins/app/bot_48.png","image_72":"https://a.slack-edge.com/80588/img/plugins/app/service_72.png"},"deleted":false,"updated":1754677948,"team_id":"T010QS7UQNA"},"thread_ts":"1755897757.125359","parent_user_id":"U01RMTFMALF","blocks":[{"type":"rich_text","block_id":"UEE","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Your Question:","style":{"bold":true}}]},{"type":"rich_text_quote","elements":[{"type":"text","text":"How can i run an automated test on a local Android phone? "},{"type":"text","text":"Answer:","style":{"bold":true}}]},{"type":"rich_text_section","elements":[{"type":"text","text":"To run an automated test on a local Android phone, follow these steps:\n\n"},{"type":"text","text":"1. Preliminary Setup","style":{"bold":true}},{"type":"text","text":"\n*   "},{"type":"text","text":"Environment Variables","style":{"bold":true}},{"type":"text","text":": Ensure that the "},{"type":"text","text":"$ANDROID_HOME","style":{"code":true}},{"type":"text","text":" environment variable is set and included in your system's path. (Source: `"},{"type":"link","url":"https://paramount.atlassian.net/wiki/spaces/PLQA/pages/47713566`"},{"type":"text","text":")\n*\n"},{"type":"text","text":"VPN Connection","style":{"bold":true}},{"type":"text","text":": Connect to the VPN at "},{"type":"link","url":"http://connect.cbsinteractive.com/VPNFT","text":"connect.cbsinteractive.com/VPNFT","style":{"code":true}},{"type":"text","text":". (Source: `"},{"type":"link","url":"https://paramount.atlassian.net/wiki/spaces/PLQA/pages/47720266`"},{"type":"text","text":")\n*\n"},{"type":"text","text":"Synergy Server","style":{"bold":true}},{"type":"text","text":": Download the latest version of the Synergy server and run its "},{"type":"text","text":".jar","style":{"code":true}},{"type":"text","text":" file (Websocket). (Source: `"},{"type":"link","url":"https://paramount.atlassian.net/wiki/spaces/PLQA/pages/47720266`"},{"type":"text","text":")\n*\n"},{"type":"text","text":"Configuration File","style":{"bold":true}},{"type":"text","text":": Update the desired capabilities in the "},{"type":"text","text":".config","style":{"code":true}},{"type":"text","text":" file located in the "},{"type":"text","text":"mqe-hob-mobile-tests","style":{"code":true}},{"type":"text","text":" directory. Key parameters to set include:\n    *\n"},{"type":"text","text":"Platform=ANDROID","style":{"code":true}},{"type":"text","text":"\n    *\n"},{"type":"text","text":"MobileDeviceCategory=PHONE","style":{"code":true}},{"type":"text","text":"\n    *\n"},{"type":"text","text":"DeviceStartOrientation=PORTRAIT","style":{"code":true}},{"type":"text","text":"\n    *\n"},{"type":"text","text":"DebugDeviceID","style":{"code":true}},{"type":"text","text":": Provide the device ID of your emulator (obtained by typing "},{"type":"text","text":"adb devices","style":{"code":true}},{"type":"text","text":" in the terminal) or the IP address if you are using a real device. *\n"},{"type":"text","text":"ClientID","style":{"code":true}},{"type":"text","text":": This should be your machine's serial number for local executions or to target a specific private lab machine. (Source: `"},{"type":"link","url":"https://paramount.atlassian.net/wiki/spaces/PLQA/pages/47720266`"},{"type":"text","text":")\n\n"},{"type":"text","text":"2. Test Execution","style":{"bold":true}},{"type":"text","text":"\nTests can be run either from the terminal using Maven commands or through a TestNG suite configuration. "},{"type":"text","text":"A. Running from Terminal:","style":{"bold":true}},{"type":"text","text":"\nUse the following Maven command, replacing "},{"type":"text","text":"\"Your test case number or tag\"","style":{"code":true}},{"type":"text","text":" with the appropriate identifier for your test:"}]},{"type":"rich_text_preformatted","elements":[{"type":"text","text":"bash\nmvn clean test -pl mqe-hob-mobile-tests -am -Dgroups=\"Your test case number or tag\"\n"}]},{"type":"rich_text_section","elements":[{"type":"text","text":"(Source: `"},{"type":"link","url":"https://paramount.atlassian.net/wiki/spaces/PLQA/pages/47720266`"},{"type":"text","text":")\n\nYou can also pass specific configuration arguments with your Maven command for local Android runs:\n*\n"},{"type":"text","text":"-ea","style":{"code":true}},{"type":"text","text":"\n*\n"},{"type":"text","text":"-Ddriver=android","style":{"code":true}},{"type":"text","text":"\n*\n"},{"type":"text","text":"-DplatformName=Android","style":{"code":true}},{"type":"text","text":"\n*\n"},{"type":"text","text":"-DplatformVersion=11.0","style":{"code":true}},{"type":"text","text":" (replace with your Android version)\n*\n"},{"type":"text","text":"-DdeviceName=\"Google Pixel 2XL\"","style":{"code":true}},{"type":"text","text":" (replace with your device name)\n*\n"},{"type":"text","text":"-Denvironment=local","style":{"code":true}},{"type":"text","text":"\n*\n"},{"type":"text","text":"-Dheadless=false","style":{"code":true}},{"type":"text","text":"\n*\n"},{"type":"text","text":"-Dapp=\"/pathToPackage/mobile-8.0.44-210804410-3.5.25-paramountPlus-playStore-release.apk\"","style":{"code":true}},{"type":"text","text":" (replace with the actual path to your application package file)\n*\n"},{"type":"text","text":"-Dudid=set this if running on Real Mobile Device only","style":{"code":true}},{"type":"text","text":"\n*\n"},{"type":"text","text":"-DbundleId=set to override default setting","style":{"code":true}},{"type":"text","text":"\n(Source: `"},{"type":"link","url":"https://paramount.atlassian.net/wiki/spaces/PLQA/pages/47711460`"},{"type":"text","text":")\n\n"},{"type":"text","text":"B. Running from TestNGSuiteConfig.xml:","style":{"bold":true}},{"type":"text","text":"\n*   Navigate to the "},{"type":"text","text":"TestNGSuiteConfig.xml","style":{"code":true}},{"type":"text","text":" file. *\nRight-click on the file and select \"Run TestNGSuiteConfig.xml\". *\nProvide the necessary test case ID or tag name within the "},{"type":"text","text":"<include name=\"\" />","style":{"code":true}},{"type":"text","text":" section of your configuration. (Source: `"},{"type":"link","url":"https://paramount.atlassian.net/wiki/spaces/PLQA/pages/47720266`"},{"type":"text","text":")\n\n*3.\n\n"},{"type":"text","text":"(message continued in thread...)","style":{"italic":true}}]}]}]}}
2025-08-22 14:22:53,010 - slack_sdk.web.base_client - DEBUG - [base_client.py:255] - Sending a request - url: https://slack.com/api/chat.postMessage, query_params: {}, body_params: {}, files: {}, json_body: {'channel': 'D09A0LFHK8R', 'text': '_(part 2/2)_\n\nAppium and Emulator Management*\n*   A `SampleTest.java` class is available that uses TestNG annotations to manage the Mobile Driver, start/stop the Appium server, and start/stop the Android Emulator. *\nThe Appium server can be started if the environment is set to "local" and the driver is "android". *\nThe Android emulator can also be launched when the environment is "local" and the driver is "android". (Source: `https://paramount.atlassian.net/wiki/spaces/PLQA/pages/47711460`)\n\n*Additional Resources:*\n*   *Android Studio Basics*: `https://developer.android.com/studio/intro` (Source: `https://paramount.atlassian.net/wiki/spaces/PLQA/pages/47722061`)\n*\n*Android App Testing Fundamentals*: `https://developer.android.com/training/testing/fundamentals` (Source: `https://paramount.atlassian.net/wiki/spaces/PLQA/pages/47722061`)\n*\n*Running Apps on Emulator*: `https://developer.android.com/studio/run/emulator` (Source: `https://paramount.atlassian.net/wiki/spaces/PLQA/pages/47722061`)\n\n────────────────────────────────────────\n*📚 Sources:*\n1. https://paramount.atlassian.net/wiki/spaces/PLQA/pages/47713566\n2. https://paramount.atlassian.net/wiki/spaces/PLQA/pages/47720266\n3. https://paramount.atlassian.net/wiki/spaces/PLQA/pages/47711460\n4. <https://developer.android.com/studio/intro|developer.android.com>\n5. https://paramount.atlassian.net/wiki/spaces/PLQA/pages/47722061\n6. <https://developer.android.com/training/testing/fundamentals|developer.android.com>\n7. <https://developer.android.com/studio/run/emulator|developer.android.com>', 'thread_ts': '1755897757.125359', 'team_id': 'T010QS7UQNA'}, headers: {'Content-Type': 'application/json;charset=utf-8', 'Authorization': '(redacted)', 'User-Agent': 'Python/3.12.0 slackclient/3.34.0 Darwin/23.4.0'}
2025-08-22 14:22:53,471 - slack_sdk.web.base_client - DEBUG - [base_client.py:546] - Received the following response - status: 200, headers: {'date': 'Fri, 22 Aug 2025 21:22:53 GMT', 'server': 'Apache', 'vary': 'Accept-Encoding', 'x-slack-req-id': 'f04842cec0868e92b2ea9554c7371843', 'x-content-type-options': 'nosniff', 'x-xss-protection': '0', 'pragma': 'no-cache', 'cache-control': 'private, no-cache, no-store, must-revalidate', 'expires': 'Sat, 26 Jul 1997 05:00:00 GMT', 'content-type': 'application/json; charset=utf-8', 'x-accepted-oauth-scopes': 'chat:write', 'x-oauth-scopes': 'app_mentions:read,channels:history,chat:write,im:history,im:read,im:write,users:read,reactions:write,users:read.email', 'access-control-expose-headers': 'x-slack-req-id, retry-after', 'access-control-allow-headers': 'slack-route, x-slack-version-ts, x-b3-traceid, x-b3-spanid, x-b3-parentspanid, x-b3-sampled, x-b3-flags', 'strict-transport-security': 'max-age=31536000; includeSubDomains; preload', 'referrer-policy': 'no-referrer', 'x-slack-unique-id': 'aKjfrf8UcsTX5otynfUoQgAAABs', 'x-slack-backend': 'r', 'access-control-allow-origin': '*', 'content-length': '5483', 'via': '1.1 slack-prod.tinyspeck.com, envoy-www-iad-gorvhbnw,envoy-edge-pdx-tdujdtju', 'x-envoy-attempt-count': '1', 'x-envoy-upstream-service-time': '225', 'x-backend': 'main_normal main_canary_with_overflow main_control_with_overflow', 'x-server': 'slack-www-hhvm-main-iad-gffr', 'x-slack-shared-secret-outcome': 'no-match', 'x-edge-backend': 'envoy-www', 'timing-allow-origin': '*', 'x-slack-edge-shared-secret-outcome': 'no-match', 'connection': 'close'}, body: {"ok":true,"channel":"D09A0LFHK8R","ts":"1755897773.379809","message":{"user":"U099R6WTZ9S","type":"message","ts":"1755897773.379809","bot_id":"B099R6WTRU4","app_id":"A099LACAB2R","text":"_(part 2/2)_\n\nAppium and Emulator Management*\n*   A `SampleTest.java` class is available that uses TestNG annotations to manage the Mobile Driver, start/stop the Appium server, and start/stop the Android Emulator. *\nThe Appium server can be started if the environment is set to \"local\" and the driver is \"android\". *\nThe Android emulator can also be launched when the environment is \"local\" and the driver is \"android\". (Source: `<https://paramount.atlassian.net/wiki/spaces/PLQA/pages/47711460`>)\n\n*Additional Resources:*\n*   *Android Studio Basics*: `<https://developer.android.com/studio/intro>` (Source: `<https://paramount.atlassian.net/wiki/spaces/PLQA/pages/47722061`>)\n*\n*Android App Testing Fundamentals*: `<https://developer.android.com/training/testing/fundamentals>` (Source: `<https://paramount.atlassian.net/wiki/spaces/PLQA/pages/47722061`>)\n*\n*Running Apps on Emulator*: `<https://developer.android.com/studio/run/emulator>` (Source: `<https://paramount.atlassian.net/wiki/spaces/PLQA/pages/47722061`>)\n\n────────────────────────────────────────\n*:books: Sources:*\n1. <https://paramount.atlassian.net/wiki/spaces/PLQA/pages/47713566>\n2. <https://paramount.atlassian.net/wiki/spaces/PLQA/pages/47720266>\n3. <https://paramount.atlassian.net/wiki/spaces/PLQA/pages/47711460>\n4. <https://developer.android.com/studio/intro|developer.android.com>\n5. <https://paramount.atlassian.net/wiki/spaces/PLQA/pages/47722061>\n6. <https://developer.android.com/training/testing/fundamentals|developer.android.com>\n7. <https://developer.android.com/studio/run/emulator|developer.android.com>","team":"T010QS7UQNA","bot_profile":{"id":"B099R6WTRU4","app_id":"A099LACAB2R","user_id":"U099R6WTZ9S","name":"AutoBot","icons":{"image_36":"https://a.slack-edge.com/80588/img/plugins/app/bot_36.png","image_48":"https://a.slack-edge.com/80588/img/plugins/app/bot_48.png","image_72":"https://a.slack-edge.com/80588/img/plugins/app/service_72.png"},"deleted":false,"updated":1754677948,"team_id":"T010QS7UQNA"},"thread_ts":"1755897757.125359","parent_user_id":"U01RMTFMALF","blocks":[{"type":"rich_text","block_id":"ja5k","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"(part 2/2)","style":{"italic":true}},{"type":"text","text":"\n\nAppium and Emulator Management*\n*   A "},{"type":"text","text":"SampleTest.java","style":{"code":true}},{"type":"text","text":" class is available that uses TestNG annotations to manage the Mobile Driver, start/stop the Appium server, and start/stop the Android Emulator. *\nThe Appium server can be started if the environment is set to \"local\" and the driver is \"android\". *\nThe Android emulator can also be launched when the environment is \"local\" and the driver is \"android\". (Source: `"},{"type":"link","url":"https://paramount.atlassian.net/wiki/spaces/PLQA/pages/47711460`"},{"type":"text","text":")\n\n"},{"type":"text","text":"Additional Resources:","style":{"bold":true}},{"type":"text","text":"\n*   "},{"type":"text","text":"Android Studio Basics","style":{"bold":true}},{"type":"text","text":": "},{"type":"link","url":"https://developer.android.com/studio/intro","style":{"code":true}},{"type":"text","text":" (Source: `"},{"type":"link","url":"https://paramount.atlassian.net/wiki/spaces/PLQA/pages/47722061`"},{"type":"text","text":")\n*\n"},{"type":"text","text":"Android App Testing Fundamentals","style":{"bold":true}},{"type":"text","text":": "},{"type":"link","url":"https://developer.android.com/training/testing/fundamentals","style":{"code":true}},{"type":"text","text":" (Source: `"},{"type":"link","url":"https://paramount.atlassian.net/wiki/spaces/PLQA/pages/47722061`"},{"type":"text","text":")\n*\n"},{"type":"text","text":"Running Apps on Emulator","style":{"bold":true}},{"type":"text","text":": "},{"type":"link","url":"https://developer.android.com/studio/run/emulator","style":{"code":true}},{"type":"text","text":" (Source: `"},{"type":"link","url":"https://paramount.atlassian.net/wiki/spaces/PLQA/pages/47722061`"},{"type":"text","text":")\n\n────────────────────────────────────────\n"},{"type":"emoji","name":"books","unicode":"1f4da","style":{"bold":true}},{"type":"text","text":" Sources:","style":{"bold":true}},{"type":"text","text":"\n1. "},{"type":"link","url":"https://paramount.atlassian.net/wiki/spaces/PLQA/pages/47713566"},{"type":"text","text":"\n2. "},{"type":"link","url":"https://paramount.atlassian.net/wiki/spaces/PLQA/pages/47720266"},{"type":"text","text":"\n3. "},{"type":"link","url":"https://paramount.atlassian.net/wiki/spaces/PLQA/pages/47711460"},{"type":"text","text":"\n4. "},{"type":"link","url":"https://developer.android.com/studio/intro","text":"developer.android.com"},{"type":"text","text":"\n5. "},{"type":"link","url":"https://paramount.atlassian.net/wiki/spaces/PLQA/pages/47722061"},{"type":"text","text":"\n6. "},{"type":"link","url":"https://developer.android.com/training/testing/fundamentals","text":"developer.android.com"},{"type":"text","text":"\n7. "},{"type":"link","url":"https://developer.android.com/studio/run/emulator","text":"developer.android.com"}]}]}]}}
2025-08-22 14:22:53,473 - __main__ - DEBUG - [main.py:631] - Cleaning up DM thread tracking...
2025-08-22 14:22:53,473 - utils - DEBUG - [utils.py:67] - Managing thread: D09A0LFHK8R:1755897757.125359, action: remove, user: U01RMTFMALF
2025-08-22 14:22:53,473 - utils - INFO - [utils.py:100] - Removed thread D09A0LFHK8R:1755897757.125359 from active tracking (remaining: 0)
2025-08-22 14:22:53,474 - slack_bolt.App - DEBUG - [client.py:235] - on_message invoked: (message: {"envelope_id":"1c9e3f5f-b682-4b00-8b60-29e2034613c8","payload":{"token":"yq71khZBCyJF1Ri2hG5aNqr5","team_id":"T010QS7UQNA","enterprise_id":"ERV4P7NAD","context_team_id":null,"context_enterprise_id":"ERV4P7NAD","api_app_id":"A099LACAB2R","event":{"user":"U099R6WTZ9S","type":"message","ts":"1755897772.929319","bot_id":"B099R6WTRU4","app_id":"A099LACAB2R","text":"*Your Question:*\n&gt; How can i run an automated test on a local Android phone? *Answer:*\nTo run an automated test on a local Android phone, follow these steps:\n\n*1. Preliminary Setup*\n*   *Environment Variables*: Ensure that the `$ANDROID_HOME` environment variable is set and included in your system's path. (Source: `<https:\/\/paramount.atlassian.net\/wiki\/spaces\/PLQA\/pages\/47713566`>)\n*\n*VPN Connection*: Connect to the VPN at `<http:\/\/connect.cbsinteractive.com\/VPNFT|connect.cbsinteractive.com\/VPNFT>`. (Source: `<https:\/\/paramount.atlassian.net\/wiki\/spaces\/PLQA\/pages\/47720266`>)\n*\n*Synergy Server*: Download the latest version of the Synergy server and run its `.jar` file (Websocket). (Source: `<https:\/\/paramount.atlassian.net\/wiki\/spaces\/PLQA\/pages\/47720266`>)\n*\n*Configuration File*: Update the desired capabilities in the `.config` file located in the `mqe-hob-mobile-tests` directory. Key parameters to set include:\n    *\n`Platform=ANDROID`\n    *\n`MobileDeviceCategory=PHONE`\n    *\n`DeviceStartOrientation=PORTRAIT`\n    *\n`DebugDeviceID`: Provide the device ID of your emulator (obtained by typing `adb devices` in the terminal) or the IP address if you are using a real device. *\n`ClientID`: This should be your machine's serial number for local executions or to target a specific private lab machine. (Source: `<https:\/\/paramount.atlassian.net\/wiki\/spaces\/PLQA\/pages\/47720266`>)\n\n*2. Test Execution*\nTests can be run either from the terminal using Maven commands or through a TestNG suite configuration. *A. Running from Terminal:*\nUse the following Maven command, replacing `\"Your test case number or tag\"` with the appropriate identifier for your test:\n```bash\nmvn clean test -pl mqe-hob-mobile-tests -am -Dgroups=\"Your test case number or tag\"\n```\n(Source: `<https:\/\/paramount.atlassian.net\/wiki\/spaces\/PLQA\/pages\/47720266`>)\n\nYou can also pass specific configuration arguments with your Maven command for local Android runs:\n*\n`-ea`\n*\n`-Ddriver=android`\n*\n`-DplatformName=Android`\n*\n`-DplatformVersion=11.0` (replace with your Android version)\n*\n`-DdeviceName=\"Google Pixel 2XL\"` (replace with your device name)\n*\n`-Denvironment=local`\n*\n`-Dheadless=false`\n*\n`-Dapp=\"\/pathToPackage\/mobile-8.0.44-210804410-3.5.25-paramountPlus-playStore-release.apk\"` (replace with the actual path to your application package file)\n*\n`-Dudid=set this if running on Real Mobile Device only`\n*\n`-DbundleId=set to override default setting`\n(Source: `<https:\/\/paramount.atlassian.net\/wiki\/spaces\/PLQA\/pages\/47711460`>)\n\n*B. Running from TestNGSuiteConfig.xml:*\n*   Navigate to the `TestNGSuiteConfig.xml` file. *\nRight-click on the file and select \"Run TestNGSuiteConfig.xml\". *\nProvide the necessary test case ID or tag name within the `&lt;include name=\"\" \/&gt;` section of your configuration. (Source: `<https:\/\/paramount.atlassian.net\/wiki\/spaces\/PLQA\/pages\/47720266`>)\n\n*3.\n\n_(message continued in thread...)_","team":"T010QS7UQNA","bot_profile":{"id":"B099R6WTRU4","deleted":false,"name":"AutoBot","updated":1754677948,"app_id":"A099LACAB2R","user_id":"U099R6WTZ9S","icons":{"image_36":"https:\/\/a.slack-edge.com\/80588\/img\/plugins\/app\/bot_36.png","image_48":"https:\/\/a.slack-edge.com\/80588\/img\/plugins\/app\/bot_48.png","image_72":"https:\/\/a.slack-edge.com\/80588\/img\/plugins\/app\/service_72.png"},"team_id":"T010QS7UQNA"},"thread_ts":"1755897757.125359","parent_user_id":"U01RMTFMALF","blocks":[{"type":"rich_text","block_id":"WwWg","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Your Question:","style":{"bold":true}}]},{"type":"rich_text_quote","elements":[{"type":"text","text":"How can i run an automated test on a local Android phone? "},{"type":"text","text":"Answer:","style":{"bold":true}}]},{"type":"rich_text_section","elements":[{"type":"text","text":"To run an automated test on a local Android phone, follow these steps:\n\n"},{"type":"text","text":"1. Preliminary Setup","style":{"bold":true}},{"type":"text","text":"\n*   "},{"type":"text","text":"Environment Variables","style":{"bold":true}},{"type":"text","text":": Ensure that the "},{"type":"text","text":"$ANDROID_HOME","style":{"code":true}},{"type":"text","text":" environment variable is set and included in your system's path. (Source: `"},{"type":"link","url":"https:\/\/paramount.atlassian.net\/wiki\/spaces\/PLQA\/pages\/47713566`"},{"type":"text","text":")\n*\n"},{"type":"text","text":"VPN Connection","style":{"bold":true}},{"type":"text","text":": Connect to the VPN at "},{"type":"link","url":"http:\/\/connect.cbsinteractive.com\/VPNFT","text":"connect.cbsinteractive.com\/VPNFT","style":{"code":true}},{"type":"text","text":". (Source: `"},{"type":"link","url":"https:\/\/paramount.atlassian.net\/wiki\/spaces\/PLQA\/pages\/47720266`"},{"type":"text","text":")\n*\n"},{"type":"text","text":"Synergy Server","style":{"bold":true}},{"type":"text","text":": Download the latest version of the Synergy server and run its "},{"type":"text","text":".jar","style":{"code":true}},{"type":"text","text":" file (Websocket). (Source: `"},{"type":"link","url":"https:\/\/paramount.atlassian.net\/wiki\/spaces\/PLQA\/pages\/47720266`"},{"type":"text","text":")\n*\n"},{"type":"text","text":"Configuration File","style":{"bold":true}},{"type":"text","text":": Update the desired capabilities in the "},{"type":"text","text":".config","style":{"code":true}},{"type":"text","text":" file located in the "},{"type":"text","text":"mqe-hob-mobile-tests","style":{"code":true}},{"type":"text","text":" directory. Key parameters to set include:\n    *\n"},{"type":"text","text":"Platform=ANDROID","style":{"code":true}},{"type":"text","text":"\n    *\n"},{"type":"text","text":"MobileDeviceCategory=PHONE","style":{"code":true}},{"type":"text","text":"\n    *\n"},{"type":"text","text":"DeviceStartOrientation=PORTRAIT","style":{"code":true}},{"type":"text","text":"\n    *\n"},{"type":"text","text":"DebugDeviceID","style":{"code":true}},{"type":"text","text":": Provide the device ID of your emulator (obtained by typing "},{"type":"text","text":"adb devices","style":{"code":true}},{"type":"text","text":" in the terminal) or the IP address if you are using a real device. *\n"},{"type":"text","text":"ClientID","style":{"code":true}},{"type":"text","text":": This should be your machine's serial number for local executions or to target a specific private lab machine. (Source: `"},{"type":"link","url":"https:\/\/paramount.atlassian.net\/wiki\/spaces\/PLQA\/pages\/47720266`"},{"type":"text","text":")\n\n"},{"type":"text","text":"2. Test Execution","style":{"bold":true}},{"type":"text","text":"\nTests can be run either from the terminal using Maven commands or through a TestNG suite configuration. "},{"type":"text","text":"A. Running from Terminal:","style":{"bold":true}},{"type":"text","text":"\nUse the following Maven command, replacing "},{"type":"text","text":"\"Your test case number or tag\"","style":{"code":true}},{"type":"text","text":" with the appropriate identifier for your test:"}]},{"type":"rich_text_preformatted","elements":[{"type":"text","text":"bash\nmvn clean test -pl mqe-hob-mobile-tests -am -Dgroups=\"Your test case number or tag\"\n"}]},{"type":"rich_text_section","elements":[{"type":"text","text":"(Source: `"},{"type":"link","url":"https:\/\/paramount.atlassian.net\/wiki\/spaces\/PLQA\/pages\/47720266`"},{"type":"text","text":")\n\nYou can also pass specific configuration arguments with your Maven command for local Android runs:\n*\n"},{"type":"text","text":"-ea","style":{"code":true}},{"type":"text","text":"\n*\n"},{"type":"text","text":"-Ddriver=android","style":{"code":true}},{"type":"text","text":"\n*\n"},{"type":"text","text":"-DplatformName=Android","style":{"code":true}},{"type":"text","text":"\n*\n"},{"type":"text","text":"-DplatformVersion=11.0","style":{"code":true}},{"type":"text","text":" (replace with your Android version)\n*\n"},{"type":"text","text":"-DdeviceName=\"Google Pixel 2XL\"","style":{"code":true}},{"type":"text","text":" (replace with your device name)\n*\n"},{"type":"text","text":"-Denvironment=local","style":{"code":true}},{"type":"text","text":"\n*\n"},{"type":"text","text":"-Dheadless=false","style":{"code":true}},{"type":"text","text":"\n*\n"},{"type":"text","text":"-Dapp=\"\/pathToPackage\/mobile-8.0.44-210804410-3.5.25-paramountPlus-playStore-release.apk\"","style":{"code":true}},{"type":"text","text":" (replace with the actual path to your application package file)\n*\n"},{"type":"text","text":"-Dudid=set this if running on Real Mobile Device only","style":{"code":true}},{"type":"text","text":"\n*\n"},{"type":"text","text":"-DbundleId=set to override default setting","style":{"code":true}},{"type":"text","text":"\n(Source: `"},{"type":"link","url":"https:\/\/paramount.atlassian.net\/wiki\/spaces\/PLQA\/pages\/47711460`"},{"type":"text","text":")\n\n"},{"type":"text","text":"B. Running from TestNGSuiteConfig.xml:","style":{"bold":true}},{"type":"text","text":"\n*   Navigate to the "},{"type":"text","text":"TestNGSuiteConfig.xml","style":{"code":true}},{"type":"text","text":" file. *\nRight-click on the file and select \"Run TestNGSuiteConfig.xml\". *\nProvide the necessary test case ID or tag name within the "},{"type":"text","text":"<include name=\"\" \/>","style":{"code":true}},{"type":"text","text":" section of your configuration. (Source: `"},{"type":"link","url":"https:\/\/paramount.atlassian.net\/wiki\/spaces\/PLQA\/pages\/47720266`"},{"type":"text","text":")\n\n*3.\n\n"},{"type":"text","text":"(message continued in thread...)","style":{"italic":true}}]}]}],"channel":"D09A0LFHK8R","event_ts":"1755897772.929319","channel_type":"im"},"type":"event_callback","event_id":"Ev09CGL48MC0","event_time":1755897772,"authorizations":[{"enterprise_id":"ERV4P7NAD","team_id":"T010QS7UQNA","user_id":"U099R6WTZ9S","is_bot":true,"is_enterprise_install":false}],"is_ext_shared_channel":false,"event_context":"4-eyJldCI6Im1lc3NhZ2UiLCJ0aWQiOiJUMDEwUVM3VVFOQSIsImFpZCI6IkEwOTlMQUNBQjJSIiwiY2lkIjoiRDA5QTBMRkhLOFIifQ"},"type":"events_api","accepts_response_payload":false,"retry_attempt":0,"retry_reason":""})
2025-08-22 14:22:53,474 - slack_bolt.App - DEBUG - [client.py:99] - A new message enqueued (current queue size: 1)
2025-08-22 14:22:53,474 - slack_bolt.App - DEBUG - [client.py:105] - A message dequeued (current queue size: 0)
2025-08-22 14:22:53,475 - slack_bolt.App - DEBUG - [client.py:125] - Message processing started (type: events_api, envelope_id: 1c9e3f5f-b682-4b00-8b60-29e2034613c8)
2025-08-22 14:22:53,475 - slack_bolt.App - DEBUG - [app.py:476] - Applying slack_bolt.middleware.ssl_check.ssl_check.SslCheck
2025-08-22 14:22:53,475 - slack_bolt.App - DEBUG - [app.py:476] - Applying slack_bolt.middleware.request_verification.request_verification.RequestVerification
2025-08-22 14:22:53,475 - slack_bolt.App - DEBUG - [app.py:476] - Applying slack_bolt.middleware.authorization.single_team_authorization.SingleTeamAuthorization
2025-08-22 14:22:53,476 - slack_bolt.App - DEBUG - [app.py:476] - Applying slack_bolt.middleware.ignoring_self_events.ignoring_self_events.IgnoringSelfEvents
2025-08-22 14:22:53,476 - slack_bolt.IgnoringSelfEvents - DEBUG - [ignoring_self_events.py:60] - Skipped self event: {'user': 'U099R6WTZ9S', 'type': 'message', 'ts': '1755897772.929319', 'bot_id': 'B099R6WTRU4', 'app_id': 'A099LACAB2R', 'text': '*Your Question:*\n&gt; How can i run an automated test on a local Android phone? *Answer:*\nTo run an automated test on a local Android phone, follow these steps:\n\n*1. Preliminary Setup*\n*   *Environment Variables*: Ensure that the `$ANDROID_HOME` environment variable is set and included in your system\'s path. (Source: `<https://paramount.atlassian.net/wiki/spaces/PLQA/pages/47713566`>)\n*\n*VPN Connection*: Connect to the VPN at `<http://connect.cbsinteractive.com/VPNFT|connect.cbsinteractive.com/VPNFT>`. (Source: `<https://paramount.atlassian.net/wiki/spaces/PLQA/pages/47720266`>)\n*\n*Synergy Server*: Download the latest version of the Synergy server and run its `.jar` file (Websocket). (Source: `<https://paramount.atlassian.net/wiki/spaces/PLQA/pages/47720266`>)\n*\n*Configuration File*: Update the desired capabilities in the `.config` file located in the `mqe-hob-mobile-tests` directory. Key parameters to set include:\n    *\n`Platform=ANDROID`\n    *\n`MobileDeviceCategory=PHONE`\n    *\n`DeviceStartOrientation=PORTRAIT`\n    *\n`DebugDeviceID`: Provide the device ID of your emulator (obtained by typing `adb devices` in the terminal) or the IP address if you are using a real device. *\n`ClientID`: This should be your machine\'s serial number for local executions or to target a specific private lab machine. (Source: `<https://paramount.atlassian.net/wiki/spaces/PLQA/pages/47720266`>)\n\n*2. Test Execution*\nTests can be run either from the terminal using Maven commands or through a TestNG suite configuration. *A. Running from Terminal:*\nUse the following Maven command, replacing `"Your test case number or tag"` with the appropriate identifier for your test:\n```bash\nmvn clean test -pl mqe-hob-mobile-tests -am -Dgroups="Your test case number or tag"\n```\n(Source: `<https://paramount.atlassian.net/wiki/spaces/PLQA/pages/47720266`>)\n\nYou can also pass specific configuration arguments with your Maven command for local Android runs:\n*\n`-ea`\n*\n`-Ddriver=android`\n*\n`-DplatformName=Android`\n*\n`-DplatformVersion=11.0` (replace with your Android version)\n*\n`-DdeviceName="Google Pixel 2XL"` (replace with your device name)\n*\n`-Denvironment=local`\n*\n`-Dheadless=false`\n*\n`-Dapp="/pathToPackage/mobile-8.0.44-210804410-3.5.25-paramountPlus-playStore-release.apk"` (replace with the actual path to your application package file)\n*\n`-Dudid=set this if running on Real Mobile Device only`\n*\n`-DbundleId=set to override default setting`\n(Source: `<https://paramount.atlassian.net/wiki/spaces/PLQA/pages/47711460`>)\n\n*B. Running from TestNGSuiteConfig.xml:*\n*   Navigate to the `TestNGSuiteConfig.xml` file. *\nRight-click on the file and select "Run TestNGSuiteConfig.xml". *\nProvide the necessary test case ID or tag name within the `&lt;include name="" /&gt;` section of your configuration. (Source: `<https://paramount.atlassian.net/wiki/spaces/PLQA/pages/47720266`>)\n\n*3.\n\n_(message continued in thread...)_', 'team': 'T010QS7UQNA', 'bot_profile': {'id': 'B099R6WTRU4', 'deleted': False, 'name': 'AutoBot', 'updated': 1754677948, 'app_id': 'A099LACAB2R', 'user_id': 'U099R6WTZ9S', 'icons': {'image_36': 'https://a.slack-edge.com/80588/img/plugins/app/bot_36.png', 'image_48': 'https://a.slack-edge.com/80588/img/plugins/app/bot_48.png', 'image_72': 'https://a.slack-edge.com/80588/img/plugins/app/service_72.png'}, 'team_id': 'T010QS7UQNA'}, 'thread_ts': '1755897757.125359', 'parent_user_id': 'U01RMTFMALF', 'blocks': [{'type': 'rich_text', 'block_id': 'WwWg', 'elements': [{'type': 'rich_text_section', 'elements': [{'type': 'text', 'text': 'Your Question:', 'style': {'bold': True}}]}, {'type': 'rich_text_quote', 'elements': [{'type': 'text', 'text': 'How can i run an automated test on a local Android phone? '}, {'type': 'text', 'text': 'Answer:', 'style': {'bold': True}}]}, {'type': 'rich_text_section', 'elements': [{'type': 'text', 'text': 'To run an automated test on a local Android phone, follow these steps:\n\n'}, {'type': 'text', 'text': '1. Preliminary Setup', 'style': {'bold': True}}, {'type': 'text', 'text': '\n*   '}, {'type': 'text', 'text': 'Environment Variables', 'style': {'bold': True}}, {'type': 'text', 'text': ': Ensure that the '}, {'type': 'text', 'text': '$ANDROID_HOME', 'style': {'code': True}}, {'type': 'text', 'text': " environment variable is set and included in your system's path. (Source: `"}, {'type': 'link', 'url': 'https://paramount.atlassian.net/wiki/spaces/PLQA/pages/47713566`'}, {'type': 'text', 'text': ')\n*\n'}, {'type': 'text', 'text': 'VPN Connection', 'style': {'bold': True}}, {'type': 'text', 'text': ': Connect to the VPN at '}, {'type': 'link', 'url': 'http://connect.cbsinteractive.com/VPNFT', 'text': 'connect.cbsinteractive.com/VPNFT', 'style': {'code': True}}, {'type': 'text', 'text': '. (Source: `'}, {'type': 'link', 'url': 'https://paramount.atlassian.net/wiki/spaces/PLQA/pages/47720266`'}, {'type': 'text', 'text': ')\n*\n'}, {'type': 'text', 'text': 'Synergy Server', 'style': {'bold': True}}, {'type': 'text', 'text': ': Download the latest version of the Synergy server and run its '}, {'type': 'text', 'text': '.jar', 'style': {'code': True}}, {'type': 'text', 'text': ' file (Websocket). (Source: `'}, {'type': 'link', 'url': 'https://paramount.atlassian.net/wiki/spaces/PLQA/pages/47720266`'}, {'type': 'text', 'text': ')\n*\n'}, {'type': 'text', 'text': 'Configuration File', 'style': {'bold': True}}, {'type': 'text', 'text': ': Update the desired capabilities in the '}, {'type': 'text', 'text': '.config', 'style': {'code': True}}, {'type': 'text', 'text': ' file located in the '}, {'type': 'text', 'text': 'mqe-hob-mobile-tests', 'style': {'code': True}}, {'type': 'text', 'text': ' directory. Key parameters to set include:\n    *\n'}, {'type': 'text', 'text': 'Platform=ANDROID', 'style': {'code': True}}, {'type': 'text', 'text': '\n    *\n'}, {'type': 'text', 'text': 'MobileDeviceCategory=PHONE', 'style': {'code': True}}, {'type': 'text', 'text': '\n    *\n'}, {'type': 'text', 'text': 'DeviceStartOrientation=PORTRAIT', 'style': {'code': True}}, {'type': 'text', 'text': '\n    *\n'}, {'type': 'text', 'text': 'DebugDeviceID', 'style': {'code': True}}, {'type': 'text', 'text': ': Provide the device ID of your emulator (obtained by typing '}, {'type': 'text', 'text': 'adb devices', 'style': {'code': True}}, {'type': 'text', 'text': ' in the terminal) or the IP address if you are using a real device. *\n'}, {'type': 'text', 'text': 'ClientID', 'style': {'code': True}}, {'type': 'text', 'text': ": This should be your machine's serial number for local executions or to target a specific private lab machine. (Source: `"}, {'type': 'link', 'url': 'https://paramount.atlassian.net/wiki/spaces/PLQA/pages/47720266`'}, {'type': 'text', 'text': ')\n\n'}, {'type': 'text', 'text': '2. Test Execution', 'style': {'bold': True}}, {'type': 'text', 'text': '\nTests can be run either from the terminal using Maven commands or through a TestNG suite configuration. '}, {'type': 'text', 'text': 'A. Running from Terminal:', 'style': {'bold': True}}, {'type': 'text', 'text': '\nUse the following Maven command, replacing '}, {'type': 'text', 'text': '"Your test case number or tag"', 'style': {'code': True}}, {'type': 'text', 'text': ' with the appropriate identifier for your test:'}]}, {'type': 'rich_text_preformatted', 'elements': [{'type': 'text', 'text': 'bash\nmvn clean test -pl mqe-hob-mobile-tests -am -Dgroups="Your test case number or tag"\n'}]}, {'type': 'rich_text_section', 'elements': [{'type': 'text', 'text': '(Source: `'}, {'type': 'link', 'url': 'https://paramount.atlassian.net/wiki/spaces/PLQA/pages/47720266`'}, {'type': 'text', 'text': ')\n\nYou can also pass specific configuration arguments with your Maven command for local Android runs:\n*\n'}, {'type': 'text', 'text': '-ea', 'style': {'code': True}}, {'type': 'text', 'text': '\n*\n'}, {'type': 'text', 'text': '-Ddriver=android', 'style': {'code': True}}, {'type': 'text', 'text': '\n*\n'}, {'type': 'text', 'text': '-DplatformName=Android', 'style': {'code': True}}, {'type': 'text', 'text': '\n*\n'}, {'type': 'text', 'text': '-DplatformVersion=11.0', 'style': {'code': True}}, {'type': 'text', 'text': ' (replace with your Android version)\n*\n'}, {'type': 'text', 'text': '-DdeviceName="Google Pixel 2XL"', 'style': {'code': True}}, {'type': 'text', 'text': ' (replace with your device name)\n*\n'}, {'type': 'text', 'text': '-Denvironment=local', 'style': {'code': True}}, {'type': 'text', 'text': '\n*\n'}, {'type': 'text', 'text': '-Dheadless=false', 'style': {'code': True}}, {'type': 'text', 'text': '\n*\n'}, {'type': 'text', 'text': '-Dapp="/pathToPackage/mobile-8.0.44-210804410-3.5.25-paramountPlus-playStore-release.apk"', 'style': {'code': True}}, {'type': 'text', 'text': ' (replace with the actual path to your application package file)\n*\n'}, {'type': 'text', 'text': '-Dudid=set this if running on Real Mobile Device only', 'style': {'code': True}}, {'type': 'text', 'text': '\n*\n'}, {'type': 'text', 'text': '-DbundleId=set to override default setting', 'style': {'code': True}}, {'type': 'text', 'text': '\n(Source: `'}, {'type': 'link', 'url': 'https://paramount.atlassian.net/wiki/spaces/PLQA/pages/47711460`'}, {'type': 'text', 'text': ')\n\n'}, {'type': 'text', 'text': 'B. Running from TestNGSuiteConfig.xml:', 'style': {'bold': True}}, {'type': 'text', 'text': '\n*   Navigate to the '}, {'type': 'text', 'text': 'TestNGSuiteConfig.xml', 'style': {'code': True}}, {'type': 'text', 'text': ' file. *\nRight-click on the file and select "Run TestNGSuiteConfig.xml". *\nProvide the necessary test case ID or tag name within the '}, {'type': 'text', 'text': '<include name="" />', 'style': {'code': True}}, {'type': 'text', 'text': ' section of your configuration. (Source: `'}, {'type': 'link', 'url': 'https://paramount.atlassian.net/wiki/spaces/PLQA/pages/47720266`'}, {'type': 'text', 'text': ')\n\n*3.\n\n'}, {'type': 'text', 'text': '(message continued in thread...)', 'style': {'italic': True}}]}]}], 'channel': 'D09A0LFHK8R', 'event_ts': '1755897772.929319', 'channel_type': 'im'}
2025-08-22 14:22:53,478 - slack_bolt.App - DEBUG - [client.py:200] - Sending a message (session id: dd816a8d-6996-4a1a-a189-5d8c5dc03d03, message: {"envelope_id": "1c9e3f5f-b682-4b00-8b60-29e2034613c8"})
2025-08-22 14:22:53,479 - slack_bolt.App - DEBUG - [internals.py:41] - Response time: 3 milliseconds
2025-08-22 14:22:53,479 - slack_bolt.App - DEBUG - [client.py:150] - Message processing completed (type: events_api, envelope_id: 1c9e3f5f-b682-4b00-8b60-29e2034613c8)
2025-08-22 14:22:54,580 - slack_bolt.App - DEBUG - [client.py:235] - on_message invoked: (message: {"envelope_id":"3fc7f4f9-d5e1-4bb6-956f-78abf8543d15","payload":{"token":"yq71khZBCyJF1Ri2hG5aNqr5","team_id":"T010QS7UQNA","enterprise_id":"ERV4P7NAD","context_team_id":null,"context_enterprise_id":"ERV4P7NAD","api_app_id":"A099LACAB2R","event":{"user":"U099R6WTZ9S","type":"message","ts":"1755897773.379809","bot_id":"B099R6WTRU4","app_id":"A099LACAB2R","text":"_(part 2\/2)_\n\nAppium and Emulator Management*\n*   A `SampleTest.java` class is available that uses TestNG annotations to manage the Mobile Driver, start\/stop the Appium server, and start\/stop the Android Emulator. *\nThe Appium server can be started if the environment is set to \"local\" and the driver is \"android\". *\nThe Android emulator can also be launched when the environment is \"local\" and the driver is \"android\". (Source: `<https:\/\/paramount.atlassian.net\/wiki\/spaces\/PLQA\/pages\/47711460`>)\n\n*Additional Resources:*\n*   *Android Studio Basics*: `<https:\/\/developer.android.com\/studio\/intro>` (Source: `<https:\/\/paramount.atlassian.net\/wiki\/spaces\/PLQA\/pages\/47722061`>)\n*\n*Android App Testing Fundamentals*: `<https:\/\/developer.android.com\/training\/testing\/fundamentals>` (Source: `<https:\/\/paramount.atlassian.net\/wiki\/spaces\/PLQA\/pages\/47722061`>)\n*\n*Running Apps on Emulator*: `<https:\/\/developer.android.com\/studio\/run\/emulator>` (Source: `<https:\/\/paramount.atlassian.net\/wiki\/spaces\/PLQA\/pages\/47722061`>)\n\n\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\n*:books: Sources:*\n1. <https:\/\/paramount.atlassian.net\/wiki\/spaces\/PLQA\/pages\/47713566>\n2. <https:\/\/paramount.atlassian.net\/wiki\/spaces\/PLQA\/pages\/47720266>\n3. <https:\/\/paramount.atlassian.net\/wiki\/spaces\/PLQA\/pages\/47711460>\n4. <https:\/\/developer.android.com\/studio\/intro|developer.android.com>\n5. <https:\/\/paramount.atlassian.net\/wiki\/spaces\/PLQA\/pages\/47722061>\n6. <https:\/\/developer.android.com\/training\/testing\/fundamentals|developer.android.com>\n7. <https:\/\/developer.android.com\/studio\/run\/emulator|developer.android.com>","team":"T010QS7UQNA","bot_profile":{"id":"B099R6WTRU4","deleted":false,"name":"AutoBot","updated":1754677948,"app_id":"A099LACAB2R","user_id":"U099R6WTZ9S","icons":{"image_36":"https:\/\/a.slack-edge.com\/80588\/img\/plugins\/app\/bot_36.png","image_48":"https:\/\/a.slack-edge.com\/80588\/img\/plugins\/app\/bot_48.png","image_72":"https:\/\/a.slack-edge.com\/80588\/img\/plugins\/app\/service_72.png"},"team_id":"T010QS7UQNA"},"thread_ts":"1755897757.125359","parent_user_id":"U01RMTFMALF","blocks":[{"type":"rich_text","block_id":"8\/6d","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"(part 2\/2)","style":{"italic":true}},{"type":"text","text":"\n\nAppium and Emulator Management*\n*   A "},{"type":"text","text":"SampleTest.java","style":{"code":true}},{"type":"text","text":" class is available that uses TestNG annotations to manage the Mobile Driver, start\/stop the Appium server, and start\/stop the Android Emulator. *\nThe Appium server can be started if the environment is set to \"local\" and the driver is \"android\". *\nThe Android emulator can also be launched when the environment is \"local\" and the driver is \"android\". (Source: `"},{"type":"link","url":"https:\/\/paramount.atlassian.net\/wiki\/spaces\/PLQA\/pages\/47711460`"},{"type":"text","text":")\n\n"},{"type":"text","text":"Additional Resources:","style":{"bold":true}},{"type":"text","text":"\n*   "},{"type":"text","text":"Android Studio Basics","style":{"bold":true}},{"type":"text","text":": "},{"type":"link","url":"https:\/\/developer.android.com\/studio\/intro","style":{"code":true}},{"type":"text","text":" (Source: `"},{"type":"link","url":"https:\/\/paramount.atlassian.net\/wiki\/spaces\/PLQA\/pages\/47722061`"},{"type":"text","text":")\n*\n"},{"type":"text","text":"Android App Testing Fundamentals","style":{"bold":true}},{"type":"text","text":": "},{"type":"link","url":"https:\/\/developer.android.com\/training\/testing\/fundamentals","style":{"code":true}},{"type":"text","text":" (Source: `"},{"type":"link","url":"https:\/\/paramount.atlassian.net\/wiki\/spaces\/PLQA\/pages\/47722061`"},{"type":"text","text":")\n*\n"},{"type":"text","text":"Running Apps on Emulator","style":{"bold":true}},{"type":"text","text":": "},{"type":"link","url":"https:\/\/developer.android.com\/studio\/run\/emulator","style":{"code":true}},{"type":"text","text":" (Source: `"},{"type":"link","url":"https:\/\/paramount.atlassian.net\/wiki\/spaces\/PLQA\/pages\/47722061`"},{"type":"text","text":")\n\n\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\n"},{"type":"emoji","name":"books","unicode":"1f4da","style":{"bold":true}},{"type":"text","text":" Sources:","style":{"bold":true}},{"type":"text","text":"\n1. "},{"type":"link","url":"https:\/\/paramount.atlassian.net\/wiki\/spaces\/PLQA\/pages\/47713566"},{"type":"text","text":"\n2. "},{"type":"link","url":"https:\/\/paramount.atlassian.net\/wiki\/spaces\/PLQA\/pages\/47720266"},{"type":"text","text":"\n3. "},{"type":"link","url":"https:\/\/paramount.atlassian.net\/wiki\/spaces\/PLQA\/pages\/47711460"},{"type":"text","text":"\n4. "},{"type":"link","url":"https:\/\/developer.android.com\/studio\/intro","text":"developer.android.com"},{"type":"text","text":"\n5. "},{"type":"link","url":"https:\/\/paramount.atlassian.net\/wiki\/spaces\/PLQA\/pages\/47722061"},{"type":"text","text":"\n6. "},{"type":"link","url":"https:\/\/developer.android.com\/training\/testing\/fundamentals","text":"developer.android.com"},{"type":"text","text":"\n7. "},{"type":"link","url":"https:\/\/developer.android.com\/studio\/run\/emulator","text":"developer.android.com"}]}]}],"channel":"D09A0LFHK8R","event_ts":"1755897773.379809","channel_type":"im"},"type":"event_callback","event_id":"Ev09BJ8ES54K","event_time":1755897773,"authorizations":[{"enterprise_id":"ERV4P7NAD","team_id":"T010QS7UQNA","user_id":"U099R6WTZ9S","is_bot":true,"is_enterprise_install":false}],"is_ext_shared_channel":false,"event_context":"4-eyJldCI6Im1lc3NhZ2UiLCJ0aWQiOiJUMDEwUVM3VVFOQSIsImFpZCI6IkEwOTlMQUNBQjJSIiwiY2lkIjoiRDA5QTBMRkhLOFIifQ"},"type":"events_api","accepts_response_payload":false,"retry_attempt":0,"retry_reason":""})
2025-08-22 14:22:54,581 - slack_bolt.App - DEBUG - [client.py:99] - A new message enqueued (current queue size: 1)
2025-08-22 14:22:54,581 - slack_bolt.App - DEBUG - [client.py:105] - A message dequeued (current queue size: 0)
2025-08-22 14:22:54,582 - slack_bolt.App - DEBUG - [client.py:125] - Message processing started (type: events_api, envelope_id: 3fc7f4f9-d5e1-4bb6-956f-78abf8543d15)
2025-08-22 14:22:54,582 - slack_bolt.App - DEBUG - [app.py:476] - Applying slack_bolt.middleware.ssl_check.ssl_check.SslCheck
2025-08-22 14:22:54,582 - slack_bolt.App - DEBUG - [app.py:476] - Applying slack_bolt.middleware.request_verification.request_verification.RequestVerification
2025-08-22 14:22:54,583 - slack_bolt.App - DEBUG - [app.py:476] - Applying slack_bolt.middleware.authorization.single_team_authorization.SingleTeamAuthorization
2025-08-22 14:22:54,583 - slack_bolt.App - DEBUG - [app.py:476] - Applying slack_bolt.middleware.ignoring_self_events.ignoring_self_events.IgnoringSelfEvents
2025-08-22 14:22:54,583 - slack_bolt.IgnoringSelfEvents - DEBUG - [ignoring_self_events.py:60] - Skipped self event: {'user': 'U099R6WTZ9S', 'type': 'message', 'ts': '1755897773.379809', 'bot_id': 'B099R6WTRU4', 'app_id': 'A099LACAB2R', 'text': '_(part 2/2)_\n\nAppium and Emulator Management*\n*   A `SampleTest.java` class is available that uses TestNG annotations to manage the Mobile Driver, start/stop the Appium server, and start/stop the Android Emulator. *\nThe Appium server can be started if the environment is set to "local" and the driver is "android". *\nThe Android emulator can also be launched when the environment is "local" and the driver is "android". (Source: `<https://paramount.atlassian.net/wiki/spaces/PLQA/pages/47711460`>)\n\n*Additional Resources:*\n*   *Android Studio Basics*: `<https://developer.android.com/studio/intro>` (Source: `<https://paramount.atlassian.net/wiki/spaces/PLQA/pages/47722061`>)\n*\n*Android App Testing Fundamentals*: `<https://developer.android.com/training/testing/fundamentals>` (Source: `<https://paramount.atlassian.net/wiki/spaces/PLQA/pages/47722061`>)\n*\n*Running Apps on Emulator*: `<https://developer.android.com/studio/run/emulator>` (Source: `<https://paramount.atlassian.net/wiki/spaces/PLQA/pages/47722061`>)\n\n────────────────────────────────────────\n*:books: Sources:*\n1. <https://paramount.atlassian.net/wiki/spaces/PLQA/pages/47713566>\n2. <https://paramount.atlassian.net/wiki/spaces/PLQA/pages/47720266>\n3. <https://paramount.atlassian.net/wiki/spaces/PLQA/pages/47711460>\n4. <https://developer.android.com/studio/intro|developer.android.com>\n5. <https://paramount.atlassian.net/wiki/spaces/PLQA/pages/47722061>\n6. <https://developer.android.com/training/testing/fundamentals|developer.android.com>\n7. <https://developer.android.com/studio/run/emulator|developer.android.com>', 'team': 'T010QS7UQNA', 'bot_profile': {'id': 'B099R6WTRU4', 'deleted': False, 'name': 'AutoBot', 'updated': 1754677948, 'app_id': 'A099LACAB2R', 'user_id': 'U099R6WTZ9S', 'icons': {'image_36': 'https://a.slack-edge.com/80588/img/plugins/app/bot_36.png', 'image_48': 'https://a.slack-edge.com/80588/img/plugins/app/bot_48.png', 'image_72': 'https://a.slack-edge.com/80588/img/plugins/app/service_72.png'}, 'team_id': 'T010QS7UQNA'}, 'thread_ts': '1755897757.125359', 'parent_user_id': 'U01RMTFMALF', 'blocks': [{'type': 'rich_text', 'block_id': '8/6d', 'elements': [{'type': 'rich_text_section', 'elements': [{'type': 'text', 'text': '(part 2/2)', 'style': {'italic': True}}, {'type': 'text', 'text': '\n\nAppium and Emulator Management*\n*   A '}, {'type': 'text', 'text': 'SampleTest.java', 'style': {'code': True}}, {'type': 'text', 'text': ' class is available that uses TestNG annotations to manage the Mobile Driver, start/stop the Appium server, and start/stop the Android Emulator. *\nThe Appium server can be started if the environment is set to "local" and the driver is "android". *\nThe Android emulator can also be launched when the environment is "local" and the driver is "android". (Source: `'}, {'type': 'link', 'url': 'https://paramount.atlassian.net/wiki/spaces/PLQA/pages/47711460`'}, {'type': 'text', 'text': ')\n\n'}, {'type': 'text', 'text': 'Additional Resources:', 'style': {'bold': True}}, {'type': 'text', 'text': '\n*   '}, {'type': 'text', 'text': 'Android Studio Basics', 'style': {'bold': True}}, {'type': 'text', 'text': ': '}, {'type': 'link', 'url': 'https://developer.android.com/studio/intro', 'style': {'code': True}}, {'type': 'text', 'text': ' (Source: `'}, {'type': 'link', 'url': 'https://paramount.atlassian.net/wiki/spaces/PLQA/pages/47722061`'}, {'type': 'text', 'text': ')\n*\n'}, {'type': 'text', 'text': 'Android App Testing Fundamentals', 'style': {'bold': True}}, {'type': 'text', 'text': ': '}, {'type': 'link', 'url': 'https://developer.android.com/training/testing/fundamentals', 'style': {'code': True}}, {'type': 'text', 'text': ' (Source: `'}, {'type': 'link', 'url': 'https://paramount.atlassian.net/wiki/spaces/PLQA/pages/47722061`'}, {'type': 'text', 'text': ')\n*\n'}, {'type': 'text', 'text': 'Running Apps on Emulator', 'style': {'bold': True}}, {'type': 'text', 'text': ': '}, {'type': 'link', 'url': 'https://developer.android.com/studio/run/emulator', 'style': {'code': True}}, {'type': 'text', 'text': ' (Source: `'}, {'type': 'link', 'url': 'https://paramount.atlassian.net/wiki/spaces/PLQA/pages/47722061`'}, {'type': 'text', 'text': ')\n\n────────────────────────────────────────\n'}, {'type': 'emoji', 'name': 'books', 'unicode': '1f4da', 'style': {'bold': True}}, {'type': 'text', 'text': ' Sources:', 'style': {'bold': True}}, {'type': 'text', 'text': '\n1. '}, {'type': 'link', 'url': 'https://paramount.atlassian.net/wiki/spaces/PLQA/pages/47713566'}, {'type': 'text', 'text': '\n2. '}, {'type': 'link', 'url': 'https://paramount.atlassian.net/wiki/spaces/PLQA/pages/47720266'}, {'type': 'text', 'text': '\n3. '}, {'type': 'link', 'url': 'https://paramount.atlassian.net/wiki/spaces/PLQA/pages/47711460'}, {'type': 'text', 'text': '\n4. '}, {'type': 'link', 'url': 'https://developer.android.com/studio/intro', 'text': 'developer.android.com'}, {'type': 'text', 'text': '\n5. '}, {'type': 'link', 'url': 'https://paramount.atlassian.net/wiki/spaces/PLQA/pages/47722061'}, {'type': 'text', 'text': '\n6. '}, {'type': 'link', 'url': 'https://developer.android.com/training/testing/fundamentals', 'text': 'developer.android.com'}, {'type': 'text', 'text': '\n7. '}, {'type': 'link', 'url': 'https://developer.android.com/studio/run/emulator', 'text': 'developer.android.com'}]}]}], 'channel': 'D09A0LFHK8R', 'event_ts': '1755897773.379809', 'channel_type': 'im'}
2025-08-22 14:22:54,583 - slack_bolt.App - DEBUG - [client.py:200] - Sending a message (session id: dd816a8d-6996-4a1a-a189-5d8c5dc03d03, message: {"envelope_id": "3fc7f4f9-d5e1-4bb6-956f-78abf8543d15"})
2025-08-22 14:22:54,584 - slack_bolt.App - DEBUG - [internals.py:41] - Response time: 1 milliseconds
2025-08-22 14:22:54,584 - slack_bolt.App - DEBUG - [client.py:150] - Message processing completed (type: events_api, envelope_id: 3fc7f4f9-d5e1-4bb6-956f-78abf8543d15)
2025-08-22 14:22:56,698 - slack_bolt.App - DEBUG - [client.py:235] - on_message invoked: (message: {"envelope_id":"e0ee2853-726f-43da-bd7b-33f14d40adc9","payload":{"token":"yq71khZBCyJF1Ri2hG5aNqr5","team_id":"T010QS7UQNA","enterprise_id":"ERV4P7NAD","context_team_id":null,"context_enterprise_id":"ERV4P7NAD","api_app_id":"A099LACAB2R","event":{"type":"message","subtype":"message_changed","message":{"user":"U099R6WTZ9S","type":"message","bot_id":"B099R6WTRU4","app_id":"A099LACAB2R","text":"_(part 2\/2)_\n\nAppium and Emulator Management*\n*   A `SampleTest.java` class is available that uses TestNG annotations to manage the Mobile Driver, start\/stop the Appium server, and start\/stop the Android Emulator. *\nThe Appium server can be started if the environment is set to \"local\" and the driver is \"android\". *\nThe Android emulator can also be launched when the environment is \"local\" and the driver is \"android\". (Source: `<https:\/\/paramount.atlassian.net\/wiki\/spaces\/PLQA\/pages\/47711460`>)\n\n*Additional Resources:*\n*   *Android Studio Basics*: `<https:\/\/developer.android.com\/studio\/intro>` (Source: `<https:\/\/paramount.atlassian.net\/wiki\/spaces\/PLQA\/pages\/47722061`>)\n*\n*Android App Testing Fundamentals*: `<https:\/\/developer.android.com\/training\/testing\/fundamentals>` (Source: `<https:\/\/paramount.atlassian.net\/wiki\/spaces\/PLQA\/pages\/47722061`>)\n*\n*Running Apps on Emulator*: `<https:\/\/developer.android.com\/studio\/run\/emulator>` (Source: `<https:\/\/paramount.atlassian.net\/wiki\/spaces\/PLQA\/pages\/47722061`>)\n\n\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\n*:books: Sources:*\n1. <https:\/\/paramount.atlassian.net\/wiki\/spaces\/PLQA\/pages\/47713566>\n2. <https:\/\/paramount.atlassian.net\/wiki\/spaces\/PLQA\/pages\/47720266>\n3. <https:\/\/paramount.atlassian.net\/wiki\/spaces\/PLQA\/pages\/47711460>\n4. <https:\/\/developer.android.com\/studio\/intro|developer.android.com>\n5. <https:\/\/paramount.atlassian.net\/wiki\/spaces\/PLQA\/pages\/47722061>\n6. <https:\/\/developer.android.com\/training\/testing\/fundamentals|developer.android.com>\n7. <https:\/\/developer.android.com\/studio\/run\/emulator|developer.android.com>","team":"T010QS7UQNA","bot_profile":{"id":"B099R6WTRU4","deleted":false,"name":"AutoBot","updated":1754677948,"app_id":"A099LACAB2R","user_id":"U099R6WTZ9S","icons":{"image_36":"https:\/\/a.slack-edge.com\/80588\/img\/plugins\/app\/bot_36.png","image_48":"https:\/\/a.slack-edge.com\/80588\/img\/plugins\/app\/bot_48.png","image_72":"https:\/\/a.slack-edge.com\/80588\/img\/plugins\/app\/service_72.png"},"team_id":"T010QS7UQNA"},"thread_ts":"1755897757.125359","parent_user_id":"U01RMTFMALF","attachments":[{"from_url":"https:\/\/developer.android.com\/studio\/intro","image_url":"https:\/\/developer.android.com\/static\/images\/social\/android-developers.png","image_width":1201,"image_height":676,"image_bytes":31847,"service_icon":"https:\/\/www.gstatic.com\/devrel-devsite\/prod\/v07a69f77eed922d40ebfb742cd5d20eb11c7d4f7b172d68471db97f8f3b9f965\/android\/images\/touchicon-180.png","id":1,"original_url":"https:\/\/developer.android.com\/studio\/intro","fallback":"Android Developers: Meet Android Studio \u00a0|\u00a0 Android Developers","text":"Android Studio is the official Integrated Development Environment (IDE) for Android app development, based on IntelliJ IDEA.","title":"Meet Android Studio \u00a0|\u00a0 Android Developers","title_link":"https:\/\/developer.android.com\/studio\/intro","service_name":"Android Developers"},{"from_url":"https:\/\/developer.android.com\/training\/testing\/fundamentals","image_url":"https:\/\/developer.android.com\/static\/images\/social\/android-developers.png","image_width":1201,"image_height":676,"image_bytes":31847,"service_icon":"https:\/\/www.gstatic.com\/devrel-devsite\/prod\/v07a69f77eed922d40ebfb742cd5d20eb11c7d4f7b172d68471db97f8f3b9f965\/android\/images\/touchicon-180.png","id":2,"original_url":"https:\/\/developer.android.com\/training\/testing\/fundamentals","fallback":"Android Developers: Fundamentals of testing Android apps \u00a0|\u00a0 Test your app on Android \u00a0|\u00a0 Android Developers","title":"Fundamentals of testing Android apps \u00a0|\u00a0 Test your app on Android \u00a0|\u00a0 Android Developers","title_link":"https:\/\/developer.android.com\/training\/testing\/fundamentals","service_name":"Android Developers"},{"from_url":"https:\/\/developer.android.com\/studio\/run\/emulator","image_url":"https:\/\/developer.android.com\/static\/images\/social\/android-developers.png","image_width":1201,"image_height":676,"image_bytes":31847,"service_icon":"https:\/\/www.gstatic.com\/devrel-devsite\/prod\/v07a69f77eed922d40ebfb742cd5d20eb11c7d4f7b172d68471db97f8f3b9f965\/android\/images\/touchicon-180.png","id":3,"original_url":"https:\/\/developer.android.com\/studio\/run\/emulator","fallback":"Android Developers: Run apps on the Android Emulator \u00a0|\u00a0 Android Studio \u00a0|\u00a0 Android Developers","text":"The Android Emulator simulates Android devices on your computer so that you can test your app on a variety of devices and Android API levels without needing to have each physical device.","title":"Run apps on the Android Emulator \u00a0|\u00a0 Android Studio \u00a0|\u00a0 Android Developers","title_link":"https:\/\/developer.android.com\/studio\/run\/emulator","service_name":"Android Developers"}],"blocks":[{"type":"rich_text","block_id":"KRwm","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"(part 2\/2)","style":{"italic":true}},{"type":"text","text":"\n\nAppium and Emulator Management*\n*   A "},{"type":"text","text":"SampleTest.java","style":{"code":true}},{"type":"text","text":" class is available that uses TestNG annotations to manage the Mobile Driver, start\/stop the Appium server, and start\/stop the Android Emulator. *\nThe Appium server can be started if the environment is set to \"local\" and the driver is \"android\". *\nThe Android emulator can also be launched when the environment is \"local\" and the driver is \"android\". (Source: `"},{"type":"link","url":"https:\/\/paramount.atlassian.net\/wiki\/spaces\/PLQA\/pages\/47711460`"},{"type":"text","text":")\n\n"},{"type":"text","text":"Additional Resources:","style":{"bold":true}},{"type":"text","text":"\n*   "},{"type":"text","text":"Android Studio Basics","style":{"bold":true}},{"type":"text","text":": "},{"type":"link","url":"https:\/\/developer.android.com\/studio\/intro","style":{"code":true}},{"type":"text","text":" (Source: `"},{"type":"link","url":"https:\/\/paramount.atlassian.net\/wiki\/spaces\/PLQA\/pages\/47722061`"},{"type":"text","text":")\n*\n"},{"type":"text","text":"Android App Testing Fundamentals","style":{"bold":true}},{"type":"text","text":": "},{"type":"link","url":"https:\/\/developer.android.com\/training\/testing\/fundamentals","style":{"code":true}},{"type":"text","text":" (Source: `"},{"type":"link","url":"https:\/\/paramount.atlassian.net\/wiki\/spaces\/PLQA\/pages\/47722061`"},{"type":"text","text":")\n*\n"},{"type":"text","text":"Running Apps on Emulator","style":{"bold":true}},{"type":"text","text":": "},{"type":"link","url":"https:\/\/developer.android.com\/studio\/run\/emulator","style":{"code":true}},{"type":"text","text":" (Source: `"},{"type":"link","url":"https:\/\/paramount.atlassian.net\/wiki\/spaces\/PLQA\/pages\/47722061`"},{"type":"text","text":")\n\n\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\n"},{"type":"emoji","name":"books","unicode":"1f4da","style":{"bold":true}},{"type":"text","text":" Sources:","style":{"bold":true}},{"type":"text","text":"\n1. "},{"type":"link","url":"https:\/\/paramount.atlassian.net\/wiki\/spaces\/PLQA\/pages\/47713566"},{"type":"text","text":"\n2. "},{"type":"link","url":"https:\/\/paramount.atlassian.net\/wiki\/spaces\/PLQA\/pages\/47720266"},{"type":"text","text":"\n3. "},{"type":"link","url":"https:\/\/paramount.atlassian.net\/wiki\/spaces\/PLQA\/pages\/47711460"},{"type":"text","text":"\n4. "},{"type":"link","url":"https:\/\/developer.android.com\/studio\/intro","text":"developer.android.com"},{"type":"text","text":"\n5. "},{"type":"link","url":"https:\/\/paramount.atlassian.net\/wiki\/spaces\/PLQA\/pages\/47722061"},{"type":"text","text":"\n6. "},{"type":"link","url":"https:\/\/developer.android.com\/training\/testing\/fundamentals","text":"developer.android.com"},{"type":"text","text":"\n7. "},{"type":"link","url":"https:\/\/developer.android.com\/studio\/run\/emulator","text":"developer.android.com"}]}]}],"ts":"1755897773.379809"},"previous_message":{"user":"U099R6WTZ9S","type":"message","ts":"1755897773.379809","bot_id":"B099R6WTRU4","app_id":"A099LACAB2R","text":"_(part 2\/2)_\n\nAppium and Emulator Management*\n*   A `SampleTest.java` class is available that uses TestNG annotations to manage the Mobile Driver, start\/stop the Appium server, and start\/stop the Android Emulator. *\nThe Appium server can be started if the environment is set to \"local\" and the driver is \"android\". *\nThe Android emulator can also be launched when the environment is \"local\" and the driver is \"android\". (Source: `<https:\/\/paramount.atlassian.net\/wiki\/spaces\/PLQA\/pages\/47711460`>)\n\n*Additional Resources:*\n*   *Android Studio Basics*: `<https:\/\/developer.android.com\/studio\/intro>` (Source: `<https:\/\/paramount.atlassian.net\/wiki\/spaces\/PLQA\/pages\/47722061`>)\n*\n*Android App Testing Fundamentals*: `<https:\/\/developer.android.com\/training\/testing\/fundamentals>` (Source: `<https:\/\/paramount.atlassian.net\/wiki\/spaces\/PLQA\/pages\/47722061`>)\n*\n*Running Apps on Emulator*: `<https:\/\/developer.android.com\/studio\/run\/emulator>` (Source: `<https:\/\/paramount.atlassian.net\/wiki\/spaces\/PLQA\/pages\/47722061`>)\n\n\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\n*:books: Sources:*\n1. <https:\/\/paramount.atlassian.net\/wiki\/spaces\/PLQA\/pages\/47713566>\n2. <https:\/\/paramount.atlassian.net\/wiki\/spaces\/PLQA\/pages\/47720266>\n3. <https:\/\/paramount.atlassian.net\/wiki\/spaces\/PLQA\/pages\/47711460>\n4. <https:\/\/developer.android.com\/studio\/intro|developer.android.com>\n5. <https:\/\/paramount.atlassian.net\/wiki\/spaces\/PLQA\/pages\/47722061>\n6. <https:\/\/developer.android.com\/training\/testing\/fundamentals|developer.android.com>\n7. <https:\/\/developer.android.com\/studio\/run\/emulator|developer.android.com>","team":"T010QS7UQNA","bot_profile":{"id":"B099R6WTRU4","app_id":"A099LACAB2R","user_id":"U099R6WTZ9S","name":"AutoBot","icons":{"image_36":"https:\/\/a.slack-edge.com\/80588\/img\/plugins\/app\/bot_36.png","image_48":"https:\/\/a.slack-edge.com\/80588\/img\/plugins\/app\/bot_48.png","image_72":"https:\/\/a.slack-edge.com\/80588\/img\/plugins\/app\/service_72.png"},"deleted":false,"updated":1754677948,"team_id":"T010QS7UQNA"},"thread_ts":"1755897757.125359","parent_user_id":"U01RMTFMALF","blocks":[{"type":"rich_text","block_id":"EYo","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"(part 2\/2)","style":{"italic":true}},{"type":"text","text":"\n\nAppium and Emulator Management*\n*   A "},{"type":"text","text":"SampleTest.java","style":{"code":true}},{"type":"text","text":" class is available that uses TestNG annotations to manage the Mobile Driver, start\/stop the Appium server, and start\/stop the Android Emulator. *\nThe Appium server can be started if the environment is set to \"local\" and the driver is \"android\". *\nThe Android emulator can also be launched when the environment is \"local\" and the driver is \"android\". (Source: `"},{"type":"link","url":"https:\/\/paramount.atlassian.net\/wiki\/spaces\/PLQA\/pages\/47711460`"},{"type":"text","text":")\n\n"},{"type":"text","text":"Additional Resources:","style":{"bold":true}},{"type":"text","text":"\n*   "},{"type":"text","text":"Android Studio Basics","style":{"bold":true}},{"type":"text","text":": "},{"type":"link","url":"https:\/\/developer.android.com\/studio\/intro","style":{"code":true}},{"type":"text","text":" (Source: `"},{"type":"link","url":"https:\/\/paramount.atlassian.net\/wiki\/spaces\/PLQA\/pages\/47722061`"},{"type":"text","text":")\n*\n"},{"type":"text","text":"Android App Testing Fundamentals","style":{"bold":true}},{"type":"text","text":": "},{"type":"link","url":"https:\/\/developer.android.com\/training\/testing\/fundamentals","style":{"code":true}},{"type":"text","text":" (Source: `"},{"type":"link","url":"https:\/\/paramount.atlassian.net\/wiki\/spaces\/PLQA\/pages\/47722061`"},{"type":"text","text":")\n*\n"},{"type":"text","text":"Running Apps on Emulator","style":{"bold":true}},{"type":"text","text":": "},{"type":"link","url":"https:\/\/developer.android.com\/studio\/run\/emulator","style":{"code":true}},{"type":"text","text":" (Source: `"},{"type":"link","url":"https:\/\/paramount.atlassian.net\/wiki\/spaces\/PLQA\/pages\/47722061`"},{"type":"text","text":")\n\n\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\n"},{"type":"emoji","name":"books","unicode":"1f4da","style":{"bold":true}},{"type":"text","text":" Sources:","style":{"bold":true}},{"type":"text","text":"\n1. "},{"type":"link","url":"https:\/\/paramount.atlassian.net\/wiki\/spaces\/PLQA\/pages\/47713566"},{"type":"text","text":"\n2. "},{"type":"link","url":"https:\/\/paramount.atlassian.net\/wiki\/spaces\/PLQA\/pages\/47720266"},{"type":"text","text":"\n3. "},{"type":"link","url":"https:\/\/paramount.atlassian.net\/wiki\/spaces\/PLQA\/pages\/47711460"},{"type":"text","text":"\n4. "},{"type":"link","url":"https:\/\/developer.android.com\/studio\/intro","text":"developer.android.com"},{"type":"text","text":"\n5. "},{"type":"link","url":"https:\/\/paramount.atlassian.net\/wiki\/spaces\/PLQA\/pages\/47722061"},{"type":"text","text":"\n6. "},{"type":"link","url":"https:\/\/developer.android.com\/training\/testing\/fundamentals","text":"developer.android.com"},{"type":"text","text":"\n7. "},{"type":"link","url":"https:\/\/developer.android.com\/studio\/run\/emulator","text":"developer.android.com"}]}]}]},"channel":"D09A0LFHK8R","hidden":true,"ts":"1755897776.002600","event_ts":"1755897776.002600","channel_type":"im"},"type":"event_callback","event_id":"Ev09BNV2T3K4","event_time":1755897776,"authorizations":[{"enterprise_id":"ERV4P7NAD","team_id":"T010QS7UQNA","user_id":"U099R6WTZ9S","is_bot":true,"is_enterprise_install":false}],"is_ext_shared_channel":false,"event_context":"4-eyJldCI6Im1lc3NhZ2UiLCJ0aWQiOiJUMDEwUVM3VVFOQSIsImFpZCI6IkEwOTlMQUNBQjJSIiwiY2lkIjoiRDA5QTBMRkhLOFIifQ"},"type":"events_api","accepts_response_payload":false,"retry_attempt":0,"retry_reason":""})
2025-08-22 14:22:56,700 - slack_bolt.App - DEBUG - [client.py:99] - A new message enqueued (current queue size: 1)
2025-08-22 14:22:56,700 - slack_bolt.App - DEBUG - [client.py:105] - A message dequeued (current queue size: 0)
2025-08-22 14:22:56,702 - slack_bolt.App - DEBUG - [client.py:125] - Message processing started (type: events_api, envelope_id: e0ee2853-726f-43da-bd7b-33f14d40adc9)
2025-08-22 14:22:56,702 - slack_bolt.App - DEBUG - [app.py:476] - Applying slack_bolt.middleware.ssl_check.ssl_check.SslCheck
2025-08-22 14:22:56,702 - slack_bolt.App - DEBUG - [app.py:476] - Applying slack_bolt.middleware.request_verification.request_verification.RequestVerification
2025-08-22 14:22:56,702 - slack_bolt.App - DEBUG - [app.py:476] - Applying slack_bolt.middleware.authorization.single_team_authorization.SingleTeamAuthorization
2025-08-22 14:22:56,702 - slack_bolt.App - DEBUG - [app.py:476] - Applying slack_bolt.middleware.ignoring_self_events.ignoring_self_events.IgnoringSelfEvents
2025-08-22 14:22:56,703 - slack_bolt.IgnoringSelfEvents - DEBUG - [ignoring_self_events.py:60] - Skipped self event: {'type': 'message', 'subtype': 'message_changed', 'message': {'user': 'U099R6WTZ9S', 'type': 'message', 'bot_id': 'B099R6WTRU4', 'app_id': 'A099LACAB2R', 'text': '_(part 2/2)_\n\nAppium and Emulator Management*\n*   A `SampleTest.java` class is available that uses TestNG annotations to manage the Mobile Driver, start/stop the Appium server, and start/stop the Android Emulator. *\nThe Appium server can be started if the environment is set to "local" and the driver is "android". *\nThe Android emulator can also be launched when the environment is "local" and the driver is "android". (Source: `<https://paramount.atlassian.net/wiki/spaces/PLQA/pages/47711460`>)\n\n*Additional Resources:*\n*   *Android Studio Basics*: `<https://developer.android.com/studio/intro>` (Source: `<https://paramount.atlassian.net/wiki/spaces/PLQA/pages/47722061`>)\n*\n*Android App Testing Fundamentals*: `<https://developer.android.com/training/testing/fundamentals>` (Source: `<https://paramount.atlassian.net/wiki/spaces/PLQA/pages/47722061`>)\n*\n*Running Apps on Emulator*: `<https://developer.android.com/studio/run/emulator>` (Source: `<https://paramount.atlassian.net/wiki/spaces/PLQA/pages/47722061`>)\n\n────────────────────────────────────────\n*:books: Sources:*\n1. <https://paramount.atlassian.net/wiki/spaces/PLQA/pages/47713566>\n2. <https://paramount.atlassian.net/wiki/spaces/PLQA/pages/47720266>\n3. <https://paramount.atlassian.net/wiki/spaces/PLQA/pages/47711460>\n4. <https://developer.android.com/studio/intro|developer.android.com>\n5. <https://paramount.atlassian.net/wiki/spaces/PLQA/pages/47722061>\n6. <https://developer.android.com/training/testing/fundamentals|developer.android.com>\n7. <https://developer.android.com/studio/run/emulator|developer.android.com>', 'team': 'T010QS7UQNA', 'bot_profile': {'id': 'B099R6WTRU4', 'deleted': False, 'name': 'AutoBot', 'updated': 1754677948, 'app_id': 'A099LACAB2R', 'user_id': 'U099R6WTZ9S', 'icons': {'image_36': 'https://a.slack-edge.com/80588/img/plugins/app/bot_36.png', 'image_48': 'https://a.slack-edge.com/80588/img/plugins/app/bot_48.png', 'image_72': 'https://a.slack-edge.com/80588/img/plugins/app/service_72.png'}, 'team_id': 'T010QS7UQNA'}, 'thread_ts': '1755897757.125359', 'parent_user_id': 'U01RMTFMALF', 'attachments': [{'from_url': 'https://developer.android.com/studio/intro', 'image_url': 'https://developer.android.com/static/images/social/android-developers.png', 'image_width': 1201, 'image_height': 676, 'image_bytes': 31847, 'service_icon': 'https://www.gstatic.com/devrel-devsite/prod/v07a69f77eed922d40ebfb742cd5d20eb11c7d4f7b172d68471db97f8f3b9f965/android/images/touchicon-180.png', 'id': 1, 'original_url': 'https://developer.android.com/studio/intro', 'fallback': 'Android Developers: Meet Android Studio \xa0|\xa0 Android Developers', 'text': 'Android Studio is the official Integrated Development Environment (IDE) for Android app development, based on IntelliJ IDEA.', 'title': 'Meet Android Studio \xa0|\xa0 Android Developers', 'title_link': 'https://developer.android.com/studio/intro', 'service_name': 'Android Developers'}, {'from_url': 'https://developer.android.com/training/testing/fundamentals', 'image_url': 'https://developer.android.com/static/images/social/android-developers.png', 'image_width': 1201, 'image_height': 676, 'image_bytes': 31847, 'service_icon': 'https://www.gstatic.com/devrel-devsite/prod/v07a69f77eed922d40ebfb742cd5d20eb11c7d4f7b172d68471db97f8f3b9f965/android/images/touchicon-180.png', 'id': 2, 'original_url': 'https://developer.android.com/training/testing/fundamentals', 'fallback': 'Android Developers: Fundamentals of testing Android apps \xa0|\xa0 Test your app on Android \xa0|\xa0 Android Developers', 'title': 'Fundamentals of testing Android apps \xa0|\xa0 Test your app on Android \xa0|\xa0 Android Developers', 'title_link': 'https://developer.android.com/training/testing/fundamentals', 'service_name': 'Android Developers'}, {'from_url': 'https://developer.android.com/studio/run/emulator', 'image_url': 'https://developer.android.com/static/images/social/android-developers.png', 'image_width': 1201, 'image_height': 676, 'image_bytes': 31847, 'service_icon': 'https://www.gstatic.com/devrel-devsite/prod/v07a69f77eed922d40ebfb742cd5d20eb11c7d4f7b172d68471db97f8f3b9f965/android/images/touchicon-180.png', 'id': 3, 'original_url': 'https://developer.android.com/studio/run/emulator', 'fallback': 'Android Developers: Run apps on the Android Emulator \xa0|\xa0 Android Studio \xa0|\xa0 Android Developers', 'text': 'The Android Emulator simulates Android devices on your computer so that you can test your app on a variety of devices and Android API levels without needing to have each physical device.', 'title': 'Run apps on the Android Emulator \xa0|\xa0 Android Studio \xa0|\xa0 Android Developers', 'title_link': 'https://developer.android.com/studio/run/emulator', 'service_name': 'Android Developers'}], 'blocks': [{'type': 'rich_text', 'block_id': 'KRwm', 'elements': [{'type': 'rich_text_section', 'elements': [{'type': 'text', 'text': '(part 2/2)', 'style': {'italic': True}}, {'type': 'text', 'text': '\n\nAppium and Emulator Management*\n*   A '}, {'type': 'text', 'text': 'SampleTest.java', 'style': {'code': True}}, {'type': 'text', 'text': ' class is available that uses TestNG annotations to manage the Mobile Driver, start/stop the Appium server, and start/stop the Android Emulator. *\nThe Appium server can be started if the environment is set to "local" and the driver is "android". *\nThe Android emulator can also be launched when the environment is "local" and the driver is "android". (Source: `'}, {'type': 'link', 'url': 'https://paramount.atlassian.net/wiki/spaces/PLQA/pages/47711460`'}, {'type': 'text', 'text': ')\n\n'}, {'type': 'text', 'text': 'Additional Resources:', 'style': {'bold': True}}, {'type': 'text', 'text': '\n*   '}, {'type': 'text', 'text': 'Android Studio Basics', 'style': {'bold': True}}, {'type': 'text', 'text': ': '}, {'type': 'link', 'url': 'https://developer.android.com/studio/intro', 'style': {'code': True}}, {'type': 'text', 'text': ' (Source: `'}, {'type': 'link', 'url': 'https://paramount.atlassian.net/wiki/spaces/PLQA/pages/47722061`'}, {'type': 'text', 'text': ')\n*\n'}, {'type': 'text', 'text': 'Android App Testing Fundamentals', 'style': {'bold': True}}, {'type': 'text', 'text': ': '}, {'type': 'link', 'url': 'https://developer.android.com/training/testing/fundamentals', 'style': {'code': True}}, {'type': 'text', 'text': ' (Source: `'}, {'type': 'link', 'url': 'https://paramount.atlassian.net/wiki/spaces/PLQA/pages/47722061`'}, {'type': 'text', 'text': ')\n*\n'}, {'type': 'text', 'text': 'Running Apps on Emulator', 'style': {'bold': True}}, {'type': 'text', 'text': ': '}, {'type': 'link', 'url': 'https://developer.android.com/studio/run/emulator', 'style': {'code': True}}, {'type': 'text', 'text': ' (Source: `'}, {'type': 'link', 'url': 'https://paramount.atlassian.net/wiki/spaces/PLQA/pages/47722061`'}, {'type': 'text', 'text': ')\n\n────────────────────────────────────────\n'}, {'type': 'emoji', 'name': 'books', 'unicode': '1f4da', 'style': {'bold': True}}, {'type': 'text', 'text': ' Sources:', 'style': {'bold': True}}, {'type': 'text', 'text': '\n1. '}, {'type': 'link', 'url': 'https://paramount.atlassian.net/wiki/spaces/PLQA/pages/47713566'}, {'type': 'text', 'text': '\n2. '}, {'type': 'link', 'url': 'https://paramount.atlassian.net/wiki/spaces/PLQA/pages/47720266'}, {'type': 'text', 'text': '\n3. '}, {'type': 'link', 'url': 'https://paramount.atlassian.net/wiki/spaces/PLQA/pages/47711460'}, {'type': 'text', 'text': '\n4. '}, {'type': 'link', 'url': 'https://developer.android.com/studio/intro', 'text': 'developer.android.com'}, {'type': 'text', 'text': '\n5. '}, {'type': 'link', 'url': 'https://paramount.atlassian.net/wiki/spaces/PLQA/pages/47722061'}, {'type': 'text', 'text': '\n6. '}, {'type': 'link', 'url': 'https://developer.android.com/training/testing/fundamentals', 'text': 'developer.android.com'}, {'type': 'text', 'text': '\n7. '}, {'type': 'link', 'url': 'https://developer.android.com/studio/run/emulator', 'text': 'developer.android.com'}]}]}], 'ts': '1755897773.379809'}, 'previous_message': {'user': 'U099R6WTZ9S', 'type': 'message', 'ts': '1755897773.379809', 'bot_id': 'B099R6WTRU4', 'app_id': 'A099LACAB2R', 'text': '_(part 2/2)_\n\nAppium and Emulator Management*\n*   A `SampleTest.java` class is available that uses TestNG annotations to manage the Mobile Driver, start/stop the Appium server, and start/stop the Android Emulator. *\nThe Appium server can be started if the environment is set to "local" and the driver is "android". *\nThe Android emulator can also be launched when the environment is "local" and the driver is "android". (Source: `<https://paramount.atlassian.net/wiki/spaces/PLQA/pages/47711460`>)\n\n*Additional Resources:*\n*   *Android Studio Basics*: `<https://developer.android.com/studio/intro>` (Source: `<https://paramount.atlassian.net/wiki/spaces/PLQA/pages/47722061`>)\n*\n*Android App Testing Fundamentals*: `<https://developer.android.com/training/testing/fundamentals>` (Source: `<https://paramount.atlassian.net/wiki/spaces/PLQA/pages/47722061`>)\n*\n*Running Apps on Emulator*: `<https://developer.android.com/studio/run/emulator>` (Source: `<https://paramount.atlassian.net/wiki/spaces/PLQA/pages/47722061`>)\n\n────────────────────────────────────────\n*:books: Sources:*\n1. <https://paramount.atlassian.net/wiki/spaces/PLQA/pages/47713566>\n2. <https://paramount.atlassian.net/wiki/spaces/PLQA/pages/47720266>\n3. <https://paramount.atlassian.net/wiki/spaces/PLQA/pages/47711460>\n4. <https://developer.android.com/studio/intro|developer.android.com>\n5. <https://paramount.atlassian.net/wiki/spaces/PLQA/pages/47722061>\n6. <https://developer.android.com/training/testing/fundamentals|developer.android.com>\n7. <https://developer.android.com/studio/run/emulator|developer.android.com>', 'team': 'T010QS7UQNA', 'bot_profile': {'id': 'B099R6WTRU4', 'app_id': 'A099LACAB2R', 'user_id': 'U099R6WTZ9S', 'name': 'AutoBot', 'icons': {'image_36': 'https://a.slack-edge.com/80588/img/plugins/app/bot_36.png', 'image_48': 'https://a.slack-edge.com/80588/img/plugins/app/bot_48.png', 'image_72': 'https://a.slack-edge.com/80588/img/plugins/app/service_72.png'}, 'deleted': False, 'updated': 1754677948, 'team_id': 'T010QS7UQNA'}, 'thread_ts': '1755897757.125359', 'parent_user_id': 'U01RMTFMALF', 'blocks': [{'type': 'rich_text', 'block_id': 'EYo', 'elements': [{'type': 'rich_text_section', 'elements': [{'type': 'text', 'text': '(part 2/2)', 'style': {'italic': True}}, {'type': 'text', 'text': '\n\nAppium and Emulator Management*\n*   A '}, {'type': 'text', 'text': 'SampleTest.java', 'style': {'code': True}}, {'type': 'text', 'text': ' class is available that uses TestNG annotations to manage the Mobile Driver, start/stop the Appium server, and start/stop the Android Emulator. *\nThe Appium server can be started if the environment is set to "local" and the driver is "android". *\nThe Android emulator can also be launched when the environment is "local" and the driver is "android". (Source: `'}, {'type': 'link', 'url': 'https://paramount.atlassian.net/wiki/spaces/PLQA/pages/47711460`'}, {'type': 'text', 'text': ')\n\n'}, {'type': 'text', 'text': 'Additional Resources:', 'style': {'bold': True}}, {'type': 'text', 'text': '\n*   '}, {'type': 'text', 'text': 'Android Studio Basics', 'style': {'bold': True}}, {'type': 'text', 'text': ': '}, {'type': 'link', 'url': 'https://developer.android.com/studio/intro', 'style': {'code': True}}, {'type': 'text', 'text': ' (Source: `'}, {'type': 'link', 'url': 'https://paramount.atlassian.net/wiki/spaces/PLQA/pages/47722061`'}, {'type': 'text', 'text': ')\n*\n'}, {'type': 'text', 'text': 'Android App Testing Fundamentals', 'style': {'bold': True}}, {'type': 'text', 'text': ': '}, {'type': 'link', 'url': 'https://developer.android.com/training/testing/fundamentals', 'style': {'code': True}}, {'type': 'text', 'text': ' (Source: `'}, {'type': 'link', 'url': 'https://paramount.atlassian.net/wiki/spaces/PLQA/pages/47722061`'}, {'type': 'text', 'text': ')\n*\n'}, {'type': 'text', 'text': 'Running Apps on Emulator', 'style': {'bold': True}}, {'type': 'text', 'text': ': '}, {'type': 'link', 'url': 'https://developer.android.com/studio/run/emulator', 'style': {'code': True}}, {'type': 'text', 'text': ' (Source: `'}, {'type': 'link', 'url': 'https://paramount.atlassian.net/wiki/spaces/PLQA/pages/47722061`'}, {'type': 'text', 'text': ')\n\n────────────────────────────────────────\n'}, {'type': 'emoji', 'name': 'books', 'unicode': '1f4da', 'style': {'bold': True}}, {'type': 'text', 'text': ' Sources:', 'style': {'bold': True}}, {'type': 'text', 'text': '\n1. '}, {'type': 'link', 'url': 'https://paramount.atlassian.net/wiki/spaces/PLQA/pages/47713566'}, {'type': 'text', 'text': '\n2. '}, {'type': 'link', 'url': 'https://paramount.atlassian.net/wiki/spaces/PLQA/pages/47720266'}, {'type': 'text', 'text': '\n3. '}, {'type': 'link', 'url': 'https://paramount.atlassian.net/wiki/spaces/PLQA/pages/47711460'}, {'type': 'text', 'text': '\n4. '}, {'type': 'link', 'url': 'https://developer.android.com/studio/intro', 'text': 'developer.android.com'}, {'type': 'text', 'text': '\n5. '}, {'type': 'link', 'url': 'https://paramount.atlassian.net/wiki/spaces/PLQA/pages/47722061'}, {'type': 'text', 'text': '\n6. '}, {'type': 'link', 'url': 'https://developer.android.com/training/testing/fundamentals', 'text': 'developer.android.com'}, {'type': 'text', 'text': '\n7. '}, {'type': 'link', 'url': 'https://developer.android.com/studio/run/emulator', 'text': 'developer.android.com'}]}]}]}, 'channel': 'D09A0LFHK8R', 'hidden': True, 'ts': '1755897776.002600', 'event_ts': '1755897776.002600', 'channel_type': 'im'}
2025-08-22 14:22:56,708 - slack_bolt.App - DEBUG - [client.py:200] - Sending a message (session id: dd816a8d-6996-4a1a-a189-5d8c5dc03d03, message: {"envelope_id": "e0ee2853-726f-43da-bd7b-33f14d40adc9"})
2025-08-22 14:22:56,708 - slack_bolt.App - DEBUG - [internals.py:41] - Response time: 6 milliseconds
2025-08-22 14:22:56,708 - slack_bolt.App - DEBUG - [client.py:150] - Message processing completed (type: events_api, envelope_id: e0ee2853-726f-43da-bd7b-33f14d40adc9)
2025-08-22 14:26:50,453 - __main__ - INFO - [main.py:43] - Loading application configuration...
2025-08-22 14:26:50,453 - __main__ - INFO - [main.py:45] - Configuration loaded successfully
2025-08-22 14:26:50,453 - __main__ - INFO - [main.py:48] - Initializing security components...
2025-08-22 14:26:50,453 - __main__ - DEBUG - [main.py:50] - Slack validator initialized
2025-08-22 14:26:50,453 - security.content_filter - INFO - [content_filter.py:39] - Content filter initialized with 11 patterns
2025-08-22 14:26:50,453 - __main__ - DEBUG - [main.py:53] - Content filter initialized
2025-08-22 14:26:50,453 - auth.admin_manager - INFO - [admin_manager.py:27] - Admin manager initialized with 2 admin users
2025-08-22 14:26:50,453 - __main__ - DEBUG - [main.py:56] - Admin manager initialized
2025-08-22 14:26:50,453 - auth.email_whitelist - INFO - [email_whitelist.py:28] - Email whitelist initialized with 1 whitelisted emails
2025-08-22 14:26:50,453 - auth.email_whitelist - INFO - [email_whitelist.py:37] - Whitelisted domains: paramount.com
2025-08-22 14:26:50,453 - __main__ - DEBUG - [main.py:59] - Email whitelist initialized with 1 emails
2025-08-22 14:26:50,453 - auth.slack_user_info - DEBUG - [slack_user_info.py:25] - Slack user info manager initialized
2025-08-22 14:26:50,453 - __main__ - DEBUG - [main.py:62] - Slack user info manager initialized
2025-08-22 14:26:50,453 - __main__ - INFO - [main.py:63] - Security components initialized successfully
2025-08-22 14:26:50,453 - __main__ - INFO - [main.py:66] - Initializing Slack app...
2025-08-22 14:26:50,490 - slack_bolt.App - DEBUG - [base_client.py:255] - Sending a request - url: https://slack.com/api/auth.test, query_params: {}, body_params: {}, files: {}, json_body: None, headers: {'Content-Type': 'application/x-www-form-urlencoded', 'Authorization': '(redacted)', 'User-Agent': 'Bolt/1.16.0 Python/3.12.0 slackclient/3.34.0 Darwin/23.4.0'}
2025-08-22 14:26:50,836 - slack_bolt.App - DEBUG - [base_client.py:546] - Received the following response - status: 200, headers: {'date': 'Fri, 22 Aug 2025 21:26:50 GMT', 'server': 'Apache', 'vary': 'Accept-Encoding', 'x-slack-req-id': '6f612c7e5efe698090de6dd0d95a780b', 'x-content-type-options': 'nosniff', 'x-xss-protection': '0', 'pragma': 'no-cache', 'cache-control': 'private, no-cache, no-store, must-revalidate', 'expires': 'Sat, 26 Jul 1997 05:00:00 GMT', 'content-type': 'application/json; charset=utf-8', 'x-oauth-scopes': 'app_mentions:read,channels:history,chat:write,im:history,im:read,im:write,users:read,reactions:write,users:read.email', 'access-control-expose-headers': 'x-slack-req-id, retry-after', 'access-control-allow-headers': 'slack-route, x-slack-version-ts, x-b3-traceid, x-b3-spanid, x-b3-parentspanid, x-b3-sampled, x-b3-flags', 'strict-transport-security': 'max-age=31536000; includeSubDomains; preload', 'referrer-policy': 'no-referrer', 'x-slack-unique-id': 'aKjgmpBXDakm8FroFUyEoQAAABY', 'x-slack-backend': 'r', 'access-control-allow-origin': '*', 'content-length': '228', 'via': '1.1 slack-prod.tinyspeck.com, envoy-www-iad-nqsxiwpg,envoy-edge-pdx-vibphbxj', 'x-envoy-attempt-count': '1', 'x-envoy-upstream-service-time': '84', 'x-backend': 'main_normal main_canary_with_overflow main_control_with_overflow', 'x-server': 'slack-www-hhvm-main-iad-bvqk', 'x-slack-shared-secret-outcome': 'no-match', 'x-edge-backend': 'envoy-www', 'timing-allow-origin': '*', 'x-slack-edge-shared-secret-outcome': 'no-match', 'connection': 'close'}, body: {"ok":true,"url":"https://viacomcbs-grid-test.slack.com/","team":"Test Workspace","user":"autobot","team_id":"T010QS7UQNA","user_id":"U099R6WTZ9S","bot_id":"B099R6WTRU4","enterprise_id":"ERV4P7NAD","is_enterprise_install":false}
2025-08-22 14:26:50,836 - __main__ - INFO - [main.py:68] - Slack app initialized successfully
2025-08-22 14:26:50,836 - __main__ - DEBUG - [main.py:72] - Message deduplication cache initialized
2025-08-22 14:26:50,836 - __main__ - DEBUG - [main.py:77] - Thread tracking initialized
2025-08-22 14:26:50,836 - __main__ - INFO - [main.py:80] - Initializing DIG AI integration...
2025-08-22 14:26:50,836 - dig_connector - INFO - [dig_connector.py:284] - Initializing DIG AI with model ID: 42
2025-08-22 14:26:50,837 - dig_connector - INFO - [dig_connector.py:49] - Starting DIG chat session initialization...
2025-08-22 14:26:50,837 - dig_connector - DEBUG - [dig_connector.py:52] - Creating chat with name: Slack Bot Session 2025-08-22T21:26:50.837077+00:00
2025-08-22 14:26:50,837 - dig_connector - DEBUG - [dig_connector.py:63] - Creating chat - URL: https://ai.digdev.cbsicloud.com/fastapi/chats, Payload: {'chat_nm': 'Slack Bot Session 2025-08-22T21:26:50.837077+00:00', 'model_id': 42}
2025-08-22 14:26:50,838 - urllib3.connectionpool - DEBUG - [connectionpool.py:1055] - Starting new HTTPS connection (1): ai.digdev.cbsicloud.com:443
2025-08-22 14:26:51,098 - urllib3.connectionpool - DEBUG - [connectionpool.py:549] - https://ai.digdev.cbsicloud.com:443 "POST /fastapi/chats HTTP/1.1" 200 217
2025-08-22 14:26:51,098 - dig_connector - DEBUG - [dig_connector.py:66] - Create chat response: status=200
2025-08-22 14:26:51,098 - dig_connector - INFO - [dig_connector.py:54] - Successfully initialized DIG chat session with ID: 888
2025-08-22 14:26:51,098 - __main__ - INFO - [main.py:83] - DIG AI integration successfully initialized
2025-08-22 14:26:51,098 - __main__ - INFO - [main.py:87] - Setting up event handlers...
2025-08-22 14:26:51,098 - __main__ - INFO - [main.py:742] - Starting AI Assistant Bot...
2025-08-22 14:26:51,098 - __main__ - INFO - [main.py:743] - Registering event handlers...
2025-08-22 14:26:51,099 - __main__ - DEBUG - [main.py:744] - Event handlers registered: app_mention, message, app_home_opened
2025-08-22 14:26:51,099 - __main__ - INFO - [main.py:747] - Connecting to Slack via Socket Mode...
2025-08-22 14:26:51,099 - __main__ - INFO - [main.py:751] - Socket Mode handler created successfully
2025-08-22 14:26:51,099 - __main__ - INFO - [main.py:753] - ✅ Bot is now running and listening for events!
2025-08-22 14:26:51,099 - slack_bolt.App - DEBUG - [base_client.py:255] - Sending a request - url: https://slack.com/api/apps.connections.open, query_params: {}, body_params: {}, files: {}, json_body: None, headers: {'Content-Type': 'application/x-www-form-urlencoded', 'Authorization': '(redacted)', 'User-Agent': 'Bolt/1.16.0 Python/3.12.0 slackclient/3.34.0 Darwin/23.4.0'}
2025-08-22 14:26:51,374 - slack_bolt.App - DEBUG - [base_client.py:546] - Received the following response - status: 200, headers: {'date': 'Fri, 22 Aug 2025 21:26:51 GMT', 'server': 'Apache', 'vary': 'Accept-Encoding', 'x-slack-req-id': '9af8047e5b4ff131c858a53348c3fd76', 'x-content-type-options': 'nosniff', 'x-xss-protection': '0', 'x-robots-tag': 'noindex,nofollow', 'pragma': 'no-cache', 'cache-control': 'private, no-cache, no-store, must-revalidate', 'expires': 'Sat, 26 Jul 1997 05:00:00 GMT', 'content-type': 'application/json; charset=utf-8', 'x-accepted-oauth-scopes': 'connections:write', 'x-oauth-scopes': 'connections:write', 'access-control-expose-headers': 'x-slack-req-id, retry-after', 'access-control-allow-headers': 'slack-route, x-slack-version-ts, x-b3-traceid, x-b3-spanid, x-b3-parentspanid, x-b3-sampled, x-b3-flags', 'strict-transport-security': 'max-age=31536000; includeSubDomains; preload', 'referrer-policy': 'no-referrer', 'x-slack-unique-id': 'aKjgm3yZpA2Aa1SaB0rxPwAAAC8', 'x-slack-backend': 'r', 'access-control-allow-origin': '*', 'content-length': '173', 'via': '1.1 slack-prod.tinyspeck.com, envoy-www-iad-idnyzoij,envoy-edge-pdx-tsqahqqc', 'x-envoy-attempt-count': '1', 'x-envoy-upstream-service-time': '79', 'x-backend': 'main_normal main_canary_with_overflow main_control_with_overflow', 'x-server': 'slack-www-hhvm-main-iad-whon', 'x-slack-shared-secret-outcome': 'no-match', 'x-edge-backend': 'envoy-www', 'timing-allow-origin': '*', 'x-slack-edge-shared-secret-outcome': 'no-match', 'connection': 'close'}, body: {"ok":true,"url":"wss:\/\/wss-primary.slack.com\/link\/?ticket=59251b57-26fa-4431-93a4-cb53690c6af6&app_id=a6c8d361ee1c6f398c5b4afec831555b78d7affa753b16bcc0fc64d7c13f3766"}
2025-08-22 14:26:51,902 - slack_bolt.App - INFO - [client.py:192] - A new session has been established (session id: cef30a94-422f-4081-a894-ae49fdf16031)
2025-08-22 14:26:51,902 - slack_bolt.App - INFO - [base_handler.py:50] - ⚡️ Bolt app is running!
2025-08-22 14:26:51,929 - slack_bolt.App - INFO - [client.py:265] - Starting to receive messages from a new connection (session id: cef30a94-422f-4081-a894-ae49fdf16031)
2025-08-22 14:26:51,930 - slack_bolt.App - DEBUG - [client.py:235] - on_message invoked: (message: {"type":"hello","num_connections":2,"debug_info":{"host":"applink-9","build_number":0,"approximate_connection_time":18060},"connection_info":{"app_id":"A099LACAB2R"}})
2025-08-22 14:26:51,930 - slack_bolt.App - DEBUG - [client.py:99] - A new message enqueued (current queue size: 1)
2025-08-22 14:26:51,930 - slack_bolt.App - DEBUG - [client.py:105] - A message dequeued (current queue size: 0)
2025-08-22 14:26:51,931 - slack_bolt.App - DEBUG - [client.py:125] - Message processing started (type: hello, envelope_id: None)
2025-08-22 14:26:51,931 - slack_bolt.App - DEBUG - [client.py:150] - Message processing completed (type: hello, envelope_id: None)
2025-08-22 14:27:00,018 - slack_bolt.App - DEBUG - [client.py:235] - on_message invoked: (message: {"envelope_id":"1369513e-a3ef-48cf-9297-520a5844258e","payload":{"token":"yq71khZBCyJF1Ri2hG5aNqr5","team_id":"T010QS7UQNA","enterprise_id":"ERV4P7NAD","context_team_id":null,"context_enterprise_id":"ERV4P7NAD","api_app_id":"A099LACAB2R","event":{"user":"U01RMTFMALF","type":"message","ts":"1755898019.072619","client_msg_id":"86aef7f3-f6b6-4725-8965-1aeef493ee59","text":"How can i run an automated test on a local Android phone?","blocks":[{"type":"rich_text","block_id":"vQwBP","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"How can i run an automated test on a local Android phone?"}]}]}],"channel":"D09A0LFHK8R","event_ts":"1755898019.072619","channel_type":"im"},"type":"event_callback","event_id":"Ev09BA83EDCP","event_time":1755898019,"authorizations":[{"enterprise_id":"ERV4P7NAD","team_id":"T010QS7UQNA","user_id":"U099R6WTZ9S","is_bot":true,"is_enterprise_install":false}],"is_ext_shared_channel":false,"event_context":"4-eyJldCI6Im1lc3NhZ2UiLCJ0aWQiOiJUMDEwUVM3VVFOQSIsImFpZCI6IkEwOTlMQUNBQjJSIiwiY2lkIjoiRDA5QTBMRkhLOFIifQ"},"type":"events_api","accepts_response_payload":false,"retry_attempt":0,"retry_reason":""})
2025-08-22 14:27:00,020 - slack_bolt.App - DEBUG - [client.py:99] - A new message enqueued (current queue size: 1)
2025-08-22 14:27:00,021 - slack_bolt.App - DEBUG - [client.py:105] - A message dequeued (current queue size: 0)
2025-08-22 14:27:00,022 - slack_bolt.App - DEBUG - [client.py:125] - Message processing started (type: events_api, envelope_id: 1369513e-a3ef-48cf-9297-520a5844258e)
2025-08-22 14:27:00,023 - slack_bolt.App - DEBUG - [app.py:476] - Applying slack_bolt.middleware.ssl_check.ssl_check.SslCheck
2025-08-22 14:27:00,023 - slack_bolt.App - DEBUG - [app.py:476] - Applying slack_bolt.middleware.request_verification.request_verification.RequestVerification
2025-08-22 14:27:00,023 - slack_bolt.App - DEBUG - [app.py:476] - Applying slack_bolt.middleware.authorization.single_team_authorization.SingleTeamAuthorization
2025-08-22 14:27:00,024 - slack_bolt.App - DEBUG - [app.py:476] - Applying slack_bolt.middleware.ignoring_self_events.ignoring_self_events.IgnoringSelfEvents
2025-08-22 14:27:00,024 - slack_bolt.App - DEBUG - [app.py:476] - Applying slack_bolt.middleware.url_verification.url_verification.UrlVerification
2025-08-22 14:27:00,024 - slack_bolt.App - DEBUG - [app.py:500] - Checking listener: handle_app_mentions ...
2025-08-22 14:27:00,024 - slack_bolt.App - DEBUG - [app.py:500] - Checking listener: help_message ...
2025-08-22 14:27:00,025 - slack_bolt.App - DEBUG - [app.py:500] - Checking listener: handle_dm_messages ...
2025-08-22 14:27:00,026 - slack_bolt.App - DEBUG - [app.py:522] - Running listener: handle_dm_messages ...
2025-08-22 14:27:00,027 - __main__ - INFO - [main.py:492] - === DM MESSAGE EVENT RECEIVED ===
2025-08-22 14:27:00,027 - slack_bolt.App - DEBUG - [thread_runner.py:198] - Responding with status: 200 body: "" (0 millis)
2025-08-22 14:27:00,027 - __main__ - DEBUG - [main.py:493] - Full event body: {'token': 'yq71khZBCyJF1Ri2hG5aNqr5', 'team_id': 'T010QS7UQNA', 'enterprise_id': 'ERV4P7NAD', 'context_team_id': None, 'context_enterprise_id': 'ERV4P7NAD', 'api_app_id': 'A099LACAB2R', 'event': {'user': 'U01RMTFMALF', 'type': 'message', 'ts': '1755898019.072619', 'client_msg_id': '86aef7f3-f6b6-4725-8965-1aeef493ee59', 'text': 'How can i run an automated test on a local Android phone?', 'blocks': [{'type': 'rich_text', 'block_id': 'vQwBP', 'elements': [{'type': 'rich_text_section', 'elements': [{'type': 'text', 'text': 'How can i run an automated test on a local Android phone?'}]}]}], 'channel': 'D09A0LFHK8R', 'event_ts': '1755898019.072619', 'channel_type': 'im'}, 'type': 'event_callback', 'event_id': 'Ev09BA83EDCP', 'event_time': 1755898019, 'authorizations': [{'enterprise_id': 'ERV4P7NAD', 'team_id': 'T010QS7UQNA', 'user_id': 'U099R6WTZ9S', 'is_bot': True, 'is_enterprise_install': False}], 'is_ext_shared_channel': False, 'event_context': '4-eyJldCI6Im1lc3NhZ2UiLCJ0aWQiOiJUMDEwUVM3VVFOQSIsImFpZCI6IkEwOTlMQUNBQjJSIiwiY2lkIjoiRDA5QTBMRkhLOFIifQ'}
2025-08-22 14:27:00,027 - slack_bolt.App - DEBUG - [client.py:200] - Sending a message (session id: cef30a94-422f-4081-a894-ae49fdf16031, message: {"envelope_id": "1369513e-a3ef-48cf-9297-520a5844258e"})
2025-08-22 14:27:00,027 - __main__ - INFO - [main.py:502] - DM Event details: channel=D09A0LFHK8R, user=U01RMTFMALF, ts=1755898019.072619
2025-08-22 14:27:00,028 - __main__ - DEBUG - [main.py:503] - DM Event text: How can i run an automated test on a local Android phone?
2025-08-22 14:27:00,028 - utils - DEBUG - [utils.py:27] - Checking message processing: channel=D09A0LFHK8R, ts=1755898019.072619, text='How can i run an automated test on a local Android...'
2025-08-22 14:27:00,028 - slack_bolt.App - DEBUG - [internals.py:41] - Response time: 4 milliseconds
2025-08-22 14:27:00,028 - utils - DEBUG - [utils.py:31] - Message hash: 39bc4e6198e1b124df599b532cdcb019
2025-08-22 14:27:00,028 - slack_bolt.App - DEBUG - [client.py:150] - Message processing completed (type: events_api, envelope_id: 1369513e-a3ef-48cf-9297-520a5844258e)
2025-08-22 14:27:00,029 - utils - DEBUG - [utils.py:53] - Added message to processing cache (total entries: 1)
2025-08-22 14:27:00,030 - __main__ - DEBUG - [main.py:516] - Bot check: bot_id=None, user_id=U01RMTFMALF
2025-08-22 14:27:00,030 - __main__ - DEBUG - [main.py:521] - Question received: 'How can i run an automated test on a local Android phone?'
2025-08-22 14:27:00,030 - __main__ - DEBUG - [main.py:527] - Checking user access for DM...
2025-08-22 14:27:00,030 - auth.slack_user_info - DEBUG - [slack_user_info.py:48] - Fetching user info for user_id: U01RMTFMALF
2025-08-22 14:27:00,031 - slack_sdk.web.base_client - DEBUG - [base_client.py:255] - Sending a request - url: https://slack.com/api/users.info, query_params: {}, body_params: {'user': 'U01RMTFMALF', 'team_id': 'T010QS7UQNA'}, files: {}, json_body: None, headers: {'Content-Type': 'application/x-www-form-urlencoded', 'Authorization': '(redacted)', 'User-Agent': 'Python/3.12.0 slackclient/3.34.0 Darwin/23.4.0'}
2025-08-22 14:27:00,361 - slack_sdk.web.base_client - DEBUG - [base_client.py:546] - Received the following response - status: 200, headers: {'date': 'Fri, 22 Aug 2025 21:27:00 GMT', 'server': 'Apache', 'vary': 'Accept-Encoding', 'x-slack-req-id': 'b84d9845aecceb9a23bcbe5425bf85c6', 'x-content-type-options': 'nosniff', 'x-xss-protection': '0', 'pragma': 'no-cache', 'cache-control': 'private, no-cache, no-store, must-revalidate', 'expires': 'Sat, 26 Jul 1997 05:00:00 GMT', 'content-type': 'application/json; charset=utf-8', 'x-accepted-oauth-scopes': 'users:read', 'x-oauth-scopes': 'app_mentions:read,channels:history,chat:write,im:history,im:read,im:write,users:read,reactions:write,users:read.email', 'access-control-expose-headers': 'x-slack-req-id, retry-after', 'access-control-allow-headers': 'slack-route, x-slack-version-ts, x-b3-traceid, x-b3-spanid, x-b3-parentspanid, x-b3-sampled, x-b3-flags', 'strict-transport-security': 'max-age=31536000; includeSubDomains; preload', 'referrer-policy': 'no-referrer', 'x-slack-unique-id': 'aKjgpLGeRmBsQEmyaX49-AAAAAA', 'x-slack-backend': 'r', 'access-control-allow-origin': '*', 'content-length': '2057', 'via': '1.1 slack-prod.tinyspeck.com, envoy-www-iad-faracvzv,envoy-edge-pdx-gbvadjnf', 'x-envoy-attempt-count': '1', 'x-envoy-upstream-service-time': '107', 'x-backend': 'main_normal main_canary_with_overflow main_control_with_overflow', 'x-server': 'slack-www-hhvm-main-iad-rnhy', 'x-slack-shared-secret-outcome': 'no-match', 'x-edge-backend': 'envoy-www', 'timing-allow-origin': '*', 'x-slack-edge-shared-secret-outcome': 'no-match', 'connection': 'close'}, body: {"ok":true,"user":{"id":"U01RMTFMALF","name":"popov8533","is_bot":false,"updated":1755891346,"is_app_user":false,"team_id":"T010QS7UQNA","deleted":false,"color":"4bbe2e","is_email_confirmed":true,"real_name":"Alexandr Popov","tz":"America\/Los_Angeles","tz_label":"Pacific Daylight Time","tz_offset":-25200,"is_admin":false,"is_owner":false,"is_primary_owner":false,"is_restricted":false,"is_ultra_restricted":false,"enterprise_user":{"id":"U01RMTFMALF","enterprise_id":"ERV4P7NAD","enterprise_name":"Paramount Global","is_admin":false,"is_owner":false,"is_primary_owner":false,"teams":["T010QS7UQNA","T02H1PQMF"]},"who_can_share_contact_card":"EVERYONE","profile":{"real_name":"Alexandr Popov","display_name":"Alex Popov","avatar_hash":"a64f82312a14","real_name_normalized":"Alexandr Popov","display_name_normalized":"Alex Popov","image_24":"https:\/\/avatars.slack-edge.com\/2023-03-29\/5033076824964_a64f82312a141123fbbf_24.png","image_32":"https:\/\/avatars.slack-edge.com\/2023-03-29\/5033076824964_a64f82312a141123fbbf_32.png","image_48":"https:\/\/avatars.slack-edge.com\/2023-03-29\/5033076824964_a64f82312a141123fbbf_48.png","image_72":"https:\/\/avatars.slack-edge.com\/2023-03-29\/5033076824964_a64f82312a141123fbbf_72.png","image_192":"https:\/\/avatars.slack-edge.com\/2023-03-29\/5033076824964_a64f82312a141123fbbf_192.png","image_512":"https:\/\/avatars.slack-edge.com\/2023-03-29\/5033076824964_a64f82312a141123fbbf_512.png","image_1024":"https:\/\/avatars.slack-edge.com\/2023-03-29\/5033076824964_a64f82312a141123fbbf_1024.png","image_original":"https:\/\/avatars.slack-edge.com\/2023-03-29\/5033076824964_a64f82312a141123fbbf_original.png","is_custom_image":true,"first_name":"Alexandr","last_name":"Popov","team":"T010QS7UQNA","email":"alexandr.popov@paramount.com","title":"Senior Software Quality Assurance Engineer","phone":"","skype":"","status_text":"","status_text_canonical":"","status_emoji":"","status_emoji_display_info":[],"status_expiration":0,"huddle_state":"default_unset","huddle_state_expiration_ts":0,"ooo_message":""}}}
2025-08-22 14:27:00,362 - auth.slack_user_info - DEBUG - [slack_user_info.py:63] - Retrieved email for user U01RMTFMALF: alexandr.popov@paramount.com
2025-08-22 14:27:00,362 - auth.email_whitelist - DEBUG - [email_whitelist.py:57] - Email access granted: alexandr.popov@paramount.com
2025-08-22 14:27:00,362 - __main__ - INFO - [main.py:118] - Access granted to user U01RMTFMALF with email alexandr.popov@paramount.com
2025-08-22 14:27:00,363 - __main__ - DEBUG - [main.py:533] - User access check passed for DM
2025-08-22 14:27:00,363 - __main__ - INFO - [main.py:535] - Processing DM question from user U01RMTFMALF: How can i run an automated test on a local Android phone?
2025-08-22 14:27:00,363 - __main__ - DEBUG - [main.py:538] - Starting DM processing...
2025-08-22 14:27:00,363 - __main__ - DEBUG - [main.py:541] - Checking if 'how can i run an automated test on a local android phone?' is an admin command in DM
2025-08-22 14:27:00,363 - __main__ - DEBUG - [main.py:577] - Checking if DM thread is already being processed...
2025-08-22 14:27:00,363 - utils - DEBUG - [utils.py:67] - Managing thread: D09A0LFHK8R:1755898019.072619, action: add, user: U01RMTFMALF
2025-08-22 14:27:00,363 - utils - INFO - [utils.py:94] - Added thread D09A0LFHK8R:1755898019.072619 to active tracking (total: 1)
2025-08-22 14:27:00,363 - __main__ - DEBUG - [main.py:582] - DM thread management check passed
2025-08-22 14:27:00,363 - slack_sdk.web.base_client - DEBUG - [base_client.py:255] - Sending a request - url: https://slack.com/api/reactions.add, query_params: {}, body_params: {'channel': 'D09A0LFHK8R', 'name': 'thinking_face', 'timestamp': '1755898019.072619', 'team_id': 'T010QS7UQNA'}, files: {}, json_body: None, headers: {'Content-Type': 'application/x-www-form-urlencoded', 'Authorization': '(redacted)', 'User-Agent': 'Python/3.12.0 slackclient/3.34.0 Darwin/23.4.0'}
2025-08-22 14:27:00,833 - slack_sdk.web.base_client - DEBUG - [base_client.py:546] - Received the following response - status: 200, headers: {'date': 'Fri, 22 Aug 2025 21:27:00 GMT', 'server': 'Apache', 'vary': 'Accept-Encoding', 'x-slack-req-id': 'd63f881b81e77bb79b6a02fd66411561', 'x-content-type-options': 'nosniff', 'x-xss-protection': '0', 'pragma': 'no-cache', 'cache-control': 'private, no-cache, no-store, must-revalidate', 'expires': 'Sat, 26 Jul 1997 05:00:00 GMT', 'content-type': 'application/json; charset=utf-8', 'x-accepted-oauth-scopes': 'reactions:write', 'x-oauth-scopes': 'app_mentions:read,channels:history,chat:write,im:history,im:read,im:write,users:read,reactions:write,users:read.email', 'access-control-expose-headers': 'x-slack-req-id, retry-after', 'access-control-allow-headers': 'slack-route, x-slack-version-ts, x-b3-traceid, x-b3-spanid, x-b3-parentspanid, x-b3-sampled, x-b3-flags', 'strict-transport-security': 'max-age=31536000; includeSubDomains; preload', 'referrer-policy': 'no-referrer', 'x-slack-unique-id': 'aKjgpG1VGmAECI69iPNg9wAAEAM', 'x-slack-backend': 'r', 'access-control-allow-origin': '*', 'content-length': '11', 'via': '1.1 slack-prod.tinyspeck.com, envoy-www-iad-cikjpinp,envoy-edge-pdx-tdujdtju', 'x-envoy-attempt-count': '1', 'x-envoy-upstream-service-time': '119', 'x-backend': 'main_normal main_canary_with_overflow main_control_with_overflow', 'x-server': 'slack-www-hhvm-main-iad-vboc', 'x-slack-shared-secret-outcome': 'no-match', 'x-edge-backend': 'envoy-www', 'timing-allow-origin': '*', 'x-slack-edge-shared-secret-outcome': 'no-match', 'connection': 'close'}, body: {"ok":true}
2025-08-22 14:27:00,834 - __main__ - INFO - [main.py:599] - Processing DM question from <@U01RMTFMALF>: How can i run an automated test on a local Android phone?
2025-08-22 14:27:00,834 - __main__ - INFO - [main.py:603] - Sending DM request to DIG AI...
2025-08-22 14:27:00,834 - dig_connector - INFO - [dig_connector.py:134] - Generating response for query: 'How can i run an automated test on a local Android phone?' with 0 chunks
2025-08-22 14:27:00,834 - dig_connector - DEBUG - [dig_connector.py:138] - Formatted context length: 0
2025-08-22 14:27:00,834 - dig_connector - INFO - [dig_connector.py:141] - No context available, using direct query
2025-08-22 14:27:00,834 - dig_connector - INFO - [dig_connector.py:150] - Sending prompt to DIG platform...
2025-08-22 14:27:00,834 - dig_connector - INFO - [dig_connector.py:121] - Sending message to DIG API - URL: https://ai.digdev.cbsicloud.com/fastapi/chats/888/generate
2025-08-22 14:27:00,834 - dig_connector - DEBUG - [dig_connector.py:122] - Message payload: {'model_id': 42, 'message_text': 'How can i run an automated test on a local Android phone?', 'history': [{'role': 'user', 'content': 'How can i run an automated test on a local Android phone?'}]}
2025-08-22 14:27:16,337 - urllib3.connectionpool - DEBUG - [connectionpool.py:549] - https://ai.digdev.cbsicloud.com:443 "POST /fastapi/chats/888/generate HTTP/1.1" 200 3796
2025-08-22 14:27:16,339 - dig_connector - DEBUG - [dig_connector.py:125] - DIG API response: status=200
2025-08-22 14:27:16,339 - dig_connector - DEBUG - [dig_connector.py:129] - DIG API response data: {'message_text': 'To run an automated test on a local Android phone, you\'ll need to configure your environment and use specific commands, often involving tools like Maven, Appium, and TestNG.\n\nHere\'s a breakdown of the steps and configurations:\n\n**1. Environment Setup & Prerequisites**\n\n*   **Android Home Environment Variable:** For Android Emulators, ensure the `$ANDROID_HOME` environment variable is set and included in your system\'s path. (Source: `https://paramount.atlassian.net/wiki/spaces/PLQA/pages/47713566`)\n*   **VPN Connection:** Connect to the necessary VPN. (Source: `https://paramount.atlassian.net/wiki/spaces/PLQA/pages/47720266`)\n*   **Synergy Server:** Download the latest version of the Synergy server and run its `.jar` file. (Source: `https://paramount.atlassian.net/wiki/spaces/PLQA/pages/47720266`)\n*   **Appium Server:** The `SampleTest.java` class (a sample test class mentioned in the documentation) includes methods to start and stop the Appium server. (Source: `https://paramount.atlassian.net/wiki/spaces/PLQA/pages/47711460`)\n*   **Emulator Launch:** If your test environment is set to "local" and the driver is "android," an emulator can be launched automatically. (Source: `https://paramount.atlassian.net/wiki/spaces/PLQA/pages/47711460`)\n\n**2. Configuration**\n\nYou\'ll need to update desired capabilities in a `.config` file, typically located under the `mqe-hob-mobile-tests` directory, or pass them as command-line parameters. Key parameters include:\n\n*   **Platform:** Set to `ANDROID`.\n*   **Locale:** For domestic tests, this might be `en-us`.\n*   **MobileDeviceCategory:** Set to `PHONE`.\n*   **DeviceStartOrientation:** Can be `PORTRAIT`.\n*   **DebugDeviceID:** Provide the device ID of your emulator (found using `adb devices` in the terminal) or the IP address of your real device.\n*   **ClientID:** This is the machine serial number for local executions or to target a specific private lab machine.\n*   **AppPackageUrl:** The URL of your Android application build.\n*   **AppBuildType:** Usually `DEBUG`.\n\n(Source: `https://paramount.atlassian.net/wiki/spaces/PLQA/pages/47720266`)\n\nFor Maven command-line execution, you might use arguments like:\n\n*   `-Ddriver=android`\n*   `-DplatformName=Android`\n*   `-DplatformVersion=11.0` (example version)\n*   `-DdeviceName="Google Pixel 2XL"` (example device name)\n*   `-Denvironment=local`\n*   `-Dheadless=false`\n*   `-Dapp="/pathToPackage/your-app.apk"` (path to your application package)\n*   `-Dudid=your_device_udid` (for real mobile devices)\n*   `-DbundleId=your.app.bundle.id` (to override default settings)\n\n(Source: `https://paramount.atlassian.net/wiki/spaces/PLQA/pages/47711460`)\n\n**3. Running the Test**\n\nOnce configured, you can run tests in a couple of ways:\n\n*   **From the Terminal (using Maven):**\n    Open your IDE terminal and execute a Maven command. You can specify test groups or tags.\n    ```bash\n    mvn clean test -pl mqe-hob-mobile-tests -am -Dgroups=Your test case number or tag\n    ```\n    (Source: `https://paramount.atlassian.net/wiki/spaces/PLQA/pages/47720266`)\n\n*   **From TestNGSuiteConfig.xml:**\n    Navigate to the `TestNGSuiteConfig.xml` file, right-click, and select "Run TestNGSuiteConfig.xml." You will need to provide the test case ID or tag name in the `<include name>` section within the XML, for example:\n    ```xml\n    <test verbose="1" name="All Mobile Tests" annotations="JDK">\n        <groups>\n            <run>\n                <include name="Debug"/>\n                <exclude name="Broken"/>\n            </run>\n        </groups>\n    </test>\n    ```\n    (Source: `https://paramount.atlassian.net/wiki/spaces/PLQA/pages/47720266`)', 'requires_approval': False, 'execution_id': 1591}
2025-08-22 14:27:16,340 - dig_connector - INFO - [dig_connector.py:154] - Extracting response content...
2025-08-22 14:27:16,340 - dig_connector - DEBUG - [dig_connector.py:221] - Found message_text in response
2025-08-22 14:27:16,340 - dig_connector - INFO - [dig_connector.py:157] - Successfully generated response (length: 3647)
2025-08-22 14:27:16,341 - __main__ - INFO - [main.py:606] - Received DM response from DIG AI
2025-08-22 14:27:16,341 - __main__ - DEBUG - [main.py:607] - DIG AI DM response: To run an automated test on a local Android phone, you'll need to configure your environment and use specific commands, often involving tools like Maven, Appium, and TestNG.

Here's a breakdown of the steps and configurations:

**1. Environment Setup & Prerequisites**

*   **Android Home Environment Variable:** For Android Emulators, ensure the `$ANDROID_HOME` environment variable is set and included in your system's path. (Source: `https://paramount.atlassian.net/wiki/spaces/PLQA/pages/47713566`)
*   **VPN Connection:** Connect to the necessary VPN. (Source: `https://paramount.atlassian.net/wiki/spaces/PLQA/pages/47720266`)
*   **Synergy Server:** Download the latest version of the Synergy server and run its `.jar` file. (Source: `https://paramount.atlassian.net/wiki/spaces/PLQA/pages/47720266`)
*   **Appium Server:** The `SampleTest.java` class (a sample test class mentioned in the documentation) includes methods to start and stop the Appium server. (Source: `https://paramount.atlassian.net/wiki/spaces/PLQA/pages/47711460`)
*   **Emulator Launch:** If your test environment is set to "local" and the driver is "android," an emulator can be launched automatically. (Source: `https://paramount.atlassian.net/wiki/spaces/PLQA/pages/47711460`)

**2. Configuration**

You'll need to update desired capabilities in a `.config` file, typically located under the `mqe-hob-mobile-tests` directory, or pass them as command-line parameters. Key parameters include:

*   **Platform:** Set to `ANDROID`.
*   **Locale:** For domestic tests, this might be `en-us`.
*   **MobileDeviceCategory:** Set to `PHONE`.
*   **DeviceStartOrientation:** Can be `PORTRAIT`.
*   **DebugDeviceID:** Provide the device ID of your emulator (found using `adb devices` in the terminal) or the IP address of your real device.
*   **ClientID:** This is the machine serial number for local executions or to target a specific private lab machine.
*   **AppPackageUrl:** The URL of your Android application build.
*   **AppBuildType:** Usually `DEBUG`.

(Source: `https://paramount.atlassian.net/wiki/spaces/PLQA/pages/47720266`)

For Maven command-line execution, you might use arguments like:

*   `-Ddriver=android`
*   `-DplatformName=Android`
*   `-DplatformVersion=11.0` (example version)
*   `-DdeviceName="Google Pixel 2XL"` (example device name)
*   `-Denvironment=local`
*   `-Dheadless=false`
*   `-Dapp="/pathToPackage/your-app.apk"` (path to your application package)
*   `-Dudid=your_device_udid` (for real mobile devices)
*   `-DbundleId=your.app.bundle.id` (to override default settings)

(Source: `https://paramount.atlassian.net/wiki/spaces/PLQA/pages/47711460`)

**3. Running the Test**

Once configured, you can run tests in a couple of ways:

*   **From the Terminal (using Maven):**
    Open your IDE terminal and execute a Maven command. You can specify test groups or tags.
    ```bash
    mvn clean test -pl mqe-hob-mobile-tests -am -Dgroups=Your test case number or tag
    ```
    (Source: `https://paramount.atlassian.net/wiki/spaces/PLQA/pages/47720266`)

*   **From TestNGSuiteConfig.xml:**
    Navigate to the `TestNGSuiteConfig.xml` file, right-click, and select "Run TestNGSuiteConfig.xml." You will need to provide the test case ID or tag name in the `<include name>` section within the XML, for example:
    ```xml
    <test verbose="1" name="All Mobile Tests" annotations="JDK">
        <groups>
            <run>
                <include name="Debug"/>
                <exclude name="Broken"/>
            </run>
        </groups>
    </test>
    ```
    (Source: `https://paramount.atlassian.net/wiki/spaces/PLQA/pages/47720266`)
2025-08-22 14:27:16,344 - __main__ - DEBUG - [main.py:611] - Formatted DM response: *Your Question:*
> How can i run an automated test on a local Android phone?

*Answer:*
To run an automated test on a local Android phone, you'll need to configure your environment and use specific commands, often involving tools like Maven, Appium, and TestNG.

Here's a breakdown of the steps and configurations:

*1. Environment Setup & Prerequisites*
*   *Android Home Environment Variable:* For Android Emulators, ensure the `$ANDROID_HOME` environment variable is set and included in your system's path. (Source: `https://paramount.atlassian.net/wiki/spaces/PLQA/pages/47713566`)
*
*VPN Connection:* Connect to the necessary VPN. (Source: `https://paramount.atlassian.net/wiki/spaces/PLQA/pages/47720266`)
*
*Synergy Server:* Download the latest version of the Synergy server and run its `.jar` file. (Source: `https://paramount.atlassian.net/wiki/spaces/PLQA/pages/47720266`)
*
*Appium Server:* The `SampleTest.java` class (a sample test class mentioned in the documentation) includes methods to start and stop the Appium server. (Source: `https://paramount.atlassian.net/wiki/spaces/PLQA/pages/47711460`)
*
*Emulator Launch:* If your test environment is set to "local" and the driver is "android," an emulator can be launched automatically. (Source: `https://paramount.atlassian.net/wiki/spaces/PLQA/pages/47711460`)

*2. Configuration*
You'll need to update desired capabilities in a `.config` file, typically located under the `mqe-hob-mobile-tests` directory, or pass them as command-line parameters. Key parameters include:

*
*Platform:* Set to `ANDROID`.
*
*Locale:* For domestic tests, this might be `en-us`.
*
*MobileDeviceCategory:* Set to `PHONE`.
*
*DeviceStartOrientation:* Can be `PORTRAIT`.
*
*DebugDeviceID:* Provide the device ID of your emulator (found using `adb devices` in the terminal) or the IP address of your real device.
*
*ClientID:* This is the machine serial number for local executions or to target a specific private lab machine.
*
*AppPackageUrl:* The URL of your Android application build.
*
*AppBuildType:* Usually `DEBUG`.

(Source: `https://paramount.atlassian.net/wiki/spaces/PLQA/pages/47720266`)

For Maven command-line execution, you might use arguments like:

*
`-Ddriver=android`
*
`-DplatformName=Android`
*
`-DplatformVersion=11.0` (example version)
*
`-DdeviceName="Google Pixel 2XL"` (example device name)
*
`-Denvironment=local`
*
`-Dheadless=false`
*
`-Dapp="/pathToPackage/your-app.apk"` (path to your application package)
*
`-Dudid=your_device_udid` (for real mobile devices)
*
`-DbundleId=your.app.bundle.id` (to override default settings)

(Source: `https://paramount.atlassian.net/wiki/spaces/PLQA/pages/47711460`)

*3. Running the Test*
Once configured, you can run tests in a couple of ways:

*
*From the Terminal (using Maven):*
    Open your IDE terminal and execute a Maven command. You can specify test groups or tags.
    ```bash
    mvn clean test -pl mqe-hob-mobile-tests -am -Dgroups=Your test case number or tag
    ```
    (Source: `https://paramount.atlassian.net/wiki/spaces/PLQA/pages/47720266`)

*
*From TestNGSuiteConfig.xml:*
    Navigate to the `TestNGSuiteConfig.xml` file, right-click, and select "Run TestNGSuiteConfig.xml." You will need to provide the test case ID or tag name in the `<include name>` section within the XML, for example:
    ```xml
    <test verbose="1" name="All Mobile Tests" annotations="JDK">
        <groups>
            <run>
                <include name="Debug"/>
                <exclude name="Broken"/>
            </run>
        </groups>
    </test>
    ```
    (Source: `https://paramount.atlassian.net/wiki/spaces/PLQA/pages/47720266`)

────────────────────────────────────────
*📚 Sources:*
1. https://paramount.atlassian.net/wiki/spaces/PLQA/pages/47713566
2. https://paramount.atlassian.net/wiki/spaces/PLQA/pages/47720266
3. https://paramount.atlassian.net/wiki/spaces/PLQA/pages/47711460

2025-08-22 14:27:16,345 - slack_sdk.web.base_client - DEBUG - [base_client.py:255] - Sending a request - url: https://slack.com/api/reactions.remove, query_params: {}, body_params: {'name': 'thinking_face', 'channel': 'D09A0LFHK8R', 'timestamp': '1755898019.072619', 'team_id': 'T010QS7UQNA'}, files: {}, json_body: None, headers: {'Content-Type': 'application/x-www-form-urlencoded', 'Authorization': '(redacted)', 'User-Agent': 'Python/3.12.0 slackclient/3.34.0 Darwin/23.4.0'}
2025-08-22 14:27:16,729 - slack_sdk.web.base_client - DEBUG - [base_client.py:546] - Received the following response - status: 200, headers: {'date': 'Fri, 22 Aug 2025 21:27:16 GMT', 'server': 'Apache', 'vary': 'Accept-Encoding', 'x-slack-req-id': 'b03558ede6ee3695c7cba21ef0f48efa', 'x-content-type-options': 'nosniff', 'x-xss-protection': '0', 'pragma': 'no-cache', 'cache-control': 'private, no-cache, no-store, must-revalidate', 'expires': 'Sat, 26 Jul 1997 05:00:00 GMT', 'content-type': 'application/json; charset=utf-8', 'x-accepted-oauth-scopes': 'reactions:write', 'x-oauth-scopes': 'app_mentions:read,channels:history,chat:write,im:history,im:read,im:write,users:read,reactions:write,users:read.email', 'access-control-expose-headers': 'x-slack-req-id, retry-after', 'access-control-allow-headers': 'slack-route, x-slack-version-ts, x-b3-traceid, x-b3-spanid, x-b3-parentspanid, x-b3-sampled, x-b3-flags', 'strict-transport-security': 'max-age=31536000; includeSubDomains; preload', 'referrer-policy': 'no-referrer', 'x-slack-unique-id': 'aKjgtM7b-YF_owUNS2xcQQAAADE', 'x-slack-backend': 'r', 'access-control-allow-origin': '*', 'content-length': '11', 'via': '1.1 slack-prod.tinyspeck.com, envoy-www-iad-eusdtmtu,envoy-edge-pdx-uaqlooue', 'x-envoy-attempt-count': '1', 'x-envoy-upstream-service-time': '177', 'x-backend': 'main_normal main_canary_with_overflow main_control_with_overflow', 'x-server': 'slack-www-hhvm-main-iad-gnvz', 'x-slack-shared-secret-outcome': 'no-match', 'x-edge-backend': 'envoy-www', 'timing-allow-origin': '*', 'x-slack-edge-shared-secret-outcome': 'no-match', 'connection': 'close'}, body: {"ok":true}
2025-08-22 14:27:16,753 - slack_sdk.web.base_client - DEBUG - [base_client.py:255] - Sending a request - url: https://slack.com/api/chat.postMessage, query_params: {}, body_params: {}, files: {}, json_body: {'channel': 'D09A0LFHK8R', 'text': '*Your Question:*\n> How can i run an automated test on a local Android phone? *Answer:*\nTo run an automated test on a local Android phone, you\'ll need to configure your environment and use specific commands, often involving tools like Maven, Appium, and TestNG. Here\'s a breakdown of the steps and configurations:\n\n*1. Environment Setup & Prerequisites*\n*   *Android Home Environment Variable:* For Android Emulators, ensure the `$ANDROID_HOME` environment variable is set and included in your system\'s path. (Source: `https://paramount.atlassian.net/wiki/spaces/PLQA/pages/47713566`)\n*\n*VPN Connection:* Connect to the necessary VPN. (Source: `https://paramount.atlassian.net/wiki/spaces/PLQA/pages/47720266`)\n*\n*Synergy Server:* Download the latest version of the Synergy server and run its `.jar` file. (Source: `https://paramount.atlassian.net/wiki/spaces/PLQA/pages/47720266`)\n*\n*Appium Server:* The `SampleTest.java` class (a sample test class mentioned in the documentation) includes methods to start and stop the Appium server. (Source: `https://paramount.atlassian.net/wiki/spaces/PLQA/pages/47711460`)\n*\n*Emulator Launch:* If your test environment is set to "local" and the driver is "android," an emulator can be launched automatically. (Source: `https://paramount.atlassian.net/wiki/spaces/PLQA/pages/47711460`)\n\n*2. Configuration*\nYou\'ll need to update desired capabilities in a `.config` file, typically located under the `mqe-hob-mobile-tests` directory, or pass them as command-line parameters. Key parameters include:\n\n*\n*Platform:* Set to `ANDROID`. *\n*Locale:* For domestic tests, this might be `en-us`. *\n*MobileDeviceCategory:* Set to `PHONE`. *\n*DeviceStartOrientation:* Can be `PORTRAIT`. *\n*DebugDeviceID:* Provide the device ID of your emulator (found using `adb devices` in the terminal) or the IP address of your real device. *\n*ClientID:* This is the machine serial number for local executions or to target a specific private lab machine. *\n*AppPackageUrl:* The URL of your Android application build. *\n*AppBuildType:* Usually `DEBUG`. (Source: `https://paramount.atlassian.net/wiki/spaces/PLQA/pages/47720266`)\n\nFor Maven command-line execution, you might use arguments like:\n\n*\n`-Ddriver=android`\n*\n`-DplatformName=Android`\n*\n`-DplatformVersion=11.0` (example version)\n*\n`-DdeviceName="Google Pixel 2XL"` (example device name)\n*\n`-Denvironment=local`\n*\n`-Dheadless=false`\n*\n`-Dapp="/pathToPackage/your-app.apk"` (path to your application package)\n*\n`-Dudid=your_device_udid` (for real mobile devices)\n*\n`-DbundleId=your.app.bundle.id` (to override default settings)\n\n(Source: `https://paramount.atlassian.net/wiki/spaces/PLQA/pages/47711460`)\n\n*3. Running the Test*\nOnce configured, you can run tests in a couple of ways:\n\n*\n*From the Terminal (using Maven):*\n    Open your IDE terminal and execute a Maven command. You can specify test groups or tags.\n\n_(message continued in thread...)_', 'thread_ts': '1755898019.072619', 'team_id': 'T010QS7UQNA'}, headers: {'Content-Type': 'application/json;charset=utf-8', 'Authorization': '(redacted)', 'User-Agent': 'Python/3.12.0 slackclient/3.34.0 Darwin/23.4.0'}
2025-08-22 14:27:17,179 - slack_sdk.web.base_client - DEBUG - [base_client.py:546] - Received the following response - status: 200, headers: {'date': 'Fri, 22 Aug 2025 21:27:17 GMT', 'server': 'Apache', 'vary': 'Accept-Encoding', 'x-slack-req-id': '5558d53b49b0d21be97fe51095f3c18f', 'x-content-type-options': 'nosniff', 'x-xss-protection': '0', 'pragma': 'no-cache', 'cache-control': 'private, no-cache, no-store, must-revalidate', 'expires': 'Sat, 26 Jul 1997 05:00:00 GMT', 'content-type': 'application/json; charset=utf-8', 'x-accepted-oauth-scopes': 'chat:write', 'x-oauth-scopes': 'app_mentions:read,channels:history,chat:write,im:history,im:read,im:write,users:read,reactions:write,users:read.email', 'access-control-expose-headers': 'x-slack-req-id, retry-after', 'access-control-allow-headers': 'slack-route, x-slack-version-ts, x-b3-traceid, x-b3-spanid, x-b3-parentspanid, x-b3-sampled, x-b3-flags', 'strict-transport-security': 'max-age=31536000; includeSubDomains; preload', 'referrer-policy': 'no-referrer', 'x-slack-unique-id': 'aKjgtd3se6r5kRGmQyoiNwAAADc', 'x-slack-backend': 'r', 'access-control-allow-origin': '*', 'content-length': '10043', 'via': '1.1 slack-prod.tinyspeck.com, envoy-www-iad-hjpbqkse,envoy-edge-pdx-icuvgwxa', 'x-envoy-attempt-count': '1', 'x-envoy-upstream-service-time': '199', 'x-backend': 'main_normal main_canary_with_overflow main_control_with_overflow', 'x-server': 'slack-www-hhvm-main-iad-gqqt', 'x-slack-shared-secret-outcome': 'no-match', 'x-edge-backend': 'envoy-www', 'timing-allow-origin': '*', 'x-slack-edge-shared-secret-outcome': 'no-match', 'connection': 'close'}, body: {"ok":true,"channel":"D09A0LFHK8R","ts":"1755898037.114879","message":{"user":"U099R6WTZ9S","type":"message","ts":"1755898037.114879","bot_id":"B099R6WTRU4","app_id":"A099LACAB2R","text":"*Your Question:*\n&gt; How can i run an automated test on a local Android phone? *Answer:*\nTo run an automated test on a local Android phone, you'll need to configure your environment and use specific commands, often involving tools like Maven, Appium, and TestNG. Here's a breakdown of the steps and configurations:\n\n*1. Environment Setup &amp; Prerequisites*\n*   *Android Home Environment Variable:* For Android Emulators, ensure the `$ANDROID_HOME` environment variable is set and included in your system's path. (Source: `<https://paramount.atlassian.net/wiki/spaces/PLQA/pages/47713566`>)\n*\n*VPN Connection:* Connect to the necessary VPN. (Source: `<https://paramount.atlassian.net/wiki/spaces/PLQA/pages/47720266`>)\n*\n*Synergy Server:* Download the latest version of the Synergy server and run its `.jar` file. (Source: `<https://paramount.atlassian.net/wiki/spaces/PLQA/pages/47720266`>)\n*\n*Appium Server:* The `SampleTest.java` class (a sample test class mentioned in the documentation) includes methods to start and stop the Appium server. (Source: `<https://paramount.atlassian.net/wiki/spaces/PLQA/pages/47711460`>)\n*\n*Emulator Launch:* If your test environment is set to \"local\" and the driver is \"android,\" an emulator can be launched automatically. (Source: `<https://paramount.atlassian.net/wiki/spaces/PLQA/pages/47711460`>)\n\n*2. Configuration*\nYou'll need to update desired capabilities in a `.config` file, typically located under the `mqe-hob-mobile-tests` directory, or pass them as command-line parameters. Key parameters include:\n\n*\n*Platform:* Set to `ANDROID`. *\n*Locale:* For domestic tests, this might be `en-us`. *\n*MobileDeviceCategory:* Set to `PHONE`. *\n*DeviceStartOrientation:* Can be `PORTRAIT`. *\n*DebugDeviceID:* Provide the device ID of your emulator (found using `adb devices` in the terminal) or the IP address of your real device. *\n*ClientID:* This is the machine serial number for local executions or to target a specific private lab machine. *\n*AppPackageUrl:* The URL of your Android application build. *\n*AppBuildType:* Usually `DEBUG`. (Source: `<https://paramount.atlassian.net/wiki/spaces/PLQA/pages/47720266`>)\n\nFor Maven command-line execution, you might use arguments like:\n\n*\n`-Ddriver=android`\n*\n`-DplatformName=Android`\n*\n`-DplatformVersion=11.0` (example version)\n*\n`-DdeviceName=\"Google Pixel 2XL\"` (example device name)\n*\n`-Denvironment=local`\n*\n`-Dheadless=false`\n*\n`-Dapp=\"/pathToPackage/your-app.apk\"` (path to your application package)\n*\n`-Dudid=your_device_udid` (for real mobile devices)\n*\n`-DbundleId=your.app.bundle.id` (to override default settings)\n\n(Source: `<https://paramount.atlassian.net/wiki/spaces/PLQA/pages/47711460`>)\n\n*3. Running the Test*\nOnce configured, you can run tests in a couple of ways:\n\n*\n*From the Terminal (using Maven):*\n    Open your IDE terminal and execute a Maven command. You can specify test groups or tags.\n\n_(message continued in thread...)_","team":"T010QS7UQNA","bot_profile":{"id":"B099R6WTRU4","app_id":"A099LACAB2R","user_id":"U099R6WTZ9S","name":"AutoBot","icons":{"image_36":"https://a.slack-edge.com/80588/img/plugins/app/bot_36.png","image_48":"https://a.slack-edge.com/80588/img/plugins/app/bot_48.png","image_72":"https://a.slack-edge.com/80588/img/plugins/app/service_72.png"},"deleted":false,"updated":1754677948,"team_id":"T010QS7UQNA"},"thread_ts":"1755898019.072619","parent_user_id":"U01RMTFMALF","blocks":[{"type":"rich_text","block_id":"NGeu","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Your Question:","style":{"bold":true}}]},{"type":"rich_text_quote","elements":[{"type":"text","text":"How can i run an automated test on a local Android phone? "},{"type":"text","text":"Answer:","style":{"bold":true}}]},{"type":"rich_text_section","elements":[{"type":"text","text":"To run an automated test on a local Android phone, you'll need to configure your environment and use specific commands, often involving tools like Maven, Appium, and TestNG. Here's a breakdown of the steps and configurations:\n\n"},{"type":"text","text":"1. Environment Setup & Prerequisites","style":{"bold":true}},{"type":"text","text":"\n*   "},{"type":"text","text":"Android Home Environment Variable:","style":{"bold":true}},{"type":"text","text":" For Android Emulators, ensure the "},{"type":"text","text":"$ANDROID_HOME","style":{"code":true}},{"type":"text","text":" environment variable is set and included in your system's path. (Source: `"},{"type":"link","url":"https://paramount.atlassian.net/wiki/spaces/PLQA/pages/47713566`"},{"type":"text","text":")\n*\n"},{"type":"text","text":"VPN Connection:","style":{"bold":true}},{"type":"text","text":" Connect to the necessary VPN. (Source: `"},{"type":"link","url":"https://paramount.atlassian.net/wiki/spaces/PLQA/pages/47720266`"},{"type":"text","text":")\n*\n"},{"type":"text","text":"Synergy Server:","style":{"bold":true}},{"type":"text","text":" Download the latest version of the Synergy server and run its "},{"type":"text","text":".jar","style":{"code":true}},{"type":"text","text":" file. (Source: `"},{"type":"link","url":"https://paramount.atlassian.net/wiki/spaces/PLQA/pages/47720266`"},{"type":"text","text":")\n*\n"},{"type":"text","text":"Appium Server:","style":{"bold":true}},{"type":"text","text":" The "},{"type":"text","text":"SampleTest.java","style":{"code":true}},{"type":"text","text":" class (a sample test class mentioned in the documentation) includes methods to start and stop the Appium server. (Source: `"},{"type":"link","url":"https://paramount.atlassian.net/wiki/spaces/PLQA/pages/47711460`"},{"type":"text","text":")\n*\n"},{"type":"text","text":"Emulator Launch:","style":{"bold":true}},{"type":"text","text":" If your test environment is set to \"local\" and the driver is \"android,\" an emulator can be launched automatically. (Source: `"},{"type":"link","url":"https://paramount.atlassian.net/wiki/spaces/PLQA/pages/47711460`"},{"type":"text","text":")\n\n"},{"type":"text","text":"2. Configuration","style":{"bold":true}},{"type":"text","text":"\nYou'll need to update desired capabilities in a "},{"type":"text","text":".config","style":{"code":true}},{"type":"text","text":" file, typically located under the "},{"type":"text","text":"mqe-hob-mobile-tests","style":{"code":true}},{"type":"text","text":" directory, or pass them as command-line parameters. Key parameters include:\n\n*\n"},{"type":"text","text":"Platform:","style":{"bold":true}},{"type":"text","text":" Set to "},{"type":"text","text":"ANDROID","style":{"code":true}},{"type":"text","text":". *\n"},{"type":"text","text":"Locale:","style":{"bold":true}},{"type":"text","text":" For domestic tests, this might be "},{"type":"text","text":"en-us","style":{"code":true}},{"type":"text","text":". *\n"},{"type":"text","text":"MobileDeviceCategory:","style":{"bold":true}},{"type":"text","text":" Set to "},{"type":"text","text":"PHONE","style":{"code":true}},{"type":"text","text":". *\n"},{"type":"text","text":"DeviceStartOrientation:","style":{"bold":true}},{"type":"text","text":" Can be "},{"type":"text","text":"PORTRAIT","style":{"code":true}},{"type":"text","text":". *\n"},{"type":"text","text":"DebugDeviceID:","style":{"bold":true}},{"type":"text","text":" Provide the device ID of your emulator (found using "},{"type":"text","text":"adb devices","style":{"code":true}},{"type":"text","text":" in the terminal) or the IP address of your real device. *\n"},{"type":"text","text":"ClientID:","style":{"bold":true}},{"type":"text","text":" This is the machine serial number for local executions or to target a specific private lab machine. *\n"},{"type":"text","text":"AppPackageUrl:","style":{"bold":true}},{"type":"text","text":" The URL of your Android application build. *\n"},{"type":"text","text":"AppBuildType:","style":{"bold":true}},{"type":"text","text":" Usually "},{"type":"text","text":"DEBUG","style":{"code":true}},{"type":"text","text":". (Source: `"},{"type":"link","url":"https://paramount.atlassian.net/wiki/spaces/PLQA/pages/47720266`"},{"type":"text","text":")\n\nFor Maven command-line execution, you might use arguments like:\n\n*\n"},{"type":"text","text":"-Ddriver=android","style":{"code":true}},{"type":"text","text":"\n*\n"},{"type":"text","text":"-DplatformName=Android","style":{"code":true}},{"type":"text","text":"\n*\n"},{"type":"text","text":"-DplatformVersion=11.0","style":{"code":true}},{"type":"text","text":" (example version)\n*\n"},{"type":"text","text":"-DdeviceName=\"Google Pixel 2XL\"","style":{"code":true}},{"type":"text","text":" (example device name)\n*\n"},{"type":"text","text":"-Denvironment=local","style":{"code":true}},{"type":"text","text":"\n*\n"},{"type":"text","text":"-Dheadless=false","style":{"code":true}},{"type":"text","text":"\n*\n"},{"type":"text","text":"-Dapp=\"/pathToPackage/your-app.apk\"","style":{"code":true}},{"type":"text","text":" (path to your application package)\n*\n"},{"type":"text","text":"-Dudid=your_device_udid","style":{"code":true}},{"type":"text","text":" (for real mobile devices)\n*\n"},{"type":"text","text":"-DbundleId=your.app.bundle.id","style":{"code":true}},{"type":"text","text":" (to override default settings)\n\n(Source: `"},{"type":"link","url":"https://paramount.atlassian.net/wiki/spaces/PLQA/pages/47711460`"},{"type":"text","text":")\n\n"},{"type":"text","text":"3. Running the Test","style":{"bold":true}},{"type":"text","text":"\nOnce configured, you can run tests in a couple of ways:\n\n*\n"},{"type":"text","text":"From the Terminal (using Maven):","style":{"bold":true}},{"type":"text","text":"\n    Open your IDE terminal and execute a Maven command. You can specify test groups or tags.\n\n"},{"type":"text","text":"(message continued in thread...)","style":{"italic":true}}]}]}]}}
2025-08-22 14:27:17,182 - slack_sdk.web.base_client - DEBUG - [base_client.py:255] - Sending a request - url: https://slack.com/api/chat.postMessage, query_params: {}, body_params: {}, files: {}, json_body: {'channel': 'D09A0LFHK8R', 'text': '_(part 2/2)_\n\n```bash\n    mvn clean test -pl mqe-hob-mobile-tests -am -Dgroups=Your test case number or tag\n    ```\n    (Source: `https://paramount.atlassian.net/wiki/spaces/PLQA/pages/47720266`)\n\n*\n*From TestNGSuiteConfig.xml:*\n    Navigate to the `TestNGSuiteConfig.xml` file, right-click, and select "Run TestNGSuiteConfig.xml." You will need to provide the test case ID or tag name in the `<include name>` section within the XML, for example:\n    ```xml\n    <test verbose="1" name="All Mobile Tests" annotations="JDK">\n        <groups>\n            <run>\n                <include name="Debug"/>\n                <exclude name="Broken"/>\n            </run>\n        </groups>\n    </test>\n    ```\n    (Source: `https://paramount.atlassian.net/wiki/spaces/PLQA/pages/47720266`)\n\n────────────────────────────────────────\n*📚 Sources:*\n1. https://paramount.atlassian.net/wiki/spaces/PLQA/pages/47713566\n2. https://paramount.atlassian.net/wiki/spaces/PLQA/pages/47720266\n3. https://paramount.atlassian.net/wiki/spaces/PLQA/pages/47711460', 'thread_ts': '1755898019.072619', 'team_id': 'T010QS7UQNA'}, headers: {'Content-Type': 'application/json;charset=utf-8', 'Authorization': '(redacted)', 'User-Agent': 'Python/3.12.0 slackclient/3.34.0 Darwin/23.4.0'}
2025-08-22 14:27:17,540 - slack_sdk.web.base_client - DEBUG - [base_client.py:546] - Received the following response - status: 200, headers: {'date': 'Fri, 22 Aug 2025 21:27:17 GMT', 'server': 'Apache', 'vary': 'Accept-Encoding', 'x-slack-req-id': 'c5dc9bd06bc0daa2695af9a514c97675', 'x-content-type-options': 'nosniff', 'x-xss-protection': '0', 'pragma': 'no-cache', 'cache-control': 'private, no-cache, no-store, must-revalidate', 'expires': 'Sat, 26 Jul 1997 05:00:00 GMT', 'content-type': 'application/json; charset=utf-8', 'x-accepted-oauth-scopes': 'chat:write', 'x-oauth-scopes': 'app_mentions:read,channels:history,chat:write,im:history,im:read,im:write,users:read,reactions:write,users:read.email', 'access-control-expose-headers': 'x-slack-req-id, retry-after', 'access-control-allow-headers': 'slack-route, x-slack-version-ts, x-b3-traceid, x-b3-spanid, x-b3-parentspanid, x-b3-sampled, x-b3-flags', 'strict-transport-security': 'max-age=31536000; includeSubDomains; preload', 'referrer-policy': 'no-referrer', 'x-slack-unique-id': 'aKjgtVyXmoZVNaxmpjDENQAAAAI', 'x-slack-backend': 'r', 'access-control-allow-origin': '*', 'content-length': '4063', 'via': '1.1 slack-prod.tinyspeck.com, envoy-www-iad-eraotwcg,envoy-edge-pdx-mbwmijal', 'x-envoy-attempt-count': '1', 'x-envoy-upstream-service-time': '155', 'x-backend': 'main_normal main_canary_with_overflow main_control_with_overflow', 'x-server': 'slack-www-hhvm-main-iad-rpyp', 'x-slack-shared-secret-outcome': 'no-match', 'x-edge-backend': 'envoy-www', 'timing-allow-origin': '*', 'x-slack-edge-shared-secret-outcome': 'no-match', 'connection': 'close'}, body: {"ok":true,"channel":"D09A0LFHK8R","ts":"1755898037.488489","message":{"user":"U099R6WTZ9S","type":"message","ts":"1755898037.488489","bot_id":"B099R6WTRU4","app_id":"A099LACAB2R","text":"_(part 2/2)_\n\n```bash\n    mvn clean test -pl mqe-hob-mobile-tests -am -Dgroups=Your test case number or tag\n    ```\n    (Source: `<https://paramount.atlassian.net/wiki/spaces/PLQA/pages/47720266`>)\n\n*\n*From TestNGSuiteConfig.xml:*\n    Navigate to the `TestNGSuiteConfig.xml` file, right-click, and select \"Run TestNGSuiteConfig.xml.\" You will need to provide the test case ID or tag name in the `&lt;include name&gt;` section within the XML, for example:\n    ```xml\n    &lt;test verbose=\"1\" name=\"All Mobile Tests\" annotations=\"JDK\"&gt;\n        &lt;groups&gt;\n            &lt;run&gt;\n                &lt;include name=\"Debug\"/&gt;\n                &lt;exclude name=\"Broken\"/&gt;\n            &lt;/run&gt;\n        &lt;/groups&gt;\n    &lt;/test&gt;\n    ```\n    (Source: `<https://paramount.atlassian.net/wiki/spaces/PLQA/pages/47720266`>)\n\n────────────────────────────────────────\n*:books: Sources:*\n1. <https://paramount.atlassian.net/wiki/spaces/PLQA/pages/47713566>\n2. <https://paramount.atlassian.net/wiki/spaces/PLQA/pages/47720266>\n3. <https://paramount.atlassian.net/wiki/spaces/PLQA/pages/47711460>","team":"T010QS7UQNA","bot_profile":{"id":"B099R6WTRU4","app_id":"A099LACAB2R","user_id":"U099R6WTZ9S","name":"AutoBot","icons":{"image_36":"https://a.slack-edge.com/80588/img/plugins/app/bot_36.png","image_48":"https://a.slack-edge.com/80588/img/plugins/app/bot_48.png","image_72":"https://a.slack-edge.com/80588/img/plugins/app/service_72.png"},"deleted":false,"updated":1754677948,"team_id":"T010QS7UQNA"},"thread_ts":"1755898019.072619","parent_user_id":"U01RMTFMALF","blocks":[{"type":"rich_text","block_id":"UuBO","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"(part 2/2)","style":{"italic":true}},{"type":"text","text":"\n\n"}]},{"type":"rich_text_preformatted","elements":[{"type":"text","text":"bash\n    mvn clean test -pl mqe-hob-mobile-tests -am -Dgroups=Your test case number or tag\n    "}]},{"type":"rich_text_section","elements":[{"type":"text","text":"    (Source: `"},{"type":"link","url":"https://paramount.atlassian.net/wiki/spaces/PLQA/pages/47720266`"},{"type":"text","text":")\n\n*\n"},{"type":"text","text":"From TestNGSuiteConfig.xml:","style":{"bold":true}},{"type":"text","text":"\n    Navigate to the "},{"type":"text","text":"TestNGSuiteConfig.xml","style":{"code":true}},{"type":"text","text":" file, right-click, and select \"Run TestNGSuiteConfig.xml.\" You will need to provide the test case ID or tag name in the "},{"type":"text","text":"<include name>","style":{"code":true}},{"type":"text","text":" section within the XML, for example:\n    "}]},{"type":"rich_text_preformatted","elements":[{"type":"text","text":"xml\n    <test verbose=\"1\" name=\"All Mobile Tests\" annotations=\"JDK\">\n        <groups>\n            <run>\n                <include name=\"Debug\"/>\n                <exclude name=\"Broken\"/>\n            </run>\n        </groups>\n    </test>\n    "}]},{"type":"rich_text_section","elements":[{"type":"text","text":"    (Source: `"},{"type":"link","url":"https://paramount.atlassian.net/wiki/spaces/PLQA/pages/47720266`"},{"type":"text","text":")\n\n────────────────────────────────────────\n"},{"type":"emoji","name":"books","unicode":"1f4da","style":{"bold":true}},{"type":"text","text":" Sources:","style":{"bold":true}},{"type":"text","text":"\n1. "},{"type":"link","url":"https://paramount.atlassian.net/wiki/spaces/PLQA/pages/47713566"},{"type":"text","text":"\n2. "},{"type":"link","url":"https://paramount.atlassian.net/wiki/spaces/PLQA/pages/47720266"},{"type":"text","text":"\n3. "},{"type":"link","url":"https://paramount.atlassian.net/wiki/spaces/PLQA/pages/47711460"}]}]}]}}
2025-08-22 14:27:17,541 - __main__ - DEBUG - [main.py:636] - Cleaning up DM thread tracking...
2025-08-22 14:27:17,541 - utils - DEBUG - [utils.py:67] - Managing thread: D09A0LFHK8R:1755898019.072619, action: remove, user: U01RMTFMALF
2025-08-22 14:27:17,541 - utils - INFO - [utils.py:100] - Removed thread D09A0LFHK8R:1755898019.072619 from active tracking (remaining: 0)
2025-08-22 14:27:18,181 - slack_bolt.App - DEBUG - [client.py:235] - on_message invoked: (message: {"envelope_id":"b362e2f8-b994-4222-8d9d-ebdd7f0e2920","payload":{"token":"yq71khZBCyJF1Ri2hG5aNqr5","team_id":"T010QS7UQNA","enterprise_id":"ERV4P7NAD","context_team_id":null,"context_enterprise_id":"ERV4P7NAD","api_app_id":"A099LACAB2R","event":{"user":"U099R6WTZ9S","type":"message","ts":"1755898037.114879","bot_id":"B099R6WTRU4","app_id":"A099LACAB2R","text":"*Your Question:*\n&gt; How can i run an automated test on a local Android phone? *Answer:*\nTo run an automated test on a local Android phone, you'll need to configure your environment and use specific commands, often involving tools like Maven, Appium, and TestNG. Here's a breakdown of the steps and configurations:\n\n*1. Environment Setup &amp; Prerequisites*\n*   *Android Home Environment Variable:* For Android Emulators, ensure the `$ANDROID_HOME` environment variable is set and included in your system's path. (Source: `<https:\/\/paramount.atlassian.net\/wiki\/spaces\/PLQA\/pages\/47713566`>)\n*\n*VPN Connection:* Connect to the necessary VPN. (Source: `<https:\/\/paramount.atlassian.net\/wiki\/spaces\/PLQA\/pages\/47720266`>)\n*\n*Synergy Server:* Download the latest version of the Synergy server and run its `.jar` file. (Source: `<https:\/\/paramount.atlassian.net\/wiki\/spaces\/PLQA\/pages\/47720266`>)\n*\n*Appium Server:* The `SampleTest.java` class (a sample test class mentioned in the documentation) includes methods to start and stop the Appium server. (Source: `<https:\/\/paramount.atlassian.net\/wiki\/spaces\/PLQA\/pages\/47711460`>)\n*\n*Emulator Launch:* If your test environment is set to \"local\" and the driver is \"android,\" an emulator can be launched automatically. (Source: `<https:\/\/paramount.atlassian.net\/wiki\/spaces\/PLQA\/pages\/47711460`>)\n\n*2. Configuration*\nYou'll need to update desired capabilities in a `.config` file, typically located under the `mqe-hob-mobile-tests` directory, or pass them as command-line parameters. Key parameters include:\n\n*\n*Platform:* Set to `ANDROID`. *\n*Locale:* For domestic tests, this might be `en-us`. *\n*MobileDeviceCategory:* Set to `PHONE`. *\n*DeviceStartOrientation:* Can be `PORTRAIT`. *\n*DebugDeviceID:* Provide the device ID of your emulator (found using `adb devices` in the terminal) or the IP address of your real device. *\n*ClientID:* This is the machine serial number for local executions or to target a specific private lab machine. *\n*AppPackageUrl:* The URL of your Android application build. *\n*AppBuildType:* Usually `DEBUG`. (Source: `<https:\/\/paramount.atlassian.net\/wiki\/spaces\/PLQA\/pages\/47720266`>)\n\nFor Maven command-line execution, you might use arguments like:\n\n*\n`-Ddriver=android`\n*\n`-DplatformName=Android`\n*\n`-DplatformVersion=11.0` (example version)\n*\n`-DdeviceName=\"Google Pixel 2XL\"` (example device name)\n*\n`-Denvironment=local`\n*\n`-Dheadless=false`\n*\n`-Dapp=\"\/pathToPackage\/your-app.apk\"` (path to your application package)\n*\n`-Dudid=your_device_udid` (for real mobile devices)\n*\n`-DbundleId=your.app.bundle.id` (to override default settings)\n\n(Source: `<https:\/\/paramount.atlassian.net\/wiki\/spaces\/PLQA\/pages\/47711460`>)\n\n*3. Running the Test*\nOnce configured, you can run tests in a couple of ways:\n\n*\n*From the Terminal (using Maven):*\n    Open your IDE terminal and execute a Maven command. You can specify test groups or tags.\n\n_(message continued in thread...)_","team":"T010QS7UQNA","bot_profile":{"id":"B099R6WTRU4","deleted":false,"name":"AutoBot","updated":1754677948,"app_id":"A099LACAB2R","user_id":"U099R6WTZ9S","icons":{"image_36":"https:\/\/a.slack-edge.com\/80588\/img\/plugins\/app\/bot_36.png","image_48":"https:\/\/a.slack-edge.com\/80588\/img\/plugins\/app\/bot_48.png","image_72":"https:\/\/a.slack-edge.com\/80588\/img\/plugins\/app\/service_72.png"},"team_id":"T010QS7UQNA"},"thread_ts":"1755898019.072619","parent_user_id":"U01RMTFMALF","blocks":[{"type":"rich_text","block_id":"27st6","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Your Question:","style":{"bold":true}}]},{"type":"rich_text_quote","elements":[{"type":"text","text":"How can i run an automated test on a local Android phone? "},{"type":"text","text":"Answer:","style":{"bold":true}}]},{"type":"rich_text_section","elements":[{"type":"text","text":"To run an automated test on a local Android phone, you'll need to configure your environment and use specific commands, often involving tools like Maven, Appium, and TestNG. Here's a breakdown of the steps and configurations:\n\n"},{"type":"text","text":"1. Environment Setup & Prerequisites","style":{"bold":true}},{"type":"text","text":"\n*   "},{"type":"text","text":"Android Home Environment Variable:","style":{"bold":true}},{"type":"text","text":" For Android Emulators, ensure the "},{"type":"text","text":"$ANDROID_HOME","style":{"code":true}},{"type":"text","text":" environment variable is set and included in your system's path. (Source: `"},{"type":"link","url":"https:\/\/paramount.atlassian.net\/wiki\/spaces\/PLQA\/pages\/47713566`"},{"type":"text","text":")\n*\n"},{"type":"text","text":"VPN Connection:","style":{"bold":true}},{"type":"text","text":" Connect to the necessary VPN. (Source: `"},{"type":"link","url":"https:\/\/paramount.atlassian.net\/wiki\/spaces\/PLQA\/pages\/47720266`"},{"type":"text","text":")\n*\n"},{"type":"text","text":"Synergy Server:","style":{"bold":true}},{"type":"text","text":" Download the latest version of the Synergy server and run its "},{"type":"text","text":".jar","style":{"code":true}},{"type":"text","text":" file. (Source: `"},{"type":"link","url":"https:\/\/paramount.atlassian.net\/wiki\/spaces\/PLQA\/pages\/47720266`"},{"type":"text","text":")\n*\n"},{"type":"text","text":"Appium Server:","style":{"bold":true}},{"type":"text","text":" The "},{"type":"text","text":"SampleTest.java","style":{"code":true}},{"type":"text","text":" class (a sample test class mentioned in the documentation) includes methods to start and stop the Appium server. (Source: `"},{"type":"link","url":"https:\/\/paramount.atlassian.net\/wiki\/spaces\/PLQA\/pages\/47711460`"},{"type":"text","text":")\n*\n"},{"type":"text","text":"Emulator Launch:","style":{"bold":true}},{"type":"text","text":" If your test environment is set to \"local\" and the driver is \"android,\" an emulator can be launched automatically. (Source: `"},{"type":"link","url":"https:\/\/paramount.atlassian.net\/wiki\/spaces\/PLQA\/pages\/47711460`"},{"type":"text","text":")\n\n"},{"type":"text","text":"2. Configuration","style":{"bold":true}},{"type":"text","text":"\nYou'll need to update desired capabilities in a "},{"type":"text","text":".config","style":{"code":true}},{"type":"text","text":" file, typically located under the "},{"type":"text","text":"mqe-hob-mobile-tests","style":{"code":true}},{"type":"text","text":" directory, or pass them as command-line parameters. Key parameters include:\n\n*\n"},{"type":"text","text":"Platform:","style":{"bold":true}},{"type":"text","text":" Set to "},{"type":"text","text":"ANDROID","style":{"code":true}},{"type":"text","text":". *\n"},{"type":"text","text":"Locale:","style":{"bold":true}},{"type":"text","text":" For domestic tests, this might be "},{"type":"text","text":"en-us","style":{"code":true}},{"type":"text","text":". *\n"},{"type":"text","text":"MobileDeviceCategory:","style":{"bold":true}},{"type":"text","text":" Set to "},{"type":"text","text":"PHONE","style":{"code":true}},{"type":"text","text":". *\n"},{"type":"text","text":"DeviceStartOrientation:","style":{"bold":true}},{"type":"text","text":" Can be "},{"type":"text","text":"PORTRAIT","style":{"code":true}},{"type":"text","text":". *\n"},{"type":"text","text":"DebugDeviceID:","style":{"bold":true}},{"type":"text","text":" Provide the device ID of your emulator (found using "},{"type":"text","text":"adb devices","style":{"code":true}},{"type":"text","text":" in the terminal) or the IP address of your real device. *\n"},{"type":"text","text":"ClientID:","style":{"bold":true}},{"type":"text","text":" This is the machine serial number for local executions or to target a specific private lab machine. *\n"},{"type":"text","text":"AppPackageUrl:","style":{"bold":true}},{"type":"text","text":" The URL of your Android application build. *\n"},{"type":"text","text":"AppBuildType:","style":{"bold":true}},{"type":"text","text":" Usually "},{"type":"text","text":"DEBUG","style":{"code":true}},{"type":"text","text":". (Source: `"},{"type":"link","url":"https:\/\/paramount.atlassian.net\/wiki\/spaces\/PLQA\/pages\/47720266`"},{"type":"text","text":")\n\nFor Maven command-line execution, you might use arguments like:\n\n*\n"},{"type":"text","text":"-Ddriver=android","style":{"code":true}},{"type":"text","text":"\n*\n"},{"type":"text","text":"-DplatformName=Android","style":{"code":true}},{"type":"text","text":"\n*\n"},{"type":"text","text":"-DplatformVersion=11.0","style":{"code":true}},{"type":"text","text":" (example version)\n*\n"},{"type":"text","text":"-DdeviceName=\"Google Pixel 2XL\"","style":{"code":true}},{"type":"text","text":" (example device name)\n*\n"},{"type":"text","text":"-Denvironment=local","style":{"code":true}},{"type":"text","text":"\n*\n"},{"type":"text","text":"-Dheadless=false","style":{"code":true}},{"type":"text","text":"\n*\n"},{"type":"text","text":"-Dapp=\"\/pathToPackage\/your-app.apk\"","style":{"code":true}},{"type":"text","text":" (path to your application package)\n*\n"},{"type":"text","text":"-Dudid=your_device_udid","style":{"code":true}},{"type":"text","text":" (for real mobile devices)\n*\n"},{"type":"text","text":"-DbundleId=your.app.bundle.id","style":{"code":true}},{"type":"text","text":" (to override default settings)\n\n(Source: `"},{"type":"link","url":"https:\/\/paramount.atlassian.net\/wiki\/spaces\/PLQA\/pages\/47711460`"},{"type":"text","text":")\n\n"},{"type":"text","text":"3. Running the Test","style":{"bold":true}},{"type":"text","text":"\nOnce configured, you can run tests in a couple of ways:\n\n*\n"},{"type":"text","text":"From the Terminal (using Maven):","style":{"bold":true}},{"type":"text","text":"\n    Open your IDE terminal and execute a Maven command. You can specify test groups or tags.\n\n"},{"type":"text","text":"(message continued in thread...)","style":{"italic":true}}]}]}],"channel":"D09A0LFHK8R","event_ts":"1755898037.114879","channel_type":"im"},"type":"event_callback","event_id":"Ev09BMQ61FBP","event_time":1755898037,"authorizations":[{"enterprise_id":"ERV4P7NAD","team_id":"T010QS7UQNA","user_id":"U099R6WTZ9S","is_bot":true,"is_enterprise_install":false}],"is_ext_shared_channel":false,"event_context":"4-eyJldCI6Im1lc3NhZ2UiLCJ0aWQiOiJUMDEwUVM3VVFOQSIsImFpZCI6IkEwOTlMQUNBQjJSIiwiY2lkIjoiRDA5QTBMRkhLOFIifQ"},"type":"events_api","accepts_response_payload":false,"retry_attempt":0,"retry_reason":""})
2025-08-22 14:27:18,183 - slack_bolt.App - DEBUG - [client.py:99] - A new message enqueued (current queue size: 1)
2025-08-22 14:27:18,183 - slack_bolt.App - DEBUG - [client.py:105] - A message dequeued (current queue size: 0)
2025-08-22 14:27:18,184 - slack_bolt.App - DEBUG - [client.py:125] - Message processing started (type: events_api, envelope_id: b362e2f8-b994-4222-8d9d-ebdd7f0e2920)
2025-08-22 14:27:18,184 - slack_bolt.App - DEBUG - [app.py:476] - Applying slack_bolt.middleware.ssl_check.ssl_check.SslCheck
2025-08-22 14:27:18,185 - slack_bolt.App - DEBUG - [app.py:476] - Applying slack_bolt.middleware.request_verification.request_verification.RequestVerification
2025-08-22 14:27:18,185 - slack_bolt.App - DEBUG - [app.py:476] - Applying slack_bolt.middleware.authorization.single_team_authorization.SingleTeamAuthorization
2025-08-22 14:27:18,185 - slack_bolt.App - DEBUG - [app.py:476] - Applying slack_bolt.middleware.ignoring_self_events.ignoring_self_events.IgnoringSelfEvents
2025-08-22 14:27:18,185 - slack_bolt.IgnoringSelfEvents - DEBUG - [ignoring_self_events.py:60] - Skipped self event: {'user': 'U099R6WTZ9S', 'type': 'message', 'ts': '1755898037.114879', 'bot_id': 'B099R6WTRU4', 'app_id': 'A099LACAB2R', 'text': '*Your Question:*\n&gt; How can i run an automated test on a local Android phone? *Answer:*\nTo run an automated test on a local Android phone, you\'ll need to configure your environment and use specific commands, often involving tools like Maven, Appium, and TestNG. Here\'s a breakdown of the steps and configurations:\n\n*1. Environment Setup &amp; Prerequisites*\n*   *Android Home Environment Variable:* For Android Emulators, ensure the `$ANDROID_HOME` environment variable is set and included in your system\'s path. (Source: `<https://paramount.atlassian.net/wiki/spaces/PLQA/pages/47713566`>)\n*\n*VPN Connection:* Connect to the necessary VPN. (Source: `<https://paramount.atlassian.net/wiki/spaces/PLQA/pages/47720266`>)\n*\n*Synergy Server:* Download the latest version of the Synergy server and run its `.jar` file. (Source: `<https://paramount.atlassian.net/wiki/spaces/PLQA/pages/47720266`>)\n*\n*Appium Server:* The `SampleTest.java` class (a sample test class mentioned in the documentation) includes methods to start and stop the Appium server. (Source: `<https://paramount.atlassian.net/wiki/spaces/PLQA/pages/47711460`>)\n*\n*Emulator Launch:* If your test environment is set to "local" and the driver is "android," an emulator can be launched automatically. (Source: `<https://paramount.atlassian.net/wiki/spaces/PLQA/pages/47711460`>)\n\n*2. Configuration*\nYou\'ll need to update desired capabilities in a `.config` file, typically located under the `mqe-hob-mobile-tests` directory, or pass them as command-line parameters. Key parameters include:\n\n*\n*Platform:* Set to `ANDROID`. *\n*Locale:* For domestic tests, this might be `en-us`. *\n*MobileDeviceCategory:* Set to `PHONE`. *\n*DeviceStartOrientation:* Can be `PORTRAIT`. *\n*DebugDeviceID:* Provide the device ID of your emulator (found using `adb devices` in the terminal) or the IP address of your real device. *\n*ClientID:* This is the machine serial number for local executions or to target a specific private lab machine. *\n*AppPackageUrl:* The URL of your Android application build. *\n*AppBuildType:* Usually `DEBUG`. (Source: `<https://paramount.atlassian.net/wiki/spaces/PLQA/pages/47720266`>)\n\nFor Maven command-line execution, you might use arguments like:\n\n*\n`-Ddriver=android`\n*\n`-DplatformName=Android`\n*\n`-DplatformVersion=11.0` (example version)\n*\n`-DdeviceName="Google Pixel 2XL"` (example device name)\n*\n`-Denvironment=local`\n*\n`-Dheadless=false`\n*\n`-Dapp="/pathToPackage/your-app.apk"` (path to your application package)\n*\n`-Dudid=your_device_udid` (for real mobile devices)\n*\n`-DbundleId=your.app.bundle.id` (to override default settings)\n\n(Source: `<https://paramount.atlassian.net/wiki/spaces/PLQA/pages/47711460`>)\n\n*3. Running the Test*\nOnce configured, you can run tests in a couple of ways:\n\n*\n*From the Terminal (using Maven):*\n    Open your IDE terminal and execute a Maven command. You can specify test groups or tags.\n\n_(message continued in thread...)_', 'team': 'T010QS7UQNA', 'bot_profile': {'id': 'B099R6WTRU4', 'deleted': False, 'name': 'AutoBot', 'updated': 1754677948, 'app_id': 'A099LACAB2R', 'user_id': 'U099R6WTZ9S', 'icons': {'image_36': 'https://a.slack-edge.com/80588/img/plugins/app/bot_36.png', 'image_48': 'https://a.slack-edge.com/80588/img/plugins/app/bot_48.png', 'image_72': 'https://a.slack-edge.com/80588/img/plugins/app/service_72.png'}, 'team_id': 'T010QS7UQNA'}, 'thread_ts': '1755898019.072619', 'parent_user_id': 'U01RMTFMALF', 'blocks': [{'type': 'rich_text', 'block_id': '27st6', 'elements': [{'type': 'rich_text_section', 'elements': [{'type': 'text', 'text': 'Your Question:', 'style': {'bold': True}}]}, {'type': 'rich_text_quote', 'elements': [{'type': 'text', 'text': 'How can i run an automated test on a local Android phone? '}, {'type': 'text', 'text': 'Answer:', 'style': {'bold': True}}]}, {'type': 'rich_text_section', 'elements': [{'type': 'text', 'text': "To run an automated test on a local Android phone, you'll need to configure your environment and use specific commands, often involving tools like Maven, Appium, and TestNG. Here's a breakdown of the steps and configurations:\n\n"}, {'type': 'text', 'text': '1. Environment Setup & Prerequisites', 'style': {'bold': True}}, {'type': 'text', 'text': '\n*   '}, {'type': 'text', 'text': 'Android Home Environment Variable:', 'style': {'bold': True}}, {'type': 'text', 'text': ' For Android Emulators, ensure the '}, {'type': 'text', 'text': '$ANDROID_HOME', 'style': {'code': True}}, {'type': 'text', 'text': " environment variable is set and included in your system's path. (Source: `"}, {'type': 'link', 'url': 'https://paramount.atlassian.net/wiki/spaces/PLQA/pages/47713566`'}, {'type': 'text', 'text': ')\n*\n'}, {'type': 'text', 'text': 'VPN Connection:', 'style': {'bold': True}}, {'type': 'text', 'text': ' Connect to the necessary VPN. (Source: `'}, {'type': 'link', 'url': 'https://paramount.atlassian.net/wiki/spaces/PLQA/pages/47720266`'}, {'type': 'text', 'text': ')\n*\n'}, {'type': 'text', 'text': 'Synergy Server:', 'style': {'bold': True}}, {'type': 'text', 'text': ' Download the latest version of the Synergy server and run its '}, {'type': 'text', 'text': '.jar', 'style': {'code': True}}, {'type': 'text', 'text': ' file. (Source: `'}, {'type': 'link', 'url': 'https://paramount.atlassian.net/wiki/spaces/PLQA/pages/47720266`'}, {'type': 'text', 'text': ')\n*\n'}, {'type': 'text', 'text': 'Appium Server:', 'style': {'bold': True}}, {'type': 'text', 'text': ' The '}, {'type': 'text', 'text': 'SampleTest.java', 'style': {'code': True}}, {'type': 'text', 'text': ' class (a sample test class mentioned in the documentation) includes methods to start and stop the Appium server. (Source: `'}, {'type': 'link', 'url': 'https://paramount.atlassian.net/wiki/spaces/PLQA/pages/47711460`'}, {'type': 'text', 'text': ')\n*\n'}, {'type': 'text', 'text': 'Emulator Launch:', 'style': {'bold': True}}, {'type': 'text', 'text': ' If your test environment is set to "local" and the driver is "android," an emulator can be launched automatically. (Source: `'}, {'type': 'link', 'url': 'https://paramount.atlassian.net/wiki/spaces/PLQA/pages/47711460`'}, {'type': 'text', 'text': ')\n\n'}, {'type': 'text', 'text': '2. Configuration', 'style': {'bold': True}}, {'type': 'text', 'text': "\nYou'll need to update desired capabilities in a "}, {'type': 'text', 'text': '.config', 'style': {'code': True}}, {'type': 'text', 'text': ' file, typically located under the '}, {'type': 'text', 'text': 'mqe-hob-mobile-tests', 'style': {'code': True}}, {'type': 'text', 'text': ' directory, or pass them as command-line parameters. Key parameters include:\n\n*\n'}, {'type': 'text', 'text': 'Platform:', 'style': {'bold': True}}, {'type': 'text', 'text': ' Set to '}, {'type': 'text', 'text': 'ANDROID', 'style': {'code': True}}, {'type': 'text', 'text': '. *\n'}, {'type': 'text', 'text': 'Locale:', 'style': {'bold': True}}, {'type': 'text', 'text': ' For domestic tests, this might be '}, {'type': 'text', 'text': 'en-us', 'style': {'code': True}}, {'type': 'text', 'text': '. *\n'}, {'type': 'text', 'text': 'MobileDeviceCategory:', 'style': {'bold': True}}, {'type': 'text', 'text': ' Set to '}, {'type': 'text', 'text': 'PHONE', 'style': {'code': True}}, {'type': 'text', 'text': '. *\n'}, {'type': 'text', 'text': 'DeviceStartOrientation:', 'style': {'bold': True}}, {'type': 'text', 'text': ' Can be '}, {'type': 'text', 'text': 'PORTRAIT', 'style': {'code': True}}, {'type': 'text', 'text': '. *\n'}, {'type': 'text', 'text': 'DebugDeviceID:', 'style': {'bold': True}}, {'type': 'text', 'text': ' Provide the device ID of your emulator (found using '}, {'type': 'text', 'text': 'adb devices', 'style': {'code': True}}, {'type': 'text', 'text': ' in the terminal) or the IP address of your real device. *\n'}, {'type': 'text', 'text': 'ClientID:', 'style': {'bold': True}}, {'type': 'text', 'text': ' This is the machine serial number for local executions or to target a specific private lab machine. *\n'}, {'type': 'text', 'text': 'AppPackageUrl:', 'style': {'bold': True}}, {'type': 'text', 'text': ' The URL of your Android application build. *\n'}, {'type': 'text', 'text': 'AppBuildType:', 'style': {'bold': True}}, {'type': 'text', 'text': ' Usually '}, {'type': 'text', 'text': 'DEBUG', 'style': {'code': True}}, {'type': 'text', 'text': '. (Source: `'}, {'type': 'link', 'url': 'https://paramount.atlassian.net/wiki/spaces/PLQA/pages/47720266`'}, {'type': 'text', 'text': ')\n\nFor Maven command-line execution, you might use arguments like:\n\n*\n'}, {'type': 'text', 'text': '-Ddriver=android', 'style': {'code': True}}, {'type': 'text', 'text': '\n*\n'}, {'type': 'text', 'text': '-DplatformName=Android', 'style': {'code': True}}, {'type': 'text', 'text': '\n*\n'}, {'type': 'text', 'text': '-DplatformVersion=11.0', 'style': {'code': True}}, {'type': 'text', 'text': ' (example version)\n*\n'}, {'type': 'text', 'text': '-DdeviceName="Google Pixel 2XL"', 'style': {'code': True}}, {'type': 'text', 'text': ' (example device name)\n*\n'}, {'type': 'text', 'text': '-Denvironment=local', 'style': {'code': True}}, {'type': 'text', 'text': '\n*\n'}, {'type': 'text', 'text': '-Dheadless=false', 'style': {'code': True}}, {'type': 'text', 'text': '\n*\n'}, {'type': 'text', 'text': '-Dapp="/pathToPackage/your-app.apk"', 'style': {'code': True}}, {'type': 'text', 'text': ' (path to your application package)\n*\n'}, {'type': 'text', 'text': '-Dudid=your_device_udid', 'style': {'code': True}}, {'type': 'text', 'text': ' (for real mobile devices)\n*\n'}, {'type': 'text', 'text': '-DbundleId=your.app.bundle.id', 'style': {'code': True}}, {'type': 'text', 'text': ' (to override default settings)\n\n(Source: `'}, {'type': 'link', 'url': 'https://paramount.atlassian.net/wiki/spaces/PLQA/pages/47711460`'}, {'type': 'text', 'text': ')\n\n'}, {'type': 'text', 'text': '3. Running the Test', 'style': {'bold': True}}, {'type': 'text', 'text': '\nOnce configured, you can run tests in a couple of ways:\n\n*\n'}, {'type': 'text', 'text': 'From the Terminal (using Maven):', 'style': {'bold': True}}, {'type': 'text', 'text': '\n    Open your IDE terminal and execute a Maven command. You can specify test groups or tags.\n\n'}, {'type': 'text', 'text': '(message continued in thread...)', 'style': {'italic': True}}]}]}], 'channel': 'D09A0LFHK8R', 'event_ts': '1755898037.114879', 'channel_type': 'im'}
2025-08-22 14:27:18,186 - slack_bolt.App - DEBUG - [client.py:200] - Sending a message (session id: cef30a94-422f-4081-a894-ae49fdf16031, message: {"envelope_id": "b362e2f8-b994-4222-8d9d-ebdd7f0e2920"})
2025-08-22 14:27:18,186 - slack_bolt.App - DEBUG - [internals.py:41] - Response time: 2 milliseconds
2025-08-22 14:27:18,186 - slack_bolt.App - DEBUG - [client.py:150] - Message processing completed (type: events_api, envelope_id: b362e2f8-b994-4222-8d9d-ebdd7f0e2920)
2025-08-22 14:27:18,889 - slack_bolt.App - DEBUG - [client.py:235] - on_message invoked: (message: {"envelope_id":"d80251a4-bd72-4ff4-8473-622db638d51c","payload":{"token":"yq71khZBCyJF1Ri2hG5aNqr5","team_id":"T010QS7UQNA","enterprise_id":"ERV4P7NAD","context_team_id":null,"context_enterprise_id":"ERV4P7NAD","api_app_id":"A099LACAB2R","event":{"user":"U099R6WTZ9S","type":"message","ts":"1755898037.488489","bot_id":"B099R6WTRU4","app_id":"A099LACAB2R","text":"_(part 2\/2)_\n\n```bash\n    mvn clean test -pl mqe-hob-mobile-tests -am -Dgroups=Your test case number or tag\n    ```\n    (Source: `<https:\/\/paramount.atlassian.net\/wiki\/spaces\/PLQA\/pages\/47720266`>)\n\n*\n*From TestNGSuiteConfig.xml:*\n    Navigate to the `TestNGSuiteConfig.xml` file, right-click, and select \"Run TestNGSuiteConfig.xml.\" You will need to provide the test case ID or tag name in the `&lt;include name&gt;` section within the XML, for example:\n    ```xml\n    &lt;test verbose=\"1\" name=\"All Mobile Tests\" annotations=\"JDK\"&gt;\n        &lt;groups&gt;\n            &lt;run&gt;\n                &lt;include name=\"Debug\"\/&gt;\n                &lt;exclude name=\"Broken\"\/&gt;\n            &lt;\/run&gt;\n        &lt;\/groups&gt;\n    &lt;\/test&gt;\n    ```\n    (Source: `<https:\/\/paramount.atlassian.net\/wiki\/spaces\/PLQA\/pages\/47720266`>)\n\n\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\n*:books: Sources:*\n1. <https:\/\/paramount.atlassian.net\/wiki\/spaces\/PLQA\/pages\/47713566>\n2. <https:\/\/paramount.atlassian.net\/wiki\/spaces\/PLQA\/pages\/47720266>\n3. <https:\/\/paramount.atlassian.net\/wiki\/spaces\/PLQA\/pages\/47711460>","team":"T010QS7UQNA","bot_profile":{"id":"B099R6WTRU4","deleted":false,"name":"AutoBot","updated":1754677948,"app_id":"A099LACAB2R","user_id":"U099R6WTZ9S","icons":{"image_36":"https:\/\/a.slack-edge.com\/80588\/img\/plugins\/app\/bot_36.png","image_48":"https:\/\/a.slack-edge.com\/80588\/img\/plugins\/app\/bot_48.png","image_72":"https:\/\/a.slack-edge.com\/80588\/img\/plugins\/app\/service_72.png"},"team_id":"T010QS7UQNA"},"thread_ts":"1755898019.072619","parent_user_id":"U01RMTFMALF","blocks":[{"type":"rich_text","block_id":"Kp4QG","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"(part 2\/2)","style":{"italic":true}},{"type":"text","text":"\n\n"}]},{"type":"rich_text_preformatted","elements":[{"type":"text","text":"bash\n    mvn clean test -pl mqe-hob-mobile-tests -am -Dgroups=Your test case number or tag\n    "}]},{"type":"rich_text_section","elements":[{"type":"text","text":"    (Source: `"},{"type":"link","url":"https:\/\/paramount.atlassian.net\/wiki\/spaces\/PLQA\/pages\/47720266`"},{"type":"text","text":")\n\n*\n"},{"type":"text","text":"From TestNGSuiteConfig.xml:","style":{"bold":true}},{"type":"text","text":"\n    Navigate to the "},{"type":"text","text":"TestNGSuiteConfig.xml","style":{"code":true}},{"type":"text","text":" file, right-click, and select \"Run TestNGSuiteConfig.xml.\" You will need to provide the test case ID or tag name in the "},{"type":"text","text":"<include name>","style":{"code":true}},{"type":"text","text":" section within the XML, for example:\n    "}]},{"type":"rich_text_preformatted","elements":[{"type":"text","text":"xml\n    <test verbose=\"1\" name=\"All Mobile Tests\" annotations=\"JDK\">\n        <groups>\n            <run>\n                <include name=\"Debug\"\/>\n                <exclude name=\"Broken\"\/>\n            <\/run>\n        <\/groups>\n    <\/test>\n    "}]},{"type":"rich_text_section","elements":[{"type":"text","text":"    (Source: `"},{"type":"link","url":"https:\/\/paramount.atlassian.net\/wiki\/spaces\/PLQA\/pages\/47720266`"},{"type":"text","text":")\n\n\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\n"},{"type":"emoji","name":"books","unicode":"1f4da","style":{"bold":true}},{"type":"text","text":" Sources:","style":{"bold":true}},{"type":"text","text":"\n1. "},{"type":"link","url":"https:\/\/paramount.atlassian.net\/wiki\/spaces\/PLQA\/pages\/47713566"},{"type":"text","text":"\n2. "},{"type":"link","url":"https:\/\/paramount.atlassian.net\/wiki\/spaces\/PLQA\/pages\/47720266"},{"type":"text","text":"\n3. "},{"type":"link","url":"https:\/\/paramount.atlassian.net\/wiki\/spaces\/PLQA\/pages\/47711460"}]}]}],"channel":"D09A0LFHK8R","event_ts":"1755898037.488489","channel_type":"im"},"type":"event_callback","event_id":"Ev09BP03CN1Y","event_time":1755898037,"authorizations":[{"enterprise_id":"ERV4P7NAD","team_id":"T010QS7UQNA","user_id":"U099R6WTZ9S","is_bot":true,"is_enterprise_install":false}],"is_ext_shared_channel":false,"event_context":"4-eyJldCI6Im1lc3NhZ2UiLCJ0aWQiOiJUMDEwUVM3VVFOQSIsImFpZCI6IkEwOTlMQUNBQjJSIiwiY2lkIjoiRDA5QTBMRkhLOFIifQ"},"type":"events_api","accepts_response_payload":false,"retry_attempt":0,"retry_reason":""})
2025-08-22 14:27:18,891 - slack_bolt.App - DEBUG - [client.py:99] - A new message enqueued (current queue size: 1)
2025-08-22 14:27:18,891 - slack_bolt.App - DEBUG - [client.py:105] - A message dequeued (current queue size: 0)
2025-08-22 14:27:18,892 - slack_bolt.App - DEBUG - [client.py:125] - Message processing started (type: events_api, envelope_id: d80251a4-bd72-4ff4-8473-622db638d51c)
2025-08-22 14:27:18,892 - slack_bolt.App - DEBUG - [app.py:476] - Applying slack_bolt.middleware.ssl_check.ssl_check.SslCheck
2025-08-22 14:27:18,892 - slack_bolt.App - DEBUG - [app.py:476] - Applying slack_bolt.middleware.request_verification.request_verification.RequestVerification
2025-08-22 14:27:18,892 - slack_bolt.App - DEBUG - [app.py:476] - Applying slack_bolt.middleware.authorization.single_team_authorization.SingleTeamAuthorization
2025-08-22 14:27:18,892 - slack_bolt.App - DEBUG - [app.py:476] - Applying slack_bolt.middleware.ignoring_self_events.ignoring_self_events.IgnoringSelfEvents
2025-08-22 14:27:18,893 - slack_bolt.IgnoringSelfEvents - DEBUG - [ignoring_self_events.py:60] - Skipped self event: {'user': 'U099R6WTZ9S', 'type': 'message', 'ts': '1755898037.488489', 'bot_id': 'B099R6WTRU4', 'app_id': 'A099LACAB2R', 'text': '_(part 2/2)_\n\n```bash\n    mvn clean test -pl mqe-hob-mobile-tests -am -Dgroups=Your test case number or tag\n    ```\n    (Source: `<https://paramount.atlassian.net/wiki/spaces/PLQA/pages/47720266`>)\n\n*\n*From TestNGSuiteConfig.xml:*\n    Navigate to the `TestNGSuiteConfig.xml` file, right-click, and select "Run TestNGSuiteConfig.xml." You will need to provide the test case ID or tag name in the `&lt;include name&gt;` section within the XML, for example:\n    ```xml\n    &lt;test verbose="1" name="All Mobile Tests" annotations="JDK"&gt;\n        &lt;groups&gt;\n            &lt;run&gt;\n                &lt;include name="Debug"/&gt;\n                &lt;exclude name="Broken"/&gt;\n            &lt;/run&gt;\n        &lt;/groups&gt;\n    &lt;/test&gt;\n    ```\n    (Source: `<https://paramount.atlassian.net/wiki/spaces/PLQA/pages/47720266`>)\n\n────────────────────────────────────────\n*:books: Sources:*\n1. <https://paramount.atlassian.net/wiki/spaces/PLQA/pages/47713566>\n2. <https://paramount.atlassian.net/wiki/spaces/PLQA/pages/47720266>\n3. <https://paramount.atlassian.net/wiki/spaces/PLQA/pages/47711460>', 'team': 'T010QS7UQNA', 'bot_profile': {'id': 'B099R6WTRU4', 'deleted': False, 'name': 'AutoBot', 'updated': 1754677948, 'app_id': 'A099LACAB2R', 'user_id': 'U099R6WTZ9S', 'icons': {'image_36': 'https://a.slack-edge.com/80588/img/plugins/app/bot_36.png', 'image_48': 'https://a.slack-edge.com/80588/img/plugins/app/bot_48.png', 'image_72': 'https://a.slack-edge.com/80588/img/plugins/app/service_72.png'}, 'team_id': 'T010QS7UQNA'}, 'thread_ts': '1755898019.072619', 'parent_user_id': 'U01RMTFMALF', 'blocks': [{'type': 'rich_text', 'block_id': 'Kp4QG', 'elements': [{'type': 'rich_text_section', 'elements': [{'type': 'text', 'text': '(part 2/2)', 'style': {'italic': True}}, {'type': 'text', 'text': '\n\n'}]}, {'type': 'rich_text_preformatted', 'elements': [{'type': 'text', 'text': 'bash\n    mvn clean test -pl mqe-hob-mobile-tests -am -Dgroups=Your test case number or tag\n    '}]}, {'type': 'rich_text_section', 'elements': [{'type': 'text', 'text': '    (Source: `'}, {'type': 'link', 'url': 'https://paramount.atlassian.net/wiki/spaces/PLQA/pages/47720266`'}, {'type': 'text', 'text': ')\n\n*\n'}, {'type': 'text', 'text': 'From TestNGSuiteConfig.xml:', 'style': {'bold': True}}, {'type': 'text', 'text': '\n    Navigate to the '}, {'type': 'text', 'text': 'TestNGSuiteConfig.xml', 'style': {'code': True}}, {'type': 'text', 'text': ' file, right-click, and select "Run TestNGSuiteConfig.xml." You will need to provide the test case ID or tag name in the '}, {'type': 'text', 'text': '<include name>', 'style': {'code': True}}, {'type': 'text', 'text': ' section within the XML, for example:\n    '}]}, {'type': 'rich_text_preformatted', 'elements': [{'type': 'text', 'text': 'xml\n    <test verbose="1" name="All Mobile Tests" annotations="JDK">\n        <groups>\n            <run>\n                <include name="Debug"/>\n                <exclude name="Broken"/>\n            </run>\n        </groups>\n    </test>\n    '}]}, {'type': 'rich_text_section', 'elements': [{'type': 'text', 'text': '    (Source: `'}, {'type': 'link', 'url': 'https://paramount.atlassian.net/wiki/spaces/PLQA/pages/47720266`'}, {'type': 'text', 'text': ')\n\n────────────────────────────────────────\n'}, {'type': 'emoji', 'name': 'books', 'unicode': '1f4da', 'style': {'bold': True}}, {'type': 'text', 'text': ' Sources:', 'style': {'bold': True}}, {'type': 'text', 'text': '\n1. '}, {'type': 'link', 'url': 'https://paramount.atlassian.net/wiki/spaces/PLQA/pages/47713566'}, {'type': 'text', 'text': '\n2. '}, {'type': 'link', 'url': 'https://paramount.atlassian.net/wiki/spaces/PLQA/pages/47720266'}, {'type': 'text', 'text': '\n3. '}, {'type': 'link', 'url': 'https://paramount.atlassian.net/wiki/spaces/PLQA/pages/47711460'}]}]}], 'channel': 'D09A0LFHK8R', 'event_ts': '1755898037.488489', 'channel_type': 'im'}
2025-08-22 14:27:18,893 - slack_bolt.App - DEBUG - [client.py:200] - Sending a message (session id: cef30a94-422f-4081-a894-ae49fdf16031, message: {"envelope_id": "d80251a4-bd72-4ff4-8473-622db638d51c"})
2025-08-22 14:27:18,894 - slack_bolt.App - DEBUG - [internals.py:41] - Response time: 1 milliseconds
2025-08-22 14:27:18,894 - slack_bolt.App - DEBUG - [client.py:150] - Message processing completed (type: events_api, envelope_id: d80251a4-bd72-4ff4-8473-622db638d51c)
2025-08-22 14:30:08,183 - __main__ - INFO - [main.py:43] - Loading application configuration...
2025-08-22 14:30:08,183 - __main__ - INFO - [main.py:45] - Configuration loaded successfully
2025-08-22 14:30:08,183 - __main__ - INFO - [main.py:48] - Initializing security components...
2025-08-22 14:30:08,183 - __main__ - DEBUG - [main.py:50] - Slack validator initialized
2025-08-22 14:30:08,183 - security.content_filter - INFO - [content_filter.py:39] - Content filter initialized with 11 patterns
2025-08-22 14:30:08,183 - __main__ - DEBUG - [main.py:53] - Content filter initialized
2025-08-22 14:30:08,183 - auth.admin_manager - INFO - [admin_manager.py:27] - Admin manager initialized with 2 admin users
2025-08-22 14:30:08,183 - __main__ - DEBUG - [main.py:56] - Admin manager initialized
2025-08-22 14:30:08,183 - auth.email_whitelist - INFO - [email_whitelist.py:28] - Email whitelist initialized with 1 whitelisted emails
2025-08-22 14:30:08,183 - auth.email_whitelist - INFO - [email_whitelist.py:37] - Whitelisted domains: paramount.com
2025-08-22 14:30:08,183 - __main__ - DEBUG - [main.py:59] - Email whitelist initialized with 1 emails
2025-08-22 14:30:08,183 - auth.slack_user_info - DEBUG - [slack_user_info.py:25] - Slack user info manager initialized
2025-08-22 14:30:08,183 - __main__ - DEBUG - [main.py:62] - Slack user info manager initialized
2025-08-22 14:30:08,183 - __main__ - INFO - [main.py:63] - Security components initialized successfully
2025-08-22 14:30:08,183 - __main__ - INFO - [main.py:66] - Initializing Slack app...
2025-08-22 14:30:08,219 - slack_bolt.App - DEBUG - [base_client.py:255] - Sending a request - url: https://slack.com/api/auth.test, query_params: {}, body_params: {}, files: {}, json_body: None, headers: {'Content-Type': 'application/x-www-form-urlencoded', 'Authorization': '(redacted)', 'User-Agent': 'Bolt/1.16.0 Python/3.12.0 slackclient/3.34.0 Darwin/23.4.0'}
2025-08-22 14:30:08,563 - slack_bolt.App - DEBUG - [base_client.py:546] - Received the following response - status: 200, headers: {'date': 'Fri, 22 Aug 2025 21:30:08 GMT', 'server': 'Apache', 'vary': 'Accept-Encoding', 'x-slack-req-id': 'a64f5cc55e5ca18262c1b6ad5f0f6794', 'x-content-type-options': 'nosniff', 'x-xss-protection': '0', 'pragma': 'no-cache', 'cache-control': 'private, no-cache, no-store, must-revalidate', 'expires': 'Sat, 26 Jul 1997 05:00:00 GMT', 'content-type': 'application/json; charset=utf-8', 'x-oauth-scopes': 'app_mentions:read,channels:history,chat:write,im:history,im:read,im:write,users:read,reactions:write,users:read.email', 'access-control-expose-headers': 'x-slack-req-id, retry-after', 'access-control-allow-headers': 'slack-route, x-slack-version-ts, x-b3-traceid, x-b3-spanid, x-b3-parentspanid, x-b3-sampled, x-b3-flags', 'strict-transport-security': 'max-age=31536000; includeSubDomains; preload', 'referrer-policy': 'no-referrer', 'x-slack-unique-id': 'aKjhYK_kLKLY0giGZVBlIwAAEDE', 'x-slack-backend': 'r', 'access-control-allow-origin': '*', 'content-length': '228', 'via': '1.1 slack-prod.tinyspeck.com, envoy-www-iad-hgpzgwch,envoy-edge-pdx-dqeecikk', 'x-envoy-attempt-count': '1', 'x-envoy-upstream-service-time': '90', 'x-backend': 'main_normal main_canary_with_overflow main_control_with_overflow', 'x-server': 'slack-www-hhvm-main-iad-uemo', 'x-slack-shared-secret-outcome': 'no-match', 'x-edge-backend': 'envoy-www', 'timing-allow-origin': '*', 'x-slack-edge-shared-secret-outcome': 'no-match', 'connection': 'close'}, body: {"ok":true,"url":"https://viacomcbs-grid-test.slack.com/","team":"Test Workspace","user":"autobot","team_id":"T010QS7UQNA","user_id":"U099R6WTZ9S","bot_id":"B099R6WTRU4","enterprise_id":"ERV4P7NAD","is_enterprise_install":false}
2025-08-22 14:30:08,563 - __main__ - INFO - [main.py:68] - Slack app initialized successfully
2025-08-22 14:30:08,563 - __main__ - DEBUG - [main.py:72] - Message deduplication cache initialized
2025-08-22 14:30:08,563 - __main__ - DEBUG - [main.py:77] - Thread tracking initialized
2025-08-22 14:30:08,563 - __main__ - INFO - [main.py:80] - Initializing DIG AI integration...
2025-08-22 14:30:08,563 - dig_connector - INFO - [dig_connector.py:284] - Initializing DIG AI with model ID: 42
2025-08-22 14:30:08,563 - dig_connector - INFO - [dig_connector.py:49] - Starting DIG chat session initialization...
2025-08-22 14:30:08,564 - dig_connector - DEBUG - [dig_connector.py:52] - Creating chat with name: Slack Bot Session 2025-08-22T21:30:08.564000+00:00
2025-08-22 14:30:08,564 - dig_connector - DEBUG - [dig_connector.py:63] - Creating chat - URL: https://ai.digdev.cbsicloud.com/fastapi/chats, Payload: {'chat_nm': 'Slack Bot Session 2025-08-22T21:30:08.564000+00:00', 'model_id': 42}
2025-08-22 14:30:08,566 - urllib3.connectionpool - DEBUG - [connectionpool.py:1055] - Starting new HTTPS connection (1): ai.digdev.cbsicloud.com:443
2025-08-22 14:30:08,833 - urllib3.connectionpool - DEBUG - [connectionpool.py:549] - https://ai.digdev.cbsicloud.com:443 "POST /fastapi/chats HTTP/1.1" 200 217
2025-08-22 14:30:08,834 - dig_connector - DEBUG - [dig_connector.py:66] - Create chat response: status=200
2025-08-22 14:30:08,835 - dig_connector - INFO - [dig_connector.py:54] - Successfully initialized DIG chat session with ID: 889
2025-08-22 14:30:08,835 - __main__ - INFO - [main.py:83] - DIG AI integration successfully initialized
2025-08-22 14:30:08,835 - __main__ - INFO - [main.py:87] - Setting up event handlers...
2025-08-22 14:30:08,837 - __main__ - INFO - [main.py:747] - Starting AI Assistant Bot...
2025-08-22 14:30:08,837 - __main__ - INFO - [main.py:748] - Registering event handlers...
2025-08-22 14:30:08,837 - __main__ - DEBUG - [main.py:749] - Event handlers registered: app_mention, message, app_home_opened
2025-08-22 14:30:08,837 - __main__ - INFO - [main.py:752] - Connecting to Slack via Socket Mode...
2025-08-22 14:30:08,838 - __main__ - INFO - [main.py:756] - Socket Mode handler created successfully
2025-08-22 14:30:08,838 - __main__ - INFO - [main.py:758] - ✅ Bot is now running and listening for events!
2025-08-22 14:30:08,839 - slack_bolt.App - DEBUG - [base_client.py:255] - Sending a request - url: https://slack.com/api/apps.connections.open, query_params: {}, body_params: {}, files: {}, json_body: None, headers: {'Content-Type': 'application/x-www-form-urlencoded', 'Authorization': '(redacted)', 'User-Agent': 'Bolt/1.16.0 Python/3.12.0 slackclient/3.34.0 Darwin/23.4.0'}
2025-08-22 14:30:09,153 - slack_bolt.App - DEBUG - [base_client.py:546] - Received the following response - status: 200, headers: {'date': 'Fri, 22 Aug 2025 21:30:09 GMT', 'server': 'Apache', 'vary': 'Accept-Encoding', 'x-slack-req-id': '412efeea13e6ec4978c7242fdefc311e', 'x-content-type-options': 'nosniff', 'x-xss-protection': '0', 'x-robots-tag': 'noindex,nofollow', 'pragma': 'no-cache', 'cache-control': 'private, no-cache, no-store, must-revalidate', 'expires': 'Sat, 26 Jul 1997 05:00:00 GMT', 'content-type': 'application/json; charset=utf-8', 'x-accepted-oauth-scopes': 'connections:write', 'x-oauth-scopes': 'connections:write', 'access-control-expose-headers': 'x-slack-req-id, retry-after', 'access-control-allow-headers': 'slack-route, x-slack-version-ts, x-b3-traceid, x-b3-spanid, x-b3-parentspanid, x-b3-sampled, x-b3-flags', 'strict-transport-security': 'max-age=31536000; includeSubDomains; preload', 'referrer-policy': 'no-referrer', 'x-slack-unique-id': 'aKjhYeKB6dmILckxOt6zPQAAABQ', 'x-slack-backend': 'r', 'access-control-allow-origin': '*', 'content-length': '173', 'via': '1.1 slack-prod.tinyspeck.com, envoy-www-iad-zvxsiscw,envoy-edge-pdx-pskiesfp', 'x-envoy-attempt-count': '1', 'x-envoy-upstream-service-time': '76', 'x-backend': 'main_normal main_canary_with_overflow main_control_with_overflow', 'x-server': 'slack-www-hhvm-main-iad-ncci', 'x-slack-shared-secret-outcome': 'no-match', 'x-edge-backend': 'envoy-www', 'timing-allow-origin': '*', 'x-slack-edge-shared-secret-outcome': 'no-match', 'connection': 'close'}, body: {"ok":true,"url":"wss:\/\/wss-primary.slack.com\/link\/?ticket=e797246c-50a5-470d-b1a2-8d8089ad074d&app_id=a6c8d361ee1c6f398c5b4afec831555b78d7affa753b16bcc0fc64d7c13f3766"}
2025-08-22 14:30:09,692 - slack_bolt.App - INFO - [client.py:192] - A new session has been established (session id: 1604f8ea-30db-459b-b642-91c3b13c607d)
2025-08-22 14:30:09,692 - slack_bolt.App - INFO - [base_handler.py:50] - ⚡️ Bolt app is running!
2025-08-22 14:30:09,771 - slack_bolt.App - INFO - [client.py:265] - Starting to receive messages from a new connection (session id: 1604f8ea-30db-459b-b642-91c3b13c607d)
2025-08-22 14:30:09,773 - slack_bolt.App - DEBUG - [client.py:235] - on_message invoked: (message: {"type":"hello","num_connections":2,"debug_info":{"host":"applink-7","build_number":0,"approximate_connection_time":18060},"connection_info":{"app_id":"A099LACAB2R"}})
2025-08-22 14:30:09,773 - slack_bolt.App - DEBUG - [client.py:99] - A new message enqueued (current queue size: 1)
2025-08-22 14:30:09,773 - slack_bolt.App - DEBUG - [client.py:105] - A message dequeued (current queue size: 0)
2025-08-22 14:30:09,775 - slack_bolt.App - DEBUG - [client.py:125] - Message processing started (type: hello, envelope_id: None)
2025-08-22 14:30:09,775 - slack_bolt.App - DEBUG - [client.py:150] - Message processing completed (type: hello, envelope_id: None)
2025-08-22 14:30:50,580 - __main__ - INFO - [main.py:43] - Loading application configuration...
2025-08-22 14:30:50,580 - __main__ - INFO - [main.py:45] - Configuration loaded successfully
2025-08-22 14:30:50,580 - __main__ - INFO - [main.py:48] - Initializing security components...
2025-08-22 14:30:50,580 - __main__ - DEBUG - [main.py:50] - Slack validator initialized
2025-08-22 14:30:50,580 - security.content_filter - INFO - [content_filter.py:39] - Content filter initialized with 11 patterns
2025-08-22 14:30:50,580 - __main__ - DEBUG - [main.py:53] - Content filter initialized
2025-08-22 14:30:50,580 - auth.admin_manager - INFO - [admin_manager.py:27] - Admin manager initialized with 2 admin users
2025-08-22 14:30:50,580 - __main__ - DEBUG - [main.py:56] - Admin manager initialized
2025-08-22 14:30:50,580 - auth.email_whitelist - INFO - [email_whitelist.py:28] - Email whitelist initialized with 1 whitelisted emails
2025-08-22 14:30:50,580 - auth.email_whitelist - INFO - [email_whitelist.py:37] - Whitelisted domains: paramount.com
2025-08-22 14:30:50,580 - __main__ - DEBUG - [main.py:59] - Email whitelist initialized with 1 emails
2025-08-22 14:30:50,580 - auth.slack_user_info - DEBUG - [slack_user_info.py:25] - Slack user info manager initialized
2025-08-22 14:30:50,580 - __main__ - DEBUG - [main.py:62] - Slack user info manager initialized
2025-08-22 14:30:50,580 - __main__ - INFO - [main.py:63] - Security components initialized successfully
2025-08-22 14:30:50,580 - __main__ - INFO - [main.py:66] - Initializing Slack app...
2025-08-22 14:30:50,616 - slack_bolt.App - DEBUG - [base_client.py:255] - Sending a request - url: https://slack.com/api/auth.test, query_params: {}, body_params: {}, files: {}, json_body: None, headers: {'Content-Type': 'application/x-www-form-urlencoded', 'Authorization': '(redacted)', 'User-Agent': 'Bolt/1.16.0 Python/3.12.0 slackclient/3.34.0 Darwin/23.4.0'}
2025-08-22 14:30:50,942 - slack_bolt.App - DEBUG - [base_client.py:546] - Received the following response - status: 200, headers: {'date': 'Fri, 22 Aug 2025 21:30:50 GMT', 'server': 'Apache', 'vary': 'Accept-Encoding', 'x-slack-req-id': '11d6d80d6f89ce9658f2dad126a0c438', 'x-content-type-options': 'nosniff', 'x-xss-protection': '0', 'pragma': 'no-cache', 'cache-control': 'private, no-cache, no-store, must-revalidate', 'expires': 'Sat, 26 Jul 1997 05:00:00 GMT', 'content-type': 'application/json; charset=utf-8', 'x-oauth-scopes': 'app_mentions:read,channels:history,chat:write,im:history,im:read,im:write,users:read,reactions:write,users:read.email', 'access-control-expose-headers': 'x-slack-req-id, retry-after', 'access-control-allow-headers': 'slack-route, x-slack-version-ts, x-b3-traceid, x-b3-spanid, x-b3-parentspanid, x-b3-sampled, x-b3-flags', 'strict-transport-security': 'max-age=31536000; includeSubDomains; preload', 'referrer-policy': 'no-referrer', 'x-slack-unique-id': 'aKjhii6KfvwXNa6bDcwSJAAAAA8', 'x-slack-backend': 'r', 'access-control-allow-origin': '*', 'content-length': '228', 'via': '1.1 slack-prod.tinyspeck.com, envoy-www-iad-vfedzgtp,envoy-edge-pdx-wzalilde', 'x-envoy-attempt-count': '1', 'x-envoy-upstream-service-time': '86', 'x-backend': 'main_normal main_canary_with_overflow main_control_with_overflow', 'x-server': 'slack-www-hhvm-main-iad-wurh', 'x-slack-shared-secret-outcome': 'no-match', 'x-edge-backend': 'envoy-www', 'timing-allow-origin': '*', 'x-slack-edge-shared-secret-outcome': 'no-match', 'connection': 'close'}, body: {"ok":true,"url":"https://viacomcbs-grid-test.slack.com/","team":"Test Workspace","user":"autobot","team_id":"T010QS7UQNA","user_id":"U099R6WTZ9S","bot_id":"B099R6WTRU4","enterprise_id":"ERV4P7NAD","is_enterprise_install":false}
2025-08-22 14:30:50,943 - __main__ - INFO - [main.py:68] - Slack app initialized successfully
2025-08-22 14:30:50,943 - __main__ - DEBUG - [main.py:72] - Message deduplication cache initialized
2025-08-22 14:30:50,943 - __main__ - DEBUG - [main.py:77] - Thread tracking initialized
2025-08-22 14:30:50,943 - __main__ - INFO - [main.py:80] - Initializing DIG AI integration...
2025-08-22 14:30:50,943 - dig_connector - INFO - [dig_connector.py:284] - Initializing DIG AI with model ID: 42
2025-08-22 14:30:50,943 - dig_connector - INFO - [dig_connector.py:49] - Starting DIG chat session initialization...
2025-08-22 14:30:50,943 - dig_connector - DEBUG - [dig_connector.py:52] - Creating chat with name: Slack Bot Session 2025-08-22T21:30:50.943936+00:00
2025-08-22 14:30:50,944 - dig_connector - DEBUG - [dig_connector.py:63] - Creating chat - URL: https://ai.digdev.cbsicloud.com/fastapi/chats, Payload: {'chat_nm': 'Slack Bot Session 2025-08-22T21:30:50.943936+00:00', 'model_id': 42}
2025-08-22 14:30:50,946 - urllib3.connectionpool - DEBUG - [connectionpool.py:1055] - Starting new HTTPS connection (1): ai.digdev.cbsicloud.com:443
2025-08-22 14:30:51,218 - urllib3.connectionpool - DEBUG - [connectionpool.py:549] - https://ai.digdev.cbsicloud.com:443 "POST /fastapi/chats HTTP/1.1" 200 217
2025-08-22 14:30:51,219 - dig_connector - DEBUG - [dig_connector.py:66] - Create chat response: status=200
2025-08-22 14:30:51,219 - dig_connector - INFO - [dig_connector.py:54] - Successfully initialized DIG chat session with ID: 890
2025-08-22 14:30:51,219 - __main__ - INFO - [main.py:83] - DIG AI integration successfully initialized
2025-08-22 14:30:51,219 - __main__ - INFO - [main.py:87] - Setting up event handlers...
2025-08-22 14:30:51,221 - __main__ - INFO - [main.py:747] - Starting AI Assistant Bot...
2025-08-22 14:30:51,221 - __main__ - INFO - [main.py:748] - Registering event handlers...
2025-08-22 14:30:51,221 - __main__ - DEBUG - [main.py:749] - Event handlers registered: app_mention, message, app_home_opened
2025-08-22 14:30:51,221 - __main__ - INFO - [main.py:752] - Connecting to Slack via Socket Mode...
2025-08-22 14:30:51,222 - __main__ - INFO - [main.py:756] - Socket Mode handler created successfully
2025-08-22 14:30:51,222 - __main__ - INFO - [main.py:758] - ✅ Bot is now running and listening for events!
2025-08-22 14:30:51,222 - slack_bolt.App - DEBUG - [base_client.py:255] - Sending a request - url: https://slack.com/api/apps.connections.open, query_params: {}, body_params: {}, files: {}, json_body: None, headers: {'Content-Type': 'application/x-www-form-urlencoded', 'Authorization': '(redacted)', 'User-Agent': 'Bolt/1.16.0 Python/3.12.0 slackclient/3.34.0 Darwin/23.4.0'}
2025-08-22 14:30:51,544 - slack_bolt.App - DEBUG - [base_client.py:546] - Received the following response - status: 200, headers: {'date': 'Fri, 22 Aug 2025 21:30:51 GMT', 'server': 'Apache', 'vary': 'Accept-Encoding', 'x-slack-req-id': 'ed299e42809d6e69007e8f3d93c1d3d9', 'x-content-type-options': 'nosniff', 'x-xss-protection': '0', 'x-robots-tag': 'noindex,nofollow', 'pragma': 'no-cache', 'cache-control': 'private, no-cache, no-store, must-revalidate', 'expires': 'Sat, 26 Jul 1997 05:00:00 GMT', 'content-type': 'application/json; charset=utf-8', 'x-accepted-oauth-scopes': 'connections:write', 'x-oauth-scopes': 'connections:write', 'access-control-expose-headers': 'x-slack-req-id, retry-after', 'access-control-allow-headers': 'slack-route, x-slack-version-ts, x-b3-traceid, x-b3-spanid, x-b3-parentspanid, x-b3-sampled, x-b3-flags', 'strict-transport-security': 'max-age=31536000; includeSubDomains; preload', 'referrer-policy': 'no-referrer', 'x-slack-unique-id': 'aKjhiz9O4ZtGySpjc-9KoAAAADA', 'x-slack-backend': 'r', 'access-control-allow-origin': '*', 'content-length': '173', 'via': '1.1 slack-prod.tinyspeck.com, envoy-www-iad-nabqpkmc,envoy-edge-pdx-qfkqavgo', 'x-envoy-attempt-count': '1', 'x-envoy-upstream-service-time': '87', 'x-backend': 'main_normal main_canary_with_overflow main_control_with_overflow', 'x-server': 'slack-www-hhvm-main-iad-tnpe', 'x-slack-shared-secret-outcome': 'no-match', 'x-edge-backend': 'envoy-www', 'timing-allow-origin': '*', 'x-slack-edge-shared-secret-outcome': 'no-match', 'connection': 'close'}, body: {"ok":true,"url":"wss:\/\/wss-primary.slack.com\/link\/?ticket=c973962b-8707-44b3-9d83-d65ffdcd4774&app_id=a6c8d361ee1c6f398c5b4afec831555b78d7affa753b16bcc0fc64d7c13f3766"}
2025-08-22 14:30:52,042 - slack_bolt.App - INFO - [client.py:192] - A new session has been established (session id: ada77463-07ed-45f1-b617-5a326695dcfd)
2025-08-22 14:30:52,042 - slack_bolt.App - INFO - [base_handler.py:50] - ⚡️ Bolt app is running!
2025-08-22 14:30:52,049 - slack_bolt.App - INFO - [client.py:265] - Starting to receive messages from a new connection (session id: ada77463-07ed-45f1-b617-5a326695dcfd)
2025-08-22 14:30:52,062 - slack_bolt.App - DEBUG - [client.py:235] - on_message invoked: (message: {"type":"hello","num_connections":2,"debug_info":{"host":"applink-canary-0","build_number":0,"approximate_connection_time":18060},"connection_info":{"app_id":"A099LACAB2R"}})
2025-08-22 14:30:52,062 - slack_bolt.App - DEBUG - [client.py:99] - A new message enqueued (current queue size: 1)
2025-08-22 14:30:52,062 - slack_bolt.App - DEBUG - [client.py:105] - A message dequeued (current queue size: 0)
2025-08-22 14:30:52,063 - slack_bolt.App - DEBUG - [client.py:125] - Message processing started (type: hello, envelope_id: None)
2025-08-22 14:30:52,063 - slack_bolt.App - DEBUG - [client.py:150] - Message processing completed (type: hello, envelope_id: None)
2025-08-22 14:31:18,974 - slack_bolt.App - DEBUG - [client.py:235] - on_message invoked: (message: {"envelope_id":"74df1c09-187b-4e44-b746-f8a851a0f819","payload":{"token":"yq71khZBCyJF1Ri2hG5aNqr5","team_id":"T010QS7UQNA","enterprise_id":"ERV4P7NAD","context_team_id":null,"context_enterprise_id":"ERV4P7NAD","api_app_id":"A099LACAB2R","event":{"user":"U01RMTFMALF","type":"message","ts":"1755898262.509419","client_msg_id":"f26ae6b6-3bf9-48f6-a86f-641487629122","text":"How can i run an automated test on a local Android phone?","blocks":[{"type":"rich_text","block_id":"vQwBP","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"How can i run an automated test on a local Android phone?"}]}]}],"channel":"D09A0LFHK8R","event_ts":"1755898262.509419","channel_type":"im"},"type":"event_callback","event_id":"Ev09BSV5RBJ8","event_time":1755898262,"authorizations":[{"enterprise_id":"ERV4P7NAD","team_id":"T010QS7UQNA","user_id":"U099R6WTZ9S","is_bot":true,"is_enterprise_install":false}],"is_ext_shared_channel":false,"event_context":"4-eyJldCI6Im1lc3NhZ2UiLCJ0aWQiOiJUMDEwUVM3VVFOQSIsImFpZCI6IkEwOTlMQUNBQjJSIiwiY2lkIjoiRDA5QTBMRkhLOFIifQ"},"type":"events_api","accepts_response_payload":false,"retry_attempt":0,"retry_reason":""})
2025-08-22 14:31:18,976 - slack_bolt.App - DEBUG - [client.py:99] - A new message enqueued (current queue size: 1)
2025-08-22 14:31:18,976 - slack_bolt.App - DEBUG - [client.py:105] - A message dequeued (current queue size: 0)
2025-08-22 14:31:18,976 - slack_bolt.App - DEBUG - [client.py:125] - Message processing started (type: events_api, envelope_id: 74df1c09-187b-4e44-b746-f8a851a0f819)
2025-08-22 14:31:18,977 - slack_bolt.App - DEBUG - [app.py:476] - Applying slack_bolt.middleware.ssl_check.ssl_check.SslCheck
2025-08-22 14:31:18,978 - slack_bolt.App - DEBUG - [app.py:476] - Applying slack_bolt.middleware.request_verification.request_verification.RequestVerification
2025-08-22 14:31:18,978 - slack_bolt.App - DEBUG - [app.py:476] - Applying slack_bolt.middleware.authorization.single_team_authorization.SingleTeamAuthorization
2025-08-22 14:31:18,978 - slack_bolt.App - DEBUG - [app.py:476] - Applying slack_bolt.middleware.ignoring_self_events.ignoring_self_events.IgnoringSelfEvents
2025-08-22 14:31:18,978 - slack_bolt.App - DEBUG - [app.py:476] - Applying slack_bolt.middleware.url_verification.url_verification.UrlVerification
2025-08-22 14:31:18,978 - slack_bolt.App - DEBUG - [app.py:500] - Checking listener: handle_app_mentions ...
2025-08-22 14:31:18,978 - slack_bolt.App - DEBUG - [app.py:500] - Checking listener: help_message ...
2025-08-22 14:31:18,979 - slack_bolt.App - DEBUG - [app.py:500] - Checking listener: handle_dm_messages ...
2025-08-22 14:31:18,979 - slack_bolt.App - DEBUG - [app.py:522] - Running listener: handle_dm_messages ...
2025-08-22 14:31:18,979 - __main__ - INFO - [main.py:497] - === DM MESSAGE EVENT RECEIVED ===
2025-08-22 14:31:18,979 - slack_bolt.App - DEBUG - [thread_runner.py:198] - Responding with status: 200 body: "" (0 millis)
2025-08-22 14:31:18,979 - __main__ - DEBUG - [main.py:498] - Full event body: {'token': 'yq71khZBCyJF1Ri2hG5aNqr5', 'team_id': 'T010QS7UQNA', 'enterprise_id': 'ERV4P7NAD', 'context_team_id': None, 'context_enterprise_id': 'ERV4P7NAD', 'api_app_id': 'A099LACAB2R', 'event': {'user': 'U01RMTFMALF', 'type': 'message', 'ts': '1755898262.509419', 'client_msg_id': 'f26ae6b6-3bf9-48f6-a86f-641487629122', 'text': 'How can i run an automated test on a local Android phone?', 'blocks': [{'type': 'rich_text', 'block_id': 'vQwBP', 'elements': [{'type': 'rich_text_section', 'elements': [{'type': 'text', 'text': 'How can i run an automated test on a local Android phone?'}]}]}], 'channel': 'D09A0LFHK8R', 'event_ts': '1755898262.509419', 'channel_type': 'im'}, 'type': 'event_callback', 'event_id': 'Ev09BSV5RBJ8', 'event_time': 1755898262, 'authorizations': [{'enterprise_id': 'ERV4P7NAD', 'team_id': 'T010QS7UQNA', 'user_id': 'U099R6WTZ9S', 'is_bot': True, 'is_enterprise_install': False}], 'is_ext_shared_channel': False, 'event_context': '4-eyJldCI6Im1lc3NhZ2UiLCJ0aWQiOiJUMDEwUVM3VVFOQSIsImFpZCI6IkEwOTlMQUNBQjJSIiwiY2lkIjoiRDA5QTBMRkhLOFIifQ'}
2025-08-22 14:31:18,979 - slack_bolt.App - DEBUG - [client.py:200] - Sending a message (session id: ada77463-07ed-45f1-b617-5a326695dcfd, message: {"envelope_id": "74df1c09-187b-4e44-b746-f8a851a0f819"})
2025-08-22 14:31:18,980 - __main__ - INFO - [main.py:507] - DM Event details: channel=D09A0LFHK8R, user=U01RMTFMALF, ts=1755898262.509419
2025-08-22 14:31:18,980 - __main__ - DEBUG - [main.py:508] - DM Event text: How can i run an automated test on a local Android phone?
2025-08-22 14:31:18,980 - utils - DEBUG - [utils.py:27] - Checking message processing: channel=D09A0LFHK8R, ts=1755898262.509419, text='How can i run an automated test on a local Android...'
2025-08-22 14:31:18,980 - slack_bolt.App - DEBUG - [internals.py:41] - Response time: 2 milliseconds
2025-08-22 14:31:18,980 - utils - DEBUG - [utils.py:31] - Message hash: e1946a0f87df22a645bf767258a29615
2025-08-22 14:31:18,980 - slack_bolt.App - DEBUG - [client.py:150] - Message processing completed (type: events_api, envelope_id: 74df1c09-187b-4e44-b746-f8a851a0f819)
2025-08-22 14:31:18,981 - utils - DEBUG - [utils.py:53] - Added message to processing cache (total entries: 1)
2025-08-22 14:31:18,981 - __main__ - DEBUG - [main.py:521] - Bot check: bot_id=None, user_id=U01RMTFMALF
2025-08-22 14:31:18,981 - __main__ - DEBUG - [main.py:526] - Question received: 'How can i run an automated test on a local Android phone?'
2025-08-22 14:31:18,981 - __main__ - DEBUG - [main.py:532] - Checking user access for DM...
2025-08-22 14:31:18,981 - auth.slack_user_info - DEBUG - [slack_user_info.py:48] - Fetching user info for user_id: U01RMTFMALF
2025-08-22 14:31:18,981 - slack_sdk.web.base_client - DEBUG - [base_client.py:255] - Sending a request - url: https://slack.com/api/users.info, query_params: {}, body_params: {'user': 'U01RMTFMALF', 'team_id': 'T010QS7UQNA'}, files: {}, json_body: None, headers: {'Content-Type': 'application/x-www-form-urlencoded', 'Authorization': '(redacted)', 'User-Agent': 'Python/3.12.0 slackclient/3.34.0 Darwin/23.4.0'}
2025-08-22 14:31:19,334 - slack_sdk.web.base_client - DEBUG - [base_client.py:546] - Received the following response - status: 200, headers: {'date': 'Fri, 22 Aug 2025 21:31:19 GMT', 'server': 'Apache', 'vary': 'Accept-Encoding', 'x-slack-req-id': 'f764e6426dcf84d5b3e984af943257de', 'x-content-type-options': 'nosniff', 'x-xss-protection': '0', 'pragma': 'no-cache', 'cache-control': 'private, no-cache, no-store, must-revalidate', 'expires': 'Sat, 26 Jul 1997 05:00:00 GMT', 'content-type': 'application/json; charset=utf-8', 'x-accepted-oauth-scopes': 'users:read', 'x-oauth-scopes': 'app_mentions:read,channels:history,chat:write,im:history,im:read,im:write,users:read,reactions:write,users:read.email', 'access-control-expose-headers': 'x-slack-req-id, retry-after', 'access-control-allow-headers': 'slack-route, x-slack-version-ts, x-b3-traceid, x-b3-spanid, x-b3-parentspanid, x-b3-sampled, x-b3-flags', 'strict-transport-security': 'max-age=31536000; includeSubDomains; preload', 'referrer-policy': 'no-referrer', 'x-slack-unique-id': 'aKjhp7jRBgV1nOOIMHKdYwAAABo', 'x-slack-backend': 'r', 'access-control-allow-origin': '*', 'content-length': '2057', 'via': '1.1 slack-prod.tinyspeck.com, envoy-www-iad-qkifuyez,envoy-edge-pdx-xxwxokkj', 'x-envoy-attempt-count': '1', 'x-envoy-upstream-service-time': '99', 'x-backend': 'main_normal main_canary_with_overflow main_control_with_overflow', 'x-server': 'slack-www-hhvm-main-iad-npdo', 'x-slack-shared-secret-outcome': 'no-match', 'x-edge-backend': 'envoy-www', 'timing-allow-origin': '*', 'x-slack-edge-shared-secret-outcome': 'no-match', 'connection': 'close'}, body: {"ok":true,"user":{"id":"U01RMTFMALF","name":"popov8533","is_bot":false,"updated":1755891346,"is_app_user":false,"team_id":"T010QS7UQNA","deleted":false,"color":"4bbe2e","is_email_confirmed":true,"real_name":"Alexandr Popov","tz":"America\/Los_Angeles","tz_label":"Pacific Daylight Time","tz_offset":-25200,"is_admin":false,"is_owner":false,"is_primary_owner":false,"is_restricted":false,"is_ultra_restricted":false,"enterprise_user":{"id":"U01RMTFMALF","enterprise_id":"ERV4P7NAD","enterprise_name":"Paramount Global","is_admin":false,"is_owner":false,"is_primary_owner":false,"teams":["T010QS7UQNA","T02H1PQMF"]},"who_can_share_contact_card":"EVERYONE","profile":{"real_name":"Alexandr Popov","display_name":"Alex Popov","avatar_hash":"a64f82312a14","real_name_normalized":"Alexandr Popov","display_name_normalized":"Alex Popov","image_24":"https:\/\/avatars.slack-edge.com\/2023-03-29\/5033076824964_a64f82312a141123fbbf_24.png","image_32":"https:\/\/avatars.slack-edge.com\/2023-03-29\/5033076824964_a64f82312a141123fbbf_32.png","image_48":"https:\/\/avatars.slack-edge.com\/2023-03-29\/5033076824964_a64f82312a141123fbbf_48.png","image_72":"https:\/\/avatars.slack-edge.com\/2023-03-29\/5033076824964_a64f82312a141123fbbf_72.png","image_192":"https:\/\/avatars.slack-edge.com\/2023-03-29\/5033076824964_a64f82312a141123fbbf_192.png","image_512":"https:\/\/avatars.slack-edge.com\/2023-03-29\/5033076824964_a64f82312a141123fbbf_512.png","image_1024":"https:\/\/avatars.slack-edge.com\/2023-03-29\/5033076824964_a64f82312a141123fbbf_1024.png","image_original":"https:\/\/avatars.slack-edge.com\/2023-03-29\/5033076824964_a64f82312a141123fbbf_original.png","is_custom_image":true,"first_name":"Alexandr","last_name":"Popov","team":"T010QS7UQNA","email":"alexandr.popov@paramount.com","title":"Senior Software Quality Assurance Engineer","phone":"","skype":"","status_text":"","status_text_canonical":"","status_emoji":"","status_emoji_display_info":[],"status_expiration":0,"huddle_state":"default_unset","huddle_state_expiration_ts":0,"ooo_message":""}}}
2025-08-22 14:31:19,334 - auth.slack_user_info - DEBUG - [slack_user_info.py:63] - Retrieved email for user U01RMTFMALF: alexandr.popov@paramount.com
2025-08-22 14:31:19,335 - auth.email_whitelist - DEBUG - [email_whitelist.py:57] - Email access granted: alexandr.popov@paramount.com
2025-08-22 14:31:19,335 - __main__ - INFO - [main.py:118] - Access granted to user U01RMTFMALF with email alexandr.popov@paramount.com
2025-08-22 14:31:19,335 - __main__ - DEBUG - [main.py:538] - User access check passed for DM
2025-08-22 14:31:19,335 - __main__ - INFO - [main.py:540] - Processing DM question from user U01RMTFMALF: How can i run an automated test on a local Android phone?
2025-08-22 14:31:19,335 - __main__ - DEBUG - [main.py:543] - Starting DM processing...
2025-08-22 14:31:19,335 - __main__ - DEBUG - [main.py:546] - Checking if 'how can i run an automated test on a local android phone?' is an admin command in DM
2025-08-22 14:31:19,335 - __main__ - DEBUG - [main.py:582] - Checking if DM thread is already being processed...
2025-08-22 14:31:19,335 - utils - DEBUG - [utils.py:67] - Managing thread: D09A0LFHK8R:1755898262.509419, action: add, user: U01RMTFMALF
2025-08-22 14:31:19,335 - utils - INFO - [utils.py:94] - Added thread D09A0LFHK8R:1755898262.509419 to active tracking (total: 1)
2025-08-22 14:31:19,335 - __main__ - DEBUG - [main.py:587] - DM thread management check passed
2025-08-22 14:31:19,335 - slack_sdk.web.base_client - DEBUG - [base_client.py:255] - Sending a request - url: https://slack.com/api/reactions.add, query_params: {}, body_params: {'channel': 'D09A0LFHK8R', 'name': 'thinking_face', 'timestamp': '1755898262.509419', 'team_id': 'T010QS7UQNA'}, files: {}, json_body: None, headers: {'Content-Type': 'application/x-www-form-urlencoded', 'Authorization': '(redacted)', 'User-Agent': 'Python/3.12.0 slackclient/3.34.0 Darwin/23.4.0'}
2025-08-22 14:31:19,709 - slack_sdk.web.base_client - DEBUG - [base_client.py:546] - Received the following response - status: 200, headers: {'date': 'Fri, 22 Aug 2025 21:31:19 GMT', 'server': 'Apache', 'vary': 'Accept-Encoding', 'x-slack-req-id': '7b9ecc116929f3a3a30d242649fe2041', 'x-content-type-options': 'nosniff', 'x-xss-protection': '0', 'pragma': 'no-cache', 'cache-control': 'private, no-cache, no-store, must-revalidate', 'expires': 'Sat, 26 Jul 1997 05:00:00 GMT', 'content-type': 'application/json; charset=utf-8', 'x-accepted-oauth-scopes': 'reactions:write', 'x-oauth-scopes': 'app_mentions:read,channels:history,chat:write,im:history,im:read,im:write,users:read,reactions:write,users:read.email', 'access-control-expose-headers': 'x-slack-req-id, retry-after', 'access-control-allow-headers': 'slack-route, x-slack-version-ts, x-b3-traceid, x-b3-spanid, x-b3-parentspanid, x-b3-sampled, x-b3-flags', 'strict-transport-security': 'max-age=31536000; includeSubDomains; preload', 'referrer-policy': 'no-referrer', 'x-slack-unique-id': 'aKjhp5e_FHBSxrechkKRxAAAADM', 'x-slack-backend': 'r', 'access-control-allow-origin': '*', 'content-length': '11', 'via': '1.1 slack-prod.tinyspeck.com, envoy-www-iad-cujiopep,envoy-edge-pdx-ybaywkyx', 'x-envoy-attempt-count': '1', 'x-envoy-upstream-service-time': '132', 'x-backend': 'main_normal main_canary_with_overflow main_control_with_overflow', 'x-server': 'slack-www-hhvm-main-iad-qvtf', 'x-slack-shared-secret-outcome': 'no-match', 'x-edge-backend': 'envoy-www', 'timing-allow-origin': '*', 'x-slack-edge-shared-secret-outcome': 'no-match', 'connection': 'close'}, body: {"ok":true}
2025-08-22 14:31:19,710 - __main__ - INFO - [main.py:604] - Processing DM question from <@U01RMTFMALF>: How can i run an automated test on a local Android phone?
2025-08-22 14:31:19,710 - __main__ - INFO - [main.py:608] - Sending DM request to DIG AI...
2025-08-22 14:31:19,710 - dig_connector - INFO - [dig_connector.py:134] - Generating response for query: 'How can i run an automated test on a local Android phone?' with 0 chunks
2025-08-22 14:31:19,710 - dig_connector - DEBUG - [dig_connector.py:138] - Formatted context length: 0
2025-08-22 14:31:19,710 - dig_connector - INFO - [dig_connector.py:141] - No context available, using direct query
2025-08-22 14:31:19,710 - dig_connector - INFO - [dig_connector.py:150] - Sending prompt to DIG platform...
2025-08-22 14:31:19,710 - dig_connector - INFO - [dig_connector.py:121] - Sending message to DIG API - URL: https://ai.digdev.cbsicloud.com/fastapi/chats/890/generate
2025-08-22 14:31:19,710 - dig_connector - DEBUG - [dig_connector.py:122] - Message payload: {'model_id': 42, 'message_text': 'How can i run an automated test on a local Android phone?', 'history': [{'role': 'user', 'content': 'How can i run an automated test on a local Android phone?'}]}
2025-08-22 14:31:22,853 - slack_bolt.App - DEBUG - [client.py:235] - on_message invoked: (message: {"envelope_id":"e7c0024f-a1ee-4242-8e4e-dc6829fa9421","payload":{"token":"yq71khZBCyJF1Ri2hG5aNqr5","team_id":"T010QS7UQNA","enterprise_id":"ERV4P7NAD","context_team_id":null,"context_enterprise_id":"ERV4P7NAD","api_app_id":"A099LACAB2R","event":{"user":"U01RMTFMALF","type":"message","ts":"1755898262.509419","client_msg_id":"f26ae6b6-3bf9-48f6-a86f-641487629122","text":"How can i run an automated test on a local Android phone?","blocks":[{"type":"rich_text","block_id":"vQwBP","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"How can i run an automated test on a local Android phone?"}]}]}],"channel":"D09A0LFHK8R","event_ts":"1755898262.509419","channel_type":"im"},"type":"event_callback","event_id":"Ev09BSV5RBJ8","event_time":1755898262,"authorizations":[{"enterprise_id":"ERV4P7NAD","team_id":"T010QS7UQNA","user_id":"U099R6WTZ9S","is_bot":true,"is_enterprise_install":false}],"is_ext_shared_channel":false,"event_context":"4-eyJldCI6Im1lc3NhZ2UiLCJ0aWQiOiJUMDEwUVM3VVFOQSIsImFpZCI6IkEwOTlMQUNBQjJSIiwiY2lkIjoiRDA5QTBMRkhLOFIifQ"},"type":"events_api","accepts_response_payload":false,"retry_attempt":1,"retry_reason":"timeout"})
2025-08-22 14:31:22,854 - slack_bolt.App - DEBUG - [client.py:99] - A new message enqueued (current queue size: 1)
2025-08-22 14:31:22,854 - slack_bolt.App - DEBUG - [client.py:105] - A message dequeued (current queue size: 0)
2025-08-22 14:31:22,854 - slack_bolt.App - DEBUG - [client.py:125] - Message processing started (type: events_api, envelope_id: e7c0024f-a1ee-4242-8e4e-dc6829fa9421)
2025-08-22 14:31:22,855 - slack_bolt.App - DEBUG - [app.py:476] - Applying slack_bolt.middleware.ssl_check.ssl_check.SslCheck
2025-08-22 14:31:22,855 - slack_bolt.App - DEBUG - [app.py:476] - Applying slack_bolt.middleware.request_verification.request_verification.RequestVerification
2025-08-22 14:31:22,855 - slack_bolt.App - DEBUG - [app.py:476] - Applying slack_bolt.middleware.authorization.single_team_authorization.SingleTeamAuthorization
2025-08-22 14:31:22,856 - slack_bolt.App - DEBUG - [app.py:476] - Applying slack_bolt.middleware.ignoring_self_events.ignoring_self_events.IgnoringSelfEvents
2025-08-22 14:31:22,856 - slack_bolt.App - DEBUG - [app.py:476] - Applying slack_bolt.middleware.url_verification.url_verification.UrlVerification
2025-08-22 14:31:22,856 - slack_bolt.App - DEBUG - [app.py:500] - Checking listener: handle_app_mentions ...
2025-08-22 14:31:22,856 - slack_bolt.App - DEBUG - [app.py:500] - Checking listener: help_message ...
2025-08-22 14:31:22,856 - slack_bolt.App - DEBUG - [app.py:500] - Checking listener: handle_dm_messages ...
2025-08-22 14:31:22,857 - slack_bolt.App - DEBUG - [app.py:522] - Running listener: handle_dm_messages ...
2025-08-22 14:31:22,857 - __main__ - INFO - [main.py:497] - === DM MESSAGE EVENT RECEIVED ===
2025-08-22 14:31:22,857 - slack_bolt.App - DEBUG - [thread_runner.py:198] - Responding with status: 200 body: "" (0 millis)
2025-08-22 14:31:22,857 - __main__ - DEBUG - [main.py:498] - Full event body: {'token': 'yq71khZBCyJF1Ri2hG5aNqr5', 'team_id': 'T010QS7UQNA', 'enterprise_id': 'ERV4P7NAD', 'context_team_id': None, 'context_enterprise_id': 'ERV4P7NAD', 'api_app_id': 'A099LACAB2R', 'event': {'user': 'U01RMTFMALF', 'type': 'message', 'ts': '1755898262.509419', 'client_msg_id': 'f26ae6b6-3bf9-48f6-a86f-641487629122', 'text': 'How can i run an automated test on a local Android phone?', 'blocks': [{'type': 'rich_text', 'block_id': 'vQwBP', 'elements': [{'type': 'rich_text_section', 'elements': [{'type': 'text', 'text': 'How can i run an automated test on a local Android phone?'}]}]}], 'channel': 'D09A0LFHK8R', 'event_ts': '1755898262.509419', 'channel_type': 'im'}, 'type': 'event_callback', 'event_id': 'Ev09BSV5RBJ8', 'event_time': 1755898262, 'authorizations': [{'enterprise_id': 'ERV4P7NAD', 'team_id': 'T010QS7UQNA', 'user_id': 'U099R6WTZ9S', 'is_bot': True, 'is_enterprise_install': False}], 'is_ext_shared_channel': False, 'event_context': '4-eyJldCI6Im1lc3NhZ2UiLCJ0aWQiOiJUMDEwUVM3VVFOQSIsImFpZCI6IkEwOTlMQUNBQjJSIiwiY2lkIjoiRDA5QTBMRkhLOFIifQ'}
2025-08-22 14:31:22,857 - slack_bolt.App - DEBUG - [client.py:200] - Sending a message (session id: ada77463-07ed-45f1-b617-5a326695dcfd, message: {"envelope_id": "e7c0024f-a1ee-4242-8e4e-dc6829fa9421"})
2025-08-22 14:31:22,857 - __main__ - INFO - [main.py:507] - DM Event details: channel=D09A0LFHK8R, user=U01RMTFMALF, ts=1755898262.509419
2025-08-22 14:31:22,858 - __main__ - DEBUG - [main.py:508] - DM Event text: How can i run an automated test on a local Android phone?
2025-08-22 14:31:22,858 - utils - DEBUG - [utils.py:27] - Checking message processing: channel=D09A0LFHK8R, ts=1755898262.509419, text='How can i run an automated test on a local Android...'
2025-08-22 14:31:22,858 - slack_bolt.App - DEBUG - [internals.py:41] - Response time: 3 milliseconds
2025-08-22 14:31:22,858 - utils - DEBUG - [utils.py:31] - Message hash: e1946a0f87df22a645bf767258a29615
2025-08-22 14:31:22,858 - slack_bolt.App - DEBUG - [client.py:150] - Message processing completed (type: events_api, envelope_id: e7c0024f-a1ee-4242-8e4e-dc6829fa9421)
2025-08-22 14:31:22,858 - utils - INFO - [utils.py:48] - Skipping duplicate message (hash: e1946a0f87df22a645bf767258a29615): How can i run an automated tes...
2025-08-22 14:31:22,858 - __main__ - INFO - [main.py:512] - Skipping DM message - already processed recently
2025-08-22 14:31:35,057 - urllib3.connectionpool - DEBUG - [connectionpool.py:549] - https://ai.digdev.cbsicloud.com:443 "POST /fastapi/chats/890/generate HTTP/1.1" 200 3993
2025-08-22 14:31:35,059 - dig_connector - DEBUG - [dig_connector.py:125] - DIG API response: status=200
2025-08-22 14:31:35,059 - dig_connector - DEBUG - [dig_connector.py:129] - DIG API response data: {'message_text': 'To run an automated test on a local Android phone, you\'ll need to set up your environment, configure test parameters, and then execute your tests.\n\n### 1. Environmental Setup\n\n*   **Android Environment Variables:** If using an Android Emulator, ensure the `$ANDROID_HOME` environment variable is set and included in your system\'s path.\n    *   Source: `https://paramount.atlassian.net/wiki/spaces/PLQA/pages/47713566`\n*   **VPN Connection:** Connect to the VPN at `http://connect.cbsinteractive.com/VPNFT`.\n    *   Source: `https://paramount.atlassian.net/wiki/spaces/PLQA/pages/47720266`\n*   **Synergy Server:** Download the latest version of the Synergy server and run its `.jar` file (Websocket).\n    *   Source: `https://paramount.atlassian.net/wiki/spaces/PLQA/pages/47720266`\n*   **Appium Server:** For local Android tests, an Appium server can be started. There\'s a `SampleTest.java` class that includes methods for starting and stopping the Appium server, as well as launching and stopping the Android Emulator.\n    *   Source: `https://paramount.atlassian.net/wiki/spaces/PLQA/pages/47711460`\n\n### 2. Configuration\n\nUpdate the desired capabilities in the `.config` file located in the `mqe-hob-mobile-tests` directory. You can also add properties to `resources/config.properties` within the same module. Key parameters for local Android testing include:\n\n*   **Platform:** Set to `ANDROID`.\n*   **Mobile Device Category:** Set to `PHONE`.\n*   **Device Start Orientation:** Set to `PORTRAIT`.\n*   **Debug Device ID:** Add the device ID of your emulator (obtain by typing `adb devices` in the terminal) or the IP address if using a real device.\n*   **Client ID:** This is your machine\'s serial number for local executions or to target a specific private lab machine.\n*   **Server URL:** For example, `https://www.synergyserver.tech?key=`.\n*   **Locale:** Such as `en-us`.\n*   **Environment:** For example, `stage`.\n*   **Use GeoVPN:** Set this parameter for the stage environment only.\n*   **App Package URL:** The URL of the build.\n*   **App Build Type:** For example, `DEBUG`.\n\nAdditional parameters you might configure include `TestRailProjectId`, `ReRunOnFailure`, and `SendEmailReport`.\n\n*   Source: `https://paramount.atlassian.net/wiki/spaces/PLQA/pages/47720266`\n\nYou can also pass specific parameters in your Maven command, such as:\n\n*   `-Ddriver=android`\n*   `-DplatformName=Android`\n*   `-DplatformVersion=11.0` (or your desired version)\n*   `-DdeviceName="Google Pixel 2XL"` (or your device name)\n*   `-Denvironment=local`\n*   `-Dheadless=false`\n*   `-Dapp="/pathToPackage/your-app.apk"` (path to your Android application package)\n*   `-Dudid=` (set this if running on a real mobile device)\n*   `-DbundleId=` (set to override default)\n\n*   Source: `https://paramount.atlassian.net/wiki/spaces/PLQA/pages/47711460`\n\n### 3. Running the Test\n\nYou have a few options for executing your tests:\n\n*   **From the Terminal (Maven Command):**\n    Enter the following command in your IDE terminal window:\n    `mvn clean test -pl mqe-hob-mobile-tests -am -Dgroups=Your test case number or tag`\n\n*   **From `TestNGSuiteConfig.xml`:**\n    Navigate to the `TestNGSuiteConfig.xml` file, right-click, and select "run TestNGSuiteConfig.xml". You will need to provide the necessary test case ID or tag name in the `<include name="" />` section.\n\n*   Source: `https://paramount.atlassian.net/wiki/spaces/PLQA/pages/47720266`\n\nFor more detailed information on Android development and testing, you can refer to:\n\n*   Basics of Android Studio: `https://developer.android.com/studio/intro`\n*   Fundamentals of testing Android apps: `https://developer.android.com/training/testing/fundamentals`\n*   Running apps on the emulator: `https://developer.android.com/studio/run/emulator`\n\n*   Source: `https://paramount.atlassian.net/wiki/spaces/PLQA/pages/47722061`', 'requires_approval': False, 'execution_id': 1592}
2025-08-22 14:31:35,060 - dig_connector - INFO - [dig_connector.py:154] - Extracting response content...
2025-08-22 14:31:35,060 - dig_connector - DEBUG - [dig_connector.py:221] - Found message_text in response
2025-08-22 14:31:35,060 - dig_connector - INFO - [dig_connector.py:157] - Successfully generated response (length: 3854)
2025-08-22 14:31:35,060 - __main__ - INFO - [main.py:611] - Received DM response from DIG AI
2025-08-22 14:31:35,060 - __main__ - DEBUG - [main.py:612] - DIG AI DM response: To run an automated test on a local Android phone, you'll need to set up your environment, configure test parameters, and then execute your tests.

### 1. Environmental Setup

*   **Android Environment Variables:** If using an Android Emulator, ensure the `$ANDROID_HOME` environment variable is set and included in your system's path.
    *   Source: `https://paramount.atlassian.net/wiki/spaces/PLQA/pages/47713566`
*   **VPN Connection:** Connect to the VPN at `http://connect.cbsinteractive.com/VPNFT`.
    *   Source: `https://paramount.atlassian.net/wiki/spaces/PLQA/pages/47720266`
*   **Synergy Server:** Download the latest version of the Synergy server and run its `.jar` file (Websocket).
    *   Source: `https://paramount.atlassian.net/wiki/spaces/PLQA/pages/47720266`
*   **Appium Server:** For local Android tests, an Appium server can be started. There's a `SampleTest.java` class that includes methods for starting and stopping the Appium server, as well as launching and stopping the Android Emulator.
    *   Source: `https://paramount.atlassian.net/wiki/spaces/PLQA/pages/47711460`

### 2. Configuration

Update the desired capabilities in the `.config` file located in the `mqe-hob-mobile-tests` directory. You can also add properties to `resources/config.properties` within the same module. Key parameters for local Android testing include:

*   **Platform:** Set to `ANDROID`.
*   **Mobile Device Category:** Set to `PHONE`.
*   **Device Start Orientation:** Set to `PORTRAIT`.
*   **Debug Device ID:** Add the device ID of your emulator (obtain by typing `adb devices` in the terminal) or the IP address if using a real device.
*   **Client ID:** This is your machine's serial number for local executions or to target a specific private lab machine.
*   **Server URL:** For example, `https://www.synergyserver.tech?key=`.
*   **Locale:** Such as `en-us`.
*   **Environment:** For example, `stage`.
*   **Use GeoVPN:** Set this parameter for the stage environment only.
*   **App Package URL:** The URL of the build.
*   **App Build Type:** For example, `DEBUG`.

Additional parameters you might configure include `TestRailProjectId`, `ReRunOnFailure`, and `SendEmailReport`.

*   Source: `https://paramount.atlassian.net/wiki/spaces/PLQA/pages/47720266`

You can also pass specific parameters in your Maven command, such as:

*   `-Ddriver=android`
*   `-DplatformName=Android`
*   `-DplatformVersion=11.0` (or your desired version)
*   `-DdeviceName="Google Pixel 2XL"` (or your device name)
*   `-Denvironment=local`
*   `-Dheadless=false`
*   `-Dapp="/pathToPackage/your-app.apk"` (path to your Android application package)
*   `-Dudid=` (set this if running on a real mobile device)
*   `-DbundleId=` (set to override default)

*   Source: `https://paramount.atlassian.net/wiki/spaces/PLQA/pages/47711460`

### 3. Running the Test

You have a few options for executing your tests:

*   **From the Terminal (Maven Command):**
    Enter the following command in your IDE terminal window:
    `mvn clean test -pl mqe-hob-mobile-tests -am -Dgroups=Your test case number or tag`

*   **From `TestNGSuiteConfig.xml`:**
    Navigate to the `TestNGSuiteConfig.xml` file, right-click, and select "run TestNGSuiteConfig.xml". You will need to provide the necessary test case ID or tag name in the `<include name="" />` section.

*   Source: `https://paramount.atlassian.net/wiki/spaces/PLQA/pages/47720266`

For more detailed information on Android development and testing, you can refer to:

*   Basics of Android Studio: `https://developer.android.com/studio/intro`
*   Fundamentals of testing Android apps: `https://developer.android.com/training/testing/fundamentals`
*   Running apps on the emulator: `https://developer.android.com/studio/run/emulator`

*   Source: `https://paramount.atlassian.net/wiki/spaces/PLQA/pages/47722061`
2025-08-22 14:31:35,064 - __main__ - DEBUG - [main.py:616] - Formatted DM response: *Your Question:*
> How can i run an automated test on a local Android phone?

*Answer:*
To run an automated test on a local Android phone, you'll need to set up your environment, configure test parameters, and then execute your tests.

### 1. Environmental Setup

*
*Android Environment Variables:* If using an Android Emulator, ensure the `$ANDROID_HOME` environment variable is set and included in your system's path.
    *
Source: `https://paramount.atlassian.net/wiki/spaces/PLQA/pages/47713566`
*
*VPN Connection:* Connect to the VPN at `http://connect.cbsinteractive.com/VPNFT`.
    *
Source: `https://paramount.atlassian.net/wiki/spaces/PLQA/pages/47720266`
*
*Synergy Server:* Download the latest version of the Synergy server and run its `.jar` file (Websocket).
    *
Source: `https://paramount.atlassian.net/wiki/spaces/PLQA/pages/47720266`
*
*Appium Server:* For local Android tests, an Appium server can be started. There's a `SampleTest.java` class that includes methods for starting and stopping the Appium server, as well as launching and stopping the Android Emulator.
    *
Source: `https://paramount.atlassian.net/wiki/spaces/PLQA/pages/47711460`

### 2. Configuration

Update the desired capabilities in the `.config` file located in the `mqe-hob-mobile-tests` directory. You can also add properties to `resources/config.properties` within the same module. Key parameters for local Android testing include:

*
*Platform:* Set to `ANDROID`.
*
*Mobile Device Category:* Set to `PHONE`.
*
*Device Start Orientation:* Set to `PORTRAIT`.
*
*Debug Device ID:* Add the device ID of your emulator (obtain by typing `adb devices` in the terminal) or the IP address if using a real device.
*
*Client ID:* This is your machine's serial number for local executions or to target a specific private lab machine.
*
*Server URL:* For example, `https://www.synergyserver.tech?key=`.
*
*Locale:* Such as `en-us`.
*
*Environment:* For example, `stage`.
*
*Use GeoVPN:* Set this parameter for the stage environment only.
*
*App Package URL:* The URL of the build.
*
*App Build Type:* For example, `DEBUG`.

Additional parameters you might configure include `TestRailProjectId`, `ReRunOnFailure`, and `SendEmailReport`.

*
Source: `https://paramount.atlassian.net/wiki/spaces/PLQA/pages/47720266`

You can also pass specific parameters in your Maven command, such as:

*
`-Ddriver=android`
*
`-DplatformName=Android`
*
`-DplatformVersion=11.0` (or your desired version)
*
`-DdeviceName="Google Pixel 2XL"` (or your device name)
*
`-Denvironment=local`
*
`-Dheadless=false`
*
`-Dapp="/pathToPackage/your-app.apk"` (path to your Android application package)
*
`-Dudid=` (set this if running on a real mobile device)
*
`-DbundleId=` (set to override default)

*
Source: `https://paramount.atlassian.net/wiki/spaces/PLQA/pages/47711460`

### 3. Running the Test

You have a few options for executing your tests:

*
*From the Terminal (Maven Command):*
    Enter the following command in your IDE terminal window:
    `mvn clean test -pl mqe-hob-mobile-tests -am -Dgroups=Your test case number or tag`

*
*From `TestNGSuiteConfig.xml`:*
    Navigate to the `TestNGSuiteConfig.xml` file, right-click, and select "run TestNGSuiteConfig.xml". You will need to provide the necessary test case ID or tag name in the `<include name="" />` section.

*
Source: `https://paramount.atlassian.net/wiki/spaces/PLQA/pages/47720266`

For more detailed information on Android development and testing, you can refer to:

*
Basics of Android Studio: `https://developer.android.com/studio/intro`
*
Fundamentals of testing Android apps: `https://developer.android.com/training/testing/fundamentals`
*
Running apps on the emulator: `https://developer.android.com/studio/run/emulator`

*
Source: `https://paramount.atlassian.net/wiki/spaces/PLQA/pages/47722061`

────────────────────────────────────────
*📚 Sources:*
1. https://paramount.atlassian.net/wiki/spaces/PLQA/pages/47713566
2. https://paramount.atlassian.net/wiki/spaces/PLQA/pages/47720266
3. https://paramount.atlassian.net/wiki/spaces/PLQA/pages/47711460
4. https://paramount.atlassian.net/wiki/spaces/PLQA/pages/47722061

2025-08-22 14:31:35,065 - slack_sdk.web.base_client - DEBUG - [base_client.py:255] - Sending a request - url: https://slack.com/api/reactions.remove, query_params: {}, body_params: {'name': 'thinking_face', 'channel': 'D09A0LFHK8R', 'timestamp': '1755898262.509419', 'team_id': 'T010QS7UQNA'}, files: {}, json_body: None, headers: {'Content-Type': 'application/x-www-form-urlencoded', 'Authorization': '(redacted)', 'User-Agent': 'Python/3.12.0 slackclient/3.34.0 Darwin/23.4.0'}
2025-08-22 14:31:35,445 - slack_sdk.web.base_client - DEBUG - [base_client.py:546] - Received the following response - status: 200, headers: {'date': 'Fri, 22 Aug 2025 21:31:35 GMT', 'server': 'Apache', 'vary': 'Accept-Encoding', 'x-slack-req-id': '698e8ba0862e84ebf04100a2ec8c9a4e', 'x-content-type-options': 'nosniff', 'x-xss-protection': '0', 'pragma': 'no-cache', 'cache-control': 'private, no-cache, no-store, must-revalidate', 'expires': 'Sat, 26 Jul 1997 05:00:00 GMT', 'content-type': 'application/json; charset=utf-8', 'x-accepted-oauth-scopes': 'reactions:write', 'x-oauth-scopes': 'app_mentions:read,channels:history,chat:write,im:history,im:read,im:write,users:read,reactions:write,users:read.email', 'access-control-expose-headers': 'x-slack-req-id, retry-after', 'access-control-allow-headers': 'slack-route, x-slack-version-ts, x-b3-traceid, x-b3-spanid, x-b3-parentspanid, x-b3-sampled, x-b3-flags', 'strict-transport-security': 'max-age=31536000; includeSubDomains; preload', 'referrer-policy': 'no-referrer', 'x-slack-unique-id': 'aKjhtzPdoLg9l7_W31HZvwAAEDo', 'x-slack-backend': 'r', 'access-control-allow-origin': '*', 'content-length': '11', 'via': '1.1 slack-prod.tinyspeck.com, envoy-www-iad-htxtiilb,envoy-edge-pdx-gdcbpjhx', 'x-envoy-attempt-count': '1', 'x-envoy-upstream-service-time': '147', 'x-backend': 'main_normal main_canary_with_overflow main_control_with_overflow', 'x-server': 'slack-www-hhvm-main-iad-fplc', 'x-slack-shared-secret-outcome': 'no-match', 'x-edge-backend': 'envoy-www', 'timing-allow-origin': '*', 'x-slack-edge-shared-secret-outcome': 'no-match', 'connection': 'close'}, body: {"ok":true}
2025-08-22 14:31:35,471 - slack_sdk.web.base_client - DEBUG - [base_client.py:255] - Sending a request - url: https://slack.com/api/chat.postMessage, query_params: {}, body_params: {}, files: {}, json_body: {'channel': 'D09A0LFHK8R', 'text': '*Your Question:*\n> How can i run an automated test on a local Android phone? *Answer:*\nTo run an automated test on a local Android phone, you\'ll need to set up your environment, configure test parameters, and then execute your tests. ### 1. Environmental Setup\n\n*\n*Android Environment Variables:* If using an Android Emulator, ensure the `$ANDROID_HOME` environment variable is set and included in your system\'s path. *\nSource: `https://paramount.atlassian.net/wiki/spaces/PLQA/pages/47713566`\n*\n*VPN Connection:* Connect to the VPN at `http://connect.cbsinteractive.com/VPNFT`. *\nSource: `https://paramount.atlassian.net/wiki/spaces/PLQA/pages/47720266`\n*\n*Synergy Server:* Download the latest version of the Synergy server and run its `.jar` file (Websocket). *\nSource: `https://paramount.atlassian.net/wiki/spaces/PLQA/pages/47720266`\n*\n*Appium Server:* For local Android tests, an Appium server can be started. There\'s a `SampleTest.java` class that includes methods for starting and stopping the Appium server, as well as launching and stopping the Android Emulator. *\nSource: `https://paramount.atlassian.net/wiki/spaces/PLQA/pages/47711460`\n\n### 2. Configuration\n\nUpdate the desired capabilities in the `.config` file located in the `mqe-hob-mobile-tests` directory. You can also add properties to `resources/config.properties` within the same module. Key parameters for local Android testing include:\n\n*\n*Platform:* Set to `ANDROID`. *\n*Mobile Device Category:* Set to `PHONE`. *\n*Device Start Orientation:* Set to `PORTRAIT`. *\n*Debug Device ID:* Add the device ID of your emulator (obtain by typing `adb devices` in the terminal) or the IP address if using a real device. *\n*Client ID:* This is your machine\'s serial number for local executions or to target a specific private lab machine. *\n*Server URL:* For example, `https://www.synergyserver.tech?key=`. *\n*Locale:* Such as `en-us`. *\n*Environment:* For example, `stage`. *\n*Use GeoVPN:* Set this parameter for the stage environment only. *\n*App Package URL:* The URL of the build. *\n*App Build Type:* For example, `DEBUG`. Additional parameters you might configure include `TestRailProjectId`, `ReRunOnFailure`, and `SendEmailReport`. *\nSource: `https://paramount.atlassian.net/wiki/spaces/PLQA/pages/47720266`\n\nYou can also pass specific parameters in your Maven command, such as:\n\n*\n`-Ddriver=android`\n*\n`-DplatformName=Android`\n*\n`-DplatformVersion=11.0` (or your desired version)\n*\n`-DdeviceName="Google Pixel 2XL"` (or your device name)\n*\n`-Denvironment=local`\n*\n`-Dheadless=false`\n*\n`-Dapp="/pathToPackage/your-app.apk"` (path to your Android application package)\n*\n`-Dudid=` (set this if running on a real mobile device)\n*\n`-DbundleId=` (set to override default)\n\n*\nSource: `https://paramount.atlassian.net/wiki/spaces/PLQA/pages/47711460`\n\n### 3.\n\n_(message continued in thread...)_', 'thread_ts': '1755898262.509419', 'team_id': 'T010QS7UQNA'}, headers: {'Content-Type': 'application/json;charset=utf-8', 'Authorization': '(redacted)', 'User-Agent': 'Python/3.12.0 slackclient/3.34.0 Darwin/23.4.0'}
2025-08-22 14:31:35,915 - slack_sdk.web.base_client - DEBUG - [base_client.py:546] - Received the following response - status: 200, headers: {'date': 'Fri, 22 Aug 2025 21:31:35 GMT', 'server': 'Apache', 'vary': 'Accept-Encoding', 'x-slack-req-id': 'c133a13864a37c95b759cddb3071eec4', 'x-content-type-options': 'nosniff', 'x-xss-protection': '0', 'pragma': 'no-cache', 'cache-control': 'private, no-cache, no-store, must-revalidate', 'expires': 'Sat, 26 Jul 1997 05:00:00 GMT', 'content-type': 'application/json; charset=utf-8', 'x-accepted-oauth-scopes': 'chat:write', 'x-oauth-scopes': 'app_mentions:read,channels:history,chat:write,im:history,im:read,im:write,users:read,reactions:write,users:read.email', 'access-control-expose-headers': 'x-slack-req-id, retry-after', 'access-control-allow-headers': 'slack-route, x-slack-version-ts, x-b3-traceid, x-b3-spanid, x-b3-parentspanid, x-b3-sampled, x-b3-flags', 'strict-transport-security': 'max-age=31536000; includeSubDomains; preload', 'referrer-policy': 'no-referrer', 'x-slack-unique-id': 'aKjhtyBCoqqb51rlifc-rQAAACU', 'x-slack-backend': 'r', 'access-control-allow-origin': '*', 'content-length': '10341', 'via': '1.1 slack-prod.tinyspeck.com, envoy-www-iad-nntjxqlg,envoy-edge-pdx-ultfdspz', 'x-envoy-attempt-count': '1', 'x-envoy-upstream-service-time': '200', 'x-backend': 'main_normal main_canary_with_overflow main_control_with_overflow', 'x-server': 'slack-www-hhvm-main-iad-brdr', 'x-slack-shared-secret-outcome': 'no-match', 'x-edge-backend': 'envoy-www', 'timing-allow-origin': '*', 'x-slack-edge-shared-secret-outcome': 'no-match', 'connection': 'close'}, body: {"ok":true,"channel":"D09A0LFHK8R","ts":"1755898295.842129","message":{"user":"U099R6WTZ9S","type":"message","ts":"1755898295.842129","bot_id":"B099R6WTRU4","app_id":"A099LACAB2R","text":"*Your Question:*\n&gt; How can i run an automated test on a local Android phone? *Answer:*\nTo run an automated test on a local Android phone, you'll need to set up your environment, configure test parameters, and then execute your tests. ### 1. Environmental Setup\n\n*\n*Android Environment Variables:* If using an Android Emulator, ensure the `$ANDROID_HOME` environment variable is set and included in your system's path. *\nSource: `<https://paramount.atlassian.net/wiki/spaces/PLQA/pages/47713566>`\n*\n*VPN Connection:* Connect to the VPN at `<http://connect.cbsinteractive.com/VPNFT>`. *\nSource: `<https://paramount.atlassian.net/wiki/spaces/PLQA/pages/47720266>`\n*\n*Synergy Server:* Download the latest version of the Synergy server and run its `.jar` file (Websocket). *\nSource: `<https://paramount.atlassian.net/wiki/spaces/PLQA/pages/47720266>`\n*\n*Appium Server:* For local Android tests, an Appium server can be started. There's a `SampleTest.java` class that includes methods for starting and stopping the Appium server, as well as launching and stopping the Android Emulator. *\nSource: `<https://paramount.atlassian.net/wiki/spaces/PLQA/pages/47711460>`\n\n### 2. Configuration\n\nUpdate the desired capabilities in the `.config` file located in the `mqe-hob-mobile-tests` directory. You can also add properties to `resources/config.properties` within the same module. Key parameters for local Android testing include:\n\n*\n*Platform:* Set to `ANDROID`. *\n*Mobile Device Category:* Set to `PHONE`. *\n*Device Start Orientation:* Set to `PORTRAIT`. *\n*Debug Device ID:* Add the device ID of your emulator (obtain by typing `adb devices` in the terminal) or the IP address if using a real device. *\n*Client ID:* This is your machine's serial number for local executions or to target a specific private lab machine. *\n*Server URL:* For example, `<https://www.synergyserver.tech?key=>`. *\n*Locale:* Such as `en-us`. *\n*Environment:* For example, `stage`. *\n*Use GeoVPN:* Set this parameter for the stage environment only. *\n*App Package URL:* The URL of the build. *\n*App Build Type:* For example, `DEBUG`. Additional parameters you might configure include `TestRailProjectId`, `ReRunOnFailure`, and `SendEmailReport`. *\nSource: `<https://paramount.atlassian.net/wiki/spaces/PLQA/pages/47720266>`\n\nYou can also pass specific parameters in your Maven command, such as:\n\n*\n`-Ddriver=android`\n*\n`-DplatformName=Android`\n*\n`-DplatformVersion=11.0` (or your desired version)\n*\n`-DdeviceName=\"Google Pixel 2XL\"` (or your device name)\n*\n`-Denvironment=local`\n*\n`-Dheadless=false`\n*\n`-Dapp=\"/pathToPackage/your-app.apk\"` (path to your Android application package)\n*\n`-Dudid=` (set this if running on a real mobile device)\n*\n`-DbundleId=` (set to override default)\n\n*\nSource: `<https://paramount.atlassian.net/wiki/spaces/PLQA/pages/47711460>`\n\n### 3.\n\n_(message continued in thread...)_","team":"T010QS7UQNA","bot_profile":{"id":"B099R6WTRU4","app_id":"A099LACAB2R","user_id":"U099R6WTZ9S","name":"AutoBot","icons":{"image_36":"https://a.slack-edge.com/80588/img/plugins/app/bot_36.png","image_48":"https://a.slack-edge.com/80588/img/plugins/app/bot_48.png","image_72":"https://a.slack-edge.com/80588/img/plugins/app/service_72.png"},"deleted":false,"updated":1754677948,"team_id":"T010QS7UQNA"},"thread_ts":"1755898262.509419","parent_user_id":"U01RMTFMALF","blocks":[{"type":"rich_text","block_id":"Eyu","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Your Question:","style":{"bold":true}}]},{"type":"rich_text_quote","elements":[{"type":"text","text":"How can i run an automated test on a local Android phone? "},{"type":"text","text":"Answer:","style":{"bold":true}}]},{"type":"rich_text_section","elements":[{"type":"text","text":"To run an automated test on a local Android phone, you'll need to set up your environment, configure test parameters, and then execute your tests. ### 1. Environmental Setup\n\n*\n"},{"type":"text","text":"Android Environment Variables:","style":{"bold":true}},{"type":"text","text":" If using an Android Emulator, ensure the "},{"type":"text","text":"$ANDROID_HOME","style":{"code":true}},{"type":"text","text":" environment variable is set and included in your system's path. *\nSource: "},{"type":"link","url":"https://paramount.atlassian.net/wiki/spaces/PLQA/pages/47713566","style":{"code":true}},{"type":"text","text":"\n*\n"},{"type":"text","text":"VPN Connection:","style":{"bold":true}},{"type":"text","text":" Connect to the VPN at "},{"type":"link","url":"http://connect.cbsinteractive.com/VPNFT","style":{"code":true}},{"type":"text","text":". *\nSource: "},{"type":"link","url":"https://paramount.atlassian.net/wiki/spaces/PLQA/pages/47720266","style":{"code":true}},{"type":"text","text":"\n*\n"},{"type":"text","text":"Synergy Server:","style":{"bold":true}},{"type":"text","text":" Download the latest version of the Synergy server and run its "},{"type":"text","text":".jar","style":{"code":true}},{"type":"text","text":" file (Websocket). *\nSource: "},{"type":"link","url":"https://paramount.atlassian.net/wiki/spaces/PLQA/pages/47720266","style":{"code":true}},{"type":"text","text":"\n*\n"},{"type":"text","text":"Appium Server:","style":{"bold":true}},{"type":"text","text":" For local Android tests, an Appium server can be started. There's a "},{"type":"text","text":"SampleTest.java","style":{"code":true}},{"type":"text","text":" class that includes methods for starting and stopping the Appium server, as well as launching and stopping the Android Emulator. *\nSource: "},{"type":"link","url":"https://paramount.atlassian.net/wiki/spaces/PLQA/pages/47711460","style":{"code":true}},{"type":"text","text":"\n\n### 2. Configuration\n\nUpdate the desired capabilities in the "},{"type":"text","text":".config","style":{"code":true}},{"type":"text","text":" file located in the "},{"type":"text","text":"mqe-hob-mobile-tests","style":{"code":true}},{"type":"text","text":" directory. You can also add properties to "},{"type":"text","text":"resources/config.properties","style":{"code":true}},{"type":"text","text":" within the same module. Key parameters for local Android testing include:\n\n*\n"},{"type":"text","text":"Platform:","style":{"bold":true}},{"type":"text","text":" Set to "},{"type":"text","text":"ANDROID","style":{"code":true}},{"type":"text","text":". *\n"},{"type":"text","text":"Mobile Device Category:","style":{"bold":true}},{"type":"text","text":" Set to "},{"type":"text","text":"PHONE","style":{"code":true}},{"type":"text","text":". *\n"},{"type":"text","text":"Device Start Orientation:","style":{"bold":true}},{"type":"text","text":" Set to "},{"type":"text","text":"PORTRAIT","style":{"code":true}},{"type":"text","text":". *\n"},{"type":"text","text":"Debug Device ID:","style":{"bold":true}},{"type":"text","text":" Add the device ID of your emulator (obtain by typing "},{"type":"text","text":"adb devices","style":{"code":true}},{"type":"text","text":" in the terminal) or the IP address if using a real device. *\n"},{"type":"text","text":"Client ID:","style":{"bold":true}},{"type":"text","text":" This is your machine's serial number for local executions or to target a specific private lab machine. *\n"},{"type":"text","text":"Server URL:","style":{"bold":true}},{"type":"text","text":" For example, "},{"type":"link","url":"https://www.synergyserver.tech?key=","style":{"code":true}},{"type":"text","text":". *\n"},{"type":"text","text":"Locale:","style":{"bold":true}},{"type":"text","text":" Such as "},{"type":"text","text":"en-us","style":{"code":true}},{"type":"text","text":". *\n"},{"type":"text","text":"Environment:","style":{"bold":true}},{"type":"text","text":" For example, "},{"type":"text","text":"stage","style":{"code":true}},{"type":"text","text":". *\n"},{"type":"text","text":"Use GeoVPN:","style":{"bold":true}},{"type":"text","text":" Set this parameter for the stage environment only. *\n"},{"type":"text","text":"App Package URL:","style":{"bold":true}},{"type":"text","text":" The URL of the build. *\n"},{"type":"text","text":"App Build Type:","style":{"bold":true}},{"type":"text","text":" For example, "},{"type":"text","text":"DEBUG","style":{"code":true}},{"type":"text","text":". Additional parameters you might configure include "},{"type":"text","text":"TestRailProjectId","style":{"code":true}},{"type":"text","text":", "},{"type":"text","text":"ReRunOnFailure","style":{"code":true}},{"type":"text","text":", and "},{"type":"text","text":"SendEmailReport","style":{"code":true}},{"type":"text","text":". *\nSource: "},{"type":"link","url":"https://paramount.atlassian.net/wiki/spaces/PLQA/pages/47720266","style":{"code":true}},{"type":"text","text":"\n\nYou can also pass specific parameters in your Maven command, such as:\n\n*\n"},{"type":"text","text":"-Ddriver=android","style":{"code":true}},{"type":"text","text":"\n*\n"},{"type":"text","text":"-DplatformName=Android","style":{"code":true}},{"type":"text","text":"\n*\n"},{"type":"text","text":"-DplatformVersion=11.0","style":{"code":true}},{"type":"text","text":" (or your desired version)\n*\n"},{"type":"text","text":"-DdeviceName=\"Google Pixel 2XL\"","style":{"code":true}},{"type":"text","text":" (or your device name)\n*\n"},{"type":"text","text":"-Denvironment=local","style":{"code":true}},{"type":"text","text":"\n*\n"},{"type":"text","text":"-Dheadless=false","style":{"code":true}},{"type":"text","text":"\n*\n"},{"type":"text","text":"-Dapp=\"/pathToPackage/your-app.apk\"","style":{"code":true}},{"type":"text","text":" (path to your Android application package)\n*\n"},{"type":"text","text":"-Dudid=","style":{"code":true}},{"type":"text","text":" (set this if running on a real mobile device)\n*\n"},{"type":"text","text":"-DbundleId=","style":{"code":true}},{"type":"text","text":" (set to override default)\n\n*\nSource: "},{"type":"link","url":"https://paramount.atlassian.net/wiki/spaces/PLQA/pages/47711460","style":{"code":true}},{"type":"text","text":"\n\n### 3.\n\n"},{"type":"text","text":"(message continued in thread...)","style":{"italic":true}}]}]}]}}
2025-08-22 14:31:35,917 - slack_sdk.web.base_client - DEBUG - [base_client.py:255] - Sending a request - url: https://slack.com/api/chat.postMessage, query_params: {}, body_params: {}, files: {}, json_body: {'channel': 'D09A0LFHK8R', 'text': '_(part 2/2)_\n\nRunning the Test\n\nYou have a few options for executing your tests:\n\n*\n*From the Terminal (Maven Command):*\n    Enter the following command in your IDE terminal window:\n    `mvn clean test -pl mqe-hob-mobile-tests -am -Dgroups=Your test case number or tag`\n\n*\n*From `TestNGSuiteConfig.xml`:*\n    Navigate to the `TestNGSuiteConfig.xml` file, right-click, and select "run TestNGSuiteConfig.xml". You will need to provide the necessary test case ID or tag name in the `<include name="" />` section. *\nSource: `https://paramount.atlassian.net/wiki/spaces/PLQA/pages/47720266`\n\nFor more detailed information on Android development and testing, you can refer to:\n\n*\nBasics of Android Studio: `https://developer.android.com/studio/intro`\n*\nFundamentals of testing Android apps: `https://developer.android.com/training/testing/fundamentals`\n*\nRunning apps on the emulator: `https://developer.android.com/studio/run/emulator`\n\n*\nSource: `https://paramount.atlassian.net/wiki/spaces/PLQA/pages/47722061`\n\n────────────────────────────────────────\n*📚 Sources:*\n1. https://paramount.atlassian.net/wiki/spaces/PLQA/pages/47713566\n2. https://paramount.atlassian.net/wiki/spaces/PLQA/pages/47720266\n3. https://paramount.atlassian.net/wiki/spaces/PLQA/pages/47711460\n4. https://paramount.atlassian.net/wiki/spaces/PLQA/pages/47722061', 'thread_ts': '1755898262.509419', 'team_id': 'T010QS7UQNA'}, headers: {'Content-Type': 'application/json;charset=utf-8', 'Authorization': '(redacted)', 'User-Agent': 'Python/3.12.0 slackclient/3.34.0 Darwin/23.4.0'}
2025-08-22 14:31:36,286 - slack_sdk.web.base_client - DEBUG - [base_client.py:546] - Received the following response - status: 200, headers: {'date': 'Fri, 22 Aug 2025 21:31:36 GMT', 'server': 'Apache', 'vary': 'Accept-Encoding', 'x-slack-req-id': 'e3e32dcfd8398492e207a082e0bd89b2', 'x-content-type-options': 'nosniff', 'x-xss-protection': '0', 'pragma': 'no-cache', 'cache-control': 'private, no-cache, no-store, must-revalidate', 'expires': 'Sat, 26 Jul 1997 05:00:00 GMT', 'content-type': 'application/json; charset=utf-8', 'x-accepted-oauth-scopes': 'chat:write', 'x-oauth-scopes': 'app_mentions:read,channels:history,chat:write,im:history,im:read,im:write,users:read,reactions:write,users:read.email', 'access-control-expose-headers': 'x-slack-req-id, retry-after', 'access-control-allow-headers': 'slack-route, x-slack-version-ts, x-b3-traceid, x-b3-spanid, x-b3-parentspanid, x-b3-sampled, x-b3-flags', 'strict-transport-security': 'max-age=31536000; includeSubDomains; preload', 'referrer-policy': 'no-referrer', 'x-slack-unique-id': 'aKjhuBKG24ry3PONECch7AAAAAU', 'x-slack-backend': 'r', 'access-control-allow-origin': '*', 'content-length': '4906', 'via': '1.1 slack-prod.tinyspeck.com, envoy-www-iad-ealjbwzs,envoy-edge-pdx-xivqkgbn', 'x-envoy-attempt-count': '1', 'x-envoy-upstream-service-time': '159', 'x-backend': 'main_normal main_canary_with_overflow main_control_with_overflow', 'x-server': 'slack-www-hhvm-main-iad-foer', 'x-slack-shared-secret-outcome': 'no-match', 'x-edge-backend': 'envoy-www', 'timing-allow-origin': '*', 'x-slack-edge-shared-secret-outcome': 'no-match', 'connection': 'close'}, body: {"ok":true,"channel":"D09A0LFHK8R","ts":"1755898296.217639","message":{"user":"U099R6WTZ9S","type":"message","ts":"1755898296.217639","bot_id":"B099R6WTRU4","app_id":"A099LACAB2R","text":"_(part 2/2)_\n\nRunning the Test\n\nYou have a few options for executing your tests:\n\n*\n*From the Terminal (Maven Command):*\n    Enter the following command in your IDE terminal window:\n    `mvn clean test -pl mqe-hob-mobile-tests -am -Dgroups=Your test case number or tag`\n\n*\n*From `TestNGSuiteConfig.xml`:*\n    Navigate to the `TestNGSuiteConfig.xml` file, right-click, and select \"run TestNGSuiteConfig.xml\". You will need to provide the necessary test case ID or tag name in the `&lt;include name=\"\" /&gt;` section. *\nSource: `<https://paramount.atlassian.net/wiki/spaces/PLQA/pages/47720266>`\n\nFor more detailed information on Android development and testing, you can refer to:\n\n*\nBasics of Android Studio: `<https://developer.android.com/studio/intro>`\n*\nFundamentals of testing Android apps: `<https://developer.android.com/training/testing/fundamentals>`\n*\nRunning apps on the emulator: `<https://developer.android.com/studio/run/emulator>`\n\n*\nSource: `<https://paramount.atlassian.net/wiki/spaces/PLQA/pages/47722061>`\n\n────────────────────────────────────────\n*:books: Sources:*\n1. <https://paramount.atlassian.net/wiki/spaces/PLQA/pages/47713566>\n2. <https://paramount.atlassian.net/wiki/spaces/PLQA/pages/47720266>\n3. <https://paramount.atlassian.net/wiki/spaces/PLQA/pages/47711460>\n4. <https://paramount.atlassian.net/wiki/spaces/PLQA/pages/47722061>","team":"T010QS7UQNA","bot_profile":{"id":"B099R6WTRU4","app_id":"A099LACAB2R","user_id":"U099R6WTZ9S","name":"AutoBot","icons":{"image_36":"https://a.slack-edge.com/80588/img/plugins/app/bot_36.png","image_48":"https://a.slack-edge.com/80588/img/plugins/app/bot_48.png","image_72":"https://a.slack-edge.com/80588/img/plugins/app/service_72.png"},"deleted":false,"updated":1754677948,"team_id":"T010QS7UQNA"},"thread_ts":"1755898262.509419","parent_user_id":"U01RMTFMALF","blocks":[{"type":"rich_text","block_id":"e4q","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"(part 2/2)","style":{"italic":true}},{"type":"text","text":"\n\nRunning the Test\n\nYou have a few options for executing your tests:\n\n*\n"},{"type":"text","text":"From the Terminal (Maven Command):","style":{"bold":true}},{"type":"text","text":"\n    Enter the following command in your IDE terminal window:\n    "},{"type":"text","text":"mvn clean test -pl mqe-hob-mobile-tests -am -Dgroups=Your test case number or tag","style":{"code":true}},{"type":"text","text":"\n\n*\n"},{"type":"text","text":"From ","style":{"bold":true}},{"type":"text","text":"TestNGSuiteConfig.xml","style":{"bold":true,"code":true}},{"type":"text","text":":","style":{"bold":true}},{"type":"text","text":"\n    Navigate to the "},{"type":"text","text":"TestNGSuiteConfig.xml","style":{"code":true}},{"type":"text","text":" file, right-click, and select \"run TestNGSuiteConfig.xml\". You will need to provide the necessary test case ID or tag name in the "},{"type":"text","text":"<include name=\"\" />","style":{"code":true}},{"type":"text","text":" section. *\nSource: "},{"type":"link","url":"https://paramount.atlassian.net/wiki/spaces/PLQA/pages/47720266","style":{"code":true}},{"type":"text","text":"\n\nFor more detailed information on Android development and testing, you can refer to:\n\n*\nBasics of Android Studio: "},{"type":"link","url":"https://developer.android.com/studio/intro","style":{"code":true}},{"type":"text","text":"\n*\nFundamentals of testing Android apps: "},{"type":"link","url":"https://developer.android.com/training/testing/fundamentals","style":{"code":true}},{"type":"text","text":"\n*\nRunning apps on the emulator: "},{"type":"link","url":"https://developer.android.com/studio/run/emulator","style":{"code":true}},{"type":"text","text":"\n\n*\nSource: "},{"type":"link","url":"https://paramount.atlassian.net/wiki/spaces/PLQA/pages/47722061","style":{"code":true}},{"type":"text","text":"\n\n────────────────────────────────────────\n"},{"type":"emoji","name":"books","unicode":"1f4da","style":{"bold":true}},{"type":"text","text":" Sources:","style":{"bold":true}},{"type":"text","text":"\n1. "},{"type":"link","url":"https://paramount.atlassian.net/wiki/spaces/PLQA/pages/47713566"},{"type":"text","text":"\n2. "},{"type":"link","url":"https://paramount.atlassian.net/wiki/spaces/PLQA/pages/47720266"},{"type":"text","text":"\n3. "},{"type":"link","url":"https://paramount.atlassian.net/wiki/spaces/PLQA/pages/47711460"},{"type":"text","text":"\n4. "},{"type":"link","url":"https://paramount.atlassian.net/wiki/spaces/PLQA/pages/47722061"}]}]}]}}
2025-08-22 14:31:36,289 - __main__ - DEBUG - [main.py:641] - Cleaning up DM thread tracking...
2025-08-22 14:31:36,289 - utils - DEBUG - [utils.py:67] - Managing thread: D09A0LFHK8R:1755898262.509419, action: remove, user: U01RMTFMALF
2025-08-22 14:31:36,289 - utils - INFO - [utils.py:100] - Removed thread D09A0LFHK8R:1755898262.509419 from active tracking (remaining: 0)
2025-08-22 14:31:37,060 - slack_bolt.App - DEBUG - [client.py:235] - on_message invoked: (message: {"envelope_id":"65d2a8c9-8b0c-46a0-adc2-bed4fa8b0ecc","payload":{"token":"yq71khZBCyJF1Ri2hG5aNqr5","team_id":"T010QS7UQNA","enterprise_id":"ERV4P7NAD","context_team_id":null,"context_enterprise_id":"ERV4P7NAD","api_app_id":"A099LACAB2R","event":{"user":"U099R6WTZ9S","type":"message","ts":"1755898295.842129","bot_id":"B099R6WTRU4","app_id":"A099LACAB2R","text":"*Your Question:*\n&gt; How can i run an automated test on a local Android phone? *Answer:*\nTo run an automated test on a local Android phone, you'll need to set up your environment, configure test parameters, and then execute your tests. ### 1. Environmental Setup\n\n*\n*Android Environment Variables:* If using an Android Emulator, ensure the `$ANDROID_HOME` environment variable is set and included in your system's path. *\nSource: `<https:\/\/paramount.atlassian.net\/wiki\/spaces\/PLQA\/pages\/47713566>`\n*\n*VPN Connection:* Connect to the VPN at `<http:\/\/connect.cbsinteractive.com\/VPNFT>`. *\nSource: `<https:\/\/paramount.atlassian.net\/wiki\/spaces\/PLQA\/pages\/47720266>`\n*\n*Synergy Server:* Download the latest version of the Synergy server and run its `.jar` file (Websocket). *\nSource: `<https:\/\/paramount.atlassian.net\/wiki\/spaces\/PLQA\/pages\/47720266>`\n*\n*Appium Server:* For local Android tests, an Appium server can be started. There's a `SampleTest.java` class that includes methods for starting and stopping the Appium server, as well as launching and stopping the Android Emulator. *\nSource: `<https:\/\/paramount.atlassian.net\/wiki\/spaces\/PLQA\/pages\/47711460>`\n\n### 2. Configuration\n\nUpdate the desired capabilities in the `.config` file located in the `mqe-hob-mobile-tests` directory. You can also add properties to `resources\/config.properties` within the same module. Key parameters for local Android testing include:\n\n*\n*Platform:* Set to `ANDROID`. *\n*Mobile Device Category:* Set to `PHONE`. *\n*Device Start Orientation:* Set to `PORTRAIT`. *\n*Debug Device ID:* Add the device ID of your emulator (obtain by typing `adb devices` in the terminal) or the IP address if using a real device. *\n*Client ID:* This is your machine's serial number for local executions or to target a specific private lab machine. *\n*Server URL:* For example, `<https:\/\/www.synergyserver.tech?key=>`. *\n*Locale:* Such as `en-us`. *\n*Environment:* For example, `stage`. *\n*Use GeoVPN:* Set this parameter for the stage environment only. *\n*App Package URL:* The URL of the build. *\n*App Build Type:* For example, `DEBUG`. Additional parameters you might configure include `TestRailProjectId`, `ReRunOnFailure`, and `SendEmailReport`. *\nSource: `<https:\/\/paramount.atlassian.net\/wiki\/spaces\/PLQA\/pages\/47720266>`\n\nYou can also pass specific parameters in your Maven command, such as:\n\n*\n`-Ddriver=android`\n*\n`-DplatformName=Android`\n*\n`-DplatformVersion=11.0` (or your desired version)\n*\n`-DdeviceName=\"Google Pixel 2XL\"` (or your device name)\n*\n`-Denvironment=local`\n*\n`-Dheadless=false`\n*\n`-Dapp=\"\/pathToPackage\/your-app.apk\"` (path to your Android application package)\n*\n`-Dudid=` (set this if running on a real mobile device)\n*\n`-DbundleId=` (set to override default)\n\n*\nSource: `<https:\/\/paramount.atlassian.net\/wiki\/spaces\/PLQA\/pages\/47711460>`\n\n### 3.\n\n_(message continued in thread...)_","team":"T010QS7UQNA","bot_profile":{"id":"B099R6WTRU4","deleted":false,"name":"AutoBot","updated":1754677948,"app_id":"A099LACAB2R","user_id":"U099R6WTZ9S","icons":{"image_36":"https:\/\/a.slack-edge.com\/80588\/img\/plugins\/app\/bot_36.png","image_48":"https:\/\/a.slack-edge.com\/80588\/img\/plugins\/app\/bot_48.png","image_72":"https:\/\/a.slack-edge.com\/80588\/img\/plugins\/app\/service_72.png"},"team_id":"T010QS7UQNA"},"thread_ts":"1755898262.509419","parent_user_id":"U01RMTFMALF","blocks":[{"type":"rich_text","block_id":"kxty","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Your Question:","style":{"bold":true}}]},{"type":"rich_text_quote","elements":[{"type":"text","text":"How can i run an automated test on a local Android phone? "},{"type":"text","text":"Answer:","style":{"bold":true}}]},{"type":"rich_text_section","elements":[{"type":"text","text":"To run an automated test on a local Android phone, you'll need to set up your environment, configure test parameters, and then execute your tests. ### 1. Environmental Setup\n\n*\n"},{"type":"text","text":"Android Environment Variables:","style":{"bold":true}},{"type":"text","text":" If using an Android Emulator, ensure the "},{"type":"text","text":"$ANDROID_HOME","style":{"code":true}},{"type":"text","text":" environment variable is set and included in your system's path. *\nSource: "},{"type":"link","url":"https:\/\/paramount.atlassian.net\/wiki\/spaces\/PLQA\/pages\/47713566","style":{"code":true}},{"type":"text","text":"\n*\n"},{"type":"text","text":"VPN Connection:","style":{"bold":true}},{"type":"text","text":" Connect to the VPN at "},{"type":"link","url":"http:\/\/connect.cbsinteractive.com\/VPNFT","style":{"code":true}},{"type":"text","text":". *\nSource: "},{"type":"link","url":"https:\/\/paramount.atlassian.net\/wiki\/spaces\/PLQA\/pages\/47720266","style":{"code":true}},{"type":"text","text":"\n*\n"},{"type":"text","text":"Synergy Server:","style":{"bold":true}},{"type":"text","text":" Download the latest version of the Synergy server and run its "},{"type":"text","text":".jar","style":{"code":true}},{"type":"text","text":" file (Websocket). *\nSource: "},{"type":"link","url":"https:\/\/paramount.atlassian.net\/wiki\/spaces\/PLQA\/pages\/47720266","style":{"code":true}},{"type":"text","text":"\n*\n"},{"type":"text","text":"Appium Server:","style":{"bold":true}},{"type":"text","text":" For local Android tests, an Appium server can be started. There's a "},{"type":"text","text":"SampleTest.java","style":{"code":true}},{"type":"text","text":" class that includes methods for starting and stopping the Appium server, as well as launching and stopping the Android Emulator. *\nSource: "},{"type":"link","url":"https:\/\/paramount.atlassian.net\/wiki\/spaces\/PLQA\/pages\/47711460","style":{"code":true}},{"type":"text","text":"\n\n### 2. Configuration\n\nUpdate the desired capabilities in the "},{"type":"text","text":".config","style":{"code":true}},{"type":"text","text":" file located in the "},{"type":"text","text":"mqe-hob-mobile-tests","style":{"code":true}},{"type":"text","text":" directory. You can also add properties to "},{"type":"text","text":"resources\/config.properties","style":{"code":true}},{"type":"text","text":" within the same module. Key parameters for local Android testing include:\n\n*\n"},{"type":"text","text":"Platform:","style":{"bold":true}},{"type":"text","text":" Set to "},{"type":"text","text":"ANDROID","style":{"code":true}},{"type":"text","text":". *\n"},{"type":"text","text":"Mobile Device Category:","style":{"bold":true}},{"type":"text","text":" Set to "},{"type":"text","text":"PHONE","style":{"code":true}},{"type":"text","text":". *\n"},{"type":"text","text":"Device Start Orientation:","style":{"bold":true}},{"type":"text","text":" Set to "},{"type":"text","text":"PORTRAIT","style":{"code":true}},{"type":"text","text":". *\n"},{"type":"text","text":"Debug Device ID:","style":{"bold":true}},{"type":"text","text":" Add the device ID of your emulator (obtain by typing "},{"type":"text","text":"adb devices","style":{"code":true}},{"type":"text","text":" in the terminal) or the IP address if using a real device. *\n"},{"type":"text","text":"Client ID:","style":{"bold":true}},{"type":"text","text":" This is your machine's serial number for local executions or to target a specific private lab machine. *\n"},{"type":"text","text":"Server URL:","style":{"bold":true}},{"type":"text","text":" For example, "},{"type":"link","url":"https:\/\/www.synergyserver.tech?key=","style":{"code":true}},{"type":"text","text":". *\n"},{"type":"text","text":"Locale:","style":{"bold":true}},{"type":"text","text":" Such as "},{"type":"text","text":"en-us","style":{"code":true}},{"type":"text","text":". *\n"},{"type":"text","text":"Environment:","style":{"bold":true}},{"type":"text","text":" For example, "},{"type":"text","text":"stage","style":{"code":true}},{"type":"text","text":". *\n"},{"type":"text","text":"Use GeoVPN:","style":{"bold":true}},{"type":"text","text":" Set this parameter for the stage environment only. *\n"},{"type":"text","text":"App Package URL:","style":{"bold":true}},{"type":"text","text":" The URL of the build. *\n"},{"type":"text","text":"App Build Type:","style":{"bold":true}},{"type":"text","text":" For example, "},{"type":"text","text":"DEBUG","style":{"code":true}},{"type":"text","text":". Additional parameters you might configure include "},{"type":"text","text":"TestRailProjectId","style":{"code":true}},{"type":"text","text":", "},{"type":"text","text":"ReRunOnFailure","style":{"code":true}},{"type":"text","text":", and "},{"type":"text","text":"SendEmailReport","style":{"code":true}},{"type":"text","text":". *\nSource: "},{"type":"link","url":"https:\/\/paramount.atlassian.net\/wiki\/spaces\/PLQA\/pages\/47720266","style":{"code":true}},{"type":"text","text":"\n\nYou can also pass specific parameters in your Maven command, such as:\n\n*\n"},{"type":"text","text":"-Ddriver=android","style":{"code":true}},{"type":"text","text":"\n*\n"},{"type":"text","text":"-DplatformName=Android","style":{"code":true}},{"type":"text","text":"\n*\n"},{"type":"text","text":"-DplatformVersion=11.0","style":{"code":true}},{"type":"text","text":" (or your desired version)\n*\n"},{"type":"text","text":"-DdeviceName=\"Google Pixel 2XL\"","style":{"code":true}},{"type":"text","text":" (or your device name)\n*\n"},{"type":"text","text":"-Denvironment=local","style":{"code":true}},{"type":"text","text":"\n*\n"},{"type":"text","text":"-Dheadless=false","style":{"code":true}},{"type":"text","text":"\n*\n"},{"type":"text","text":"-Dapp=\"\/pathToPackage\/your-app.apk\"","style":{"code":true}},{"type":"text","text":" (path to your Android application package)\n*\n"},{"type":"text","text":"-Dudid=","style":{"code":true}},{"type":"text","text":" (set this if running on a real mobile device)\n*\n"},{"type":"text","text":"-DbundleId=","style":{"code":true}},{"type":"text","text":" (set to override default)\n\n*\nSource: "},{"type":"link","url":"https:\/\/paramount.atlassian.net\/wiki\/spaces\/PLQA\/pages\/47711460","style":{"code":true}},{"type":"text","text":"\n\n### 3.\n\n"},{"type":"text","text":"(message continued in thread...)","style":{"italic":true}}]}]}],"channel":"D09A0LFHK8R","event_ts":"1755898295.842129","channel_type":"im"},"type":"event_callback","event_id":"Ev09BMQMUATX","event_time":1755898295,"authorizations":[{"enterprise_id":"ERV4P7NAD","team_id":"T010QS7UQNA","user_id":"U099R6WTZ9S","is_bot":true,"is_enterprise_install":false}],"is_ext_shared_channel":false,"event_context":"4-eyJldCI6Im1lc3NhZ2UiLCJ0aWQiOiJUMDEwUVM3VVFOQSIsImFpZCI6IkEwOTlMQUNBQjJSIiwiY2lkIjoiRDA5QTBMRkhLOFIifQ"},"type":"events_api","accepts_response_payload":false,"retry_attempt":0,"retry_reason":""})
2025-08-22 14:31:37,062 - slack_bolt.App - DEBUG - [client.py:99] - A new message enqueued (current queue size: 1)
2025-08-22 14:31:37,062 - slack_bolt.App - DEBUG - [client.py:105] - A message dequeued (current queue size: 0)
2025-08-22 14:31:37,063 - slack_bolt.App - DEBUG - [client.py:125] - Message processing started (type: events_api, envelope_id: 65d2a8c9-8b0c-46a0-adc2-bed4fa8b0ecc)
2025-08-22 14:31:37,063 - slack_bolt.App - DEBUG - [app.py:476] - Applying slack_bolt.middleware.ssl_check.ssl_check.SslCheck
2025-08-22 14:31:37,063 - slack_bolt.App - DEBUG - [app.py:476] - Applying slack_bolt.middleware.request_verification.request_verification.RequestVerification
2025-08-22 14:31:37,063 - slack_bolt.App - DEBUG - [app.py:476] - Applying slack_bolt.middleware.authorization.single_team_authorization.SingleTeamAuthorization
2025-08-22 14:31:37,063 - slack_bolt.App - DEBUG - [app.py:476] - Applying slack_bolt.middleware.ignoring_self_events.ignoring_self_events.IgnoringSelfEvents
2025-08-22 14:31:37,064 - slack_bolt.IgnoringSelfEvents - DEBUG - [ignoring_self_events.py:60] - Skipped self event: {'user': 'U099R6WTZ9S', 'type': 'message', 'ts': '1755898295.842129', 'bot_id': 'B099R6WTRU4', 'app_id': 'A099LACAB2R', 'text': '*Your Question:*\n&gt; How can i run an automated test on a local Android phone? *Answer:*\nTo run an automated test on a local Android phone, you\'ll need to set up your environment, configure test parameters, and then execute your tests. ### 1. Environmental Setup\n\n*\n*Android Environment Variables:* If using an Android Emulator, ensure the `$ANDROID_HOME` environment variable is set and included in your system\'s path. *\nSource: `<https://paramount.atlassian.net/wiki/spaces/PLQA/pages/47713566>`\n*\n*VPN Connection:* Connect to the VPN at `<http://connect.cbsinteractive.com/VPNFT>`. *\nSource: `<https://paramount.atlassian.net/wiki/spaces/PLQA/pages/47720266>`\n*\n*Synergy Server:* Download the latest version of the Synergy server and run its `.jar` file (Websocket). *\nSource: `<https://paramount.atlassian.net/wiki/spaces/PLQA/pages/47720266>`\n*\n*Appium Server:* For local Android tests, an Appium server can be started. There\'s a `SampleTest.java` class that includes methods for starting and stopping the Appium server, as well as launching and stopping the Android Emulator. *\nSource: `<https://paramount.atlassian.net/wiki/spaces/PLQA/pages/47711460>`\n\n### 2. Configuration\n\nUpdate the desired capabilities in the `.config` file located in the `mqe-hob-mobile-tests` directory. You can also add properties to `resources/config.properties` within the same module. Key parameters for local Android testing include:\n\n*\n*Platform:* Set to `ANDROID`. *\n*Mobile Device Category:* Set to `PHONE`. *\n*Device Start Orientation:* Set to `PORTRAIT`. *\n*Debug Device ID:* Add the device ID of your emulator (obtain by typing `adb devices` in the terminal) or the IP address if using a real device. *\n*Client ID:* This is your machine\'s serial number for local executions or to target a specific private lab machine. *\n*Server URL:* For example, `<https://www.synergyserver.tech?key=>`. *\n*Locale:* Such as `en-us`. *\n*Environment:* For example, `stage`. *\n*Use GeoVPN:* Set this parameter for the stage environment only. *\n*App Package URL:* The URL of the build. *\n*App Build Type:* For example, `DEBUG`. Additional parameters you might configure include `TestRailProjectId`, `ReRunOnFailure`, and `SendEmailReport`. *\nSource: `<https://paramount.atlassian.net/wiki/spaces/PLQA/pages/47720266>`\n\nYou can also pass specific parameters in your Maven command, such as:\n\n*\n`-Ddriver=android`\n*\n`-DplatformName=Android`\n*\n`-DplatformVersion=11.0` (or your desired version)\n*\n`-DdeviceName="Google Pixel 2XL"` (or your device name)\n*\n`-Denvironment=local`\n*\n`-Dheadless=false`\n*\n`-Dapp="/pathToPackage/your-app.apk"` (path to your Android application package)\n*\n`-Dudid=` (set this if running on a real mobile device)\n*\n`-DbundleId=` (set to override default)\n\n*\nSource: `<https://paramount.atlassian.net/wiki/spaces/PLQA/pages/47711460>`\n\n### 3.\n\n_(message continued in thread...)_', 'team': 'T010QS7UQNA', 'bot_profile': {'id': 'B099R6WTRU4', 'deleted': False, 'name': 'AutoBot', 'updated': 1754677948, 'app_id': 'A099LACAB2R', 'user_id': 'U099R6WTZ9S', 'icons': {'image_36': 'https://a.slack-edge.com/80588/img/plugins/app/bot_36.png', 'image_48': 'https://a.slack-edge.com/80588/img/plugins/app/bot_48.png', 'image_72': 'https://a.slack-edge.com/80588/img/plugins/app/service_72.png'}, 'team_id': 'T010QS7UQNA'}, 'thread_ts': '1755898262.509419', 'parent_user_id': 'U01RMTFMALF', 'blocks': [{'type': 'rich_text', 'block_id': 'kxty', 'elements': [{'type': 'rich_text_section', 'elements': [{'type': 'text', 'text': 'Your Question:', 'style': {'bold': True}}]}, {'type': 'rich_text_quote', 'elements': [{'type': 'text', 'text': 'How can i run an automated test on a local Android phone? '}, {'type': 'text', 'text': 'Answer:', 'style': {'bold': True}}]}, {'type': 'rich_text_section', 'elements': [{'type': 'text', 'text': "To run an automated test on a local Android phone, you'll need to set up your environment, configure test parameters, and then execute your tests. ### 1. Environmental Setup\n\n*\n"}, {'type': 'text', 'text': 'Android Environment Variables:', 'style': {'bold': True}}, {'type': 'text', 'text': ' If using an Android Emulator, ensure the '}, {'type': 'text', 'text': '$ANDROID_HOME', 'style': {'code': True}}, {'type': 'text', 'text': " environment variable is set and included in your system's path. *\nSource: "}, {'type': 'link', 'url': 'https://paramount.atlassian.net/wiki/spaces/PLQA/pages/47713566', 'style': {'code': True}}, {'type': 'text', 'text': '\n*\n'}, {'type': 'text', 'text': 'VPN Connection:', 'style': {'bold': True}}, {'type': 'text', 'text': ' Connect to the VPN at '}, {'type': 'link', 'url': 'http://connect.cbsinteractive.com/VPNFT', 'style': {'code': True}}, {'type': 'text', 'text': '. *\nSource: '}, {'type': 'link', 'url': 'https://paramount.atlassian.net/wiki/spaces/PLQA/pages/47720266', 'style': {'code': True}}, {'type': 'text', 'text': '\n*\n'}, {'type': 'text', 'text': 'Synergy Server:', 'style': {'bold': True}}, {'type': 'text', 'text': ' Download the latest version of the Synergy server and run its '}, {'type': 'text', 'text': '.jar', 'style': {'code': True}}, {'type': 'text', 'text': ' file (Websocket). *\nSource: '}, {'type': 'link', 'url': 'https://paramount.atlassian.net/wiki/spaces/PLQA/pages/47720266', 'style': {'code': True}}, {'type': 'text', 'text': '\n*\n'}, {'type': 'text', 'text': 'Appium Server:', 'style': {'bold': True}}, {'type': 'text', 'text': " For local Android tests, an Appium server can be started. There's a "}, {'type': 'text', 'text': 'SampleTest.java', 'style': {'code': True}}, {'type': 'text', 'text': ' class that includes methods for starting and stopping the Appium server, as well as launching and stopping the Android Emulator. *\nSource: '}, {'type': 'link', 'url': 'https://paramount.atlassian.net/wiki/spaces/PLQA/pages/47711460', 'style': {'code': True}}, {'type': 'text', 'text': '\n\n### 2. Configuration\n\nUpdate the desired capabilities in the '}, {'type': 'text', 'text': '.config', 'style': {'code': True}}, {'type': 'text', 'text': ' file located in the '}, {'type': 'text', 'text': 'mqe-hob-mobile-tests', 'style': {'code': True}}, {'type': 'text', 'text': ' directory. You can also add properties to '}, {'type': 'text', 'text': 'resources/config.properties', 'style': {'code': True}}, {'type': 'text', 'text': ' within the same module. Key parameters for local Android testing include:\n\n*\n'}, {'type': 'text', 'text': 'Platform:', 'style': {'bold': True}}, {'type': 'text', 'text': ' Set to '}, {'type': 'text', 'text': 'ANDROID', 'style': {'code': True}}, {'type': 'text', 'text': '. *\n'}, {'type': 'text', 'text': 'Mobile Device Category:', 'style': {'bold': True}}, {'type': 'text', 'text': ' Set to '}, {'type': 'text', 'text': 'PHONE', 'style': {'code': True}}, {'type': 'text', 'text': '. *\n'}, {'type': 'text', 'text': 'Device Start Orientation:', 'style': {'bold': True}}, {'type': 'text', 'text': ' Set to '}, {'type': 'text', 'text': 'PORTRAIT', 'style': {'code': True}}, {'type': 'text', 'text': '. *\n'}, {'type': 'text', 'text': 'Debug Device ID:', 'style': {'bold': True}}, {'type': 'text', 'text': ' Add the device ID of your emulator (obtain by typing '}, {'type': 'text', 'text': 'adb devices', 'style': {'code': True}}, {'type': 'text', 'text': ' in the terminal) or the IP address if using a real device. *\n'}, {'type': 'text', 'text': 'Client ID:', 'style': {'bold': True}}, {'type': 'text', 'text': " This is your machine's serial number for local executions or to target a specific private lab machine. *\n"}, {'type': 'text', 'text': 'Server URL:', 'style': {'bold': True}}, {'type': 'text', 'text': ' For example, '}, {'type': 'link', 'url': 'https://www.synergyserver.tech?key=', 'style': {'code': True}}, {'type': 'text', 'text': '. *\n'}, {'type': 'text', 'text': 'Locale:', 'style': {'bold': True}}, {'type': 'text', 'text': ' Such as '}, {'type': 'text', 'text': 'en-us', 'style': {'code': True}}, {'type': 'text', 'text': '. *\n'}, {'type': 'text', 'text': 'Environment:', 'style': {'bold': True}}, {'type': 'text', 'text': ' For example, '}, {'type': 'text', 'text': 'stage', 'style': {'code': True}}, {'type': 'text', 'text': '. *\n'}, {'type': 'text', 'text': 'Use GeoVPN:', 'style': {'bold': True}}, {'type': 'text', 'text': ' Set this parameter for the stage environment only. *\n'}, {'type': 'text', 'text': 'App Package URL:', 'style': {'bold': True}}, {'type': 'text', 'text': ' The URL of the build. *\n'}, {'type': 'text', 'text': 'App Build Type:', 'style': {'bold': True}}, {'type': 'text', 'text': ' For example, '}, {'type': 'text', 'text': 'DEBUG', 'style': {'code': True}}, {'type': 'text', 'text': '. Additional parameters you might configure include '}, {'type': 'text', 'text': 'TestRailProjectId', 'style': {'code': True}}, {'type': 'text', 'text': ', '}, {'type': 'text', 'text': 'ReRunOnFailure', 'style': {'code': True}}, {'type': 'text', 'text': ', and '}, {'type': 'text', 'text': 'SendEmailReport', 'style': {'code': True}}, {'type': 'text', 'text': '. *\nSource: '}, {'type': 'link', 'url': 'https://paramount.atlassian.net/wiki/spaces/PLQA/pages/47720266', 'style': {'code': True}}, {'type': 'text', 'text': '\n\nYou can also pass specific parameters in your Maven command, such as:\n\n*\n'}, {'type': 'text', 'text': '-Ddriver=android', 'style': {'code': True}}, {'type': 'text', 'text': '\n*\n'}, {'type': 'text', 'text': '-DplatformName=Android', 'style': {'code': True}}, {'type': 'text', 'text': '\n*\n'}, {'type': 'text', 'text': '-DplatformVersion=11.0', 'style': {'code': True}}, {'type': 'text', 'text': ' (or your desired version)\n*\n'}, {'type': 'text', 'text': '-DdeviceName="Google Pixel 2XL"', 'style': {'code': True}}, {'type': 'text', 'text': ' (or your device name)\n*\n'}, {'type': 'text', 'text': '-Denvironment=local', 'style': {'code': True}}, {'type': 'text', 'text': '\n*\n'}, {'type': 'text', 'text': '-Dheadless=false', 'style': {'code': True}}, {'type': 'text', 'text': '\n*\n'}, {'type': 'text', 'text': '-Dapp="/pathToPackage/your-app.apk"', 'style': {'code': True}}, {'type': 'text', 'text': ' (path to your Android application package)\n*\n'}, {'type': 'text', 'text': '-Dudid=', 'style': {'code': True}}, {'type': 'text', 'text': ' (set this if running on a real mobile device)\n*\n'}, {'type': 'text', 'text': '-DbundleId=', 'style': {'code': True}}, {'type': 'text', 'text': ' (set to override default)\n\n*\nSource: '}, {'type': 'link', 'url': 'https://paramount.atlassian.net/wiki/spaces/PLQA/pages/47711460', 'style': {'code': True}}, {'type': 'text', 'text': '\n\n### 3.\n\n'}, {'type': 'text', 'text': '(message continued in thread...)', 'style': {'italic': True}}]}]}], 'channel': 'D09A0LFHK8R', 'event_ts': '1755898295.842129', 'channel_type': 'im'}
2025-08-22 14:31:37,064 - slack_bolt.App - DEBUG - [client.py:200] - Sending a message (session id: ada77463-07ed-45f1-b617-5a326695dcfd, message: {"envelope_id": "65d2a8c9-8b0c-46a0-adc2-bed4fa8b0ecc"})
2025-08-22 14:31:37,065 - slack_bolt.App - DEBUG - [internals.py:41] - Response time: 1 milliseconds
2025-08-22 14:31:37,065 - slack_bolt.App - DEBUG - [client.py:150] - Message processing completed (type: events_api, envelope_id: 65d2a8c9-8b0c-46a0-adc2-bed4fa8b0ecc)
2025-08-22 14:31:37,356 - slack_bolt.App - DEBUG - [client.py:235] - on_message invoked: (message: {"envelope_id":"7b93ed70-ae7a-4b35-a1aa-e4314805433a","payload":{"token":"yq71khZBCyJF1Ri2hG5aNqr5","team_id":"T010QS7UQNA","enterprise_id":"ERV4P7NAD","context_team_id":null,"context_enterprise_id":"ERV4P7NAD","api_app_id":"A099LACAB2R","event":{"user":"U099R6WTZ9S","type":"message","ts":"1755898296.217639","bot_id":"B099R6WTRU4","app_id":"A099LACAB2R","text":"_(part 2\/2)_\n\nRunning the Test\n\nYou have a few options for executing your tests:\n\n*\n*From the Terminal (Maven Command):*\n    Enter the following command in your IDE terminal window:\n    `mvn clean test -pl mqe-hob-mobile-tests -am -Dgroups=Your test case number or tag`\n\n*\n*From `TestNGSuiteConfig.xml`:*\n    Navigate to the `TestNGSuiteConfig.xml` file, right-click, and select \"run TestNGSuiteConfig.xml\". You will need to provide the necessary test case ID or tag name in the `&lt;include name=\"\" \/&gt;` section. *\nSource: `<https:\/\/paramount.atlassian.net\/wiki\/spaces\/PLQA\/pages\/47720266>`\n\nFor more detailed information on Android development and testing, you can refer to:\n\n*\nBasics of Android Studio: `<https:\/\/developer.android.com\/studio\/intro>`\n*\nFundamentals of testing Android apps: `<https:\/\/developer.android.com\/training\/testing\/fundamentals>`\n*\nRunning apps on the emulator: `<https:\/\/developer.android.com\/studio\/run\/emulator>`\n\n*\nSource: `<https:\/\/paramount.atlassian.net\/wiki\/spaces\/PLQA\/pages\/47722061>`\n\n\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\n*:books: Sources:*\n1. <https:\/\/paramount.atlassian.net\/wiki\/spaces\/PLQA\/pages\/47713566>\n2. <https:\/\/paramount.atlassian.net\/wiki\/spaces\/PLQA\/pages\/47720266>\n3. <https:\/\/paramount.atlassian.net\/wiki\/spaces\/PLQA\/pages\/47711460>\n4. <https:\/\/paramount.atlassian.net\/wiki\/spaces\/PLQA\/pages\/47722061>","team":"T010QS7UQNA","bot_profile":{"id":"B099R6WTRU4","deleted":false,"name":"AutoBot","updated":1754677948,"app_id":"A099LACAB2R","user_id":"U099R6WTZ9S","icons":{"image_36":"https:\/\/a.slack-edge.com\/80588\/img\/plugins\/app\/bot_36.png","image_48":"https:\/\/a.slack-edge.com\/80588\/img\/plugins\/app\/bot_48.png","image_72":"https:\/\/a.slack-edge.com\/80588\/img\/plugins\/app\/service_72.png"},"team_id":"T010QS7UQNA"},"thread_ts":"1755898262.509419","parent_user_id":"U01RMTFMALF","blocks":[{"type":"rich_text","block_id":"CVkC","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"(part 2\/2)","style":{"italic":true}},{"type":"text","text":"\n\nRunning the Test\n\nYou have a few options for executing your tests:\n\n*\n"},{"type":"text","text":"From the Terminal (Maven Command):","style":{"bold":true}},{"type":"text","text":"\n    Enter the following command in your IDE terminal window:\n    "},{"type":"text","text":"mvn clean test -pl mqe-hob-mobile-tests -am -Dgroups=Your test case number or tag","style":{"code":true}},{"type":"text","text":"\n\n*\n"},{"type":"text","text":"From ","style":{"bold":true}},{"type":"text","text":"TestNGSuiteConfig.xml","style":{"bold":true,"code":true}},{"type":"text","text":":","style":{"bold":true}},{"type":"text","text":"\n    Navigate to the "},{"type":"text","text":"TestNGSuiteConfig.xml","style":{"code":true}},{"type":"text","text":" file, right-click, and select \"run TestNGSuiteConfig.xml\". You will need to provide the necessary test case ID or tag name in the "},{"type":"text","text":"<include name=\"\" \/>","style":{"code":true}},{"type":"text","text":" section. *\nSource: "},{"type":"link","url":"https:\/\/paramount.atlassian.net\/wiki\/spaces\/PLQA\/pages\/47720266","style":{"code":true}},{"type":"text","text":"\n\nFor more detailed information on Android development and testing, you can refer to:\n\n*\nBasics of Android Studio: "},{"type":"link","url":"https:\/\/developer.android.com\/studio\/intro","style":{"code":true}},{"type":"text","text":"\n*\nFundamentals of testing Android apps: "},{"type":"link","url":"https:\/\/developer.android.com\/training\/testing\/fundamentals","style":{"code":true}},{"type":"text","text":"\n*\nRunning apps on the emulator: "},{"type":"link","url":"https:\/\/developer.android.com\/studio\/run\/emulator","style":{"code":true}},{"type":"text","text":"\n\n*\nSource: "},{"type":"link","url":"https:\/\/paramount.atlassian.net\/wiki\/spaces\/PLQA\/pages\/47722061","style":{"code":true}},{"type":"text","text":"\n\n\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\n"},{"type":"emoji","name":"books","unicode":"1f4da","style":{"bold":true}},{"type":"text","text":" Sources:","style":{"bold":true}},{"type":"text","text":"\n1. "},{"type":"link","url":"https:\/\/paramount.atlassian.net\/wiki\/spaces\/PLQA\/pages\/47713566"},{"type":"text","text":"\n2. "},{"type":"link","url":"https:\/\/paramount.atlassian.net\/wiki\/spaces\/PLQA\/pages\/47720266"},{"type":"text","text":"\n3. "},{"type":"link","url":"https:\/\/paramount.atlassian.net\/wiki\/spaces\/PLQA\/pages\/47711460"},{"type":"text","text":"\n4. "},{"type":"link","url":"https:\/\/paramount.atlassian.net\/wiki\/spaces\/PLQA\/pages\/47722061"}]}]}],"channel":"D09A0LFHK8R","event_ts":"1755898296.217639","channel_type":"im"},"type":"event_callback","event_id":"Ev09BMQMQXHB","event_time":1755898296,"authorizations":[{"enterprise_id":"ERV4P7NAD","team_id":"T010QS7UQNA","user_id":"U099R6WTZ9S","is_bot":true,"is_enterprise_install":false}],"is_ext_shared_channel":false,"event_context":"4-eyJldCI6Im1lc3NhZ2UiLCJ0aWQiOiJUMDEwUVM3VVFOQSIsImFpZCI6IkEwOTlMQUNBQjJSIiwiY2lkIjoiRDA5QTBMRkhLOFIifQ"},"type":"events_api","accepts_response_payload":false,"retry_attempt":0,"retry_reason":""})
2025-08-22 14:31:37,356 - slack_bolt.App - DEBUG - [client.py:99] - A new message enqueued (current queue size: 1)
2025-08-22 14:31:37,356 - slack_bolt.App - DEBUG - [client.py:105] - A message dequeued (current queue size: 0)
2025-08-22 14:31:37,357 - slack_bolt.App - DEBUG - [client.py:125] - Message processing started (type: events_api, envelope_id: 7b93ed70-ae7a-4b35-a1aa-e4314805433a)
2025-08-22 14:31:37,357 - slack_bolt.App - DEBUG - [app.py:476] - Applying slack_bolt.middleware.ssl_check.ssl_check.SslCheck
2025-08-22 14:31:37,357 - slack_bolt.App - DEBUG - [app.py:476] - Applying slack_bolt.middleware.request_verification.request_verification.RequestVerification
2025-08-22 14:31:37,357 - slack_bolt.App - DEBUG - [app.py:476] - Applying slack_bolt.middleware.authorization.single_team_authorization.SingleTeamAuthorization
2025-08-22 14:31:37,357 - slack_bolt.App - DEBUG - [app.py:476] - Applying slack_bolt.middleware.ignoring_self_events.ignoring_self_events.IgnoringSelfEvents
2025-08-22 14:31:37,357 - slack_bolt.IgnoringSelfEvents - DEBUG - [ignoring_self_events.py:60] - Skipped self event: {'user': 'U099R6WTZ9S', 'type': 'message', 'ts': '1755898296.217639', 'bot_id': 'B099R6WTRU4', 'app_id': 'A099LACAB2R', 'text': '_(part 2/2)_\n\nRunning the Test\n\nYou have a few options for executing your tests:\n\n*\n*From the Terminal (Maven Command):*\n    Enter the following command in your IDE terminal window:\n    `mvn clean test -pl mqe-hob-mobile-tests -am -Dgroups=Your test case number or tag`\n\n*\n*From `TestNGSuiteConfig.xml`:*\n    Navigate to the `TestNGSuiteConfig.xml` file, right-click, and select "run TestNGSuiteConfig.xml". You will need to provide the necessary test case ID or tag name in the `&lt;include name="" /&gt;` section. *\nSource: `<https://paramount.atlassian.net/wiki/spaces/PLQA/pages/47720266>`\n\nFor more detailed information on Android development and testing, you can refer to:\n\n*\nBasics of Android Studio: `<https://developer.android.com/studio/intro>`\n*\nFundamentals of testing Android apps: `<https://developer.android.com/training/testing/fundamentals>`\n*\nRunning apps on the emulator: `<https://developer.android.com/studio/run/emulator>`\n\n*\nSource: `<https://paramount.atlassian.net/wiki/spaces/PLQA/pages/47722061>`\n\n────────────────────────────────────────\n*:books: Sources:*\n1. <https://paramount.atlassian.net/wiki/spaces/PLQA/pages/47713566>\n2. <https://paramount.atlassian.net/wiki/spaces/PLQA/pages/47720266>\n3. <https://paramount.atlassian.net/wiki/spaces/PLQA/pages/47711460>\n4. <https://paramount.atlassian.net/wiki/spaces/PLQA/pages/47722061>', 'team': 'T010QS7UQNA', 'bot_profile': {'id': 'B099R6WTRU4', 'deleted': False, 'name': 'AutoBot', 'updated': 1754677948, 'app_id': 'A099LACAB2R', 'user_id': 'U099R6WTZ9S', 'icons': {'image_36': 'https://a.slack-edge.com/80588/img/plugins/app/bot_36.png', 'image_48': 'https://a.slack-edge.com/80588/img/plugins/app/bot_48.png', 'image_72': 'https://a.slack-edge.com/80588/img/plugins/app/service_72.png'}, 'team_id': 'T010QS7UQNA'}, 'thread_ts': '1755898262.509419', 'parent_user_id': 'U01RMTFMALF', 'blocks': [{'type': 'rich_text', 'block_id': 'CVkC', 'elements': [{'type': 'rich_text_section', 'elements': [{'type': 'text', 'text': '(part 2/2)', 'style': {'italic': True}}, {'type': 'text', 'text': '\n\nRunning the Test\n\nYou have a few options for executing your tests:\n\n*\n'}, {'type': 'text', 'text': 'From the Terminal (Maven Command):', 'style': {'bold': True}}, {'type': 'text', 'text': '\n    Enter the following command in your IDE terminal window:\n    '}, {'type': 'text', 'text': 'mvn clean test -pl mqe-hob-mobile-tests -am -Dgroups=Your test case number or tag', 'style': {'code': True}}, {'type': 'text', 'text': '\n\n*\n'}, {'type': 'text', 'text': 'From ', 'style': {'bold': True}}, {'type': 'text', 'text': 'TestNGSuiteConfig.xml', 'style': {'bold': True, 'code': True}}, {'type': 'text', 'text': ':', 'style': {'bold': True}}, {'type': 'text', 'text': '\n    Navigate to the '}, {'type': 'text', 'text': 'TestNGSuiteConfig.xml', 'style': {'code': True}}, {'type': 'text', 'text': ' file, right-click, and select "run TestNGSuiteConfig.xml". You will need to provide the necessary test case ID or tag name in the '}, {'type': 'text', 'text': '<include name="" />', 'style': {'code': True}}, {'type': 'text', 'text': ' section. *\nSource: '}, {'type': 'link', 'url': 'https://paramount.atlassian.net/wiki/spaces/PLQA/pages/47720266', 'style': {'code': True}}, {'type': 'text', 'text': '\n\nFor more detailed information on Android development and testing, you can refer to:\n\n*\nBasics of Android Studio: '}, {'type': 'link', 'url': 'https://developer.android.com/studio/intro', 'style': {'code': True}}, {'type': 'text', 'text': '\n*\nFundamentals of testing Android apps: '}, {'type': 'link', 'url': 'https://developer.android.com/training/testing/fundamentals', 'style': {'code': True}}, {'type': 'text', 'text': '\n*\nRunning apps on the emulator: '}, {'type': 'link', 'url': 'https://developer.android.com/studio/run/emulator', 'style': {'code': True}}, {'type': 'text', 'text': '\n\n*\nSource: '}, {'type': 'link', 'url': 'https://paramount.atlassian.net/wiki/spaces/PLQA/pages/47722061', 'style': {'code': True}}, {'type': 'text', 'text': '\n\n────────────────────────────────────────\n'}, {'type': 'emoji', 'name': 'books', 'unicode': '1f4da', 'style': {'bold': True}}, {'type': 'text', 'text': ' Sources:', 'style': {'bold': True}}, {'type': 'text', 'text': '\n1. '}, {'type': 'link', 'url': 'https://paramount.atlassian.net/wiki/spaces/PLQA/pages/47713566'}, {'type': 'text', 'text': '\n2. '}, {'type': 'link', 'url': 'https://paramount.atlassian.net/wiki/spaces/PLQA/pages/47720266'}, {'type': 'text', 'text': '\n3. '}, {'type': 'link', 'url': 'https://paramount.atlassian.net/wiki/spaces/PLQA/pages/47711460'}, {'type': 'text', 'text': '\n4. '}, {'type': 'link', 'url': 'https://paramount.atlassian.net/wiki/spaces/PLQA/pages/47722061'}]}]}], 'channel': 'D09A0LFHK8R', 'event_ts': '1755898296.217639', 'channel_type': 'im'}
2025-08-22 14:31:37,357 - slack_bolt.App - DEBUG - [client.py:200] - Sending a message (session id: ada77463-07ed-45f1-b617-5a326695dcfd, message: {"envelope_id": "7b93ed70-ae7a-4b35-a1aa-e4314805433a"})
2025-08-22 14:31:37,358 - slack_bolt.App - DEBUG - [internals.py:41] - Response time: 0 milliseconds
2025-08-22 14:31:37,358 - slack_bolt.App - DEBUG - [client.py:150] - Message processing completed (type: events_api, envelope_id: 7b93ed70-ae7a-4b35-a1aa-e4314805433a)
2025-08-22 14:32:12,029 - slack_bolt.App - DEBUG - [client.py:235] - on_message invoked: (message: {"envelope_id":"58b425fe-7199-4a5d-879f-f7d32546f1e4","payload":{"token":"yq71khZBCyJF1Ri2hG5aNqr5","team_id":"T010QS7UQNA","enterprise_id":"ERV4P7NAD","context_team_id":null,"context_enterprise_id":"ERV4P7NAD","api_app_id":"A099LACAB2R","event":{"user":"U01RMTFMALF","type":"message","ts":"1755898262.509419","client_msg_id":"f26ae6b6-3bf9-48f6-a86f-641487629122","text":"How can i run an automated test on a local Android phone?","blocks":[{"type":"rich_text","block_id":"vQwBP","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"How can i run an automated test on a local Android phone?"}]}]}],"channel":"D09A0LFHK8R","event_ts":"1755898262.509419","channel_type":"im"},"type":"event_callback","event_id":"Ev09BSV5RBJ8","event_time":1755898262,"authorizations":[{"enterprise_id":"ERV4P7NAD","team_id":"T010QS7UQNA","user_id":"U099R6WTZ9S","is_bot":true,"is_enterprise_install":false}],"is_ext_shared_channel":false,"event_context":"4-eyJldCI6Im1lc3NhZ2UiLCJ0aWQiOiJUMDEwUVM3VVFOQSIsImFpZCI6IkEwOTlMQUNBQjJSIiwiY2lkIjoiRDA5QTBMRkhLOFIifQ"},"type":"events_api","accepts_response_payload":false,"retry_attempt":2,"retry_reason":"timeout"})
2025-08-22 14:32:12,031 - slack_bolt.App - DEBUG - [client.py:99] - A new message enqueued (current queue size: 1)
2025-08-22 14:32:12,031 - slack_bolt.App - DEBUG - [client.py:105] - A message dequeued (current queue size: 0)
2025-08-22 14:32:12,032 - slack_bolt.App - DEBUG - [client.py:125] - Message processing started (type: events_api, envelope_id: 58b425fe-7199-4a5d-879f-f7d32546f1e4)
2025-08-22 14:32:12,032 - slack_bolt.App - DEBUG - [app.py:476] - Applying slack_bolt.middleware.ssl_check.ssl_check.SslCheck
2025-08-22 14:32:12,033 - slack_bolt.App - DEBUG - [app.py:476] - Applying slack_bolt.middleware.request_verification.request_verification.RequestVerification
2025-08-22 14:32:12,033 - slack_bolt.App - DEBUG - [app.py:476] - Applying slack_bolt.middleware.authorization.single_team_authorization.SingleTeamAuthorization
2025-08-22 14:32:12,033 - slack_bolt.App - DEBUG - [app.py:476] - Applying slack_bolt.middleware.ignoring_self_events.ignoring_self_events.IgnoringSelfEvents
2025-08-22 14:32:12,033 - slack_bolt.App - DEBUG - [app.py:476] - Applying slack_bolt.middleware.url_verification.url_verification.UrlVerification
2025-08-22 14:32:12,033 - slack_bolt.App - DEBUG - [app.py:500] - Checking listener: handle_app_mentions ...
2025-08-22 14:32:12,033 - slack_bolt.App - DEBUG - [app.py:500] - Checking listener: help_message ...
2025-08-22 14:32:12,033 - slack_bolt.App - DEBUG - [app.py:500] - Checking listener: handle_dm_messages ...
2025-08-22 14:32:12,034 - slack_bolt.App - DEBUG - [app.py:522] - Running listener: handle_dm_messages ...
2025-08-22 14:32:12,034 - slack_bolt.App - DEBUG - [thread_runner.py:198] - Responding with status: 200 body: "" (0 millis)
2025-08-22 14:32:12,034 - __main__ - INFO - [main.py:497] - === DM MESSAGE EVENT RECEIVED ===
2025-08-22 14:32:12,034 - slack_bolt.App - DEBUG - [client.py:200] - Sending a message (session id: ada77463-07ed-45f1-b617-5a326695dcfd, message: {"envelope_id": "58b425fe-7199-4a5d-879f-f7d32546f1e4"})
2025-08-22 14:32:12,034 - __main__ - DEBUG - [main.py:498] - Full event body: {'token': 'yq71khZBCyJF1Ri2hG5aNqr5', 'team_id': 'T010QS7UQNA', 'enterprise_id': 'ERV4P7NAD', 'context_team_id': None, 'context_enterprise_id': 'ERV4P7NAD', 'api_app_id': 'A099LACAB2R', 'event': {'user': 'U01RMTFMALF', 'type': 'message', 'ts': '1755898262.509419', 'client_msg_id': 'f26ae6b6-3bf9-48f6-a86f-641487629122', 'text': 'How can i run an automated test on a local Android phone?', 'blocks': [{'type': 'rich_text', 'block_id': 'vQwBP', 'elements': [{'type': 'rich_text_section', 'elements': [{'type': 'text', 'text': 'How can i run an automated test on a local Android phone?'}]}]}], 'channel': 'D09A0LFHK8R', 'event_ts': '1755898262.509419', 'channel_type': 'im'}, 'type': 'event_callback', 'event_id': 'Ev09BSV5RBJ8', 'event_time': 1755898262, 'authorizations': [{'enterprise_id': 'ERV4P7NAD', 'team_id': 'T010QS7UQNA', 'user_id': 'U099R6WTZ9S', 'is_bot': True, 'is_enterprise_install': False}], 'is_ext_shared_channel': False, 'event_context': '4-eyJldCI6Im1lc3NhZ2UiLCJ0aWQiOiJUMDEwUVM3VVFOQSIsImFpZCI6IkEwOTlMQUNBQjJSIiwiY2lkIjoiRDA5QTBMRkhLOFIifQ'}
2025-08-22 14:32:12,034 - __main__ - INFO - [main.py:507] - DM Event details: channel=D09A0LFHK8R, user=U01RMTFMALF, ts=1755898262.509419
2025-08-22 14:32:12,034 - slack_bolt.App - DEBUG - [internals.py:41] - Response time: 2 milliseconds
2025-08-22 14:32:12,034 - __main__ - DEBUG - [main.py:508] - DM Event text: How can i run an automated test on a local Android phone?
2025-08-22 14:32:12,034 - slack_bolt.App - DEBUG - [client.py:150] - Message processing completed (type: events_api, envelope_id: 58b425fe-7199-4a5d-879f-f7d32546f1e4)
2025-08-22 14:32:12,034 - utils - DEBUG - [utils.py:27] - Checking message processing: channel=D09A0LFHK8R, ts=1755898262.509419, text='How can i run an automated test on a local Android...'
2025-08-22 14:32:12,035 - utils - DEBUG - [utils.py:31] - Message hash: e1946a0f87df22a645bf767258a29615
2025-08-22 14:32:12,035 - utils - INFO - [utils.py:48] - Skipping duplicate message (hash: e1946a0f87df22a645bf767258a29615): How can i run an automated tes...
2025-08-22 14:32:12,035 - __main__ - INFO - [main.py:512] - Skipping DM message - already processed recently
2025-08-22 15:03:52,591 - __main__ - INFO - [main.py:43] - Loading application configuration...
2025-08-22 15:03:52,591 - __main__ - INFO - [main.py:45] - Configuration loaded successfully
2025-08-22 15:03:52,591 - __main__ - INFO - [main.py:48] - Initializing security components...
2025-08-22 15:03:52,591 - __main__ - DEBUG - [main.py:50] - Slack validator initialized
2025-08-22 15:03:52,591 - security.content_filter - INFO - [content_filter.py:39] - Content filter initialized with 11 patterns
2025-08-22 15:03:52,591 - __main__ - DEBUG - [main.py:53] - Content filter initialized
2025-08-22 15:03:52,591 - auth.admin_manager - INFO - [admin_manager.py:27] - Admin manager initialized with 2 admin users
2025-08-22 15:03:52,591 - __main__ - DEBUG - [main.py:56] - Admin manager initialized
2025-08-22 15:03:52,591 - auth.email_whitelist - INFO - [email_whitelist.py:28] - Email whitelist initialized with 1 whitelisted emails
2025-08-22 15:03:52,591 - auth.email_whitelist - INFO - [email_whitelist.py:37] - Whitelisted domains: paramount.com
2025-08-22 15:03:52,591 - __main__ - DEBUG - [main.py:59] - Email whitelist initialized with 1 emails
2025-08-22 15:03:52,591 - auth.slack_user_info - DEBUG - [slack_user_info.py:25] - Slack user info manager initialized
2025-08-22 15:03:52,591 - __main__ - DEBUG - [main.py:62] - Slack user info manager initialized
2025-08-22 15:03:52,591 - __main__ - INFO - [main.py:63] - Security components initialized successfully
2025-08-22 15:03:52,591 - __main__ - INFO - [main.py:66] - Initializing Slack app...
2025-08-22 15:03:52,628 - slack_bolt.App - DEBUG - [base_client.py:255] - Sending a request - url: https://slack.com/api/auth.test, query_params: {}, body_params: {}, files: {}, json_body: None, headers: {'Content-Type': 'application/x-www-form-urlencoded', 'Authorization': '(redacted)', 'User-Agent': 'Bolt/1.16.0 Python/3.12.0 slackclient/3.34.0 Darwin/23.4.0'}
2025-08-22 15:03:52,988 - slack_bolt.App - DEBUG - [base_client.py:546] - Received the following response - status: 200, headers: {'date': 'Fri, 22 Aug 2025 22:03:52 GMT', 'server': 'Apache', 'vary': 'Accept-Encoding', 'x-slack-req-id': '8a59db979553344f0391a4f1d7f36afe', 'x-content-type-options': 'nosniff', 'x-xss-protection': '0', 'pragma': 'no-cache', 'cache-control': 'private, no-cache, no-store, must-revalidate', 'expires': 'Sat, 26 Jul 1997 05:00:00 GMT', 'content-type': 'application/json; charset=utf-8', 'x-oauth-scopes': 'app_mentions:read,channels:history,chat:write,im:history,im:read,im:write,users:read,reactions:write,users:read.email', 'access-control-expose-headers': 'x-slack-req-id, retry-after', 'access-control-allow-headers': 'slack-route, x-slack-version-ts, x-b3-traceid, x-b3-spanid, x-b3-parentspanid, x-b3-sampled, x-b3-flags', 'strict-transport-security': 'max-age=31536000; includeSubDomains; preload', 'referrer-policy': 'no-referrer', 'x-slack-unique-id': 'aKjpSKF87mlHK0jAOhU17QAAABc', 'x-slack-backend': 'r', 'access-control-allow-origin': '*', 'content-length': '228', 'via': '1.1 slack-prod.tinyspeck.com, envoy-www-iad-vptzldty,envoy-edge-pdx-hsgayfyh', 'x-envoy-attempt-count': '1', 'x-envoy-upstream-service-time': '94', 'x-backend': 'main_normal main_canary_with_overflow main_control_with_overflow', 'x-server': 'slack-www-hhvm-main-iad-bpvs', 'x-slack-shared-secret-outcome': 'no-match', 'x-edge-backend': 'envoy-www', 'timing-allow-origin': '*', 'x-slack-edge-shared-secret-outcome': 'no-match', 'connection': 'close'}, body: {"ok":true,"url":"https://viacomcbs-grid-test.slack.com/","team":"Test Workspace","user":"autobot","team_id":"T010QS7UQNA","user_id":"U099R6WTZ9S","bot_id":"B099R6WTRU4","enterprise_id":"ERV4P7NAD","is_enterprise_install":false}
2025-08-22 15:03:52,989 - __main__ - INFO - [main.py:68] - Slack app initialized successfully
2025-08-22 15:03:52,989 - __main__ - DEBUG - [main.py:72] - Message deduplication cache initialized
2025-08-22 15:03:52,989 - __main__ - DEBUG - [main.py:77] - Thread tracking initialized
2025-08-22 15:03:52,989 - __main__ - INFO - [main.py:80] - Initializing DIG AI integration...
2025-08-22 15:03:52,989 - dig_connector - INFO - [dig_connector.py:284] - Initializing DIG AI with model ID: 42
2025-08-22 15:03:52,989 - dig_connector - INFO - [dig_connector.py:49] - Starting DIG chat session initialization...
2025-08-22 15:03:52,989 - dig_connector - DEBUG - [dig_connector.py:52] - Creating chat with name: Slack Bot Session 2025-08-22T22:03:52.989922+00:00
2025-08-22 15:03:52,989 - dig_connector - DEBUG - [dig_connector.py:63] - Creating chat - URL: https://ai.digdev.cbsicloud.com/fastapi/chats, Payload: {'chat_nm': 'Slack Bot Session 2025-08-22T22:03:52.989922+00:00', 'model_id': 42}
2025-08-22 15:03:52,993 - urllib3.connectionpool - DEBUG - [connectionpool.py:1055] - Starting new HTTPS connection (1): ai.digdev.cbsicloud.com:443
2025-08-22 15:03:53,277 - urllib3.connectionpool - DEBUG - [connectionpool.py:549] - https://ai.digdev.cbsicloud.com:443 "POST /fastapi/chats HTTP/1.1" 200 217
2025-08-22 15:03:53,279 - dig_connector - DEBUG - [dig_connector.py:66] - Create chat response: status=200
2025-08-22 15:03:53,279 - dig_connector - INFO - [dig_connector.py:54] - Successfully initialized DIG chat session with ID: 891
2025-08-22 15:03:53,279 - __main__ - INFO - [main.py:83] - DIG AI integration successfully initialized
2025-08-22 15:03:53,279 - __main__ - INFO - [main.py:87] - Setting up event handlers...
2025-08-22 15:03:53,280 - __main__ - INFO - [main.py:747] - Starting AI Assistant Bot...
2025-08-22 15:03:53,281 - __main__ - INFO - [main.py:748] - Registering event handlers...
2025-08-22 15:03:53,281 - __main__ - DEBUG - [main.py:749] - Event handlers registered: app_mention, message, app_home_opened
2025-08-22 15:03:53,281 - __main__ - INFO - [main.py:752] - Connecting to Slack via Socket Mode...
2025-08-22 15:03:53,282 - __main__ - INFO - [main.py:756] - Socket Mode handler created successfully
2025-08-22 15:03:53,282 - __main__ - INFO - [main.py:758] - ✅ Bot is now running and listening for events!
2025-08-22 15:03:53,282 - slack_bolt.App - DEBUG - [base_client.py:255] - Sending a request - url: https://slack.com/api/apps.connections.open, query_params: {}, body_params: {}, files: {}, json_body: None, headers: {'Content-Type': 'application/x-www-form-urlencoded', 'Authorization': '(redacted)', 'User-Agent': 'Bolt/1.16.0 Python/3.12.0 slackclient/3.34.0 Darwin/23.4.0'}
2025-08-22 15:03:53,578 - slack_bolt.App - DEBUG - [base_client.py:546] - Received the following response - status: 200, headers: {'date': 'Fri, 22 Aug 2025 22:03:53 GMT', 'server': 'Apache', 'vary': 'Accept-Encoding', 'x-slack-req-id': '4323a0d22cc44cfb041cbb6be53f945a', 'x-content-type-options': 'nosniff', 'x-xss-protection': '0', 'x-robots-tag': 'noindex,nofollow', 'pragma': 'no-cache', 'cache-control': 'private, no-cache, no-store, must-revalidate', 'expires': 'Sat, 26 Jul 1997 05:00:00 GMT', 'content-type': 'application/json; charset=utf-8', 'x-accepted-oauth-scopes': 'connections:write', 'x-oauth-scopes': 'connections:write', 'access-control-expose-headers': 'x-slack-req-id, retry-after', 'access-control-allow-headers': 'slack-route, x-slack-version-ts, x-b3-traceid, x-b3-spanid, x-b3-parentspanid, x-b3-sampled, x-b3-flags', 'strict-transport-security': 'max-age=31536000; includeSubDomains; preload', 'referrer-policy': 'no-referrer', 'x-slack-unique-id': 'aKjpSSDtAc-9zrvnSXgszAAAACk', 'x-slack-backend': 'r', 'access-control-allow-origin': '*', 'content-length': '173', 'via': '1.1 slack-prod.tinyspeck.com, envoy-www-iad-pdzrpbbe,envoy-edge-pdx-lvpslrbd', 'x-envoy-attempt-count': '1', 'x-envoy-upstream-service-time': '84', 'x-backend': 'main_normal main_canary_with_overflow main_control_with_overflow', 'x-server': 'slack-www-hhvm-main-iad-huyu', 'x-slack-shared-secret-outcome': 'no-match', 'x-edge-backend': 'envoy-www', 'timing-allow-origin': '*', 'x-slack-edge-shared-secret-outcome': 'no-match', 'connection': 'close'}, body: {"ok":true,"url":"wss:\/\/wss-primary.slack.com\/link\/?ticket=99bef8b4-1079-43ec-b8be-ff79074710d9&app_id=a6c8d361ee1c6f398c5b4afec831555b78d7affa753b16bcc0fc64d7c13f3766"}
2025-08-22 15:03:54,115 - slack_bolt.App - INFO - [client.py:192] - A new session has been established (session id: 57670301-5864-46c2-a5ea-6506e70d5f1b)
2025-08-22 15:03:54,115 - slack_bolt.App - INFO - [base_handler.py:50] - ⚡️ Bolt app is running!
2025-08-22 15:03:54,116 - slack_bolt.App - INFO - [client.py:265] - Starting to receive messages from a new connection (session id: 57670301-5864-46c2-a5ea-6506e70d5f1b)
2025-08-22 15:03:54,126 - slack_bolt.App - DEBUG - [client.py:235] - on_message invoked: (message: {"type":"hello","num_connections":2,"debug_info":{"host":"applink-3","build_number":0,"approximate_connection_time":18060},"connection_info":{"app_id":"A099LACAB2R"}})
2025-08-22 15:03:54,126 - slack_bolt.App - DEBUG - [client.py:99] - A new message enqueued (current queue size: 1)
2025-08-22 15:03:54,127 - slack_bolt.App - DEBUG - [client.py:105] - A message dequeued (current queue size: 0)
2025-08-22 15:03:54,128 - slack_bolt.App - DEBUG - [client.py:125] - Message processing started (type: hello, envelope_id: None)
2025-08-22 15:03:54,128 - slack_bolt.App - DEBUG - [client.py:150] - Message processing completed (type: hello, envelope_id: None)
2025-08-22 15:04:28,694 - slack_bolt.App - DEBUG - [client.py:235] - on_message invoked: (message: {"envelope_id":"5885c10f-06eb-46c5-8b0a-31f936404773","payload":{"token":"yq71khZBCyJF1Ri2hG5aNqr5","team_id":"T010QS7UQNA","enterprise_id":"ERV4P7NAD","context_team_id":null,"context_enterprise_id":"ERV4P7NAD","api_app_id":"A099LACAB2R","event":{"user":"U01RMTFMALF","type":"message","ts":"1755900267.555029","client_msg_id":"939370ea-ca37-4428-8811-71ae49f27a27","text":"How can i run an automated test on a local Android phone?","blocks":[{"type":"rich_text","block_id":"vQwBP","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"How can i run an automated test on a local Android phone?"}]}]}],"channel":"D09A0LFHK8R","event_ts":"1755900267.555029","channel_type":"im"},"type":"event_callback","event_id":"Ev09BABMH6TZ","event_time":1755900267,"authorizations":[{"enterprise_id":"ERV4P7NAD","team_id":"T010QS7UQNA","user_id":"U099R6WTZ9S","is_bot":true,"is_enterprise_install":false}],"is_ext_shared_channel":false,"event_context":"4-eyJldCI6Im1lc3NhZ2UiLCJ0aWQiOiJUMDEwUVM3VVFOQSIsImFpZCI6IkEwOTlMQUNBQjJSIiwiY2lkIjoiRDA5QTBMRkhLOFIifQ"},"type":"events_api","accepts_response_payload":false,"retry_attempt":0,"retry_reason":""})
2025-08-22 15:04:28,696 - slack_bolt.App - DEBUG - [client.py:99] - A new message enqueued (current queue size: 1)
2025-08-22 15:04:28,697 - slack_bolt.App - DEBUG - [client.py:105] - A message dequeued (current queue size: 0)
2025-08-22 15:04:28,697 - slack_bolt.App - DEBUG - [client.py:125] - Message processing started (type: events_api, envelope_id: 5885c10f-06eb-46c5-8b0a-31f936404773)
2025-08-22 15:04:28,699 - slack_bolt.App - DEBUG - [app.py:476] - Applying slack_bolt.middleware.ssl_check.ssl_check.SslCheck
2025-08-22 15:04:28,700 - slack_bolt.App - DEBUG - [app.py:476] - Applying slack_bolt.middleware.request_verification.request_verification.RequestVerification
2025-08-22 15:04:28,700 - slack_bolt.App - DEBUG - [app.py:476] - Applying slack_bolt.middleware.authorization.single_team_authorization.SingleTeamAuthorization
2025-08-22 15:04:28,700 - slack_bolt.App - DEBUG - [app.py:476] - Applying slack_bolt.middleware.ignoring_self_events.ignoring_self_events.IgnoringSelfEvents
2025-08-22 15:04:28,700 - slack_bolt.App - DEBUG - [app.py:476] - Applying slack_bolt.middleware.url_verification.url_verification.UrlVerification
2025-08-22 15:04:28,701 - slack_bolt.App - DEBUG - [app.py:500] - Checking listener: handle_app_mentions ...
2025-08-22 15:04:28,701 - slack_bolt.App - DEBUG - [app.py:500] - Checking listener: help_message ...
2025-08-22 15:04:28,702 - slack_bolt.App - DEBUG - [app.py:500] - Checking listener: handle_dm_messages ...
2025-08-22 15:04:28,702 - slack_bolt.App - DEBUG - [app.py:522] - Running listener: handle_dm_messages ...
2025-08-22 15:04:28,702 - __main__ - INFO - [main.py:497] - === DM MESSAGE EVENT RECEIVED ===
2025-08-22 15:04:28,703 - slack_bolt.App - DEBUG - [thread_runner.py:198] - Responding with status: 200 body: "" (0 millis)
2025-08-22 15:04:28,703 - __main__ - DEBUG - [main.py:498] - Full event body: {'token': 'yq71khZBCyJF1Ri2hG5aNqr5', 'team_id': 'T010QS7UQNA', 'enterprise_id': 'ERV4P7NAD', 'context_team_id': None, 'context_enterprise_id': 'ERV4P7NAD', 'api_app_id': 'A099LACAB2R', 'event': {'user': 'U01RMTFMALF', 'type': 'message', 'ts': '1755900267.555029', 'client_msg_id': '939370ea-ca37-4428-8811-71ae49f27a27', 'text': 'How can i run an automated test on a local Android phone?', 'blocks': [{'type': 'rich_text', 'block_id': 'vQwBP', 'elements': [{'type': 'rich_text_section', 'elements': [{'type': 'text', 'text': 'How can i run an automated test on a local Android phone?'}]}]}], 'channel': 'D09A0LFHK8R', 'event_ts': '1755900267.555029', 'channel_type': 'im'}, 'type': 'event_callback', 'event_id': 'Ev09BABMH6TZ', 'event_time': 1755900267, 'authorizations': [{'enterprise_id': 'ERV4P7NAD', 'team_id': 'T010QS7UQNA', 'user_id': 'U099R6WTZ9S', 'is_bot': True, 'is_enterprise_install': False}], 'is_ext_shared_channel': False, 'event_context': '4-eyJldCI6Im1lc3NhZ2UiLCJ0aWQiOiJUMDEwUVM3VVFOQSIsImFpZCI6IkEwOTlMQUNBQjJSIiwiY2lkIjoiRDA5QTBMRkhLOFIifQ'}
2025-08-22 15:04:28,703 - slack_bolt.App - DEBUG - [client.py:200] - Sending a message (session id: 57670301-5864-46c2-a5ea-6506e70d5f1b, message: {"envelope_id": "5885c10f-06eb-46c5-8b0a-31f936404773"})
2025-08-22 15:04:28,703 - __main__ - INFO - [main.py:507] - DM Event details: channel=D09A0LFHK8R, user=U01RMTFMALF, ts=1755900267.555029
2025-08-22 15:04:28,703 - __main__ - DEBUG - [main.py:508] - DM Event text: How can i run an automated test on a local Android phone?
2025-08-22 15:04:28,704 - utils - DEBUG - [utils.py:27] - Checking message processing: channel=D09A0LFHK8R, ts=1755900267.555029, text='How can i run an automated test on a local Android...'
2025-08-22 15:04:28,704 - slack_bolt.App - DEBUG - [internals.py:41] - Response time: 5 milliseconds
2025-08-22 15:04:28,704 - utils - DEBUG - [utils.py:31] - Message hash: c68f94859d670e4036eb2f8a4dacd060
2025-08-22 15:04:28,704 - slack_bolt.App - DEBUG - [client.py:150] - Message processing completed (type: events_api, envelope_id: 5885c10f-06eb-46c5-8b0a-31f936404773)
2025-08-22 15:04:28,705 - utils - DEBUG - [utils.py:53] - Added message to processing cache (total entries: 1)
2025-08-22 15:04:28,705 - __main__ - DEBUG - [main.py:521] - Bot check: bot_id=None, user_id=U01RMTFMALF
2025-08-22 15:04:28,705 - __main__ - DEBUG - [main.py:526] - Question received: 'How can i run an automated test on a local Android phone?'
2025-08-22 15:04:28,705 - __main__ - DEBUG - [main.py:532] - Checking user access for DM...
2025-08-22 15:04:28,705 - auth.slack_user_info - DEBUG - [slack_user_info.py:48] - Fetching user info for user_id: U01RMTFMALF
2025-08-22 15:04:28,706 - slack_sdk.web.base_client - DEBUG - [base_client.py:255] - Sending a request - url: https://slack.com/api/users.info, query_params: {}, body_params: {'user': 'U01RMTFMALF', 'team_id': 'T010QS7UQNA'}, files: {}, json_body: None, headers: {'Content-Type': 'application/x-www-form-urlencoded', 'Authorization': '(redacted)', 'User-Agent': 'Python/3.12.0 slackclient/3.34.0 Darwin/23.4.0'}
2025-08-22 15:04:29,178 - slack_sdk.web.base_client - DEBUG - [base_client.py:546] - Received the following response - status: 200, headers: {'date': 'Fri, 22 Aug 2025 22:04:29 GMT', 'server': 'Apache', 'vary': 'Accept-Encoding', 'x-slack-req-id': '24b5ed43523bcba997c5ebb5dbfaa7f2', 'x-content-type-options': 'nosniff', 'x-xss-protection': '0', 'pragma': 'no-cache', 'cache-control': 'private, no-cache, no-store, must-revalidate', 'expires': 'Sat, 26 Jul 1997 05:00:00 GMT', 'content-type': 'application/json; charset=utf-8', 'x-accepted-oauth-scopes': 'users:read', 'x-oauth-scopes': 'app_mentions:read,channels:history,chat:write,im:history,im:read,im:write,users:read,reactions:write,users:read.email', 'access-control-expose-headers': 'x-slack-req-id, retry-after', 'access-control-allow-headers': 'slack-route, x-slack-version-ts, x-b3-traceid, x-b3-spanid, x-b3-parentspanid, x-b3-sampled, x-b3-flags', 'strict-transport-security': 'max-age=31536000; includeSubDomains; preload', 'referrer-policy': 'no-referrer', 'x-slack-unique-id': 'aKjpbVy-gPFKKOB6NgkljwAAEBE', 'x-slack-backend': 'r', 'access-control-allow-origin': '*', 'content-length': '2057', 'via': '1.1 slack-prod.tinyspeck.com, envoy-www-iad-ubbvhajc,envoy-edge-pdx-mnpccqbg', 'x-envoy-attempt-count': '1', 'x-envoy-upstream-service-time': '90', 'x-backend': 'main_normal main_canary_with_overflow main_control_with_overflow', 'x-server': 'slack-www-hhvm-main-iad-jjzm', 'x-slack-shared-secret-outcome': 'no-match', 'x-edge-backend': 'envoy-www', 'timing-allow-origin': '*', 'x-slack-edge-shared-secret-outcome': 'no-match', 'connection': 'close'}, body: {"ok":true,"user":{"id":"U01RMTFMALF","name":"popov8533","is_bot":false,"updated":1755891346,"is_app_user":false,"team_id":"T010QS7UQNA","deleted":false,"color":"4bbe2e","is_email_confirmed":true,"real_name":"Alexandr Popov","tz":"America\/Los_Angeles","tz_label":"Pacific Daylight Time","tz_offset":-25200,"is_admin":false,"is_owner":false,"is_primary_owner":false,"is_restricted":false,"is_ultra_restricted":false,"enterprise_user":{"id":"U01RMTFMALF","enterprise_id":"ERV4P7NAD","enterprise_name":"Paramount Global","is_admin":false,"is_owner":false,"is_primary_owner":false,"teams":["T010QS7UQNA","T02H1PQMF"]},"who_can_share_contact_card":"EVERYONE","profile":{"real_name":"Alexandr Popov","display_name":"Alex Popov","avatar_hash":"a64f82312a14","real_name_normalized":"Alexandr Popov","display_name_normalized":"Alex Popov","image_24":"https:\/\/avatars.slack-edge.com\/2023-03-29\/5033076824964_a64f82312a141123fbbf_24.png","image_32":"https:\/\/avatars.slack-edge.com\/2023-03-29\/5033076824964_a64f82312a141123fbbf_32.png","image_48":"https:\/\/avatars.slack-edge.com\/2023-03-29\/5033076824964_a64f82312a141123fbbf_48.png","image_72":"https:\/\/avatars.slack-edge.com\/2023-03-29\/5033076824964_a64f82312a141123fbbf_72.png","image_192":"https:\/\/avatars.slack-edge.com\/2023-03-29\/5033076824964_a64f82312a141123fbbf_192.png","image_512":"https:\/\/avatars.slack-edge.com\/2023-03-29\/5033076824964_a64f82312a141123fbbf_512.png","image_1024":"https:\/\/avatars.slack-edge.com\/2023-03-29\/5033076824964_a64f82312a141123fbbf_1024.png","image_original":"https:\/\/avatars.slack-edge.com\/2023-03-29\/5033076824964_a64f82312a141123fbbf_original.png","is_custom_image":true,"first_name":"Alexandr","last_name":"Popov","team":"T010QS7UQNA","email":"alexandr.popov@paramount.com","title":"Senior Software Quality Assurance Engineer","phone":"","skype":"","status_text":"","status_text_canonical":"","status_emoji":"","status_emoji_display_info":[],"status_expiration":0,"huddle_state":"default_unset","huddle_state_expiration_ts":0,"ooo_message":""}}}
2025-08-22 15:04:29,179 - auth.slack_user_info - DEBUG - [slack_user_info.py:63] - Retrieved email for user U01RMTFMALF: alexandr.popov@paramount.com
2025-08-22 15:04:29,179 - auth.email_whitelist - DEBUG - [email_whitelist.py:57] - Email access granted: alexandr.popov@paramount.com
2025-08-22 15:04:29,179 - __main__ - INFO - [main.py:118] - Access granted to user U01RMTFMALF with email alexandr.popov@paramount.com
2025-08-22 15:04:29,180 - __main__ - DEBUG - [main.py:538] - User access check passed for DM
2025-08-22 15:04:29,180 - __main__ - INFO - [main.py:540] - Processing DM question from user U01RMTFMALF: How can i run an automated test on a local Android phone?
2025-08-22 15:04:29,180 - __main__ - DEBUG - [main.py:543] - Starting DM processing...
2025-08-22 15:04:29,180 - __main__ - DEBUG - [main.py:546] - Checking if 'how can i run an automated test on a local android phone?' is an admin command in DM
2025-08-22 15:04:29,180 - __main__ - DEBUG - [main.py:582] - Checking if DM thread is already being processed...
2025-08-22 15:04:29,180 - utils - DEBUG - [utils.py:67] - Managing thread: D09A0LFHK8R:1755900267.555029, action: add, user: U01RMTFMALF
2025-08-22 15:04:29,180 - utils - INFO - [utils.py:94] - Added thread D09A0LFHK8R:1755900267.555029 to active tracking (total: 1)
2025-08-22 15:04:29,180 - __main__ - DEBUG - [main.py:587] - DM thread management check passed
2025-08-22 15:04:29,180 - slack_sdk.web.base_client - DEBUG - [base_client.py:255] - Sending a request - url: https://slack.com/api/reactions.add, query_params: {}, body_params: {'channel': 'D09A0LFHK8R', 'name': 'thinking_face', 'timestamp': '1755900267.555029', 'team_id': 'T010QS7UQNA'}, files: {}, json_body: None, headers: {'Content-Type': 'application/x-www-form-urlencoded', 'Authorization': '(redacted)', 'User-Agent': 'Python/3.12.0 slackclient/3.34.0 Darwin/23.4.0'}
2025-08-22 15:04:29,551 - slack_sdk.web.base_client - DEBUG - [base_client.py:546] - Received the following response - status: 200, headers: {'date': 'Fri, 22 Aug 2025 22:04:29 GMT', 'server': 'Apache', 'vary': 'Accept-Encoding', 'x-slack-req-id': 'f45177cb7c3cccbe843146427a8bc253', 'x-content-type-options': 'nosniff', 'x-xss-protection': '0', 'pragma': 'no-cache', 'cache-control': 'private, no-cache, no-store, must-revalidate', 'expires': 'Sat, 26 Jul 1997 05:00:00 GMT', 'content-type': 'application/json; charset=utf-8', 'x-accepted-oauth-scopes': 'reactions:write', 'x-oauth-scopes': 'app_mentions:read,channels:history,chat:write,im:history,im:read,im:write,users:read,reactions:write,users:read.email', 'access-control-expose-headers': 'x-slack-req-id, retry-after', 'access-control-allow-headers': 'slack-route, x-slack-version-ts, x-b3-traceid, x-b3-spanid, x-b3-parentspanid, x-b3-sampled, x-b3-flags', 'strict-transport-security': 'max-age=31536000; includeSubDomains; preload', 'referrer-policy': 'no-referrer', 'x-slack-unique-id': 'aKjpbfiIlFywI2rc4h2UbgAAEBs', 'x-slack-backend': 'r', 'access-control-allow-origin': '*', 'content-length': '11', 'via': '1.1 slack-prod.tinyspeck.com, envoy-www-iad-annfxumk,envoy-edge-pdx-gdnisvdf', 'x-envoy-attempt-count': '1', 'x-envoy-upstream-service-time': '155', 'x-backend': 'main_normal main_canary_with_overflow main_control_with_overflow', 'x-server': 'slack-www-hhvm-main-iad-tcel', 'x-slack-shared-secret-outcome': 'no-match', 'x-edge-backend': 'envoy-www', 'timing-allow-origin': '*', 'x-slack-edge-shared-secret-outcome': 'no-match', 'connection': 'close'}, body: {"ok":true}
2025-08-22 15:04:29,551 - __main__ - INFO - [main.py:604] - Processing DM question from <@U01RMTFMALF>: How can i run an automated test on a local Android phone?
2025-08-22 15:04:29,551 - __main__ - INFO - [main.py:608] - Sending DM request to DIG AI...
2025-08-22 15:04:29,551 - dig_connector - INFO - [dig_connector.py:134] - Generating response for query: 'How can i run an automated test on a local Android phone?' with 0 chunks
2025-08-22 15:04:29,552 - dig_connector - DEBUG - [dig_connector.py:138] - Formatted context length: 0
2025-08-22 15:04:29,552 - dig_connector - INFO - [dig_connector.py:141] - No context available, using direct query
2025-08-22 15:04:29,552 - dig_connector - INFO - [dig_connector.py:150] - Sending prompt to DIG platform...
2025-08-22 15:04:29,552 - dig_connector - INFO - [dig_connector.py:121] - Sending message to DIG API - URL: https://ai.digdev.cbsicloud.com/fastapi/chats/891/generate
2025-08-22 15:04:29,552 - dig_connector - DEBUG - [dig_connector.py:122] - Message payload: {'model_id': 42, 'message_text': 'How can i run an automated test on a local Android phone?', 'history': [{'role': 'user', 'content': 'How can i run an automated test on a local Android phone?'}]}
2025-08-22 15:04:36,743 - urllib3.connectionpool - DEBUG - [connectionpool.py:549] - https://ai.digdev.cbsicloud.com:443 "POST /fastapi/chats/891/generate HTTP/1.1" 200 1963
2025-08-22 15:04:36,744 - dig_connector - DEBUG - [dig_connector.py:125] - DIG API response: status=200
2025-08-22 15:04:36,744 - dig_connector - DEBUG - [dig_connector.py:129] - DIG API response data: {'message_text': 'To run an automated test on a local Android phone, you will need to configure specific parameters for your test run.\n\nHere\'s how to do it:\n\n1.  **Set the Debug Device ID:**\n    *   In your `resources/config.properties` file within the `mqe-hob-mobile-tests` module, add or modify the `DebugDeviceID` property. This should be set to the device ID of your emulator (you can get this by typing `adb devices` in the terminal) or the IP address of your real device if running on a real device. (Source: "https://paramount.atlassian.net/wiki/spaces/PLQA/pages/47720266")\n    *   Alternatively, you can pass the device ID using the `-Dudid` argument in your run configuration. (Source: "https://paramount.atlassian.net/wiki/spaces/PLQA/pages/47711460")\n\n2.  **Configure other properties in `resources/config.properties`:**\n    *   `Platform=ANDROID`\n    *   `Locale=en-us` (for running tests in domestic)\n    *   `MobileDeviceCategory=PHONE`\n    *   `DeviceStartOrientation=PORTRAIT` (Source: "https://paramount.atlassian.net/wiki/spaces/PLQA/pages/47720266")\n\n3.  **Run the test:**\n    *   From your IDE terminal, you can run the test using a Maven command like:\n        `mvn clean test -pl mqe-hob-mobile-tests -am -Dgroups=Your test case number or tag` (Source: "https://paramount.atlassian.net/wiki/spaces/PLQA/pages/47720266")\n    *   You can also run from the `TestNGSuiteConfig.xml` by right-clicking and running the file, providing the necessary test case ID or tag name in the include name section. (Source: "https://paramount.atlassian.net/wiki/spaces/PLQA/pages/47720266")\n\nEnsure you connect to VPN and download the latest version of Synergy server and run the `.jar` file (Websocket). Also, update desired capabilities in the `.config` file within the `mqe-hob-mobile-tests` directory. (Source: "https://paramount.atlassian.net/wiki/spaces/PLQA/pages/47720266")', 'requires_approval': False, 'execution_id': 1593}
2025-08-22 15:04:36,745 - dig_connector - INFO - [dig_connector.py:154] - Extracting response content...
2025-08-22 15:04:36,745 - dig_connector - DEBUG - [dig_connector.py:221] - Found message_text in response
2025-08-22 15:04:36,745 - dig_connector - INFO - [dig_connector.py:157] - Successfully generated response (length: 1867)
2025-08-22 15:04:36,745 - __main__ - INFO - [main.py:611] - Received DM response from DIG AI
2025-08-22 15:04:36,745 - __main__ - DEBUG - [main.py:612] - DIG AI DM response: To run an automated test on a local Android phone, you will need to configure specific parameters for your test run.

Here's how to do it:

1.  **Set the Debug Device ID:**
    *   In your `resources/config.properties` file within the `mqe-hob-mobile-tests` module, add or modify the `DebugDeviceID` property. This should be set to the device ID of your emulator (you can get this by typing `adb devices` in the terminal) or the IP address of your real device if running on a real device. (Source: "https://paramount.atlassian.net/wiki/spaces/PLQA/pages/47720266")
    *   Alternatively, you can pass the device ID using the `-Dudid` argument in your run configuration. (Source: "https://paramount.atlassian.net/wiki/spaces/PLQA/pages/47711460")

2.  **Configure other properties in `resources/config.properties`:**
    *   `Platform=ANDROID`
    *   `Locale=en-us` (for running tests in domestic)
    *   `MobileDeviceCategory=PHONE`
    *   `DeviceStartOrientation=PORTRAIT` (Source: "https://paramount.atlassian.net/wiki/spaces/PLQA/pages/47720266")

3.  **Run the test:**
    *   From your IDE terminal, you can run the test using a Maven command like:
        `mvn clean test -pl mqe-hob-mobile-tests -am -Dgroups=Your test case number or tag` (Source: "https://paramount.atlassian.net/wiki/spaces/PLQA/pages/47720266")
    *   You can also run from the `TestNGSuiteConfig.xml` by right-clicking and running the file, providing the necessary test case ID or tag name in the include name section. (Source: "https://paramount.atlassian.net/wiki/spaces/PLQA/pages/47720266")

Ensure you connect to VPN and download the latest version of Synergy server and run the `.jar` file (Websocket). Also, update desired capabilities in the `.config` file within the `mqe-hob-mobile-tests` directory. (Source: "https://paramount.atlassian.net/wiki/spaces/PLQA/pages/47720266")
2025-08-22 15:04:36,747 - __main__ - DEBUG - [main.py:616] - Formatted DM response: Your Question:
> How can i run an automated test on a local Android phone?

Answer:
To run an automated test on a local Android phone, you will need to configure specific parameters for your test run.

Here's how to do it:

1.  Set the Debug Device ID:
In your `resources/config.properties` file within the `mqe-hob-mobile-tests` module, add or modify the `DebugDeviceID` property. This should be set to the device ID of your emulator (you can get this by typing `adb devices` in the terminal) or the IP address of your real device if running on a real device.
       Alternatively, you can pass the device ID using the `-Dudid` argument in your run configuration.

2.  Configure other properties in `resources/config.properties`:
`Platform=ANDROID`
       `Locale=en-us` (for running tests in domestic)
       `MobileDeviceCategory=PHONE`
       `DeviceStartOrientation=PORTRAIT`

3.  Run the test:
From your IDE terminal, you can run the test using a Maven command like:
        `mvn clean test -pl mqe-hob-mobile-tests -am -Dgroups=Your test case number or tag`
       You can also run from the `TestNGSuiteConfig.xml` by right-clicking and running the file, providing the necessary test case ID or tag name in the include name section.

Ensure you connect to VPN and download the latest version of Synergy server and run the `.jar` file (Websocket). Also, update desired capabilities in the `.config` file within the `mqe-hob-mobile-tests` directory.

────────────────────────────────────────
📚 Sources:
1. https://paramount.atlassian.net/wiki/spaces/PLQA/pages/47720266"
2. https://paramount.atlassian.net/wiki/spaces/PLQA/pages/47711460"

2025-08-22 15:04:36,747 - slack_sdk.web.base_client - DEBUG - [base_client.py:255] - Sending a request - url: https://slack.com/api/reactions.remove, query_params: {}, body_params: {'name': 'thinking_face', 'channel': 'D09A0LFHK8R', 'timestamp': '1755900267.555029', 'team_id': 'T010QS7UQNA'}, files: {}, json_body: None, headers: {'Content-Type': 'application/x-www-form-urlencoded', 'Authorization': '(redacted)', 'User-Agent': 'Python/3.12.0 slackclient/3.34.0 Darwin/23.4.0'}
2025-08-22 15:04:37,148 - slack_sdk.web.base_client - DEBUG - [base_client.py:546] - Received the following response - status: 200, headers: {'date': 'Fri, 22 Aug 2025 22:04:37 GMT', 'server': 'Apache', 'vary': 'Accept-Encoding', 'x-slack-req-id': 'e6bb38c5a1d061c2e5257ce455c23eb7', 'x-content-type-options': 'nosniff', 'x-xss-protection': '0', 'pragma': 'no-cache', 'cache-control': 'private, no-cache, no-store, must-revalidate', 'expires': 'Sat, 26 Jul 1997 05:00:00 GMT', 'content-type': 'application/json; charset=utf-8', 'x-accepted-oauth-scopes': 'reactions:write', 'x-oauth-scopes': 'app_mentions:read,channels:history,chat:write,im:history,im:read,im:write,users:read,reactions:write,users:read.email', 'access-control-expose-headers': 'x-slack-req-id, retry-after', 'access-control-allow-headers': 'slack-route, x-slack-version-ts, x-b3-traceid, x-b3-spanid, x-b3-parentspanid, x-b3-sampled, x-b3-flags', 'strict-transport-security': 'max-age=31536000; includeSubDomains; preload', 'referrer-policy': 'no-referrer', 'x-slack-unique-id': 'aKjpdNkOIAmrJchEGV0BGAAAAAo', 'x-slack-backend': 'r', 'access-control-allow-origin': '*', 'content-length': '11', 'via': '1.1 slack-prod.tinyspeck.com, envoy-www-iad-wjwmtnfh,envoy-edge-pdx-mnpccqbg', 'x-envoy-attempt-count': '1', 'x-envoy-upstream-service-time': '179', 'x-backend': 'main_normal main_canary_with_overflow main_control_with_overflow', 'x-server': 'slack-www-hhvm-main-iad-ahhm', 'x-slack-shared-secret-outcome': 'no-match', 'x-edge-backend': 'envoy-www', 'timing-allow-origin': '*', 'x-slack-edge-shared-secret-outcome': 'no-match', 'connection': 'close'}, body: {"ok":true}
2025-08-22 15:04:37,149 - slack_sdk.web.base_client - DEBUG - [base_client.py:255] - Sending a request - url: https://slack.com/api/chat.postMessage, query_params: {}, body_params: {}, files: {}, json_body: {'channel': 'D09A0LFHK8R', 'text': 'Your Question:\n> How can i run an automated test on a local Android phone?\n\nAnswer:\nTo run an automated test on a local Android phone, you will need to configure specific parameters for your test run.\n\nHere\'s how to do it:\n\n1.  Set the Debug Device ID:\nIn your `resources/config.properties` file within the `mqe-hob-mobile-tests` module, add or modify the `DebugDeviceID` property. This should be set to the device ID of your emulator (you can get this by typing `adb devices` in the terminal) or the IP address of your real device if running on a real device.\n       Alternatively, you can pass the device ID using the `-Dudid` argument in your run configuration.\n\n2.  Configure other properties in `resources/config.properties`:\n`Platform=ANDROID`\n       `Locale=en-us` (for running tests in domestic)\n       `MobileDeviceCategory=PHONE`\n       `DeviceStartOrientation=PORTRAIT`\n\n3.  Run the test:\nFrom your IDE terminal, you can run the test using a Maven command like:\n        `mvn clean test -pl mqe-hob-mobile-tests -am -Dgroups=Your test case number or tag`\n       You can also run from the `TestNGSuiteConfig.xml` by right-clicking and running the file, providing the necessary test case ID or tag name in the include name section.\n\nEnsure you connect to VPN and download the latest version of Synergy server and run the `.jar` file (Websocket). Also, update desired capabilities in the `.config` file within the `mqe-hob-mobile-tests` directory.\n\n────────────────────────────────────────\n📚 Sources:\n1. https://paramount.atlassian.net/wiki/spaces/PLQA/pages/47720266"\n2. https://paramount.atlassian.net/wiki/spaces/PLQA/pages/47711460"\n', 'thread_ts': '1755900267.555029', 'team_id': 'T010QS7UQNA'}, headers: {'Content-Type': 'application/json;charset=utf-8', 'Authorization': '(redacted)', 'User-Agent': 'Python/3.12.0 slackclient/3.34.0 Darwin/23.4.0'}
2025-08-22 15:04:37,588 - slack_sdk.web.base_client - DEBUG - [base_client.py:546] - Received the following response - status: 200, headers: {'date': 'Fri, 22 Aug 2025 22:04:37 GMT', 'server': 'Apache', 'vary': 'Accept-Encoding', 'x-slack-req-id': 'f7df849dee7c696a342cfe2237c2d979', 'x-content-type-options': 'nosniff', 'x-xss-protection': '0', 'pragma': 'no-cache', 'cache-control': 'private, no-cache, no-store, must-revalidate', 'expires': 'Sat, 26 Jul 1997 05:00:00 GMT', 'content-type': 'application/json; charset=utf-8', 'x-accepted-oauth-scopes': 'chat:write', 'x-oauth-scopes': 'app_mentions:read,channels:history,chat:write,im:history,im:read,im:write,users:read,reactions:write,users:read.email', 'access-control-expose-headers': 'x-slack-req-id, retry-after', 'access-control-allow-headers': 'slack-route, x-slack-version-ts, x-b3-traceid, x-b3-spanid, x-b3-parentspanid, x-b3-sampled, x-b3-flags', 'strict-transport-security': 'max-age=31536000; includeSubDomains; preload', 'referrer-policy': 'no-referrer', 'x-slack-unique-id': 'aKjpdSwxlyVatZer5ZE5XgAAEDM', 'x-slack-backend': 'r', 'access-control-allow-origin': '*', 'content-length': '5702', 'via': '1.1 slack-prod.tinyspeck.com, envoy-www-iad-ckinlsyn,envoy-edge-pdx-yzukvolw', 'x-envoy-attempt-count': '1', 'x-envoy-upstream-service-time': '191', 'x-backend': 'main_normal main_canary_with_overflow main_control_with_overflow', 'x-server': 'slack-www-hhvm-main-iad-iazd', 'x-slack-shared-secret-outcome': 'no-match', 'x-edge-backend': 'envoy-www', 'timing-allow-origin': '*', 'x-slack-edge-shared-secret-outcome': 'no-match', 'connection': 'close'}, body: {"ok":true,"channel":"D09A0LFHK8R","ts":"1755900277.484719","message":{"user":"U099R6WTZ9S","type":"message","ts":"1755900277.484719","bot_id":"B099R6WTRU4","app_id":"A099LACAB2R","text":"Your Question:\n&gt; How can i run an automated test on a local Android phone?\n\nAnswer:\nTo run an automated test on a local Android phone, you will need to configure specific parameters for your test run.\n\nHere's how to do it:\n\n1.  Set the Debug Device ID:\nIn your `resources/config.properties` file within the `mqe-hob-mobile-tests` module, add or modify the `DebugDeviceID` property. This should be set to the device ID of your emulator (you can get this by typing `adb devices` in the terminal) or the IP address of your real device if running on a real device.\n       Alternatively, you can pass the device ID using the `-Dudid` argument in your run configuration.\n\n2.  Configure other properties in `resources/config.properties`:\n`Platform=ANDROID`\n       `Locale=en-us` (for running tests in domestic)\n       `MobileDeviceCategory=PHONE`\n       `DeviceStartOrientation=PORTRAIT`\n\n3.  Run the test:\nFrom your IDE terminal, you can run the test using a Maven command like:\n        `mvn clean test -pl mqe-hob-mobile-tests -am -Dgroups=Your test case number or tag`\n       You can also run from the `TestNGSuiteConfig.xml` by right-clicking and running the file, providing the necessary test case ID or tag name in the include name section.\n\nEnsure you connect to VPN and download the latest version of Synergy server and run the `.jar` file (Websocket). Also, update desired capabilities in the `.config` file within the `mqe-hob-mobile-tests` directory.\n\n────────────────────────────────────────\n:books: Sources:\n1. <https://paramount.atlassian.net/wiki/spaces/PLQA/pages/47720266>\"\n2. <https://paramount.atlassian.net/wiki/spaces/PLQA/pages/47711460>\"\n","team":"T010QS7UQNA","bot_profile":{"id":"B099R6WTRU4","app_id":"A099LACAB2R","user_id":"U099R6WTZ9S","name":"AutoBot","icons":{"image_36":"https://a.slack-edge.com/80588/img/plugins/app/bot_36.png","image_48":"https://a.slack-edge.com/80588/img/plugins/app/bot_48.png","image_72":"https://a.slack-edge.com/80588/img/plugins/app/service_72.png"},"deleted":false,"updated":1754677948,"team_id":"T010QS7UQNA"},"thread_ts":"1755900267.555029","parent_user_id":"U01RMTFMALF","blocks":[{"type":"rich_text","block_id":"4+wSq","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Your Question:"}]},{"type":"rich_text_quote","elements":[{"type":"text","text":"How can i run an automated test on a local Android phone?"}]},{"type":"rich_text_section","elements":[{"type":"text","text":"\n\nAnswer:\nTo run an automated test on a local Android phone, you will need to configure specific parameters for your test run.\n\nHere's how to do it:\n\n1.  Set the Debug Device ID:\nIn your "},{"type":"text","text":"resources/config.properties","style":{"code":true}},{"type":"text","text":" file within the "},{"type":"text","text":"mqe-hob-mobile-tests","style":{"code":true}},{"type":"text","text":" module, add or modify the "},{"type":"text","text":"DebugDeviceID","style":{"code":true}},{"type":"text","text":" property. This should be set to the device ID of your emulator (you can get this by typing "},{"type":"text","text":"adb devices","style":{"code":true}},{"type":"text","text":" in the terminal) or the IP address of your real device if running on a real device.\n       Alternatively, you can pass the device ID using the "},{"type":"text","text":"-Dudid","style":{"code":true}},{"type":"text","text":" argument in your run configuration.\n\n2.  Configure other properties in "},{"type":"text","text":"resources/config.properties","style":{"code":true}},{"type":"text","text":":\n"},{"type":"text","text":"Platform=ANDROID","style":{"code":true}},{"type":"text","text":"\n       "},{"type":"text","text":"Locale=en-us","style":{"code":true}},{"type":"text","text":" (for running tests in domestic)\n       "},{"type":"text","text":"MobileDeviceCategory=PHONE","style":{"code":true}},{"type":"text","text":"\n       "},{"type":"text","text":"DeviceStartOrientation=PORTRAIT","style":{"code":true}},{"type":"text","text":"\n\n3.  Run the test:\nFrom your IDE terminal, you can run the test using a Maven command like:\n        "},{"type":"text","text":"mvn clean test -pl mqe-hob-mobile-tests -am -Dgroups=Your test case number or tag","style":{"code":true}},{"type":"text","text":"\n       You can also run from the "},{"type":"text","text":"TestNGSuiteConfig.xml","style":{"code":true}},{"type":"text","text":" by right-clicking and running the file, providing the necessary test case ID or tag name in the include name section.\n\nEnsure you connect to VPN and download the latest version of Synergy server and run the "},{"type":"text","text":".jar","style":{"code":true}},{"type":"text","text":" file (Websocket). Also, update desired capabilities in the "},{"type":"text","text":".config","style":{"code":true}},{"type":"text","text":" file within the "},{"type":"text","text":"mqe-hob-mobile-tests","style":{"code":true}},{"type":"text","text":" directory.\n\n────────────────────────────────────────\n"},{"type":"emoji","name":"books","unicode":"1f4da"},{"type":"text","text":" Sources:\n1. "},{"type":"link","url":"https://paramount.atlassian.net/wiki/spaces/PLQA/pages/47720266"},{"type":"text","text":"\"\n2. "},{"type":"link","url":"https://paramount.atlassian.net/wiki/spaces/PLQA/pages/47711460"},{"type":"text","text":"\""}]}]}]}}
2025-08-22 15:04:37,589 - __main__ - DEBUG - [main.py:641] - Cleaning up DM thread tracking...
2025-08-22 15:04:37,590 - utils - DEBUG - [utils.py:67] - Managing thread: D09A0LFHK8R:1755900267.555029, action: remove, user: U01RMTFMALF
2025-08-22 15:04:37,590 - utils - INFO - [utils.py:100] - Removed thread D09A0LFHK8R:1755900267.555029 from active tracking (remaining: 0)
2025-08-22 15:04:38,364 - slack_bolt.App - DEBUG - [client.py:235] - on_message invoked: (message: {"envelope_id":"363420be-a4c1-4eff-bb47-0172afb78d20","payload":{"token":"yq71khZBCyJF1Ri2hG5aNqr5","team_id":"T010QS7UQNA","enterprise_id":"ERV4P7NAD","context_team_id":null,"context_enterprise_id":"ERV4P7NAD","api_app_id":"A099LACAB2R","event":{"user":"U099R6WTZ9S","type":"message","ts":"1755900277.484719","bot_id":"B099R6WTRU4","app_id":"A099LACAB2R","text":"Your Question:\n&gt; How can i run an automated test on a local Android phone?\n\nAnswer:\nTo run an automated test on a local Android phone, you will need to configure specific parameters for your test run.\n\nHere's how to do it:\n\n1.  Set the Debug Device ID:\nIn your `resources\/config.properties` file within the `mqe-hob-mobile-tests` module, add or modify the `DebugDeviceID` property. This should be set to the device ID of your emulator (you can get this by typing `adb devices` in the terminal) or the IP address of your real device if running on a real device.\n       Alternatively, you can pass the device ID using the `-Dudid` argument in your run configuration.\n\n2.  Configure other properties in `resources\/config.properties`:\n`Platform=ANDROID`\n       `Locale=en-us` (for running tests in domestic)\n       `MobileDeviceCategory=PHONE`\n       `DeviceStartOrientation=PORTRAIT`\n\n3.  Run the test:\nFrom your IDE terminal, you can run the test using a Maven command like:\n        `mvn clean test -pl mqe-hob-mobile-tests -am -Dgroups=Your test case number or tag`\n       You can also run from the `TestNGSuiteConfig.xml` by right-clicking and running the file, providing the necessary test case ID or tag name in the include name section.\n\nEnsure you connect to VPN and download the latest version of Synergy server and run the `.jar` file (Websocket). Also, update desired capabilities in the `.config` file within the `mqe-hob-mobile-tests` directory.\n\n\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\n:books: Sources:\n1. <https:\/\/paramount.atlassian.net\/wiki\/spaces\/PLQA\/pages\/47720266>\"\n2. <https:\/\/paramount.atlassian.net\/wiki\/spaces\/PLQA\/pages\/47711460>\"\n","team":"T010QS7UQNA","bot_profile":{"id":"B099R6WTRU4","deleted":false,"name":"AutoBot","updated":1754677948,"app_id":"A099LACAB2R","user_id":"U099R6WTZ9S","icons":{"image_36":"https:\/\/a.slack-edge.com\/80588\/img\/plugins\/app\/bot_36.png","image_48":"https:\/\/a.slack-edge.com\/80588\/img\/plugins\/app\/bot_48.png","image_72":"https:\/\/a.slack-edge.com\/80588\/img\/plugins\/app\/service_72.png"},"team_id":"T010QS7UQNA"},"thread_ts":"1755900267.555029","parent_user_id":"U01RMTFMALF","blocks":[{"type":"rich_text","block_id":"syS5A","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Your Question:"}]},{"type":"rich_text_quote","elements":[{"type":"text","text":"How can i run an automated test on a local Android phone?"}]},{"type":"rich_text_section","elements":[{"type":"text","text":"\n\nAnswer:\nTo run an automated test on a local Android phone, you will need to configure specific parameters for your test run.\n\nHere's how to do it:\n\n1.  Set the Debug Device ID:\nIn your "},{"type":"text","text":"resources\/config.properties","style":{"code":true}},{"type":"text","text":" file within the "},{"type":"text","text":"mqe-hob-mobile-tests","style":{"code":true}},{"type":"text","text":" module, add or modify the "},{"type":"text","text":"DebugDeviceID","style":{"code":true}},{"type":"text","text":" property. This should be set to the device ID of your emulator (you can get this by typing "},{"type":"text","text":"adb devices","style":{"code":true}},{"type":"text","text":" in the terminal) or the IP address of your real device if running on a real device.\n       Alternatively, you can pass the device ID using the "},{"type":"text","text":"-Dudid","style":{"code":true}},{"type":"text","text":" argument in your run configuration.\n\n2.  Configure other properties in "},{"type":"text","text":"resources\/config.properties","style":{"code":true}},{"type":"text","text":":\n"},{"type":"text","text":"Platform=ANDROID","style":{"code":true}},{"type":"text","text":"\n       "},{"type":"text","text":"Locale=en-us","style":{"code":true}},{"type":"text","text":" (for running tests in domestic)\n       "},{"type":"text","text":"MobileDeviceCategory=PHONE","style":{"code":true}},{"type":"text","text":"\n       "},{"type":"text","text":"DeviceStartOrientation=PORTRAIT","style":{"code":true}},{"type":"text","text":"\n\n3.  Run the test:\nFrom your IDE terminal, you can run the test using a Maven command like:\n        "},{"type":"text","text":"mvn clean test -pl mqe-hob-mobile-tests -am -Dgroups=Your test case number or tag","style":{"code":true}},{"type":"text","text":"\n       You can also run from the "},{"type":"text","text":"TestNGSuiteConfig.xml","style":{"code":true}},{"type":"text","text":" by right-clicking and running the file, providing the necessary test case ID or tag name in the include name section.\n\nEnsure you connect to VPN and download the latest version of Synergy server and run the "},{"type":"text","text":".jar","style":{"code":true}},{"type":"text","text":" file (Websocket). Also, update desired capabilities in the "},{"type":"text","text":".config","style":{"code":true}},{"type":"text","text":" file within the "},{"type":"text","text":"mqe-hob-mobile-tests","style":{"code":true}},{"type":"text","text":" directory.\n\n\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\n"},{"type":"emoji","name":"books","unicode":"1f4da"},{"type":"text","text":" Sources:\n1. "},{"type":"link","url":"https:\/\/paramount.atlassian.net\/wiki\/spaces\/PLQA\/pages\/47720266"},{"type":"text","text":"\"\n2. "},{"type":"link","url":"https:\/\/paramount.atlassian.net\/wiki\/spaces\/PLQA\/pages\/47711460"},{"type":"text","text":"\""}]}]}],"channel":"D09A0LFHK8R","event_ts":"1755900277.484719","channel_type":"im"},"type":"event_callback","event_id":"Ev09BJCD07LK","event_time":1755900277,"authorizations":[{"enterprise_id":"ERV4P7NAD","team_id":"T010QS7UQNA","user_id":"U099R6WTZ9S","is_bot":true,"is_enterprise_install":false}],"is_ext_shared_channel":false,"event_context":"4-eyJldCI6Im1lc3NhZ2UiLCJ0aWQiOiJUMDEwUVM3VVFOQSIsImFpZCI6IkEwOTlMQUNBQjJSIiwiY2lkIjoiRDA5QTBMRkhLOFIifQ"},"type":"events_api","accepts_response_payload":false,"retry_attempt":0,"retry_reason":""})
2025-08-22 15:04:38,366 - slack_bolt.App - DEBUG - [client.py:99] - A new message enqueued (current queue size: 1)
2025-08-22 15:04:38,366 - slack_bolt.App - DEBUG - [client.py:105] - A message dequeued (current queue size: 0)
2025-08-22 15:04:38,366 - slack_bolt.App - DEBUG - [client.py:125] - Message processing started (type: events_api, envelope_id: 363420be-a4c1-4eff-bb47-0172afb78d20)
2025-08-22 15:04:38,366 - slack_bolt.App - DEBUG - [app.py:476] - Applying slack_bolt.middleware.ssl_check.ssl_check.SslCheck
2025-08-22 15:04:38,366 - slack_bolt.App - DEBUG - [app.py:476] - Applying slack_bolt.middleware.request_verification.request_verification.RequestVerification
2025-08-22 15:04:38,366 - slack_bolt.App - DEBUG - [app.py:476] - Applying slack_bolt.middleware.authorization.single_team_authorization.SingleTeamAuthorization
2025-08-22 15:04:38,366 - slack_bolt.App - DEBUG - [app.py:476] - Applying slack_bolt.middleware.ignoring_self_events.ignoring_self_events.IgnoringSelfEvents
2025-08-22 15:04:38,367 - slack_bolt.IgnoringSelfEvents - DEBUG - [ignoring_self_events.py:60] - Skipped self event: {'user': 'U099R6WTZ9S', 'type': 'message', 'ts': '1755900277.484719', 'bot_id': 'B099R6WTRU4', 'app_id': 'A099LACAB2R', 'text': 'Your Question:\n&gt; How can i run an automated test on a local Android phone?\n\nAnswer:\nTo run an automated test on a local Android phone, you will need to configure specific parameters for your test run.\n\nHere\'s how to do it:\n\n1.  Set the Debug Device ID:\nIn your `resources/config.properties` file within the `mqe-hob-mobile-tests` module, add or modify the `DebugDeviceID` property. This should be set to the device ID of your emulator (you can get this by typing `adb devices` in the terminal) or the IP address of your real device if running on a real device.\n       Alternatively, you can pass the device ID using the `-Dudid` argument in your run configuration.\n\n2.  Configure other properties in `resources/config.properties`:\n`Platform=ANDROID`\n       `Locale=en-us` (for running tests in domestic)\n       `MobileDeviceCategory=PHONE`\n       `DeviceStartOrientation=PORTRAIT`\n\n3.  Run the test:\nFrom your IDE terminal, you can run the test using a Maven command like:\n        `mvn clean test -pl mqe-hob-mobile-tests -am -Dgroups=Your test case number or tag`\n       You can also run from the `TestNGSuiteConfig.xml` by right-clicking and running the file, providing the necessary test case ID or tag name in the include name section.\n\nEnsure you connect to VPN and download the latest version of Synergy server and run the `.jar` file (Websocket). Also, update desired capabilities in the `.config` file within the `mqe-hob-mobile-tests` directory.\n\n────────────────────────────────────────\n:books: Sources:\n1. <https://paramount.atlassian.net/wiki/spaces/PLQA/pages/47720266>"\n2. <https://paramount.atlassian.net/wiki/spaces/PLQA/pages/47711460>"\n', 'team': 'T010QS7UQNA', 'bot_profile': {'id': 'B099R6WTRU4', 'deleted': False, 'name': 'AutoBot', 'updated': 1754677948, 'app_id': 'A099LACAB2R', 'user_id': 'U099R6WTZ9S', 'icons': {'image_36': 'https://a.slack-edge.com/80588/img/plugins/app/bot_36.png', 'image_48': 'https://a.slack-edge.com/80588/img/plugins/app/bot_48.png', 'image_72': 'https://a.slack-edge.com/80588/img/plugins/app/service_72.png'}, 'team_id': 'T010QS7UQNA'}, 'thread_ts': '1755900267.555029', 'parent_user_id': 'U01RMTFMALF', 'blocks': [{'type': 'rich_text', 'block_id': 'syS5A', 'elements': [{'type': 'rich_text_section', 'elements': [{'type': 'text', 'text': 'Your Question:'}]}, {'type': 'rich_text_quote', 'elements': [{'type': 'text', 'text': 'How can i run an automated test on a local Android phone?'}]}, {'type': 'rich_text_section', 'elements': [{'type': 'text', 'text': "\n\nAnswer:\nTo run an automated test on a local Android phone, you will need to configure specific parameters for your test run.\n\nHere's how to do it:\n\n1.  Set the Debug Device ID:\nIn your "}, {'type': 'text', 'text': 'resources/config.properties', 'style': {'code': True}}, {'type': 'text', 'text': ' file within the '}, {'type': 'text', 'text': 'mqe-hob-mobile-tests', 'style': {'code': True}}, {'type': 'text', 'text': ' module, add or modify the '}, {'type': 'text', 'text': 'DebugDeviceID', 'style': {'code': True}}, {'type': 'text', 'text': ' property. This should be set to the device ID of your emulator (you can get this by typing '}, {'type': 'text', 'text': 'adb devices', 'style': {'code': True}}, {'type': 'text', 'text': ' in the terminal) or the IP address of your real device if running on a real device.\n       Alternatively, you can pass the device ID using the '}, {'type': 'text', 'text': '-Dudid', 'style': {'code': True}}, {'type': 'text', 'text': ' argument in your run configuration.\n\n2.  Configure other properties in '}, {'type': 'text', 'text': 'resources/config.properties', 'style': {'code': True}}, {'type': 'text', 'text': ':\n'}, {'type': 'text', 'text': 'Platform=ANDROID', 'style': {'code': True}}, {'type': 'text', 'text': '\n       '}, {'type': 'text', 'text': 'Locale=en-us', 'style': {'code': True}}, {'type': 'text', 'text': ' (for running tests in domestic)\n       '}, {'type': 'text', 'text': 'MobileDeviceCategory=PHONE', 'style': {'code': True}}, {'type': 'text', 'text': '\n       '}, {'type': 'text', 'text': 'DeviceStartOrientation=PORTRAIT', 'style': {'code': True}}, {'type': 'text', 'text': '\n\n3.  Run the test:\nFrom your IDE terminal, you can run the test using a Maven command like:\n        '}, {'type': 'text', 'text': 'mvn clean test -pl mqe-hob-mobile-tests -am -Dgroups=Your test case number or tag', 'style': {'code': True}}, {'type': 'text', 'text': '\n       You can also run from the '}, {'type': 'text', 'text': 'TestNGSuiteConfig.xml', 'style': {'code': True}}, {'type': 'text', 'text': ' by right-clicking and running the file, providing the necessary test case ID or tag name in the include name section.\n\nEnsure you connect to VPN and download the latest version of Synergy server and run the '}, {'type': 'text', 'text': '.jar', 'style': {'code': True}}, {'type': 'text', 'text': ' file (Websocket). Also, update desired capabilities in the '}, {'type': 'text', 'text': '.config', 'style': {'code': True}}, {'type': 'text', 'text': ' file within the '}, {'type': 'text', 'text': 'mqe-hob-mobile-tests', 'style': {'code': True}}, {'type': 'text', 'text': ' directory.\n\n────────────────────────────────────────\n'}, {'type': 'emoji', 'name': 'books', 'unicode': '1f4da'}, {'type': 'text', 'text': ' Sources:\n1. '}, {'type': 'link', 'url': 'https://paramount.atlassian.net/wiki/spaces/PLQA/pages/47720266'}, {'type': 'text', 'text': '"\n2. '}, {'type': 'link', 'url': 'https://paramount.atlassian.net/wiki/spaces/PLQA/pages/47711460'}, {'type': 'text', 'text': '"'}]}]}], 'channel': 'D09A0LFHK8R', 'event_ts': '1755900277.484719', 'channel_type': 'im'}
2025-08-22 15:04:38,367 - slack_bolt.App - DEBUG - [client.py:200] - Sending a message (session id: 57670301-5864-46c2-a5ea-6506e70d5f1b, message: {"envelope_id": "363420be-a4c1-4eff-bb47-0172afb78d20"})
2025-08-22 15:04:38,367 - slack_bolt.App - DEBUG - [internals.py:41] - Response time: 1 milliseconds
2025-08-22 15:04:38,368 - slack_bolt.App - DEBUG - [client.py:150] - Message processing completed (type: events_api, envelope_id: 363420be-a4c1-4eff-bb47-0172afb78d20)
2025-08-22 15:10:04,235 - __main__ - INFO - [main.py:43] - Loading application configuration...
2025-08-22 15:10:04,236 - __main__ - INFO - [main.py:45] - Configuration loaded successfully
2025-08-22 15:10:04,236 - __main__ - INFO - [main.py:48] - Initializing security components...
2025-08-22 15:10:04,236 - __main__ - DEBUG - [main.py:50] - Slack validator initialized
2025-08-22 15:10:04,236 - security.content_filter - INFO - [content_filter.py:39] - Content filter initialized with 11 patterns
2025-08-22 15:10:04,236 - __main__ - DEBUG - [main.py:53] - Content filter initialized
2025-08-22 15:10:04,236 - auth.admin_manager - INFO - [admin_manager.py:27] - Admin manager initialized with 2 admin users
2025-08-22 15:10:04,236 - __main__ - DEBUG - [main.py:56] - Admin manager initialized
2025-08-22 15:10:04,236 - auth.email_whitelist - INFO - [email_whitelist.py:28] - Email whitelist initialized with 1 whitelisted emails
2025-08-22 15:10:04,236 - auth.email_whitelist - INFO - [email_whitelist.py:37] - Whitelisted domains: paramount.com
2025-08-22 15:10:04,236 - __main__ - DEBUG - [main.py:59] - Email whitelist initialized with 1 emails
2025-08-22 15:10:04,236 - auth.slack_user_info - DEBUG - [slack_user_info.py:25] - Slack user info manager initialized
2025-08-22 15:10:04,236 - __main__ - DEBUG - [main.py:62] - Slack user info manager initialized
2025-08-22 15:10:04,236 - __main__ - INFO - [main.py:63] - Security components initialized successfully
2025-08-22 15:10:04,236 - __main__ - INFO - [main.py:66] - Initializing Slack app...
2025-08-22 15:10:04,274 - slack_bolt.App - DEBUG - [base_client.py:255] - Sending a request - url: https://slack.com/api/auth.test, query_params: {}, body_params: {}, files: {}, json_body: None, headers: {'Content-Type': 'application/x-www-form-urlencoded', 'Authorization': '(redacted)', 'User-Agent': 'Bolt/1.16.0 Python/3.12.0 slackclient/3.34.0 Darwin/23.4.0'}
2025-08-22 15:10:04,600 - slack_bolt.App - DEBUG - [base_client.py:546] - Received the following response - status: 200, headers: {'date': 'Fri, 22 Aug 2025 22:10:04 GMT', 'server': 'Apache', 'vary': 'Accept-Encoding', 'x-slack-req-id': 'e34ee3a50d7a2a4a40ac98a6de62abe6', 'x-content-type-options': 'nosniff', 'x-xss-protection': '0', 'pragma': 'no-cache', 'cache-control': 'private, no-cache, no-store, must-revalidate', 'expires': 'Sat, 26 Jul 1997 05:00:00 GMT', 'content-type': 'application/json; charset=utf-8', 'x-oauth-scopes': 'app_mentions:read,channels:history,chat:write,im:history,im:read,im:write,users:read,reactions:write,users:read.email', 'access-control-expose-headers': 'x-slack-req-id, retry-after', 'access-control-allow-headers': 'slack-route, x-slack-version-ts, x-b3-traceid, x-b3-spanid, x-b3-parentspanid, x-b3-sampled, x-b3-flags', 'strict-transport-security': 'max-age=31536000; includeSubDomains; preload', 'referrer-policy': 'no-referrer', 'x-slack-unique-id': 'aKjqvJUtVND_zly5OkkKeAAAABQ', 'x-slack-backend': 'r', 'access-control-allow-origin': '*', 'content-length': '228', 'via': '1.1 slack-prod.tinyspeck.com, envoy-www-iad-cpyayabn,envoy-edge-pdx-ibbrtiyu', 'x-envoy-attempt-count': '1', 'x-envoy-upstream-service-time': '87', 'x-backend': 'main_normal main_canary_with_overflow main_control_with_overflow', 'x-server': 'slack-www-hhvm-main-iad-whgv', 'x-slack-shared-secret-outcome': 'no-match', 'x-edge-backend': 'envoy-www', 'timing-allow-origin': '*', 'x-slack-edge-shared-secret-outcome': 'no-match', 'connection': 'close'}, body: {"ok":true,"url":"https://viacomcbs-grid-test.slack.com/","team":"Test Workspace","user":"autobot","team_id":"T010QS7UQNA","user_id":"U099R6WTZ9S","bot_id":"B099R6WTRU4","enterprise_id":"ERV4P7NAD","is_enterprise_install":false}
2025-08-22 15:10:04,601 - __main__ - INFO - [main.py:68] - Slack app initialized successfully
2025-08-22 15:10:04,601 - __main__ - DEBUG - [main.py:72] - Message deduplication cache initialized
2025-08-22 15:10:04,601 - __main__ - DEBUG - [main.py:77] - Thread tracking initialized
2025-08-22 15:10:04,601 - __main__ - INFO - [main.py:80] - Initializing DIG AI integration...
2025-08-22 15:10:04,601 - dig_connector - INFO - [dig_connector.py:284] - Initializing DIG AI with model ID: 42
2025-08-22 15:10:04,601 - dig_connector - INFO - [dig_connector.py:49] - Starting DIG chat session initialization...
2025-08-22 15:10:04,601 - dig_connector - DEBUG - [dig_connector.py:52] - Creating chat with name: Slack Bot Session 2025-08-22T22:10:04.601541+00:00
2025-08-22 15:10:04,601 - dig_connector - DEBUG - [dig_connector.py:63] - Creating chat - URL: https://ai.digdev.cbsicloud.com/fastapi/chats, Payload: {'chat_nm': 'Slack Bot Session 2025-08-22T22:10:04.601541+00:00', 'model_id': 42}
2025-08-22 15:10:04,604 - urllib3.connectionpool - DEBUG - [connectionpool.py:1055] - Starting new HTTPS connection (1): ai.digdev.cbsicloud.com:443
2025-08-22 15:10:04,871 - urllib3.connectionpool - DEBUG - [connectionpool.py:549] - https://ai.digdev.cbsicloud.com:443 "POST /fastapi/chats HTTP/1.1" 200 217
2025-08-22 15:10:04,871 - dig_connector - DEBUG - [dig_connector.py:66] - Create chat response: status=200
2025-08-22 15:10:04,871 - dig_connector - INFO - [dig_connector.py:54] - Successfully initialized DIG chat session with ID: 892
2025-08-22 15:10:04,871 - __main__ - INFO - [main.py:83] - DIG AI integration successfully initialized
2025-08-22 15:10:04,872 - __main__ - INFO - [main.py:87] - Setting up event handlers...
2025-08-22 15:10:04,873 - __main__ - INFO - [main.py:747] - Starting AI Assistant Bot...
2025-08-22 15:10:04,873 - __main__ - INFO - [main.py:748] - Registering event handlers...
2025-08-22 15:10:04,873 - __main__ - DEBUG - [main.py:749] - Event handlers registered: app_mention, message, app_home_opened
2025-08-22 15:10:04,873 - __main__ - INFO - [main.py:752] - Connecting to Slack via Socket Mode...
2025-08-22 15:10:04,874 - __main__ - INFO - [main.py:756] - Socket Mode handler created successfully
2025-08-22 15:10:04,874 - __main__ - INFO - [main.py:758] - ✅ Bot is now running and listening for events!
2025-08-22 15:10:04,874 - slack_bolt.App - DEBUG - [base_client.py:255] - Sending a request - url: https://slack.com/api/apps.connections.open, query_params: {}, body_params: {}, files: {}, json_body: None, headers: {'Content-Type': 'application/x-www-form-urlencoded', 'Authorization': '(redacted)', 'User-Agent': 'Bolt/1.16.0 Python/3.12.0 slackclient/3.34.0 Darwin/23.4.0'}
2025-08-22 15:10:05,171 - slack_bolt.App - DEBUG - [base_client.py:546] - Received the following response - status: 200, headers: {'date': 'Fri, 22 Aug 2025 22:10:05 GMT', 'server': 'Apache', 'vary': 'Accept-Encoding', 'x-slack-req-id': 'abb22069c651f34599e0dc77c0d0f1d8', 'x-content-type-options': 'nosniff', 'x-xss-protection': '0', 'x-robots-tag': 'noindex,nofollow', 'pragma': 'no-cache', 'cache-control': 'private, no-cache, no-store, must-revalidate', 'expires': 'Sat, 26 Jul 1997 05:00:00 GMT', 'content-type': 'application/json; charset=utf-8', 'x-accepted-oauth-scopes': 'connections:write', 'x-oauth-scopes': 'connections:write', 'access-control-expose-headers': 'x-slack-req-id, retry-after', 'access-control-allow-headers': 'slack-route, x-slack-version-ts, x-b3-traceid, x-b3-spanid, x-b3-parentspanid, x-b3-sampled, x-b3-flags', 'strict-transport-security': 'max-age=31536000; includeSubDomains; preload', 'referrer-policy': 'no-referrer', 'x-slack-unique-id': 'aKjqvdNKfNgcCaHjzJgQbgAAEC4', 'x-slack-backend': 'r', 'access-control-allow-origin': '*', 'content-length': '173', 'via': '1.1 slack-prod.tinyspeck.com, envoy-www-canary-iad-etgoviib,envoy-edge-pdx-kgrtmctn', 'x-envoy-attempt-count': '1', 'x-envoy-upstream-service-time': '77', 'x-backend': 'main_normal main_canary_with_overflow main_control_with_overflow', 'x-server': 'slack-www-hhvm-main-iad-kjts', 'x-slack-shared-secret-outcome': 'no-match', 'x-edge-backend': 'envoy-www', 'timing-allow-origin': '*', 'x-slack-edge-shared-secret-outcome': 'no-match', 'connection': 'close'}, body: {"ok":true,"url":"wss:\/\/wss-primary.slack.com\/link\/?ticket=e77df232-2c68-449a-9d45-59eac4494eec&app_id=a6c8d361ee1c6f398c5b4afec831555b78d7affa753b16bcc0fc64d7c13f3766"}
2025-08-22 15:10:05,666 - slack_bolt.App - INFO - [client.py:192] - A new session has been established (session id: 2b786a3c-37d2-418b-919d-b93228b5d82f)
2025-08-22 15:10:05,666 - slack_bolt.App - INFO - [base_handler.py:50] - ⚡️ Bolt app is running!
2025-08-22 15:10:05,691 - slack_bolt.App - INFO - [client.py:265] - Starting to receive messages from a new connection (session id: 2b786a3c-37d2-418b-919d-b93228b5d82f)
2025-08-22 15:10:05,692 - slack_bolt.App - DEBUG - [client.py:235] - on_message invoked: (message: {"type":"hello","num_connections":1,"debug_info":{"host":"applink-2","build_number":0,"approximate_connection_time":18060},"connection_info":{"app_id":"A099LACAB2R"}})
2025-08-22 15:10:05,692 - slack_bolt.App - DEBUG - [client.py:99] - A new message enqueued (current queue size: 1)
2025-08-22 15:10:05,692 - slack_bolt.App - DEBUG - [client.py:105] - A message dequeued (current queue size: 0)
2025-08-22 15:10:05,693 - slack_bolt.App - DEBUG - [client.py:125] - Message processing started (type: hello, envelope_id: None)
2025-08-22 15:10:05,693 - slack_bolt.App - DEBUG - [client.py:150] - Message processing completed (type: hello, envelope_id: None)
2025-08-22 15:10:19,084 - slack_bolt.App - DEBUG - [client.py:235] - on_message invoked: (message: {"envelope_id":"2daa7b93-0ff3-46d2-93e4-919fc90a46b8","payload":{"token":"yq71khZBCyJF1Ri2hG5aNqr5","team_id":"T010QS7UQNA","enterprise_id":"ERV4P7NAD","context_team_id":null,"context_enterprise_id":"ERV4P7NAD","api_app_id":"A099LACAB2R","event":{"user":"U01RMTFMALF","type":"message","ts":"1755900618.132309","client_msg_id":"4a5e4c0c-9f4f-4ccd-91d5-388f8a2422ae","text":"How can i run an automated test on a local Android phone?","blocks":[{"type":"rich_text","block_id":"vQwBP","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"How can i run an automated test on a local Android phone?"}]}]}],"channel":"D09A0LFHK8R","event_ts":"1755900618.132309","channel_type":"im"},"type":"event_callback","event_id":"Ev09BMU4TYN9","event_time":1755900618,"authorizations":[{"enterprise_id":"ERV4P7NAD","team_id":"T010QS7UQNA","user_id":"U099R6WTZ9S","is_bot":true,"is_enterprise_install":false}],"is_ext_shared_channel":false,"event_context":"4-eyJldCI6Im1lc3NhZ2UiLCJ0aWQiOiJUMDEwUVM3VVFOQSIsImFpZCI6IkEwOTlMQUNBQjJSIiwiY2lkIjoiRDA5QTBMRkhLOFIifQ"},"type":"events_api","accepts_response_payload":false,"retry_attempt":0,"retry_reason":""})
2025-08-22 15:10:19,086 - slack_bolt.App - DEBUG - [client.py:99] - A new message enqueued (current queue size: 1)
2025-08-22 15:10:19,086 - slack_bolt.App - DEBUG - [client.py:105] - A message dequeued (current queue size: 0)
2025-08-22 15:10:19,086 - slack_bolt.App - DEBUG - [client.py:125] - Message processing started (type: events_api, envelope_id: 2daa7b93-0ff3-46d2-93e4-919fc90a46b8)
2025-08-22 15:10:19,087 - slack_bolt.App - DEBUG - [app.py:476] - Applying slack_bolt.middleware.ssl_check.ssl_check.SslCheck
2025-08-22 15:10:19,087 - slack_bolt.App - DEBUG - [app.py:476] - Applying slack_bolt.middleware.request_verification.request_verification.RequestVerification
2025-08-22 15:10:19,088 - slack_bolt.App - DEBUG - [app.py:476] - Applying slack_bolt.middleware.authorization.single_team_authorization.SingleTeamAuthorization
2025-08-22 15:10:19,088 - slack_bolt.App - DEBUG - [app.py:476] - Applying slack_bolt.middleware.ignoring_self_events.ignoring_self_events.IgnoringSelfEvents
2025-08-22 15:10:19,088 - slack_bolt.App - DEBUG - [app.py:476] - Applying slack_bolt.middleware.url_verification.url_verification.UrlVerification
2025-08-22 15:10:19,088 - slack_bolt.App - DEBUG - [app.py:500] - Checking listener: handle_app_mentions ...
2025-08-22 15:10:19,088 - slack_bolt.App - DEBUG - [app.py:500] - Checking listener: help_message ...
2025-08-22 15:10:19,088 - slack_bolt.App - DEBUG - [app.py:500] - Checking listener: handle_dm_messages ...
2025-08-22 15:10:19,088 - slack_bolt.App - DEBUG - [app.py:522] - Running listener: handle_dm_messages ...
2025-08-22 15:10:19,089 - __main__ - INFO - [main.py:497] - === DM MESSAGE EVENT RECEIVED ===
2025-08-22 15:10:19,089 - slack_bolt.App - DEBUG - [thread_runner.py:198] - Responding with status: 200 body: "" (0 millis)
2025-08-22 15:10:19,089 - __main__ - DEBUG - [main.py:498] - Full event body: {'token': 'yq71khZBCyJF1Ri2hG5aNqr5', 'team_id': 'T010QS7UQNA', 'enterprise_id': 'ERV4P7NAD', 'context_team_id': None, 'context_enterprise_id': 'ERV4P7NAD', 'api_app_id': 'A099LACAB2R', 'event': {'user': 'U01RMTFMALF', 'type': 'message', 'ts': '1755900618.132309', 'client_msg_id': '4a5e4c0c-9f4f-4ccd-91d5-388f8a2422ae', 'text': 'How can i run an automated test on a local Android phone?', 'blocks': [{'type': 'rich_text', 'block_id': 'vQwBP', 'elements': [{'type': 'rich_text_section', 'elements': [{'type': 'text', 'text': 'How can i run an automated test on a local Android phone?'}]}]}], 'channel': 'D09A0LFHK8R', 'event_ts': '1755900618.132309', 'channel_type': 'im'}, 'type': 'event_callback', 'event_id': 'Ev09BMU4TYN9', 'event_time': 1755900618, 'authorizations': [{'enterprise_id': 'ERV4P7NAD', 'team_id': 'T010QS7UQNA', 'user_id': 'U099R6WTZ9S', 'is_bot': True, 'is_enterprise_install': False}], 'is_ext_shared_channel': False, 'event_context': '4-eyJldCI6Im1lc3NhZ2UiLCJ0aWQiOiJUMDEwUVM3VVFOQSIsImFpZCI6IkEwOTlMQUNBQjJSIiwiY2lkIjoiRDA5QTBMRkhLOFIifQ'}
2025-08-22 15:10:19,089 - slack_bolt.App - DEBUG - [client.py:200] - Sending a message (session id: 2b786a3c-37d2-418b-919d-b93228b5d82f, message: {"envelope_id": "2daa7b93-0ff3-46d2-93e4-919fc90a46b8"})
2025-08-22 15:10:19,089 - __main__ - INFO - [main.py:507] - DM Event details: channel=D09A0LFHK8R, user=U01RMTFMALF, ts=1755900618.132309
2025-08-22 15:10:19,089 - __main__ - DEBUG - [main.py:508] - DM Event text: How can i run an automated test on a local Android phone?
2025-08-22 15:10:19,089 - utils - DEBUG - [utils.py:27] - Checking message processing: channel=D09A0LFHK8R, ts=1755900618.132309, text='How can i run an automated test on a local Android...'
2025-08-22 15:10:19,089 - utils - DEBUG - [utils.py:31] - Message hash: b6810928f725c6b5d5ce810745e32e48
2025-08-22 15:10:19,089 - slack_bolt.App - DEBUG - [internals.py:41] - Response time: 2 milliseconds
2025-08-22 15:10:19,090 - utils - DEBUG - [utils.py:53] - Added message to processing cache (total entries: 1)
2025-08-22 15:10:19,090 - slack_bolt.App - DEBUG - [client.py:150] - Message processing completed (type: events_api, envelope_id: 2daa7b93-0ff3-46d2-93e4-919fc90a46b8)
2025-08-22 15:10:19,090 - __main__ - DEBUG - [main.py:521] - Bot check: bot_id=None, user_id=U01RMTFMALF
2025-08-22 15:10:19,090 - __main__ - DEBUG - [main.py:526] - Question received: 'How can i run an automated test on a local Android phone?'
2025-08-22 15:10:19,090 - __main__ - DEBUG - [main.py:532] - Checking user access for DM...
2025-08-22 15:10:19,090 - auth.slack_user_info - DEBUG - [slack_user_info.py:48] - Fetching user info for user_id: U01RMTFMALF
2025-08-22 15:10:19,090 - slack_sdk.web.base_client - DEBUG - [base_client.py:255] - Sending a request - url: https://slack.com/api/users.info, query_params: {}, body_params: {'user': 'U01RMTFMALF', 'team_id': 'T010QS7UQNA'}, files: {}, json_body: None, headers: {'Content-Type': 'application/x-www-form-urlencoded', 'Authorization': '(redacted)', 'User-Agent': 'Python/3.12.0 slackclient/3.34.0 Darwin/23.4.0'}
2025-08-22 15:10:19,388 - slack_sdk.web.base_client - DEBUG - [base_client.py:546] - Received the following response - status: 200, headers: {'date': 'Fri, 22 Aug 2025 22:10:19 GMT', 'server': 'Apache', 'vary': 'Accept-Encoding', 'x-slack-req-id': '05d0b0e53927f172647c82c4109f9972', 'x-content-type-options': 'nosniff', 'x-xss-protection': '0', 'pragma': 'no-cache', 'cache-control': 'private, no-cache, no-store, must-revalidate', 'expires': 'Sat, 26 Jul 1997 05:00:00 GMT', 'content-type': 'application/json; charset=utf-8', 'x-accepted-oauth-scopes': 'users:read', 'x-oauth-scopes': 'app_mentions:read,channels:history,chat:write,im:history,im:read,im:write,users:read,reactions:write,users:read.email', 'access-control-expose-headers': 'x-slack-req-id, retry-after', 'access-control-allow-headers': 'slack-route, x-slack-version-ts, x-b3-traceid, x-b3-spanid, x-b3-parentspanid, x-b3-sampled, x-b3-flags', 'strict-transport-security': 'max-age=31536000; includeSubDomains; preload', 'referrer-policy': 'no-referrer', 'x-slack-unique-id': 'aKjqy2NlT8xGa-sf2jATngAAABI', 'x-slack-backend': 'r', 'access-control-allow-origin': '*', 'content-length': '2057', 'via': '1.1 slack-prod.tinyspeck.com, envoy-www-iad-epzkqrmh,envoy-edge-pdx-zlowkmlo', 'x-envoy-attempt-count': '1', 'x-envoy-upstream-service-time': '95', 'x-backend': 'main_normal main_canary_with_overflow main_control_with_overflow', 'x-server': 'slack-www-hhvm-main-iad-xedt', 'x-slack-shared-secret-outcome': 'no-match', 'x-edge-backend': 'envoy-www', 'timing-allow-origin': '*', 'x-slack-edge-shared-secret-outcome': 'no-match', 'connection': 'close'}, body: {"ok":true,"user":{"id":"U01RMTFMALF","name":"popov8533","is_bot":false,"updated":1755891346,"is_app_user":false,"team_id":"T010QS7UQNA","deleted":false,"color":"4bbe2e","is_email_confirmed":true,"real_name":"Alexandr Popov","tz":"America\/Los_Angeles","tz_label":"Pacific Daylight Time","tz_offset":-25200,"is_admin":false,"is_owner":false,"is_primary_owner":false,"is_restricted":false,"is_ultra_restricted":false,"enterprise_user":{"id":"U01RMTFMALF","enterprise_id":"ERV4P7NAD","enterprise_name":"Paramount Global","is_admin":false,"is_owner":false,"is_primary_owner":false,"teams":["T010QS7UQNA","T02H1PQMF"]},"who_can_share_contact_card":"EVERYONE","profile":{"real_name":"Alexandr Popov","display_name":"Alex Popov","avatar_hash":"a64f82312a14","real_name_normalized":"Alexandr Popov","display_name_normalized":"Alex Popov","image_24":"https:\/\/avatars.slack-edge.com\/2023-03-29\/5033076824964_a64f82312a141123fbbf_24.png","image_32":"https:\/\/avatars.slack-edge.com\/2023-03-29\/5033076824964_a64f82312a141123fbbf_32.png","image_48":"https:\/\/avatars.slack-edge.com\/2023-03-29\/5033076824964_a64f82312a141123fbbf_48.png","image_72":"https:\/\/avatars.slack-edge.com\/2023-03-29\/5033076824964_a64f82312a141123fbbf_72.png","image_192":"https:\/\/avatars.slack-edge.com\/2023-03-29\/5033076824964_a64f82312a141123fbbf_192.png","image_512":"https:\/\/avatars.slack-edge.com\/2023-03-29\/5033076824964_a64f82312a141123fbbf_512.png","image_1024":"https:\/\/avatars.slack-edge.com\/2023-03-29\/5033076824964_a64f82312a141123fbbf_1024.png","image_original":"https:\/\/avatars.slack-edge.com\/2023-03-29\/5033076824964_a64f82312a141123fbbf_original.png","is_custom_image":true,"first_name":"Alexandr","last_name":"Popov","team":"T010QS7UQNA","email":"alexandr.popov@paramount.com","title":"Senior Software Quality Assurance Engineer","phone":"","skype":"","status_text":"","status_text_canonical":"","status_emoji":"","status_emoji_display_info":[],"status_expiration":0,"huddle_state":"default_unset","huddle_state_expiration_ts":0,"ooo_message":""}}}
2025-08-22 15:10:19,389 - auth.slack_user_info - DEBUG - [slack_user_info.py:63] - Retrieved email for user U01RMTFMALF: alexandr.popov@paramount.com
2025-08-22 15:10:19,389 - auth.email_whitelist - DEBUG - [email_whitelist.py:57] - Email access granted: alexandr.popov@paramount.com
2025-08-22 15:10:19,389 - __main__ - INFO - [main.py:118] - Access granted to user U01RMTFMALF with email alexandr.popov@paramount.com
2025-08-22 15:10:19,389 - __main__ - DEBUG - [main.py:538] - User access check passed for DM
2025-08-22 15:10:19,389 - __main__ - INFO - [main.py:540] - Processing DM question from user U01RMTFMALF: How can i run an automated test on a local Android phone?
2025-08-22 15:10:19,389 - __main__ - DEBUG - [main.py:543] - Starting DM processing...
2025-08-22 15:10:19,389 - __main__ - DEBUG - [main.py:546] - Checking if 'how can i run an automated test on a local android phone?' is an admin command in DM
2025-08-22 15:10:19,390 - __main__ - DEBUG - [main.py:582] - Checking if DM thread is already being processed...
2025-08-22 15:10:19,390 - utils - DEBUG - [utils.py:67] - Managing thread: D09A0LFHK8R:1755900618.132309, action: add, user: U01RMTFMALF
2025-08-22 15:10:19,390 - utils - INFO - [utils.py:94] - Added thread D09A0LFHK8R:1755900618.132309 to active tracking (total: 1)
2025-08-22 15:10:19,390 - __main__ - DEBUG - [main.py:587] - DM thread management check passed
2025-08-22 15:10:19,390 - slack_sdk.web.base_client - DEBUG - [base_client.py:255] - Sending a request - url: https://slack.com/api/reactions.add, query_params: {}, body_params: {'channel': 'D09A0LFHK8R', 'name': 'thinking_face', 'timestamp': '1755900618.132309', 'team_id': 'T010QS7UQNA'}, files: {}, json_body: None, headers: {'Content-Type': 'application/x-www-form-urlencoded', 'Authorization': '(redacted)', 'User-Agent': 'Python/3.12.0 slackclient/3.34.0 Darwin/23.4.0'}
2025-08-22 15:10:19,822 - slack_sdk.web.base_client - DEBUG - [base_client.py:546] - Received the following response - status: 200, headers: {'date': 'Fri, 22 Aug 2025 22:10:19 GMT', 'server': 'Apache', 'vary': 'Accept-Encoding', 'x-slack-req-id': '18416ecfad44d970be799148e92aefd3', 'x-content-type-options': 'nosniff', 'x-xss-protection': '0', 'pragma': 'no-cache', 'cache-control': 'private, no-cache, no-store, must-revalidate', 'expires': 'Sat, 26 Jul 1997 05:00:00 GMT', 'content-type': 'application/json; charset=utf-8', 'x-accepted-oauth-scopes': 'reactions:write', 'x-oauth-scopes': 'app_mentions:read,channels:history,chat:write,im:history,im:read,im:write,users:read,reactions:write,users:read.email', 'access-control-expose-headers': 'x-slack-req-id, retry-after', 'access-control-allow-headers': 'slack-route, x-slack-version-ts, x-b3-traceid, x-b3-spanid, x-b3-parentspanid, x-b3-sampled, x-b3-flags', 'strict-transport-security': 'max-age=31536000; includeSubDomains; preload', 'referrer-policy': 'no-referrer', 'x-slack-unique-id': 'aKjqy_D0_9SZC57kzAgehgAAEBY', 'x-slack-backend': 'r', 'access-control-allow-origin': '*', 'content-length': '11', 'via': '1.1 slack-prod.tinyspeck.com, envoy-www-iad-jnjgjzag,envoy-edge-pdx-reektlry', 'x-envoy-attempt-count': '1', 'x-envoy-upstream-service-time': '167', 'x-backend': 'main_normal main_canary_with_overflow main_control_with_overflow', 'x-server': 'slack-www-hhvm-main-iad-wlak', 'x-slack-shared-secret-outcome': 'no-match', 'x-edge-backend': 'envoy-www', 'timing-allow-origin': '*', 'x-slack-edge-shared-secret-outcome': 'no-match', 'connection': 'close'}, body: {"ok":true}
2025-08-22 15:10:19,823 - __main__ - INFO - [main.py:604] - Processing DM question from <@U01RMTFMALF>: How can i run an automated test on a local Android phone?
2025-08-22 15:10:19,823 - __main__ - INFO - [main.py:608] - Sending DM request to DIG AI...
2025-08-22 15:10:19,823 - dig_connector - INFO - [dig_connector.py:134] - Generating response for query: 'How can i run an automated test on a local Android phone?' with 0 chunks
2025-08-22 15:10:19,823 - dig_connector - DEBUG - [dig_connector.py:138] - Formatted context length: 0
2025-08-22 15:10:19,823 - dig_connector - INFO - [dig_connector.py:141] - No context available, using direct query
2025-08-22 15:10:19,823 - dig_connector - INFO - [dig_connector.py:150] - Sending prompt to DIG platform...
2025-08-22 15:10:19,823 - dig_connector - INFO - [dig_connector.py:121] - Sending message to DIG API - URL: https://ai.digdev.cbsicloud.com/fastapi/chats/892/generate
2025-08-22 15:10:19,823 - dig_connector - DEBUG - [dig_connector.py:122] - Message payload: {'model_id': 42, 'message_text': 'How can i run an automated test on a local Android phone?', 'history': [{'role': 'user', 'content': 'How can i run an automated test on a local Android phone?'}]}
2025-08-22 15:10:29,620 - urllib3.connectionpool - DEBUG - [connectionpool.py:549] - https://ai.digdev.cbsicloud.com:443 "POST /fastapi/chats/892/generate HTTP/1.1" 200 4021
2025-08-22 15:10:29,621 - dig_connector - DEBUG - [dig_connector.py:125] - DIG API response: status=200
2025-08-22 15:10:29,621 - dig_connector - DEBUG - [dig_connector.py:129] - DIG API response data: {'message_text': 'To run an automated test on a local Android phone, you will need to configure your test environment and execute specific commands.\n\nHere\'s a breakdown of the steps and configurations involved:\n\n**1. Configuration (according to Source: https://paramount.atlassian.net/wiki/spaces/PLQA/pages/47720266):**\n\n*   **Update `resources/config.properties`:** In the `mqe-hob-mobile-tests` module, add or modify the following properties:\n    *   `Platform=ANDROID`\n    *   `Locale=en-us` (for running tests in domestic locales)\n    *   `MobileDeviceCategory=PHONE`\n    *   `DeviceStartOrientation=PORTRAIT`\n    *   `DebugDeviceID=` (add the device ID of your emulator or real device, which you can find by typing `adb devices` in the terminal)\n    *   `ClientID=` (your machine\'s serial number for local executions or to target a specific private lab machine)\n    *   Ensure `ServerURL` is set, potentially with your user key, e.g., `https://www.synergyserver.tech?key=<your_user_key>`.\n    *   Set `AppPackageUrl` to the URL of your build (this will be set later once the build is uploaded to the server).\n    *   `AppBuildType=DEBUG`\n    *   `DebugProxyPort=9999`\n    *   Other parameters like `RerunOnFailure`, `SendChatReport`, `SendEmailReport`, and `SlackChannelName` can be configured as needed.\n\n*   **Connect to VPN:** Ensure you are connected to the VPN (e.g., `connect.cbsinteractive.com/VPNFT`).\n*   **Synergy Server:** Download the latest version of the Synergy server and run the `.jar` file (Websocket).\n\n**2. Running the Test:**\n\nOnce configured, you have a few options to run the test:\n\n*   **From Terminal (according to Source: https://paramount.atlassian.net/wiki/spaces/PLQA/pages/47720266):**\n    Open your IDE terminal window and enter the following command:\n    ```bash\n    mvn clean test -pl mqe-hob-mobile-tests -am -Dgroups=Your test case number or tag\n    ```\n\n*   **From `TestNGSuiteConfig.xml` (according to Source: https://paramount.atlassian.net/wiki/spaces/PLQA/pages/47720266):**\n    Navigate to the `TestNGSuiteConfig.xml` file, right-click, and select "run TestNGSuiteConfig.xml". You\'ll need to provide the necessary test case ID or tag name in the `<include name="" />` section within the `<groups>` and `<run>` tags. For example:\n    ```xml\n    <test verbose="1" name="All Mobile Tests" annotations="JDK">\n        <groups>\n            <run>\n                <include name="Debug"/>\n                <exclude name="Broken"/>\n            </run>\n        </groups>\n    </test>\n    ```\n\n**Additional Information:**\n\n*   **Run Configuration Arguments (according to Source: https://paramount.atlassian.net/wiki/spaces/PLQA/pages/47711460):**\n    For local Android runs, common arguments include:\n    *   `-Ddriver=android`\n    *   `-DplatformName=Android`\n    *   `-DplatformVersion=11.0` (or your desired version)\n    *   `-DdeviceName="Google Pixel 2XL"` (or your device name)\n    *   `-Denvironment=local`\n    *   `-Dapp="/pathToPackage/mobile-8.0.44-210804410-3.5.25-paramountPlus-playStore-release.apk"` (path to your application package)\n    *   `-Dudid=` (set this if running on a real mobile device)\n\n*   **Appium Server and Emulator (according to Source: https://paramount.atlassian.net/wiki/spaces/PLQA/pages/47711460):**\n    A `SampleTest.java` class is available that can instantiate the mobile driver, start/stop the Appium server, and start/stop the Android Emulator. The system can automatically launch the emulator if the environment is set to "local" and the driver is "android".\n\n*   **Android Home Environment Variable (according to Source: https://paramount.atlassian.net/wiki/spaces/PLQA/pages/47713566):**\n    For Android Emulator runs, ensure your Run Configuration has the `$ANDROID_HOME` environment variable set and included in the path.\n\nThese steps should help you set up and run automated tests on your local Android phone.', 'requires_approval': False, 'execution_id': 1594}
2025-08-22 15:10:29,621 - dig_connector - INFO - [dig_connector.py:154] - Extracting response content...
2025-08-22 15:10:29,621 - dig_connector - DEBUG - [dig_connector.py:221] - Found message_text in response
2025-08-22 15:10:29,621 - dig_connector - INFO - [dig_connector.py:157] - Successfully generated response (length: 3871)
2025-08-22 15:10:29,621 - __main__ - INFO - [main.py:611] - Received DM response from DIG AI
2025-08-22 15:10:29,621 - __main__ - DEBUG - [main.py:612] - DIG AI DM response: To run an automated test on a local Android phone, you will need to configure your test environment and execute specific commands.

Here's a breakdown of the steps and configurations involved:

**1. Configuration (according to Source: https://paramount.atlassian.net/wiki/spaces/PLQA/pages/47720266):**

*   **Update `resources/config.properties`:** In the `mqe-hob-mobile-tests` module, add or modify the following properties:
    *   `Platform=ANDROID`
    *   `Locale=en-us` (for running tests in domestic locales)
    *   `MobileDeviceCategory=PHONE`
    *   `DeviceStartOrientation=PORTRAIT`
    *   `DebugDeviceID=` (add the device ID of your emulator or real device, which you can find by typing `adb devices` in the terminal)
    *   `ClientID=` (your machine's serial number for local executions or to target a specific private lab machine)
    *   Ensure `ServerURL` is set, potentially with your user key, e.g., `https://www.synergyserver.tech?key=<your_user_key>`.
    *   Set `AppPackageUrl` to the URL of your build (this will be set later once the build is uploaded to the server).
    *   `AppBuildType=DEBUG`
    *   `DebugProxyPort=9999`
    *   Other parameters like `RerunOnFailure`, `SendChatReport`, `SendEmailReport`, and `SlackChannelName` can be configured as needed.

*   **Connect to VPN:** Ensure you are connected to the VPN (e.g., `connect.cbsinteractive.com/VPNFT`).
*   **Synergy Server:** Download the latest version of the Synergy server and run the `.jar` file (Websocket).

**2. Running the Test:**

Once configured, you have a few options to run the test:

*   **From Terminal (according to Source: https://paramount.atlassian.net/wiki/spaces/PLQA/pages/47720266):**
    Open your IDE terminal window and enter the following command:
    ```bash
    mvn clean test -pl mqe-hob-mobile-tests -am -Dgroups=Your test case number or tag
    ```

*   **From `TestNGSuiteConfig.xml` (according to Source: https://paramount.atlassian.net/wiki/spaces/PLQA/pages/47720266):**
    Navigate to the `TestNGSuiteConfig.xml` file, right-click, and select "run TestNGSuiteConfig.xml". You'll need to provide the necessary test case ID or tag name in the `<include name="" />` section within the `<groups>` and `<run>` tags. For example:
    ```xml
    <test verbose="1" name="All Mobile Tests" annotations="JDK">
        <groups>
            <run>
                <include name="Debug"/>
                <exclude name="Broken"/>
            </run>
        </groups>
    </test>
    ```

**Additional Information:**

*   **Run Configuration Arguments (according to Source: https://paramount.atlassian.net/wiki/spaces/PLQA/pages/47711460):**
    For local Android runs, common arguments include:
    *   `-Ddriver=android`
    *   `-DplatformName=Android`
    *   `-DplatformVersion=11.0` (or your desired version)
    *   `-DdeviceName="Google Pixel 2XL"` (or your device name)
    *   `-Denvironment=local`
    *   `-Dapp="/pathToPackage/mobile-8.0.44-210804410-3.5.25-paramountPlus-playStore-release.apk"` (path to your application package)
    *   `-Dudid=` (set this if running on a real mobile device)

*   **Appium Server and Emulator (according to Source: https://paramount.atlassian.net/wiki/spaces/PLQA/pages/47711460):**
    A `SampleTest.java` class is available that can instantiate the mobile driver, start/stop the Appium server, and start/stop the Android Emulator. The system can automatically launch the emulator if the environment is set to "local" and the driver is "android".

*   **Android Home Environment Variable (according to Source: https://paramount.atlassian.net/wiki/spaces/PLQA/pages/47713566):**
    For Android Emulator runs, ensure your Run Configuration has the `$ANDROID_HOME` environment variable set and included in the path.

These steps should help you set up and run automated tests on your local Android phone.
2025-08-22 15:10:29,623 - __main__ - DEBUG - [main.py:616] - Formatted DM response: Your Question:
> How can i run an automated test on a local Android phone?

Answer:
To run an automated test on a local Android phone, you will need to configure your test environment and execute specific commands.

Here's a breakdown of the steps and configurations involved:

1. Configuration (according to ):
Update `resources/config.properties`: In the `mqe-hob-mobile-tests` module, add or modify the following properties:
       `Platform=ANDROID`
       `Locale=en-us` (for running tests in domestic locales)
       `MobileDeviceCategory=PHONE`
       `DeviceStartOrientation=PORTRAIT`
       `DebugDeviceID=` (add the device ID of your emulator or real device, which you can find by typing `adb devices` in the terminal)
       `ClientID=` (your machine's serial number for local executions or to target a specific private lab machine)
       Ensure `ServerURL` is set, potentially with your user key, e.g., `https://www.synergyserver.tech?key=<your_user_key>`.
       Set `AppPackageUrl` to the URL of your build (this will be set later once the build is uploaded to the server).
       `AppBuildType=DEBUG`
       `DebugProxyPort=9999`
       Other parameters like `RerunOnFailure`, `SendChatReport`, `SendEmailReport`, and `SlackChannelName` can be configured as needed.

   Connect to VPN: Ensure you are connected to the VPN (e.g., `connect.cbsinteractive.com/VPNFT`).
   Synergy Server: Download the latest version of the Synergy server and run the `.jar` file (Websocket).

2. Running the Test:
Once configured, you have a few options to run the test:

   From Terminal (according to ):
    Open your IDE terminal window and enter the following command:
    ```bash
    mvn clean test -pl mqe-hob-mobile-tests -am -Dgroups=Your test case number or tag
    ```

   From `TestNGSuiteConfig.xml` (according to ):
    Navigate to the `TestNGSuiteConfig.xml` file, right-click, and select "run TestNGSuiteConfig.xml". You'll need to provide the necessary test case ID or tag name in the `<include name="" />` section within the `<groups>` and `<run>` tags. For example:
    ```xml
    <test verbose="1" name="All Mobile Tests" annotations="JDK">
        <groups>
            <run>
                <include name="Debug"/>
                <exclude name="Broken"/>
            </run>
        </groups>
    </test>
    ```

Additional Information:

   Run Configuration Arguments (according to ):
    For local Android runs, common arguments include:
       `-Ddriver=android`
       `-DplatformName=Android`
       `-DplatformVersion=11.0` (or your desired version)
       `-DdeviceName="Google Pixel 2XL"` (or your device name)
       `-Denvironment=local`
       `-Dapp="/pathToPackage/mobile-8.0.44-210804410-3.5.25-paramountPlus-playStore-release.apk"` (path to your application package)
       `-Dudid=` (set this if running on a real mobile device)

   Appium Server and Emulator (according to ):
    A `SampleTest.java` class is available that can instantiate the mobile driver, start/stop the Appium server, and start/stop the Android Emulator. The system can automatically launch the emulator if the environment is set to "local" and the driver is "android".

   Android Home Environment Variable (according to ):
    For Android Emulator runs, ensure your Run Configuration has the `$ANDROID_HOME` environment variable set and included in the path.

These steps should help you set up and run automated tests on your local Android phone.

────────────────────────────────────────
📚 Sources:
1. https://paramount.atlassian.net/wiki/spaces/PLQA/pages/47720266
2. https://paramount.atlassian.net/wiki/spaces/PLQA/pages/47711460
3. https://paramount.atlassian.net/wiki/spaces/PLQA/pages/47713566

2025-08-22 15:10:29,623 - slack_sdk.web.base_client - DEBUG - [base_client.py:255] - Sending a request - url: https://slack.com/api/reactions.remove, query_params: {}, body_params: {'name': 'thinking_face', 'channel': 'D09A0LFHK8R', 'timestamp': '1755900618.132309', 'team_id': 'T010QS7UQNA'}, files: {}, json_body: None, headers: {'Content-Type': 'application/x-www-form-urlencoded', 'Authorization': '(redacted)', 'User-Agent': 'Python/3.12.0 slackclient/3.34.0 Darwin/23.4.0'}
2025-08-22 15:10:30,021 - slack_sdk.web.base_client - DEBUG - [base_client.py:546] - Received the following response - status: 200, headers: {'date': 'Fri, 22 Aug 2025 22:10:29 GMT', 'server': 'Apache', 'vary': 'Accept-Encoding', 'x-slack-req-id': '5786539b62eb12be23046df2cac05f14', 'x-content-type-options': 'nosniff', 'x-xss-protection': '0', 'pragma': 'no-cache', 'cache-control': 'private, no-cache, no-store, must-revalidate', 'expires': 'Sat, 26 Jul 1997 05:00:00 GMT', 'content-type': 'application/json; charset=utf-8', 'x-accepted-oauth-scopes': 'reactions:write', 'x-oauth-scopes': 'app_mentions:read,channels:history,chat:write,im:history,im:read,im:write,users:read,reactions:write,users:read.email', 'access-control-expose-headers': 'x-slack-req-id, retry-after', 'access-control-allow-headers': 'slack-route, x-slack-version-ts, x-b3-traceid, x-b3-spanid, x-b3-parentspanid, x-b3-sampled, x-b3-flags', 'strict-transport-security': 'max-age=31536000; includeSubDomains; preload', 'referrer-policy': 'no-referrer', 'x-slack-unique-id': 'aKjq1W2GNHc8JB-JgXGikAAAEDo', 'x-slack-backend': 'r', 'access-control-allow-origin': '*', 'content-length': '11', 'via': '1.1 slack-prod.tinyspeck.com, envoy-www-iad-vaelnczf,envoy-edge-pdx-heerfutv', 'x-envoy-attempt-count': '1', 'x-envoy-upstream-service-time': '164', 'x-backend': 'main_normal main_canary_with_overflow main_control_with_overflow', 'x-server': 'slack-www-hhvm-main-iad-vwma', 'x-slack-shared-secret-outcome': 'no-match', 'x-edge-backend': 'envoy-www', 'timing-allow-origin': '*', 'x-slack-edge-shared-secret-outcome': 'no-match', 'connection': 'close'}, body: {"ok":true}
2025-08-22 15:10:30,041 - slack_sdk.web.base_client - DEBUG - [base_client.py:255] - Sending a request - url: https://slack.com/api/chat.postMessage, query_params: {}, body_params: {}, files: {}, json_body: {'channel': 'D09A0LFHK8R', 'text': 'Your Question:\n> How can i run an automated test on a local Android phone? Answer:\nTo run an automated test on a local Android phone, you will need to configure your test environment and execute specific commands. Here\'s a breakdown of the steps and configurations involved:\n\n1. Configuration (according to ):\nUpdate `resources/config.properties`: In the `mqe-hob-mobile-tests` module, add or modify the following properties:\n       `Platform=ANDROID`\n       `Locale=en-us` (for running tests in domestic locales)\n       `MobileDeviceCategory=PHONE`\n       `DeviceStartOrientation=PORTRAIT`\n       `DebugDeviceID=` (add the device ID of your emulator or real device, which you can find by typing `adb devices` in the terminal)\n       `ClientID=` (your machine\'s serial number for local executions or to target a specific private lab machine)\n       Ensure `ServerURL` is set, potentially with your user key, e.g., `https://www.synergyserver.tech?key=<your_user_key>`. Set `AppPackageUrl` to the URL of your build (this will be set later once the build is uploaded to the server). `AppBuildType=DEBUG`\n       `DebugProxyPort=9999`\n       Other parameters like `RerunOnFailure`, `SendChatReport`, `SendEmailReport`, and `SlackChannelName` can be configured as needed. Connect to VPN: Ensure you are connected to the VPN (e.g., `connect.cbsinteractive.com/VPNFT`). Synergy Server: Download the latest version of the Synergy server and run the `.jar` file (Websocket). 2. Running the Test:\nOnce configured, you have a few options to run the test:\n\n   From Terminal (according to ):\n    Open your IDE terminal window and enter the following command:\n    ```bash\n    mvn clean test -pl mqe-hob-mobile-tests -am -Dgroups=Your test case number or tag\n    ```\n\n   From `TestNGSuiteConfig.xml` (according to ):\n    Navigate to the `TestNGSuiteConfig.xml` file, right-click, and select "run TestNGSuiteConfig.xml". You\'ll need to provide the necessary test case ID or tag name in the `<include name="" />` section within the `<groups>` and `<run>` tags.\n\n_(message continued in thread...)_', 'thread_ts': '1755900618.132309', 'team_id': 'T010QS7UQNA'}, headers: {'Content-Type': 'application/json;charset=utf-8', 'Authorization': '(redacted)', 'User-Agent': 'Python/3.12.0 slackclient/3.34.0 Darwin/23.4.0'}
2025-08-22 15:10:30,444 - slack_sdk.web.base_client - DEBUG - [base_client.py:546] - Received the following response - status: 200, headers: {'date': 'Fri, 22 Aug 2025 22:10:30 GMT', 'server': 'Apache', 'vary': 'Accept-Encoding', 'x-slack-req-id': 'dca028c0a0c73c0f1d5fb11377f3700f', 'x-content-type-options': 'nosniff', 'x-xss-protection': '0', 'pragma': 'no-cache', 'cache-control': 'private, no-cache, no-store, must-revalidate', 'expires': 'Sat, 26 Jul 1997 05:00:00 GMT', 'content-type': 'application/json; charset=utf-8', 'x-accepted-oauth-scopes': 'chat:write', 'x-oauth-scopes': 'app_mentions:read,channels:history,chat:write,im:history,im:read,im:write,users:read,reactions:write,users:read.email', 'access-control-expose-headers': 'x-slack-req-id, retry-after', 'access-control-allow-headers': 'slack-route, x-slack-version-ts, x-b3-traceid, x-b3-spanid, x-b3-parentspanid, x-b3-sampled, x-b3-flags', 'strict-transport-security': 'max-age=31536000; includeSubDomains; preload', 'referrer-policy': 'no-referrer', 'x-slack-unique-id': 'aKjq1p8uUBSuU4VealaOswAAAC4', 'x-slack-backend': 'r', 'access-control-allow-origin': '*', 'content-length': '7325', 'via': '1.1 slack-prod.tinyspeck.com, envoy-www-iad-ovwupzdd,envoy-edge-pdx-krlwxdtp', 'x-envoy-attempt-count': '1', 'x-envoy-upstream-service-time': '177', 'x-backend': 'main_normal main_canary_with_overflow main_control_with_overflow', 'x-server': 'slack-www-hhvm-main-iad-hptw', 'x-slack-shared-secret-outcome': 'no-match', 'x-edge-backend': 'envoy-www', 'timing-allow-origin': '*', 'x-slack-edge-shared-secret-outcome': 'no-match', 'connection': 'close'}, body: {"ok":true,"channel":"D09A0LFHK8R","ts":"1755900630.335839","message":{"user":"U099R6WTZ9S","type":"message","ts":"1755900630.335839","bot_id":"B099R6WTRU4","app_id":"A099LACAB2R","text":"Your Question:\n&gt; How can i run an automated test on a local Android phone? Answer:\nTo run an automated test on a local Android phone, you will need to configure your test environment and execute specific commands. Here's a breakdown of the steps and configurations involved:\n\n1. Configuration (according to ):\nUpdate `resources/config.properties`: In the `mqe-hob-mobile-tests` module, add or modify the following properties:\n       `Platform=ANDROID`\n       `Locale=en-us` (for running tests in domestic locales)\n       `MobileDeviceCategory=PHONE`\n       `DeviceStartOrientation=PORTRAIT`\n       `DebugDeviceID=` (add the device ID of your emulator or real device, which you can find by typing `adb devices` in the terminal)\n       `ClientID=` (your machine's serial number for local executions or to target a specific private lab machine)\n       Ensure `ServerURL` is set, potentially with your user key, e.g., `<https://www.synergyserver.tech?key=&lt;your_user_key>&gt;`. Set `AppPackageUrl` to the URL of your build (this will be set later once the build is uploaded to the server). `AppBuildType=DEBUG`\n       `DebugProxyPort=9999`\n       Other parameters like `RerunOnFailure`, `SendChatReport`, `SendEmailReport`, and `SlackChannelName` can be configured as needed. Connect to VPN: Ensure you are connected to the VPN (e.g., `<http://connect.cbsinteractive.com/VPNFT`|connect.cbsinteractive.com/VPNFT`>). Synergy Server: Download the latest version of the Synergy server and run the `.jar` file (Websocket). 2. Running the Test:\nOnce configured, you have a few options to run the test:\n\n   From Terminal (according to ):\n    Open your IDE terminal window and enter the following command:\n    ```bash\n    mvn clean test -pl mqe-hob-mobile-tests -am -Dgroups=Your test case number or tag\n    ```\n\n   From `TestNGSuiteConfig.xml` (according to ):\n    Navigate to the `TestNGSuiteConfig.xml` file, right-click, and select \"run TestNGSuiteConfig.xml\". You'll need to provide the necessary test case ID or tag name in the `&lt;include name=\"\" /&gt;` section within the `&lt;groups&gt;` and `&lt;run&gt;` tags.\n\n_(message continued in thread...)_","team":"T010QS7UQNA","bot_profile":{"id":"B099R6WTRU4","app_id":"A099LACAB2R","user_id":"U099R6WTZ9S","name":"AutoBot","icons":{"image_36":"https://a.slack-edge.com/80588/img/plugins/app/bot_36.png","image_48":"https://a.slack-edge.com/80588/img/plugins/app/bot_48.png","image_72":"https://a.slack-edge.com/80588/img/plugins/app/service_72.png"},"deleted":false,"updated":1754677948,"team_id":"T010QS7UQNA"},"thread_ts":"1755900618.132309","parent_user_id":"U01RMTFMALF","blocks":[{"type":"rich_text","block_id":"fzS","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Your Question:"}]},{"type":"rich_text_quote","elements":[{"type":"text","text":"How can i run an automated test on a local Android phone? Answer:"}]},{"type":"rich_text_section","elements":[{"type":"text","text":"To run an automated test on a local Android phone, you will need to configure your test environment and execute specific commands. Here's a breakdown of the steps and configurations involved:\n\n1. Configuration (according to ):\nUpdate "},{"type":"text","text":"resources/config.properties","style":{"code":true}},{"type":"text","text":": In the "},{"type":"text","text":"mqe-hob-mobile-tests","style":{"code":true}},{"type":"text","text":" module, add or modify the following properties:\n       "},{"type":"text","text":"Platform=ANDROID","style":{"code":true}},{"type":"text","text":"\n       "},{"type":"text","text":"Locale=en-us","style":{"code":true}},{"type":"text","text":" (for running tests in domestic locales)\n       "},{"type":"text","text":"MobileDeviceCategory=PHONE","style":{"code":true}},{"type":"text","text":"\n       "},{"type":"text","text":"DeviceStartOrientation=PORTRAIT","style":{"code":true}},{"type":"text","text":"\n       "},{"type":"text","text":"DebugDeviceID=","style":{"code":true}},{"type":"text","text":" (add the device ID of your emulator or real device, which you can find by typing "},{"type":"text","text":"adb devices","style":{"code":true}},{"type":"text","text":" in the terminal)\n       "},{"type":"text","text":"ClientID=","style":{"code":true}},{"type":"text","text":" (your machine's serial number for local executions or to target a specific private lab machine)\n       Ensure "},{"type":"text","text":"ServerURL","style":{"code":true}},{"type":"text","text":" is set, potentially with your user key, e.g., "},{"type":"link","url":"https://www.synergyserver.tech?key=&lt;your_user_key","text":"https://www.synergyserver.tech?key=<your_user_key","style":{"code":true}},{"type":"text","text":">","style":{"code":true}},{"type":"text","text":". Set "},{"type":"text","text":"AppPackageUrl","style":{"code":true}},{"type":"text","text":" to the URL of your build (this will be set later once the build is uploaded to the server). "},{"type":"text","text":"AppBuildType=DEBUG","style":{"code":true}},{"type":"text","text":"\n       "},{"type":"text","text":"DebugProxyPort=9999","style":{"code":true}},{"type":"text","text":"\n       Other parameters like "},{"type":"text","text":"RerunOnFailure","style":{"code":true}},{"type":"text","text":", "},{"type":"text","text":"SendChatReport","style":{"code":true}},{"type":"text","text":", "},{"type":"text","text":"SendEmailReport","style":{"code":true}},{"type":"text","text":", and "},{"type":"text","text":"SlackChannelName","style":{"code":true}},{"type":"text","text":" can be configured as needed. Connect to VPN: Ensure you are connected to the VPN (e.g., "},{"type":"link","url":"http://connect.cbsinteractive.com/VPNFT`","text":"connect.cbsinteractive.com/VPNFT`","style":{"code":true}},{"type":"text","text":"). Synergy Server: Download the latest version of the Synergy server and run the ","style":{"code":true}},{"type":"text","text":".jar` file (Websocket). 2. Running the Test:\nOnce configured, you have a few options to run the test:\n\n   From Terminal (according to ):\n    Open your IDE terminal window and enter the following command:\n    "}]},{"type":"rich_text_preformatted","elements":[{"type":"text","text":"bash\n    mvn clean test -pl mqe-hob-mobile-tests -am -Dgroups=Your test case number or tag\n    "}]},{"type":"rich_text_section","elements":[{"type":"text","text":"\n\n   From "},{"type":"text","text":"TestNGSuiteConfig.xml","style":{"code":true}},{"type":"text","text":" (according to ):\n    Navigate to the "},{"type":"text","text":"TestNGSuiteConfig.xml","style":{"code":true}},{"type":"text","text":" file, right-click, and select \"run TestNGSuiteConfig.xml\". You'll need to provide the necessary test case ID or tag name in the "},{"type":"text","text":"<include name=\"\" />","style":{"code":true}},{"type":"text","text":" section within the "},{"type":"text","text":"<groups>","style":{"code":true}},{"type":"text","text":" and "},{"type":"text","text":"<run>","style":{"code":true}},{"type":"text","text":" tags.\n\n"},{"type":"text","text":"(message continued in thread...)","style":{"italic":true}}]}]}]}}
2025-08-22 15:10:30,445 - slack_sdk.web.base_client - DEBUG - [base_client.py:255] - Sending a request - url: https://slack.com/api/chat.postMessage, query_params: {}, body_params: {}, files: {}, json_body: {'channel': 'D09A0LFHK8R', 'text': '_(part 2/2)_\n\nFor example:\n    ```xml\n    <test verbose="1" name="All Mobile Tests" annotations="JDK">\n        <groups>\n            <run>\n                <include name="Debug"/>\n                <exclude name="Broken"/>\n            </run>\n        </groups>\n    </test>\n    ```\n\nAdditional Information:\n\n   Run Configuration Arguments (according to ):\n    For local Android runs, common arguments include:\n       `-Ddriver=android`\n       `-DplatformName=Android`\n       `-DplatformVersion=11.0` (or your desired version)\n       `-DdeviceName="Google Pixel 2XL"` (or your device name)\n       `-Denvironment=local`\n       `-Dapp="/pathToPackage/mobile-8.0.44-210804410-3.5.25-paramountPlus-playStore-release.apk"` (path to your application package)\n       `-Dudid=` (set this if running on a real mobile device)\n\n   Appium Server and Emulator (according to ):\n    A `SampleTest.java` class is available that can instantiate the mobile driver, start/stop the Appium server, and start/stop the Android Emulator. The system can automatically launch the emulator if the environment is set to "local" and the driver is "android". Android Home Environment Variable (according to ):\n    For Android Emulator runs, ensure your Run Configuration has the `$ANDROID_HOME` environment variable set and included in the path. These steps should help you set up and run automated tests on your local Android phone. ────────────────────────────────────────\n📚 Sources:\n1. https://paramount.atlassian.net/wiki/spaces/PLQA/pages/47720266\n2. https://paramount.atlassian.net/wiki/spaces/PLQA/pages/47711460\n3. https://paramount.atlassian.net/wiki/spaces/PLQA/pages/47713566', 'thread_ts': '1755900618.132309', 'team_id': 'T010QS7UQNA'}, headers: {'Content-Type': 'application/json;charset=utf-8', 'Authorization': '(redacted)', 'User-Agent': 'Python/3.12.0 slackclient/3.34.0 Darwin/23.4.0'}
2025-08-22 15:10:30,835 - slack_sdk.web.base_client - DEBUG - [base_client.py:546] - Received the following response - status: 200, headers: {'date': 'Fri, 22 Aug 2025 22:10:30 GMT', 'server': 'Apache', 'vary': 'Accept-Encoding', 'x-slack-req-id': '5d203c3cb2c64adc4be44e4aa27f6dd5', 'x-content-type-options': 'nosniff', 'x-xss-protection': '0', 'pragma': 'no-cache', 'cache-control': 'private, no-cache, no-store, must-revalidate', 'expires': 'Sat, 26 Jul 1997 05:00:00 GMT', 'content-type': 'application/json; charset=utf-8', 'x-accepted-oauth-scopes': 'chat:write', 'x-oauth-scopes': 'app_mentions:read,channels:history,chat:write,im:history,im:read,im:write,users:read,reactions:write,users:read.email', 'access-control-expose-headers': 'x-slack-req-id, retry-after', 'access-control-allow-headers': 'slack-route, x-slack-version-ts, x-b3-traceid, x-b3-spanid, x-b3-parentspanid, x-b3-sampled, x-b3-flags', 'strict-transport-security': 'max-age=31536000; includeSubDomains; preload', 'referrer-policy': 'no-referrer', 'x-slack-unique-id': 'aKjq1utLqNPvBW2I134D_gAAEBg', 'x-slack-backend': 'r', 'access-control-allow-origin': '*', 'content-length': '5443', 'via': '1.1 slack-prod.tinyspeck.com, envoy-www-iad-adrlejhe,envoy-edge-pdx-quqtufnf', 'x-envoy-attempt-count': '1', 'x-envoy-upstream-service-time': '161', 'x-backend': 'main_normal main_canary_with_overflow main_control_with_overflow', 'x-server': 'slack-www-hhvm-main-iad-kytq', 'x-slack-shared-secret-outcome': 'no-match', 'x-edge-backend': 'envoy-www', 'timing-allow-origin': '*', 'x-slack-edge-shared-secret-outcome': 'no-match', 'connection': 'close'}, body: {"ok":true,"channel":"D09A0LFHK8R","ts":"1755900630.736299","message":{"user":"U099R6WTZ9S","type":"message","ts":"1755900630.736299","bot_id":"B099R6WTRU4","app_id":"A099LACAB2R","text":"_(part 2/2)_\n\nFor example:\n    ```xml\n    &lt;test verbose=\"1\" name=\"All Mobile Tests\" annotations=\"JDK\"&gt;\n        &lt;groups&gt;\n            &lt;run&gt;\n                &lt;include name=\"Debug\"/&gt;\n                &lt;exclude name=\"Broken\"/&gt;\n            &lt;/run&gt;\n        &lt;/groups&gt;\n    &lt;/test&gt;\n    ```\n\nAdditional Information:\n\n   Run Configuration Arguments (according to ):\n    For local Android runs, common arguments include:\n       `-Ddriver=android`\n       `-DplatformName=Android`\n       `-DplatformVersion=11.0` (or your desired version)\n       `-DdeviceName=\"Google Pixel 2XL\"` (or your device name)\n       `-Denvironment=local`\n       `-Dapp=\"/pathToPackage/mobile-8.0.44-210804410-3.5.25-paramountPlus-playStore-release.apk\"` (path to your application package)\n       `-Dudid=` (set this if running on a real mobile device)\n\n   Appium Server and Emulator (according to ):\n    A `SampleTest.java` class is available that can instantiate the mobile driver, start/stop the Appium server, and start/stop the Android Emulator. The system can automatically launch the emulator if the environment is set to \"local\" and the driver is \"android\". Android Home Environment Variable (according to ):\n    For Android Emulator runs, ensure your Run Configuration has the `$ANDROID_HOME` environment variable set and included in the path. These steps should help you set up and run automated tests on your local Android phone. ────────────────────────────────────────\n:books: Sources:\n1. <https://paramount.atlassian.net/wiki/spaces/PLQA/pages/47720266>\n2. <https://paramount.atlassian.net/wiki/spaces/PLQA/pages/47711460>\n3. <https://paramount.atlassian.net/wiki/spaces/PLQA/pages/47713566>","team":"T010QS7UQNA","bot_profile":{"id":"B099R6WTRU4","app_id":"A099LACAB2R","user_id":"U099R6WTZ9S","name":"AutoBot","icons":{"image_36":"https://a.slack-edge.com/80588/img/plugins/app/bot_36.png","image_48":"https://a.slack-edge.com/80588/img/plugins/app/bot_48.png","image_72":"https://a.slack-edge.com/80588/img/plugins/app/service_72.png"},"deleted":false,"updated":1754677948,"team_id":"T010QS7UQNA"},"thread_ts":"1755900618.132309","parent_user_id":"U01RMTFMALF","blocks":[{"type":"rich_text","block_id":"WWe","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"(part 2/2)","style":{"italic":true}},{"type":"text","text":"\n\nFor example:\n    "}]},{"type":"rich_text_preformatted","elements":[{"type":"text","text":"xml\n    <test verbose=\"1\" name=\"All Mobile Tests\" annotations=\"JDK\">\n        <groups>\n            <run>\n                <include name=\"Debug\"/>\n                <exclude name=\"Broken\"/>\n            </run>\n        </groups>\n    </test>\n    "}]},{"type":"rich_text_section","elements":[{"type":"text","text":"\n\nAdditional Information:\n\n   Run Configuration Arguments (according to ):\n    For local Android runs, common arguments include:\n       "},{"type":"text","text":"-Ddriver=android","style":{"code":true}},{"type":"text","text":"\n       "},{"type":"text","text":"-DplatformName=Android","style":{"code":true}},{"type":"text","text":"\n       "},{"type":"text","text":"-DplatformVersion=11.0","style":{"code":true}},{"type":"text","text":" (or your desired version)\n       "},{"type":"text","text":"-DdeviceName=\"Google Pixel 2XL\"","style":{"code":true}},{"type":"text","text":" (or your device name)\n       "},{"type":"text","text":"-Denvironment=local","style":{"code":true}},{"type":"text","text":"\n       "},{"type":"text","text":"-Dapp=\"/pathToPackage/mobile-8.0.44-210804410-3.5.25-paramountPlus-playStore-release.apk\"","style":{"code":true}},{"type":"text","text":" (path to your application package)\n       "},{"type":"text","text":"-Dudid=","style":{"code":true}},{"type":"text","text":" (set this if running on a real mobile device)\n\n   Appium Server and Emulator (according to ):\n    A "},{"type":"text","text":"SampleTest.java","style":{"code":true}},{"type":"text","text":" class is available that can instantiate the mobile driver, start/stop the Appium server, and start/stop the Android Emulator. The system can automatically launch the emulator if the environment is set to \"local\" and the driver is \"android\". Android Home Environment Variable (according to ):\n    For Android Emulator runs, ensure your Run Configuration has the "},{"type":"text","text":"$ANDROID_HOME","style":{"code":true}},{"type":"text","text":" environment variable set and included in the path. These steps should help you set up and run automated tests on your local Android phone. ────────────────────────────────────────\n"},{"type":"emoji","name":"books","unicode":"1f4da"},{"type":"text","text":" Sources:\n1. "},{"type":"link","url":"https://paramount.atlassian.net/wiki/spaces/PLQA/pages/47720266"},{"type":"text","text":"\n2. "},{"type":"link","url":"https://paramount.atlassian.net/wiki/spaces/PLQA/pages/47711460"},{"type":"text","text":"\n3. "},{"type":"link","url":"https://paramount.atlassian.net/wiki/spaces/PLQA/pages/47713566"}]}]}]}}
2025-08-22 15:10:30,836 - __main__ - DEBUG - [main.py:641] - Cleaning up DM thread tracking...
2025-08-22 15:10:30,836 - utils - DEBUG - [utils.py:67] - Managing thread: D09A0LFHK8R:1755900618.132309, action: remove, user: U01RMTFMALF
2025-08-22 15:10:30,836 - utils - INFO - [utils.py:100] - Removed thread D09A0LFHK8R:1755900618.132309 from active tracking (remaining: 0)
2025-08-22 15:10:31,228 - slack_bolt.App - DEBUG - [client.py:235] - on_message invoked: (message: {"envelope_id":"4f8cb816-2af3-4f34-8edb-e9df14525cf3","payload":{"token":"yq71khZBCyJF1Ri2hG5aNqr5","team_id":"T010QS7UQNA","enterprise_id":"ERV4P7NAD","context_team_id":null,"context_enterprise_id":"ERV4P7NAD","api_app_id":"A099LACAB2R","event":{"user":"U099R6WTZ9S","type":"message","ts":"1755900630.335839","bot_id":"B099R6WTRU4","app_id":"A099LACAB2R","text":"Your Question:\n&gt; How can i run an automated test on a local Android phone? Answer:\nTo run an automated test on a local Android phone, you will need to configure your test environment and execute specific commands. Here's a breakdown of the steps and configurations involved:\n\n1. Configuration (according to ):\nUpdate `resources\/config.properties`: In the `mqe-hob-mobile-tests` module, add or modify the following properties:\n       `Platform=ANDROID`\n       `Locale=en-us` (for running tests in domestic locales)\n       `MobileDeviceCategory=PHONE`\n       `DeviceStartOrientation=PORTRAIT`\n       `DebugDeviceID=` (add the device ID of your emulator or real device, which you can find by typing `adb devices` in the terminal)\n       `ClientID=` (your machine's serial number for local executions or to target a specific private lab machine)\n       Ensure `ServerURL` is set, potentially with your user key, e.g., `<https:\/\/www.synergyserver.tech?key=&lt;your_user_key>&gt;`. Set `AppPackageUrl` to the URL of your build (this will be set later once the build is uploaded to the server). `AppBuildType=DEBUG`\n       `DebugProxyPort=9999`\n       Other parameters like `RerunOnFailure`, `SendChatReport`, `SendEmailReport`, and `SlackChannelName` can be configured as needed. Connect to VPN: Ensure you are connected to the VPN (e.g., `<http:\/\/connect.cbsinteractive.com\/VPNFT`|connect.cbsinteractive.com\/VPNFT`>). Synergy Server: Download the latest version of the Synergy server and run the `.jar` file (Websocket). 2. Running the Test:\nOnce configured, you have a few options to run the test:\n\n   From Terminal (according to ):\n    Open your IDE terminal window and enter the following command:\n    ```bash\n    mvn clean test -pl mqe-hob-mobile-tests -am -Dgroups=Your test case number or tag\n    ```\n\n   From `TestNGSuiteConfig.xml` (according to ):\n    Navigate to the `TestNGSuiteConfig.xml` file, right-click, and select \"run TestNGSuiteConfig.xml\". You'll need to provide the necessary test case ID or tag name in the `&lt;include name=\"\" \/&gt;` section within the `&lt;groups&gt;` and `&lt;run&gt;` tags.\n\n_(message continued in thread...)_","team":"T010QS7UQNA","bot_profile":{"id":"B099R6WTRU4","deleted":false,"name":"AutoBot","updated":1754677948,"app_id":"A099LACAB2R","user_id":"U099R6WTZ9S","icons":{"image_36":"https:\/\/a.slack-edge.com\/80588\/img\/plugins\/app\/bot_36.png","image_48":"https:\/\/a.slack-edge.com\/80588\/img\/plugins\/app\/bot_48.png","image_72":"https:\/\/a.slack-edge.com\/80588\/img\/plugins\/app\/service_72.png"},"team_id":"T010QS7UQNA"},"thread_ts":"1755900618.132309","parent_user_id":"U01RMTFMALF","blocks":[{"type":"rich_text","block_id":"GvS","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Your Question:"}]},{"type":"rich_text_quote","elements":[{"type":"text","text":"How can i run an automated test on a local Android phone? Answer:"}]},{"type":"rich_text_section","elements":[{"type":"text","text":"To run an automated test on a local Android phone, you will need to configure your test environment and execute specific commands. Here's a breakdown of the steps and configurations involved:\n\n1. Configuration (according to ):\nUpdate "},{"type":"text","text":"resources\/config.properties","style":{"code":true}},{"type":"text","text":": In the "},{"type":"text","text":"mqe-hob-mobile-tests","style":{"code":true}},{"type":"text","text":" module, add or modify the following properties:\n       "},{"type":"text","text":"Platform=ANDROID","style":{"code":true}},{"type":"text","text":"\n       "},{"type":"text","text":"Locale=en-us","style":{"code":true}},{"type":"text","text":" (for running tests in domestic locales)\n       "},{"type":"text","text":"MobileDeviceCategory=PHONE","style":{"code":true}},{"type":"text","text":"\n       "},{"type":"text","text":"DeviceStartOrientation=PORTRAIT","style":{"code":true}},{"type":"text","text":"\n       "},{"type":"text","text":"DebugDeviceID=","style":{"code":true}},{"type":"text","text":" (add the device ID of your emulator or real device, which you can find by typing "},{"type":"text","text":"adb devices","style":{"code":true}},{"type":"text","text":" in the terminal)\n       "},{"type":"text","text":"ClientID=","style":{"code":true}},{"type":"text","text":" (your machine's serial number for local executions or to target a specific private lab machine)\n       Ensure "},{"type":"text","text":"ServerURL","style":{"code":true}},{"type":"text","text":" is set, potentially with your user key, e.g., "},{"type":"link","url":"https:\/\/www.synergyserver.tech?key=&lt;your_user_key","text":"https:\/\/www.synergyserver.tech?key=<your_user_key","style":{"code":true}},{"type":"text","text":">","style":{"code":true}},{"type":"text","text":". Set "},{"type":"text","text":"AppPackageUrl","style":{"code":true}},{"type":"text","text":" to the URL of your build (this will be set later once the build is uploaded to the server). "},{"type":"text","text":"AppBuildType=DEBUG","style":{"code":true}},{"type":"text","text":"\n       "},{"type":"text","text":"DebugProxyPort=9999","style":{"code":true}},{"type":"text","text":"\n       Other parameters like "},{"type":"text","text":"RerunOnFailure","style":{"code":true}},{"type":"text","text":", "},{"type":"text","text":"SendChatReport","style":{"code":true}},{"type":"text","text":", "},{"type":"text","text":"SendEmailReport","style":{"code":true}},{"type":"text","text":", and "},{"type":"text","text":"SlackChannelName","style":{"code":true}},{"type":"text","text":" can be configured as needed. Connect to VPN: Ensure you are connected to the VPN (e.g., "},{"type":"link","url":"http:\/\/connect.cbsinteractive.com\/VPNFT`","text":"connect.cbsinteractive.com\/VPNFT`","style":{"code":true}},{"type":"text","text":"). Synergy Server: Download the latest version of the Synergy server and run the ","style":{"code":true}},{"type":"text","text":".jar` file (Websocket). 2. Running the Test:\nOnce configured, you have a few options to run the test:\n\n   From Terminal (according to ):\n    Open your IDE terminal window and enter the following command:\n    "}]},{"type":"rich_text_preformatted","elements":[{"type":"text","text":"bash\n    mvn clean test -pl mqe-hob-mobile-tests -am -Dgroups=Your test case number or tag\n    "}]},{"type":"rich_text_section","elements":[{"type":"text","text":"\n\n   From "},{"type":"text","text":"TestNGSuiteConfig.xml","style":{"code":true}},{"type":"text","text":" (according to ):\n    Navigate to the "},{"type":"text","text":"TestNGSuiteConfig.xml","style":{"code":true}},{"type":"text","text":" file, right-click, and select \"run TestNGSuiteConfig.xml\". You'll need to provide the necessary test case ID or tag name in the "},{"type":"text","text":"<include name=\"\" \/>","style":{"code":true}},{"type":"text","text":" section within the "},{"type":"text","text":"<groups>","style":{"code":true}},{"type":"text","text":" and "},{"type":"text","text":"<run>","style":{"code":true}},{"type":"text","text":" tags.\n\n"},{"type":"text","text":"(message continued in thread...)","style":{"italic":true}}]}]}],"channel":"D09A0LFHK8R","event_ts":"1755900630.335839","channel_type":"im"},"type":"event_callback","event_id":"Ev09BJCWB02X","event_time":1755900630,"authorizations":[{"enterprise_id":"ERV4P7NAD","team_id":"T010QS7UQNA","user_id":"U099R6WTZ9S","is_bot":true,"is_enterprise_install":false}],"is_ext_shared_channel":false,"event_context":"4-eyJldCI6Im1lc3NhZ2UiLCJ0aWQiOiJUMDEwUVM3VVFOQSIsImFpZCI6IkEwOTlMQUNBQjJSIiwiY2lkIjoiRDA5QTBMRkhLOFIifQ"},"type":"events_api","accepts_response_payload":false,"retry_attempt":0,"retry_reason":""})
2025-08-22 15:10:31,228 - slack_bolt.App - DEBUG - [client.py:99] - A new message enqueued (current queue size: 1)
2025-08-22 15:10:31,228 - slack_bolt.App - DEBUG - [client.py:105] - A message dequeued (current queue size: 0)
2025-08-22 15:10:31,229 - slack_bolt.App - DEBUG - [client.py:125] - Message processing started (type: events_api, envelope_id: 4f8cb816-2af3-4f34-8edb-e9df14525cf3)
2025-08-22 15:10:31,229 - slack_bolt.App - DEBUG - [app.py:476] - Applying slack_bolt.middleware.ssl_check.ssl_check.SslCheck
2025-08-22 15:10:31,229 - slack_bolt.App - DEBUG - [app.py:476] - Applying slack_bolt.middleware.request_verification.request_verification.RequestVerification
2025-08-22 15:10:31,229 - slack_bolt.App - DEBUG - [app.py:476] - Applying slack_bolt.middleware.authorization.single_team_authorization.SingleTeamAuthorization
2025-08-22 15:10:31,229 - slack_bolt.App - DEBUG - [app.py:476] - Applying slack_bolt.middleware.ignoring_self_events.ignoring_self_events.IgnoringSelfEvents
2025-08-22 15:10:31,229 - slack_bolt.IgnoringSelfEvents - DEBUG - [ignoring_self_events.py:60] - Skipped self event: {'user': 'U099R6WTZ9S', 'type': 'message', 'ts': '1755900630.335839', 'bot_id': 'B099R6WTRU4', 'app_id': 'A099LACAB2R', 'text': 'Your Question:\n&gt; How can i run an automated test on a local Android phone? Answer:\nTo run an automated test on a local Android phone, you will need to configure your test environment and execute specific commands. Here\'s a breakdown of the steps and configurations involved:\n\n1. Configuration (according to ):\nUpdate `resources/config.properties`: In the `mqe-hob-mobile-tests` module, add or modify the following properties:\n       `Platform=ANDROID`\n       `Locale=en-us` (for running tests in domestic locales)\n       `MobileDeviceCategory=PHONE`\n       `DeviceStartOrientation=PORTRAIT`\n       `DebugDeviceID=` (add the device ID of your emulator or real device, which you can find by typing `adb devices` in the terminal)\n       `ClientID=` (your machine\'s serial number for local executions or to target a specific private lab machine)\n       Ensure `ServerURL` is set, potentially with your user key, e.g., `<https://www.synergyserver.tech?key=&lt;your_user_key>&gt;`. Set `AppPackageUrl` to the URL of your build (this will be set later once the build is uploaded to the server). `AppBuildType=DEBUG`\n       `DebugProxyPort=9999`\n       Other parameters like `RerunOnFailure`, `SendChatReport`, `SendEmailReport`, and `SlackChannelName` can be configured as needed. Connect to VPN: Ensure you are connected to the VPN (e.g., `<http://connect.cbsinteractive.com/VPNFT`|connect.cbsinteractive.com/VPNFT`>). Synergy Server: Download the latest version of the Synergy server and run the `.jar` file (Websocket). 2. Running the Test:\nOnce configured, you have a few options to run the test:\n\n   From Terminal (according to ):\n    Open your IDE terminal window and enter the following command:\n    ```bash\n    mvn clean test -pl mqe-hob-mobile-tests -am -Dgroups=Your test case number or tag\n    ```\n\n   From `TestNGSuiteConfig.xml` (according to ):\n    Navigate to the `TestNGSuiteConfig.xml` file, right-click, and select "run TestNGSuiteConfig.xml". You\'ll need to provide the necessary test case ID or tag name in the `&lt;include name="" /&gt;` section within the `&lt;groups&gt;` and `&lt;run&gt;` tags.\n\n_(message continued in thread...)_', 'team': 'T010QS7UQNA', 'bot_profile': {'id': 'B099R6WTRU4', 'deleted': False, 'name': 'AutoBot', 'updated': 1754677948, 'app_id': 'A099LACAB2R', 'user_id': 'U099R6WTZ9S', 'icons': {'image_36': 'https://a.slack-edge.com/80588/img/plugins/app/bot_36.png', 'image_48': 'https://a.slack-edge.com/80588/img/plugins/app/bot_48.png', 'image_72': 'https://a.slack-edge.com/80588/img/plugins/app/service_72.png'}, 'team_id': 'T010QS7UQNA'}, 'thread_ts': '1755900618.132309', 'parent_user_id': 'U01RMTFMALF', 'blocks': [{'type': 'rich_text', 'block_id': 'GvS', 'elements': [{'type': 'rich_text_section', 'elements': [{'type': 'text', 'text': 'Your Question:'}]}, {'type': 'rich_text_quote', 'elements': [{'type': 'text', 'text': 'How can i run an automated test on a local Android phone? Answer:'}]}, {'type': 'rich_text_section', 'elements': [{'type': 'text', 'text': "To run an automated test on a local Android phone, you will need to configure your test environment and execute specific commands. Here's a breakdown of the steps and configurations involved:\n\n1. Configuration (according to ):\nUpdate "}, {'type': 'text', 'text': 'resources/config.properties', 'style': {'code': True}}, {'type': 'text', 'text': ': In the '}, {'type': 'text', 'text': 'mqe-hob-mobile-tests', 'style': {'code': True}}, {'type': 'text', 'text': ' module, add or modify the following properties:\n       '}, {'type': 'text', 'text': 'Platform=ANDROID', 'style': {'code': True}}, {'type': 'text', 'text': '\n       '}, {'type': 'text', 'text': 'Locale=en-us', 'style': {'code': True}}, {'type': 'text', 'text': ' (for running tests in domestic locales)\n       '}, {'type': 'text', 'text': 'MobileDeviceCategory=PHONE', 'style': {'code': True}}, {'type': 'text', 'text': '\n       '}, {'type': 'text', 'text': 'DeviceStartOrientation=PORTRAIT', 'style': {'code': True}}, {'type': 'text', 'text': '\n       '}, {'type': 'text', 'text': 'DebugDeviceID=', 'style': {'code': True}}, {'type': 'text', 'text': ' (add the device ID of your emulator or real device, which you can find by typing '}, {'type': 'text', 'text': 'adb devices', 'style': {'code': True}}, {'type': 'text', 'text': ' in the terminal)\n       '}, {'type': 'text', 'text': 'ClientID=', 'style': {'code': True}}, {'type': 'text', 'text': " (your machine's serial number for local executions or to target a specific private lab machine)\n       Ensure "}, {'type': 'text', 'text': 'ServerURL', 'style': {'code': True}}, {'type': 'text', 'text': ' is set, potentially with your user key, e.g., '}, {'type': 'link', 'url': 'https://www.synergyserver.tech?key=&lt;your_user_key', 'text': 'https://www.synergyserver.tech?key=<your_user_key', 'style': {'code': True}}, {'type': 'text', 'text': '>', 'style': {'code': True}}, {'type': 'text', 'text': '. Set '}, {'type': 'text', 'text': 'AppPackageUrl', 'style': {'code': True}}, {'type': 'text', 'text': ' to the URL of your build (this will be set later once the build is uploaded to the server). '}, {'type': 'text', 'text': 'AppBuildType=DEBUG', 'style': {'code': True}}, {'type': 'text', 'text': '\n       '}, {'type': 'text', 'text': 'DebugProxyPort=9999', 'style': {'code': True}}, {'type': 'text', 'text': '\n       Other parameters like '}, {'type': 'text', 'text': 'RerunOnFailure', 'style': {'code': True}}, {'type': 'text', 'text': ', '}, {'type': 'text', 'text': 'SendChatReport', 'style': {'code': True}}, {'type': 'text', 'text': ', '}, {'type': 'text', 'text': 'SendEmailReport', 'style': {'code': True}}, {'type': 'text', 'text': ', and '}, {'type': 'text', 'text': 'SlackChannelName', 'style': {'code': True}}, {'type': 'text', 'text': ' can be configured as needed. Connect to VPN: Ensure you are connected to the VPN (e.g., '}, {'type': 'link', 'url': 'http://connect.cbsinteractive.com/VPNFT`', 'text': 'connect.cbsinteractive.com/VPNFT`', 'style': {'code': True}}, {'type': 'text', 'text': '). Synergy Server: Download the latest version of the Synergy server and run the ', 'style': {'code': True}}, {'type': 'text', 'text': '.jar` file (Websocket). 2. Running the Test:\nOnce configured, you have a few options to run the test:\n\n   From Terminal (according to ):\n    Open your IDE terminal window and enter the following command:\n    '}]}, {'type': 'rich_text_preformatted', 'elements': [{'type': 'text', 'text': 'bash\n    mvn clean test -pl mqe-hob-mobile-tests -am -Dgroups=Your test case number or tag\n    '}]}, {'type': 'rich_text_section', 'elements': [{'type': 'text', 'text': '\n\n   From '}, {'type': 'text', 'text': 'TestNGSuiteConfig.xml', 'style': {'code': True}}, {'type': 'text', 'text': ' (according to ):\n    Navigate to the '}, {'type': 'text', 'text': 'TestNGSuiteConfig.xml', 'style': {'code': True}}, {'type': 'text', 'text': ' file, right-click, and select "run TestNGSuiteConfig.xml". You\'ll need to provide the necessary test case ID or tag name in the '}, {'type': 'text', 'text': '<include name="" />', 'style': {'code': True}}, {'type': 'text', 'text': ' section within the '}, {'type': 'text', 'text': '<groups>', 'style': {'code': True}}, {'type': 'text', 'text': ' and '}, {'type': 'text', 'text': '<run>', 'style': {'code': True}}, {'type': 'text', 'text': ' tags.\n\n'}, {'type': 'text', 'text': '(message continued in thread...)', 'style': {'italic': True}}]}]}], 'channel': 'D09A0LFHK8R', 'event_ts': '1755900630.335839', 'channel_type': 'im'}
2025-08-22 15:10:31,230 - slack_bolt.App - DEBUG - [client.py:200] - Sending a message (session id: 2b786a3c-37d2-418b-919d-b93228b5d82f, message: {"envelope_id": "4f8cb816-2af3-4f34-8edb-e9df14525cf3"})
2025-08-22 15:10:31,230 - slack_bolt.App - DEBUG - [internals.py:41] - Response time: 1 milliseconds
2025-08-22 15:10:31,230 - slack_bolt.App - DEBUG - [client.py:150] - Message processing completed (type: events_api, envelope_id: 4f8cb816-2af3-4f34-8edb-e9df14525cf3)
2025-08-22 15:10:31,974 - slack_bolt.App - DEBUG - [client.py:235] - on_message invoked: (message: {"envelope_id":"3da15c61-987c-494f-8df5-dc9298235cf8","payload":{"token":"yq71khZBCyJF1Ri2hG5aNqr5","team_id":"T010QS7UQNA","enterprise_id":"ERV4P7NAD","context_team_id":null,"context_enterprise_id":"ERV4P7NAD","api_app_id":"A099LACAB2R","event":{"user":"U099R6WTZ9S","type":"message","ts":"1755900630.736299","bot_id":"B099R6WTRU4","app_id":"A099LACAB2R","text":"_(part 2\/2)_\n\nFor example:\n    ```xml\n    &lt;test verbose=\"1\" name=\"All Mobile Tests\" annotations=\"JDK\"&gt;\n        &lt;groups&gt;\n            &lt;run&gt;\n                &lt;include name=\"Debug\"\/&gt;\n                &lt;exclude name=\"Broken\"\/&gt;\n            &lt;\/run&gt;\n        &lt;\/groups&gt;\n    &lt;\/test&gt;\n    ```\n\nAdditional Information:\n\n   Run Configuration Arguments (according to ):\n    For local Android runs, common arguments include:\n       `-Ddriver=android`\n       `-DplatformName=Android`\n       `-DplatformVersion=11.0` (or your desired version)\n       `-DdeviceName=\"Google Pixel 2XL\"` (or your device name)\n       `-Denvironment=local`\n       `-Dapp=\"\/pathToPackage\/mobile-8.0.44-210804410-3.5.25-paramountPlus-playStore-release.apk\"` (path to your application package)\n       `-Dudid=` (set this if running on a real mobile device)\n\n   Appium Server and Emulator (according to ):\n    A `SampleTest.java` class is available that can instantiate the mobile driver, start\/stop the Appium server, and start\/stop the Android Emulator. The system can automatically launch the emulator if the environment is set to \"local\" and the driver is \"android\". Android Home Environment Variable (according to ):\n    For Android Emulator runs, ensure your Run Configuration has the `$ANDROID_HOME` environment variable set and included in the path. These steps should help you set up and run automated tests on your local Android phone. \u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\n:books: Sources:\n1. <https:\/\/paramount.atlassian.net\/wiki\/spaces\/PLQA\/pages\/47720266>\n2. <https:\/\/paramount.atlassian.net\/wiki\/spaces\/PLQA\/pages\/47711460>\n3. <https:\/\/paramount.atlassian.net\/wiki\/spaces\/PLQA\/pages\/47713566>","team":"T010QS7UQNA","bot_profile":{"id":"B099R6WTRU4","deleted":false,"name":"AutoBot","updated":1754677948,"app_id":"A099LACAB2R","user_id":"U099R6WTZ9S","icons":{"image_36":"https:\/\/a.slack-edge.com\/80588\/img\/plugins\/app\/bot_36.png","image_48":"https:\/\/a.slack-edge.com\/80588\/img\/plugins\/app\/bot_48.png","image_72":"https:\/\/a.slack-edge.com\/80588\/img\/plugins\/app\/service_72.png"},"team_id":"T010QS7UQNA"},"thread_ts":"1755900618.132309","parent_user_id":"U01RMTFMALF","blocks":[{"type":"rich_text","block_id":"=S4xW","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"(part 2\/2)","style":{"italic":true}},{"type":"text","text":"\n\nFor example:\n    "}]},{"type":"rich_text_preformatted","elements":[{"type":"text","text":"xml\n    <test verbose=\"1\" name=\"All Mobile Tests\" annotations=\"JDK\">\n        <groups>\n            <run>\n                <include name=\"Debug\"\/>\n                <exclude name=\"Broken\"\/>\n            <\/run>\n        <\/groups>\n    <\/test>\n    "}]},{"type":"rich_text_section","elements":[{"type":"text","text":"\n\nAdditional Information:\n\n   Run Configuration Arguments (according to ):\n    For local Android runs, common arguments include:\n       "},{"type":"text","text":"-Ddriver=android","style":{"code":true}},{"type":"text","text":"\n       "},{"type":"text","text":"-DplatformName=Android","style":{"code":true}},{"type":"text","text":"\n       "},{"type":"text","text":"-DplatformVersion=11.0","style":{"code":true}},{"type":"text","text":" (or your desired version)\n       "},{"type":"text","text":"-DdeviceName=\"Google Pixel 2XL\"","style":{"code":true}},{"type":"text","text":" (or your device name)\n       "},{"type":"text","text":"-Denvironment=local","style":{"code":true}},{"type":"text","text":"\n       "},{"type":"text","text":"-Dapp=\"\/pathToPackage\/mobile-8.0.44-210804410-3.5.25-paramountPlus-playStore-release.apk\"","style":{"code":true}},{"type":"text","text":" (path to your application package)\n       "},{"type":"text","text":"-Dudid=","style":{"code":true}},{"type":"text","text":" (set this if running on a real mobile device)\n\n   Appium Server and Emulator (according to ):\n    A "},{"type":"text","text":"SampleTest.java","style":{"code":true}},{"type":"text","text":" class is available that can instantiate the mobile driver, start\/stop the Appium server, and start\/stop the Android Emulator. The system can automatically launch the emulator if the environment is set to \"local\" and the driver is \"android\". Android Home Environment Variable (according to ):\n    For Android Emulator runs, ensure your Run Configuration has the "},{"type":"text","text":"$ANDROID_HOME","style":{"code":true}},{"type":"text","text":" environment variable set and included in the path. These steps should help you set up and run automated tests on your local Android phone. \u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\n"},{"type":"emoji","name":"books","unicode":"1f4da"},{"type":"text","text":" Sources:\n1. "},{"type":"link","url":"https:\/\/paramount.atlassian.net\/wiki\/spaces\/PLQA\/pages\/47720266"},{"type":"text","text":"\n2. "},{"type":"link","url":"https:\/\/paramount.atlassian.net\/wiki\/spaces\/PLQA\/pages\/47711460"},{"type":"text","text":"\n3. "},{"type":"link","url":"https:\/\/paramount.atlassian.net\/wiki\/spaces\/PLQA\/pages\/47713566"}]}]}],"channel":"D09A0LFHK8R","event_ts":"1755900630.736299","channel_type":"im"},"type":"event_callback","event_id":"Ev09BAC4UQ4X","event_time":1755900630,"authorizations":[{"enterprise_id":"ERV4P7NAD","team_id":"T010QS7UQNA","user_id":"U099R6WTZ9S","is_bot":true,"is_enterprise_install":false}],"is_ext_shared_channel":false,"event_context":"4-eyJldCI6Im1lc3NhZ2UiLCJ0aWQiOiJUMDEwUVM3VVFOQSIsImFpZCI6IkEwOTlMQUNBQjJSIiwiY2lkIjoiRDA5QTBMRkhLOFIifQ"},"type":"events_api","accepts_response_payload":false,"retry_attempt":0,"retry_reason":""})
2025-08-22 15:10:31,975 - slack_bolt.App - DEBUG - [client.py:99] - A new message enqueued (current queue size: 1)
2025-08-22 15:10:31,975 - slack_bolt.App - DEBUG - [client.py:105] - A message dequeued (current queue size: 0)
2025-08-22 15:10:31,975 - slack_bolt.App - DEBUG - [client.py:125] - Message processing started (type: events_api, envelope_id: 3da15c61-987c-494f-8df5-dc9298235cf8)
2025-08-22 15:10:31,975 - slack_bolt.App - DEBUG - [app.py:476] - Applying slack_bolt.middleware.ssl_check.ssl_check.SslCheck
2025-08-22 15:10:31,976 - slack_bolt.App - DEBUG - [app.py:476] - Applying slack_bolt.middleware.request_verification.request_verification.RequestVerification
2025-08-22 15:10:31,976 - slack_bolt.App - DEBUG - [app.py:476] - Applying slack_bolt.middleware.authorization.single_team_authorization.SingleTeamAuthorization
2025-08-22 15:10:31,976 - slack_bolt.App - DEBUG - [app.py:476] - Applying slack_bolt.middleware.ignoring_self_events.ignoring_self_events.IgnoringSelfEvents
2025-08-22 15:10:31,976 - slack_bolt.IgnoringSelfEvents - DEBUG - [ignoring_self_events.py:60] - Skipped self event: {'user': 'U099R6WTZ9S', 'type': 'message', 'ts': '1755900630.736299', 'bot_id': 'B099R6WTRU4', 'app_id': 'A099LACAB2R', 'text': '_(part 2/2)_\n\nFor example:\n    ```xml\n    &lt;test verbose="1" name="All Mobile Tests" annotations="JDK"&gt;\n        &lt;groups&gt;\n            &lt;run&gt;\n                &lt;include name="Debug"/&gt;\n                &lt;exclude name="Broken"/&gt;\n            &lt;/run&gt;\n        &lt;/groups&gt;\n    &lt;/test&gt;\n    ```\n\nAdditional Information:\n\n   Run Configuration Arguments (according to ):\n    For local Android runs, common arguments include:\n       `-Ddriver=android`\n       `-DplatformName=Android`\n       `-DplatformVersion=11.0` (or your desired version)\n       `-DdeviceName="Google Pixel 2XL"` (or your device name)\n       `-Denvironment=local`\n       `-Dapp="/pathToPackage/mobile-8.0.44-210804410-3.5.25-paramountPlus-playStore-release.apk"` (path to your application package)\n       `-Dudid=` (set this if running on a real mobile device)\n\n   Appium Server and Emulator (according to ):\n    A `SampleTest.java` class is available that can instantiate the mobile driver, start/stop the Appium server, and start/stop the Android Emulator. The system can automatically launch the emulator if the environment is set to "local" and the driver is "android". Android Home Environment Variable (according to ):\n    For Android Emulator runs, ensure your Run Configuration has the `$ANDROID_HOME` environment variable set and included in the path. These steps should help you set up and run automated tests on your local Android phone. ────────────────────────────────────────\n:books: Sources:\n1. <https://paramount.atlassian.net/wiki/spaces/PLQA/pages/47720266>\n2. <https://paramount.atlassian.net/wiki/spaces/PLQA/pages/47711460>\n3. <https://paramount.atlassian.net/wiki/spaces/PLQA/pages/47713566>', 'team': 'T010QS7UQNA', 'bot_profile': {'id': 'B099R6WTRU4', 'deleted': False, 'name': 'AutoBot', 'updated': 1754677948, 'app_id': 'A099LACAB2R', 'user_id': 'U099R6WTZ9S', 'icons': {'image_36': 'https://a.slack-edge.com/80588/img/plugins/app/bot_36.png', 'image_48': 'https://a.slack-edge.com/80588/img/plugins/app/bot_48.png', 'image_72': 'https://a.slack-edge.com/80588/img/plugins/app/service_72.png'}, 'team_id': 'T010QS7UQNA'}, 'thread_ts': '1755900618.132309', 'parent_user_id': 'U01RMTFMALF', 'blocks': [{'type': 'rich_text', 'block_id': '=S4xW', 'elements': [{'type': 'rich_text_section', 'elements': [{'type': 'text', 'text': '(part 2/2)', 'style': {'italic': True}}, {'type': 'text', 'text': '\n\nFor example:\n    '}]}, {'type': 'rich_text_preformatted', 'elements': [{'type': 'text', 'text': 'xml\n    <test verbose="1" name="All Mobile Tests" annotations="JDK">\n        <groups>\n            <run>\n                <include name="Debug"/>\n                <exclude name="Broken"/>\n            </run>\n        </groups>\n    </test>\n    '}]}, {'type': 'rich_text_section', 'elements': [{'type': 'text', 'text': '\n\nAdditional Information:\n\n   Run Configuration Arguments (according to ):\n    For local Android runs, common arguments include:\n       '}, {'type': 'text', 'text': '-Ddriver=android', 'style': {'code': True}}, {'type': 'text', 'text': '\n       '}, {'type': 'text', 'text': '-DplatformName=Android', 'style': {'code': True}}, {'type': 'text', 'text': '\n       '}, {'type': 'text', 'text': '-DplatformVersion=11.0', 'style': {'code': True}}, {'type': 'text', 'text': ' (or your desired version)\n       '}, {'type': 'text', 'text': '-DdeviceName="Google Pixel 2XL"', 'style': {'code': True}}, {'type': 'text', 'text': ' (or your device name)\n       '}, {'type': 'text', 'text': '-Denvironment=local', 'style': {'code': True}}, {'type': 'text', 'text': '\n       '}, {'type': 'text', 'text': '-Dapp="/pathToPackage/mobile-8.0.44-210804410-3.5.25-paramountPlus-playStore-release.apk"', 'style': {'code': True}}, {'type': 'text', 'text': ' (path to your application package)\n       '}, {'type': 'text', 'text': '-Dudid=', 'style': {'code': True}}, {'type': 'text', 'text': ' (set this if running on a real mobile device)\n\n   Appium Server and Emulator (according to ):\n    A '}, {'type': 'text', 'text': 'SampleTest.java', 'style': {'code': True}}, {'type': 'text', 'text': ' class is available that can instantiate the mobile driver, start/stop the Appium server, and start/stop the Android Emulator. The system can automatically launch the emulator if the environment is set to "local" and the driver is "android". Android Home Environment Variable (according to ):\n    For Android Emulator runs, ensure your Run Configuration has the '}, {'type': 'text', 'text': '$ANDROID_HOME', 'style': {'code': True}}, {'type': 'text', 'text': ' environment variable set and included in the path. These steps should help you set up and run automated tests on your local Android phone. ────────────────────────────────────────\n'}, {'type': 'emoji', 'name': 'books', 'unicode': '1f4da'}, {'type': 'text', 'text': ' Sources:\n1. '}, {'type': 'link', 'url': 'https://paramount.atlassian.net/wiki/spaces/PLQA/pages/47720266'}, {'type': 'text', 'text': '\n2. '}, {'type': 'link', 'url': 'https://paramount.atlassian.net/wiki/spaces/PLQA/pages/47711460'}, {'type': 'text', 'text': '\n3. '}, {'type': 'link', 'url': 'https://paramount.atlassian.net/wiki/spaces/PLQA/pages/47713566'}]}]}], 'channel': 'D09A0LFHK8R', 'event_ts': '1755900630.736299', 'channel_type': 'im'}
2025-08-22 15:10:31,977 - slack_bolt.App - DEBUG - [client.py:200] - Sending a message (session id: 2b786a3c-37d2-418b-919d-b93228b5d82f, message: {"envelope_id": "3da15c61-987c-494f-8df5-dc9298235cf8"})
2025-08-22 15:10:31,977 - slack_bolt.App - DEBUG - [internals.py:41] - Response time: 1 milliseconds
2025-08-22 15:10:31,977 - slack_bolt.App - DEBUG - [client.py:150] - Message processing completed (type: events_api, envelope_id: 3da15c61-987c-494f-8df5-dc9298235cf8)
2025-08-22 15:11:35,052 - slack_bolt.App - DEBUG - [client.py:235] - on_message invoked: (message: {"envelope_id":"3f8c9ce6-1cae-43a5-91be-f83b3f26b21b","payload":{"token":"yq71khZBCyJF1Ri2hG5aNqr5","team_id":"T010QS7UQNA","enterprise_id":"ERV4P7NAD","context_team_id":null,"context_enterprise_id":"ERV4P7NAD","api_app_id":"A099LACAB2R","event":{"user":"U01RMTFMALF","type":"message","ts":"1755900693.930409","client_msg_id":"dfd021fa-0f7f-4f37-acf2-4671672ed8dc","text":"How can i run an automated test on a local Android phone?","blocks":[{"type":"rich_text","block_id":"vQwBP","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"How can i run an automated test on a local Android phone?"}]}]}],"channel":"D09A0LFHK8R","event_ts":"1755900693.930409","channel_type":"im"},"type":"event_callback","event_id":"Ev09CGQZET9N","event_time":1755900693,"authorizations":[{"enterprise_id":"ERV4P7NAD","team_id":"T010QS7UQNA","user_id":"U099R6WTZ9S","is_bot":true,"is_enterprise_install":false}],"is_ext_shared_channel":false,"event_context":"4-eyJldCI6Im1lc3NhZ2UiLCJ0aWQiOiJUMDEwUVM3VVFOQSIsImFpZCI6IkEwOTlMQUNBQjJSIiwiY2lkIjoiRDA5QTBMRkhLOFIifQ"},"type":"events_api","accepts_response_payload":false,"retry_attempt":0,"retry_reason":""})
2025-08-22 15:11:35,053 - slack_bolt.App - DEBUG - [client.py:99] - A new message enqueued (current queue size: 1)
2025-08-22 15:11:35,053 - slack_bolt.App - DEBUG - [client.py:105] - A message dequeued (current queue size: 0)
2025-08-22 15:11:35,054 - slack_bolt.App - DEBUG - [client.py:125] - Message processing started (type: events_api, envelope_id: 3f8c9ce6-1cae-43a5-91be-f83b3f26b21b)
2025-08-22 15:11:35,054 - slack_bolt.App - DEBUG - [app.py:476] - Applying slack_bolt.middleware.ssl_check.ssl_check.SslCheck
2025-08-22 15:11:35,054 - slack_bolt.App - DEBUG - [app.py:476] - Applying slack_bolt.middleware.request_verification.request_verification.RequestVerification
2025-08-22 15:11:35,054 - slack_bolt.App - DEBUG - [app.py:476] - Applying slack_bolt.middleware.authorization.single_team_authorization.SingleTeamAuthorization
2025-08-22 15:11:35,054 - slack_bolt.App - DEBUG - [app.py:476] - Applying slack_bolt.middleware.ignoring_self_events.ignoring_self_events.IgnoringSelfEvents
2025-08-22 15:11:35,054 - slack_bolt.App - DEBUG - [app.py:476] - Applying slack_bolt.middleware.url_verification.url_verification.UrlVerification
2025-08-22 15:11:35,055 - slack_bolt.App - DEBUG - [app.py:500] - Checking listener: handle_app_mentions ...
2025-08-22 15:11:35,055 - slack_bolt.App - DEBUG - [app.py:500] - Checking listener: help_message ...
2025-08-22 15:11:35,055 - slack_bolt.App - DEBUG - [app.py:500] - Checking listener: handle_dm_messages ...
2025-08-22 15:11:35,055 - slack_bolt.App - DEBUG - [app.py:522] - Running listener: handle_dm_messages ...
2025-08-22 15:11:35,055 - slack_bolt.App - DEBUG - [thread_runner.py:198] - Responding with status: 200 body: "" (0 millis)
2025-08-22 15:11:35,056 - __main__ - INFO - [main.py:497] - === DM MESSAGE EVENT RECEIVED ===
2025-08-22 15:11:35,056 - slack_bolt.App - DEBUG - [client.py:200] - Sending a message (session id: 2b786a3c-37d2-418b-919d-b93228b5d82f, message: {"envelope_id": "3f8c9ce6-1cae-43a5-91be-f83b3f26b21b"})
2025-08-22 15:11:35,056 - __main__ - DEBUG - [main.py:498] - Full event body: {'token': 'yq71khZBCyJF1Ri2hG5aNqr5', 'team_id': 'T010QS7UQNA', 'enterprise_id': 'ERV4P7NAD', 'context_team_id': None, 'context_enterprise_id': 'ERV4P7NAD', 'api_app_id': 'A099LACAB2R', 'event': {'user': 'U01RMTFMALF', 'type': 'message', 'ts': '1755900693.930409', 'client_msg_id': 'dfd021fa-0f7f-4f37-acf2-4671672ed8dc', 'text': 'How can i run an automated test on a local Android phone?', 'blocks': [{'type': 'rich_text', 'block_id': 'vQwBP', 'elements': [{'type': 'rich_text_section', 'elements': [{'type': 'text', 'text': 'How can i run an automated test on a local Android phone?'}]}]}], 'channel': 'D09A0LFHK8R', 'event_ts': '1755900693.930409', 'channel_type': 'im'}, 'type': 'event_callback', 'event_id': 'Ev09CGQZET9N', 'event_time': 1755900693, 'authorizations': [{'enterprise_id': 'ERV4P7NAD', 'team_id': 'T010QS7UQNA', 'user_id': 'U099R6WTZ9S', 'is_bot': True, 'is_enterprise_install': False}], 'is_ext_shared_channel': False, 'event_context': '4-eyJldCI6Im1lc3NhZ2UiLCJ0aWQiOiJUMDEwUVM3VVFOQSIsImFpZCI6IkEwOTlMQUNBQjJSIiwiY2lkIjoiRDA5QTBMRkhLOFIifQ'}
2025-08-22 15:11:35,056 - __main__ - INFO - [main.py:507] - DM Event details: channel=D09A0LFHK8R, user=U01RMTFMALF, ts=1755900693.930409
2025-08-22 15:11:35,056 - slack_bolt.App - DEBUG - [internals.py:41] - Response time: 2 milliseconds
2025-08-22 15:11:35,056 - __main__ - DEBUG - [main.py:508] - DM Event text: How can i run an automated test on a local Android phone?
2025-08-22 15:11:35,056 - slack_bolt.App - DEBUG - [client.py:150] - Message processing completed (type: events_api, envelope_id: 3f8c9ce6-1cae-43a5-91be-f83b3f26b21b)
2025-08-22 15:11:35,056 - utils - DEBUG - [utils.py:27] - Checking message processing: channel=D09A0LFHK8R, ts=1755900693.930409, text='How can i run an automated test on a local Android...'
2025-08-22 15:11:35,056 - utils - DEBUG - [utils.py:31] - Message hash: 994c7b7092507b7866c6f2a01c6ee90c
2025-08-22 15:11:35,056 - utils - DEBUG - [utils.py:42] - Cleaning up 1 expired message entries
2025-08-22 15:11:35,056 - utils - DEBUG - [utils.py:53] - Added message to processing cache (total entries: 1)
2025-08-22 15:11:35,056 - __main__ - DEBUG - [main.py:521] - Bot check: bot_id=None, user_id=U01RMTFMALF
2025-08-22 15:11:35,056 - __main__ - DEBUG - [main.py:526] - Question received: 'How can i run an automated test on a local Android phone?'
2025-08-22 15:11:35,056 - __main__ - DEBUG - [main.py:532] - Checking user access for DM...
2025-08-22 15:11:35,057 - auth.slack_user_info - DEBUG - [slack_user_info.py:44] - Using cached email for user U01RMTFMALF
2025-08-22 15:11:35,057 - auth.email_whitelist - DEBUG - [email_whitelist.py:57] - Email access granted: alexandr.popov@paramount.com
2025-08-22 15:11:35,057 - __main__ - INFO - [main.py:118] - Access granted to user U01RMTFMALF with email alexandr.popov@paramount.com
2025-08-22 15:11:35,057 - __main__ - DEBUG - [main.py:538] - User access check passed for DM
2025-08-22 15:11:35,057 - __main__ - INFO - [main.py:540] - Processing DM question from user U01RMTFMALF: How can i run an automated test on a local Android phone?
2025-08-22 15:11:35,057 - __main__ - DEBUG - [main.py:543] - Starting DM processing...
2025-08-22 15:11:35,057 - __main__ - DEBUG - [main.py:546] - Checking if 'how can i run an automated test on a local android phone?' is an admin command in DM
2025-08-22 15:11:35,057 - __main__ - DEBUG - [main.py:582] - Checking if DM thread is already being processed...
2025-08-22 15:11:35,057 - utils - DEBUG - [utils.py:67] - Managing thread: D09A0LFHK8R:1755900693.930409, action: add, user: U01RMTFMALF
2025-08-22 15:11:35,057 - utils - INFO - [utils.py:94] - Added thread D09A0LFHK8R:1755900693.930409 to active tracking (total: 1)
2025-08-22 15:11:35,057 - __main__ - DEBUG - [main.py:587] - DM thread management check passed
2025-08-22 15:11:35,057 - slack_sdk.web.base_client - DEBUG - [base_client.py:255] - Sending a request - url: https://slack.com/api/reactions.add, query_params: {}, body_params: {'channel': 'D09A0LFHK8R', 'name': 'thinking_face', 'timestamp': '1755900693.930409', 'team_id': 'T010QS7UQNA'}, files: {}, json_body: None, headers: {'Content-Type': 'application/x-www-form-urlencoded', 'Authorization': '(redacted)', 'User-Agent': 'Python/3.12.0 slackclient/3.34.0 Darwin/23.4.0'}
2025-08-22 15:11:35,431 - slack_sdk.web.base_client - DEBUG - [base_client.py:546] - Received the following response - status: 200, headers: {'date': 'Fri, 22 Aug 2025 22:11:35 GMT', 'server': 'Apache', 'vary': 'Accept-Encoding', 'x-slack-req-id': '4b1fd28e0517c3b1e2f8ba87838754cb', 'x-content-type-options': 'nosniff', 'x-xss-protection': '0', 'pragma': 'no-cache', 'cache-control': 'private, no-cache, no-store, must-revalidate', 'expires': 'Sat, 26 Jul 1997 05:00:00 GMT', 'content-type': 'application/json; charset=utf-8', 'x-accepted-oauth-scopes': 'reactions:write', 'x-oauth-scopes': 'app_mentions:read,channels:history,chat:write,im:history,im:read,im:write,users:read,reactions:write,users:read.email', 'access-control-expose-headers': 'x-slack-req-id, retry-after', 'access-control-allow-headers': 'slack-route, x-slack-version-ts, x-b3-traceid, x-b3-spanid, x-b3-parentspanid, x-b3-sampled, x-b3-flags', 'strict-transport-security': 'max-age=31536000; includeSubDomains; preload', 'referrer-policy': 'no-referrer', 'x-slack-unique-id': 'aKjrFzb_BfaZRhG-oW57cgAAED4', 'x-slack-backend': 'r', 'access-control-allow-origin': '*', 'content-length': '11', 'via': '1.1 slack-prod.tinyspeck.com, envoy-www-iad-utphqydv,envoy-edge-pdx-luzrhlzz', 'x-envoy-attempt-count': '1', 'x-envoy-upstream-service-time': '153', 'x-backend': 'main_normal main_canary_with_overflow main_control_with_overflow', 'x-server': 'slack-www-hhvm-main-iad-ilcy', 'x-slack-shared-secret-outcome': 'no-match', 'x-edge-backend': 'envoy-www', 'timing-allow-origin': '*', 'x-slack-edge-shared-secret-outcome': 'no-match', 'connection': 'close'}, body: {"ok":true}
2025-08-22 15:11:35,431 - __main__ - INFO - [main.py:604] - Processing DM question from <@U01RMTFMALF>: How can i run an automated test on a local Android phone?
2025-08-22 15:11:35,431 - __main__ - INFO - [main.py:608] - Sending DM request to DIG AI...
2025-08-22 15:11:35,431 - dig_connector - INFO - [dig_connector.py:134] - Generating response for query: 'How can i run an automated test on a local Android phone?' with 0 chunks
2025-08-22 15:11:35,431 - dig_connector - DEBUG - [dig_connector.py:138] - Formatted context length: 0
2025-08-22 15:11:35,431 - dig_connector - INFO - [dig_connector.py:141] - No context available, using direct query
2025-08-22 15:11:35,431 - dig_connector - INFO - [dig_connector.py:150] - Sending prompt to DIG platform...
2025-08-22 15:11:35,432 - dig_connector - INFO - [dig_connector.py:121] - Sending message to DIG API - URL: https://ai.digdev.cbsicloud.com/fastapi/chats/892/generate
2025-08-22 15:11:35,432 - dig_connector - DEBUG - [dig_connector.py:122] - Message payload: {'model_id': 42, 'message_text': 'How can i run an automated test on a local Android phone?', 'history': [{'role': 'user', 'content': 'How can i run an automated test on a local Android phone?'}]}
2025-08-22 15:11:42,325 - urllib3.connectionpool - DEBUG - [connectionpool.py:549] - https://ai.digdev.cbsicloud.com:443 "POST /fastapi/chats/892/generate HTTP/1.1" 200 4021
2025-08-22 15:11:42,325 - dig_connector - DEBUG - [dig_connector.py:125] - DIG API response: status=200
2025-08-22 15:11:42,326 - dig_connector - DEBUG - [dig_connector.py:129] - DIG API response data: {'message_text': 'To run an automated test on a local Android phone, you will need to configure your test environment and execute specific commands.\n\nHere\'s a breakdown of the steps and configurations involved:\n\n**1. Configuration (according to Source: https://paramount.atlassian.net/wiki/spaces/PLQA/pages/47720266):**\n\n*   **Update `resources/config.properties`:** In the `mqe-hob-mobile-tests` module, add or modify the following properties:\n    *   `Platform=ANDROID`\n    *   `Locale=en-us` (for running tests in domestic locales)\n    *   `MobileDeviceCategory=PHONE`\n    *   `DeviceStartOrientation=PORTRAIT`\n    *   `DebugDeviceID=` (add the device ID of your emulator or real device, which you can find by typing `adb devices` in the terminal)\n    *   `ClientID=` (your machine\'s serial number for local executions or to target a specific private lab machine)\n    *   Ensure `ServerURL` is set, potentially with your user key, e.g., `https://www.synergyserver.tech?key=<your_user_key>`.\n    *   Set `AppPackageUrl` to the URL of your build (this will be set later once the build is uploaded to the server).\n    *   `AppBuildType=DEBUG`\n    *   `DebugProxyPort=9999`\n    *   Other parameters like `RerunOnFailure`, `SendChatReport`, `SendEmailReport`, and `SlackChannelName` can be configured as needed.\n\n*   **Connect to VPN:** Ensure you are connected to the VPN (e.g., `connect.cbsinteractive.com/VPNFT`).\n*   **Synergy Server:** Download the latest version of the Synergy server and run the `.jar` file (Websocket).\n\n**2. Running the Test:**\n\nOnce configured, you have a few options to run the test:\n\n*   **From Terminal (according to Source: https://paramount.atlassian.net/wiki/spaces/PLQA/pages/47720266):**\n    Open your IDE terminal window and enter the following command:\n    ```bash\n    mvn clean test -pl mqe-hob-mobile-tests -am -Dgroups=Your test case number or tag\n    ```\n\n*   **From `TestNGSuiteConfig.xml` (according to Source: https://paramount.atlassian.net/wiki/spaces/PLQA/pages/47720266):**\n    Navigate to the `TestNGSuiteConfig.xml` file, right-click, and select "run TestNGSuiteConfig.xml". You\'ll need to provide the necessary test case ID or tag name in the `<include name="" />` section within the `<groups>` and `<run>` tags. For example:\n    ```xml\n    <test verbose="1" name="All Mobile Tests" annotations="JDK">\n        <groups>\n            <run>\n                <include name="Debug"/>\n                <exclude name="Broken"/>\n            </run>\n        </groups>\n    </test>\n    ```\n\n**Additional Information:**\n\n*   **Run Configuration Arguments (according to Source: https://paramount.atlassian.net/wiki/spaces/PLQA/pages/47711460):**\n    For local Android runs, common arguments include:\n    *   `-Ddriver=android`\n    *   `-DplatformName=Android`\n    *   `-DplatformVersion=11.0` (or your desired version)\n    *   `-DdeviceName="Google Pixel 2XL"` (or your device name)\n    *   `-Denvironment=local`\n    *   `-Dapp="/pathToPackage/mobile-8.0.44-210804410-3.5.25-paramountPlus-playStore-release.apk"` (path to your application package)\n    *   `-Dudid=` (set this if running on a real mobile device)\n\n*   **Appium Server and Emulator (according to Source: https://paramount.atlassian.net/wiki/spaces/PLQA/pages/47711460):**\n    A `SampleTest.java` class is available that can instantiate the mobile driver, start/stop the Appium server, and start/stop the Android Emulator. The system can automatically launch the emulator if the environment is set to "local" and the driver is "android".\n\n*   **Android Home Environment Variable (according to Source: https://paramount.atlassian.net/wiki/spaces/PLQA/pages/47713566):**\n    For Android Emulator runs, ensure your Run Configuration has the `$ANDROID_HOME` environment variable set and included in the path.\n\nThese steps should help you set up and run automated tests on your local Android phone.', 'requires_approval': False, 'execution_id': 1595}
2025-08-22 15:11:42,326 - dig_connector - INFO - [dig_connector.py:154] - Extracting response content...
2025-08-22 15:11:42,326 - dig_connector - DEBUG - [dig_connector.py:221] - Found message_text in response
2025-08-22 15:11:42,326 - dig_connector - INFO - [dig_connector.py:157] - Successfully generated response (length: 3871)
2025-08-22 15:11:42,326 - __main__ - INFO - [main.py:611] - Received DM response from DIG AI
2025-08-22 15:11:42,327 - __main__ - DEBUG - [main.py:612] - DIG AI DM response: To run an automated test on a local Android phone, you will need to configure your test environment and execute specific commands.

Here's a breakdown of the steps and configurations involved:

**1. Configuration (according to Source: https://paramount.atlassian.net/wiki/spaces/PLQA/pages/47720266):**

*   **Update `resources/config.properties`:** In the `mqe-hob-mobile-tests` module, add or modify the following properties:
    *   `Platform=ANDROID`
    *   `Locale=en-us` (for running tests in domestic locales)
    *   `MobileDeviceCategory=PHONE`
    *   `DeviceStartOrientation=PORTRAIT`
    *   `DebugDeviceID=` (add the device ID of your emulator or real device, which you can find by typing `adb devices` in the terminal)
    *   `ClientID=` (your machine's serial number for local executions or to target a specific private lab machine)
    *   Ensure `ServerURL` is set, potentially with your user key, e.g., `https://www.synergyserver.tech?key=<your_user_key>`.
    *   Set `AppPackageUrl` to the URL of your build (this will be set later once the build is uploaded to the server).
    *   `AppBuildType=DEBUG`
    *   `DebugProxyPort=9999`
    *   Other parameters like `RerunOnFailure`, `SendChatReport`, `SendEmailReport`, and `SlackChannelName` can be configured as needed.

*   **Connect to VPN:** Ensure you are connected to the VPN (e.g., `connect.cbsinteractive.com/VPNFT`).
*   **Synergy Server:** Download the latest version of the Synergy server and run the `.jar` file (Websocket).

**2. Running the Test:**

Once configured, you have a few options to run the test:

*   **From Terminal (according to Source: https://paramount.atlassian.net/wiki/spaces/PLQA/pages/47720266):**
    Open your IDE terminal window and enter the following command:
    ```bash
    mvn clean test -pl mqe-hob-mobile-tests -am -Dgroups=Your test case number or tag
    ```

*   **From `TestNGSuiteConfig.xml` (according to Source: https://paramount.atlassian.net/wiki/spaces/PLQA/pages/47720266):**
    Navigate to the `TestNGSuiteConfig.xml` file, right-click, and select "run TestNGSuiteConfig.xml". You'll need to provide the necessary test case ID or tag name in the `<include name="" />` section within the `<groups>` and `<run>` tags. For example:
    ```xml
    <test verbose="1" name="All Mobile Tests" annotations="JDK">
        <groups>
            <run>
                <include name="Debug"/>
                <exclude name="Broken"/>
            </run>
        </groups>
    </test>
    ```

**Additional Information:**

*   **Run Configuration Arguments (according to Source: https://paramount.atlassian.net/wiki/spaces/PLQA/pages/47711460):**
    For local Android runs, common arguments include:
    *   `-Ddriver=android`
    *   `-DplatformName=Android`
    *   `-DplatformVersion=11.0` (or your desired version)
    *   `-DdeviceName="Google Pixel 2XL"` (or your device name)
    *   `-Denvironment=local`
    *   `-Dapp="/pathToPackage/mobile-8.0.44-210804410-3.5.25-paramountPlus-playStore-release.apk"` (path to your application package)
    *   `-Dudid=` (set this if running on a real mobile device)

*   **Appium Server and Emulator (according to Source: https://paramount.atlassian.net/wiki/spaces/PLQA/pages/47711460):**
    A `SampleTest.java` class is available that can instantiate the mobile driver, start/stop the Appium server, and start/stop the Android Emulator. The system can automatically launch the emulator if the environment is set to "local" and the driver is "android".

*   **Android Home Environment Variable (according to Source: https://paramount.atlassian.net/wiki/spaces/PLQA/pages/47713566):**
    For Android Emulator runs, ensure your Run Configuration has the `$ANDROID_HOME` environment variable set and included in the path.

These steps should help you set up and run automated tests on your local Android phone.
2025-08-22 15:11:42,327 - __main__ - DEBUG - [main.py:616] - Formatted DM response: Your Question:
> How can i run an automated test on a local Android phone?

Answer:
To run an automated test on a local Android phone, you will need to configure your test environment and execute specific commands.

Here's a breakdown of the steps and configurations involved:

1. Configuration (according to ):
Update `resources/config.properties`: In the `mqe-hob-mobile-tests` module, add or modify the following properties:
       `Platform=ANDROID`
       `Locale=en-us` (for running tests in domestic locales)
       `MobileDeviceCategory=PHONE`
       `DeviceStartOrientation=PORTRAIT`
       `DebugDeviceID=` (add the device ID of your emulator or real device, which you can find by typing `adb devices` in the terminal)
       `ClientID=` (your machine's serial number for local executions or to target a specific private lab machine)
       Ensure `ServerURL` is set, potentially with your user key, e.g., `https://www.synergyserver.tech?key=<your_user_key>`.
       Set `AppPackageUrl` to the URL of your build (this will be set later once the build is uploaded to the server).
       `AppBuildType=DEBUG`
       `DebugProxyPort=9999`
       Other parameters like `RerunOnFailure`, `SendChatReport`, `SendEmailReport`, and `SlackChannelName` can be configured as needed.

   Connect to VPN: Ensure you are connected to the VPN (e.g., `connect.cbsinteractive.com/VPNFT`).
   Synergy Server: Download the latest version of the Synergy server and run the `.jar` file (Websocket).

2. Running the Test:
Once configured, you have a few options to run the test:

   From Terminal (according to ):
    Open your IDE terminal window and enter the following command:
    ```bash
    mvn clean test -pl mqe-hob-mobile-tests -am -Dgroups=Your test case number or tag
    ```

   From `TestNGSuiteConfig.xml` (according to ):
    Navigate to the `TestNGSuiteConfig.xml` file, right-click, and select "run TestNGSuiteConfig.xml". You'll need to provide the necessary test case ID or tag name in the `<include name="" />` section within the `<groups>` and `<run>` tags. For example:
    ```xml
    <test verbose="1" name="All Mobile Tests" annotations="JDK">
        <groups>
            <run>
                <include name="Debug"/>
                <exclude name="Broken"/>
            </run>
        </groups>
    </test>
    ```

Additional Information:

   Run Configuration Arguments (according to ):
    For local Android runs, common arguments include:
       `-Ddriver=android`
       `-DplatformName=Android`
       `-DplatformVersion=11.0` (or your desired version)
       `-DdeviceName="Google Pixel 2XL"` (or your device name)
       `-Denvironment=local`
       `-Dapp="/pathToPackage/mobile-8.0.44-210804410-3.5.25-paramountPlus-playStore-release.apk"` (path to your application package)
       `-Dudid=` (set this if running on a real mobile device)

   Appium Server and Emulator (according to ):
    A `SampleTest.java` class is available that can instantiate the mobile driver, start/stop the Appium server, and start/stop the Android Emulator. The system can automatically launch the emulator if the environment is set to "local" and the driver is "android".

   Android Home Environment Variable (according to ):
    For Android Emulator runs, ensure your Run Configuration has the `$ANDROID_HOME` environment variable set and included in the path.

These steps should help you set up and run automated tests on your local Android phone.

────────────────────────────────────────
📚 Sources:
1. https://paramount.atlassian.net/wiki/spaces/PLQA/pages/47720266
2. https://paramount.atlassian.net/wiki/spaces/PLQA/pages/47711460
3. https://paramount.atlassian.net/wiki/spaces/PLQA/pages/47713566

2025-08-22 15:11:42,327 - slack_sdk.web.base_client - DEBUG - [base_client.py:255] - Sending a request - url: https://slack.com/api/reactions.remove, query_params: {}, body_params: {'name': 'thinking_face', 'channel': 'D09A0LFHK8R', 'timestamp': '1755900693.930409', 'team_id': 'T010QS7UQNA'}, files: {}, json_body: None, headers: {'Content-Type': 'application/x-www-form-urlencoded', 'Authorization': '(redacted)', 'User-Agent': 'Python/3.12.0 slackclient/3.34.0 Darwin/23.4.0'}
2025-08-22 15:11:42,696 - slack_sdk.web.base_client - DEBUG - [base_client.py:546] - Received the following response - status: 200, headers: {'date': 'Fri, 22 Aug 2025 22:11:42 GMT', 'server': 'Apache', 'vary': 'Accept-Encoding', 'x-slack-req-id': 'b03364cd56258c9679d5454ef2874d97', 'x-content-type-options': 'nosniff', 'x-xss-protection': '0', 'pragma': 'no-cache', 'cache-control': 'private, no-cache, no-store, must-revalidate', 'expires': 'Sat, 26 Jul 1997 05:00:00 GMT', 'content-type': 'application/json; charset=utf-8', 'x-accepted-oauth-scopes': 'reactions:write', 'x-oauth-scopes': 'app_mentions:read,channels:history,chat:write,im:history,im:read,im:write,users:read,reactions:write,users:read.email', 'access-control-expose-headers': 'x-slack-req-id, retry-after', 'access-control-allow-headers': 'slack-route, x-slack-version-ts, x-b3-traceid, x-b3-spanid, x-b3-parentspanid, x-b3-sampled, x-b3-flags', 'strict-transport-security': 'max-age=31536000; includeSubDomains; preload', 'referrer-policy': 'no-referrer', 'x-slack-unique-id': 'aKjrHqhDGBy_KpQOqv_D8wAAAAE', 'x-slack-backend': 'r', 'access-control-allow-origin': '*', 'content-length': '11', 'via': '1.1 slack-prod.tinyspeck.com, envoy-www-iad-wpvelgkg,envoy-edge-pdx-hvoolpti', 'x-envoy-attempt-count': '1', 'x-envoy-upstream-service-time': '139', 'x-backend': 'main_normal main_canary_with_overflow main_control_with_overflow', 'x-server': 'slack-www-hhvm-main-iad-equl', 'x-slack-shared-secret-outcome': 'no-match', 'x-edge-backend': 'envoy-www', 'timing-allow-origin': '*', 'x-slack-edge-shared-secret-outcome': 'no-match', 'connection': 'close'}, body: {"ok":true}
2025-08-22 15:11:42,698 - slack_sdk.web.base_client - DEBUG - [base_client.py:255] - Sending a request - url: https://slack.com/api/chat.postMessage, query_params: {}, body_params: {}, files: {}, json_body: {'channel': 'D09A0LFHK8R', 'text': 'Your Question:\n> How can i run an automated test on a local Android phone? Answer:\nTo run an automated test on a local Android phone, you will need to configure your test environment and execute specific commands. Here\'s a breakdown of the steps and configurations involved:\n\n1. Configuration (according to ):\nUpdate `resources/config.properties`: In the `mqe-hob-mobile-tests` module, add or modify the following properties:\n       `Platform=ANDROID`\n       `Locale=en-us` (for running tests in domestic locales)\n       `MobileDeviceCategory=PHONE`\n       `DeviceStartOrientation=PORTRAIT`\n       `DebugDeviceID=` (add the device ID of your emulator or real device, which you can find by typing `adb devices` in the terminal)\n       `ClientID=` (your machine\'s serial number for local executions or to target a specific private lab machine)\n       Ensure `ServerURL` is set, potentially with your user key, e.g., `https://www.synergyserver.tech?key=<your_user_key>`. Set `AppPackageUrl` to the URL of your build (this will be set later once the build is uploaded to the server). `AppBuildType=DEBUG`\n       `DebugProxyPort=9999`\n       Other parameters like `RerunOnFailure`, `SendChatReport`, `SendEmailReport`, and `SlackChannelName` can be configured as needed. Connect to VPN: Ensure you are connected to the VPN (e.g., `connect.cbsinteractive.com/VPNFT`). Synergy Server: Download the latest version of the Synergy server and run the `.jar` file (Websocket). 2. Running the Test:\nOnce configured, you have a few options to run the test:\n\n   From Terminal (according to ):\n    Open your IDE terminal window and enter the following command:\n    ```bash\n    mvn clean test -pl mqe-hob-mobile-tests -am -Dgroups=Your test case number or tag\n    ```\n\n   From `TestNGSuiteConfig.xml` (according to ):\n    Navigate to the `TestNGSuiteConfig.xml` file, right-click, and select "run TestNGSuiteConfig.xml". You\'ll need to provide the necessary test case ID or tag name in the `<include name="" />` section within the `<groups>` and `<run>` tags.\n\n_(message continued in thread...)_', 'thread_ts': '1755900693.930409', 'team_id': 'T010QS7UQNA'}, headers: {'Content-Type': 'application/json;charset=utf-8', 'Authorization': '(redacted)', 'User-Agent': 'Python/3.12.0 slackclient/3.34.0 Darwin/23.4.0'}
2025-08-22 15:11:43,121 - slack_sdk.web.base_client - DEBUG - [base_client.py:546] - Received the following response - status: 200, headers: {'date': 'Fri, 22 Aug 2025 22:11:43 GMT', 'server': 'Apache', 'vary': 'Accept-Encoding', 'x-slack-req-id': '545b601e96da59ebdee3638ac9e3d4a2', 'x-content-type-options': 'nosniff', 'x-xss-protection': '0', 'pragma': 'no-cache', 'cache-control': 'private, no-cache, no-store, must-revalidate', 'expires': 'Sat, 26 Jul 1997 05:00:00 GMT', 'content-type': 'application/json; charset=utf-8', 'x-accepted-oauth-scopes': 'chat:write', 'x-oauth-scopes': 'app_mentions:read,channels:history,chat:write,im:history,im:read,im:write,users:read,reactions:write,users:read.email', 'access-control-expose-headers': 'x-slack-req-id, retry-after', 'access-control-allow-headers': 'slack-route, x-slack-version-ts, x-b3-traceid, x-b3-spanid, x-b3-parentspanid, x-b3-sampled, x-b3-flags', 'strict-transport-security': 'max-age=31536000; includeSubDomains; preload', 'referrer-policy': 'no-referrer', 'x-slack-unique-id': 'aKjrHu-N9UeYXHuYRRoW0gAAABg', 'x-slack-backend': 'r', 'access-control-allow-origin': '*', 'content-length': '7326', 'via': '1.1 slack-prod.tinyspeck.com, envoy-www-iad-icxfnksp,envoy-edge-pdx-sonhnrvf', 'x-envoy-attempt-count': '1', 'x-envoy-upstream-service-time': '182', 'x-backend': 'main_normal main_canary_with_overflow main_control_with_overflow', 'x-server': 'slack-www-hhvm-main-iad-aela', 'x-slack-shared-secret-outcome': 'no-match', 'x-edge-backend': 'envoy-www', 'timing-allow-origin': '*', 'x-slack-edge-shared-secret-outcome': 'no-match', 'connection': 'close'}, body: {"ok":true,"channel":"D09A0LFHK8R","ts":"1755900703.021969","message":{"user":"U099R6WTZ9S","type":"message","ts":"1755900703.021969","bot_id":"B099R6WTRU4","app_id":"A099LACAB2R","text":"Your Question:\n&gt; How can i run an automated test on a local Android phone? Answer:\nTo run an automated test on a local Android phone, you will need to configure your test environment and execute specific commands. Here's a breakdown of the steps and configurations involved:\n\n1. Configuration (according to ):\nUpdate `resources/config.properties`: In the `mqe-hob-mobile-tests` module, add or modify the following properties:\n       `Platform=ANDROID`\n       `Locale=en-us` (for running tests in domestic locales)\n       `MobileDeviceCategory=PHONE`\n       `DeviceStartOrientation=PORTRAIT`\n       `DebugDeviceID=` (add the device ID of your emulator or real device, which you can find by typing `adb devices` in the terminal)\n       `ClientID=` (your machine's serial number for local executions or to target a specific private lab machine)\n       Ensure `ServerURL` is set, potentially with your user key, e.g., `<https://www.synergyserver.tech?key=&lt;your_user_key>&gt;`. Set `AppPackageUrl` to the URL of your build (this will be set later once the build is uploaded to the server). `AppBuildType=DEBUG`\n       `DebugProxyPort=9999`\n       Other parameters like `RerunOnFailure`, `SendChatReport`, `SendEmailReport`, and `SlackChannelName` can be configured as needed. Connect to VPN: Ensure you are connected to the VPN (e.g., `<http://connect.cbsinteractive.com/VPNFT`|connect.cbsinteractive.com/VPNFT`>). Synergy Server: Download the latest version of the Synergy server and run the `.jar` file (Websocket). 2. Running the Test:\nOnce configured, you have a few options to run the test:\n\n   From Terminal (according to ):\n    Open your IDE terminal window and enter the following command:\n    ```bash\n    mvn clean test -pl mqe-hob-mobile-tests -am -Dgroups=Your test case number or tag\n    ```\n\n   From `TestNGSuiteConfig.xml` (according to ):\n    Navigate to the `TestNGSuiteConfig.xml` file, right-click, and select \"run TestNGSuiteConfig.xml\". You'll need to provide the necessary test case ID or tag name in the `&lt;include name=\"\" /&gt;` section within the `&lt;groups&gt;` and `&lt;run&gt;` tags.\n\n_(message continued in thread...)_","team":"T010QS7UQNA","bot_profile":{"id":"B099R6WTRU4","app_id":"A099LACAB2R","user_id":"U099R6WTZ9S","name":"AutoBot","icons":{"image_36":"https://a.slack-edge.com/80588/img/plugins/app/bot_36.png","image_48":"https://a.slack-edge.com/80588/img/plugins/app/bot_48.png","image_72":"https://a.slack-edge.com/80588/img/plugins/app/service_72.png"},"deleted":false,"updated":1754677948,"team_id":"T010QS7UQNA"},"thread_ts":"1755900693.930409","parent_user_id":"U01RMTFMALF","blocks":[{"type":"rich_text","block_id":"2Xif","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Your Question:"}]},{"type":"rich_text_quote","elements":[{"type":"text","text":"How can i run an automated test on a local Android phone? Answer:"}]},{"type":"rich_text_section","elements":[{"type":"text","text":"To run an automated test on a local Android phone, you will need to configure your test environment and execute specific commands. Here's a breakdown of the steps and configurations involved:\n\n1. Configuration (according to ):\nUpdate "},{"type":"text","text":"resources/config.properties","style":{"code":true}},{"type":"text","text":": In the "},{"type":"text","text":"mqe-hob-mobile-tests","style":{"code":true}},{"type":"text","text":" module, add or modify the following properties:\n       "},{"type":"text","text":"Platform=ANDROID","style":{"code":true}},{"type":"text","text":"\n       "},{"type":"text","text":"Locale=en-us","style":{"code":true}},{"type":"text","text":" (for running tests in domestic locales)\n       "},{"type":"text","text":"MobileDeviceCategory=PHONE","style":{"code":true}},{"type":"text","text":"\n       "},{"type":"text","text":"DeviceStartOrientation=PORTRAIT","style":{"code":true}},{"type":"text","text":"\n       "},{"type":"text","text":"DebugDeviceID=","style":{"code":true}},{"type":"text","text":" (add the device ID of your emulator or real device, which you can find by typing "},{"type":"text","text":"adb devices","style":{"code":true}},{"type":"text","text":" in the terminal)\n       "},{"type":"text","text":"ClientID=","style":{"code":true}},{"type":"text","text":" (your machine's serial number for local executions or to target a specific private lab machine)\n       Ensure "},{"type":"text","text":"ServerURL","style":{"code":true}},{"type":"text","text":" is set, potentially with your user key, e.g., "},{"type":"link","url":"https://www.synergyserver.tech?key=&lt;your_user_key","text":"https://www.synergyserver.tech?key=<your_user_key","style":{"code":true}},{"type":"text","text":">","style":{"code":true}},{"type":"text","text":". Set "},{"type":"text","text":"AppPackageUrl","style":{"code":true}},{"type":"text","text":" to the URL of your build (this will be set later once the build is uploaded to the server). "},{"type":"text","text":"AppBuildType=DEBUG","style":{"code":true}},{"type":"text","text":"\n       "},{"type":"text","text":"DebugProxyPort=9999","style":{"code":true}},{"type":"text","text":"\n       Other parameters like "},{"type":"text","text":"RerunOnFailure","style":{"code":true}},{"type":"text","text":", "},{"type":"text","text":"SendChatReport","style":{"code":true}},{"type":"text","text":", "},{"type":"text","text":"SendEmailReport","style":{"code":true}},{"type":"text","text":", and "},{"type":"text","text":"SlackChannelName","style":{"code":true}},{"type":"text","text":" can be configured as needed. Connect to VPN: Ensure you are connected to the VPN (e.g., "},{"type":"link","url":"http://connect.cbsinteractive.com/VPNFT`","text":"connect.cbsinteractive.com/VPNFT`","style":{"code":true}},{"type":"text","text":"). Synergy Server: Download the latest version of the Synergy server and run the ","style":{"code":true}},{"type":"text","text":".jar` file (Websocket). 2. Running the Test:\nOnce configured, you have a few options to run the test:\n\n   From Terminal (according to ):\n    Open your IDE terminal window and enter the following command:\n    "}]},{"type":"rich_text_preformatted","elements":[{"type":"text","text":"bash\n    mvn clean test -pl mqe-hob-mobile-tests -am -Dgroups=Your test case number or tag\n    "}]},{"type":"rich_text_section","elements":[{"type":"text","text":"\n\n   From "},{"type":"text","text":"TestNGSuiteConfig.xml","style":{"code":true}},{"type":"text","text":" (according to ):\n    Navigate to the "},{"type":"text","text":"TestNGSuiteConfig.xml","style":{"code":true}},{"type":"text","text":" file, right-click, and select \"run TestNGSuiteConfig.xml\". You'll need to provide the necessary test case ID or tag name in the "},{"type":"text","text":"<include name=\"\" />","style":{"code":true}},{"type":"text","text":" section within the "},{"type":"text","text":"<groups>","style":{"code":true}},{"type":"text","text":" and "},{"type":"text","text":"<run>","style":{"code":true}},{"type":"text","text":" tags.\n\n"},{"type":"text","text":"(message continued in thread...)","style":{"italic":true}}]}]}]}}
2025-08-22 15:11:43,121 - slack_sdk.web.base_client - DEBUG - [base_client.py:255] - Sending a request - url: https://slack.com/api/chat.postMessage, query_params: {}, body_params: {}, files: {}, json_body: {'channel': 'D09A0LFHK8R', 'text': '_(part 2/2)_\n\nFor example:\n    ```xml\n    <test verbose="1" name="All Mobile Tests" annotations="JDK">\n        <groups>\n            <run>\n                <include name="Debug"/>\n                <exclude name="Broken"/>\n            </run>\n        </groups>\n    </test>\n    ```\n\nAdditional Information:\n\n   Run Configuration Arguments (according to ):\n    For local Android runs, common arguments include:\n       `-Ddriver=android`\n       `-DplatformName=Android`\n       `-DplatformVersion=11.0` (or your desired version)\n       `-DdeviceName="Google Pixel 2XL"` (or your device name)\n       `-Denvironment=local`\n       `-Dapp="/pathToPackage/mobile-8.0.44-210804410-3.5.25-paramountPlus-playStore-release.apk"` (path to your application package)\n       `-Dudid=` (set this if running on a real mobile device)\n\n   Appium Server and Emulator (according to ):\n    A `SampleTest.java` class is available that can instantiate the mobile driver, start/stop the Appium server, and start/stop the Android Emulator. The system can automatically launch the emulator if the environment is set to "local" and the driver is "android". Android Home Environment Variable (according to ):\n    For Android Emulator runs, ensure your Run Configuration has the `$ANDROID_HOME` environment variable set and included in the path. These steps should help you set up and run automated tests on your local Android phone. ────────────────────────────────────────\n📚 Sources:\n1. https://paramount.atlassian.net/wiki/spaces/PLQA/pages/47720266\n2. https://paramount.atlassian.net/wiki/spaces/PLQA/pages/47711460\n3. https://paramount.atlassian.net/wiki/spaces/PLQA/pages/47713566', 'thread_ts': '1755900693.930409', 'team_id': 'T010QS7UQNA'}, headers: {'Content-Type': 'application/json;charset=utf-8', 'Authorization': '(redacted)', 'User-Agent': 'Python/3.12.0 slackclient/3.34.0 Darwin/23.4.0'}
2025-08-22 15:11:43,489 - slack_sdk.web.base_client - DEBUG - [base_client.py:546] - Received the following response - status: 200, headers: {'date': 'Fri, 22 Aug 2025 22:11:43 GMT', 'server': 'Apache', 'vary': 'Accept-Encoding', 'x-slack-req-id': 'b37403f9214cccb8da2d1139fcf9cf43', 'x-content-type-options': 'nosniff', 'x-xss-protection': '0', 'pragma': 'no-cache', 'cache-control': 'private, no-cache, no-store, must-revalidate', 'expires': 'Sat, 26 Jul 1997 05:00:00 GMT', 'content-type': 'application/json; charset=utf-8', 'x-accepted-oauth-scopes': 'chat:write', 'x-oauth-scopes': 'app_mentions:read,channels:history,chat:write,im:history,im:read,im:write,users:read,reactions:write,users:read.email', 'access-control-expose-headers': 'x-slack-req-id, retry-after', 'access-control-allow-headers': 'slack-route, x-slack-version-ts, x-b3-traceid, x-b3-spanid, x-b3-parentspanid, x-b3-sampled, x-b3-flags', 'strict-transport-security': 'max-age=31536000; includeSubDomains; preload', 'referrer-policy': 'no-referrer', 'x-slack-unique-id': 'aKjrH4ANXok5Uoz97e3vvgAAAD8', 'x-slack-backend': 'r', 'access-control-allow-origin': '*', 'content-length': '5443', 'via': '1.1 slack-prod.tinyspeck.com, envoy-www-iad-gdznvvgx,envoy-edge-pdx-kgpqcavk', 'x-envoy-attempt-count': '1', 'x-envoy-upstream-service-time': '163', 'x-backend': 'main_normal main_canary_with_overflow main_control_with_overflow', 'x-server': 'slack-www-hhvm-main-iad-vfcb', 'x-slack-shared-secret-outcome': 'no-match', 'x-edge-backend': 'envoy-www', 'timing-allow-origin': '*', 'x-slack-edge-shared-secret-outcome': 'no-match', 'connection': 'close'}, body: {"ok":true,"channel":"D09A0LFHK8R","ts":"1755900703.389949","message":{"user":"U099R6WTZ9S","type":"message","ts":"1755900703.389949","bot_id":"B099R6WTRU4","app_id":"A099LACAB2R","text":"_(part 2/2)_\n\nFor example:\n    ```xml\n    &lt;test verbose=\"1\" name=\"All Mobile Tests\" annotations=\"JDK\"&gt;\n        &lt;groups&gt;\n            &lt;run&gt;\n                &lt;include name=\"Debug\"/&gt;\n                &lt;exclude name=\"Broken\"/&gt;\n            &lt;/run&gt;\n        &lt;/groups&gt;\n    &lt;/test&gt;\n    ```\n\nAdditional Information:\n\n   Run Configuration Arguments (according to ):\n    For local Android runs, common arguments include:\n       `-Ddriver=android`\n       `-DplatformName=Android`\n       `-DplatformVersion=11.0` (or your desired version)\n       `-DdeviceName=\"Google Pixel 2XL\"` (or your device name)\n       `-Denvironment=local`\n       `-Dapp=\"/pathToPackage/mobile-8.0.44-210804410-3.5.25-paramountPlus-playStore-release.apk\"` (path to your application package)\n       `-Dudid=` (set this if running on a real mobile device)\n\n   Appium Server and Emulator (according to ):\n    A `SampleTest.java` class is available that can instantiate the mobile driver, start/stop the Appium server, and start/stop the Android Emulator. The system can automatically launch the emulator if the environment is set to \"local\" and the driver is \"android\". Android Home Environment Variable (according to ):\n    For Android Emulator runs, ensure your Run Configuration has the `$ANDROID_HOME` environment variable set and included in the path. These steps should help you set up and run automated tests on your local Android phone. ────────────────────────────────────────\n:books: Sources:\n1. <https://paramount.atlassian.net/wiki/spaces/PLQA/pages/47720266>\n2. <https://paramount.atlassian.net/wiki/spaces/PLQA/pages/47711460>\n3. <https://paramount.atlassian.net/wiki/spaces/PLQA/pages/47713566>","team":"T010QS7UQNA","bot_profile":{"id":"B099R6WTRU4","app_id":"A099LACAB2R","user_id":"U099R6WTZ9S","name":"AutoBot","icons":{"image_36":"https://a.slack-edge.com/80588/img/plugins/app/bot_36.png","image_48":"https://a.slack-edge.com/80588/img/plugins/app/bot_48.png","image_72":"https://a.slack-edge.com/80588/img/plugins/app/service_72.png"},"deleted":false,"updated":1754677948,"team_id":"T010QS7UQNA"},"thread_ts":"1755900693.930409","parent_user_id":"U01RMTFMALF","blocks":[{"type":"rich_text","block_id":"YF0","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"(part 2/2)","style":{"italic":true}},{"type":"text","text":"\n\nFor example:\n    "}]},{"type":"rich_text_preformatted","elements":[{"type":"text","text":"xml\n    <test verbose=\"1\" name=\"All Mobile Tests\" annotations=\"JDK\">\n        <groups>\n            <run>\n                <include name=\"Debug\"/>\n                <exclude name=\"Broken\"/>\n            </run>\n        </groups>\n    </test>\n    "}]},{"type":"rich_text_section","elements":[{"type":"text","text":"\n\nAdditional Information:\n\n   Run Configuration Arguments (according to ):\n    For local Android runs, common arguments include:\n       "},{"type":"text","text":"-Ddriver=android","style":{"code":true}},{"type":"text","text":"\n       "},{"type":"text","text":"-DplatformName=Android","style":{"code":true}},{"type":"text","text":"\n       "},{"type":"text","text":"-DplatformVersion=11.0","style":{"code":true}},{"type":"text","text":" (or your desired version)\n       "},{"type":"text","text":"-DdeviceName=\"Google Pixel 2XL\"","style":{"code":true}},{"type":"text","text":" (or your device name)\n       "},{"type":"text","text":"-Denvironment=local","style":{"code":true}},{"type":"text","text":"\n       "},{"type":"text","text":"-Dapp=\"/pathToPackage/mobile-8.0.44-210804410-3.5.25-paramountPlus-playStore-release.apk\"","style":{"code":true}},{"type":"text","text":" (path to your application package)\n       "},{"type":"text","text":"-Dudid=","style":{"code":true}},{"type":"text","text":" (set this if running on a real mobile device)\n\n   Appium Server and Emulator (according to ):\n    A "},{"type":"text","text":"SampleTest.java","style":{"code":true}},{"type":"text","text":" class is available that can instantiate the mobile driver, start/stop the Appium server, and start/stop the Android Emulator. The system can automatically launch the emulator if the environment is set to \"local\" and the driver is \"android\". Android Home Environment Variable (according to ):\n    For Android Emulator runs, ensure your Run Configuration has the "},{"type":"text","text":"$ANDROID_HOME","style":{"code":true}},{"type":"text","text":" environment variable set and included in the path. These steps should help you set up and run automated tests on your local Android phone. ────────────────────────────────────────\n"},{"type":"emoji","name":"books","unicode":"1f4da"},{"type":"text","text":" Sources:\n1. "},{"type":"link","url":"https://paramount.atlassian.net/wiki/spaces/PLQA/pages/47720266"},{"type":"text","text":"\n2. "},{"type":"link","url":"https://paramount.atlassian.net/wiki/spaces/PLQA/pages/47711460"},{"type":"text","text":"\n3. "},{"type":"link","url":"https://paramount.atlassian.net/wiki/spaces/PLQA/pages/47713566"}]}]}]}}
2025-08-22 15:11:43,490 - __main__ - DEBUG - [main.py:641] - Cleaning up DM thread tracking...
2025-08-22 15:11:43,490 - utils - DEBUG - [utils.py:67] - Managing thread: D09A0LFHK8R:1755900693.930409, action: remove, user: U01RMTFMALF
2025-08-22 15:11:43,490 - utils - INFO - [utils.py:100] - Removed thread D09A0LFHK8R:1755900693.930409 from active tracking (remaining: 0)
2025-08-22 15:11:44,100 - slack_bolt.App - DEBUG - [client.py:235] - on_message invoked: (message: {"envelope_id":"2db662ee-45ab-45aa-9d57-113d88108c59","payload":{"token":"yq71khZBCyJF1Ri2hG5aNqr5","team_id":"T010QS7UQNA","enterprise_id":"ERV4P7NAD","context_team_id":null,"context_enterprise_id":"ERV4P7NAD","api_app_id":"A099LACAB2R","event":{"user":"U099R6WTZ9S","type":"message","ts":"1755900703.389949","bot_id":"B099R6WTRU4","app_id":"A099LACAB2R","text":"_(part 2\/2)_\n\nFor example:\n    ```xml\n    &lt;test verbose=\"1\" name=\"All Mobile Tests\" annotations=\"JDK\"&gt;\n        &lt;groups&gt;\n            &lt;run&gt;\n                &lt;include name=\"Debug\"\/&gt;\n                &lt;exclude name=\"Broken\"\/&gt;\n            &lt;\/run&gt;\n        &lt;\/groups&gt;\n    &lt;\/test&gt;\n    ```\n\nAdditional Information:\n\n   Run Configuration Arguments (according to ):\n    For local Android runs, common arguments include:\n       `-Ddriver=android`\n       `-DplatformName=Android`\n       `-DplatformVersion=11.0` (or your desired version)\n       `-DdeviceName=\"Google Pixel 2XL\"` (or your device name)\n       `-Denvironment=local`\n       `-Dapp=\"\/pathToPackage\/mobile-8.0.44-210804410-3.5.25-paramountPlus-playStore-release.apk\"` (path to your application package)\n       `-Dudid=` (set this if running on a real mobile device)\n\n   Appium Server and Emulator (according to ):\n    A `SampleTest.java` class is available that can instantiate the mobile driver, start\/stop the Appium server, and start\/stop the Android Emulator. The system can automatically launch the emulator if the environment is set to \"local\" and the driver is \"android\". Android Home Environment Variable (according to ):\n    For Android Emulator runs, ensure your Run Configuration has the `$ANDROID_HOME` environment variable set and included in the path. These steps should help you set up and run automated tests on your local Android phone. \u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\n:books: Sources:\n1. <https:\/\/paramount.atlassian.net\/wiki\/spaces\/PLQA\/pages\/47720266>\n2. <https:\/\/paramount.atlassian.net\/wiki\/spaces\/PLQA\/pages\/47711460>\n3. <https:\/\/paramount.atlassian.net\/wiki\/spaces\/PLQA\/pages\/47713566>","team":"T010QS7UQNA","bot_profile":{"id":"B099R6WTRU4","deleted":false,"name":"AutoBot","updated":1754677948,"app_id":"A099LACAB2R","user_id":"U099R6WTZ9S","icons":{"image_36":"https:\/\/a.slack-edge.com\/80588\/img\/plugins\/app\/bot_36.png","image_48":"https:\/\/a.slack-edge.com\/80588\/img\/plugins\/app\/bot_48.png","image_72":"https:\/\/a.slack-edge.com\/80588\/img\/plugins\/app\/service_72.png"},"team_id":"T010QS7UQNA"},"thread_ts":"1755900693.930409","parent_user_id":"U01RMTFMALF","blocks":[{"type":"rich_text","block_id":"7wWfL","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"(part 2\/2)","style":{"italic":true}},{"type":"text","text":"\n\nFor example:\n    "}]},{"type":"rich_text_preformatted","elements":[{"type":"text","text":"xml\n    <test verbose=\"1\" name=\"All Mobile Tests\" annotations=\"JDK\">\n        <groups>\n            <run>\n                <include name=\"Debug\"\/>\n                <exclude name=\"Broken\"\/>\n            <\/run>\n        <\/groups>\n    <\/test>\n    "}]},{"type":"rich_text_section","elements":[{"type":"text","text":"\n\nAdditional Information:\n\n   Run Configuration Arguments (according to ):\n    For local Android runs, common arguments include:\n       "},{"type":"text","text":"-Ddriver=android","style":{"code":true}},{"type":"text","text":"\n       "},{"type":"text","text":"-DplatformName=Android","style":{"code":true}},{"type":"text","text":"\n       "},{"type":"text","text":"-DplatformVersion=11.0","style":{"code":true}},{"type":"text","text":" (or your desired version)\n       "},{"type":"text","text":"-DdeviceName=\"Google Pixel 2XL\"","style":{"code":true}},{"type":"text","text":" (or your device name)\n       "},{"type":"text","text":"-Denvironment=local","style":{"code":true}},{"type":"text","text":"\n       "},{"type":"text","text":"-Dapp=\"\/pathToPackage\/mobile-8.0.44-210804410-3.5.25-paramountPlus-playStore-release.apk\"","style":{"code":true}},{"type":"text","text":" (path to your application package)\n       "},{"type":"text","text":"-Dudid=","style":{"code":true}},{"type":"text","text":" (set this if running on a real mobile device)\n\n   Appium Server and Emulator (according to ):\n    A "},{"type":"text","text":"SampleTest.java","style":{"code":true}},{"type":"text","text":" class is available that can instantiate the mobile driver, start\/stop the Appium server, and start\/stop the Android Emulator. The system can automatically launch the emulator if the environment is set to \"local\" and the driver is \"android\". Android Home Environment Variable (according to ):\n    For Android Emulator runs, ensure your Run Configuration has the "},{"type":"text","text":"$ANDROID_HOME","style":{"code":true}},{"type":"text","text":" environment variable set and included in the path. These steps should help you set up and run automated tests on your local Android phone. \u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\n"},{"type":"emoji","name":"books","unicode":"1f4da"},{"type":"text","text":" Sources:\n1. "},{"type":"link","url":"https:\/\/paramount.atlassian.net\/wiki\/spaces\/PLQA\/pages\/47720266"},{"type":"text","text":"\n2. "},{"type":"link","url":"https:\/\/paramount.atlassian.net\/wiki\/spaces\/PLQA\/pages\/47711460"},{"type":"text","text":"\n3. "},{"type":"link","url":"https:\/\/paramount.atlassian.net\/wiki\/spaces\/PLQA\/pages\/47713566"}]}]}],"channel":"D09A0LFHK8R","event_ts":"1755900703.389949","channel_type":"im"},"type":"event_callback","event_id":"Ev09BR347Q1L","event_time":1755900703,"authorizations":[{"enterprise_id":"ERV4P7NAD","team_id":"T010QS7UQNA","user_id":"U099R6WTZ9S","is_bot":true,"is_enterprise_install":false}],"is_ext_shared_channel":false,"event_context":"4-eyJldCI6Im1lc3NhZ2UiLCJ0aWQiOiJUMDEwUVM3VVFOQSIsImFpZCI6IkEwOTlMQUNBQjJSIiwiY2lkIjoiRDA5QTBMRkhLOFIifQ"},"type":"events_api","accepts_response_payload":false,"retry_attempt":0,"retry_reason":""})
2025-08-22 15:11:44,101 - slack_bolt.App - DEBUG - [client.py:99] - A new message enqueued (current queue size: 1)
2025-08-22 15:11:44,101 - slack_bolt.App - DEBUG - [client.py:105] - A message dequeued (current queue size: 0)
2025-08-22 15:11:44,101 - slack_bolt.App - DEBUG - [client.py:125] - Message processing started (type: events_api, envelope_id: 2db662ee-45ab-45aa-9d57-113d88108c59)
2025-08-22 15:11:44,102 - slack_bolt.App - DEBUG - [app.py:476] - Applying slack_bolt.middleware.ssl_check.ssl_check.SslCheck
2025-08-22 15:11:44,102 - slack_bolt.App - DEBUG - [app.py:476] - Applying slack_bolt.middleware.request_verification.request_verification.RequestVerification
2025-08-22 15:11:44,102 - slack_bolt.App - DEBUG - [app.py:476] - Applying slack_bolt.middleware.authorization.single_team_authorization.SingleTeamAuthorization
2025-08-22 15:11:44,102 - slack_bolt.App - DEBUG - [app.py:476] - Applying slack_bolt.middleware.ignoring_self_events.ignoring_self_events.IgnoringSelfEvents
2025-08-22 15:11:44,102 - slack_bolt.IgnoringSelfEvents - DEBUG - [ignoring_self_events.py:60] - Skipped self event: {'user': 'U099R6WTZ9S', 'type': 'message', 'ts': '1755900703.389949', 'bot_id': 'B099R6WTRU4', 'app_id': 'A099LACAB2R', 'text': '_(part 2/2)_\n\nFor example:\n    ```xml\n    &lt;test verbose="1" name="All Mobile Tests" annotations="JDK"&gt;\n        &lt;groups&gt;\n            &lt;run&gt;\n                &lt;include name="Debug"/&gt;\n                &lt;exclude name="Broken"/&gt;\n            &lt;/run&gt;\n        &lt;/groups&gt;\n    &lt;/test&gt;\n    ```\n\nAdditional Information:\n\n   Run Configuration Arguments (according to ):\n    For local Android runs, common arguments include:\n       `-Ddriver=android`\n       `-DplatformName=Android`\n       `-DplatformVersion=11.0` (or your desired version)\n       `-DdeviceName="Google Pixel 2XL"` (or your device name)\n       `-Denvironment=local`\n       `-Dapp="/pathToPackage/mobile-8.0.44-210804410-3.5.25-paramountPlus-playStore-release.apk"` (path to your application package)\n       `-Dudid=` (set this if running on a real mobile device)\n\n   Appium Server and Emulator (according to ):\n    A `SampleTest.java` class is available that can instantiate the mobile driver, start/stop the Appium server, and start/stop the Android Emulator. The system can automatically launch the emulator if the environment is set to "local" and the driver is "android". Android Home Environment Variable (according to ):\n    For Android Emulator runs, ensure your Run Configuration has the `$ANDROID_HOME` environment variable set and included in the path. These steps should help you set up and run automated tests on your local Android phone. ────────────────────────────────────────\n:books: Sources:\n1. <https://paramount.atlassian.net/wiki/spaces/PLQA/pages/47720266>\n2. <https://paramount.atlassian.net/wiki/spaces/PLQA/pages/47711460>\n3. <https://paramount.atlassian.net/wiki/spaces/PLQA/pages/47713566>', 'team': 'T010QS7UQNA', 'bot_profile': {'id': 'B099R6WTRU4', 'deleted': False, 'name': 'AutoBot', 'updated': 1754677948, 'app_id': 'A099LACAB2R', 'user_id': 'U099R6WTZ9S', 'icons': {'image_36': 'https://a.slack-edge.com/80588/img/plugins/app/bot_36.png', 'image_48': 'https://a.slack-edge.com/80588/img/plugins/app/bot_48.png', 'image_72': 'https://a.slack-edge.com/80588/img/plugins/app/service_72.png'}, 'team_id': 'T010QS7UQNA'}, 'thread_ts': '1755900693.930409', 'parent_user_id': 'U01RMTFMALF', 'blocks': [{'type': 'rich_text', 'block_id': '7wWfL', 'elements': [{'type': 'rich_text_section', 'elements': [{'type': 'text', 'text': '(part 2/2)', 'style': {'italic': True}}, {'type': 'text', 'text': '\n\nFor example:\n    '}]}, {'type': 'rich_text_preformatted', 'elements': [{'type': 'text', 'text': 'xml\n    <test verbose="1" name="All Mobile Tests" annotations="JDK">\n        <groups>\n            <run>\n                <include name="Debug"/>\n                <exclude name="Broken"/>\n            </run>\n        </groups>\n    </test>\n    '}]}, {'type': 'rich_text_section', 'elements': [{'type': 'text', 'text': '\n\nAdditional Information:\n\n   Run Configuration Arguments (according to ):\n    For local Android runs, common arguments include:\n       '}, {'type': 'text', 'text': '-Ddriver=android', 'style': {'code': True}}, {'type': 'text', 'text': '\n       '}, {'type': 'text', 'text': '-DplatformName=Android', 'style': {'code': True}}, {'type': 'text', 'text': '\n       '}, {'type': 'text', 'text': '-DplatformVersion=11.0', 'style': {'code': True}}, {'type': 'text', 'text': ' (or your desired version)\n       '}, {'type': 'text', 'text': '-DdeviceName="Google Pixel 2XL"', 'style': {'code': True}}, {'type': 'text', 'text': ' (or your device name)\n       '}, {'type': 'text', 'text': '-Denvironment=local', 'style': {'code': True}}, {'type': 'text', 'text': '\n       '}, {'type': 'text', 'text': '-Dapp="/pathToPackage/mobile-8.0.44-210804410-3.5.25-paramountPlus-playStore-release.apk"', 'style': {'code': True}}, {'type': 'text', 'text': ' (path to your application package)\n       '}, {'type': 'text', 'text': '-Dudid=', 'style': {'code': True}}, {'type': 'text', 'text': ' (set this if running on a real mobile device)\n\n   Appium Server and Emulator (according to ):\n    A '}, {'type': 'text', 'text': 'SampleTest.java', 'style': {'code': True}}, {'type': 'text', 'text': ' class is available that can instantiate the mobile driver, start/stop the Appium server, and start/stop the Android Emulator. The system can automatically launch the emulator if the environment is set to "local" and the driver is "android". Android Home Environment Variable (according to ):\n    For Android Emulator runs, ensure your Run Configuration has the '}, {'type': 'text', 'text': '$ANDROID_HOME', 'style': {'code': True}}, {'type': 'text', 'text': ' environment variable set and included in the path. These steps should help you set up and run automated tests on your local Android phone. ────────────────────────────────────────\n'}, {'type': 'emoji', 'name': 'books', 'unicode': '1f4da'}, {'type': 'text', 'text': ' Sources:\n1. '}, {'type': 'link', 'url': 'https://paramount.atlassian.net/wiki/spaces/PLQA/pages/47720266'}, {'type': 'text', 'text': '\n2. '}, {'type': 'link', 'url': 'https://paramount.atlassian.net/wiki/spaces/PLQA/pages/47711460'}, {'type': 'text', 'text': '\n3. '}, {'type': 'link', 'url': 'https://paramount.atlassian.net/wiki/spaces/PLQA/pages/47713566'}]}]}], 'channel': 'D09A0LFHK8R', 'event_ts': '1755900703.389949', 'channel_type': 'im'}
2025-08-22 15:11:44,103 - slack_bolt.App - DEBUG - [client.py:200] - Sending a message (session id: 2b786a3c-37d2-418b-919d-b93228b5d82f, message: {"envelope_id": "2db662ee-45ab-45aa-9d57-113d88108c59"})
2025-08-22 15:11:44,103 - slack_bolt.App - DEBUG - [internals.py:41] - Response time: 1 milliseconds
2025-08-22 15:11:44,103 - slack_bolt.App - DEBUG - [client.py:150] - Message processing completed (type: events_api, envelope_id: 2db662ee-45ab-45aa-9d57-113d88108c59)
2025-08-22 15:11:44,806 - slack_bolt.App - DEBUG - [client.py:235] - on_message invoked: (message: {"envelope_id":"6a8688ba-2651-4034-9e3e-c5560b1c27d8","payload":{"token":"yq71khZBCyJF1Ri2hG5aNqr5","team_id":"T010QS7UQNA","enterprise_id":"ERV4P7NAD","context_team_id":null,"context_enterprise_id":"ERV4P7NAD","api_app_id":"A099LACAB2R","event":{"user":"U099R6WTZ9S","type":"message","ts":"1755900703.021969","bot_id":"B099R6WTRU4","app_id":"A099LACAB2R","text":"Your Question:\n&gt; How can i run an automated test on a local Android phone? Answer:\nTo run an automated test on a local Android phone, you will need to configure your test environment and execute specific commands. Here's a breakdown of the steps and configurations involved:\n\n1. Configuration (according to ):\nUpdate `resources\/config.properties`: In the `mqe-hob-mobile-tests` module, add or modify the following properties:\n       `Platform=ANDROID`\n       `Locale=en-us` (for running tests in domestic locales)\n       `MobileDeviceCategory=PHONE`\n       `DeviceStartOrientation=PORTRAIT`\n       `DebugDeviceID=` (add the device ID of your emulator or real device, which you can find by typing `adb devices` in the terminal)\n       `ClientID=` (your machine's serial number for local executions or to target a specific private lab machine)\n       Ensure `ServerURL` is set, potentially with your user key, e.g., `<https:\/\/www.synergyserver.tech?key=&lt;your_user_key>&gt;`. Set `AppPackageUrl` to the URL of your build (this will be set later once the build is uploaded to the server). `AppBuildType=DEBUG`\n       `DebugProxyPort=9999`\n       Other parameters like `RerunOnFailure`, `SendChatReport`, `SendEmailReport`, and `SlackChannelName` can be configured as needed. Connect to VPN: Ensure you are connected to the VPN (e.g., `<http:\/\/connect.cbsinteractive.com\/VPNFT`|connect.cbsinteractive.com\/VPNFT`>). Synergy Server: Download the latest version of the Synergy server and run the `.jar` file (Websocket). 2. Running the Test:\nOnce configured, you have a few options to run the test:\n\n   From Terminal (according to ):\n    Open your IDE terminal window and enter the following command:\n    ```bash\n    mvn clean test -pl mqe-hob-mobile-tests -am -Dgroups=Your test case number or tag\n    ```\n\n   From `TestNGSuiteConfig.xml` (according to ):\n    Navigate to the `TestNGSuiteConfig.xml` file, right-click, and select \"run TestNGSuiteConfig.xml\". You'll need to provide the necessary test case ID or tag name in the `&lt;include name=\"\" \/&gt;` section within the `&lt;groups&gt;` and `&lt;run&gt;` tags.\n\n_(message continued in thread...)_","team":"T010QS7UQNA","bot_profile":{"id":"B099R6WTRU4","deleted":false,"name":"AutoBot","updated":1754677948,"app_id":"A099LACAB2R","user_id":"U099R6WTZ9S","icons":{"image_36":"https:\/\/a.slack-edge.com\/80588\/img\/plugins\/app\/bot_36.png","image_48":"https:\/\/a.slack-edge.com\/80588\/img\/plugins\/app\/bot_48.png","image_72":"https:\/\/a.slack-edge.com\/80588\/img\/plugins\/app\/service_72.png"},"team_id":"T010QS7UQNA"},"thread_ts":"1755900693.930409","parent_user_id":"U01RMTFMALF","blocks":[{"type":"rich_text","block_id":"DLF5","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Your Question:"}]},{"type":"rich_text_quote","elements":[{"type":"text","text":"How can i run an automated test on a local Android phone? Answer:"}]},{"type":"rich_text_section","elements":[{"type":"text","text":"To run an automated test on a local Android phone, you will need to configure your test environment and execute specific commands. Here's a breakdown of the steps and configurations involved:\n\n1. Configuration (according to ):\nUpdate "},{"type":"text","text":"resources\/config.properties","style":{"code":true}},{"type":"text","text":": In the "},{"type":"text","text":"mqe-hob-mobile-tests","style":{"code":true}},{"type":"text","text":" module, add or modify the following properties:\n       "},{"type":"text","text":"Platform=ANDROID","style":{"code":true}},{"type":"text","text":"\n       "},{"type":"text","text":"Locale=en-us","style":{"code":true}},{"type":"text","text":" (for running tests in domestic locales)\n       "},{"type":"text","text":"MobileDeviceCategory=PHONE","style":{"code":true}},{"type":"text","text":"\n       "},{"type":"text","text":"DeviceStartOrientation=PORTRAIT","style":{"code":true}},{"type":"text","text":"\n       "},{"type":"text","text":"DebugDeviceID=","style":{"code":true}},{"type":"text","text":" (add the device ID of your emulator or real device, which you can find by typing "},{"type":"text","text":"adb devices","style":{"code":true}},{"type":"text","text":" in the terminal)\n       "},{"type":"text","text":"ClientID=","style":{"code":true}},{"type":"text","text":" (your machine's serial number for local executions or to target a specific private lab machine)\n       Ensure "},{"type":"text","text":"ServerURL","style":{"code":true}},{"type":"text","text":" is set, potentially with your user key, e.g., "},{"type":"link","url":"https:\/\/www.synergyserver.tech?key=&lt;your_user_key","text":"https:\/\/www.synergyserver.tech?key=<your_user_key","style":{"code":true}},{"type":"text","text":">","style":{"code":true}},{"type":"text","text":". Set "},{"type":"text","text":"AppPackageUrl","style":{"code":true}},{"type":"text","text":" to the URL of your build (this will be set later once the build is uploaded to the server). "},{"type":"text","text":"AppBuildType=DEBUG","style":{"code":true}},{"type":"text","text":"\n       "},{"type":"text","text":"DebugProxyPort=9999","style":{"code":true}},{"type":"text","text":"\n       Other parameters like "},{"type":"text","text":"RerunOnFailure","style":{"code":true}},{"type":"text","text":", "},{"type":"text","text":"SendChatReport","style":{"code":true}},{"type":"text","text":", "},{"type":"text","text":"SendEmailReport","style":{"code":true}},{"type":"text","text":", and "},{"type":"text","text":"SlackChannelName","style":{"code":true}},{"type":"text","text":" can be configured as needed. Connect to VPN: Ensure you are connected to the VPN (e.g., "},{"type":"link","url":"http:\/\/connect.cbsinteractive.com\/VPNFT`","text":"connect.cbsinteractive.com\/VPNFT`","style":{"code":true}},{"type":"text","text":"). Synergy Server: Download the latest version of the Synergy server and run the ","style":{"code":true}},{"type":"text","text":".jar` file (Websocket). 2. Running the Test:\nOnce configured, you have a few options to run the test:\n\n   From Terminal (according to ):\n    Open your IDE terminal window and enter the following command:\n    "}]},{"type":"rich_text_preformatted","elements":[{"type":"text","text":"bash\n    mvn clean test -pl mqe-hob-mobile-tests -am -Dgroups=Your test case number or tag\n    "}]},{"type":"rich_text_section","elements":[{"type":"text","text":"\n\n   From "},{"type":"text","text":"TestNGSuiteConfig.xml","style":{"code":true}},{"type":"text","text":" (according to ):\n    Navigate to the "},{"type":"text","text":"TestNGSuiteConfig.xml","style":{"code":true}},{"type":"text","text":" file, right-click, and select \"run TestNGSuiteConfig.xml\". You'll need to provide the necessary test case ID or tag name in the "},{"type":"text","text":"<include name=\"\" \/>","style":{"code":true}},{"type":"text","text":" section within the "},{"type":"text","text":"<groups>","style":{"code":true}},{"type":"text","text":" and "},{"type":"text","text":"<run>","style":{"code":true}},{"type":"text","text":" tags.\n\n"},{"type":"text","text":"(message continued in thread...)","style":{"italic":true}}]}]}],"channel":"D09A0LFHK8R","event_ts":"1755900703.021969","channel_type":"im"},"type":"event_callback","event_id":"Ev09BR3419JS","event_time":1755900703,"authorizations":[{"enterprise_id":"ERV4P7NAD","team_id":"T010QS7UQNA","user_id":"U099R6WTZ9S","is_bot":true,"is_enterprise_install":false}],"is_ext_shared_channel":false,"event_context":"4-eyJldCI6Im1lc3NhZ2UiLCJ0aWQiOiJUMDEwUVM3VVFOQSIsImFpZCI6IkEwOTlMQUNBQjJSIiwiY2lkIjoiRDA5QTBMRkhLOFIifQ"},"type":"events_api","accepts_response_payload":false,"retry_attempt":0,"retry_reason":""})
2025-08-22 15:11:44,807 - slack_bolt.App - DEBUG - [client.py:99] - A new message enqueued (current queue size: 1)
2025-08-22 15:11:44,807 - slack_bolt.App - DEBUG - [client.py:105] - A message dequeued (current queue size: 0)
2025-08-22 15:11:44,808 - slack_bolt.App - DEBUG - [client.py:125] - Message processing started (type: events_api, envelope_id: 6a8688ba-2651-4034-9e3e-c5560b1c27d8)
2025-08-22 15:11:44,808 - slack_bolt.App - DEBUG - [app.py:476] - Applying slack_bolt.middleware.ssl_check.ssl_check.SslCheck
2025-08-22 15:11:44,808 - slack_bolt.App - DEBUG - [app.py:476] - Applying slack_bolt.middleware.request_verification.request_verification.RequestVerification
2025-08-22 15:11:44,808 - slack_bolt.App - DEBUG - [app.py:476] - Applying slack_bolt.middleware.authorization.single_team_authorization.SingleTeamAuthorization
2025-08-22 15:11:44,808 - slack_bolt.App - DEBUG - [app.py:476] - Applying slack_bolt.middleware.ignoring_self_events.ignoring_self_events.IgnoringSelfEvents
2025-08-22 15:11:44,808 - slack_bolt.IgnoringSelfEvents - DEBUG - [ignoring_self_events.py:60] - Skipped self event: {'user': 'U099R6WTZ9S', 'type': 'message', 'ts': '1755900703.021969', 'bot_id': 'B099R6WTRU4', 'app_id': 'A099LACAB2R', 'text': 'Your Question:\n&gt; How can i run an automated test on a local Android phone? Answer:\nTo run an automated test on a local Android phone, you will need to configure your test environment and execute specific commands. Here\'s a breakdown of the steps and configurations involved:\n\n1. Configuration (according to ):\nUpdate `resources/config.properties`: In the `mqe-hob-mobile-tests` module, add or modify the following properties:\n       `Platform=ANDROID`\n       `Locale=en-us` (for running tests in domestic locales)\n       `MobileDeviceCategory=PHONE`\n       `DeviceStartOrientation=PORTRAIT`\n       `DebugDeviceID=` (add the device ID of your emulator or real device, which you can find by typing `adb devices` in the terminal)\n       `ClientID=` (your machine\'s serial number for local executions or to target a specific private lab machine)\n       Ensure `ServerURL` is set, potentially with your user key, e.g., `<https://www.synergyserver.tech?key=&lt;your_user_key>&gt;`. Set `AppPackageUrl` to the URL of your build (this will be set later once the build is uploaded to the server). `AppBuildType=DEBUG`\n       `DebugProxyPort=9999`\n       Other parameters like `RerunOnFailure`, `SendChatReport`, `SendEmailReport`, and `SlackChannelName` can be configured as needed. Connect to VPN: Ensure you are connected to the VPN (e.g., `<http://connect.cbsinteractive.com/VPNFT`|connect.cbsinteractive.com/VPNFT`>). Synergy Server: Download the latest version of the Synergy server and run the `.jar` file (Websocket). 2. Running the Test:\nOnce configured, you have a few options to run the test:\n\n   From Terminal (according to ):\n    Open your IDE terminal window and enter the following command:\n    ```bash\n    mvn clean test -pl mqe-hob-mobile-tests -am -Dgroups=Your test case number or tag\n    ```\n\n   From `TestNGSuiteConfig.xml` (according to ):\n    Navigate to the `TestNGSuiteConfig.xml` file, right-click, and select "run TestNGSuiteConfig.xml". You\'ll need to provide the necessary test case ID or tag name in the `&lt;include name="" /&gt;` section within the `&lt;groups&gt;` and `&lt;run&gt;` tags.\n\n_(message continued in thread...)_', 'team': 'T010QS7UQNA', 'bot_profile': {'id': 'B099R6WTRU4', 'deleted': False, 'name': 'AutoBot', 'updated': 1754677948, 'app_id': 'A099LACAB2R', 'user_id': 'U099R6WTZ9S', 'icons': {'image_36': 'https://a.slack-edge.com/80588/img/plugins/app/bot_36.png', 'image_48': 'https://a.slack-edge.com/80588/img/plugins/app/bot_48.png', 'image_72': 'https://a.slack-edge.com/80588/img/plugins/app/service_72.png'}, 'team_id': 'T010QS7UQNA'}, 'thread_ts': '1755900693.930409', 'parent_user_id': 'U01RMTFMALF', 'blocks': [{'type': 'rich_text', 'block_id': 'DLF5', 'elements': [{'type': 'rich_text_section', 'elements': [{'type': 'text', 'text': 'Your Question:'}]}, {'type': 'rich_text_quote', 'elements': [{'type': 'text', 'text': 'How can i run an automated test on a local Android phone? Answer:'}]}, {'type': 'rich_text_section', 'elements': [{'type': 'text', 'text': "To run an automated test on a local Android phone, you will need to configure your test environment and execute specific commands. Here's a breakdown of the steps and configurations involved:\n\n1. Configuration (according to ):\nUpdate "}, {'type': 'text', 'text': 'resources/config.properties', 'style': {'code': True}}, {'type': 'text', 'text': ': In the '}, {'type': 'text', 'text': 'mqe-hob-mobile-tests', 'style': {'code': True}}, {'type': 'text', 'text': ' module, add or modify the following properties:\n       '}, {'type': 'text', 'text': 'Platform=ANDROID', 'style': {'code': True}}, {'type': 'text', 'text': '\n       '}, {'type': 'text', 'text': 'Locale=en-us', 'style': {'code': True}}, {'type': 'text', 'text': ' (for running tests in domestic locales)\n       '}, {'type': 'text', 'text': 'MobileDeviceCategory=PHONE', 'style': {'code': True}}, {'type': 'text', 'text': '\n       '}, {'type': 'text', 'text': 'DeviceStartOrientation=PORTRAIT', 'style': {'code': True}}, {'type': 'text', 'text': '\n       '}, {'type': 'text', 'text': 'DebugDeviceID=', 'style': {'code': True}}, {'type': 'text', 'text': ' (add the device ID of your emulator or real device, which you can find by typing '}, {'type': 'text', 'text': 'adb devices', 'style': {'code': True}}, {'type': 'text', 'text': ' in the terminal)\n       '}, {'type': 'text', 'text': 'ClientID=', 'style': {'code': True}}, {'type': 'text', 'text': " (your machine's serial number for local executions or to target a specific private lab machine)\n       Ensure "}, {'type': 'text', 'text': 'ServerURL', 'style': {'code': True}}, {'type': 'text', 'text': ' is set, potentially with your user key, e.g., '}, {'type': 'link', 'url': 'https://www.synergyserver.tech?key=&lt;your_user_key', 'text': 'https://www.synergyserver.tech?key=<your_user_key', 'style': {'code': True}}, {'type': 'text', 'text': '>', 'style': {'code': True}}, {'type': 'text', 'text': '. Set '}, {'type': 'text', 'text': 'AppPackageUrl', 'style': {'code': True}}, {'type': 'text', 'text': ' to the URL of your build (this will be set later once the build is uploaded to the server). '}, {'type': 'text', 'text': 'AppBuildType=DEBUG', 'style': {'code': True}}, {'type': 'text', 'text': '\n       '}, {'type': 'text', 'text': 'DebugProxyPort=9999', 'style': {'code': True}}, {'type': 'text', 'text': '\n       Other parameters like '}, {'type': 'text', 'text': 'RerunOnFailure', 'style': {'code': True}}, {'type': 'text', 'text': ', '}, {'type': 'text', 'text': 'SendChatReport', 'style': {'code': True}}, {'type': 'text', 'text': ', '}, {'type': 'text', 'text': 'SendEmailReport', 'style': {'code': True}}, {'type': 'text', 'text': ', and '}, {'type': 'text', 'text': 'SlackChannelName', 'style': {'code': True}}, {'type': 'text', 'text': ' can be configured as needed. Connect to VPN: Ensure you are connected to the VPN (e.g., '}, {'type': 'link', 'url': 'http://connect.cbsinteractive.com/VPNFT`', 'text': 'connect.cbsinteractive.com/VPNFT`', 'style': {'code': True}}, {'type': 'text', 'text': '). Synergy Server: Download the latest version of the Synergy server and run the ', 'style': {'code': True}}, {'type': 'text', 'text': '.jar` file (Websocket). 2. Running the Test:\nOnce configured, you have a few options to run the test:\n\n   From Terminal (according to ):\n    Open your IDE terminal window and enter the following command:\n    '}]}, {'type': 'rich_text_preformatted', 'elements': [{'type': 'text', 'text': 'bash\n    mvn clean test -pl mqe-hob-mobile-tests -am -Dgroups=Your test case number or tag\n    '}]}, {'type': 'rich_text_section', 'elements': [{'type': 'text', 'text': '\n\n   From '}, {'type': 'text', 'text': 'TestNGSuiteConfig.xml', 'style': {'code': True}}, {'type': 'text', 'text': ' (according to ):\n    Navigate to the '}, {'type': 'text', 'text': 'TestNGSuiteConfig.xml', 'style': {'code': True}}, {'type': 'text', 'text': ' file, right-click, and select "run TestNGSuiteConfig.xml". You\'ll need to provide the necessary test case ID or tag name in the '}, {'type': 'text', 'text': '<include name="" />', 'style': {'code': True}}, {'type': 'text', 'text': ' section within the '}, {'type': 'text', 'text': '<groups>', 'style': {'code': True}}, {'type': 'text', 'text': ' and '}, {'type': 'text', 'text': '<run>', 'style': {'code': True}}, {'type': 'text', 'text': ' tags.\n\n'}, {'type': 'text', 'text': '(message continued in thread...)', 'style': {'italic': True}}]}]}], 'channel': 'D09A0LFHK8R', 'event_ts': '1755900703.021969', 'channel_type': 'im'}
2025-08-22 15:11:44,809 - slack_bolt.App - DEBUG - [client.py:200] - Sending a message (session id: 2b786a3c-37d2-418b-919d-b93228b5d82f, message: {"envelope_id": "6a8688ba-2651-4034-9e3e-c5560b1c27d8"})
2025-08-22 15:11:44,809 - slack_bolt.App - DEBUG - [internals.py:41] - Response time: 1 milliseconds
2025-08-22 15:11:44,809 - slack_bolt.App - DEBUG - [client.py:150] - Message processing completed (type: events_api, envelope_id: 6a8688ba-2651-4034-9e3e-c5560b1c27d8)
2025-08-22 15:30:10,390 - __main__ - INFO - [main.py:43] - Loading application configuration...
2025-08-22 15:30:10,391 - __main__ - INFO - [main.py:45] - Configuration loaded successfully
2025-08-22 15:30:10,391 - __main__ - INFO - [main.py:48] - Initializing security components...
2025-08-22 15:30:10,391 - __main__ - DEBUG - [main.py:50] - Slack validator initialized
2025-08-22 15:30:10,391 - security.content_filter - INFO - [content_filter.py:39] - Content filter initialized with 11 patterns
2025-08-22 15:30:10,391 - __main__ - DEBUG - [main.py:53] - Content filter initialized
2025-08-22 15:30:10,391 - auth.admin_manager - INFO - [admin_manager.py:27] - Admin manager initialized with 2 admin users
2025-08-22 15:30:10,391 - __main__ - DEBUG - [main.py:56] - Admin manager initialized
2025-08-22 15:30:10,391 - auth.email_whitelist - INFO - [email_whitelist.py:28] - Email whitelist initialized with 1 whitelisted emails
2025-08-22 15:30:10,391 - auth.email_whitelist - INFO - [email_whitelist.py:37] - Whitelisted domains: paramount.com
2025-08-22 15:30:10,391 - __main__ - DEBUG - [main.py:59] - Email whitelist initialized with 1 emails
2025-08-22 15:30:10,391 - auth.slack_user_info - DEBUG - [slack_user_info.py:25] - Slack user info manager initialized
2025-08-22 15:30:10,391 - __main__ - DEBUG - [main.py:62] - Slack user info manager initialized
2025-08-22 15:30:10,391 - __main__ - INFO - [main.py:63] - Security components initialized successfully
2025-08-22 15:30:10,391 - __main__ - INFO - [main.py:66] - Initializing Slack app...
2025-08-22 15:30:10,428 - slack_bolt.App - DEBUG - [base_client.py:255] - Sending a request - url: https://slack.com/api/auth.test, query_params: {}, body_params: {}, files: {}, json_body: None, headers: {'Content-Type': 'application/x-www-form-urlencoded', 'Authorization': '(redacted)', 'User-Agent': 'Bolt/1.16.0 Python/3.12.0 slackclient/3.34.0 Darwin/23.4.0'}
2025-08-22 15:30:10,785 - slack_bolt.App - DEBUG - [base_client.py:546] - Received the following response - status: 200, headers: {'date': 'Fri, 22 Aug 2025 22:30:10 GMT', 'server': 'Apache', 'vary': 'Accept-Encoding', 'x-slack-req-id': 'db916476f4e6ae76ee5e197ff37f162f', 'x-content-type-options': 'nosniff', 'x-xss-protection': '0', 'pragma': 'no-cache', 'cache-control': 'private, no-cache, no-store, must-revalidate', 'expires': 'Sat, 26 Jul 1997 05:00:00 GMT', 'content-type': 'application/json; charset=utf-8', 'x-oauth-scopes': 'app_mentions:read,channels:history,chat:write,im:history,im:read,im:write,users:read,reactions:write,users:read.email', 'access-control-expose-headers': 'x-slack-req-id, retry-after', 'access-control-allow-headers': 'slack-route, x-slack-version-ts, x-b3-traceid, x-b3-spanid, x-b3-parentspanid, x-b3-sampled, x-b3-flags', 'strict-transport-security': 'max-age=31536000; includeSubDomains; preload', 'referrer-policy': 'no-referrer', 'x-slack-unique-id': 'aKjvclXB2SYZ4szFjEcG3wAAADM', 'x-slack-backend': 'r', 'access-control-allow-origin': '*', 'content-length': '228', 'via': '1.1 slack-prod.tinyspeck.com, envoy-www-iad-jbevayqz,envoy-edge-pdx-tsqahqqc', 'x-envoy-attempt-count': '1', 'x-envoy-upstream-service-time': '89', 'x-backend': 'main_normal main_canary_with_overflow main_control_with_overflow', 'x-server': 'slack-www-hhvm-main-iad-dqvo', 'x-slack-shared-secret-outcome': 'no-match', 'x-edge-backend': 'envoy-www', 'timing-allow-origin': '*', 'x-slack-edge-shared-secret-outcome': 'no-match', 'connection': 'close'}, body: {"ok":true,"url":"https://viacomcbs-grid-test.slack.com/","team":"Test Workspace","user":"autobot","team_id":"T010QS7UQNA","user_id":"U099R6WTZ9S","bot_id":"B099R6WTRU4","enterprise_id":"ERV4P7NAD","is_enterprise_install":false}
2025-08-22 15:30:10,785 - __main__ - INFO - [main.py:68] - Slack app initialized successfully
2025-08-22 15:30:10,786 - __main__ - DEBUG - [main.py:72] - Message deduplication cache initialized
2025-08-22 15:30:10,786 - __main__ - DEBUG - [main.py:77] - Thread tracking initialized
2025-08-22 15:30:10,786 - __main__ - INFO - [main.py:80] - Initializing DIG AI integration...
2025-08-22 15:30:10,786 - dig_connector - INFO - [dig_connector.py:284] - Initializing DIG AI with model ID: 42
2025-08-22 15:30:10,786 - dig_connector - INFO - [dig_connector.py:49] - Starting DIG chat session initialization...
2025-08-22 15:30:10,786 - dig_connector - DEBUG - [dig_connector.py:52] - Creating chat with name: Slack Bot Session 2025-08-22T22:30:10.786467+00:00
2025-08-22 15:30:10,786 - dig_connector - DEBUG - [dig_connector.py:63] - Creating chat - URL: https://ai.digdev.cbsicloud.com/fastapi/chats, Payload: {'chat_nm': 'Slack Bot Session 2025-08-22T22:30:10.786467+00:00', 'model_id': 42}
2025-08-22 15:30:10,788 - urllib3.connectionpool - DEBUG - [connectionpool.py:1055] - Starting new HTTPS connection (1): ai.digdev.cbsicloud.com:443
2025-08-22 15:30:11,054 - urllib3.connectionpool - DEBUG - [connectionpool.py:549] - https://ai.digdev.cbsicloud.com:443 "POST /fastapi/chats HTTP/1.1" 200 217
2025-08-22 15:30:11,055 - dig_connector - DEBUG - [dig_connector.py:66] - Create chat response: status=200
2025-08-22 15:30:11,055 - dig_connector - INFO - [dig_connector.py:54] - Successfully initialized DIG chat session with ID: 893
2025-08-22 15:30:11,055 - __main__ - INFO - [main.py:83] - DIG AI integration successfully initialized
2025-08-22 15:30:11,055 - __main__ - INFO - [main.py:87] - Setting up event handlers...
2025-08-22 15:30:11,056 - __main__ - INFO - [main.py:751] - Starting AI Assistant Bot...
2025-08-22 15:30:11,056 - __main__ - INFO - [main.py:752] - Registering event handlers...
2025-08-22 15:30:11,056 - __main__ - DEBUG - [main.py:753] - Event handlers registered: app_mention, message, app_home_opened
2025-08-22 15:30:11,056 - __main__ - INFO - [main.py:756] - Connecting to Slack via Socket Mode...
2025-08-22 15:30:11,056 - __main__ - INFO - [main.py:760] - Socket Mode handler created successfully
2025-08-22 15:30:11,056 - __main__ - INFO - [main.py:762] - ✅ Bot is now running and listening for events!
2025-08-22 15:30:11,057 - slack_bolt.App - DEBUG - [base_client.py:255] - Sending a request - url: https://slack.com/api/apps.connections.open, query_params: {}, body_params: {}, files: {}, json_body: None, headers: {'Content-Type': 'application/x-www-form-urlencoded', 'Authorization': '(redacted)', 'User-Agent': 'Bolt/1.16.0 Python/3.12.0 slackclient/3.34.0 Darwin/23.4.0'}
2025-08-22 15:30:11,352 - slack_bolt.App - DEBUG - [base_client.py:546] - Received the following response - status: 200, headers: {'date': 'Fri, 22 Aug 2025 22:30:11 GMT', 'server': 'Apache', 'vary': 'Accept-Encoding', 'x-slack-req-id': '75e5654b6d5a30c04bfcb32672495b50', 'x-content-type-options': 'nosniff', 'x-xss-protection': '0', 'x-robots-tag': 'noindex,nofollow', 'pragma': 'no-cache', 'cache-control': 'private, no-cache, no-store, must-revalidate', 'expires': 'Sat, 26 Jul 1997 05:00:00 GMT', 'content-type': 'application/json; charset=utf-8', 'x-accepted-oauth-scopes': 'connections:write', 'x-oauth-scopes': 'connections:write', 'access-control-expose-headers': 'x-slack-req-id, retry-after', 'access-control-allow-headers': 'slack-route, x-slack-version-ts, x-b3-traceid, x-b3-spanid, x-b3-parentspanid, x-b3-sampled, x-b3-flags', 'strict-transport-security': 'max-age=31536000; includeSubDomains; preload', 'referrer-policy': 'no-referrer', 'x-slack-unique-id': 'aKjvc4T7JT0jzS7O2C5fzgAAAAY', 'x-slack-backend': 'r', 'access-control-allow-origin': '*', 'content-length': '173', 'via': '1.1 slack-prod.tinyspeck.com, envoy-www-iad-xfwkfzdw,envoy-edge-pdx-evgzkskt', 'x-envoy-attempt-count': '1', 'x-envoy-upstream-service-time': '74', 'x-backend': 'main_normal main_canary_with_overflow main_control_with_overflow', 'x-server': 'slack-www-hhvm-main-iad-efxb', 'x-slack-shared-secret-outcome': 'no-match', 'x-edge-backend': 'envoy-www', 'timing-allow-origin': '*', 'x-slack-edge-shared-secret-outcome': 'no-match', 'connection': 'close'}, body: {"ok":true,"url":"wss:\/\/wss-primary.slack.com\/link\/?ticket=2272a310-b696-4741-b1cb-2b262af66c34&app_id=a6c8d361ee1c6f398c5b4afec831555b78d7affa753b16bcc0fc64d7c13f3766"}
2025-08-22 15:30:11,862 - slack_bolt.App - INFO - [client.py:192] - A new session has been established (session id: dc339600-26bd-4039-93c1-87d2694d207d)
2025-08-22 15:30:11,863 - slack_bolt.App - INFO - [base_handler.py:50] - ⚡️ Bolt app is running!
2025-08-22 15:30:11,881 - slack_bolt.App - INFO - [client.py:265] - Starting to receive messages from a new connection (session id: dc339600-26bd-4039-93c1-87d2694d207d)
2025-08-22 15:30:11,882 - slack_bolt.App - DEBUG - [client.py:235] - on_message invoked: (message: {"type":"hello","num_connections":1,"debug_info":{"host":"applink-0","build_number":0,"approximate_connection_time":18060},"connection_info":{"app_id":"A099LACAB2R"}})
2025-08-22 15:30:11,883 - slack_bolt.App - DEBUG - [client.py:99] - A new message enqueued (current queue size: 1)
2025-08-22 15:30:11,883 - slack_bolt.App - DEBUG - [client.py:105] - A message dequeued (current queue size: 0)
2025-08-22 15:30:11,884 - slack_bolt.App - DEBUG - [client.py:125] - Message processing started (type: hello, envelope_id: None)
2025-08-22 15:30:11,885 - slack_bolt.App - DEBUG - [client.py:150] - Message processing completed (type: hello, envelope_id: None)
2025-08-22 20:30:17,329 - slack_bolt.App - DEBUG - [client.py:235] - on_message invoked: (message: {"type":"disconnect","reason":"warning","debug_info":{"host":"applink-0"}})
2025-08-22 20:30:17,333 - slack_bolt.App - DEBUG - [client.py:99] - A new message enqueued (current queue size: 1)
2025-08-22 20:30:17,333 - slack_bolt.App - DEBUG - [client.py:105] - A message dequeued (current queue size: 0)
2025-08-22 20:30:17,334 - slack_bolt.App - INFO - [client.py:76] - Connecting to a new endpoint...
2025-08-22 20:30:17,335 - slack_bolt.App - DEBUG - [base_client.py:255] - Sending a request - url: https://slack.com/api/apps.connections.open, query_params: {}, body_params: {}, files: {}, json_body: None, headers: {'Content-Type': 'application/x-www-form-urlencoded', 'Authorization': '(redacted)', 'User-Agent': 'Bolt/1.16.0 Python/3.12.0 slackclient/3.34.0 Darwin/23.4.0'}
2025-08-22 20:30:18,485 - slack_bolt.App - DEBUG - [base_client.py:546] - Received the following response - status: 200, headers: {'date': 'Sat, 23 Aug 2025 03:30:18 GMT', 'server': 'Apache', 'vary': 'Accept-Encoding', 'x-slack-req-id': '17987e08ddb7a0dbe1eb3aab50e47ec8', 'x-content-type-options': 'nosniff', 'x-xss-protection': '0', 'x-robots-tag': 'noindex,nofollow', 'pragma': 'no-cache', 'cache-control': 'private, no-cache, no-store, must-revalidate', 'expires': 'Sat, 26 Jul 1997 05:00:00 GMT', 'content-type': 'application/json; charset=utf-8', 'x-accepted-oauth-scopes': 'connections:write', 'x-oauth-scopes': 'connections:write', 'access-control-expose-headers': 'x-slack-req-id, retry-after', 'access-control-allow-headers': 'slack-route, x-slack-version-ts, x-b3-traceid, x-b3-spanid, x-b3-parentspanid, x-b3-sampled, x-b3-flags', 'strict-transport-security': 'max-age=31536000; includeSubDomains; preload', 'referrer-policy': 'no-referrer', 'x-slack-unique-id': 'aKk1yu_lRc44I8ER3Jy6twAAEDw', 'x-slack-backend': 'r', 'access-control-allow-origin': '*', 'content-length': '173', 'via': '1.1 slack-prod.tinyspeck.com, envoy-www-iad-brespyjn,envoy-edge-pdx-snkiecma', 'x-envoy-attempt-count': '1', 'x-envoy-upstream-service-time': '446', 'x-backend': 'main_normal main_canary_with_overflow main_control_with_overflow', 'x-server': 'slack-www-hhvm-main-iad-ztmg', 'x-slack-shared-secret-outcome': 'no-match', 'x-edge-backend': 'envoy-www', 'timing-allow-origin': '*', 'x-slack-edge-shared-secret-outcome': 'no-match', 'connection': 'close'}, body: {"ok":true,"url":"wss:\/\/wss-primary.slack.com\/link\/?ticket=e1f1cd33-0d37-4e9c-8866-47529c44a4eb&app_id=a6c8d361ee1c6f398c5b4afec831555b78d7affa753b16bcc0fc64d7c13f3766"}
2025-08-22 20:30:22,964 - slack_bolt.App - INFO - [connection.py:195] - The connection has been closed (session id: dc339600-26bd-4039-93c1-87d2694d207d)
2025-08-22 20:30:22,965 - slack_bolt.App - INFO - [client.py:268] - Stopped receiving messages from a connection (session id: dc339600-26bd-4039-93c1-87d2694d207d)
2025-08-22 20:30:22,965 - slack_bolt.App - INFO - [client.py:192] - A new session has been established (session id: a2461d63-4200-40a2-9cd5-878dd7edca9f)
2025-08-22 20:30:22,965 - slack_bolt.App - INFO - [client.py:79] - Connected to a new endpoint...
2025-08-22 20:30:23,075 - slack_bolt.App - INFO - [client.py:265] - Starting to receive messages from a new connection (session id: a2461d63-4200-40a2-9cd5-878dd7edca9f)
2025-08-22 20:30:23,076 - slack_bolt.App - DEBUG - [client.py:235] - on_message invoked: (message: {"type":"hello","num_connections":2,"debug_info":{"host":"applink-1","build_number":0,"approximate_connection_time":18060},"connection_info":{"app_id":"A099LACAB2R"}})
2025-08-22 20:30:23,076 - slack_bolt.App - DEBUG - [client.py:99] - A new message enqueued (current queue size: 1)
2025-08-22 20:30:23,076 - slack_bolt.App - DEBUG - [client.py:105] - A message dequeued (current queue size: 0)
2025-08-22 20:30:23,077 - slack_bolt.App - DEBUG - [client.py:125] - Message processing started (type: hello, envelope_id: None)
2025-08-22 20:30:23,077 - slack_bolt.App - DEBUG - [client.py:150] - Message processing completed (type: hello, envelope_id: None)
2025-08-22 21:30:26,048 - slack_bolt.App - INFO - [connection.py:254] - Unable to send a ping message. Closing the connection... (session id: a2461d63-4200-40a2-9cd5-878dd7edca9f, reason: TLS/SSL connection has been closed (EOF) (_ssl.c:2406))
2025-08-22 21:30:26,050 - slack_bolt.App - INFO - [connection.py:195] - The connection has been closed (session id: a2461d63-4200-40a2-9cd5-878dd7edca9f)
2025-08-22 21:30:26,050 - slack_bolt.App - DEBUG - [internals.py:218] - The connection seems to be already closed.
2025-08-22 21:30:26,050 - slack_bolt.App - INFO - [client.py:282] - The session seems to be already closed. Reconnecting... (session id: a2461d63-4200-40a2-9cd5-878dd7edca9f)
2025-08-22 21:30:26,051 - slack_bolt.App - INFO - [client.py:76] - Connecting to a new endpoint...
2025-08-22 21:30:26,051 - slack_bolt.App - DEBUG - [base_client.py:255] - Sending a request - url: https://slack.com/api/apps.connections.open, query_params: {}, body_params: {}, files: {}, json_body: None, headers: {'Content-Type': 'application/x-www-form-urlencoded', 'Authorization': '(redacted)', 'User-Agent': 'Bolt/1.16.0 Python/3.12.0 slackclient/3.34.0 Darwin/23.4.0'}
2025-08-22 21:30:57,621 - slack_bolt.App - ERROR - [base_client.py:474] - Failed to send a request to Slack API server: <urlopen error [Errno 54] Connection reset by peer>
2025-08-22 21:30:57,621 - slack_bolt.App - INFO - [base_client.py:486] - A retry handler found: ConnectionErrorRetryHandler for POST https://slack.com/api/apps.connections.open - <urlopen error [Errno 54] Connection reset by peer>
2025-08-22 21:30:58,916 - slack_bolt.App - INFO - [base_client.py:495] - Going to retry the same request: POST https://slack.com/api/apps.connections.open
2025-08-22 21:31:38,062 - slack_bolt.App - ERROR - [base_client.py:474] - Failed to send a request to Slack API server: <urlopen error [Errno 54] Connection reset by peer>
2025-08-22 21:31:38,062 - slack_bolt.App - ERROR - [client.py:287] - Failed to check the current session or reconnect to the server (session id: a2461d63-4200-40a2-9cd5-878dd7edca9f, error: URLError, message: <urlopen error [Errno 54] Connection reset by peer>)
2025-08-22 21:31:48,071 - slack_bolt.App - DEBUG - [connection.py:281] - This connection is already closed. (session id: a2461d63-4200-40a2-9cd5-878dd7edca9f)
2025-08-22 21:31:48,072 - slack_bolt.App - INFO - [client.py:282] - The session seems to be already closed. Reconnecting... (session id: a2461d63-4200-40a2-9cd5-878dd7edca9f)
2025-08-22 21:31:48,072 - slack_bolt.App - INFO - [client.py:76] - Connecting to a new endpoint...
2025-08-22 21:31:48,073 - slack_bolt.App - DEBUG - [base_client.py:255] - Sending a request - url: https://slack.com/api/apps.connections.open, query_params: {}, body_params: {}, files: {}, json_body: None, headers: {'Content-Type': 'application/x-www-form-urlencoded', 'Authorization': '(redacted)', 'User-Agent': 'Bolt/1.16.0 Python/3.12.0 slackclient/3.34.0 Darwin/23.4.0'}
2025-08-22 21:31:48,397 - slack_bolt.App - DEBUG - [base_client.py:546] - Received the following response - status: 200, headers: {'date': 'Sat, 23 Aug 2025 04:31:48 GMT', 'server': 'Apache', 'vary': 'Accept-Encoding', 'x-slack-req-id': '014c8f761878891c96d3adc1b61e54f8', 'x-content-type-options': 'nosniff', 'x-xss-protection': '0', 'x-robots-tag': 'noindex,nofollow', 'pragma': 'no-cache', 'cache-control': 'private, no-cache, no-store, must-revalidate', 'expires': 'Sat, 26 Jul 1997 05:00:00 GMT', 'content-type': 'application/json; charset=utf-8', 'x-accepted-oauth-scopes': 'connections:write', 'x-oauth-scopes': 'connections:write', 'access-control-expose-headers': 'x-slack-req-id, retry-after', 'access-control-allow-headers': 'slack-route, x-slack-version-ts, x-b3-traceid, x-b3-spanid, x-b3-parentspanid, x-b3-sampled, x-b3-flags', 'strict-transport-security': 'max-age=31536000; includeSubDomains; preload', 'referrer-policy': 'no-referrer', 'x-slack-unique-id': 'aKlENO7PYHJArjQAml89qgAAEBg', 'x-slack-backend': 'r', 'access-control-allow-origin': '*', 'content-length': '173', 'via': '1.1 slack-prod.tinyspeck.com, envoy-www-iad-psocbgkk,envoy-edge-pdx-ipsntelu', 'x-envoy-attempt-count': '1', 'x-envoy-upstream-service-time': '88', 'x-backend': 'main_normal main_canary_with_overflow main_control_with_overflow', 'x-server': 'slack-www-hhvm-main-iad-pkts', 'x-slack-shared-secret-outcome': 'no-match', 'x-edge-backend': 'envoy-www', 'timing-allow-origin': '*', 'x-slack-edge-shared-secret-outcome': 'no-match', 'connection': 'close'}, body: {"ok":true,"url":"wss:\/\/wss-primary.slack.com\/link\/?ticket=612795c1-82bc-4445-86a8-d7d063c6fe95&app_id=a6c8d361ee1c6f398c5b4afec831555b78d7affa753b16bcc0fc64d7c13f3766"}
2025-08-22 21:31:48,935 - slack_bolt.App - INFO - [connection.py:195] - The connection has been closed (session id: a2461d63-4200-40a2-9cd5-878dd7edca9f)
2025-08-22 21:31:48,935 - slack_bolt.App - INFO - [client.py:192] - A new session has been established (session id: 044c16b7-261c-4a8a-a4e6-b5a07310c84c)
2025-08-22 21:31:48,935 - slack_bolt.App - INFO - [client.py:79] - Connected to a new endpoint...
2025-08-22 21:31:49,045 - slack_bolt.App - INFO - [client.py:268] - Stopped receiving messages from a connection (session id: a2461d63-4200-40a2-9cd5-878dd7edca9f)
2025-08-22 21:31:49,151 - slack_bolt.App - INFO - [client.py:265] - Starting to receive messages from a new connection (session id: 044c16b7-261c-4a8a-a4e6-b5a07310c84c)
2025-08-22 21:31:49,151 - slack_bolt.App - DEBUG - [client.py:235] - on_message invoked: (message: {"type":"hello","num_connections":1,"debug_info":{"host":"applink-10","build_number":0,"approximate_connection_time":18060},"connection_info":{"app_id":"A099LACAB2R"}})
2025-08-22 21:31:49,151 - slack_bolt.App - DEBUG - [client.py:99] - A new message enqueued (current queue size: 1)
2025-08-22 21:31:49,151 - slack_bolt.App - DEBUG - [client.py:105] - A message dequeued (current queue size: 0)
2025-08-22 21:31:49,151 - slack_bolt.App - DEBUG - [client.py:125] - Message processing started (type: hello, envelope_id: None)
2025-08-22 21:31:49,151 - slack_bolt.App - DEBUG - [client.py:150] - Message processing completed (type: hello, envelope_id: None)
2025-08-22 21:32:36,429 - __main__ - INFO - [main.py:43] - Loading application configuration...
2025-08-22 21:32:36,429 - __main__ - INFO - [main.py:45] - Configuration loaded successfully
2025-08-22 21:32:36,429 - __main__ - INFO - [main.py:48] - Initializing security components...
2025-08-22 21:32:36,429 - __main__ - DEBUG - [main.py:50] - Slack validator initialized
2025-08-22 21:32:36,429 - security.content_filter - INFO - [content_filter.py:39] - Content filter initialized with 11 patterns
2025-08-22 21:32:36,430 - __main__ - DEBUG - [main.py:53] - Content filter initialized
2025-08-22 21:32:36,430 - auth.admin_manager - INFO - [admin_manager.py:27] - Admin manager initialized with 2 admin users
2025-08-22 21:32:36,430 - __main__ - DEBUG - [main.py:56] - Admin manager initialized
2025-08-22 21:32:36,430 - auth.email_whitelist - INFO - [email_whitelist.py:28] - Email whitelist initialized with 1 whitelisted emails
2025-08-22 21:32:36,430 - auth.email_whitelist - INFO - [email_whitelist.py:37] - Whitelisted domains: paramount.com
2025-08-22 21:32:36,430 - __main__ - DEBUG - [main.py:59] - Email whitelist initialized with 1 emails
2025-08-22 21:32:36,430 - auth.slack_user_info - DEBUG - [slack_user_info.py:25] - Slack user info manager initialized
2025-08-22 21:32:36,430 - __main__ - DEBUG - [main.py:62] - Slack user info manager initialized
2025-08-22 21:32:36,430 - __main__ - INFO - [main.py:63] - Security components initialized successfully
2025-08-22 21:32:36,430 - __main__ - INFO - [main.py:66] - Initializing Slack app...
2025-08-22 21:32:36,467 - slack_bolt.App - DEBUG - [base_client.py:255] - Sending a request - url: https://slack.com/api/auth.test, query_params: {}, body_params: {}, files: {}, json_body: None, headers: {'Content-Type': 'application/x-www-form-urlencoded', 'Authorization': '(redacted)', 'User-Agent': 'Bolt/1.16.0 Python/3.12.0 slackclient/3.34.0 Darwin/23.4.0'}
2025-08-22 21:32:36,823 - slack_bolt.App - DEBUG - [base_client.py:546] - Received the following response - status: 200, headers: {'date': 'Sat, 23 Aug 2025 04:32:36 GMT', 'server': 'Apache', 'vary': 'Accept-Encoding', 'x-slack-req-id': '96287c83b784630817036d2500136708', 'x-content-type-options': 'nosniff', 'x-xss-protection': '0', 'pragma': 'no-cache', 'cache-control': 'private, no-cache, no-store, must-revalidate', 'expires': 'Sat, 26 Jul 1997 05:00:00 GMT', 'content-type': 'application/json; charset=utf-8', 'x-oauth-scopes': 'app_mentions:read,channels:history,chat:write,im:history,im:read,im:write,users:read,reactions:write,users:read.email', 'access-control-expose-headers': 'x-slack-req-id, retry-after', 'access-control-allow-headers': 'slack-route, x-slack-version-ts, x-b3-traceid, x-b3-spanid, x-b3-parentspanid, x-b3-sampled, x-b3-flags', 'strict-transport-security': 'max-age=31536000; includeSubDomains; preload', 'referrer-policy': 'no-referrer', 'x-slack-unique-id': 'aKlEZP7ajNgk3VinlbiWpgAAEBc', 'x-slack-backend': 'r', 'access-control-allow-origin': '*', 'content-length': '228', 'via': '1.1 slack-prod.tinyspeck.com, envoy-www-iad-nbyvwueb,envoy-edge-pdx-sdqrpjqx', 'x-envoy-attempt-count': '1', 'x-envoy-upstream-service-time': '106', 'x-backend': 'main_normal main_canary_with_overflow main_control_with_overflow', 'x-server': 'slack-www-hhvm-main-iad-tovw', 'x-slack-shared-secret-outcome': 'no-match', 'x-edge-backend': 'envoy-www', 'timing-allow-origin': '*', 'x-slack-edge-shared-secret-outcome': 'no-match', 'connection': 'close'}, body: {"ok":true,"url":"https://viacomcbs-grid-test.slack.com/","team":"Test Workspace","user":"autobot","team_id":"T010QS7UQNA","user_id":"U099R6WTZ9S","bot_id":"B099R6WTRU4","enterprise_id":"ERV4P7NAD","is_enterprise_install":false}
2025-08-22 21:32:36,823 - __main__ - INFO - [main.py:68] - Slack app initialized successfully
2025-08-22 21:32:36,823 - __main__ - DEBUG - [main.py:72] - Message deduplication cache initialized
2025-08-22 21:32:36,823 - __main__ - DEBUG - [main.py:77] - Thread tracking initialized
2025-08-22 21:32:36,823 - __main__ - INFO - [main.py:80] - Initializing DIG AI integration...
2025-08-22 21:32:36,824 - dig_connector - INFO - [dig_connector.py:284] - Initializing DIG AI with model ID: 42
2025-08-22 21:32:36,824 - dig_connector - INFO - [dig_connector.py:49] - Starting DIG chat session initialization...
2025-08-22 21:32:36,824 - dig_connector - DEBUG - [dig_connector.py:52] - Creating chat with name: Slack Bot Session 2025-08-23T04:32:36.824812+00:00
2025-08-22 21:32:36,824 - dig_connector - DEBUG - [dig_connector.py:63] - Creating chat - URL: https://ai.digdev.cbsicloud.com/fastapi/chats, Payload: {'chat_nm': 'Slack Bot Session 2025-08-23T04:32:36.824812+00:00', 'model_id': 42}
2025-08-22 21:32:36,829 - urllib3.connectionpool - DEBUG - [connectionpool.py:1055] - Starting new HTTPS connection (1): ai.digdev.cbsicloud.com:443
2025-08-22 21:32:37,068 - urllib3.connectionpool - DEBUG - [connectionpool.py:549] - https://ai.digdev.cbsicloud.com:443 "POST /fastapi/chats HTTP/1.1" 200 217
2025-08-22 21:32:37,069 - dig_connector - DEBUG - [dig_connector.py:66] - Create chat response: status=200
2025-08-22 21:32:37,069 - dig_connector - INFO - [dig_connector.py:54] - Successfully initialized DIG chat session with ID: 895
2025-08-22 21:32:37,069 - __main__ - INFO - [main.py:83] - DIG AI integration successfully initialized
2025-08-22 21:32:37,069 - __main__ - INFO - [main.py:87] - Setting up event handlers...
2025-08-22 21:32:37,070 - __main__ - INFO - [main.py:751] - Starting AI Assistant Bot...
2025-08-22 21:32:37,070 - __main__ - INFO - [main.py:752] - Registering event handlers...
2025-08-22 21:32:37,071 - __main__ - DEBUG - [main.py:753] - Event handlers registered: app_mention, message, app_home_opened
2025-08-22 21:32:37,071 - __main__ - INFO - [main.py:756] - Connecting to Slack via Socket Mode...
2025-08-22 21:32:37,071 - __main__ - INFO - [main.py:760] - Socket Mode handler created successfully
2025-08-22 21:32:37,071 - __main__ - INFO - [main.py:762] - ✅ Bot is now running and listening for events!
2025-08-22 21:32:37,072 - slack_bolt.App - DEBUG - [base_client.py:255] - Sending a request - url: https://slack.com/api/apps.connections.open, query_params: {}, body_params: {}, files: {}, json_body: None, headers: {'Content-Type': 'application/x-www-form-urlencoded', 'Authorization': '(redacted)', 'User-Agent': 'Bolt/1.16.0 Python/3.12.0 slackclient/3.34.0 Darwin/23.4.0'}
2025-08-22 21:32:37,385 - slack_bolt.App - DEBUG - [base_client.py:546] - Received the following response - status: 200, headers: {'date': 'Sat, 23 Aug 2025 04:32:37 GMT', 'server': 'Apache', 'vary': 'Accept-Encoding', 'x-slack-req-id': '99ac39769464bbd808758ec993136f42', 'x-content-type-options': 'nosniff', 'x-xss-protection': '0', 'x-robots-tag': 'noindex,nofollow', 'pragma': 'no-cache', 'cache-control': 'private, no-cache, no-store, must-revalidate', 'expires': 'Sat, 26 Jul 1997 05:00:00 GMT', 'content-type': 'application/json; charset=utf-8', 'x-accepted-oauth-scopes': 'connections:write', 'x-oauth-scopes': 'connections:write', 'access-control-expose-headers': 'x-slack-req-id, retry-after', 'access-control-allow-headers': 'slack-route, x-slack-version-ts, x-b3-traceid, x-b3-spanid, x-b3-parentspanid, x-b3-sampled, x-b3-flags', 'strict-transport-security': 'max-age=31536000; includeSubDomains; preload', 'referrer-policy': 'no-referrer', 'x-slack-unique-id': 'aKlEZV9h00zuHTQyngkbPQAAEDQ', 'x-slack-backend': 'r', 'access-control-allow-origin': '*', 'content-length': '173', 'via': '1.1 slack-prod.tinyspeck.com, envoy-www-iad-caapsemr,envoy-edge-pdx-ppturzvu', 'x-envoy-attempt-count': '1', 'x-envoy-upstream-service-time': '94', 'x-backend': 'main_normal main_canary_with_overflow main_control_with_overflow', 'x-server': 'slack-www-hhvm-main-iad-qvmg', 'x-slack-shared-secret-outcome': 'no-match', 'x-edge-backend': 'envoy-www', 'timing-allow-origin': '*', 'x-slack-edge-shared-secret-outcome': 'no-match', 'connection': 'close'}, body: {"ok":true,"url":"wss:\/\/wss-primary.slack.com\/link\/?ticket=cae7272b-56f7-428b-b87c-fb7030ab158e&app_id=a6c8d361ee1c6f398c5b4afec831555b78d7affa753b16bcc0fc64d7c13f3766"}
2025-08-22 21:32:37,913 - slack_bolt.App - INFO - [client.py:192] - A new session has been established (session id: 352e8ced-d1e0-4993-8c52-42ca285b7821)
2025-08-22 21:32:37,913 - slack_bolt.App - INFO - [base_handler.py:50] - ⚡️ Bolt app is running!
2025-08-22 21:32:38,006 - slack_bolt.App - INFO - [client.py:265] - Starting to receive messages from a new connection (session id: 352e8ced-d1e0-4993-8c52-42ca285b7821)
2025-08-22 21:32:38,006 - slack_bolt.App - DEBUG - [client.py:235] - on_message invoked: (message: {"type":"hello","num_connections":2,"debug_info":{"host":"applink-5","build_number":0,"approximate_connection_time":18060},"connection_info":{"app_id":"A099LACAB2R"}})
2025-08-22 21:32:38,007 - slack_bolt.App - DEBUG - [client.py:99] - A new message enqueued (current queue size: 1)
2025-08-22 21:32:38,007 - slack_bolt.App - DEBUG - [client.py:105] - A message dequeued (current queue size: 0)
2025-08-22 21:32:38,008 - slack_bolt.App - DEBUG - [client.py:125] - Message processing started (type: hello, envelope_id: None)
2025-08-22 21:32:38,008 - slack_bolt.App - DEBUG - [client.py:150] - Message processing completed (type: hello, envelope_id: None)
2025-08-22 21:32:44,185 - slack_bolt.App - DEBUG - [client.py:235] - on_message invoked: (message: {"envelope_id":"dfd42690-46e3-4709-a3c8-e722d54a4ae3","payload":{"token":"yq71khZBCyJF1Ri2hG5aNqr5","team_id":"T010QS7UQNA","enterprise_id":"ERV4P7NAD","context_team_id":null,"context_enterprise_id":"ERV4P7NAD","api_app_id":"A099LACAB2R","event":{"user":"U01RMTFMALF","type":"message","ts":"1755923563.431829","client_msg_id":"b9afbd91-d3fb-40cd-9113-55d53840c343","text":"How can i run an automated test on a local Android phone?","blocks":[{"type":"rich_text","block_id":"vQwBP","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"How can i run an automated test on a local Android phone?"}]}]}],"channel":"D09A0LFHK8R","event_ts":"1755923563.431829","channel_type":"im"},"type":"event_callback","event_id":"Ev09BTP2PHM2","event_time":1755923563,"authorizations":[{"enterprise_id":"ERV4P7NAD","team_id":"T010QS7UQNA","user_id":"U099R6WTZ9S","is_bot":true,"is_enterprise_install":false}],"is_ext_shared_channel":false,"event_context":"4-eyJldCI6Im1lc3NhZ2UiLCJ0aWQiOiJUMDEwUVM3VVFOQSIsImFpZCI6IkEwOTlMQUNBQjJSIiwiY2lkIjoiRDA5QTBMRkhLOFIifQ"},"type":"events_api","accepts_response_payload":false,"retry_attempt":0,"retry_reason":""})
2025-08-22 21:32:44,186 - slack_bolt.App - DEBUG - [client.py:99] - A new message enqueued (current queue size: 1)
2025-08-22 21:32:44,186 - slack_bolt.App - DEBUG - [client.py:105] - A message dequeued (current queue size: 0)
2025-08-22 21:32:44,186 - slack_bolt.App - DEBUG - [client.py:125] - Message processing started (type: events_api, envelope_id: dfd42690-46e3-4709-a3c8-e722d54a4ae3)
2025-08-22 21:32:44,187 - slack_bolt.App - DEBUG - [app.py:476] - Applying slack_bolt.middleware.ssl_check.ssl_check.SslCheck
2025-08-22 21:32:44,187 - slack_bolt.App - DEBUG - [app.py:476] - Applying slack_bolt.middleware.request_verification.request_verification.RequestVerification
2025-08-22 21:32:44,187 - slack_bolt.App - DEBUG - [app.py:476] - Applying slack_bolt.middleware.authorization.single_team_authorization.SingleTeamAuthorization
2025-08-22 21:32:44,188 - slack_bolt.App - DEBUG - [app.py:476] - Applying slack_bolt.middleware.ignoring_self_events.ignoring_self_events.IgnoringSelfEvents
2025-08-22 21:32:44,188 - slack_bolt.App - DEBUG - [app.py:476] - Applying slack_bolt.middleware.url_verification.url_verification.UrlVerification
2025-08-22 21:32:44,188 - slack_bolt.App - DEBUG - [app.py:500] - Checking listener: handle_app_mentions ...
2025-08-22 21:32:44,188 - slack_bolt.App - DEBUG - [app.py:500] - Checking listener: help_message ...
2025-08-22 21:32:44,189 - slack_bolt.App - DEBUG - [app.py:500] - Checking listener: handle_dm_messages ...
2025-08-22 21:32:44,189 - slack_bolt.App - DEBUG - [app.py:522] - Running listener: handle_dm_messages ...
2025-08-22 21:32:44,189 - __main__ - INFO - [main.py:501] - === DM MESSAGE EVENT RECEIVED ===
2025-08-22 21:32:44,189 - slack_bolt.App - DEBUG - [thread_runner.py:198] - Responding with status: 200 body: "" (0 millis)
2025-08-22 21:32:44,190 - __main__ - DEBUG - [main.py:502] - Full event body: {'token': 'yq71khZBCyJF1Ri2hG5aNqr5', 'team_id': 'T010QS7UQNA', 'enterprise_id': 'ERV4P7NAD', 'context_team_id': None, 'context_enterprise_id': 'ERV4P7NAD', 'api_app_id': 'A099LACAB2R', 'event': {'user': 'U01RMTFMALF', 'type': 'message', 'ts': '1755923563.431829', 'client_msg_id': 'b9afbd91-d3fb-40cd-9113-55d53840c343', 'text': 'How can i run an automated test on a local Android phone?', 'blocks': [{'type': 'rich_text', 'block_id': 'vQwBP', 'elements': [{'type': 'rich_text_section', 'elements': [{'type': 'text', 'text': 'How can i run an automated test on a local Android phone?'}]}]}], 'channel': 'D09A0LFHK8R', 'event_ts': '1755923563.431829', 'channel_type': 'im'}, 'type': 'event_callback', 'event_id': 'Ev09BTP2PHM2', 'event_time': 1755923563, 'authorizations': [{'enterprise_id': 'ERV4P7NAD', 'team_id': 'T010QS7UQNA', 'user_id': 'U099R6WTZ9S', 'is_bot': True, 'is_enterprise_install': False}], 'is_ext_shared_channel': False, 'event_context': '4-eyJldCI6Im1lc3NhZ2UiLCJ0aWQiOiJUMDEwUVM3VVFOQSIsImFpZCI6IkEwOTlMQUNBQjJSIiwiY2lkIjoiRDA5QTBMRkhLOFIifQ'}
2025-08-22 21:32:44,190 - slack_bolt.App - DEBUG - [client.py:200] - Sending a message (session id: 352e8ced-d1e0-4993-8c52-42ca285b7821, message: {"envelope_id": "dfd42690-46e3-4709-a3c8-e722d54a4ae3"})
2025-08-22 21:32:44,190 - __main__ - INFO - [main.py:511] - DM Event details: channel=D09A0LFHK8R, user=U01RMTFMALF, ts=1755923563.431829
2025-08-22 21:32:44,190 - __main__ - DEBUG - [main.py:512] - DM Event text: How can i run an automated test on a local Android phone?
2025-08-22 21:32:44,190 - utils - DEBUG - [utils.py:27] - Checking message processing: channel=D09A0LFHK8R, ts=1755923563.431829, text='How can i run an automated test on a local Android...'
2025-08-22 21:32:44,190 - slack_bolt.App - DEBUG - [internals.py:41] - Response time: 3 milliseconds
2025-08-22 21:32:44,190 - utils - DEBUG - [utils.py:31] - Message hash: e556a73cbda593791173700836106cbb
2025-08-22 21:32:44,190 - slack_bolt.App - DEBUG - [client.py:150] - Message processing completed (type: events_api, envelope_id: dfd42690-46e3-4709-a3c8-e722d54a4ae3)
2025-08-22 21:32:44,190 - utils - DEBUG - [utils.py:53] - Added message to processing cache (total entries: 1)
2025-08-22 21:32:44,190 - __main__ - DEBUG - [main.py:525] - Bot check: bot_id=None, user_id=U01RMTFMALF
2025-08-22 21:32:44,190 - __main__ - DEBUG - [main.py:530] - Question received: 'How can i run an automated test on a local Android phone?'
2025-08-22 21:32:44,191 - __main__ - DEBUG - [main.py:536] - Checking user access for DM...
2025-08-22 21:32:44,191 - auth.slack_user_info - DEBUG - [slack_user_info.py:48] - Fetching user info for user_id: U01RMTFMALF
2025-08-22 21:32:44,191 - slack_sdk.web.base_client - DEBUG - [base_client.py:255] - Sending a request - url: https://slack.com/api/users.info, query_params: {}, body_params: {'user': 'U01RMTFMALF', 'team_id': 'T010QS7UQNA'}, files: {}, json_body: None, headers: {'Content-Type': 'application/x-www-form-urlencoded', 'Authorization': '(redacted)', 'User-Agent': 'Python/3.12.0 slackclient/3.34.0 Darwin/23.4.0'}
2025-08-22 21:32:44,523 - slack_sdk.web.base_client - DEBUG - [base_client.py:546] - Received the following response - status: 200, headers: {'date': 'Sat, 23 Aug 2025 04:32:44 GMT', 'server': 'Apache', 'vary': 'Accept-Encoding', 'x-slack-req-id': '2d1236e2310b57ebd52bb04ba1fc2ee6', 'x-content-type-options': 'nosniff', 'x-xss-protection': '0', 'pragma': 'no-cache', 'cache-control': 'private, no-cache, no-store, must-revalidate', 'expires': 'Sat, 26 Jul 1997 05:00:00 GMT', 'content-type': 'application/json; charset=utf-8', 'x-accepted-oauth-scopes': 'users:read', 'x-oauth-scopes': 'app_mentions:read,channels:history,chat:write,im:history,im:read,im:write,users:read,reactions:write,users:read.email', 'access-control-expose-headers': 'x-slack-req-id, retry-after', 'access-control-allow-headers': 'slack-route, x-slack-version-ts, x-b3-traceid, x-b3-spanid, x-b3-parentspanid, x-b3-sampled, x-b3-flags', 'strict-transport-security': 'max-age=31536000; includeSubDomains; preload', 'referrer-policy': 'no-referrer', 'x-slack-unique-id': 'aKlEbEZoThof7I9IlpxTfgAAEA0', 'x-slack-backend': 'r', 'access-control-allow-origin': '*', 'content-length': '2057', 'via': '1.1 slack-prod.tinyspeck.com, envoy-www-iad-fzwekecv,envoy-edge-pdx-tpylawuv', 'x-envoy-attempt-count': '1', 'x-envoy-upstream-service-time': '111', 'x-backend': 'main_normal main_canary_with_overflow main_control_with_overflow', 'x-server': 'slack-www-hhvm-main-iad-pibo', 'x-slack-shared-secret-outcome': 'no-match', 'x-edge-backend': 'envoy-www', 'timing-allow-origin': '*', 'x-slack-edge-shared-secret-outcome': 'no-match', 'connection': 'close'}, body: {"ok":true,"user":{"id":"U01RMTFMALF","name":"popov8533","is_bot":false,"updated":1755907280,"is_app_user":false,"team_id":"T010QS7UQNA","deleted":false,"color":"4bbe2e","is_email_confirmed":true,"real_name":"Alexandr Popov","tz":"America\/Los_Angeles","tz_label":"Pacific Daylight Time","tz_offset":-25200,"is_admin":false,"is_owner":false,"is_primary_owner":false,"is_restricted":false,"is_ultra_restricted":false,"enterprise_user":{"id":"U01RMTFMALF","enterprise_id":"ERV4P7NAD","enterprise_name":"Paramount Global","is_admin":false,"is_owner":false,"is_primary_owner":false,"teams":["T010QS7UQNA","T02H1PQMF"]},"who_can_share_contact_card":"EVERYONE","profile":{"real_name":"Alexandr Popov","display_name":"Alex Popov","avatar_hash":"a64f82312a14","real_name_normalized":"Alexandr Popov","display_name_normalized":"Alex Popov","image_24":"https:\/\/avatars.slack-edge.com\/2023-03-29\/5033076824964_a64f82312a141123fbbf_24.png","image_32":"https:\/\/avatars.slack-edge.com\/2023-03-29\/5033076824964_a64f82312a141123fbbf_32.png","image_48":"https:\/\/avatars.slack-edge.com\/2023-03-29\/5033076824964_a64f82312a141123fbbf_48.png","image_72":"https:\/\/avatars.slack-edge.com\/2023-03-29\/5033076824964_a64f82312a141123fbbf_72.png","image_192":"https:\/\/avatars.slack-edge.com\/2023-03-29\/5033076824964_a64f82312a141123fbbf_192.png","image_512":"https:\/\/avatars.slack-edge.com\/2023-03-29\/5033076824964_a64f82312a141123fbbf_512.png","image_1024":"https:\/\/avatars.slack-edge.com\/2023-03-29\/5033076824964_a64f82312a141123fbbf_1024.png","image_original":"https:\/\/avatars.slack-edge.com\/2023-03-29\/5033076824964_a64f82312a141123fbbf_original.png","is_custom_image":true,"first_name":"Alexandr","last_name":"Popov","team":"T010QS7UQNA","email":"alexandr.popov@paramount.com","title":"Senior Software Quality Assurance Engineer","phone":"","skype":"","status_text":"","status_text_canonical":"","status_emoji":"","status_emoji_display_info":[],"status_expiration":0,"huddle_state":"default_unset","huddle_state_expiration_ts":0,"ooo_message":""}}}
2025-08-22 21:32:44,523 - auth.slack_user_info - DEBUG - [slack_user_info.py:63] - Retrieved email for user U01RMTFMALF: alexandr.popov@paramount.com
2025-08-22 21:32:44,523 - auth.email_whitelist - DEBUG - [email_whitelist.py:57] - Email access granted: alexandr.popov@paramount.com
2025-08-22 21:32:44,523 - __main__ - INFO - [main.py:118] - Access granted to user U01RMTFMALF with email alexandr.popov@paramount.com
2025-08-22 21:32:44,523 - __main__ - DEBUG - [main.py:542] - User access check passed for DM
2025-08-22 21:32:44,523 - __main__ - INFO - [main.py:544] - Processing DM question from user U01RMTFMALF: How can i run an automated test on a local Android phone?
2025-08-22 21:32:44,523 - __main__ - DEBUG - [main.py:547] - Starting DM processing...
2025-08-22 21:32:44,524 - __main__ - DEBUG - [main.py:550] - Checking if 'how can i run an automated test on a local android phone?' is an admin command in DM
2025-08-22 21:32:44,524 - __main__ - DEBUG - [main.py:586] - Checking if DM thread is already being processed...
2025-08-22 21:32:44,524 - utils - DEBUG - [utils.py:67] - Managing thread: D09A0LFHK8R:1755923563.431829, action: add, user: U01RMTFMALF
2025-08-22 21:32:44,524 - utils - INFO - [utils.py:94] - Added thread D09A0LFHK8R:1755923563.431829 to active tracking (total: 1)
2025-08-22 21:32:44,524 - __main__ - DEBUG - [main.py:591] - DM thread management check passed
2025-08-22 21:32:44,524 - slack_sdk.web.base_client - DEBUG - [base_client.py:255] - Sending a request - url: https://slack.com/api/reactions.add, query_params: {}, body_params: {'channel': 'D09A0LFHK8R', 'name': 'thinking_face', 'timestamp': '1755923563.431829', 'team_id': 'T010QS7UQNA'}, files: {}, json_body: None, headers: {'Content-Type': 'application/x-www-form-urlencoded', 'Authorization': '(redacted)', 'User-Agent': 'Python/3.12.0 slackclient/3.34.0 Darwin/23.4.0'}
2025-08-22 21:32:44,861 - slack_sdk.web.base_client - DEBUG - [base_client.py:546] - Received the following response - status: 200, headers: {'date': 'Sat, 23 Aug 2025 04:32:44 GMT', 'server': 'Apache', 'vary': 'Accept-Encoding', 'x-slack-req-id': 'b3826ef2093c386ddde05f69c6c6fd4f', 'x-content-type-options': 'nosniff', 'x-xss-protection': '0', 'pragma': 'no-cache', 'cache-control': 'private, no-cache, no-store, must-revalidate', 'expires': 'Sat, 26 Jul 1997 05:00:00 GMT', 'content-type': 'application/json; charset=utf-8', 'x-accepted-oauth-scopes': 'reactions:write', 'x-oauth-scopes': 'app_mentions:read,channels:history,chat:write,im:history,im:read,im:write,users:read,reactions:write,users:read.email', 'access-control-expose-headers': 'x-slack-req-id, retry-after', 'access-control-allow-headers': 'slack-route, x-slack-version-ts, x-b3-traceid, x-b3-spanid, x-b3-parentspanid, x-b3-sampled, x-b3-flags', 'strict-transport-security': 'max-age=31536000; includeSubDomains; preload', 'referrer-policy': 'no-referrer', 'x-slack-unique-id': 'aKlEbMLtLicxtpPuN7nYLwAAAAo', 'x-slack-backend': 'r', 'access-control-allow-origin': '*', 'content-length': '11', 'via': '1.1 slack-prod.tinyspeck.com, envoy-www-iad-yodcdryr,envoy-edge-pdx-kfexergj', 'x-envoy-attempt-count': '1', 'x-envoy-upstream-service-time': '136', 'x-backend': 'main_normal main_canary_with_overflow main_control_with_overflow', 'x-server': 'slack-www-hhvm-main-iad-gtzv', 'x-slack-shared-secret-outcome': 'no-match', 'x-edge-backend': 'envoy-www', 'timing-allow-origin': '*', 'x-slack-edge-shared-secret-outcome': 'no-match', 'connection': 'close'}, body: {"ok":true}
2025-08-22 21:32:44,862 - __main__ - INFO - [main.py:608] - Processing DM question from <@U01RMTFMALF>: How can i run an automated test on a local Android phone?
2025-08-22 21:32:44,862 - __main__ - INFO - [main.py:612] - Sending DM request to DIG AI...
2025-08-22 21:32:44,862 - dig_connector - INFO - [dig_connector.py:134] - Generating response for query: 'How can i run an automated test on a local Android phone?' with 0 chunks
2025-08-22 21:32:44,863 - dig_connector - DEBUG - [dig_connector.py:138] - Formatted context length: 0
2025-08-22 21:32:44,863 - dig_connector - INFO - [dig_connector.py:141] - No context available, using direct query
2025-08-22 21:32:44,863 - dig_connector - INFO - [dig_connector.py:150] - Sending prompt to DIG platform...
2025-08-22 21:32:44,863 - dig_connector - INFO - [dig_connector.py:121] - Sending message to DIG API - URL: https://ai.digdev.cbsicloud.com/fastapi/chats/895/generate
2025-08-22 21:32:44,863 - dig_connector - DEBUG - [dig_connector.py:122] - Message payload: {'model_id': 42, 'message_text': 'How can i run an automated test on a local Android phone?', 'history': [{'role': 'user', 'content': 'How can i run an automated test on a local Android phone?'}]}
2025-08-22 21:33:01,977 - urllib3.connectionpool - DEBUG - [connectionpool.py:549] - https://ai.digdev.cbsicloud.com:443 "POST /fastapi/chats/895/generate HTTP/1.1" 200 1371
2025-08-22 21:33:01,979 - dig_connector - DEBUG - [dig_connector.py:125] - DIG API response: status=200
2025-08-22 21:33:01,980 - dig_connector - DEBUG - [dig_connector.py:129] - DIG API response data: {'message_text': 'To run an automated test on a local Android phone, ensure your environment is set up correctly and consider using a mobile automation framework like Appium.\n\nFor Android emulators, you need to set the `$ANDROID_HOME` environment variable and include it in your system\'s path. This is crucial for your test configuration to locate the necessary Android SDK tools (Source: https://paramount.atlassian.net/wiki/spaces/PLQA/pages/47713566).\n\nA sample test class, `SampleTest.java`, demonstrates how to instantiate a Mobile Driver, start and stop an Appium server, and manage an Android Emulator. This class can be configured by passing command-line options to create the necessary drivers for your tests. The code snippet shows a check for a "local" environment and "android" driver, indicating support for local Android test execution (Source: https://paramount.atlassian.net/wiki/spaces/PLQA/pages/47711460).\n\nFor additional foundational knowledge on running apps and testing on Android, you can refer to the following resources:\n*   "Run Apps on the emulator": https://developer.android.com/studio/run/emulator\n*   "Fundamentals of testing android apps": https://developer.android.com/training/testing/fundamentals\n\n(Source: https://paramount.atlassian.net/wiki/spaces/PLQA/pages/47722061)', 'requires_approval': False, 'execution_id': 1597}
2025-08-22 21:33:01,980 - dig_connector - INFO - [dig_connector.py:154] - Extracting response content...
2025-08-22 21:33:01,980 - dig_connector - DEBUG - [dig_connector.py:221] - Found message_text in response
2025-08-22 21:33:01,980 - dig_connector - INFO - [dig_connector.py:157] - Successfully generated response (length: 1288)
2025-08-22 21:33:01,980 - __main__ - INFO - [main.py:615] - Received DM response from DIG AI
2025-08-22 21:33:01,980 - __main__ - DEBUG - [main.py:616] - DIG AI DM response: To run an automated test on a local Android phone, ensure your environment is set up correctly and consider using a mobile automation framework like Appium.

For Android emulators, you need to set the `$ANDROID_HOME` environment variable and include it in your system's path. This is crucial for your test configuration to locate the necessary Android SDK tools (Source: https://paramount.atlassian.net/wiki/spaces/PLQA/pages/47713566).

A sample test class, `SampleTest.java`, demonstrates how to instantiate a Mobile Driver, start and stop an Appium server, and manage an Android Emulator. This class can be configured by passing command-line options to create the necessary drivers for your tests. The code snippet shows a check for a "local" environment and "android" driver, indicating support for local Android test execution (Source: https://paramount.atlassian.net/wiki/spaces/PLQA/pages/47711460).

For additional foundational knowledge on running apps and testing on Android, you can refer to the following resources:
*   "Run Apps on the emulator": https://developer.android.com/studio/run/emulator
*   "Fundamentals of testing android apps": https://developer.android.com/training/testing/fundamentals

(Source: https://paramount.atlassian.net/wiki/spaces/PLQA/pages/47722061)
2025-08-22 21:33:01,981 - __main__ - DEBUG - [main.py:620] - Formatted DM response: Your Question:
> How can i run an automated test on a local Android phone?

Answer:

To run an automated test on a local Android phone, ensure your environment is set up correctly and consider using a mobile automation framework like Appium.

For Android emulators, you need to set the `$ANDROID_HOME` environment variable and include it in your system's path. This is crucial for your test configuration to locate the necessary Android SDK tools .

A sample test class, `SampleTest.java`, demonstrates how to instantiate a Mobile Driver, start and stop an Appium server, and manage an Android Emulator. This class can be configured by passing command-line options to create the necessary drivers for your tests. The code snippet shows a check for a "local" environment and "android" driver, indicating support for local Android test execution .

For additional foundational knowledge on running apps and testing on Android, you can refer to the following resources:
   "Run Apps on the emulator": https://developer.android.com/studio/run/emulator
   "Fundamentals of testing android apps": https://developer.android.com/training/testing/fundamentals

────────────────────────────────────────
📚 Sources:
1. https://paramount.atlassian.net/wiki/spaces/PLQA/pages/47713566
2. https://paramount.atlassian.net/wiki/spaces/PLQA/pages/47711460
3. https://paramount.atlassian.net/wiki/spaces/PLQA/pages/47722061

2025-08-22 21:33:01,982 - slack_sdk.web.base_client - DEBUG - [base_client.py:255] - Sending a request - url: https://slack.com/api/reactions.remove, query_params: {}, body_params: {'name': 'thinking_face', 'channel': 'D09A0LFHK8R', 'timestamp': '1755923563.431829', 'team_id': 'T010QS7UQNA'}, files: {}, json_body: None, headers: {'Content-Type': 'application/x-www-form-urlencoded', 'Authorization': '(redacted)', 'User-Agent': 'Python/3.12.0 slackclient/3.34.0 Darwin/23.4.0'}
2025-08-22 21:33:02,317 - slack_sdk.web.base_client - DEBUG - [base_client.py:546] - Received the following response - status: 200, headers: {'date': 'Sat, 23 Aug 2025 04:33:02 GMT', 'server': 'Apache', 'vary': 'Accept-Encoding', 'x-slack-req-id': '460edce4d05536a1f3d7076f72c9290b', 'x-content-type-options': 'nosniff', 'x-xss-protection': '0', 'pragma': 'no-cache', 'cache-control': 'private, no-cache, no-store, must-revalidate', 'expires': 'Sat, 26 Jul 1997 05:00:00 GMT', 'content-type': 'application/json; charset=utf-8', 'x-accepted-oauth-scopes': 'reactions:write', 'x-oauth-scopes': 'app_mentions:read,channels:history,chat:write,im:history,im:read,im:write,users:read,reactions:write,users:read.email', 'access-control-expose-headers': 'x-slack-req-id, retry-after', 'access-control-allow-headers': 'slack-route, x-slack-version-ts, x-b3-traceid, x-b3-spanid, x-b3-parentspanid, x-b3-sampled, x-b3-flags', 'strict-transport-security': 'max-age=31536000; includeSubDomains; preload', 'referrer-policy': 'no-referrer', 'x-slack-unique-id': 'aKlEfsK04HS0ssi5KBfyMQAAACQ', 'x-slack-backend': 'r', 'access-control-allow-origin': '*', 'content-length': '11', 'via': '1.1 slack-prod.tinyspeck.com, envoy-www-iad-rpccrwzq,envoy-edge-pdx-idnoimqs', 'x-envoy-attempt-count': '1', 'x-envoy-upstream-service-time': '137', 'x-backend': 'main_normal main_canary_with_overflow main_control_with_overflow', 'x-server': 'slack-www-hhvm-main-iad-tiaq', 'x-slack-shared-secret-outcome': 'no-match', 'x-edge-backend': 'envoy-www', 'timing-allow-origin': '*', 'x-slack-edge-shared-secret-outcome': 'no-match', 'connection': 'close'}, body: {"ok":true}
2025-08-22 21:33:02,317 - slack_sdk.web.base_client - DEBUG - [base_client.py:255] - Sending a request - url: https://slack.com/api/chat.postMessage, query_params: {}, body_params: {}, files: {}, json_body: {'channel': 'D09A0LFHK8R', 'text': 'Your Question:\n> How can i run an automated test on a local Android phone?\n\nAnswer:\n\nTo run an automated test on a local Android phone, ensure your environment is set up correctly and consider using a mobile automation framework like Appium.\n\nFor Android emulators, you need to set the `$ANDROID_HOME` environment variable and include it in your system\'s path. This is crucial for your test configuration to locate the necessary Android SDK tools .\n\nA sample test class, `SampleTest.java`, demonstrates how to instantiate a Mobile Driver, start and stop an Appium server, and manage an Android Emulator. This class can be configured by passing command-line options to create the necessary drivers for your tests. The code snippet shows a check for a "local" environment and "android" driver, indicating support for local Android test execution .\n\nFor additional foundational knowledge on running apps and testing on Android, you can refer to the following resources:\n   "Run Apps on the emulator": https://developer.android.com/studio/run/emulator\n   "Fundamentals of testing android apps": https://developer.android.com/training/testing/fundamentals\n\n────────────────────────────────────────\n📚 Sources:\n1. https://paramount.atlassian.net/wiki/spaces/PLQA/pages/47713566\n2. https://paramount.atlassian.net/wiki/spaces/PLQA/pages/47711460\n3. https://paramount.atlassian.net/wiki/spaces/PLQA/pages/47722061\n', 'thread_ts': '1755923563.431829', 'team_id': 'T010QS7UQNA'}, headers: {'Content-Type': 'application/json;charset=utf-8', 'Authorization': '(redacted)', 'User-Agent': 'Python/3.12.0 slackclient/3.34.0 Darwin/23.4.0'}
2025-08-22 21:33:02,749 - slack_sdk.web.base_client - DEBUG - [base_client.py:546] - Received the following response - status: 200, headers: {'date': 'Sat, 23 Aug 2025 04:33:02 GMT', 'server': 'Apache', 'vary': 'Accept-Encoding', 'x-slack-req-id': '8581e7905ae0ee4a83facbe3b641bab4', 'x-content-type-options': 'nosniff', 'x-xss-protection': '0', 'pragma': 'no-cache', 'cache-control': 'private, no-cache, no-store, must-revalidate', 'expires': 'Sat, 26 Jul 1997 05:00:00 GMT', 'content-type': 'application/json; charset=utf-8', 'x-accepted-oauth-scopes': 'chat:write', 'x-oauth-scopes': 'app_mentions:read,channels:history,chat:write,im:history,im:read,im:write,users:read,reactions:write,users:read.email', 'access-control-expose-headers': 'x-slack-req-id, retry-after', 'access-control-allow-headers': 'slack-route, x-slack-version-ts, x-b3-traceid, x-b3-spanid, x-b3-parentspanid, x-b3-sampled, x-b3-flags', 'strict-transport-security': 'max-age=31536000; includeSubDomains; preload', 'referrer-policy': 'no-referrer', 'x-slack-unique-id': 'aKlEftJ-pn1iRf9xMKYQIQAAADM', 'x-slack-backend': 'r', 'access-control-allow-origin': '*', 'content-length': '4413', 'via': '1.1 slack-prod.tinyspeck.com, envoy-www-canary-iad-boyizgxg,envoy-edge-pdx-lilwhjcz', 'x-envoy-attempt-count': '1', 'x-envoy-upstream-service-time': '196', 'x-backend': 'main_normal main_canary_with_overflow main_control_with_overflow', 'x-server': 'slack-www-hhvm-main-iad-cpsq', 'x-slack-shared-secret-outcome': 'no-match', 'x-edge-backend': 'envoy-www', 'timing-allow-origin': '*', 'x-slack-edge-shared-secret-outcome': 'no-match', 'connection': 'close'}, body: {"ok":true,"channel":"D09A0LFHK8R","ts":"1755923582.692769","message":{"user":"U099R6WTZ9S","type":"message","ts":"1755923582.692769","bot_id":"B099R6WTRU4","app_id":"A099LACAB2R","text":"Your Question:\n&gt; How can i run an automated test on a local Android phone?\n\nAnswer:\n\nTo run an automated test on a local Android phone, ensure your environment is set up correctly and consider using a mobile automation framework like Appium.\n\nFor Android emulators, you need to set the `$ANDROID_HOME` environment variable and include it in your system's path. This is crucial for your test configuration to locate the necessary Android SDK tools .\n\nA sample test class, `SampleTest.java`, demonstrates how to instantiate a Mobile Driver, start and stop an Appium server, and manage an Android Emulator. This class can be configured by passing command-line options to create the necessary drivers for your tests. The code snippet shows a check for a \"local\" environment and \"android\" driver, indicating support for local Android test execution .\n\nFor additional foundational knowledge on running apps and testing on Android, you can refer to the following resources:\n   \"Run Apps on the emulator\": <https://developer.android.com/studio/run/emulator>\n   \"Fundamentals of testing android apps\": <https://developer.android.com/training/testing/fundamentals>\n\n────────────────────────────────────────\n:books: Sources:\n1. <https://paramount.atlassian.net/wiki/spaces/PLQA/pages/47713566>\n2. <https://paramount.atlassian.net/wiki/spaces/PLQA/pages/47711460>\n3. <https://paramount.atlassian.net/wiki/spaces/PLQA/pages/47722061>\n","team":"T010QS7UQNA","bot_profile":{"id":"B099R6WTRU4","app_id":"A099LACAB2R","user_id":"U099R6WTZ9S","name":"AutoBot","icons":{"image_36":"https://a.slack-edge.com/80588/img/plugins/app/bot_36.png","image_48":"https://a.slack-edge.com/80588/img/plugins/app/bot_48.png","image_72":"https://a.slack-edge.com/80588/img/plugins/app/service_72.png"},"deleted":false,"updated":1754677948,"team_id":"T010QS7UQNA"},"thread_ts":"1755923563.431829","parent_user_id":"U01RMTFMALF","blocks":[{"type":"rich_text","block_id":"9Ij","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Your Question:"}]},{"type":"rich_text_quote","elements":[{"type":"text","text":"How can i run an automated test on a local Android phone?"}]},{"type":"rich_text_section","elements":[{"type":"text","text":"\n\nAnswer:\n\nTo run an automated test on a local Android phone, ensure your environment is set up correctly and consider using a mobile automation framework like Appium.\n\nFor Android emulators, you need to set the "},{"type":"text","text":"$ANDROID_HOME","style":{"code":true}},{"type":"text","text":" environment variable and include it in your system's path. This is crucial for your test configuration to locate the necessary Android SDK tools .\n\nA sample test class, "},{"type":"text","text":"SampleTest.java","style":{"code":true}},{"type":"text","text":", demonstrates how to instantiate a Mobile Driver, start and stop an Appium server, and manage an Android Emulator. This class can be configured by passing command-line options to create the necessary drivers for your tests. The code snippet shows a check for a \"local\" environment and \"android\" driver, indicating support for local Android test execution .\n\nFor additional foundational knowledge on running apps and testing on Android, you can refer to the following resources:\n   \"Run Apps on the emulator\": "},{"type":"link","url":"https://developer.android.com/studio/run/emulator"},{"type":"text","text":"\n   \"Fundamentals of testing android apps\": "},{"type":"link","url":"https://developer.android.com/training/testing/fundamentals"},{"type":"text","text":"\n\n────────────────────────────────────────\n"},{"type":"emoji","name":"books","unicode":"1f4da"},{"type":"text","text":" Sources:\n1. "},{"type":"link","url":"https://paramount.atlassian.net/wiki/spaces/PLQA/pages/47713566"},{"type":"text","text":"\n2. "},{"type":"link","url":"https://paramount.atlassian.net/wiki/spaces/PLQA/pages/47711460"},{"type":"text","text":"\n3. "},{"type":"link","url":"https://paramount.atlassian.net/wiki/spaces/PLQA/pages/47722061"}]}]}]}}
2025-08-22 21:33:02,749 - __main__ - DEBUG - [main.py:645] - Cleaning up DM thread tracking...
2025-08-22 21:33:02,750 - utils - DEBUG - [utils.py:67] - Managing thread: D09A0LFHK8R:1755923563.431829, action: remove, user: U01RMTFMALF
2025-08-22 21:33:02,750 - utils - INFO - [utils.py:100] - Removed thread D09A0LFHK8R:1755923563.431829 from active tracking (remaining: 0)
2025-08-22 21:33:04,068 - slack_bolt.App - DEBUG - [client.py:235] - on_message invoked: (message: {"envelope_id":"e603764e-2f56-40de-80dd-fbc19d2e89c1","payload":{"token":"yq71khZBCyJF1Ri2hG5aNqr5","team_id":"T010QS7UQNA","enterprise_id":"ERV4P7NAD","context_team_id":null,"context_enterprise_id":"ERV4P7NAD","api_app_id":"A099LACAB2R","event":{"user":"U099R6WTZ9S","type":"message","ts":"1755923582.692769","bot_id":"B099R6WTRU4","app_id":"A099LACAB2R","text":"Your Question:\n&gt; How can i run an automated test on a local Android phone?\n\nAnswer:\n\nTo run an automated test on a local Android phone, ensure your environment is set up correctly and consider using a mobile automation framework like Appium.\n\nFor Android emulators, you need to set the `$ANDROID_HOME` environment variable and include it in your system's path. This is crucial for your test configuration to locate the necessary Android SDK tools .\n\nA sample test class, `SampleTest.java`, demonstrates how to instantiate a Mobile Driver, start and stop an Appium server, and manage an Android Emulator. This class can be configured by passing command-line options to create the necessary drivers for your tests. The code snippet shows a check for a \"local\" environment and \"android\" driver, indicating support for local Android test execution .\n\nFor additional foundational knowledge on running apps and testing on Android, you can refer to the following resources:\n   \"Run Apps on the emulator\": <https:\/\/developer.android.com\/studio\/run\/emulator>\n   \"Fundamentals of testing android apps\": <https:\/\/developer.android.com\/training\/testing\/fundamentals>\n\n\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\n:books: Sources:\n1. <https:\/\/paramount.atlassian.net\/wiki\/spaces\/PLQA\/pages\/47713566>\n2. <https:\/\/paramount.atlassian.net\/wiki\/spaces\/PLQA\/pages\/47711460>\n3. <https:\/\/paramount.atlassian.net\/wiki\/spaces\/PLQA\/pages\/47722061>\n","team":"T010QS7UQNA","bot_profile":{"id":"B099R6WTRU4","deleted":false,"name":"AutoBot","updated":1754677948,"app_id":"A099LACAB2R","user_id":"U099R6WTZ9S","icons":{"image_36":"https:\/\/a.slack-edge.com\/80588\/img\/plugins\/app\/bot_36.png","image_48":"https:\/\/a.slack-edge.com\/80588\/img\/plugins\/app\/bot_48.png","image_72":"https:\/\/a.slack-edge.com\/80588\/img\/plugins\/app\/service_72.png"},"team_id":"T010QS7UQNA"},"thread_ts":"1755923563.431829","parent_user_id":"U01RMTFMALF","blocks":[{"type":"rich_text","block_id":"lDxt1","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Your Question:"}]},{"type":"rich_text_quote","elements":[{"type":"text","text":"How can i run an automated test on a local Android phone?"}]},{"type":"rich_text_section","elements":[{"type":"text","text":"\n\nAnswer:\n\nTo run an automated test on a local Android phone, ensure your environment is set up correctly and consider using a mobile automation framework like Appium.\n\nFor Android emulators, you need to set the "},{"type":"text","text":"$ANDROID_HOME","style":{"code":true}},{"type":"text","text":" environment variable and include it in your system's path. This is crucial for your test configuration to locate the necessary Android SDK tools .\n\nA sample test class, "},{"type":"text","text":"SampleTest.java","style":{"code":true}},{"type":"text","text":", demonstrates how to instantiate a Mobile Driver, start and stop an Appium server, and manage an Android Emulator. This class can be configured by passing command-line options to create the necessary drivers for your tests. The code snippet shows a check for a \"local\" environment and \"android\" driver, indicating support for local Android test execution .\n\nFor additional foundational knowledge on running apps and testing on Android, you can refer to the following resources:\n   \"Run Apps on the emulator\": "},{"type":"link","url":"https:\/\/developer.android.com\/studio\/run\/emulator"},{"type":"text","text":"\n   \"Fundamentals of testing android apps\": "},{"type":"link","url":"https:\/\/developer.android.com\/training\/testing\/fundamentals"},{"type":"text","text":"\n\n\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\n"},{"type":"emoji","name":"books","unicode":"1f4da"},{"type":"text","text":" Sources:\n1. "},{"type":"link","url":"https:\/\/paramount.atlassian.net\/wiki\/spaces\/PLQA\/pages\/47713566"},{"type":"text","text":"\n2. "},{"type":"link","url":"https:\/\/paramount.atlassian.net\/wiki\/spaces\/PLQA\/pages\/47711460"},{"type":"text","text":"\n3. "},{"type":"link","url":"https:\/\/paramount.atlassian.net\/wiki\/spaces\/PLQA\/pages\/47722061"}]}]}],"channel":"D09A0LFHK8R","event_ts":"1755923582.692769","channel_type":"im"},"type":"event_callback","event_id":"Ev09BPQXJMLJ","event_time":1755923582,"authorizations":[{"enterprise_id":"ERV4P7NAD","team_id":"T010QS7UQNA","user_id":"U099R6WTZ9S","is_bot":true,"is_enterprise_install":false}],"is_ext_shared_channel":false,"event_context":"4-eyJldCI6Im1lc3NhZ2UiLCJ0aWQiOiJUMDEwUVM3VVFOQSIsImFpZCI6IkEwOTlMQUNBQjJSIiwiY2lkIjoiRDA5QTBMRkhLOFIifQ"},"type":"events_api","accepts_response_payload":false,"retry_attempt":0,"retry_reason":""})
2025-08-22 21:33:04,069 - slack_bolt.App - DEBUG - [client.py:99] - A new message enqueued (current queue size: 1)
2025-08-22 21:33:04,069 - slack_bolt.App - DEBUG - [client.py:105] - A message dequeued (current queue size: 0)
2025-08-22 21:33:04,069 - slack_bolt.App - DEBUG - [client.py:125] - Message processing started (type: events_api, envelope_id: e603764e-2f56-40de-80dd-fbc19d2e89c1)
2025-08-22 21:33:04,069 - slack_bolt.App - DEBUG - [app.py:476] - Applying slack_bolt.middleware.ssl_check.ssl_check.SslCheck
2025-08-22 21:33:04,069 - slack_bolt.App - DEBUG - [app.py:476] - Applying slack_bolt.middleware.request_verification.request_verification.RequestVerification
2025-08-22 21:33:04,069 - slack_bolt.App - DEBUG - [app.py:476] - Applying slack_bolt.middleware.authorization.single_team_authorization.SingleTeamAuthorization
2025-08-22 21:33:04,070 - slack_bolt.App - DEBUG - [app.py:476] - Applying slack_bolt.middleware.ignoring_self_events.ignoring_self_events.IgnoringSelfEvents
2025-08-22 21:33:04,070 - slack_bolt.IgnoringSelfEvents - DEBUG - [ignoring_self_events.py:60] - Skipped self event: {'user': 'U099R6WTZ9S', 'type': 'message', 'ts': '1755923582.692769', 'bot_id': 'B099R6WTRU4', 'app_id': 'A099LACAB2R', 'text': 'Your Question:\n&gt; How can i run an automated test on a local Android phone?\n\nAnswer:\n\nTo run an automated test on a local Android phone, ensure your environment is set up correctly and consider using a mobile automation framework like Appium.\n\nFor Android emulators, you need to set the `$ANDROID_HOME` environment variable and include it in your system\'s path. This is crucial for your test configuration to locate the necessary Android SDK tools .\n\nA sample test class, `SampleTest.java`, demonstrates how to instantiate a Mobile Driver, start and stop an Appium server, and manage an Android Emulator. This class can be configured by passing command-line options to create the necessary drivers for your tests. The code snippet shows a check for a "local" environment and "android" driver, indicating support for local Android test execution .\n\nFor additional foundational knowledge on running apps and testing on Android, you can refer to the following resources:\n   "Run Apps on the emulator": <https://developer.android.com/studio/run/emulator>\n   "Fundamentals of testing android apps": <https://developer.android.com/training/testing/fundamentals>\n\n────────────────────────────────────────\n:books: Sources:\n1. <https://paramount.atlassian.net/wiki/spaces/PLQA/pages/47713566>\n2. <https://paramount.atlassian.net/wiki/spaces/PLQA/pages/47711460>\n3. <https://paramount.atlassian.net/wiki/spaces/PLQA/pages/47722061>\n', 'team': 'T010QS7UQNA', 'bot_profile': {'id': 'B099R6WTRU4', 'deleted': False, 'name': 'AutoBot', 'updated': 1754677948, 'app_id': 'A099LACAB2R', 'user_id': 'U099R6WTZ9S', 'icons': {'image_36': 'https://a.slack-edge.com/80588/img/plugins/app/bot_36.png', 'image_48': 'https://a.slack-edge.com/80588/img/plugins/app/bot_48.png', 'image_72': 'https://a.slack-edge.com/80588/img/plugins/app/service_72.png'}, 'team_id': 'T010QS7UQNA'}, 'thread_ts': '1755923563.431829', 'parent_user_id': 'U01RMTFMALF', 'blocks': [{'type': 'rich_text', 'block_id': 'lDxt1', 'elements': [{'type': 'rich_text_section', 'elements': [{'type': 'text', 'text': 'Your Question:'}]}, {'type': 'rich_text_quote', 'elements': [{'type': 'text', 'text': 'How can i run an automated test on a local Android phone?'}]}, {'type': 'rich_text_section', 'elements': [{'type': 'text', 'text': '\n\nAnswer:\n\nTo run an automated test on a local Android phone, ensure your environment is set up correctly and consider using a mobile automation framework like Appium.\n\nFor Android emulators, you need to set the '}, {'type': 'text', 'text': '$ANDROID_HOME', 'style': {'code': True}}, {'type': 'text', 'text': " environment variable and include it in your system's path. This is crucial for your test configuration to locate the necessary Android SDK tools .\n\nA sample test class, "}, {'type': 'text', 'text': 'SampleTest.java', 'style': {'code': True}}, {'type': 'text', 'text': ', demonstrates how to instantiate a Mobile Driver, start and stop an Appium server, and manage an Android Emulator. This class can be configured by passing command-line options to create the necessary drivers for your tests. The code snippet shows a check for a "local" environment and "android" driver, indicating support for local Android test execution .\n\nFor additional foundational knowledge on running apps and testing on Android, you can refer to the following resources:\n   "Run Apps on the emulator": '}, {'type': 'link', 'url': 'https://developer.android.com/studio/run/emulator'}, {'type': 'text', 'text': '\n   "Fundamentals of testing android apps": '}, {'type': 'link', 'url': 'https://developer.android.com/training/testing/fundamentals'}, {'type': 'text', 'text': '\n\n────────────────────────────────────────\n'}, {'type': 'emoji', 'name': 'books', 'unicode': '1f4da'}, {'type': 'text', 'text': ' Sources:\n1. '}, {'type': 'link', 'url': 'https://paramount.atlassian.net/wiki/spaces/PLQA/pages/47713566'}, {'type': 'text', 'text': '\n2. '}, {'type': 'link', 'url': 'https://paramount.atlassian.net/wiki/spaces/PLQA/pages/47711460'}, {'type': 'text', 'text': '\n3. '}, {'type': 'link', 'url': 'https://paramount.atlassian.net/wiki/spaces/PLQA/pages/47722061'}]}]}], 'channel': 'D09A0LFHK8R', 'event_ts': '1755923582.692769', 'channel_type': 'im'}
2025-08-22 21:33:04,070 - slack_bolt.App - DEBUG - [client.py:200] - Sending a message (session id: 352e8ced-d1e0-4993-8c52-42ca285b7821, message: {"envelope_id": "e603764e-2f56-40de-80dd-fbc19d2e89c1"})
2025-08-22 21:33:04,070 - slack_bolt.App - DEBUG - [internals.py:41] - Response time: 0 milliseconds
2025-08-22 21:33:04,070 - slack_bolt.App - DEBUG - [client.py:150] - Message processing completed (type: events_api, envelope_id: e603764e-2f56-40de-80dd-fbc19d2e89c1)
2025-08-22 21:33:04,734 - slack_bolt.App - DEBUG - [client.py:235] - on_message invoked: (message: {"envelope_id":"9a4bbbbc-676d-4d11-95d6-8dd30d0f35e9","payload":{"token":"yq71khZBCyJF1Ri2hG5aNqr5","team_id":"T010QS7UQNA","enterprise_id":"ERV4P7NAD","context_team_id":null,"context_enterprise_id":"ERV4P7NAD","api_app_id":"A099LACAB2R","event":{"type":"message","subtype":"message_changed","message":{"user":"U099R6WTZ9S","type":"message","bot_id":"B099R6WTRU4","app_id":"A099LACAB2R","text":"Your Question:\n&gt; How can i run an automated test on a local Android phone?\n\nAnswer:\n\nTo run an automated test on a local Android phone, ensure your environment is set up correctly and consider using a mobile automation framework like Appium.\n\nFor Android emulators, you need to set the `$ANDROID_HOME` environment variable and include it in your system's path. This is crucial for your test configuration to locate the necessary Android SDK tools .\n\nA sample test class, `SampleTest.java`, demonstrates how to instantiate a Mobile Driver, start and stop an Appium server, and manage an Android Emulator. This class can be configured by passing command-line options to create the necessary drivers for your tests. The code snippet shows a check for a \"local\" environment and \"android\" driver, indicating support for local Android test execution .\n\nFor additional foundational knowledge on running apps and testing on Android, you can refer to the following resources:\n   \"Run Apps on the emulator\": <https:\/\/developer.android.com\/studio\/run\/emulator>\n   \"Fundamentals of testing android apps\": <https:\/\/developer.android.com\/training\/testing\/fundamentals>\n\n\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\n:books: Sources:\n1. <https:\/\/paramount.atlassian.net\/wiki\/spaces\/PLQA\/pages\/47713566>\n2. <https:\/\/paramount.atlassian.net\/wiki\/spaces\/PLQA\/pages\/47711460>\n3. <https:\/\/paramount.atlassian.net\/wiki\/spaces\/PLQA\/pages\/47722061>\n","team":"T010QS7UQNA","bot_profile":{"id":"B099R6WTRU4","deleted":false,"name":"AutoBot","updated":1754677948,"app_id":"A099LACAB2R","user_id":"U099R6WTZ9S","icons":{"image_36":"https:\/\/a.slack-edge.com\/80588\/img\/plugins\/app\/bot_36.png","image_48":"https:\/\/a.slack-edge.com\/80588\/img\/plugins\/app\/bot_48.png","image_72":"https:\/\/a.slack-edge.com\/80588\/img\/plugins\/app\/service_72.png"},"team_id":"T010QS7UQNA"},"thread_ts":"1755923563.431829","parent_user_id":"U01RMTFMALF","attachments":[{"from_url":"https:\/\/developer.android.com\/studio\/run\/emulator","image_url":"https:\/\/developer.android.com\/static\/images\/social\/android-developers.png","image_width":1201,"image_height":676,"image_bytes":31847,"service_icon":"https:\/\/www.gstatic.com\/devrel-devsite\/prod\/v07a69f77eed922d40ebfb742cd5d20eb11c7d4f7b172d68471db97f8f3b9f965\/android\/images\/touchicon-180.png","id":1,"original_url":"https:\/\/developer.android.com\/studio\/run\/emulator","fallback":"Android Developers: Run apps on the Android Emulator \u00a0|\u00a0 Android Studio \u00a0|\u00a0 Android Developers","text":"The Android Emulator simulates Android devices on your computer so that you can test your app on a variety of devices and Android API levels without needing to have each physical device.","title":"Run apps on the Android Emulator \u00a0|\u00a0 Android Studio \u00a0|\u00a0 Android Developers","title_link":"https:\/\/developer.android.com\/studio\/run\/emulator","service_name":"Android Developers"},{"from_url":"https:\/\/developer.android.com\/training\/testing\/fundamentals","image_url":"https:\/\/developer.android.com\/static\/images\/social\/android-developers.png","image_width":1201,"image_height":676,"image_bytes":31847,"service_icon":"https:\/\/www.gstatic.com\/devrel-devsite\/prod\/v07a69f77eed922d40ebfb742cd5d20eb11c7d4f7b172d68471db97f8f3b9f965\/android\/images\/touchicon-180.png","id":2,"original_url":"https:\/\/developer.android.com\/training\/testing\/fundamentals","fallback":"Android Developers: Fundamentals of testing Android apps \u00a0|\u00a0 Test your app on Android \u00a0|\u00a0 Android Developers","title":"Fundamentals of testing Android apps \u00a0|\u00a0 Test your app on Android \u00a0|\u00a0 Android Developers","title_link":"https:\/\/developer.android.com\/training\/testing\/fundamentals","service_name":"Android Developers"}],"blocks":[{"type":"rich_text","block_id":"+Gl","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Your Question:"}]},{"type":"rich_text_quote","elements":[{"type":"text","text":"How can i run an automated test on a local Android phone?"}]},{"type":"rich_text_section","elements":[{"type":"text","text":"\n\nAnswer:\n\nTo run an automated test on a local Android phone, ensure your environment is set up correctly and consider using a mobile automation framework like Appium.\n\nFor Android emulators, you need to set the "},{"type":"text","text":"$ANDROID_HOME","style":{"code":true}},{"type":"text","text":" environment variable and include it in your system's path. This is crucial for your test configuration to locate the necessary Android SDK tools .\n\nA sample test class, "},{"type":"text","text":"SampleTest.java","style":{"code":true}},{"type":"text","text":", demonstrates how to instantiate a Mobile Driver, start and stop an Appium server, and manage an Android Emulator. This class can be configured by passing command-line options to create the necessary drivers for your tests. The code snippet shows a check for a \"local\" environment and \"android\" driver, indicating support for local Android test execution .\n\nFor additional foundational knowledge on running apps and testing on Android, you can refer to the following resources:\n   \"Run Apps on the emulator\": "},{"type":"link","url":"https:\/\/developer.android.com\/studio\/run\/emulator"},{"type":"text","text":"\n   \"Fundamentals of testing android apps\": "},{"type":"link","url":"https:\/\/developer.android.com\/training\/testing\/fundamentals"},{"type":"text","text":"\n\n\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\n"},{"type":"emoji","name":"books","unicode":"1f4da"},{"type":"text","text":" Sources:\n1. "},{"type":"link","url":"https:\/\/paramount.atlassian.net\/wiki\/spaces\/PLQA\/pages\/47713566"},{"type":"text","text":"\n2. "},{"type":"link","url":"https:\/\/paramount.atlassian.net\/wiki\/spaces\/PLQA\/pages\/47711460"},{"type":"text","text":"\n3. "},{"type":"link","url":"https:\/\/paramount.atlassian.net\/wiki\/spaces\/PLQA\/pages\/47722061"}]}]}],"ts":"1755923582.692769"},"previous_message":{"user":"U099R6WTZ9S","type":"message","ts":"1755923582.692769","bot_id":"B099R6WTRU4","app_id":"A099LACAB2R","text":"Your Question:\n&gt; How can i run an automated test on a local Android phone?\n\nAnswer:\n\nTo run an automated test on a local Android phone, ensure your environment is set up correctly and consider using a mobile automation framework like Appium.\n\nFor Android emulators, you need to set the `$ANDROID_HOME` environment variable and include it in your system's path. This is crucial for your test configuration to locate the necessary Android SDK tools .\n\nA sample test class, `SampleTest.java`, demonstrates how to instantiate a Mobile Driver, start and stop an Appium server, and manage an Android Emulator. This class can be configured by passing command-line options to create the necessary drivers for your tests. The code snippet shows a check for a \"local\" environment and \"android\" driver, indicating support for local Android test execution .\n\nFor additional foundational knowledge on running apps and testing on Android, you can refer to the following resources:\n   \"Run Apps on the emulator\": <https:\/\/developer.android.com\/studio\/run\/emulator>\n   \"Fundamentals of testing android apps\": <https:\/\/developer.android.com\/training\/testing\/fundamentals>\n\n\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\n:books: Sources:\n1. <https:\/\/paramount.atlassian.net\/wiki\/spaces\/PLQA\/pages\/47713566>\n2. <https:\/\/paramount.atlassian.net\/wiki\/spaces\/PLQA\/pages\/47711460>\n3. <https:\/\/paramount.atlassian.net\/wiki\/spaces\/PLQA\/pages\/47722061>\n","team":"T010QS7UQNA","bot_profile":{"id":"B099R6WTRU4","app_id":"A099LACAB2R","user_id":"U099R6WTZ9S","name":"AutoBot","icons":{"image_36":"https:\/\/a.slack-edge.com\/80588\/img\/plugins\/app\/bot_36.png","image_48":"https:\/\/a.slack-edge.com\/80588\/img\/plugins\/app\/bot_48.png","image_72":"https:\/\/a.slack-edge.com\/80588\/img\/plugins\/app\/service_72.png"},"deleted":false,"updated":1754677948,"team_id":"T010QS7UQNA"},"thread_ts":"1755923563.431829","parent_user_id":"U01RMTFMALF","blocks":[{"type":"rich_text","block_id":"QCsef","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Your Question:"}]},{"type":"rich_text_quote","elements":[{"type":"text","text":"How can i run an automated test on a local Android phone?"}]},{"type":"rich_text_section","elements":[{"type":"text","text":"\n\nAnswer:\n\nTo run an automated test on a local Android phone, ensure your environment is set up correctly and consider using a mobile automation framework like Appium.\n\nFor Android emulators, you need to set the "},{"type":"text","text":"$ANDROID_HOME","style":{"code":true}},{"type":"text","text":" environment variable and include it in your system's path. This is crucial for your test configuration to locate the necessary Android SDK tools .\n\nA sample test class, "},{"type":"text","text":"SampleTest.java","style":{"code":true}},{"type":"text","text":", demonstrates how to instantiate a Mobile Driver, start and stop an Appium server, and manage an Android Emulator. This class can be configured by passing command-line options to create the necessary drivers for your tests. The code snippet shows a check for a \"local\" environment and \"android\" driver, indicating support for local Android test execution .\n\nFor additional foundational knowledge on running apps and testing on Android, you can refer to the following resources:\n   \"Run Apps on the emulator\": "},{"type":"link","url":"https:\/\/developer.android.com\/studio\/run\/emulator"},{"type":"text","text":"\n   \"Fundamentals of testing android apps\": "},{"type":"link","url":"https:\/\/developer.android.com\/training\/testing\/fundamentals"},{"type":"text","text":"\n\n\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\n"},{"type":"emoji","name":"books","unicode":"1f4da"},{"type":"text","text":" Sources:\n1. "},{"type":"link","url":"https:\/\/paramount.atlassian.net\/wiki\/spaces\/PLQA\/pages\/47713566"},{"type":"text","text":"\n2. "},{"type":"link","url":"https:\/\/paramount.atlassian.net\/wiki\/spaces\/PLQA\/pages\/47711460"},{"type":"text","text":"\n3. "},{"type":"link","url":"https:\/\/paramount.atlassian.net\/wiki\/spaces\/PLQA\/pages\/47722061"}]}]}]},"channel":"D09A0LFHK8R","hidden":true,"ts":"1755923584.004900","event_ts":"1755923584.004900","channel_type":"im"},"type":"event_callback","event_id":"Ev09BTP3DZK6","event_time":1755923584,"authorizations":[{"enterprise_id":"ERV4P7NAD","team_id":"T010QS7UQNA","user_id":"U099R6WTZ9S","is_bot":true,"is_enterprise_install":false}],"is_ext_shared_channel":false,"event_context":"4-eyJldCI6Im1lc3NhZ2UiLCJ0aWQiOiJUMDEwUVM3VVFOQSIsImFpZCI6IkEwOTlMQUNBQjJSIiwiY2lkIjoiRDA5QTBMRkhLOFIifQ"},"type":"events_api","accepts_response_payload":false,"retry_attempt":0,"retry_reason":""})
2025-08-22 21:33:04,735 - slack_bolt.App - DEBUG - [client.py:99] - A new message enqueued (current queue size: 1)
2025-08-22 21:33:04,735 - slack_bolt.App - DEBUG - [client.py:105] - A message dequeued (current queue size: 0)
2025-08-22 21:33:04,735 - slack_bolt.App - DEBUG - [client.py:125] - Message processing started (type: events_api, envelope_id: 9a4bbbbc-676d-4d11-95d6-8dd30d0f35e9)
2025-08-22 21:33:04,736 - slack_bolt.App - DEBUG - [app.py:476] - Applying slack_bolt.middleware.ssl_check.ssl_check.SslCheck
2025-08-22 21:33:04,736 - slack_bolt.App - DEBUG - [app.py:476] - Applying slack_bolt.middleware.request_verification.request_verification.RequestVerification
2025-08-22 21:33:04,736 - slack_bolt.App - DEBUG - [app.py:476] - Applying slack_bolt.middleware.authorization.single_team_authorization.SingleTeamAuthorization
2025-08-22 21:33:04,736 - slack_bolt.App - DEBUG - [app.py:476] - Applying slack_bolt.middleware.ignoring_self_events.ignoring_self_events.IgnoringSelfEvents
2025-08-22 21:33:04,737 - slack_bolt.IgnoringSelfEvents - DEBUG - [ignoring_self_events.py:60] - Skipped self event: {'type': 'message', 'subtype': 'message_changed', 'message': {'user': 'U099R6WTZ9S', 'type': 'message', 'bot_id': 'B099R6WTRU4', 'app_id': 'A099LACAB2R', 'text': 'Your Question:\n&gt; How can i run an automated test on a local Android phone?\n\nAnswer:\n\nTo run an automated test on a local Android phone, ensure your environment is set up correctly and consider using a mobile automation framework like Appium.\n\nFor Android emulators, you need to set the `$ANDROID_HOME` environment variable and include it in your system\'s path. This is crucial for your test configuration to locate the necessary Android SDK tools .\n\nA sample test class, `SampleTest.java`, demonstrates how to instantiate a Mobile Driver, start and stop an Appium server, and manage an Android Emulator. This class can be configured by passing command-line options to create the necessary drivers for your tests. The code snippet shows a check for a "local" environment and "android" driver, indicating support for local Android test execution .\n\nFor additional foundational knowledge on running apps and testing on Android, you can refer to the following resources:\n   "Run Apps on the emulator": <https://developer.android.com/studio/run/emulator>\n   "Fundamentals of testing android apps": <https://developer.android.com/training/testing/fundamentals>\n\n────────────────────────────────────────\n:books: Sources:\n1. <https://paramount.atlassian.net/wiki/spaces/PLQA/pages/47713566>\n2. <https://paramount.atlassian.net/wiki/spaces/PLQA/pages/47711460>\n3. <https://paramount.atlassian.net/wiki/spaces/PLQA/pages/47722061>\n', 'team': 'T010QS7UQNA', 'bot_profile': {'id': 'B099R6WTRU4', 'deleted': False, 'name': 'AutoBot', 'updated': 1754677948, 'app_id': 'A099LACAB2R', 'user_id': 'U099R6WTZ9S', 'icons': {'image_36': 'https://a.slack-edge.com/80588/img/plugins/app/bot_36.png', 'image_48': 'https://a.slack-edge.com/80588/img/plugins/app/bot_48.png', 'image_72': 'https://a.slack-edge.com/80588/img/plugins/app/service_72.png'}, 'team_id': 'T010QS7UQNA'}, 'thread_ts': '1755923563.431829', 'parent_user_id': 'U01RMTFMALF', 'attachments': [{'from_url': 'https://developer.android.com/studio/run/emulator', 'image_url': 'https://developer.android.com/static/images/social/android-developers.png', 'image_width': 1201, 'image_height': 676, 'image_bytes': 31847, 'service_icon': 'https://www.gstatic.com/devrel-devsite/prod/v07a69f77eed922d40ebfb742cd5d20eb11c7d4f7b172d68471db97f8f3b9f965/android/images/touchicon-180.png', 'id': 1, 'original_url': 'https://developer.android.com/studio/run/emulator', 'fallback': 'Android Developers: Run apps on the Android Emulator \xa0|\xa0 Android Studio \xa0|\xa0 Android Developers', 'text': 'The Android Emulator simulates Android devices on your computer so that you can test your app on a variety of devices and Android API levels without needing to have each physical device.', 'title': 'Run apps on the Android Emulator \xa0|\xa0 Android Studio \xa0|\xa0 Android Developers', 'title_link': 'https://developer.android.com/studio/run/emulator', 'service_name': 'Android Developers'}, {'from_url': 'https://developer.android.com/training/testing/fundamentals', 'image_url': 'https://developer.android.com/static/images/social/android-developers.png', 'image_width': 1201, 'image_height': 676, 'image_bytes': 31847, 'service_icon': 'https://www.gstatic.com/devrel-devsite/prod/v07a69f77eed922d40ebfb742cd5d20eb11c7d4f7b172d68471db97f8f3b9f965/android/images/touchicon-180.png', 'id': 2, 'original_url': 'https://developer.android.com/training/testing/fundamentals', 'fallback': 'Android Developers: Fundamentals of testing Android apps \xa0|\xa0 Test your app on Android \xa0|\xa0 Android Developers', 'title': 'Fundamentals of testing Android apps \xa0|\xa0 Test your app on Android \xa0|\xa0 Android Developers', 'title_link': 'https://developer.android.com/training/testing/fundamentals', 'service_name': 'Android Developers'}], 'blocks': [{'type': 'rich_text', 'block_id': '+Gl', 'elements': [{'type': 'rich_text_section', 'elements': [{'type': 'text', 'text': 'Your Question:'}]}, {'type': 'rich_text_quote', 'elements': [{'type': 'text', 'text': 'How can i run an automated test on a local Android phone?'}]}, {'type': 'rich_text_section', 'elements': [{'type': 'text', 'text': '\n\nAnswer:\n\nTo run an automated test on a local Android phone, ensure your environment is set up correctly and consider using a mobile automation framework like Appium.\n\nFor Android emulators, you need to set the '}, {'type': 'text', 'text': '$ANDROID_HOME', 'style': {'code': True}}, {'type': 'text', 'text': " environment variable and include it in your system's path. This is crucial for your test configuration to locate the necessary Android SDK tools .\n\nA sample test class, "}, {'type': 'text', 'text': 'SampleTest.java', 'style': {'code': True}}, {'type': 'text', 'text': ', demonstrates how to instantiate a Mobile Driver, start and stop an Appium server, and manage an Android Emulator. This class can be configured by passing command-line options to create the necessary drivers for your tests. The code snippet shows a check for a "local" environment and "android" driver, indicating support for local Android test execution .\n\nFor additional foundational knowledge on running apps and testing on Android, you can refer to the following resources:\n   "Run Apps on the emulator": '}, {'type': 'link', 'url': 'https://developer.android.com/studio/run/emulator'}, {'type': 'text', 'text': '\n   "Fundamentals of testing android apps": '}, {'type': 'link', 'url': 'https://developer.android.com/training/testing/fundamentals'}, {'type': 'text', 'text': '\n\n────────────────────────────────────────\n'}, {'type': 'emoji', 'name': 'books', 'unicode': '1f4da'}, {'type': 'text', 'text': ' Sources:\n1. '}, {'type': 'link', 'url': 'https://paramount.atlassian.net/wiki/spaces/PLQA/pages/47713566'}, {'type': 'text', 'text': '\n2. '}, {'type': 'link', 'url': 'https://paramount.atlassian.net/wiki/spaces/PLQA/pages/47711460'}, {'type': 'text', 'text': '\n3. '}, {'type': 'link', 'url': 'https://paramount.atlassian.net/wiki/spaces/PLQA/pages/47722061'}]}]}], 'ts': '1755923582.692769'}, 'previous_message': {'user': 'U099R6WTZ9S', 'type': 'message', 'ts': '1755923582.692769', 'bot_id': 'B099R6WTRU4', 'app_id': 'A099LACAB2R', 'text': 'Your Question:\n&gt; How can i run an automated test on a local Android phone?\n\nAnswer:\n\nTo run an automated test on a local Android phone, ensure your environment is set up correctly and consider using a mobile automation framework like Appium.\n\nFor Android emulators, you need to set the `$ANDROID_HOME` environment variable and include it in your system\'s path. This is crucial for your test configuration to locate the necessary Android SDK tools .\n\nA sample test class, `SampleTest.java`, demonstrates how to instantiate a Mobile Driver, start and stop an Appium server, and manage an Android Emulator. This class can be configured by passing command-line options to create the necessary drivers for your tests. The code snippet shows a check for a "local" environment and "android" driver, indicating support for local Android test execution .\n\nFor additional foundational knowledge on running apps and testing on Android, you can refer to the following resources:\n   "Run Apps on the emulator": <https://developer.android.com/studio/run/emulator>\n   "Fundamentals of testing android apps": <https://developer.android.com/training/testing/fundamentals>\n\n────────────────────────────────────────\n:books: Sources:\n1. <https://paramount.atlassian.net/wiki/spaces/PLQA/pages/47713566>\n2. <https://paramount.atlassian.net/wiki/spaces/PLQA/pages/47711460>\n3. <https://paramount.atlassian.net/wiki/spaces/PLQA/pages/47722061>\n', 'team': 'T010QS7UQNA', 'bot_profile': {'id': 'B099R6WTRU4', 'app_id': 'A099LACAB2R', 'user_id': 'U099R6WTZ9S', 'name': 'AutoBot', 'icons': {'image_36': 'https://a.slack-edge.com/80588/img/plugins/app/bot_36.png', 'image_48': 'https://a.slack-edge.com/80588/img/plugins/app/bot_48.png', 'image_72': 'https://a.slack-edge.com/80588/img/plugins/app/service_72.png'}, 'deleted': False, 'updated': 1754677948, 'team_id': 'T010QS7UQNA'}, 'thread_ts': '1755923563.431829', 'parent_user_id': 'U01RMTFMALF', 'blocks': [{'type': 'rich_text', 'block_id': 'QCsef', 'elements': [{'type': 'rich_text_section', 'elements': [{'type': 'text', 'text': 'Your Question:'}]}, {'type': 'rich_text_quote', 'elements': [{'type': 'text', 'text': 'How can i run an automated test on a local Android phone?'}]}, {'type': 'rich_text_section', 'elements': [{'type': 'text', 'text': '\n\nAnswer:\n\nTo run an automated test on a local Android phone, ensure your environment is set up correctly and consider using a mobile automation framework like Appium.\n\nFor Android emulators, you need to set the '}, {'type': 'text', 'text': '$ANDROID_HOME', 'style': {'code': True}}, {'type': 'text', 'text': " environment variable and include it in your system's path. This is crucial for your test configuration to locate the necessary Android SDK tools .\n\nA sample test class, "}, {'type': 'text', 'text': 'SampleTest.java', 'style': {'code': True}}, {'type': 'text', 'text': ', demonstrates how to instantiate a Mobile Driver, start and stop an Appium server, and manage an Android Emulator. This class can be configured by passing command-line options to create the necessary drivers for your tests. The code snippet shows a check for a "local" environment and "android" driver, indicating support for local Android test execution .\n\nFor additional foundational knowledge on running apps and testing on Android, you can refer to the following resources:\n   "Run Apps on the emulator": '}, {'type': 'link', 'url': 'https://developer.android.com/studio/run/emulator'}, {'type': 'text', 'text': '\n   "Fundamentals of testing android apps": '}, {'type': 'link', 'url': 'https://developer.android.com/training/testing/fundamentals'}, {'type': 'text', 'text': '\n\n────────────────────────────────────────\n'}, {'type': 'emoji', 'name': 'books', 'unicode': '1f4da'}, {'type': 'text', 'text': ' Sources:\n1. '}, {'type': 'link', 'url': 'https://paramount.atlassian.net/wiki/spaces/PLQA/pages/47713566'}, {'type': 'text', 'text': '\n2. '}, {'type': 'link', 'url': 'https://paramount.atlassian.net/wiki/spaces/PLQA/pages/47711460'}, {'type': 'text', 'text': '\n3. '}, {'type': 'link', 'url': 'https://paramount.atlassian.net/wiki/spaces/PLQA/pages/47722061'}]}]}]}, 'channel': 'D09A0LFHK8R', 'hidden': True, 'ts': '1755923584.004900', 'event_ts': '1755923584.004900', 'channel_type': 'im'}
2025-08-22 21:33:04,737 - slack_bolt.App - DEBUG - [client.py:200] - Sending a message (session id: 352e8ced-d1e0-4993-8c52-42ca285b7821, message: {"envelope_id": "9a4bbbbc-676d-4d11-95d6-8dd30d0f35e9"})
2025-08-22 21:33:04,738 - slack_bolt.App - DEBUG - [internals.py:41] - Response time: 2 milliseconds
2025-08-22 21:33:04,738 - slack_bolt.App - DEBUG - [client.py:150] - Message processing completed (type: events_api, envelope_id: 9a4bbbbc-676d-4d11-95d6-8dd30d0f35e9)
2025-08-22 21:34:09,386 - slack_bolt.App - DEBUG - [client.py:235] - on_message invoked: (message: {"envelope_id":"69189d77-f574-4ee1-a270-b07a7f9900b1","payload":{"token":"yq71khZBCyJF1Ri2hG5aNqr5","team_id":"T010QS7UQNA","enterprise_id":"ERV4P7NAD","context_team_id":null,"context_enterprise_id":"ERV4P7NAD","api_app_id":"A099LACAB2R","event":{"user":"U01RMTFMALF","type":"message","ts":"1755923648.642089","client_msg_id":"b88ac256-24c2-4040-b056-cdd311132e3f","text":"How to get access to jenkins?","blocks":[{"type":"rich_text","block_id":"jBTYB","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"How to get access to jenkins?"}]}]}],"channel":"D09A0LFHK8R","event_ts":"1755923648.642089","channel_type":"im"},"type":"event_callback","event_id":"Ev09C3FY2NHX","event_time":1755923648,"authorizations":[{"enterprise_id":"ERV4P7NAD","team_id":"T010QS7UQNA","user_id":"U099R6WTZ9S","is_bot":true,"is_enterprise_install":false}],"is_ext_shared_channel":false,"event_context":"4-eyJldCI6Im1lc3NhZ2UiLCJ0aWQiOiJUMDEwUVM3VVFOQSIsImFpZCI6IkEwOTlMQUNBQjJSIiwiY2lkIjoiRDA5QTBMRkhLOFIifQ"},"type":"events_api","accepts_response_payload":false,"retry_attempt":0,"retry_reason":""})
2025-08-22 21:34:09,386 - slack_bolt.App - DEBUG - [client.py:99] - A new message enqueued (current queue size: 1)
2025-08-22 21:34:09,386 - slack_bolt.App - DEBUG - [client.py:105] - A message dequeued (current queue size: 0)
2025-08-22 21:34:09,387 - slack_bolt.App - DEBUG - [client.py:125] - Message processing started (type: events_api, envelope_id: 69189d77-f574-4ee1-a270-b07a7f9900b1)
2025-08-22 21:34:09,387 - slack_bolt.App - DEBUG - [app.py:476] - Applying slack_bolt.middleware.ssl_check.ssl_check.SslCheck
2025-08-22 21:34:09,387 - slack_bolt.App - DEBUG - [app.py:476] - Applying slack_bolt.middleware.request_verification.request_verification.RequestVerification
2025-08-22 21:34:09,387 - slack_bolt.App - DEBUG - [app.py:476] - Applying slack_bolt.middleware.authorization.single_team_authorization.SingleTeamAuthorization
2025-08-22 21:34:09,387 - slack_bolt.App - DEBUG - [app.py:476] - Applying slack_bolt.middleware.ignoring_self_events.ignoring_self_events.IgnoringSelfEvents
2025-08-22 21:34:09,387 - slack_bolt.App - DEBUG - [app.py:476] - Applying slack_bolt.middleware.url_verification.url_verification.UrlVerification
2025-08-22 21:34:09,387 - slack_bolt.App - DEBUG - [app.py:500] - Checking listener: handle_app_mentions ...
2025-08-22 21:34:09,388 - slack_bolt.App - DEBUG - [app.py:500] - Checking listener: help_message ...
2025-08-22 21:34:09,388 - slack_bolt.App - DEBUG - [app.py:500] - Checking listener: handle_dm_messages ...
2025-08-22 21:34:09,388 - slack_bolt.App - DEBUG - [app.py:522] - Running listener: handle_dm_messages ...
2025-08-22 21:34:09,388 - slack_bolt.App - DEBUG - [thread_runner.py:198] - Responding with status: 200 body: "" (0 millis)
2025-08-22 21:34:09,388 - __main__ - INFO - [main.py:501] - === DM MESSAGE EVENT RECEIVED ===
2025-08-22 21:34:09,388 - slack_bolt.App - DEBUG - [client.py:200] - Sending a message (session id: 352e8ced-d1e0-4993-8c52-42ca285b7821, message: {"envelope_id": "69189d77-f574-4ee1-a270-b07a7f9900b1"})
2025-08-22 21:34:09,388 - __main__ - DEBUG - [main.py:502] - Full event body: {'token': 'yq71khZBCyJF1Ri2hG5aNqr5', 'team_id': 'T010QS7UQNA', 'enterprise_id': 'ERV4P7NAD', 'context_team_id': None, 'context_enterprise_id': 'ERV4P7NAD', 'api_app_id': 'A099LACAB2R', 'event': {'user': 'U01RMTFMALF', 'type': 'message', 'ts': '1755923648.642089', 'client_msg_id': 'b88ac256-24c2-4040-b056-cdd311132e3f', 'text': 'How to get access to jenkins?', 'blocks': [{'type': 'rich_text', 'block_id': 'jBTYB', 'elements': [{'type': 'rich_text_section', 'elements': [{'type': 'text', 'text': 'How to get access to jenkins?'}]}]}], 'channel': 'D09A0LFHK8R', 'event_ts': '1755923648.642089', 'channel_type': 'im'}, 'type': 'event_callback', 'event_id': 'Ev09C3FY2NHX', 'event_time': 1755923648, 'authorizations': [{'enterprise_id': 'ERV4P7NAD', 'team_id': 'T010QS7UQNA', 'user_id': 'U099R6WTZ9S', 'is_bot': True, 'is_enterprise_install': False}], 'is_ext_shared_channel': False, 'event_context': '4-eyJldCI6Im1lc3NhZ2UiLCJ0aWQiOiJUMDEwUVM3VVFOQSIsImFpZCI6IkEwOTlMQUNBQjJSIiwiY2lkIjoiRDA5QTBMRkhLOFIifQ'}
2025-08-22 21:34:09,389 - __main__ - INFO - [main.py:511] - DM Event details: channel=D09A0LFHK8R, user=U01RMTFMALF, ts=1755923648.642089
2025-08-22 21:34:09,389 - slack_bolt.App - DEBUG - [internals.py:41] - Response time: 1 milliseconds
2025-08-22 21:34:09,389 - __main__ - DEBUG - [main.py:512] - DM Event text: How to get access to jenkins?
2025-08-22 21:34:09,389 - slack_bolt.App - DEBUG - [client.py:150] - Message processing completed (type: events_api, envelope_id: 69189d77-f574-4ee1-a270-b07a7f9900b1)
2025-08-22 21:34:09,389 - utils - DEBUG - [utils.py:27] - Checking message processing: channel=D09A0LFHK8R, ts=1755923648.642089, text='How to get access to jenkins?...'
2025-08-22 21:34:09,389 - utils - DEBUG - [utils.py:31] - Message hash: 2b49d3eea9ca614e154a1ce3102039f0
2025-08-22 21:34:09,390 - utils - DEBUG - [utils.py:42] - Cleaning up 1 expired message entries
2025-08-22 21:34:09,390 - utils - DEBUG - [utils.py:53] - Added message to processing cache (total entries: 1)
2025-08-22 21:34:09,390 - __main__ - DEBUG - [main.py:525] - Bot check: bot_id=None, user_id=U01RMTFMALF
2025-08-22 21:34:09,390 - __main__ - DEBUG - [main.py:530] - Question received: 'How to get access to jenkins?'
2025-08-22 21:34:09,390 - __main__ - DEBUG - [main.py:536] - Checking user access for DM...
2025-08-22 21:34:09,390 - auth.slack_user_info - DEBUG - [slack_user_info.py:44] - Using cached email for user U01RMTFMALF
2025-08-22 21:34:09,390 - auth.email_whitelist - DEBUG - [email_whitelist.py:57] - Email access granted: alexandr.popov@paramount.com
2025-08-22 21:34:09,390 - __main__ - INFO - [main.py:118] - Access granted to user U01RMTFMALF with email alexandr.popov@paramount.com
2025-08-22 21:34:09,390 - __main__ - DEBUG - [main.py:542] - User access check passed for DM
2025-08-22 21:34:09,390 - __main__ - INFO - [main.py:544] - Processing DM question from user U01RMTFMALF: How to get access to jenkins?
2025-08-22 21:34:09,391 - __main__ - DEBUG - [main.py:547] - Starting DM processing...
2025-08-22 21:34:09,391 - __main__ - DEBUG - [main.py:550] - Checking if 'how to get access to jenkins?' is an admin command in DM
2025-08-22 21:34:09,391 - __main__ - DEBUG - [main.py:586] - Checking if DM thread is already being processed...
2025-08-22 21:34:09,391 - utils - DEBUG - [utils.py:67] - Managing thread: D09A0LFHK8R:1755923648.642089, action: add, user: U01RMTFMALF
2025-08-22 21:34:09,391 - utils - INFO - [utils.py:94] - Added thread D09A0LFHK8R:1755923648.642089 to active tracking (total: 1)
2025-08-22 21:34:09,391 - __main__ - DEBUG - [main.py:591] - DM thread management check passed
2025-08-22 21:34:09,391 - slack_sdk.web.base_client - DEBUG - [base_client.py:255] - Sending a request - url: https://slack.com/api/reactions.add, query_params: {}, body_params: {'channel': 'D09A0LFHK8R', 'name': 'thinking_face', 'timestamp': '1755923648.642089', 'team_id': 'T010QS7UQNA'}, files: {}, json_body: None, headers: {'Content-Type': 'application/x-www-form-urlencoded', 'Authorization': '(redacted)', 'User-Agent': 'Python/3.12.0 slackclient/3.34.0 Darwin/23.4.0'}
2025-08-22 21:34:09,743 - slack_sdk.web.base_client - DEBUG - [base_client.py:546] - Received the following response - status: 200, headers: {'date': 'Sat, 23 Aug 2025 04:34:09 GMT', 'server': 'Apache', 'vary': 'Accept-Encoding', 'x-slack-req-id': '6f6cc764bb9478374ec9301ab23cc6ab', 'x-content-type-options': 'nosniff', 'x-xss-protection': '0', 'pragma': 'no-cache', 'cache-control': 'private, no-cache, no-store, must-revalidate', 'expires': 'Sat, 26 Jul 1997 05:00:00 GMT', 'content-type': 'application/json; charset=utf-8', 'x-accepted-oauth-scopes': 'reactions:write', 'x-oauth-scopes': 'app_mentions:read,channels:history,chat:write,im:history,im:read,im:write,users:read,reactions:write,users:read.email', 'access-control-expose-headers': 'x-slack-req-id, retry-after', 'access-control-allow-headers': 'slack-route, x-slack-version-ts, x-b3-traceid, x-b3-spanid, x-b3-parentspanid, x-b3-sampled, x-b3-flags', 'strict-transport-security': 'max-age=31536000; includeSubDomains; preload', 'referrer-policy': 'no-referrer', 'x-slack-unique-id': 'aKlEwdQiyzjF3EyrqptqggAAACk', 'x-slack-backend': 'r', 'access-control-allow-origin': '*', 'content-length': '11', 'via': '1.1 slack-prod.tinyspeck.com, envoy-www-iad-ktuencag,envoy-edge-pdx-lxzytjkp', 'x-envoy-attempt-count': '1', 'x-envoy-upstream-service-time': '123', 'x-backend': 'main_normal main_canary_with_overflow main_control_with_overflow', 'x-server': 'slack-www-hhvm-main-iad-fyqd', 'x-slack-shared-secret-outcome': 'no-match', 'x-edge-backend': 'envoy-www', 'timing-allow-origin': '*', 'x-slack-edge-shared-secret-outcome': 'no-match', 'connection': 'close'}, body: {"ok":true}
2025-08-22 21:34:09,743 - __main__ - INFO - [main.py:608] - Processing DM question from <@U01RMTFMALF>: How to get access to jenkins?
2025-08-22 21:34:09,743 - __main__ - INFO - [main.py:612] - Sending DM request to DIG AI...
2025-08-22 21:34:09,744 - dig_connector - INFO - [dig_connector.py:134] - Generating response for query: 'How to get access to jenkins?' with 0 chunks
2025-08-22 21:34:09,744 - dig_connector - DEBUG - [dig_connector.py:138] - Formatted context length: 0
2025-08-22 21:34:09,744 - dig_connector - INFO - [dig_connector.py:141] - No context available, using direct query
2025-08-22 21:34:09,744 - dig_connector - INFO - [dig_connector.py:150] - Sending prompt to DIG platform...
2025-08-22 21:34:09,744 - dig_connector - INFO - [dig_connector.py:121] - Sending message to DIG API - URL: https://ai.digdev.cbsicloud.com/fastapi/chats/895/generate
2025-08-22 21:34:09,744 - dig_connector - DEBUG - [dig_connector.py:122] - Message payload: {'model_id': 42, 'message_text': 'How to get access to jenkins?', 'history': [{'role': 'user', 'content': 'How to get access to jenkins?'}]}
2025-08-22 21:34:19,088 - urllib3.connectionpool - DEBUG - [connectionpool.py:549] - https://ai.digdev.cbsicloud.com:443 "POST /fastapi/chats/895/generate HTTP/1.1" 200 2898
2025-08-22 21:34:19,088 - dig_connector - DEBUG - [dig_connector.py:125] - DIG API response: status=200
2025-08-22 21:34:19,088 - dig_connector - DEBUG - [dig_connector.py:129] - DIG API response data: {'message_text': 'To get access to Jenkins, follow these steps:\n\n1.  **Verify Existing Access:**\n    *   Go to `https://build.viacom.com` and try to log in. Your username is typically your email ID, and your password should be the same as your OKTA password.\n    *   After logging in, check if you can access `https://build.viacom.com/job/gqe/`. (Source: https://paramount.atlassian.net/wiki/spaces/PLQA/pages/132128728)\n\n2.  **Request Access (if needed):**\n    Due to recent configuration changes, you first need a GitHub account to access Jenkins.\n    *   **Initiate the process:** Send an email to `ateeque.haque@viacomcbs.com` to begin the process. (Source: https://paramount.atlassian.net/wiki/spaces/PLQA/pages/47714226)\n    *   **GitHub Account Setup:**\n        *   A new tile should appear on your Okta tiles. Click on it.\n        *   Create a new GitHub account if you don\'t have one. It\'s recommended to use the same credentials as your AD login and your `cbsinteractive.com` email address.\n        *   Join the free plan when prompted.\n        *   Set up 2-factor authentication, preferably using the Okta app on your mobile device (scan the QR code displayed). Save your recovery codes.\n        *   Sign out and then sign back into GitHub via the Okta tile. You should see "Paramount+" as Verified. (Source: https://paramount.atlassian.net/wiki/spaces/PLQA/pages/47714226)\n    *   **VPN Connection (if necessary):** You might need to connect to the VPN via `connect.cbsinteractive.com/VPNFT` to access Jenkins. (Source: https://paramount.atlassian.net/wiki/spaces/PLQA/pages/47714226, https://paramount.atlassian.net/wiki/spaces/PLQA/pages/47710727)\n    *   **Access Jenkins:** Navigate to a Jenkins URL, such as `https://jenkins-ui.cbs.com/job/tools/job/pr-tests/job/QA_Automation/`. You should be able to sign in using your GitHub username/password or your network credentials. You may need to authorize access to Paramount+. (Source: https://paramount.atlassian.net/wiki/spaces/PLQA/pages/47714226)\n    *   **Requesting specific Jenkins projects:** If you need access to specific Jenkins projects, you can submit a request in the `#i-centralops-github` Slack channel or create a Pitstop ticket using a template for `mqe-pplus-tests` GitHub access. (Source: https://paramount.atlassian.net/wiki/spaces/PLQA/pages/178426346, https://paramount.atlassian.net/wiki/spaces/PLQA/pages/433660722)\n    *   **Troubleshooting:** If you still don\'t have access after following these steps, create a request in the `#devops-support` Slack channel. (Source: https://paramount.atlassian.net/wiki/spaces/PLQA/pages/433660722)\n\nOnce access is granted, you will be able to log in to the `build.viacom.com` Jenkins server using your AD (Network) credentials. (Source: https://paramount.atlassian.net/wiki/spaces/PLQA/pages/433660722)', 'requires_approval': False, 'execution_id': 1598}
2025-08-22 21:34:19,088 - dig_connector - INFO - [dig_connector.py:154] - Extracting response content...
2025-08-22 21:34:19,088 - dig_connector - DEBUG - [dig_connector.py:221] - Found message_text in response
2025-08-22 21:34:19,088 - dig_connector - INFO - [dig_connector.py:157] - Successfully generated response (length: 2811)
2025-08-22 21:34:19,089 - __main__ - INFO - [main.py:615] - Received DM response from DIG AI
2025-08-22 21:34:19,089 - __main__ - DEBUG - [main.py:616] - DIG AI DM response: To get access to Jenkins, follow these steps:

1.  **Verify Existing Access:**
    *   Go to `https://build.viacom.com` and try to log in. Your username is typically your email ID, and your password should be the same as your OKTA password.
    *   After logging in, check if you can access `https://build.viacom.com/job/gqe/`. (Source: https://paramount.atlassian.net/wiki/spaces/PLQA/pages/132128728)

2.  **Request Access (if needed):**
    Due to recent configuration changes, you first need a GitHub account to access Jenkins.
    *   **Initiate the process:** Send an email to `ateeque.haque@viacomcbs.com` to begin the process. (Source: https://paramount.atlassian.net/wiki/spaces/PLQA/pages/47714226)
    *   **GitHub Account Setup:**
        *   A new tile should appear on your Okta tiles. Click on it.
        *   Create a new GitHub account if you don't have one. It's recommended to use the same credentials as your AD login and your `cbsinteractive.com` email address.
        *   Join the free plan when prompted.
        *   Set up 2-factor authentication, preferably using the Okta app on your mobile device (scan the QR code displayed). Save your recovery codes.
        *   Sign out and then sign back into GitHub via the Okta tile. You should see "Paramount+" as Verified. (Source: https://paramount.atlassian.net/wiki/spaces/PLQA/pages/47714226)
    *   **VPN Connection (if necessary):** You might need to connect to the VPN via `connect.cbsinteractive.com/VPNFT` to access Jenkins. (Source: https://paramount.atlassian.net/wiki/spaces/PLQA/pages/47714226, https://paramount.atlassian.net/wiki/spaces/PLQA/pages/47710727)
    *   **Access Jenkins:** Navigate to a Jenkins URL, such as `https://jenkins-ui.cbs.com/job/tools/job/pr-tests/job/QA_Automation/`. You should be able to sign in using your GitHub username/password or your network credentials. You may need to authorize access to Paramount+. (Source: https://paramount.atlassian.net/wiki/spaces/PLQA/pages/47714226)
    *   **Requesting specific Jenkins projects:** If you need access to specific Jenkins projects, you can submit a request in the `#i-centralops-github` Slack channel or create a Pitstop ticket using a template for `mqe-pplus-tests` GitHub access. (Source: https://paramount.atlassian.net/wiki/spaces/PLQA/pages/178426346, https://paramount.atlassian.net/wiki/spaces/PLQA/pages/433660722)
    *   **Troubleshooting:** If you still don't have access after following these steps, create a request in the `#devops-support` Slack channel. (Source: https://paramount.atlassian.net/wiki/spaces/PLQA/pages/433660722)

Once access is granted, you will be able to log in to the `build.viacom.com` Jenkins server using your AD (Network) credentials. (Source: https://paramount.atlassian.net/wiki/spaces/PLQA/pages/433660722)
2025-08-22 21:34:19,090 - __main__ - DEBUG - [main.py:620] - Formatted DM response: Your Question:
> How to get access to jenkins?

Answer:

To get access to Jenkins, follow these steps:

1.  Verify Existing Access:
Go to `https://build.viacom.com` and try to log in. Your username is typically your email ID, and your password should be the same as your OKTA password.
       After logging in, check if you can access `https://build.viacom.com/job/gqe/`.

2.  Request Access (if needed):
Due to recent configuration changes, you first need a GitHub account to access Jenkins.
       Initiate the process: Send an email to `ateeque.haque@viacomcbs.com` to begin the process.
       GitHub Account Setup:
           A new tile should appear on your Okta tiles. Click on it.
           Create a new GitHub account if you don't have one. It's recommended to use the same credentials as your AD login and your `cbsinteractive.com` email address.
           Join the free plan when prompted.
           Set up 2-factor authentication, preferably using the Okta app on your mobile device (scan the QR code displayed). Save your recovery codes.
           Sign out and then sign back into GitHub via the Okta tile. You should see "Paramount+" as Verified.
       VPN Connection (if necessary): You might need to connect to the VPN via `connect.cbsinteractive.com/VPNFT` to access Jenkins.
       Access Jenkins: Navigate to a Jenkins URL, such as `https://jenkins-ui.cbs.com/job/tools/job/pr-tests/job/QA_Automation/`. You should be able to sign in using your GitHub username/password or your network credentials. You may need to authorize access to Paramount+.
       Requesting specific Jenkins projects: If you need access to specific Jenkins projects, you can submit a request in the `#i-centralops-github` Slack channel or create a Pitstop ticket using a template for `mqe-pplus-tests` GitHub access.
       Troubleshooting: If you still don't have access after following these steps, create a request in the `#devops-support` Slack channel.

Once access is granted, you will be able to log in to the `build.viacom.com` Jenkins server using your AD (Network) credentials.

────────────────────────────────────────
📚 Sources:
1. https://paramount.atlassian.net/wiki/spaces/PLQA/pages/132128728
2. https://paramount.atlassian.net/wiki/spaces/PLQA/pages/47714226
3. https://paramount.atlassian.net/wiki/spaces/PLQA/pages/47714226,
4. https://paramount.atlassian.net/wiki/spaces/PLQA/pages/47710727
5. https://paramount.atlassian.net/wiki/spaces/PLQA/pages/178426346,
6. https://paramount.atlassian.net/wiki/spaces/PLQA/pages/433660722
7. https://paramount.atlassian.net/wiki/spaces/PLQA/pages/47714226, https://paramount.atlassian.net/wiki/spaces/PLQA/pages/47710727
8. https://paramount.atlassian.net/wiki/spaces/PLQA/pages/178426346, https://paramount.atlassian.net/wiki/spaces/PLQA/pages/433660722

2025-08-22 21:34:19,090 - slack_sdk.web.base_client - DEBUG - [base_client.py:255] - Sending a request - url: https://slack.com/api/reactions.remove, query_params: {}, body_params: {'name': 'thinking_face', 'channel': 'D09A0LFHK8R', 'timestamp': '1755923648.642089', 'team_id': 'T010QS7UQNA'}, files: {}, json_body: None, headers: {'Content-Type': 'application/x-www-form-urlencoded', 'Authorization': '(redacted)', 'User-Agent': 'Python/3.12.0 slackclient/3.34.0 Darwin/23.4.0'}
2025-08-22 21:34:19,437 - slack_sdk.web.base_client - DEBUG - [base_client.py:546] - Received the following response - status: 200, headers: {'date': 'Sat, 23 Aug 2025 04:34:19 GMT', 'server': 'Apache', 'vary': 'Accept-Encoding', 'x-slack-req-id': '23934dd7018b8350f2f468c7aec1e4fa', 'x-content-type-options': 'nosniff', 'x-xss-protection': '0', 'pragma': 'no-cache', 'cache-control': 'private, no-cache, no-store, must-revalidate', 'expires': 'Sat, 26 Jul 1997 05:00:00 GMT', 'content-type': 'application/json; charset=utf-8', 'x-accepted-oauth-scopes': 'reactions:write', 'x-oauth-scopes': 'app_mentions:read,channels:history,chat:write,im:history,im:read,im:write,users:read,reactions:write,users:read.email', 'access-control-expose-headers': 'x-slack-req-id, retry-after', 'access-control-allow-headers': 'slack-route, x-slack-version-ts, x-b3-traceid, x-b3-spanid, x-b3-parentspanid, x-b3-sampled, x-b3-flags', 'strict-transport-security': 'max-age=31536000; includeSubDomains; preload', 'referrer-policy': 'no-referrer', 'x-slack-unique-id': 'aKlEyz1XL481qwGHjldc2wAAEAA', 'x-slack-backend': 'r', 'access-control-allow-origin': '*', 'content-length': '11', 'via': '1.1 slack-prod.tinyspeck.com, envoy-www-iad-eguorptn,envoy-edge-pdx-zhyzwwzk', 'x-envoy-attempt-count': '1', 'x-envoy-upstream-service-time': '128', 'x-backend': 'main_normal main_canary_with_overflow main_control_with_overflow', 'x-server': 'slack-www-hhvm-main-iad-hhfl', 'x-slack-shared-secret-outcome': 'no-match', 'x-edge-backend': 'envoy-www', 'timing-allow-origin': '*', 'x-slack-edge-shared-secret-outcome': 'no-match', 'connection': 'close'}, body: {"ok":true}
2025-08-22 21:34:19,438 - slack_sdk.web.base_client - DEBUG - [base_client.py:255] - Sending a request - url: https://slack.com/api/chat.postMessage, query_params: {}, body_params: {}, files: {}, json_body: {'channel': 'D09A0LFHK8R', 'text': 'Your Question:\n> How to get access to jenkins?\n\nAnswer:\n\nTo get access to Jenkins, follow these steps:\n\n1.  Verify Existing Access:\nGo to `https://build.viacom.com` and try to log in. Your username is typically your email ID, and your password should be the same as your OKTA password.\n       After logging in, check if you can access `https://build.viacom.com/job/gqe/`.\n\n2.  Request Access (if needed):\nDue to recent configuration changes, you first need a GitHub account to access Jenkins.\n       Initiate the process: Send an email to `ateeque.haque@viacomcbs.com` to begin the process.\n       GitHub Account Setup:\n           A new tile should appear on your Okta tiles. Click on it.\n           Create a new GitHub account if you don\'t have one. It\'s recommended to use the same credentials as your AD login and your `cbsinteractive.com` email address.\n           Join the free plan when prompted.\n           Set up 2-factor authentication, preferably using the Okta app on your mobile device (scan the QR code displayed). Save your recovery codes.\n           Sign out and then sign back into GitHub via the Okta tile. You should see "Paramount+" as Verified.\n       VPN Connection (if necessary): You might need to connect to the VPN via `connect.cbsinteractive.com/VPNFT` to access Jenkins.\n       Access Jenkins: Navigate to a Jenkins URL, such as `https://jenkins-ui.cbs.com/job/tools/job/pr-tests/job/QA_Automation/`. You should be able to sign in using your GitHub username/password or your network credentials. You may need to authorize access to Paramount+.\n       Requesting specific Jenkins projects: If you need access to specific Jenkins projects, you can submit a request in the `#i-centralops-github` Slack channel or create a Pitstop ticket using a template for `mqe-pplus-tests` GitHub access.\n       Troubleshooting: If you still don\'t have access after following these steps, create a request in the `#devops-support` Slack channel.\n\nOnce access is granted, you will be able to log in to the `build.viacom.com` Jenkins server using your AD (Network) credentials.\n\n────────────────────────────────────────\n📚 Sources:\n1. https://paramount.atlassian.net/wiki/spaces/PLQA/pages/132128728\n2. https://paramount.atlassian.net/wiki/spaces/PLQA/pages/47714226\n3. https://paramount.atlassian.net/wiki/spaces/PLQA/pages/47714226,\n4. https://paramount.atlassian.net/wiki/spaces/PLQA/pages/47710727\n5. https://paramount.atlassian.net/wiki/spaces/PLQA/pages/178426346,\n6. https://paramount.atlassian.net/wiki/spaces/PLQA/pages/433660722\n7. https://paramount.atlassian.net/wiki/spaces/PLQA/pages/47714226, https://paramount.atlassian.net/wiki/spaces/PLQA/pages/47710727\n8. https://paramount.atlassian.net/wiki/spaces/PLQA/pages/178426346, https://paramount.atlassian.net/wiki/spaces/PLQA/pages/433660722\n', 'thread_ts': '1755923648.642089', 'team_id': 'T010QS7UQNA'}, headers: {'Content-Type': 'application/json;charset=utf-8', 'Authorization': '(redacted)', 'User-Agent': 'Python/3.12.0 slackclient/3.34.0 Darwin/23.4.0'}
2025-08-22 21:34:19,910 - slack_sdk.web.base_client - DEBUG - [base_client.py:546] - Received the following response - status: 200, headers: {'date': 'Sat, 23 Aug 2025 04:34:19 GMT', 'server': 'Apache', 'vary': 'Accept-Encoding', 'x-slack-req-id': 'a7ad0dc640113eb68d3083bcf43bbf63', 'x-content-type-options': 'nosniff', 'x-xss-protection': '0', 'pragma': 'no-cache', 'cache-control': 'private, no-cache, no-store, must-revalidate', 'expires': 'Sat, 26 Jul 1997 05:00:00 GMT', 'content-type': 'application/json; charset=utf-8', 'x-accepted-oauth-scopes': 'chat:write', 'x-oauth-scopes': 'app_mentions:read,channels:history,chat:write,im:history,im:read,im:write,users:read,reactions:write,users:read.email', 'access-control-expose-headers': 'x-slack-req-id, retry-after', 'access-control-allow-headers': 'slack-route, x-slack-version-ts, x-b3-traceid, x-b3-spanid, x-b3-parentspanid, x-b3-sampled, x-b3-flags', 'strict-transport-security': 'max-age=31536000; includeSubDomains; preload', 'referrer-policy': 'no-referrer', 'x-slack-unique-id': 'aKlEyzeitOW9R7DUpVmiywAAECs', 'x-slack-backend': 'r', 'access-control-allow-origin': '*', 'content-length': '8385', 'via': '1.1 slack-prod.tinyspeck.com, envoy-www-iad-nbyvwueb,envoy-edge-pdx-pzxyjcnz', 'x-envoy-attempt-count': '1', 'x-envoy-upstream-service-time': '176', 'x-backend': 'main_normal main_canary_with_overflow main_control_with_overflow', 'x-server': 'slack-www-hhvm-main-iad-uasc', 'x-slack-shared-secret-outcome': 'no-match', 'x-edge-backend': 'envoy-www', 'timing-allow-origin': '*', 'x-slack-edge-shared-secret-outcome': 'no-match', 'connection': 'close'}, body: {"ok":true,"channel":"D09A0LFHK8R","ts":"1755923659.863819","message":{"user":"U099R6WTZ9S","type":"message","ts":"1755923659.863819","bot_id":"B099R6WTRU4","app_id":"A099LACAB2R","text":"Your Question:\n&gt; How to get access to jenkins?\n\nAnswer:\n\nTo get access to Jenkins, follow these steps:\n\n1.  Verify Existing Access:\nGo to `<https://build.viacom.com>` and try to log in. Your username is typically your email ID, and your password should be the same as your OKTA password.\n       After logging in, check if you can access `<https://build.viacom.com/job/gqe/>`.\n\n2.  Request Access (if needed):\nDue to recent configuration changes, you first need a GitHub account to access Jenkins.\n       Initiate the process: Send an email to `<mailto:ateeque.haque@viacomcbs.com|ateeque.haque@viacomcbs.com>` to begin the process.\n       GitHub Account Setup:\n           A new tile should appear on your Okta tiles. Click on it.\n           Create a new GitHub account if you don't have one. It's recommended to use the same credentials as your AD login and your `<http://cbsinteractive.com|cbsinteractive.com>` email address.\n           Join the free plan when prompted.\n           Set up 2-factor authentication, preferably using the Okta app on your mobile device (scan the QR code displayed). Save your recovery codes.\n           Sign out and then sign back into GitHub via the Okta tile. You should see \"Paramount+\" as Verified.\n       VPN Connection (if necessary): You might need to connect to the VPN via `<http://connect.cbsinteractive.com/VPNFT|connect.cbsinteractive.com/VPNFT>` to access Jenkins.\n       Access Jenkins: Navigate to a Jenkins URL, such as `<https://jenkins-ui.cbs.com/job/tools/job/pr-tests/job/QA_Automation/>`. You should be able to sign in using your GitHub username/password or your network credentials. You may need to authorize access to Paramount+.\n       Requesting specific Jenkins projects: If you need access to specific Jenkins projects, you can submit a request in the `#i-centralops-github` Slack channel or create a Pitstop ticket using a template for `mqe-pplus-tests` GitHub access.\n       Troubleshooting: If you still don't have access after following these steps, create a request in the `#devops-support` Slack channel.\n\nOnce access is granted, you will be able to log in to the `<http://build.viacom.com|build.viacom.com>` Jenkins server using your AD (Network) credentials.\n\n────────────────────────────────────────\n:books: Sources:\n1. <https://paramount.atlassian.net/wiki/spaces/PLQA/pages/132128728>\n2. <https://paramount.atlassian.net/wiki/spaces/PLQA/pages/47714226>\n3. <https://paramount.atlassian.net/wiki/spaces/PLQA/pages/47714226>,\n4. <https://paramount.atlassian.net/wiki/spaces/PLQA/pages/47710727>\n5. <https://paramount.atlassian.net/wiki/spaces/PLQA/pages/178426346>,\n6. <https://paramount.atlassian.net/wiki/spaces/PLQA/pages/433660722>\n7. <https://paramount.atlassian.net/wiki/spaces/PLQA/pages/47714226>, <https://paramount.atlassian.net/wiki/spaces/PLQA/pages/47710727>\n8. <https://paramount.atlassian.net/wiki/spaces/PLQA/pages/178426346>, <https://paramount.atlassian.net/wiki/spaces/PLQA/pages/433660722>\n","team":"T010QS7UQNA","bot_profile":{"id":"B099R6WTRU4","app_id":"A099LACAB2R","user_id":"U099R6WTZ9S","name":"AutoBot","icons":{"image_36":"https://a.slack-edge.com/80588/img/plugins/app/bot_36.png","image_48":"https://a.slack-edge.com/80588/img/plugins/app/bot_48.png","image_72":"https://a.slack-edge.com/80588/img/plugins/app/service_72.png"},"deleted":false,"updated":1754677948,"team_id":"T010QS7UQNA"},"thread_ts":"1755923648.642089","parent_user_id":"U01RMTFMALF","blocks":[{"type":"rich_text","block_id":"WBUmA","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Your Question:"}]},{"type":"rich_text_quote","elements":[{"type":"text","text":"How to get access to jenkins?"}]},{"type":"rich_text_section","elements":[{"type":"text","text":"\n\nAnswer:\n\nTo get access to Jenkins, follow these steps:\n\n1.  Verify Existing Access:\nGo to "},{"type":"link","url":"https://build.viacom.com","style":{"code":true}},{"type":"text","text":" and try to log in. Your username is typically your email ID, and your password should be the same as your OKTA password.\n       After logging in, check if you can access "},{"type":"link","url":"https://build.viacom.com/job/gqe/","style":{"code":true}},{"type":"text","text":".\n\n2.  Request Access (if needed):\nDue to recent configuration changes, you first need a GitHub account to access Jenkins.\n       Initiate the process: Send an email to "},{"type":"link","url":"mailto:ateeque.haque@viacomcbs.com","text":"ateeque.haque@viacomcbs.com","style":{"code":true}},{"type":"text","text":" to begin the process.\n       GitHub Account Setup:\n           A new tile should appear on your Okta tiles. Click on it.\n           Create a new GitHub account if you don't have one. It's recommended to use the same credentials as your AD login and your "},{"type":"link","url":"http://cbsinteractive.com","text":"cbsinteractive.com","style":{"code":true}},{"type":"text","text":" email address.\n           Join the free plan when prompted.\n           Set up 2-factor authentication, preferably using the Okta app on your mobile device (scan the QR code displayed). Save your recovery codes.\n           Sign out and then sign back into GitHub via the Okta tile. You should see \"Paramount+\" as Verified.\n       VPN Connection (if necessary): You might need to connect to the VPN via "},{"type":"link","url":"http://connect.cbsinteractive.com/VPNFT","text":"connect.cbsinteractive.com/VPNFT","style":{"code":true}},{"type":"text","text":" to access Jenkins.\n       Access Jenkins: Navigate to a Jenkins URL, such as "},{"type":"link","url":"https://jenkins-ui.cbs.com/job/tools/job/pr-tests/job/QA_Automation/","style":{"code":true}},{"type":"text","text":". You should be able to sign in using your GitHub username/password or your network credentials. You may need to authorize access to Paramount+.\n       Requesting specific Jenkins projects: If you need access to specific Jenkins projects, you can submit a request in the "},{"type":"text","text":"#i-centralops-github","style":{"code":true}},{"type":"text","text":" Slack channel or create a Pitstop ticket using a template for "},{"type":"text","text":"mqe-pplus-tests","style":{"code":true}},{"type":"text","text":" GitHub access.\n       Troubleshooting: If you still don't have access after following these steps, create a request in the "},{"type":"text","text":"#devops-support","style":{"code":true}},{"type":"text","text":" Slack channel.\n\nOnce access is granted, you will be able to log in to the "},{"type":"link","url":"http://build.viacom.com","text":"build.viacom.com","style":{"code":true}},{"type":"text","text":" Jenkins server using your AD (Network) credentials.\n\n────────────────────────────────────────\n"},{"type":"emoji","name":"books","unicode":"1f4da"},{"type":"text","text":" Sources:\n1. "},{"type":"link","url":"https://paramount.atlassian.net/wiki/spaces/PLQA/pages/132128728"},{"type":"text","text":"\n2. "},{"type":"link","url":"https://paramount.atlassian.net/wiki/spaces/PLQA/pages/47714226"},{"type":"text","text":"\n3. "},{"type":"link","url":"https://paramount.atlassian.net/wiki/spaces/PLQA/pages/47714226"},{"type":"text","text":",\n4. "},{"type":"link","url":"https://paramount.atlassian.net/wiki/spaces/PLQA/pages/47710727"},{"type":"text","text":"\n5. "},{"type":"link","url":"https://paramount.atlassian.net/wiki/spaces/PLQA/pages/178426346"},{"type":"text","text":",\n6. "},{"type":"link","url":"https://paramount.atlassian.net/wiki/spaces/PLQA/pages/433660722"},{"type":"text","text":"\n7. "},{"type":"link","url":"https://paramount.atlassian.net/wiki/spaces/PLQA/pages/47714226"},{"type":"text","text":", "},{"type":"link","url":"https://paramount.atlassian.net/wiki/spaces/PLQA/pages/47710727"},{"type":"text","text":"\n8. "},{"type":"link","url":"https://paramount.atlassian.net/wiki/spaces/PLQA/pages/178426346"},{"type":"text","text":", "},{"type":"link","url":"https://paramount.atlassian.net/wiki/spaces/PLQA/pages/433660722"}]}]}]}}
2025-08-22 21:34:19,911 - __main__ - DEBUG - [main.py:645] - Cleaning up DM thread tracking...
2025-08-22 21:34:19,911 - utils - DEBUG - [utils.py:67] - Managing thread: D09A0LFHK8R:1755923648.642089, action: remove, user: U01RMTFMALF
2025-08-22 21:34:19,912 - utils - INFO - [utils.py:100] - Removed thread D09A0LFHK8R:1755923648.642089 from active tracking (remaining: 0)
2025-08-22 21:34:21,436 - slack_bolt.App - DEBUG - [client.py:235] - on_message invoked: (message: {"envelope_id":"ecef8c10-6ff6-4483-9ad6-6ff69b1e3f7e","payload":{"token":"yq71khZBCyJF1Ri2hG5aNqr5","team_id":"T010QS7UQNA","enterprise_id":"ERV4P7NAD","context_team_id":null,"context_enterprise_id":"ERV4P7NAD","api_app_id":"A099LACAB2R","event":{"user":"U099R6WTZ9S","type":"message","ts":"1755923659.863819","bot_id":"B099R6WTRU4","app_id":"A099LACAB2R","text":"Your Question:\n&gt; How to get access to jenkins?\n\nAnswer:\n\nTo get access to Jenkins, follow these steps:\n\n1.  Verify Existing Access:\nGo to `<https:\/\/build.viacom.com>` and try to log in. Your username is typically your email ID, and your password should be the same as your OKTA password.\n       After logging in, check if you can access `<https:\/\/build.viacom.com\/job\/gqe\/>`.\n\n2.  Request Access (if needed):\nDue to recent configuration changes, you first need a GitHub account to access Jenkins.\n       Initiate the process: Send an email to `<mailto:ateeque.haque@viacomcbs.com|ateeque.haque@viacomcbs.com>` to begin the process.\n       GitHub Account Setup:\n           A new tile should appear on your Okta tiles. Click on it.\n           Create a new GitHub account if you don't have one. It's recommended to use the same credentials as your AD login and your `<http:\/\/cbsinteractive.com|cbsinteractive.com>` email address.\n           Join the free plan when prompted.\n           Set up 2-factor authentication, preferably using the Okta app on your mobile device (scan the QR code displayed). Save your recovery codes.\n           Sign out and then sign back into GitHub via the Okta tile. You should see \"Paramount+\" as Verified.\n       VPN Connection (if necessary): You might need to connect to the VPN via `<http:\/\/connect.cbsinteractive.com\/VPNFT|connect.cbsinteractive.com\/VPNFT>` to access Jenkins.\n       Access Jenkins: Navigate to a Jenkins URL, such as `<https:\/\/jenkins-ui.cbs.com\/job\/tools\/job\/pr-tests\/job\/QA_Automation\/>`. You should be able to sign in using your GitHub username\/password or your network credentials. You may need to authorize access to Paramount+.\n       Requesting specific Jenkins projects: If you need access to specific Jenkins projects, you can submit a request in the `#i-centralops-github` Slack channel or create a Pitstop ticket using a template for `mqe-pplus-tests` GitHub access.\n       Troubleshooting: If you still don't have access after following these steps, create a request in the `#devops-support` Slack channel.\n\nOnce access is granted, you will be able to log in to the `<http:\/\/build.viacom.com|build.viacom.com>` Jenkins server using your AD (Network) credentials.\n\n\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\n:books: Sources:\n1. <https:\/\/paramount.atlassian.net\/wiki\/spaces\/PLQA\/pages\/132128728>\n2. <https:\/\/paramount.atlassian.net\/wiki\/spaces\/PLQA\/pages\/47714226>\n3. <https:\/\/paramount.atlassian.net\/wiki\/spaces\/PLQA\/pages\/47714226>,\n4. <https:\/\/paramount.atlassian.net\/wiki\/spaces\/PLQA\/pages\/47710727>\n5. <https:\/\/paramount.atlassian.net\/wiki\/spaces\/PLQA\/pages\/178426346>,\n6. <https:\/\/paramount.atlassian.net\/wiki\/spaces\/PLQA\/pages\/433660722>\n7. <https:\/\/paramount.atlassian.net\/wiki\/spaces\/PLQA\/pages\/47714226>, <https:\/\/paramount.atlassian.net\/wiki\/spaces\/PLQA\/pages\/47710727>\n8. <https:\/\/paramount.atlassian.net\/wiki\/spaces\/PLQA\/pages\/178426346>, <https:\/\/paramount.atlassian.net\/wiki\/spaces\/PLQA\/pages\/433660722>\n","team":"T010QS7UQNA","bot_profile":{"id":"B099R6WTRU4","deleted":false,"name":"AutoBot","updated":1754677948,"app_id":"A099LACAB2R","user_id":"U099R6WTZ9S","icons":{"image_36":"https:\/\/a.slack-edge.com\/80588\/img\/plugins\/app\/bot_36.png","image_48":"https:\/\/a.slack-edge.com\/80588\/img\/plugins\/app\/bot_48.png","image_72":"https:\/\/a.slack-edge.com\/80588\/img\/plugins\/app\/service_72.png"},"team_id":"T010QS7UQNA"},"thread_ts":"1755923648.642089","parent_user_id":"U01RMTFMALF","blocks":[{"type":"rich_text","block_id":"89us","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Your Question:"}]},{"type":"rich_text_quote","elements":[{"type":"text","text":"How to get access to jenkins?"}]},{"type":"rich_text_section","elements":[{"type":"text","text":"\n\nAnswer:\n\nTo get access to Jenkins, follow these steps:\n\n1.  Verify Existing Access:\nGo to "},{"type":"link","url":"https:\/\/build.viacom.com","style":{"code":true}},{"type":"text","text":" and try to log in. Your username is typically your email ID, and your password should be the same as your OKTA password.\n       After logging in, check if you can access "},{"type":"link","url":"https:\/\/build.viacom.com\/job\/gqe\/","style":{"code":true}},{"type":"text","text":".\n\n2.  Request Access (if needed):\nDue to recent configuration changes, you first need a GitHub account to access Jenkins.\n       Initiate the process: Send an email to "},{"type":"link","url":"mailto:ateeque.haque@viacomcbs.com","text":"ateeque.haque@viacomcbs.com","style":{"code":true}},{"type":"text","text":" to begin the process.\n       GitHub Account Setup:\n           A new tile should appear on your Okta tiles. Click on it.\n           Create a new GitHub account if you don't have one. It's recommended to use the same credentials as your AD login and your "},{"type":"link","url":"http:\/\/cbsinteractive.com","text":"cbsinteractive.com","style":{"code":true}},{"type":"text","text":" email address.\n           Join the free plan when prompted.\n           Set up 2-factor authentication, preferably using the Okta app on your mobile device (scan the QR code displayed). Save your recovery codes.\n           Sign out and then sign back into GitHub via the Okta tile. You should see \"Paramount+\" as Verified.\n       VPN Connection (if necessary): You might need to connect to the VPN via "},{"type":"link","url":"http:\/\/connect.cbsinteractive.com\/VPNFT","text":"connect.cbsinteractive.com\/VPNFT","style":{"code":true}},{"type":"text","text":" to access Jenkins.\n       Access Jenkins: Navigate to a Jenkins URL, such as "},{"type":"link","url":"https:\/\/jenkins-ui.cbs.com\/job\/tools\/job\/pr-tests\/job\/QA_Automation\/","style":{"code":true}},{"type":"text","text":". You should be able to sign in using your GitHub username\/password or your network credentials. You may need to authorize access to Paramount+.\n       Requesting specific Jenkins projects: If you need access to specific Jenkins projects, you can submit a request in the "},{"type":"text","text":"#i-centralops-github","style":{"code":true}},{"type":"text","text":" Slack channel or create a Pitstop ticket using a template for "},{"type":"text","text":"mqe-pplus-tests","style":{"code":true}},{"type":"text","text":" GitHub access.\n       Troubleshooting: If you still don't have access after following these steps, create a request in the "},{"type":"text","text":"#devops-support","style":{"code":true}},{"type":"text","text":" Slack channel.\n\nOnce access is granted, you will be able to log in to the "},{"type":"link","url":"http:\/\/build.viacom.com","text":"build.viacom.com","style":{"code":true}},{"type":"text","text":" Jenkins server using your AD (Network) credentials.\n\n\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\n"},{"type":"emoji","name":"books","unicode":"1f4da"},{"type":"text","text":" Sources:\n1. "},{"type":"link","url":"https:\/\/paramount.atlassian.net\/wiki\/spaces\/PLQA\/pages\/132128728"},{"type":"text","text":"\n2. "},{"type":"link","url":"https:\/\/paramount.atlassian.net\/wiki\/spaces\/PLQA\/pages\/47714226"},{"type":"text","text":"\n3. "},{"type":"link","url":"https:\/\/paramount.atlassian.net\/wiki\/spaces\/PLQA\/pages\/47714226"},{"type":"text","text":",\n4. "},{"type":"link","url":"https:\/\/paramount.atlassian.net\/wiki\/spaces\/PLQA\/pages\/47710727"},{"type":"text","text":"\n5. "},{"type":"link","url":"https:\/\/paramount.atlassian.net\/wiki\/spaces\/PLQA\/pages\/178426346"},{"type":"text","text":",\n6. "},{"type":"link","url":"https:\/\/paramount.atlassian.net\/wiki\/spaces\/PLQA\/pages\/433660722"},{"type":"text","text":"\n7. "},{"type":"link","url":"https:\/\/paramount.atlassian.net\/wiki\/spaces\/PLQA\/pages\/47714226"},{"type":"text","text":", "},{"type":"link","url":"https:\/\/paramount.atlassian.net\/wiki\/spaces\/PLQA\/pages\/47710727"},{"type":"text","text":"\n8. "},{"type":"link","url":"https:\/\/paramount.atlassian.net\/wiki\/spaces\/PLQA\/pages\/178426346"},{"type":"text","text":", "},{"type":"link","url":"https:\/\/paramount.atlassian.net\/wiki\/spaces\/PLQA\/pages\/433660722"}]}]}],"channel":"D09A0LFHK8R","event_ts":"1755923659.863819","channel_type":"im"},"type":"event_callback","event_id":"Ev09BPQZC15Y","event_time":1755923659,"authorizations":[{"enterprise_id":"ERV4P7NAD","team_id":"T010QS7UQNA","user_id":"U099R6WTZ9S","is_bot":true,"is_enterprise_install":false}],"is_ext_shared_channel":false,"event_context":"4-eyJldCI6Im1lc3NhZ2UiLCJ0aWQiOiJUMDEwUVM3VVFOQSIsImFpZCI6IkEwOTlMQUNBQjJSIiwiY2lkIjoiRDA5QTBMRkhLOFIifQ"},"type":"events_api","accepts_response_payload":false,"retry_attempt":0,"retry_reason":""})
2025-08-22 21:34:21,437 - slack_bolt.App - DEBUG - [client.py:99] - A new message enqueued (current queue size: 1)
2025-08-22 21:34:21,437 - slack_bolt.App - DEBUG - [client.py:105] - A message dequeued (current queue size: 0)
2025-08-22 21:34:21,438 - slack_bolt.App - DEBUG - [client.py:125] - Message processing started (type: events_api, envelope_id: ecef8c10-6ff6-4483-9ad6-6ff69b1e3f7e)
2025-08-22 21:34:21,438 - slack_bolt.App - DEBUG - [app.py:476] - Applying slack_bolt.middleware.ssl_check.ssl_check.SslCheck
2025-08-22 21:34:21,438 - slack_bolt.App - DEBUG - [app.py:476] - Applying slack_bolt.middleware.request_verification.request_verification.RequestVerification
2025-08-22 21:34:21,438 - slack_bolt.App - DEBUG - [app.py:476] - Applying slack_bolt.middleware.authorization.single_team_authorization.SingleTeamAuthorization
2025-08-22 21:34:21,438 - slack_bolt.App - DEBUG - [app.py:476] - Applying slack_bolt.middleware.ignoring_self_events.ignoring_self_events.IgnoringSelfEvents
2025-08-22 21:34:21,438 - slack_bolt.IgnoringSelfEvents - DEBUG - [ignoring_self_events.py:60] - Skipped self event: {'user': 'U099R6WTZ9S', 'type': 'message', 'ts': '1755923659.863819', 'bot_id': 'B099R6WTRU4', 'app_id': 'A099LACAB2R', 'text': 'Your Question:\n&gt; How to get access to jenkins?\n\nAnswer:\n\nTo get access to Jenkins, follow these steps:\n\n1.  Verify Existing Access:\nGo to `<https://build.viacom.com>` and try to log in. Your username is typically your email ID, and your password should be the same as your OKTA password.\n       After logging in, check if you can access `<https://build.viacom.com/job/gqe/>`.\n\n2.  Request Access (if needed):\nDue to recent configuration changes, you first need a GitHub account to access Jenkins.\n       Initiate the process: Send an email to `<mailto:ateeque.haque@viacomcbs.com|ateeque.haque@viacomcbs.com>` to begin the process.\n       GitHub Account Setup:\n           A new tile should appear on your Okta tiles. Click on it.\n           Create a new GitHub account if you don\'t have one. It\'s recommended to use the same credentials as your AD login and your `<http://cbsinteractive.com|cbsinteractive.com>` email address.\n           Join the free plan when prompted.\n           Set up 2-factor authentication, preferably using the Okta app on your mobile device (scan the QR code displayed). Save your recovery codes.\n           Sign out and then sign back into GitHub via the Okta tile. You should see "Paramount+" as Verified.\n       VPN Connection (if necessary): You might need to connect to the VPN via `<http://connect.cbsinteractive.com/VPNFT|connect.cbsinteractive.com/VPNFT>` to access Jenkins.\n       Access Jenkins: Navigate to a Jenkins URL, such as `<https://jenkins-ui.cbs.com/job/tools/job/pr-tests/job/QA_Automation/>`. You should be able to sign in using your GitHub username/password or your network credentials. You may need to authorize access to Paramount+.\n       Requesting specific Jenkins projects: If you need access to specific Jenkins projects, you can submit a request in the `#i-centralops-github` Slack channel or create a Pitstop ticket using a template for `mqe-pplus-tests` GitHub access.\n       Troubleshooting: If you still don\'t have access after following these steps, create a request in the `#devops-support` Slack channel.\n\nOnce access is granted, you will be able to log in to the `<http://build.viacom.com|build.viacom.com>` Jenkins server using your AD (Network) credentials.\n\n────────────────────────────────────────\n:books: Sources:\n1. <https://paramount.atlassian.net/wiki/spaces/PLQA/pages/132128728>\n2. <https://paramount.atlassian.net/wiki/spaces/PLQA/pages/47714226>\n3. <https://paramount.atlassian.net/wiki/spaces/PLQA/pages/47714226>,\n4. <https://paramount.atlassian.net/wiki/spaces/PLQA/pages/47710727>\n5. <https://paramount.atlassian.net/wiki/spaces/PLQA/pages/178426346>,\n6. <https://paramount.atlassian.net/wiki/spaces/PLQA/pages/433660722>\n7. <https://paramount.atlassian.net/wiki/spaces/PLQA/pages/47714226>, <https://paramount.atlassian.net/wiki/spaces/PLQA/pages/47710727>\n8. <https://paramount.atlassian.net/wiki/spaces/PLQA/pages/178426346>, <https://paramount.atlassian.net/wiki/spaces/PLQA/pages/433660722>\n', 'team': 'T010QS7UQNA', 'bot_profile': {'id': 'B099R6WTRU4', 'deleted': False, 'name': 'AutoBot', 'updated': 1754677948, 'app_id': 'A099LACAB2R', 'user_id': 'U099R6WTZ9S', 'icons': {'image_36': 'https://a.slack-edge.com/80588/img/plugins/app/bot_36.png', 'image_48': 'https://a.slack-edge.com/80588/img/plugins/app/bot_48.png', 'image_72': 'https://a.slack-edge.com/80588/img/plugins/app/service_72.png'}, 'team_id': 'T010QS7UQNA'}, 'thread_ts': '1755923648.642089', 'parent_user_id': 'U01RMTFMALF', 'blocks': [{'type': 'rich_text', 'block_id': '89us', 'elements': [{'type': 'rich_text_section', 'elements': [{'type': 'text', 'text': 'Your Question:'}]}, {'type': 'rich_text_quote', 'elements': [{'type': 'text', 'text': 'How to get access to jenkins?'}]}, {'type': 'rich_text_section', 'elements': [{'type': 'text', 'text': '\n\nAnswer:\n\nTo get access to Jenkins, follow these steps:\n\n1.  Verify Existing Access:\nGo to '}, {'type': 'link', 'url': 'https://build.viacom.com', 'style': {'code': True}}, {'type': 'text', 'text': ' and try to log in. Your username is typically your email ID, and your password should be the same as your OKTA password.\n       After logging in, check if you can access '}, {'type': 'link', 'url': 'https://build.viacom.com/job/gqe/', 'style': {'code': True}}, {'type': 'text', 'text': '.\n\n2.  Request Access (if needed):\nDue to recent configuration changes, you first need a GitHub account to access Jenkins.\n       Initiate the process: Send an email to '}, {'type': 'link', 'url': 'mailto:ateeque.haque@viacomcbs.com', 'text': 'ateeque.haque@viacomcbs.com', 'style': {'code': True}}, {'type': 'text', 'text': " to begin the process.\n       GitHub Account Setup:\n           A new tile should appear on your Okta tiles. Click on it.\n           Create a new GitHub account if you don't have one. It's recommended to use the same credentials as your AD login and your "}, {'type': 'link', 'url': 'http://cbsinteractive.com', 'text': 'cbsinteractive.com', 'style': {'code': True}}, {'type': 'text', 'text': ' email address.\n           Join the free plan when prompted.\n           Set up 2-factor authentication, preferably using the Okta app on your mobile device (scan the QR code displayed). Save your recovery codes.\n           Sign out and then sign back into GitHub via the Okta tile. You should see "Paramount+" as Verified.\n       VPN Connection (if necessary): You might need to connect to the VPN via '}, {'type': 'link', 'url': 'http://connect.cbsinteractive.com/VPNFT', 'text': 'connect.cbsinteractive.com/VPNFT', 'style': {'code': True}}, {'type': 'text', 'text': ' to access Jenkins.\n       Access Jenkins: Navigate to a Jenkins URL, such as '}, {'type': 'link', 'url': 'https://jenkins-ui.cbs.com/job/tools/job/pr-tests/job/QA_Automation/', 'style': {'code': True}}, {'type': 'text', 'text': '. You should be able to sign in using your GitHub username/password or your network credentials. You may need to authorize access to Paramount+.\n       Requesting specific Jenkins projects: If you need access to specific Jenkins projects, you can submit a request in the '}, {'type': 'text', 'text': '#i-centralops-github', 'style': {'code': True}}, {'type': 'text', 'text': ' Slack channel or create a Pitstop ticket using a template for '}, {'type': 'text', 'text': 'mqe-pplus-tests', 'style': {'code': True}}, {'type': 'text', 'text': " GitHub access.\n       Troubleshooting: If you still don't have access after following these steps, create a request in the "}, {'type': 'text', 'text': '#devops-support', 'style': {'code': True}}, {'type': 'text', 'text': ' Slack channel.\n\nOnce access is granted, you will be able to log in to the '}, {'type': 'link', 'url': 'http://build.viacom.com', 'text': 'build.viacom.com', 'style': {'code': True}}, {'type': 'text', 'text': ' Jenkins server using your AD (Network) credentials.\n\n────────────────────────────────────────\n'}, {'type': 'emoji', 'name': 'books', 'unicode': '1f4da'}, {'type': 'text', 'text': ' Sources:\n1. '}, {'type': 'link', 'url': 'https://paramount.atlassian.net/wiki/spaces/PLQA/pages/132128728'}, {'type': 'text', 'text': '\n2. '}, {'type': 'link', 'url': 'https://paramount.atlassian.net/wiki/spaces/PLQA/pages/47714226'}, {'type': 'text', 'text': '\n3. '}, {'type': 'link', 'url': 'https://paramount.atlassian.net/wiki/spaces/PLQA/pages/47714226'}, {'type': 'text', 'text': ',\n4. '}, {'type': 'link', 'url': 'https://paramount.atlassian.net/wiki/spaces/PLQA/pages/47710727'}, {'type': 'text', 'text': '\n5. '}, {'type': 'link', 'url': 'https://paramount.atlassian.net/wiki/spaces/PLQA/pages/178426346'}, {'type': 'text', 'text': ',\n6. '}, {'type': 'link', 'url': 'https://paramount.atlassian.net/wiki/spaces/PLQA/pages/433660722'}, {'type': 'text', 'text': '\n7. '}, {'type': 'link', 'url': 'https://paramount.atlassian.net/wiki/spaces/PLQA/pages/47714226'}, {'type': 'text', 'text': ', '}, {'type': 'link', 'url': 'https://paramount.atlassian.net/wiki/spaces/PLQA/pages/47710727'}, {'type': 'text', 'text': '\n8. '}, {'type': 'link', 'url': 'https://paramount.atlassian.net/wiki/spaces/PLQA/pages/178426346'}, {'type': 'text', 'text': ', '}, {'type': 'link', 'url': 'https://paramount.atlassian.net/wiki/spaces/PLQA/pages/433660722'}]}]}], 'channel': 'D09A0LFHK8R', 'event_ts': '1755923659.863819', 'channel_type': 'im'}
2025-08-22 21:34:21,439 - slack_bolt.App - DEBUG - [client.py:200] - Sending a message (session id: 352e8ced-d1e0-4993-8c52-42ca285b7821, message: {"envelope_id": "ecef8c10-6ff6-4483-9ad6-6ff69b1e3f7e"})
2025-08-22 21:34:21,439 - slack_bolt.App - DEBUG - [internals.py:41] - Response time: 1 milliseconds
2025-08-22 21:34:21,439 - slack_bolt.App - DEBUG - [client.py:150] - Message processing completed (type: events_api, envelope_id: ecef8c10-6ff6-4483-9ad6-6ff69b1e3f7e)
2025-08-22 21:38:54,169 - __main__ - INFO - [main.py:43] - Loading application configuration...
2025-08-22 21:38:54,170 - __main__ - INFO - [main.py:45] - Configuration loaded successfully
2025-08-22 21:38:54,170 - __main__ - INFO - [main.py:48] - Initializing security components...
2025-08-22 21:38:54,170 - __main__ - DEBUG - [main.py:50] - Slack validator initialized
2025-08-22 21:38:54,170 - security.content_filter - INFO - [content_filter.py:39] - Content filter initialized with 11 patterns
2025-08-22 21:38:54,170 - __main__ - DEBUG - [main.py:53] - Content filter initialized
2025-08-22 21:38:54,170 - auth.admin_manager - INFO - [admin_manager.py:27] - Admin manager initialized with 2 admin users
2025-08-22 21:38:54,170 - __main__ - DEBUG - [main.py:56] - Admin manager initialized
2025-08-22 21:38:54,170 - auth.email_whitelist - INFO - [email_whitelist.py:28] - Email whitelist initialized with 1 whitelisted emails
2025-08-22 21:38:54,170 - auth.email_whitelist - INFO - [email_whitelist.py:37] - Whitelisted domains: paramount.com
2025-08-22 21:38:54,170 - __main__ - DEBUG - [main.py:59] - Email whitelist initialized with 1 emails
2025-08-22 21:38:54,170 - auth.slack_user_info - DEBUG - [slack_user_info.py:25] - Slack user info manager initialized
2025-08-22 21:38:54,170 - __main__ - DEBUG - [main.py:62] - Slack user info manager initialized
2025-08-22 21:38:54,170 - __main__ - INFO - [main.py:63] - Security components initialized successfully
2025-08-22 21:38:54,170 - __main__ - INFO - [main.py:66] - Initializing Slack app...
2025-08-22 21:38:54,209 - slack_bolt.App - DEBUG - [base_client.py:255] - Sending a request - url: https://slack.com/api/auth.test, query_params: {}, body_params: {}, files: {}, json_body: None, headers: {'Content-Type': 'application/x-www-form-urlencoded', 'Authorization': '(redacted)', 'User-Agent': 'Bolt/1.16.0 Python/3.12.0 slackclient/3.34.0 Darwin/23.4.0'}
2025-08-22 21:38:54,590 - slack_bolt.App - DEBUG - [base_client.py:546] - Received the following response - status: 200, headers: {'date': 'Sat, 23 Aug 2025 04:38:54 GMT', 'server': 'Apache', 'vary': 'Accept-Encoding', 'x-slack-req-id': 'b88d5bf73bb832db7bb61f1f8bc4c0fe', 'x-content-type-options': 'nosniff', 'x-xss-protection': '0', 'pragma': 'no-cache', 'cache-control': 'private, no-cache, no-store, must-revalidate', 'expires': 'Sat, 26 Jul 1997 05:00:00 GMT', 'content-type': 'application/json; charset=utf-8', 'x-oauth-scopes': 'app_mentions:read,channels:history,chat:write,im:history,im:read,im:write,users:read,reactions:write,users:read.email', 'access-control-expose-headers': 'x-slack-req-id, retry-after', 'access-control-allow-headers': 'slack-route, x-slack-version-ts, x-b3-traceid, x-b3-spanid, x-b3-parentspanid, x-b3-sampled, x-b3-flags', 'strict-transport-security': 'max-age=31536000; includeSubDomains; preload', 'referrer-policy': 'no-referrer', 'x-slack-unique-id': 'aKlF3mqHaQMhOY-njt1EswAAEBw', 'x-slack-backend': 'r', 'access-control-allow-origin': '*', 'content-length': '228', 'via': '1.1 slack-prod.tinyspeck.com, envoy-www-iad-esoxjefq,envoy-edge-pdx-hongvjyn', 'x-envoy-attempt-count': '1', 'x-envoy-upstream-service-time': '90', 'x-backend': 'main_normal main_canary_with_overflow main_control_with_overflow', 'x-server': 'slack-www-hhvm-main-iad-jwjh', 'x-slack-shared-secret-outcome': 'no-match', 'x-edge-backend': 'envoy-www', 'timing-allow-origin': '*', 'x-slack-edge-shared-secret-outcome': 'no-match', 'connection': 'close'}, body: {"ok":true,"url":"https://viacomcbs-grid-test.slack.com/","team":"Test Workspace","user":"autobot","team_id":"T010QS7UQNA","user_id":"U099R6WTZ9S","bot_id":"B099R6WTRU4","enterprise_id":"ERV4P7NAD","is_enterprise_install":false}
2025-08-22 21:38:54,590 - __main__ - INFO - [main.py:68] - Slack app initialized successfully
2025-08-22 21:38:54,590 - __main__ - DEBUG - [main.py:72] - Message deduplication cache initialized
2025-08-22 21:38:54,590 - __main__ - DEBUG - [main.py:77] - Thread tracking initialized
2025-08-22 21:38:54,590 - __main__ - INFO - [main.py:80] - Initializing DIG AI integration...
2025-08-22 21:38:54,590 - dig_connector - INFO - [dig_connector.py:284] - Initializing DIG AI with model ID: 42
2025-08-22 21:38:54,590 - dig_connector - INFO - [dig_connector.py:49] - Starting DIG chat session initialization...
2025-08-22 21:38:54,590 - dig_connector - DEBUG - [dig_connector.py:52] - Creating chat with name: Slack Bot Session 2025-08-23T04:38:54.590751+00:00
2025-08-22 21:38:54,590 - dig_connector - DEBUG - [dig_connector.py:63] - Creating chat - URL: https://ai.digdev.cbsicloud.com/fastapi/chats, Payload: {'chat_nm': 'Slack Bot Session 2025-08-23T04:38:54.590751+00:00', 'model_id': 42}
2025-08-22 21:38:54,592 - urllib3.connectionpool - DEBUG - [connectionpool.py:1055] - Starting new HTTPS connection (1): ai.digdev.cbsicloud.com:443
2025-08-22 21:38:54,876 - urllib3.connectionpool - DEBUG - [connectionpool.py:549] - https://ai.digdev.cbsicloud.com:443 "POST /fastapi/chats HTTP/1.1" 200 217
2025-08-22 21:38:54,877 - dig_connector - DEBUG - [dig_connector.py:66] - Create chat response: status=200
2025-08-22 21:38:54,877 - dig_connector - INFO - [dig_connector.py:54] - Successfully initialized DIG chat session with ID: 896
2025-08-22 21:38:54,877 - __main__ - INFO - [main.py:83] - DIG AI integration successfully initialized
2025-08-22 21:38:54,877 - __main__ - INFO - [main.py:87] - Setting up event handlers...
2025-08-22 21:38:54,879 - __main__ - INFO - [main.py:754] - Starting AI Assistant Bot...
2025-08-22 21:38:54,879 - __main__ - INFO - [main.py:755] - Registering event handlers...
2025-08-22 21:38:54,879 - __main__ - DEBUG - [main.py:756] - Event handlers registered: app_mention, message, app_home_opened
2025-08-22 21:38:54,879 - __main__ - INFO - [main.py:759] - Connecting to Slack via Socket Mode...
2025-08-22 21:38:54,880 - __main__ - INFO - [main.py:763] - Socket Mode handler created successfully
2025-08-22 21:38:54,880 - __main__ - INFO - [main.py:765] - ✅ Bot is now running and listening for events!
2025-08-22 21:38:54,881 - slack_bolt.App - DEBUG - [base_client.py:255] - Sending a request - url: https://slack.com/api/apps.connections.open, query_params: {}, body_params: {}, files: {}, json_body: None, headers: {'Content-Type': 'application/x-www-form-urlencoded', 'Authorization': '(redacted)', 'User-Agent': 'Bolt/1.16.0 Python/3.12.0 slackclient/3.34.0 Darwin/23.4.0'}
2025-08-22 21:38:55,184 - slack_bolt.App - DEBUG - [base_client.py:546] - Received the following response - status: 200, headers: {'date': 'Sat, 23 Aug 2025 04:38:55 GMT', 'server': 'Apache', 'vary': 'Accept-Encoding', 'x-slack-req-id': '9c50e95c8191a7a421558fceac84be24', 'x-content-type-options': 'nosniff', 'x-xss-protection': '0', 'x-robots-tag': 'noindex,nofollow', 'pragma': 'no-cache', 'cache-control': 'private, no-cache, no-store, must-revalidate', 'expires': 'Sat, 26 Jul 1997 05:00:00 GMT', 'content-type': 'application/json; charset=utf-8', 'x-accepted-oauth-scopes': 'connections:write', 'x-oauth-scopes': 'connections:write', 'access-control-expose-headers': 'x-slack-req-id, retry-after', 'access-control-allow-headers': 'slack-route, x-slack-version-ts, x-b3-traceid, x-b3-spanid, x-b3-parentspanid, x-b3-sampled, x-b3-flags', 'strict-transport-security': 'max-age=31536000; includeSubDomains; preload', 'referrer-policy': 'no-referrer', 'x-slack-unique-id': 'aKlF3ybqtY5MMYx9kaoPRQAAEAk', 'x-slack-backend': 'r', 'access-control-allow-origin': '*', 'content-length': '173', 'via': '1.1 slack-prod.tinyspeck.com, envoy-www-iad-jyuczcss,envoy-edge-pdx-miprwoft', 'x-envoy-attempt-count': '1', 'x-envoy-upstream-service-time': '78', 'x-backend': 'main_normal main_canary_with_overflow main_control_with_overflow', 'x-server': 'slack-www-hhvm-main-iad-zsnq', 'x-slack-shared-secret-outcome': 'no-match', 'x-edge-backend': 'envoy-www', 'timing-allow-origin': '*', 'x-slack-edge-shared-secret-outcome': 'no-match', 'connection': 'close'}, body: {"ok":true,"url":"wss:\/\/wss-primary.slack.com\/link\/?ticket=d8719a2b-0f73-4909-b683-0f4b66788f72&app_id=a6c8d361ee1c6f398c5b4afec831555b78d7affa753b16bcc0fc64d7c13f3766"}
2025-08-22 21:38:55,715 - slack_bolt.App - INFO - [client.py:192] - A new session has been established (session id: 3f770b4f-1c8a-43f7-a519-958dceafdffa)
2025-08-22 21:38:55,715 - slack_bolt.App - INFO - [base_handler.py:50] - ⚡️ Bolt app is running!
2025-08-22 21:38:55,812 - slack_bolt.App - INFO - [client.py:265] - Starting to receive messages from a new connection (session id: 3f770b4f-1c8a-43f7-a519-958dceafdffa)
2025-08-22 21:38:56,091 - slack_bolt.App - DEBUG - [client.py:235] - on_message invoked: (message: {"type":"hello","num_connections":2,"debug_info":{"host":"applink-7","build_number":0,"approximate_connection_time":18060},"connection_info":{"app_id":"A099LACAB2R"}})
2025-08-22 21:38:56,091 - slack_bolt.App - DEBUG - [client.py:99] - A new message enqueued (current queue size: 1)
2025-08-22 21:38:56,092 - slack_bolt.App - DEBUG - [client.py:105] - A message dequeued (current queue size: 0)
2025-08-22 21:38:56,092 - slack_bolt.App - DEBUG - [client.py:125] - Message processing started (type: hello, envelope_id: None)
2025-08-22 21:38:56,092 - slack_bolt.App - DEBUG - [client.py:150] - Message processing completed (type: hello, envelope_id: None)
2025-08-22 21:39:04,575 - slack_bolt.App - DEBUG - [client.py:235] - on_message invoked: (message: {"envelope_id":"e8b72126-ffe8-49db-bcc4-f9284052f2b1","payload":{"token":"yq71khZBCyJF1Ri2hG5aNqr5","team_id":"T010QS7UQNA","enterprise_id":"ERV4P7NAD","context_team_id":null,"context_enterprise_id":"ERV4P7NAD","api_app_id":"A099LACAB2R","event":{"user":"U01RMTFMALF","type":"message","ts":"1755923943.403119","client_msg_id":"5f7e2496-0daf-4b94-8021-9722b9ac597b","text":"How to get access to jenkins?","blocks":[{"type":"rich_text","block_id":"jBTYB","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"How to get access to jenkins?"}]}]}],"channel":"D09A0LFHK8R","event_ts":"1755923943.403119","channel_type":"im"},"type":"event_callback","event_id":"Ev09BB212VSB","event_time":1755923943,"authorizations":[{"enterprise_id":"ERV4P7NAD","team_id":"T010QS7UQNA","user_id":"U099R6WTZ9S","is_bot":true,"is_enterprise_install":false}],"is_ext_shared_channel":false,"event_context":"4-eyJldCI6Im1lc3NhZ2UiLCJ0aWQiOiJUMDEwUVM3VVFOQSIsImFpZCI6IkEwOTlMQUNBQjJSIiwiY2lkIjoiRDA5QTBMRkhLOFIifQ"},"type":"events_api","accepts_response_payload":false,"retry_attempt":0,"retry_reason":""})
2025-08-22 21:39:04,576 - slack_bolt.App - DEBUG - [client.py:99] - A new message enqueued (current queue size: 1)
2025-08-22 21:39:04,576 - slack_bolt.App - DEBUG - [client.py:105] - A message dequeued (current queue size: 0)
2025-08-22 21:39:04,576 - slack_bolt.App - DEBUG - [client.py:125] - Message processing started (type: events_api, envelope_id: e8b72126-ffe8-49db-bcc4-f9284052f2b1)
2025-08-22 21:39:04,577 - slack_bolt.App - DEBUG - [app.py:476] - Applying slack_bolt.middleware.ssl_check.ssl_check.SslCheck
2025-08-22 21:39:04,577 - slack_bolt.App - DEBUG - [app.py:476] - Applying slack_bolt.middleware.request_verification.request_verification.RequestVerification
2025-08-22 21:39:04,577 - slack_bolt.App - DEBUG - [app.py:476] - Applying slack_bolt.middleware.authorization.single_team_authorization.SingleTeamAuthorization
2025-08-22 21:39:04,577 - slack_bolt.App - DEBUG - [app.py:476] - Applying slack_bolt.middleware.ignoring_self_events.ignoring_self_events.IgnoringSelfEvents
2025-08-22 21:39:04,577 - slack_bolt.App - DEBUG - [app.py:476] - Applying slack_bolt.middleware.url_verification.url_verification.UrlVerification
2025-08-22 21:39:04,578 - slack_bolt.App - DEBUG - [app.py:500] - Checking listener: handle_app_mentions ...
2025-08-22 21:39:04,578 - slack_bolt.App - DEBUG - [app.py:500] - Checking listener: help_message ...
2025-08-22 21:39:04,578 - slack_bolt.App - DEBUG - [app.py:500] - Checking listener: handle_dm_messages ...
2025-08-22 21:39:04,578 - slack_bolt.App - DEBUG - [app.py:522] - Running listener: handle_dm_messages ...
2025-08-22 21:39:04,579 - __main__ - INFO - [main.py:504] - === DM MESSAGE EVENT RECEIVED ===
2025-08-22 21:39:04,579 - slack_bolt.App - DEBUG - [thread_runner.py:198] - Responding with status: 200 body: "" (0 millis)
2025-08-22 21:39:04,579 - __main__ - DEBUG - [main.py:505] - Full event body: {'token': 'yq71khZBCyJF1Ri2hG5aNqr5', 'team_id': 'T010QS7UQNA', 'enterprise_id': 'ERV4P7NAD', 'context_team_id': None, 'context_enterprise_id': 'ERV4P7NAD', 'api_app_id': 'A099LACAB2R', 'event': {'user': 'U01RMTFMALF', 'type': 'message', 'ts': '1755923943.403119', 'client_msg_id': '5f7e2496-0daf-4b94-8021-9722b9ac597b', 'text': 'How to get access to jenkins?', 'blocks': [{'type': 'rich_text', 'block_id': 'jBTYB', 'elements': [{'type': 'rich_text_section', 'elements': [{'type': 'text', 'text': 'How to get access to jenkins?'}]}]}], 'channel': 'D09A0LFHK8R', 'event_ts': '1755923943.403119', 'channel_type': 'im'}, 'type': 'event_callback', 'event_id': 'Ev09BB212VSB', 'event_time': 1755923943, 'authorizations': [{'enterprise_id': 'ERV4P7NAD', 'team_id': 'T010QS7UQNA', 'user_id': 'U099R6WTZ9S', 'is_bot': True, 'is_enterprise_install': False}], 'is_ext_shared_channel': False, 'event_context': '4-eyJldCI6Im1lc3NhZ2UiLCJ0aWQiOiJUMDEwUVM3VVFOQSIsImFpZCI6IkEwOTlMQUNBQjJSIiwiY2lkIjoiRDA5QTBMRkhLOFIifQ'}
2025-08-22 21:39:04,579 - slack_bolt.App - DEBUG - [client.py:200] - Sending a message (session id: 3f770b4f-1c8a-43f7-a519-958dceafdffa, message: {"envelope_id": "e8b72126-ffe8-49db-bcc4-f9284052f2b1"})
2025-08-22 21:39:04,580 - __main__ - INFO - [main.py:514] - DM Event details: channel=D09A0LFHK8R, user=U01RMTFMALF, ts=1755923943.403119
2025-08-22 21:39:04,580 - __main__ - DEBUG - [main.py:515] - DM Event text: How to get access to jenkins?
2025-08-22 21:39:04,580 - utils - DEBUG - [utils.py:27] - Checking message processing: channel=D09A0LFHK8R, ts=1755923943.403119, text='How to get access to jenkins?...'
2025-08-22 21:39:04,580 - utils - DEBUG - [utils.py:31] - Message hash: df312687be266a334a647143d96c34f9
2025-08-22 21:39:04,581 - utils - DEBUG - [utils.py:53] - Added message to processing cache (total entries: 1)
2025-08-22 21:39:04,581 - slack_bolt.App - DEBUG - [internals.py:41] - Response time: 4 milliseconds
2025-08-22 21:39:04,582 - __main__ - DEBUG - [main.py:528] - Bot check: bot_id=None, user_id=U01RMTFMALF
2025-08-22 21:39:04,582 - slack_bolt.App - DEBUG - [client.py:150] - Message processing completed (type: events_api, envelope_id: e8b72126-ffe8-49db-bcc4-f9284052f2b1)
2025-08-22 21:39:04,582 - __main__ - DEBUG - [main.py:533] - Question received: 'How to get access to jenkins?'
2025-08-22 21:39:04,583 - __main__ - DEBUG - [main.py:539] - Checking user access for DM...
2025-08-22 21:39:04,583 - auth.slack_user_info - DEBUG - [slack_user_info.py:48] - Fetching user info for user_id: U01RMTFMALF
2025-08-22 21:39:04,583 - slack_sdk.web.base_client - DEBUG - [base_client.py:255] - Sending a request - url: https://slack.com/api/users.info, query_params: {}, body_params: {'user': 'U01RMTFMALF', 'team_id': 'T010QS7UQNA'}, files: {}, json_body: None, headers: {'Content-Type': 'application/x-www-form-urlencoded', 'Authorization': '(redacted)', 'User-Agent': 'Python/3.12.0 slackclient/3.34.0 Darwin/23.4.0'}
2025-08-22 21:39:04,895 - slack_sdk.web.base_client - DEBUG - [base_client.py:546] - Received the following response - status: 200, headers: {'date': 'Sat, 23 Aug 2025 04:39:04 GMT', 'server': 'Apache', 'vary': 'Accept-Encoding', 'x-slack-req-id': '3444e20ef6bed187dd9b71c7d0fad645', 'x-content-type-options': 'nosniff', 'x-xss-protection': '0', 'pragma': 'no-cache', 'cache-control': 'private, no-cache, no-store, must-revalidate', 'expires': 'Sat, 26 Jul 1997 05:00:00 GMT', 'content-type': 'application/json; charset=utf-8', 'x-accepted-oauth-scopes': 'users:read', 'x-oauth-scopes': 'app_mentions:read,channels:history,chat:write,im:history,im:read,im:write,users:read,reactions:write,users:read.email', 'access-control-expose-headers': 'x-slack-req-id, retry-after', 'access-control-allow-headers': 'slack-route, x-slack-version-ts, x-b3-traceid, x-b3-spanid, x-b3-parentspanid, x-b3-sampled, x-b3-flags', 'strict-transport-security': 'max-age=31536000; includeSubDomains; preload', 'referrer-policy': 'no-referrer', 'x-slack-unique-id': 'aKlF6GeNhW2xfnECKIWYswAAABQ', 'x-slack-backend': 'r', 'access-control-allow-origin': '*', 'content-length': '2057', 'via': '1.1 slack-prod.tinyspeck.com, envoy-www-iad-mmvmrxjp,envoy-edge-pdx-izqmekoo', 'x-envoy-attempt-count': '1', 'x-envoy-upstream-service-time': '90', 'x-backend': 'main_normal main_canary_with_overflow main_control_with_overflow', 'x-server': 'slack-www-hhvm-main-iad-cdmx', 'x-slack-shared-secret-outcome': 'no-match', 'x-edge-backend': 'envoy-www', 'timing-allow-origin': '*', 'x-slack-edge-shared-secret-outcome': 'no-match', 'connection': 'close'}, body: {"ok":true,"user":{"id":"U01RMTFMALF","name":"popov8533","is_bot":false,"updated":1755907280,"is_app_user":false,"team_id":"T010QS7UQNA","deleted":false,"color":"4bbe2e","is_email_confirmed":true,"real_name":"Alexandr Popov","tz":"America\/Los_Angeles","tz_label":"Pacific Daylight Time","tz_offset":-25200,"is_admin":false,"is_owner":false,"is_primary_owner":false,"is_restricted":false,"is_ultra_restricted":false,"enterprise_user":{"id":"U01RMTFMALF","enterprise_id":"ERV4P7NAD","enterprise_name":"Paramount Global","is_admin":false,"is_owner":false,"is_primary_owner":false,"teams":["T010QS7UQNA","T02H1PQMF"]},"who_can_share_contact_card":"EVERYONE","profile":{"real_name":"Alexandr Popov","display_name":"Alex Popov","avatar_hash":"a64f82312a14","real_name_normalized":"Alexandr Popov","display_name_normalized":"Alex Popov","image_24":"https:\/\/avatars.slack-edge.com\/2023-03-29\/5033076824964_a64f82312a141123fbbf_24.png","image_32":"https:\/\/avatars.slack-edge.com\/2023-03-29\/5033076824964_a64f82312a141123fbbf_32.png","image_48":"https:\/\/avatars.slack-edge.com\/2023-03-29\/5033076824964_a64f82312a141123fbbf_48.png","image_72":"https:\/\/avatars.slack-edge.com\/2023-03-29\/5033076824964_a64f82312a141123fbbf_72.png","image_192":"https:\/\/avatars.slack-edge.com\/2023-03-29\/5033076824964_a64f82312a141123fbbf_192.png","image_512":"https:\/\/avatars.slack-edge.com\/2023-03-29\/5033076824964_a64f82312a141123fbbf_512.png","image_1024":"https:\/\/avatars.slack-edge.com\/2023-03-29\/5033076824964_a64f82312a141123fbbf_1024.png","image_original":"https:\/\/avatars.slack-edge.com\/2023-03-29\/5033076824964_a64f82312a141123fbbf_original.png","is_custom_image":true,"first_name":"Alexandr","last_name":"Popov","team":"T010QS7UQNA","email":"alexandr.popov@paramount.com","title":"Senior Software Quality Assurance Engineer","phone":"","skype":"","status_text":"","status_text_canonical":"","status_emoji":"","status_emoji_display_info":[],"status_expiration":0,"huddle_state":"default_unset","huddle_state_expiration_ts":0,"ooo_message":""}}}
2025-08-22 21:39:04,896 - auth.slack_user_info - DEBUG - [slack_user_info.py:63] - Retrieved email for user U01RMTFMALF: alexandr.popov@paramount.com
2025-08-22 21:39:04,897 - auth.email_whitelist - DEBUG - [email_whitelist.py:57] - Email access granted: alexandr.popov@paramount.com
2025-08-22 21:39:04,897 - __main__ - INFO - [main.py:118] - Access granted to user U01RMTFMALF with email alexandr.popov@paramount.com
2025-08-22 21:39:04,897 - __main__ - DEBUG - [main.py:545] - User access check passed for DM
2025-08-22 21:39:04,898 - __main__ - INFO - [main.py:547] - Processing DM question from user U01RMTFMALF: How to get access to jenkins?
2025-08-22 21:39:04,898 - __main__ - DEBUG - [main.py:550] - Starting DM processing...
2025-08-22 21:39:04,898 - __main__ - DEBUG - [main.py:553] - Checking if 'how to get access to jenkins?' is an admin command in DM
2025-08-22 21:39:04,899 - __main__ - DEBUG - [main.py:589] - Checking if DM thread is already being processed...
2025-08-22 21:39:04,899 - utils - DEBUG - [utils.py:67] - Managing thread: D09A0LFHK8R:1755923943.403119, action: add, user: U01RMTFMALF
2025-08-22 21:39:04,899 - utils - INFO - [utils.py:94] - Added thread D09A0LFHK8R:1755923943.403119 to active tracking (total: 1)
2025-08-22 21:39:04,899 - __main__ - DEBUG - [main.py:594] - DM thread management check passed
2025-08-22 21:39:04,899 - slack_sdk.web.base_client - DEBUG - [base_client.py:255] - Sending a request - url: https://slack.com/api/reactions.add, query_params: {}, body_params: {'channel': 'D09A0LFHK8R', 'name': 'thinking_face', 'timestamp': '1755923943.403119', 'team_id': 'T010QS7UQNA'}, files: {}, json_body: None, headers: {'Content-Type': 'application/x-www-form-urlencoded', 'Authorization': '(redacted)', 'User-Agent': 'Python/3.12.0 slackclient/3.34.0 Darwin/23.4.0'}
2025-08-22 21:39:05,253 - slack_sdk.web.base_client - DEBUG - [base_client.py:546] - Received the following response - status: 200, headers: {'date': 'Sat, 23 Aug 2025 04:39:05 GMT', 'server': 'Apache', 'vary': 'Accept-Encoding', 'x-slack-req-id': 'fe57e8c3cfcf1bb9670704791d0b98fd', 'x-content-type-options': 'nosniff', 'x-xss-protection': '0', 'pragma': 'no-cache', 'cache-control': 'private, no-cache, no-store, must-revalidate', 'expires': 'Sat, 26 Jul 1997 05:00:00 GMT', 'content-type': 'application/json; charset=utf-8', 'x-accepted-oauth-scopes': 'reactions:write', 'x-oauth-scopes': 'app_mentions:read,channels:history,chat:write,im:history,im:read,im:write,users:read,reactions:write,users:read.email', 'access-control-expose-headers': 'x-slack-req-id, retry-after', 'access-control-allow-headers': 'slack-route, x-slack-version-ts, x-b3-traceid, x-b3-spanid, x-b3-parentspanid, x-b3-sampled, x-b3-flags', 'strict-transport-security': 'max-age=31536000; includeSubDomains; preload', 'referrer-policy': 'no-referrer', 'x-slack-unique-id': 'aKlF6YE1IGI0y9fILabYPAAAEBE', 'x-slack-backend': 'r', 'access-control-allow-origin': '*', 'content-length': '11', 'via': '1.1 slack-prod.tinyspeck.com, envoy-www-canary-iad-kpikhyll,envoy-edge-pdx-ifjlbhoq', 'x-envoy-attempt-count': '1', 'x-envoy-upstream-service-time': '131', 'x-backend': 'main_normal main_canary_with_overflow main_control_with_overflow', 'x-server': 'slack-www-hhvm-main-iad-xkjh', 'x-slack-shared-secret-outcome': 'no-match', 'x-edge-backend': 'envoy-www', 'timing-allow-origin': '*', 'x-slack-edge-shared-secret-outcome': 'no-match', 'connection': 'close'}, body: {"ok":true}
2025-08-22 21:39:05,254 - __main__ - INFO - [main.py:611] - Processing DM question from <@U01RMTFMALF>: How to get access to jenkins?
2025-08-22 21:39:05,254 - __main__ - INFO - [main.py:615] - Sending DM request to DIG AI...
2025-08-22 21:39:05,254 - dig_connector - INFO - [dig_connector.py:134] - Generating response for query: 'How to get access to jenkins?' with 0 chunks
2025-08-22 21:39:05,254 - dig_connector - DEBUG - [dig_connector.py:138] - Formatted context length: 0
2025-08-22 21:39:05,254 - dig_connector - INFO - [dig_connector.py:141] - No context available, using direct query
2025-08-22 21:39:05,254 - dig_connector - INFO - [dig_connector.py:150] - Sending prompt to DIG platform...
2025-08-22 21:39:05,254 - dig_connector - INFO - [dig_connector.py:121] - Sending message to DIG API - URL: https://ai.digdev.cbsicloud.com/fastapi/chats/896/generate
2025-08-22 21:39:05,254 - dig_connector - DEBUG - [dig_connector.py:122] - Message payload: {'model_id': 42, 'message_text': 'How to get access to jenkins?', 'history': [{'role': 'user', 'content': 'How to get access to jenkins?'}]}
2025-08-22 21:39:13,380 - urllib3.connectionpool - DEBUG - [connectionpool.py:549] - https://ai.digdev.cbsicloud.com:443 "POST /fastapi/chats/896/generate HTTP/1.1" 200 2878
2025-08-22 21:39:13,380 - dig_connector - DEBUG - [dig_connector.py:125] - DIG API response: status=200
2025-08-22 21:39:13,380 - dig_connector - DEBUG - [dig_connector.py:129] - DIG API response data: {'message_text': 'To get access to Jenkins, follow these steps:\n\n1.  **Request Access to GitHub (Prerequisite)**:\n    *   First, you need to create a GitHub account. You can do this by clicking on a new tile that should appear on your Okta tiles. Use the same credentials as your AD login and your cbsinteractive.com email address. Join the free plan when prompted and set up 2-factor authentication using your mobile device (e.g., Okta). After setting up 2FA, sign out and sign back in to GitHub using the Okta tile to ensure changes take effect and "Paramount+" appears as Verified.\n    *   Alternatively, you can submit a request in the "#i-centralops-github" channel in Slack. Post a request like: "Hello, may I please get added to the **okta-para-github_viacomcbs**." Someone in the channel will grant you permission and inform you.\n    *   For `mqe-pplus-tests github` access, submit a Pitstop ticket using the `mqe-pplus-tests - GitHub Access` template.\n    *   Access to the Functional QA Automation Github repo is also a prerequisite.\n\n2.  **Request Jenkins Access**:\n    *   You can submit a request in the "#i-centralops-github" channel in Slack as described above.\n    *   Refer to the Confluence page titled "P+ Global - build.viacom.com (BVC) / jenkins-ui.cbs.com Access" for a guide to gain access to Jenkins.\n    *   You can also send an email to `ateeque.haque@viacomcbs.com` to start the process.\n    *   If you need access to specific Jenkins projects, such as P+ INTL Build jobs (main pipeline, PR validator, MQE jobs), specify this in your request, providing your active directory username.\n    *   If you encounter issues after following these instructions, create a request in the `#devops-support` Slack channel.\n\n3.  **VPN Access (Prerequisite)**:\n    *   Request VPN access by creating a ticket in PITStop.\n    *   To connect to the VPN, use your Paramount email/system login credentials.\n    *   Note that you might need to connect to the VPN via `connect.cbsinteractive.com/VPNFT` instead of the default value to access Jenkins.\n\n4.  **Verify Jenkins Access**:\n    *   Open `https://build.viacom.com` and log in to Jenkins using your email ID as the username and your OKTA password.\n    *   After logging in, check if you can access `https://build.viacom.com/job/gqe/`.\n\nOnce access is granted, you will be able to log in to the `build.viacom.com` Jenkins server using your AD (Network) credentials.\n\nSources:\n*   `https://paramount.atlassian.net/wiki/spaces/PLQA/pages/178426346`\n*   `https://paramount.atlassian.net/wiki/spaces/PLQA/pages/132128728`\n*   `https://paramount.atlassian.net/wiki/spaces/PLQA/pages/47714226`\n*   `https://paramount.atlassian.net/wiki/spaces/PLQA/pages/433660722`\n*   `https://paramount.atlassian.net/wiki/spaces/PLQA/pages/47713001`', 'requires_approval': False, 'execution_id': 1599}
2025-08-22 21:39:13,380 - dig_connector - INFO - [dig_connector.py:154] - Extracting response content...
2025-08-22 21:39:13,381 - dig_connector - DEBUG - [dig_connector.py:221] - Found message_text in response
2025-08-22 21:39:13,381 - dig_connector - INFO - [dig_connector.py:157] - Successfully generated response (length: 2772)
2025-08-22 21:39:13,381 - __main__ - INFO - [main.py:618] - Received DM response from DIG AI
2025-08-22 21:39:13,381 - __main__ - DEBUG - [main.py:619] - DIG AI DM response: To get access to Jenkins, follow these steps:

1.  **Request Access to GitHub (Prerequisite)**:
    *   First, you need to create a GitHub account. You can do this by clicking on a new tile that should appear on your Okta tiles. Use the same credentials as your AD login and your cbsinteractive.com email address. Join the free plan when prompted and set up 2-factor authentication using your mobile device (e.g., Okta). After setting up 2FA, sign out and sign back in to GitHub using the Okta tile to ensure changes take effect and "Paramount+" appears as Verified.
    *   Alternatively, you can submit a request in the "#i-centralops-github" channel in Slack. Post a request like: "Hello, may I please get added to the **okta-para-github_viacomcbs**." Someone in the channel will grant you permission and inform you.
    *   For `mqe-pplus-tests github` access, submit a Pitstop ticket using the `mqe-pplus-tests - GitHub Access` template.
    *   Access to the Functional QA Automation Github repo is also a prerequisite.

2.  **Request Jenkins Access**:
    *   You can submit a request in the "#i-centralops-github" channel in Slack as described above.
    *   Refer to the Confluence page titled "P+ Global - build.viacom.com (BVC) / jenkins-ui.cbs.com Access" for a guide to gain access to Jenkins.
    *   You can also send an email to `ateeque.haque@viacomcbs.com` to start the process.
    *   If you need access to specific Jenkins projects, such as P+ INTL Build jobs (main pipeline, PR validator, MQE jobs), specify this in your request, providing your active directory username.
    *   If you encounter issues after following these instructions, create a request in the `#devops-support` Slack channel.

3.  **VPN Access (Prerequisite)**:
    *   Request VPN access by creating a ticket in PITStop.
    *   To connect to the VPN, use your Paramount email/system login credentials.
    *   Note that you might need to connect to the VPN via `connect.cbsinteractive.com/VPNFT` instead of the default value to access Jenkins.

4.  **Verify Jenkins Access**:
    *   Open `https://build.viacom.com` and log in to Jenkins using your email ID as the username and your OKTA password.
    *   After logging in, check if you can access `https://build.viacom.com/job/gqe/`.

Once access is granted, you will be able to log in to the `build.viacom.com` Jenkins server using your AD (Network) credentials.

Sources:
*   `https://paramount.atlassian.net/wiki/spaces/PLQA/pages/178426346`
*   `https://paramount.atlassian.net/wiki/spaces/PLQA/pages/132128728`
*   `https://paramount.atlassian.net/wiki/spaces/PLQA/pages/47714226`
*   `https://paramount.atlassian.net/wiki/spaces/PLQA/pages/433660722`
*   `https://paramount.atlassian.net/wiki/spaces/PLQA/pages/47713001`
2025-08-22 21:39:13,383 - __main__ - DEBUG - [main.py:623] - Formatted DM response: Your Question:
> How to get access to jenkins?

Answer:

To get access to Jenkins, follow these steps:

1.  Request Access to GitHub (Prerequisite):
First, you need to create a GitHub account. You can do this by clicking on a new tile that should appear on your Okta tiles. Use the same credentials as your AD login and your cbsinteractive.com email address. Join the free plan when prompted and set up 2-factor authentication using your mobile device (e.g., Okta). After setting up 2FA, sign out and sign back in to GitHub using the Okta tile to ensure changes take effect and "Paramount+" appears as Verified.
       Alternatively, you can submit a request in the "#i-centralops-github" channel in Slack. Post a request like: "Hello, may I please get added to the okta-para-github_viacomcbs." Someone in the channel will grant you permission and inform you.
       For `mqe-pplus-tests github` access, submit a Pitstop ticket using the `mqe-pplus-tests - GitHub Access` template.
       Access to the Functional QA Automation Github repo is also a prerequisite.

2.  Request Jenkins Access:
You can submit a request in the "#i-centralops-github" channel in Slack as described above.
       Refer to the Confluence page titled "P+ Global - build.viacom.com (BVC) / jenkins-ui.cbs.com Access" for a guide to gain access to Jenkins.
       You can also send an email to `ateeque.haque@viacomcbs.com` to start the process.
       If you need access to specific Jenkins projects, such as P+ INTL Build jobs (main pipeline, PR validator, MQE jobs), specify this in your request, providing your active directory username.
       If you encounter issues after following these instructions, create a request in the `#devops-support` Slack channel.

3.  VPN Access (Prerequisite):
Request VPN access by creating a ticket in PITStop.
       To connect to the VPN, use your Paramount email/system login credentials.
       Note that you might need to connect to the VPN via `connect.cbsinteractive.com/VPNFT` instead of the default value to access Jenkins.

4.  Verify Jenkins Access:
Open `https://build.viacom.com` and log in to Jenkins using your email ID as the username and your OKTA password.
       After logging in, check if you can access `https://build.viacom.com/job/gqe/`.

Once access is granted, you will be able to log in to the `build.viacom.com` Jenkins server using your AD (Network) credentials.

Sources:
   `https://paramount.atlassian.net/wiki/spaces/PLQA/pages/178426346`
   `https://paramount.atlassian.net/wiki/spaces/PLQA/pages/132128728`
   `https://paramount.atlassian.net/wiki/spaces/PLQA/pages/47714226`
   `https://paramount.atlassian.net/wiki/spaces/PLQA/pages/433660722`
   `https://paramount.atlassian.net/wiki/spaces/PLQA/pages/47713001`

────────────────────────────────────────
📚 Sources:
1. https://paramount.atlassian.net/wiki/spaces/PLQA/pages/178426346
2. https://paramount.atlassian.net/wiki/spaces/PLQA/pages/132128728
3. https://paramount.atlassian.net/wiki/spaces/PLQA/pages/47714226
4. https://paramount.atlassian.net/wiki/spaces/PLQA/pages/433660722
5. https://paramount.atlassian.net/wiki/spaces/PLQA/pages/47713001

2025-08-22 21:39:13,383 - slack_sdk.web.base_client - DEBUG - [base_client.py:255] - Sending a request - url: https://slack.com/api/reactions.remove, query_params: {}, body_params: {'name': 'thinking_face', 'channel': 'D09A0LFHK8R', 'timestamp': '1755923943.403119', 'team_id': 'T010QS7UQNA'}, files: {}, json_body: None, headers: {'Content-Type': 'application/x-www-form-urlencoded', 'Authorization': '(redacted)', 'User-Agent': 'Python/3.12.0 slackclient/3.34.0 Darwin/23.4.0'}
2025-08-22 21:39:13,747 - slack_sdk.web.base_client - DEBUG - [base_client.py:546] - Received the following response - status: 200, headers: {'date': 'Sat, 23 Aug 2025 04:39:13 GMT', 'server': 'Apache', 'vary': 'Accept-Encoding', 'x-slack-req-id': '9f48a6f365ebb2ea14bb01ca2265b185', 'x-content-type-options': 'nosniff', 'x-xss-protection': '0', 'pragma': 'no-cache', 'cache-control': 'private, no-cache, no-store, must-revalidate', 'expires': 'Sat, 26 Jul 1997 05:00:00 GMT', 'content-type': 'application/json; charset=utf-8', 'x-accepted-oauth-scopes': 'reactions:write', 'x-oauth-scopes': 'app_mentions:read,channels:history,chat:write,im:history,im:read,im:write,users:read,reactions:write,users:read.email', 'access-control-expose-headers': 'x-slack-req-id, retry-after', 'access-control-allow-headers': 'slack-route, x-slack-version-ts, x-b3-traceid, x-b3-spanid, x-b3-parentspanid, x-b3-sampled, x-b3-flags', 'strict-transport-security': 'max-age=31536000; includeSubDomains; preload', 'referrer-policy': 'no-referrer', 'x-slack-unique-id': 'aKlF8Z92OvPSrMpNydK8VAAAEDU', 'x-slack-backend': 'r', 'access-control-allow-origin': '*', 'content-length': '11', 'via': '1.1 slack-prod.tinyspeck.com, envoy-www-iad-ypvzcons,envoy-edge-pdx-nqlcgetr', 'x-envoy-attempt-count': '1', 'x-envoy-upstream-service-time': '145', 'x-backend': 'main_normal main_canary_with_overflow main_control_with_overflow', 'x-server': 'slack-www-hhvm-main-iad-qyhr', 'x-slack-shared-secret-outcome': 'no-match', 'x-edge-backend': 'envoy-www', 'timing-allow-origin': '*', 'x-slack-edge-shared-secret-outcome': 'no-match', 'connection': 'close'}, body: {"ok":true}
2025-08-22 21:39:13,770 - slack_sdk.web.base_client - DEBUG - [base_client.py:255] - Sending a request - url: https://slack.com/api/chat.postMessage, query_params: {}, body_params: {}, files: {}, json_body: {'channel': 'D09A0LFHK8R', 'text': 'Your Question:\n> How to get access to jenkins? Answer:\n\nTo get access to Jenkins, follow these steps:\n\n1. Request Access to GitHub (Prerequisite):\nFirst, you need to create a GitHub account. You can do this by clicking on a new tile that should appear on your Okta tiles. Use the same credentials as your AD login and your cbsinteractive.com email address. Join the free plan when prompted and set up 2-factor authentication using your mobile device (e.g., Okta). After setting up 2FA, sign out and sign back in to GitHub using the Okta tile to ensure changes take effect and "Paramount+" appears as Verified. Alternatively, you can submit a request in the "#i-centralops-github" channel in Slack. Post a request like: "Hello, may I please get added to the okta-para-github_viacomcbs." Someone in the channel will grant you permission and inform you. For `mqe-pplus-tests github` access, submit a Pitstop ticket using the `mqe-pplus-tests - GitHub Access` template. Access to the Functional QA Automation Github repo is also a prerequisite. 2. Request Jenkins Access:\nYou can submit a request in the "#i-centralops-github" channel in Slack as described above. Refer to the Confluence page titled "P+ Global - build.viacom.com (BVC) / jenkins-ui.cbs.com Access" for a guide to gain access to Jenkins. You can also send an email to `ateeque.haque@viacomcbs.com` to start the process. If you need access to specific Jenkins projects, such as P+ INTL Build jobs (main pipeline, PR validator, MQE jobs), specify this in your request, providing your active directory username. If you encounter issues after following these instructions, create a request in the `#devops-support` Slack channel. 3. VPN Access (Prerequisite):\nRequest VPN access by creating a ticket in PITStop. To connect to the VPN, use your Paramount email/system login credentials. Note that you might need to connect to the VPN via `connect.cbsinteractive.com/VPNFT` instead of the default value to access Jenkins. 4. Verify Jenkins Access:\nOpen `https://build.viacom.com` and log in to Jenkins using your email ID as the username and your OKTA password. After logging in, check if you can access `https://build.viacom.com/job/gqe/`. Once access is granted, you will be able to log in to the `build.viacom.com` Jenkins server using your AD (Network) credentials.\n\n_(message continued in thread...)_', 'thread_ts': '1755923943.403119', 'team_id': 'T010QS7UQNA'}, headers: {'Content-Type': 'application/json;charset=utf-8', 'Authorization': '(redacted)', 'User-Agent': 'Python/3.12.0 slackclient/3.34.0 Darwin/23.4.0'}
2025-08-22 21:39:14,188 - slack_sdk.web.base_client - DEBUG - [base_client.py:546] - Received the following response - status: 200, headers: {'date': 'Sat, 23 Aug 2025 04:39:14 GMT', 'server': 'Apache', 'vary': 'Accept-Encoding', 'x-slack-req-id': '4a9882f95620d0cc61e7b4290ef5550c', 'x-content-type-options': 'nosniff', 'x-xss-protection': '0', 'pragma': 'no-cache', 'cache-control': 'private, no-cache, no-store, must-revalidate', 'expires': 'Sat, 26 Jul 1997 05:00:00 GMT', 'content-type': 'application/json; charset=utf-8', 'x-accepted-oauth-scopes': 'chat:write', 'x-oauth-scopes': 'app_mentions:read,channels:history,chat:write,im:history,im:read,im:write,users:read,reactions:write,users:read.email', 'access-control-expose-headers': 'x-slack-req-id, retry-after', 'access-control-allow-headers': 'slack-route, x-slack-version-ts, x-b3-traceid, x-b3-spanid, x-b3-parentspanid, x-b3-sampled, x-b3-flags', 'strict-transport-security': 'max-age=31536000; includeSubDomains; preload', 'referrer-policy': 'no-referrer', 'x-slack-unique-id': 'aKlF8oIJVAzBm4RvtqRTQwAAECg', 'x-slack-backend': 'r', 'access-control-allow-origin': '*', 'content-length': '6882', 'via': '1.1 slack-prod.tinyspeck.com, envoy-www-iad-yfvpehmf,envoy-edge-pdx-tsqahqqc', 'x-envoy-attempt-count': '1', 'x-envoy-upstream-service-time': '187', 'x-backend': 'main_normal main_canary_with_overflow main_control_with_overflow', 'x-server': 'slack-www-hhvm-main-iad-vjee', 'x-slack-shared-secret-outcome': 'no-match', 'x-edge-backend': 'envoy-www', 'timing-allow-origin': '*', 'x-slack-edge-shared-secret-outcome': 'no-match', 'connection': 'close'}, body: {"ok":true,"channel":"D09A0LFHK8R","ts":"1755923954.127349","message":{"user":"U099R6WTZ9S","type":"message","ts":"1755923954.127349","bot_id":"B099R6WTRU4","app_id":"A099LACAB2R","text":"Your Question:\n&gt; How to get access to jenkins? Answer:\n\nTo get access to Jenkins, follow these steps:\n\n1. Request Access to GitHub (Prerequisite):\nFirst, you need to create a GitHub account. You can do this by clicking on a new tile that should appear on your Okta tiles. Use the same credentials as your AD login and your <http://cbsinteractive.com|cbsinteractive.com> email address. Join the free plan when prompted and set up 2-factor authentication using your mobile device (e.g., Okta). After setting up 2FA, sign out and sign back in to GitHub using the Okta tile to ensure changes take effect and \"Paramount+\" appears as Verified. Alternatively, you can submit a request in the \"#i-centralops-github\" channel in Slack. Post a request like: \"Hello, may I please get added to the okta-para-github_viacomcbs.\" Someone in the channel will grant you permission and inform you. For `mqe-pplus-tests github` access, submit a Pitstop ticket using the `mqe-pplus-tests - GitHub Access` template. Access to the Functional QA Automation Github repo is also a prerequisite. 2. Request Jenkins Access:\nYou can submit a request in the \"#i-centralops-github\" channel in Slack as described above. Refer to the Confluence page titled \"P+ Global - <http://build.viacom.com|build.viacom.com> (BVC) / <http://jenkins-ui.cbs.com|jenkins-ui.cbs.com> Access\" for a guide to gain access to Jenkins. You can also send an email to `<mailto:ateeque.haque@viacomcbs.com|ateeque.haque@viacomcbs.com>` to start the process. If you need access to specific Jenkins projects, such as P+ INTL Build jobs (main pipeline, PR validator, MQE jobs), specify this in your request, providing your active directory username. If you encounter issues after following these instructions, create a request in the `#devops-support` Slack channel. 3. VPN Access (Prerequisite):\nRequest VPN access by creating a ticket in PITStop. To connect to the VPN, use your Paramount email/system login credentials. Note that you might need to connect to the VPN via `<http://connect.cbsinteractive.com/VPNFT|connect.cbsinteractive.com/VPNFT>` instead of the default value to access Jenkins. 4. Verify Jenkins Access:\nOpen `<https://build.viacom.com>` and log in to Jenkins using your email ID as the username and your OKTA password. After logging in, check if you can access `<https://build.viacom.com/job/gqe/>`. Once access is granted, you will be able to log in to the `<http://build.viacom.com|build.viacom.com>` Jenkins server using your AD (Network) credentials.\n\n_(message continued in thread...)_","team":"T010QS7UQNA","bot_profile":{"id":"B099R6WTRU4","app_id":"A099LACAB2R","user_id":"U099R6WTZ9S","name":"AutoBot","icons":{"image_36":"https://a.slack-edge.com/80588/img/plugins/app/bot_36.png","image_48":"https://a.slack-edge.com/80588/img/plugins/app/bot_48.png","image_72":"https://a.slack-edge.com/80588/img/plugins/app/service_72.png"},"deleted":false,"updated":1754677948,"team_id":"T010QS7UQNA"},"thread_ts":"1755923943.403119","parent_user_id":"U01RMTFMALF","blocks":[{"type":"rich_text","block_id":"1Llv","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Your Question:"}]},{"type":"rich_text_quote","elements":[{"type":"text","text":"How to get access to jenkins? Answer:"}]},{"type":"rich_text_section","elements":[{"type":"text","text":"\n\nTo get access to Jenkins, follow these steps:\n\n1. Request Access to GitHub (Prerequisite):\nFirst, you need to create a GitHub account. You can do this by clicking on a new tile that should appear on your Okta tiles. Use the same credentials as your AD login and your "},{"type":"link","url":"http://cbsinteractive.com","text":"cbsinteractive.com"},{"type":"text","text":" email address. Join the free plan when prompted and set up 2-factor authentication using your mobile device (e.g., Okta). After setting up 2FA, sign out and sign back in to GitHub using the Okta tile to ensure changes take effect and \"Paramount+\" appears as Verified. Alternatively, you can submit a request in the \"#i-centralops-github\" channel in Slack. Post a request like: \"Hello, may I please get added to the okta-para-github_viacomcbs.\" Someone in the channel will grant you permission and inform you. For "},{"type":"text","text":"mqe-pplus-tests github","style":{"code":true}},{"type":"text","text":" access, submit a Pitstop ticket using the "},{"type":"text","text":"mqe-pplus-tests - GitHub Access","style":{"code":true}},{"type":"text","text":" template. Access to the Functional QA Automation Github repo is also a prerequisite. 2. Request Jenkins Access:\nYou can submit a request in the \"#i-centralops-github\" channel in Slack as described above. Refer to the Confluence page titled \"P+ Global - "},{"type":"link","url":"http://build.viacom.com","text":"build.viacom.com"},{"type":"text","text":" (BVC) / "},{"type":"link","url":"http://jenkins-ui.cbs.com","text":"jenkins-ui.cbs.com"},{"type":"text","text":" Access\" for a guide to gain access to Jenkins. You can also send an email to "},{"type":"link","url":"mailto:ateeque.haque@viacomcbs.com","text":"ateeque.haque@viacomcbs.com","style":{"code":true}},{"type":"text","text":" to start the process. If you need access to specific Jenkins projects, such as P+ INTL Build jobs (main pipeline, PR validator, MQE jobs), specify this in your request, providing your active directory username. If you encounter issues after following these instructions, create a request in the "},{"type":"text","text":"#devops-support","style":{"code":true}},{"type":"text","text":" Slack channel. 3. VPN Access (Prerequisite):\nRequest VPN access by creating a ticket in PITStop. To connect to the VPN, use your Paramount email/system login credentials. Note that you might need to connect to the VPN via "},{"type":"link","url":"http://connect.cbsinteractive.com/VPNFT","text":"connect.cbsinteractive.com/VPNFT","style":{"code":true}},{"type":"text","text":" instead of the default value to access Jenkins. 4. Verify Jenkins Access:\nOpen "},{"type":"link","url":"https://build.viacom.com","style":{"code":true}},{"type":"text","text":" and log in to Jenkins using your email ID as the username and your OKTA password. After logging in, check if you can access "},{"type":"link","url":"https://build.viacom.com/job/gqe/","style":{"code":true}},{"type":"text","text":". Once access is granted, you will be able to log in to the "},{"type":"link","url":"http://build.viacom.com","text":"build.viacom.com","style":{"code":true}},{"type":"text","text":" Jenkins server using your AD (Network) credentials.\n\n"},{"type":"text","text":"(message continued in thread...)","style":{"italic":true}}]}]}]}}
2025-08-22 21:39:14,189 - slack_sdk.web.base_client - DEBUG - [base_client.py:255] - Sending a request - url: https://slack.com/api/chat.postMessage, query_params: {}, body_params: {}, files: {}, json_body: {'channel': 'D09A0LFHK8R', 'text': '_(part 2/2)_\n\nSources:\n   `https://paramount.atlassian.net/wiki/spaces/PLQA/pages/178426346`\n   `https://paramount.atlassian.net/wiki/spaces/PLQA/pages/132128728`\n   `https://paramount.atlassian.net/wiki/spaces/PLQA/pages/47714226`\n   `https://paramount.atlassian.net/wiki/spaces/PLQA/pages/433660722`\n   `https://paramount.atlassian.net/wiki/spaces/PLQA/pages/47713001`\n\n────────────────────────────────────────\n📚 Sources:\n1. https://paramount.atlassian.net/wiki/spaces/PLQA/pages/178426346\n2. https://paramount.atlassian.net/wiki/spaces/PLQA/pages/132128728\n3. https://paramount.atlassian.net/wiki/spaces/PLQA/pages/47714226\n4. https://paramount.atlassian.net/wiki/spaces/PLQA/pages/433660722\n5. https://paramount.atlassian.net/wiki/spaces/PLQA/pages/47713001', 'thread_ts': '1755923943.403119', 'team_id': 'T010QS7UQNA'}, headers: {'Content-Type': 'application/json;charset=utf-8', 'Authorization': '(redacted)', 'User-Agent': 'Python/3.12.0 slackclient/3.34.0 Darwin/23.4.0'}
2025-08-22 21:39:14,598 - slack_sdk.web.base_client - DEBUG - [base_client.py:546] - Received the following response - status: 200, headers: {'date': 'Sat, 23 Aug 2025 04:39:14 GMT', 'server': 'Apache', 'vary': 'Accept-Encoding', 'x-slack-req-id': 'c4baa3a07e21652f2ab1fc8dc0c33775', 'x-content-type-options': 'nosniff', 'x-xss-protection': '0', 'pragma': 'no-cache', 'cache-control': 'private, no-cache, no-store, must-revalidate', 'expires': 'Sat, 26 Jul 1997 05:00:00 GMT', 'content-type': 'application/json; charset=utf-8', 'x-accepted-oauth-scopes': 'chat:write', 'x-oauth-scopes': 'app_mentions:read,channels:history,chat:write,im:history,im:read,im:write,users:read,reactions:write,users:read.email', 'access-control-expose-headers': 'x-slack-req-id, retry-after', 'access-control-allow-headers': 'slack-route, x-slack-version-ts, x-b3-traceid, x-b3-spanid, x-b3-parentspanid, x-b3-sampled, x-b3-flags', 'strict-transport-security': 'max-age=31536000; includeSubDomains; preload', 'referrer-policy': 'no-referrer', 'x-slack-unique-id': 'aKlF8oavOs4vTYblpOcxIAAAEAA', 'x-slack-backend': 'r', 'access-control-allow-origin': '*', 'content-length': '3237', 'via': '1.1 slack-prod.tinyspeck.com, envoy-www-iad-htzxllfc,envoy-edge-pdx-ozhxuysv', 'x-envoy-attempt-count': '1', 'x-envoy-upstream-service-time': '171', 'x-backend': 'main_normal main_canary_with_overflow main_control_with_overflow', 'x-server': 'slack-www-hhvm-main-iad-ytes', 'x-slack-shared-secret-outcome': 'no-match', 'x-edge-backend': 'envoy-www', 'timing-allow-origin': '*', 'x-slack-edge-shared-secret-outcome': 'no-match', 'connection': 'close'}, body: {"ok":true,"channel":"D09A0LFHK8R","ts":"1755923954.547359","message":{"user":"U099R6WTZ9S","type":"message","ts":"1755923954.547359","bot_id":"B099R6WTRU4","app_id":"A099LACAB2R","text":"_(part 2/2)_\n\nSources:\n   `<https://paramount.atlassian.net/wiki/spaces/PLQA/pages/178426346>`\n   `<https://paramount.atlassian.net/wiki/spaces/PLQA/pages/132128728>`\n   `<https://paramount.atlassian.net/wiki/spaces/PLQA/pages/47714226>`\n   `<https://paramount.atlassian.net/wiki/spaces/PLQA/pages/433660722>`\n   `<https://paramount.atlassian.net/wiki/spaces/PLQA/pages/47713001>`\n\n────────────────────────────────────────\n:books: Sources:\n1. <https://paramount.atlassian.net/wiki/spaces/PLQA/pages/178426346>\n2. <https://paramount.atlassian.net/wiki/spaces/PLQA/pages/132128728>\n3. <https://paramount.atlassian.net/wiki/spaces/PLQA/pages/47714226>\n4. <https://paramount.atlassian.net/wiki/spaces/PLQA/pages/433660722>\n5. <https://paramount.atlassian.net/wiki/spaces/PLQA/pages/47713001>","team":"T010QS7UQNA","bot_profile":{"id":"B099R6WTRU4","app_id":"A099LACAB2R","user_id":"U099R6WTZ9S","name":"AutoBot","icons":{"image_36":"https://a.slack-edge.com/80588/img/plugins/app/bot_36.png","image_48":"https://a.slack-edge.com/80588/img/plugins/app/bot_48.png","image_72":"https://a.slack-edge.com/80588/img/plugins/app/service_72.png"},"deleted":false,"updated":1754677948,"team_id":"T010QS7UQNA"},"thread_ts":"1755923943.403119","parent_user_id":"U01RMTFMALF","blocks":[{"type":"rich_text","block_id":"vHw","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"(part 2/2)","style":{"italic":true}},{"type":"text","text":"\n\nSources:\n   "},{"type":"link","url":"https://paramount.atlassian.net/wiki/spaces/PLQA/pages/178426346","style":{"code":true}},{"type":"text","text":"\n   "},{"type":"link","url":"https://paramount.atlassian.net/wiki/spaces/PLQA/pages/132128728","style":{"code":true}},{"type":"text","text":"\n   "},{"type":"link","url":"https://paramount.atlassian.net/wiki/spaces/PLQA/pages/47714226","style":{"code":true}},{"type":"text","text":"\n   "},{"type":"link","url":"https://paramount.atlassian.net/wiki/spaces/PLQA/pages/433660722","style":{"code":true}},{"type":"text","text":"\n   "},{"type":"link","url":"https://paramount.atlassian.net/wiki/spaces/PLQA/pages/47713001","style":{"code":true}},{"type":"text","text":"\n\n────────────────────────────────────────\n"},{"type":"emoji","name":"books","unicode":"1f4da"},{"type":"text","text":" Sources:\n1. "},{"type":"link","url":"https://paramount.atlassian.net/wiki/spaces/PLQA/pages/178426346"},{"type":"text","text":"\n2. "},{"type":"link","url":"https://paramount.atlassian.net/wiki/spaces/PLQA/pages/132128728"},{"type":"text","text":"\n3. "},{"type":"link","url":"https://paramount.atlassian.net/wiki/spaces/PLQA/pages/47714226"},{"type":"text","text":"\n4. "},{"type":"link","url":"https://paramount.atlassian.net/wiki/spaces/PLQA/pages/433660722"},{"type":"text","text":"\n5. "},{"type":"link","url":"https://paramount.atlassian.net/wiki/spaces/PLQA/pages/47713001"}]}]}]}}
2025-08-22 21:39:14,599 - __main__ - DEBUG - [main.py:648] - Cleaning up DM thread tracking...
2025-08-22 21:39:14,599 - utils - DEBUG - [utils.py:67] - Managing thread: D09A0LFHK8R:1755923943.403119, action: remove, user: U01RMTFMALF
2025-08-22 21:39:14,599 - utils - INFO - [utils.py:100] - Removed thread D09A0LFHK8R:1755923943.403119 from active tracking (remaining: 0)
2025-08-22 21:39:30,140 - slack_bolt.App - DEBUG - [client.py:235] - on_message invoked: (message: {"envelope_id":"13a7ea52-0107-48a9-b0e1-77664ee6b849","payload":{"token":"yq71khZBCyJF1Ri2hG5aNqr5","team_id":"T010QS7UQNA","enterprise_id":"ERV4P7NAD","context_team_id":null,"context_enterprise_id":"ERV4P7NAD","api_app_id":"A099LACAB2R","event":{"user":"U099R6WTZ9S","type":"message","ts":"1755923954.127349","bot_id":"B099R6WTRU4","app_id":"A099LACAB2R","text":"Your Question:\n&gt; How to get access to jenkins? Answer:\n\nTo get access to Jenkins, follow these steps:\n\n1. Request Access to GitHub (Prerequisite):\nFirst, you need to create a GitHub account. You can do this by clicking on a new tile that should appear on your Okta tiles. Use the same credentials as your AD login and your <http:\/\/cbsinteractive.com|cbsinteractive.com> email address. Join the free plan when prompted and set up 2-factor authentication using your mobile device (e.g., Okta). After setting up 2FA, sign out and sign back in to GitHub using the Okta tile to ensure changes take effect and \"Paramount+\" appears as Verified. Alternatively, you can submit a request in the \"#i-centralops-github\" channel in Slack. Post a request like: \"Hello, may I please get added to the okta-para-github_viacomcbs.\" Someone in the channel will grant you permission and inform you. For `mqe-pplus-tests github` access, submit a Pitstop ticket using the `mqe-pplus-tests - GitHub Access` template. Access to the Functional QA Automation Github repo is also a prerequisite. 2. Request Jenkins Access:\nYou can submit a request in the \"#i-centralops-github\" channel in Slack as described above. Refer to the Confluence page titled \"P+ Global - <http:\/\/build.viacom.com|build.viacom.com> (BVC) \/ <http:\/\/jenkins-ui.cbs.com|jenkins-ui.cbs.com> Access\" for a guide to gain access to Jenkins. You can also send an email to `<mailto:ateeque.haque@viacomcbs.com|ateeque.haque@viacomcbs.com>` to start the process. If you need access to specific Jenkins projects, such as P+ INTL Build jobs (main pipeline, PR validator, MQE jobs), specify this in your request, providing your active directory username. If you encounter issues after following these instructions, create a request in the `#devops-support` Slack channel. 3. VPN Access (Prerequisite):\nRequest VPN access by creating a ticket in PITStop. To connect to the VPN, use your Paramount email\/system login credentials. Note that you might need to connect to the VPN via `<http:\/\/connect.cbsinteractive.com\/VPNFT|connect.cbsinteractive.com\/VPNFT>` instead of the default value to access Jenkins. 4. Verify Jenkins Access:\nOpen `<https:\/\/build.viacom.com>` and log in to Jenkins using your email ID as the username and your OKTA password. After logging in, check if you can access `<https:\/\/build.viacom.com\/job\/gqe\/>`. Once access is granted, you will be able to log in to the `<http:\/\/build.viacom.com|build.viacom.com>` Jenkins server using your AD (Network) credentials.\n\n_(message continued in thread...)_","team":"T010QS7UQNA","bot_profile":{"id":"B099R6WTRU4","deleted":false,"name":"AutoBot","updated":1754677948,"app_id":"A099LACAB2R","user_id":"U099R6WTZ9S","icons":{"image_36":"https:\/\/a.slack-edge.com\/80588\/img\/plugins\/app\/bot_36.png","image_48":"https:\/\/a.slack-edge.com\/80588\/img\/plugins\/app\/bot_48.png","image_72":"https:\/\/a.slack-edge.com\/80588\/img\/plugins\/app\/service_72.png"},"team_id":"T010QS7UQNA"},"thread_ts":"1755923943.403119","parent_user_id":"U01RMTFMALF","blocks":[{"type":"rich_text","block_id":"154","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Your Question:"}]},{"type":"rich_text_quote","elements":[{"type":"text","text":"How to get access to jenkins? Answer:"}]},{"type":"rich_text_section","elements":[{"type":"text","text":"\n\nTo get access to Jenkins, follow these steps:\n\n1. Request Access to GitHub (Prerequisite):\nFirst, you need to create a GitHub account. You can do this by clicking on a new tile that should appear on your Okta tiles. Use the same credentials as your AD login and your "},{"type":"link","url":"http:\/\/cbsinteractive.com","text":"cbsinteractive.com"},{"type":"text","text":" email address. Join the free plan when prompted and set up 2-factor authentication using your mobile device (e.g., Okta). After setting up 2FA, sign out and sign back in to GitHub using the Okta tile to ensure changes take effect and \"Paramount+\" appears as Verified. Alternatively, you can submit a request in the \"#i-centralops-github\" channel in Slack. Post a request like: \"Hello, may I please get added to the okta-para-github_viacomcbs.\" Someone in the channel will grant you permission and inform you. For "},{"type":"text","text":"mqe-pplus-tests github","style":{"code":true}},{"type":"text","text":" access, submit a Pitstop ticket using the "},{"type":"text","text":"mqe-pplus-tests - GitHub Access","style":{"code":true}},{"type":"text","text":" template. Access to the Functional QA Automation Github repo is also a prerequisite. 2. Request Jenkins Access:\nYou can submit a request in the \"#i-centralops-github\" channel in Slack as described above. Refer to the Confluence page titled \"P+ Global - "},{"type":"link","url":"http:\/\/build.viacom.com","text":"build.viacom.com"},{"type":"text","text":" (BVC) \/ "},{"type":"link","url":"http:\/\/jenkins-ui.cbs.com","text":"jenkins-ui.cbs.com"},{"type":"text","text":" Access\" for a guide to gain access to Jenkins. You can also send an email to "},{"type":"link","url":"mailto:ateeque.haque@viacomcbs.com","text":"ateeque.haque@viacomcbs.com","style":{"code":true}},{"type":"text","text":" to start the process. If you need access to specific Jenkins projects, such as P+ INTL Build jobs (main pipeline, PR validator, MQE jobs), specify this in your request, providing your active directory username. If you encounter issues after following these instructions, create a request in the "},{"type":"text","text":"#devops-support","style":{"code":true}},{"type":"text","text":" Slack channel. 3. VPN Access (Prerequisite):\nRequest VPN access by creating a ticket in PITStop. To connect to the VPN, use your Paramount email\/system login credentials. Note that you might need to connect to the VPN via "},{"type":"link","url":"http:\/\/connect.cbsinteractive.com\/VPNFT","text":"connect.cbsinteractive.com\/VPNFT","style":{"code":true}},{"type":"text","text":" instead of the default value to access Jenkins. 4. Verify Jenkins Access:\nOpen "},{"type":"link","url":"https:\/\/build.viacom.com","style":{"code":true}},{"type":"text","text":" and log in to Jenkins using your email ID as the username and your OKTA password. After logging in, check if you can access "},{"type":"link","url":"https:\/\/build.viacom.com\/job\/gqe\/","style":{"code":true}},{"type":"text","text":". Once access is granted, you will be able to log in to the "},{"type":"link","url":"http:\/\/build.viacom.com","text":"build.viacom.com","style":{"code":true}},{"type":"text","text":" Jenkins server using your AD (Network) credentials.\n\n"},{"type":"text","text":"(message continued in thread...)","style":{"italic":true}}]}]}],"channel":"D09A0LFHK8R","event_ts":"1755923954.127349","channel_type":"im"},"type":"event_callback","event_id":"Ev09BRPHM23G","event_time":1755923954,"authorizations":[{"enterprise_id":"ERV4P7NAD","team_id":"T010QS7UQNA","user_id":"U099R6WTZ9S","is_bot":true,"is_enterprise_install":false}],"is_ext_shared_channel":false,"event_context":"4-eyJldCI6Im1lc3NhZ2UiLCJ0aWQiOiJUMDEwUVM3VVFOQSIsImFpZCI6IkEwOTlMQUNBQjJSIiwiY2lkIjoiRDA5QTBMRkhLOFIifQ"},"type":"events_api","accepts_response_payload":false,"retry_attempt":0,"retry_reason":""})
2025-08-22 21:39:30,141 - slack_bolt.App - DEBUG - [client.py:99] - A new message enqueued (current queue size: 1)
2025-08-22 21:39:30,141 - slack_bolt.App - DEBUG - [client.py:105] - A message dequeued (current queue size: 0)
2025-08-22 21:39:30,141 - slack_bolt.App - DEBUG - [client.py:125] - Message processing started (type: events_api, envelope_id: 13a7ea52-0107-48a9-b0e1-77664ee6b849)
2025-08-22 21:39:30,141 - slack_bolt.App - DEBUG - [app.py:476] - Applying slack_bolt.middleware.ssl_check.ssl_check.SslCheck
2025-08-22 21:39:30,141 - slack_bolt.App - DEBUG - [app.py:476] - Applying slack_bolt.middleware.request_verification.request_verification.RequestVerification
2025-08-22 21:39:30,141 - slack_bolt.App - DEBUG - [app.py:476] - Applying slack_bolt.middleware.authorization.single_team_authorization.SingleTeamAuthorization
2025-08-22 21:39:30,141 - slack_bolt.App - DEBUG - [app.py:476] - Applying slack_bolt.middleware.ignoring_self_events.ignoring_self_events.IgnoringSelfEvents
2025-08-22 21:39:30,141 - slack_bolt.IgnoringSelfEvents - DEBUG - [ignoring_self_events.py:60] - Skipped self event: {'user': 'U099R6WTZ9S', 'type': 'message', 'ts': '1755923954.127349', 'bot_id': 'B099R6WTRU4', 'app_id': 'A099LACAB2R', 'text': 'Your Question:\n&gt; How to get access to jenkins? Answer:\n\nTo get access to Jenkins, follow these steps:\n\n1. Request Access to GitHub (Prerequisite):\nFirst, you need to create a GitHub account. You can do this by clicking on a new tile that should appear on your Okta tiles. Use the same credentials as your AD login and your <http://cbsinteractive.com|cbsinteractive.com> email address. Join the free plan when prompted and set up 2-factor authentication using your mobile device (e.g., Okta). After setting up 2FA, sign out and sign back in to GitHub using the Okta tile to ensure changes take effect and "Paramount+" appears as Verified. Alternatively, you can submit a request in the "#i-centralops-github" channel in Slack. Post a request like: "Hello, may I please get added to the okta-para-github_viacomcbs." Someone in the channel will grant you permission and inform you. For `mqe-pplus-tests github` access, submit a Pitstop ticket using the `mqe-pplus-tests - GitHub Access` template. Access to the Functional QA Automation Github repo is also a prerequisite. 2. Request Jenkins Access:\nYou can submit a request in the "#i-centralops-github" channel in Slack as described above. Refer to the Confluence page titled "P+ Global - <http://build.viacom.com|build.viacom.com> (BVC) / <http://jenkins-ui.cbs.com|jenkins-ui.cbs.com> Access" for a guide to gain access to Jenkins. You can also send an email to `<mailto:ateeque.haque@viacomcbs.com|ateeque.haque@viacomcbs.com>` to start the process. If you need access to specific Jenkins projects, such as P+ INTL Build jobs (main pipeline, PR validator, MQE jobs), specify this in your request, providing your active directory username. If you encounter issues after following these instructions, create a request in the `#devops-support` Slack channel. 3. VPN Access (Prerequisite):\nRequest VPN access by creating a ticket in PITStop. To connect to the VPN, use your Paramount email/system login credentials. Note that you might need to connect to the VPN via `<http://connect.cbsinteractive.com/VPNFT|connect.cbsinteractive.com/VPNFT>` instead of the default value to access Jenkins. 4. Verify Jenkins Access:\nOpen `<https://build.viacom.com>` and log in to Jenkins using your email ID as the username and your OKTA password. After logging in, check if you can access `<https://build.viacom.com/job/gqe/>`. Once access is granted, you will be able to log in to the `<http://build.viacom.com|build.viacom.com>` Jenkins server using your AD (Network) credentials.\n\n_(message continued in thread...)_', 'team': 'T010QS7UQNA', 'bot_profile': {'id': 'B099R6WTRU4', 'deleted': False, 'name': 'AutoBot', 'updated': 1754677948, 'app_id': 'A099LACAB2R', 'user_id': 'U099R6WTZ9S', 'icons': {'image_36': 'https://a.slack-edge.com/80588/img/plugins/app/bot_36.png', 'image_48': 'https://a.slack-edge.com/80588/img/plugins/app/bot_48.png', 'image_72': 'https://a.slack-edge.com/80588/img/plugins/app/service_72.png'}, 'team_id': 'T010QS7UQNA'}, 'thread_ts': '1755923943.403119', 'parent_user_id': 'U01RMTFMALF', 'blocks': [{'type': 'rich_text', 'block_id': '154', 'elements': [{'type': 'rich_text_section', 'elements': [{'type': 'text', 'text': 'Your Question:'}]}, {'type': 'rich_text_quote', 'elements': [{'type': 'text', 'text': 'How to get access to jenkins? Answer:'}]}, {'type': 'rich_text_section', 'elements': [{'type': 'text', 'text': '\n\nTo get access to Jenkins, follow these steps:\n\n1. Request Access to GitHub (Prerequisite):\nFirst, you need to create a GitHub account. You can do this by clicking on a new tile that should appear on your Okta tiles. Use the same credentials as your AD login and your '}, {'type': 'link', 'url': 'http://cbsinteractive.com', 'text': 'cbsinteractive.com'}, {'type': 'text', 'text': ' email address. Join the free plan when prompted and set up 2-factor authentication using your mobile device (e.g., Okta). After setting up 2FA, sign out and sign back in to GitHub using the Okta tile to ensure changes take effect and "Paramount+" appears as Verified. Alternatively, you can submit a request in the "#i-centralops-github" channel in Slack. Post a request like: "Hello, may I please get added to the okta-para-github_viacomcbs." Someone in the channel will grant you permission and inform you. For '}, {'type': 'text', 'text': 'mqe-pplus-tests github', 'style': {'code': True}}, {'type': 'text', 'text': ' access, submit a Pitstop ticket using the '}, {'type': 'text', 'text': 'mqe-pplus-tests - GitHub Access', 'style': {'code': True}}, {'type': 'text', 'text': ' template. Access to the Functional QA Automation Github repo is also a prerequisite. 2. Request Jenkins Access:\nYou can submit a request in the "#i-centralops-github" channel in Slack as described above. Refer to the Confluence page titled "P+ Global - '}, {'type': 'link', 'url': 'http://build.viacom.com', 'text': 'build.viacom.com'}, {'type': 'text', 'text': ' (BVC) / '}, {'type': 'link', 'url': 'http://jenkins-ui.cbs.com', 'text': 'jenkins-ui.cbs.com'}, {'type': 'text', 'text': ' Access" for a guide to gain access to Jenkins. You can also send an email to '}, {'type': 'link', 'url': 'mailto:ateeque.haque@viacomcbs.com', 'text': 'ateeque.haque@viacomcbs.com', 'style': {'code': True}}, {'type': 'text', 'text': ' to start the process. If you need access to specific Jenkins projects, such as P+ INTL Build jobs (main pipeline, PR validator, MQE jobs), specify this in your request, providing your active directory username. If you encounter issues after following these instructions, create a request in the '}, {'type': 'text', 'text': '#devops-support', 'style': {'code': True}}, {'type': 'text', 'text': ' Slack channel. 3. VPN Access (Prerequisite):\nRequest VPN access by creating a ticket in PITStop. To connect to the VPN, use your Paramount email/system login credentials. Note that you might need to connect to the VPN via '}, {'type': 'link', 'url': 'http://connect.cbsinteractive.com/VPNFT', 'text': 'connect.cbsinteractive.com/VPNFT', 'style': {'code': True}}, {'type': 'text', 'text': ' instead of the default value to access Jenkins. 4. Verify Jenkins Access:\nOpen '}, {'type': 'link', 'url': 'https://build.viacom.com', 'style': {'code': True}}, {'type': 'text', 'text': ' and log in to Jenkins using your email ID as the username and your OKTA password. After logging in, check if you can access '}, {'type': 'link', 'url': 'https://build.viacom.com/job/gqe/', 'style': {'code': True}}, {'type': 'text', 'text': '. Once access is granted, you will be able to log in to the '}, {'type': 'link', 'url': 'http://build.viacom.com', 'text': 'build.viacom.com', 'style': {'code': True}}, {'type': 'text', 'text': ' Jenkins server using your AD (Network) credentials.\n\n'}, {'type': 'text', 'text': '(message continued in thread...)', 'style': {'italic': True}}]}]}], 'channel': 'D09A0LFHK8R', 'event_ts': '1755923954.127349', 'channel_type': 'im'}
2025-08-22 21:39:30,141 - slack_bolt.App - DEBUG - [client.py:200] - Sending a message (session id: 3f770b4f-1c8a-43f7-a519-958dceafdffa, message: {"envelope_id": "13a7ea52-0107-48a9-b0e1-77664ee6b849"})
2025-08-22 21:39:30,142 - slack_bolt.App - DEBUG - [internals.py:41] - Response time: 0 milliseconds
2025-08-22 21:39:30,142 - slack_bolt.App - DEBUG - [client.py:150] - Message processing completed (type: events_api, envelope_id: 13a7ea52-0107-48a9-b0e1-77664ee6b849)
2025-08-22 21:39:30,484 - slack_bolt.App - DEBUG - [client.py:235] - on_message invoked: (message: {"envelope_id":"f0ba8de4-2c75-4a50-9c56-dfe5057c3d4f","payload":{"token":"yq71khZBCyJF1Ri2hG5aNqr5","team_id":"T010QS7UQNA","enterprise_id":"ERV4P7NAD","context_team_id":null,"context_enterprise_id":"ERV4P7NAD","api_app_id":"A099LACAB2R","event":{"user":"U099R6WTZ9S","type":"message","ts":"1755923954.547359","bot_id":"B099R6WTRU4","app_id":"A099LACAB2R","text":"_(part 2\/2)_\n\nSources:\n   `<https:\/\/paramount.atlassian.net\/wiki\/spaces\/PLQA\/pages\/178426346>`\n   `<https:\/\/paramount.atlassian.net\/wiki\/spaces\/PLQA\/pages\/132128728>`\n   `<https:\/\/paramount.atlassian.net\/wiki\/spaces\/PLQA\/pages\/47714226>`\n   `<https:\/\/paramount.atlassian.net\/wiki\/spaces\/PLQA\/pages\/433660722>`\n   `<https:\/\/paramount.atlassian.net\/wiki\/spaces\/PLQA\/pages\/47713001>`\n\n\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\n:books: Sources:\n1. <https:\/\/paramount.atlassian.net\/wiki\/spaces\/PLQA\/pages\/178426346>\n2. <https:\/\/paramount.atlassian.net\/wiki\/spaces\/PLQA\/pages\/132128728>\n3. <https:\/\/paramount.atlassian.net\/wiki\/spaces\/PLQA\/pages\/47714226>\n4. <https:\/\/paramount.atlassian.net\/wiki\/spaces\/PLQA\/pages\/433660722>\n5. <https:\/\/paramount.atlassian.net\/wiki\/spaces\/PLQA\/pages\/47713001>","team":"T010QS7UQNA","bot_profile":{"id":"B099R6WTRU4","deleted":false,"name":"AutoBot","updated":1754677948,"app_id":"A099LACAB2R","user_id":"U099R6WTZ9S","icons":{"image_36":"https:\/\/a.slack-edge.com\/80588\/img\/plugins\/app\/bot_36.png","image_48":"https:\/\/a.slack-edge.com\/80588\/img\/plugins\/app\/bot_48.png","image_72":"https:\/\/a.slack-edge.com\/80588\/img\/plugins\/app\/service_72.png"},"team_id":"T010QS7UQNA"},"thread_ts":"1755923943.403119","parent_user_id":"U01RMTFMALF","blocks":[{"type":"rich_text","block_id":"dUkV9","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"(part 2\/2)","style":{"italic":true}},{"type":"text","text":"\n\nSources:\n   "},{"type":"link","url":"https:\/\/paramount.atlassian.net\/wiki\/spaces\/PLQA\/pages\/178426346","style":{"code":true}},{"type":"text","text":"\n   "},{"type":"link","url":"https:\/\/paramount.atlassian.net\/wiki\/spaces\/PLQA\/pages\/132128728","style":{"code":true}},{"type":"text","text":"\n   "},{"type":"link","url":"https:\/\/paramount.atlassian.net\/wiki\/spaces\/PLQA\/pages\/47714226","style":{"code":true}},{"type":"text","text":"\n   "},{"type":"link","url":"https:\/\/paramount.atlassian.net\/wiki\/spaces\/PLQA\/pages\/433660722","style":{"code":true}},{"type":"text","text":"\n   "},{"type":"link","url":"https:\/\/paramount.atlassian.net\/wiki\/spaces\/PLQA\/pages\/47713001","style":{"code":true}},{"type":"text","text":"\n\n\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\n"},{"type":"emoji","name":"books","unicode":"1f4da"},{"type":"text","text":" Sources:\n1. "},{"type":"link","url":"https:\/\/paramount.atlassian.net\/wiki\/spaces\/PLQA\/pages\/178426346"},{"type":"text","text":"\n2. "},{"type":"link","url":"https:\/\/paramount.atlassian.net\/wiki\/spaces\/PLQA\/pages\/132128728"},{"type":"text","text":"\n3. "},{"type":"link","url":"https:\/\/paramount.atlassian.net\/wiki\/spaces\/PLQA\/pages\/47714226"},{"type":"text","text":"\n4. "},{"type":"link","url":"https:\/\/paramount.atlassian.net\/wiki\/spaces\/PLQA\/pages\/433660722"},{"type":"text","text":"\n5. "},{"type":"link","url":"https:\/\/paramount.atlassian.net\/wiki\/spaces\/PLQA\/pages\/47713001"}]}]}],"channel":"D09A0LFHK8R","event_ts":"1755923954.547359","channel_type":"im"},"type":"event_callback","event_id":"Ev09CHJ4QK8Q","event_time":1755923954,"authorizations":[{"enterprise_id":"ERV4P7NAD","team_id":"T010QS7UQNA","user_id":"U099R6WTZ9S","is_bot":true,"is_enterprise_install":false}],"is_ext_shared_channel":false,"event_context":"4-eyJldCI6Im1lc3NhZ2UiLCJ0aWQiOiJUMDEwUVM3VVFOQSIsImFpZCI6IkEwOTlMQUNBQjJSIiwiY2lkIjoiRDA5QTBMRkhLOFIifQ"},"type":"events_api","accepts_response_payload":false,"retry_attempt":0,"retry_reason":""})
2025-08-22 21:39:30,485 - slack_bolt.App - DEBUG - [client.py:99] - A new message enqueued (current queue size: 1)
2025-08-22 21:39:30,485 - slack_bolt.App - DEBUG - [client.py:105] - A message dequeued (current queue size: 0)
2025-08-22 21:39:30,486 - slack_bolt.App - DEBUG - [client.py:125] - Message processing started (type: events_api, envelope_id: f0ba8de4-2c75-4a50-9c56-dfe5057c3d4f)
2025-08-22 21:39:30,486 - slack_bolt.App - DEBUG - [app.py:476] - Applying slack_bolt.middleware.ssl_check.ssl_check.SslCheck
2025-08-22 21:39:30,486 - slack_bolt.App - DEBUG - [app.py:476] - Applying slack_bolt.middleware.request_verification.request_verification.RequestVerification
2025-08-22 21:39:30,486 - slack_bolt.App - DEBUG - [app.py:476] - Applying slack_bolt.middleware.authorization.single_team_authorization.SingleTeamAuthorization
2025-08-22 21:39:30,486 - slack_bolt.App - DEBUG - [app.py:476] - Applying slack_bolt.middleware.ignoring_self_events.ignoring_self_events.IgnoringSelfEvents
2025-08-22 21:39:30,487 - slack_bolt.IgnoringSelfEvents - DEBUG - [ignoring_self_events.py:60] - Skipped self event: {'user': 'U099R6WTZ9S', 'type': 'message', 'ts': '1755923954.547359', 'bot_id': 'B099R6WTRU4', 'app_id': 'A099LACAB2R', 'text': '_(part 2/2)_\n\nSources:\n   `<https://paramount.atlassian.net/wiki/spaces/PLQA/pages/178426346>`\n   `<https://paramount.atlassian.net/wiki/spaces/PLQA/pages/132128728>`\n   `<https://paramount.atlassian.net/wiki/spaces/PLQA/pages/47714226>`\n   `<https://paramount.atlassian.net/wiki/spaces/PLQA/pages/433660722>`\n   `<https://paramount.atlassian.net/wiki/spaces/PLQA/pages/47713001>`\n\n────────────────────────────────────────\n:books: Sources:\n1. <https://paramount.atlassian.net/wiki/spaces/PLQA/pages/178426346>\n2. <https://paramount.atlassian.net/wiki/spaces/PLQA/pages/132128728>\n3. <https://paramount.atlassian.net/wiki/spaces/PLQA/pages/47714226>\n4. <https://paramount.atlassian.net/wiki/spaces/PLQA/pages/433660722>\n5. <https://paramount.atlassian.net/wiki/spaces/PLQA/pages/47713001>', 'team': 'T010QS7UQNA', 'bot_profile': {'id': 'B099R6WTRU4', 'deleted': False, 'name': 'AutoBot', 'updated': 1754677948, 'app_id': 'A099LACAB2R', 'user_id': 'U099R6WTZ9S', 'icons': {'image_36': 'https://a.slack-edge.com/80588/img/plugins/app/bot_36.png', 'image_48': 'https://a.slack-edge.com/80588/img/plugins/app/bot_48.png', 'image_72': 'https://a.slack-edge.com/80588/img/plugins/app/service_72.png'}, 'team_id': 'T010QS7UQNA'}, 'thread_ts': '1755923943.403119', 'parent_user_id': 'U01RMTFMALF', 'blocks': [{'type': 'rich_text', 'block_id': 'dUkV9', 'elements': [{'type': 'rich_text_section', 'elements': [{'type': 'text', 'text': '(part 2/2)', 'style': {'italic': True}}, {'type': 'text', 'text': '\n\nSources:\n   '}, {'type': 'link', 'url': 'https://paramount.atlassian.net/wiki/spaces/PLQA/pages/178426346', 'style': {'code': True}}, {'type': 'text', 'text': '\n   '}, {'type': 'link', 'url': 'https://paramount.atlassian.net/wiki/spaces/PLQA/pages/132128728', 'style': {'code': True}}, {'type': 'text', 'text': '\n   '}, {'type': 'link', 'url': 'https://paramount.atlassian.net/wiki/spaces/PLQA/pages/47714226', 'style': {'code': True}}, {'type': 'text', 'text': '\n   '}, {'type': 'link', 'url': 'https://paramount.atlassian.net/wiki/spaces/PLQA/pages/433660722', 'style': {'code': True}}, {'type': 'text', 'text': '\n   '}, {'type': 'link', 'url': 'https://paramount.atlassian.net/wiki/spaces/PLQA/pages/47713001', 'style': {'code': True}}, {'type': 'text', 'text': '\n\n────────────────────────────────────────\n'}, {'type': 'emoji', 'name': 'books', 'unicode': '1f4da'}, {'type': 'text', 'text': ' Sources:\n1. '}, {'type': 'link', 'url': 'https://paramount.atlassian.net/wiki/spaces/PLQA/pages/178426346'}, {'type': 'text', 'text': '\n2. '}, {'type': 'link', 'url': 'https://paramount.atlassian.net/wiki/spaces/PLQA/pages/132128728'}, {'type': 'text', 'text': '\n3. '}, {'type': 'link', 'url': 'https://paramount.atlassian.net/wiki/spaces/PLQA/pages/47714226'}, {'type': 'text', 'text': '\n4. '}, {'type': 'link', 'url': 'https://paramount.atlassian.net/wiki/spaces/PLQA/pages/433660722'}, {'type': 'text', 'text': '\n5. '}, {'type': 'link', 'url': 'https://paramount.atlassian.net/wiki/spaces/PLQA/pages/47713001'}]}]}], 'channel': 'D09A0LFHK8R', 'event_ts': '1755923954.547359', 'channel_type': 'im'}
2025-08-22 21:39:30,487 - slack_bolt.App - DEBUG - [client.py:200] - Sending a message (session id: 3f770b4f-1c8a-43f7-a519-958dceafdffa, message: {"envelope_id": "f0ba8de4-2c75-4a50-9c56-dfe5057c3d4f"})
2025-08-22 21:39:30,487 - slack_bolt.App - DEBUG - [internals.py:41] - Response time: 1 milliseconds
2025-08-22 21:39:30,488 - slack_bolt.App - DEBUG - [client.py:150] - Message processing completed (type: events_api, envelope_id: f0ba8de4-2c75-4a50-9c56-dfe5057c3d4f)
2025-08-22 21:39:33,823 - slack_bolt.App - DEBUG - [client.py:235] - on_message invoked: (message: {"envelope_id":"74fc28ab-919c-49ef-b11b-4f96391387d3","payload":{"token":"yq71khZBCyJF1Ri2hG5aNqr5","team_id":"T010QS7UQNA","enterprise_id":"ERV4P7NAD","context_team_id":null,"context_enterprise_id":"ERV4P7NAD","api_app_id":"A099LACAB2R","event":{"user":"U099R6WTZ9S","type":"message","ts":"1755923954.127349","bot_id":"B099R6WTRU4","app_id":"A099LACAB2R","text":"Your Question:\n&gt; How to get access to jenkins? Answer:\n\nTo get access to Jenkins, follow these steps:\n\n1. Request Access to GitHub (Prerequisite):\nFirst, you need to create a GitHub account. You can do this by clicking on a new tile that should appear on your Okta tiles. Use the same credentials as your AD login and your <http:\/\/cbsinteractive.com|cbsinteractive.com> email address. Join the free plan when prompted and set up 2-factor authentication using your mobile device (e.g., Okta). After setting up 2FA, sign out and sign back in to GitHub using the Okta tile to ensure changes take effect and \"Paramount+\" appears as Verified. Alternatively, you can submit a request in the \"#i-centralops-github\" channel in Slack. Post a request like: \"Hello, may I please get added to the okta-para-github_viacomcbs.\" Someone in the channel will grant you permission and inform you. For `mqe-pplus-tests github` access, submit a Pitstop ticket using the `mqe-pplus-tests - GitHub Access` template. Access to the Functional QA Automation Github repo is also a prerequisite. 2. Request Jenkins Access:\nYou can submit a request in the \"#i-centralops-github\" channel in Slack as described above. Refer to the Confluence page titled \"P+ Global - <http:\/\/build.viacom.com|build.viacom.com> (BVC) \/ <http:\/\/jenkins-ui.cbs.com|jenkins-ui.cbs.com> Access\" for a guide to gain access to Jenkins. You can also send an email to `<mailto:ateeque.haque@viacomcbs.com|ateeque.haque@viacomcbs.com>` to start the process. If you need access to specific Jenkins projects, such as P+ INTL Build jobs (main pipeline, PR validator, MQE jobs), specify this in your request, providing your active directory username. If you encounter issues after following these instructions, create a request in the `#devops-support` Slack channel. 3. VPN Access (Prerequisite):\nRequest VPN access by creating a ticket in PITStop. To connect to the VPN, use your Paramount email\/system login credentials. Note that you might need to connect to the VPN via `<http:\/\/connect.cbsinteractive.com\/VPNFT|connect.cbsinteractive.com\/VPNFT>` instead of the default value to access Jenkins. 4. Verify Jenkins Access:\nOpen `<https:\/\/build.viacom.com>` and log in to Jenkins using your email ID as the username and your OKTA password. After logging in, check if you can access `<https:\/\/build.viacom.com\/job\/gqe\/>`. Once access is granted, you will be able to log in to the `<http:\/\/build.viacom.com|build.viacom.com>` Jenkins server using your AD (Network) credentials.\n\n_(message continued in thread...)_","team":"T010QS7UQNA","bot_profile":{"id":"B099R6WTRU4","deleted":false,"name":"AutoBot","updated":1754677948,"app_id":"A099LACAB2R","user_id":"U099R6WTZ9S","icons":{"image_36":"https:\/\/a.slack-edge.com\/80588\/img\/plugins\/app\/bot_36.png","image_48":"https:\/\/a.slack-edge.com\/80588\/img\/plugins\/app\/bot_48.png","image_72":"https:\/\/a.slack-edge.com\/80588\/img\/plugins\/app\/service_72.png"},"team_id":"T010QS7UQNA"},"thread_ts":"1755923943.403119","parent_user_id":"U01RMTFMALF","blocks":[{"type":"rich_text","block_id":"154","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Your Question:"}]},{"type":"rich_text_quote","elements":[{"type":"text","text":"How to get access to jenkins? Answer:"}]},{"type":"rich_text_section","elements":[{"type":"text","text":"\n\nTo get access to Jenkins, follow these steps:\n\n1. Request Access to GitHub (Prerequisite):\nFirst, you need to create a GitHub account. You can do this by clicking on a new tile that should appear on your Okta tiles. Use the same credentials as your AD login and your "},{"type":"link","url":"http:\/\/cbsinteractive.com","text":"cbsinteractive.com"},{"type":"text","text":" email address. Join the free plan when prompted and set up 2-factor authentication using your mobile device (e.g., Okta). After setting up 2FA, sign out and sign back in to GitHub using the Okta tile to ensure changes take effect and \"Paramount+\" appears as Verified. Alternatively, you can submit a request in the \"#i-centralops-github\" channel in Slack. Post a request like: \"Hello, may I please get added to the okta-para-github_viacomcbs.\" Someone in the channel will grant you permission and inform you. For "},{"type":"text","text":"mqe-pplus-tests github","style":{"code":true}},{"type":"text","text":" access, submit a Pitstop ticket using the "},{"type":"text","text":"mqe-pplus-tests - GitHub Access","style":{"code":true}},{"type":"text","text":" template. Access to the Functional QA Automation Github repo is also a prerequisite. 2. Request Jenkins Access:\nYou can submit a request in the \"#i-centralops-github\" channel in Slack as described above. Refer to the Confluence page titled \"P+ Global - "},{"type":"link","url":"http:\/\/build.viacom.com","text":"build.viacom.com"},{"type":"text","text":" (BVC) \/ "},{"type":"link","url":"http:\/\/jenkins-ui.cbs.com","text":"jenkins-ui.cbs.com"},{"type":"text","text":" Access\" for a guide to gain access to Jenkins. You can also send an email to "},{"type":"link","url":"mailto:ateeque.haque@viacomcbs.com","text":"ateeque.haque@viacomcbs.com","style":{"code":true}},{"type":"text","text":" to start the process. If you need access to specific Jenkins projects, such as P+ INTL Build jobs (main pipeline, PR validator, MQE jobs), specify this in your request, providing your active directory username. If you encounter issues after following these instructions, create a request in the "},{"type":"text","text":"#devops-support","style":{"code":true}},{"type":"text","text":" Slack channel. 3. VPN Access (Prerequisite):\nRequest VPN access by creating a ticket in PITStop. To connect to the VPN, use your Paramount email\/system login credentials. Note that you might need to connect to the VPN via "},{"type":"link","url":"http:\/\/connect.cbsinteractive.com\/VPNFT","text":"connect.cbsinteractive.com\/VPNFT","style":{"code":true}},{"type":"text","text":" instead of the default value to access Jenkins. 4. Verify Jenkins Access:\nOpen "},{"type":"link","url":"https:\/\/build.viacom.com","style":{"code":true}},{"type":"text","text":" and log in to Jenkins using your email ID as the username and your OKTA password. After logging in, check if you can access "},{"type":"link","url":"https:\/\/build.viacom.com\/job\/gqe\/","style":{"code":true}},{"type":"text","text":". Once access is granted, you will be able to log in to the "},{"type":"link","url":"http:\/\/build.viacom.com","text":"build.viacom.com","style":{"code":true}},{"type":"text","text":" Jenkins server using your AD (Network) credentials.\n\n"},{"type":"text","text":"(message continued in thread...)","style":{"italic":true}}]}]}],"channel":"D09A0LFHK8R","event_ts":"1755923954.127349","channel_type":"im"},"type":"event_callback","event_id":"Ev09BRPHM23G","event_time":1755923954,"authorizations":[{"enterprise_id":"ERV4P7NAD","team_id":"T010QS7UQNA","user_id":"U099R6WTZ9S","is_bot":true,"is_enterprise_install":false}],"is_ext_shared_channel":false,"event_context":"4-eyJldCI6Im1lc3NhZ2UiLCJ0aWQiOiJUMDEwUVM3VVFOQSIsImFpZCI6IkEwOTlMQUNBQjJSIiwiY2lkIjoiRDA5QTBMRkhLOFIifQ"},"type":"events_api","accepts_response_payload":false,"retry_attempt":1,"retry_reason":"timeout"})
2025-08-22 21:39:33,824 - slack_bolt.App - DEBUG - [client.py:99] - A new message enqueued (current queue size: 1)
2025-08-22 21:39:33,824 - slack_bolt.App - DEBUG - [client.py:105] - A message dequeued (current queue size: 0)
2025-08-22 21:39:33,824 - slack_bolt.App - DEBUG - [client.py:125] - Message processing started (type: events_api, envelope_id: 74fc28ab-919c-49ef-b11b-4f96391387d3)
2025-08-22 21:39:33,825 - slack_bolt.App - DEBUG - [app.py:476] - Applying slack_bolt.middleware.ssl_check.ssl_check.SslCheck
2025-08-22 21:39:33,825 - slack_bolt.App - DEBUG - [app.py:476] - Applying slack_bolt.middleware.request_verification.request_verification.RequestVerification
2025-08-22 21:39:33,825 - slack_bolt.App - DEBUG - [app.py:476] - Applying slack_bolt.middleware.authorization.single_team_authorization.SingleTeamAuthorization
2025-08-22 21:39:33,825 - slack_bolt.App - DEBUG - [app.py:476] - Applying slack_bolt.middleware.ignoring_self_events.ignoring_self_events.IgnoringSelfEvents
2025-08-22 21:39:33,825 - slack_bolt.IgnoringSelfEvents - DEBUG - [ignoring_self_events.py:60] - Skipped self event: {'user': 'U099R6WTZ9S', 'type': 'message', 'ts': '1755923954.127349', 'bot_id': 'B099R6WTRU4', 'app_id': 'A099LACAB2R', 'text': 'Your Question:\n&gt; How to get access to jenkins? Answer:\n\nTo get access to Jenkins, follow these steps:\n\n1. Request Access to GitHub (Prerequisite):\nFirst, you need to create a GitHub account. You can do this by clicking on a new tile that should appear on your Okta tiles. Use the same credentials as your AD login and your <http://cbsinteractive.com|cbsinteractive.com> email address. Join the free plan when prompted and set up 2-factor authentication using your mobile device (e.g., Okta). After setting up 2FA, sign out and sign back in to GitHub using the Okta tile to ensure changes take effect and "Paramount+" appears as Verified. Alternatively, you can submit a request in the "#i-centralops-github" channel in Slack. Post a request like: "Hello, may I please get added to the okta-para-github_viacomcbs." Someone in the channel will grant you permission and inform you. For `mqe-pplus-tests github` access, submit a Pitstop ticket using the `mqe-pplus-tests - GitHub Access` template. Access to the Functional QA Automation Github repo is also a prerequisite. 2. Request Jenkins Access:\nYou can submit a request in the "#i-centralops-github" channel in Slack as described above. Refer to the Confluence page titled "P+ Global - <http://build.viacom.com|build.viacom.com> (BVC) / <http://jenkins-ui.cbs.com|jenkins-ui.cbs.com> Access" for a guide to gain access to Jenkins. You can also send an email to `<mailto:ateeque.haque@viacomcbs.com|ateeque.haque@viacomcbs.com>` to start the process. If you need access to specific Jenkins projects, such as P+ INTL Build jobs (main pipeline, PR validator, MQE jobs), specify this in your request, providing your active directory username. If you encounter issues after following these instructions, create a request in the `#devops-support` Slack channel. 3. VPN Access (Prerequisite):\nRequest VPN access by creating a ticket in PITStop. To connect to the VPN, use your Paramount email/system login credentials. Note that you might need to connect to the VPN via `<http://connect.cbsinteractive.com/VPNFT|connect.cbsinteractive.com/VPNFT>` instead of the default value to access Jenkins. 4. Verify Jenkins Access:\nOpen `<https://build.viacom.com>` and log in to Jenkins using your email ID as the username and your OKTA password. After logging in, check if you can access `<https://build.viacom.com/job/gqe/>`. Once access is granted, you will be able to log in to the `<http://build.viacom.com|build.viacom.com>` Jenkins server using your AD (Network) credentials.\n\n_(message continued in thread...)_', 'team': 'T010QS7UQNA', 'bot_profile': {'id': 'B099R6WTRU4', 'deleted': False, 'name': 'AutoBot', 'updated': 1754677948, 'app_id': 'A099LACAB2R', 'user_id': 'U099R6WTZ9S', 'icons': {'image_36': 'https://a.slack-edge.com/80588/img/plugins/app/bot_36.png', 'image_48': 'https://a.slack-edge.com/80588/img/plugins/app/bot_48.png', 'image_72': 'https://a.slack-edge.com/80588/img/plugins/app/service_72.png'}, 'team_id': 'T010QS7UQNA'}, 'thread_ts': '1755923943.403119', 'parent_user_id': 'U01RMTFMALF', 'blocks': [{'type': 'rich_text', 'block_id': '154', 'elements': [{'type': 'rich_text_section', 'elements': [{'type': 'text', 'text': 'Your Question:'}]}, {'type': 'rich_text_quote', 'elements': [{'type': 'text', 'text': 'How to get access to jenkins? Answer:'}]}, {'type': 'rich_text_section', 'elements': [{'type': 'text', 'text': '\n\nTo get access to Jenkins, follow these steps:\n\n1. Request Access to GitHub (Prerequisite):\nFirst, you need to create a GitHub account. You can do this by clicking on a new tile that should appear on your Okta tiles. Use the same credentials as your AD login and your '}, {'type': 'link', 'url': 'http://cbsinteractive.com', 'text': 'cbsinteractive.com'}, {'type': 'text', 'text': ' email address. Join the free plan when prompted and set up 2-factor authentication using your mobile device (e.g., Okta). After setting up 2FA, sign out and sign back in to GitHub using the Okta tile to ensure changes take effect and "Paramount+" appears as Verified. Alternatively, you can submit a request in the "#i-centralops-github" channel in Slack. Post a request like: "Hello, may I please get added to the okta-para-github_viacomcbs." Someone in the channel will grant you permission and inform you. For '}, {'type': 'text', 'text': 'mqe-pplus-tests github', 'style': {'code': True}}, {'type': 'text', 'text': ' access, submit a Pitstop ticket using the '}, {'type': 'text', 'text': 'mqe-pplus-tests - GitHub Access', 'style': {'code': True}}, {'type': 'text', 'text': ' template. Access to the Functional QA Automation Github repo is also a prerequisite. 2. Request Jenkins Access:\nYou can submit a request in the "#i-centralops-github" channel in Slack as described above. Refer to the Confluence page titled "P+ Global - '}, {'type': 'link', 'url': 'http://build.viacom.com', 'text': 'build.viacom.com'}, {'type': 'text', 'text': ' (BVC) / '}, {'type': 'link', 'url': 'http://jenkins-ui.cbs.com', 'text': 'jenkins-ui.cbs.com'}, {'type': 'text', 'text': ' Access" for a guide to gain access to Jenkins. You can also send an email to '}, {'type': 'link', 'url': 'mailto:ateeque.haque@viacomcbs.com', 'text': 'ateeque.haque@viacomcbs.com', 'style': {'code': True}}, {'type': 'text', 'text': ' to start the process. If you need access to specific Jenkins projects, such as P+ INTL Build jobs (main pipeline, PR validator, MQE jobs), specify this in your request, providing your active directory username. If you encounter issues after following these instructions, create a request in the '}, {'type': 'text', 'text': '#devops-support', 'style': {'code': True}}, {'type': 'text', 'text': ' Slack channel. 3. VPN Access (Prerequisite):\nRequest VPN access by creating a ticket in PITStop. To connect to the VPN, use your Paramount email/system login credentials. Note that you might need to connect to the VPN via '}, {'type': 'link', 'url': 'http://connect.cbsinteractive.com/VPNFT', 'text': 'connect.cbsinteractive.com/VPNFT', 'style': {'code': True}}, {'type': 'text', 'text': ' instead of the default value to access Jenkins. 4. Verify Jenkins Access:\nOpen '}, {'type': 'link', 'url': 'https://build.viacom.com', 'style': {'code': True}}, {'type': 'text', 'text': ' and log in to Jenkins using your email ID as the username and your OKTA password. After logging in, check if you can access '}, {'type': 'link', 'url': 'https://build.viacom.com/job/gqe/', 'style': {'code': True}}, {'type': 'text', 'text': '. Once access is granted, you will be able to log in to the '}, {'type': 'link', 'url': 'http://build.viacom.com', 'text': 'build.viacom.com', 'style': {'code': True}}, {'type': 'text', 'text': ' Jenkins server using your AD (Network) credentials.\n\n'}, {'type': 'text', 'text': '(message continued in thread...)', 'style': {'italic': True}}]}]}], 'channel': 'D09A0LFHK8R', 'event_ts': '1755923954.127349', 'channel_type': 'im'}
2025-08-22 21:39:33,825 - slack_bolt.App - DEBUG - [client.py:200] - Sending a message (session id: 3f770b4f-1c8a-43f7-a519-958dceafdffa, message: {"envelope_id": "74fc28ab-919c-49ef-b11b-4f96391387d3"})
2025-08-22 21:39:33,826 - slack_bolt.App - DEBUG - [internals.py:41] - Response time: 1 milliseconds
2025-08-22 21:39:33,826 - slack_bolt.App - DEBUG - [client.py:150] - Message processing completed (type: events_api, envelope_id: 74fc28ab-919c-49ef-b11b-4f96391387d3)
2025-08-22 21:39:34,031 - slack_bolt.App - DEBUG - [client.py:235] - on_message invoked: (message: {"envelope_id":"aa503f14-ddb9-4efd-8976-63dacc8a9449","payload":{"token":"yq71khZBCyJF1Ri2hG5aNqr5","team_id":"T010QS7UQNA","enterprise_id":"ERV4P7NAD","context_team_id":null,"context_enterprise_id":"ERV4P7NAD","api_app_id":"A099LACAB2R","event":{"user":"U099R6WTZ9S","type":"message","ts":"1755923954.547359","bot_id":"B099R6WTRU4","app_id":"A099LACAB2R","text":"_(part 2\/2)_\n\nSources:\n   `<https:\/\/paramount.atlassian.net\/wiki\/spaces\/PLQA\/pages\/178426346>`\n   `<https:\/\/paramount.atlassian.net\/wiki\/spaces\/PLQA\/pages\/132128728>`\n   `<https:\/\/paramount.atlassian.net\/wiki\/spaces\/PLQA\/pages\/47714226>`\n   `<https:\/\/paramount.atlassian.net\/wiki\/spaces\/PLQA\/pages\/433660722>`\n   `<https:\/\/paramount.atlassian.net\/wiki\/spaces\/PLQA\/pages\/47713001>`\n\n\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\n:books: Sources:\n1. <https:\/\/paramount.atlassian.net\/wiki\/spaces\/PLQA\/pages\/178426346>\n2. <https:\/\/paramount.atlassian.net\/wiki\/spaces\/PLQA\/pages\/132128728>\n3. <https:\/\/paramount.atlassian.net\/wiki\/spaces\/PLQA\/pages\/47714226>\n4. <https:\/\/paramount.atlassian.net\/wiki\/spaces\/PLQA\/pages\/433660722>\n5. <https:\/\/paramount.atlassian.net\/wiki\/spaces\/PLQA\/pages\/47713001>","team":"T010QS7UQNA","bot_profile":{"id":"B099R6WTRU4","deleted":false,"name":"AutoBot","updated":1754677948,"app_id":"A099LACAB2R","user_id":"U099R6WTZ9S","icons":{"image_36":"https:\/\/a.slack-edge.com\/80588\/img\/plugins\/app\/bot_36.png","image_48":"https:\/\/a.slack-edge.com\/80588\/img\/plugins\/app\/bot_48.png","image_72":"https:\/\/a.slack-edge.com\/80588\/img\/plugins\/app\/service_72.png"},"team_id":"T010QS7UQNA"},"thread_ts":"1755923943.403119","parent_user_id":"U01RMTFMALF","blocks":[{"type":"rich_text","block_id":"dUkV9","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"(part 2\/2)","style":{"italic":true}},{"type":"text","text":"\n\nSources:\n   "},{"type":"link","url":"https:\/\/paramount.atlassian.net\/wiki\/spaces\/PLQA\/pages\/178426346","style":{"code":true}},{"type":"text","text":"\n   "},{"type":"link","url":"https:\/\/paramount.atlassian.net\/wiki\/spaces\/PLQA\/pages\/132128728","style":{"code":true}},{"type":"text","text":"\n   "},{"type":"link","url":"https:\/\/paramount.atlassian.net\/wiki\/spaces\/PLQA\/pages\/47714226","style":{"code":true}},{"type":"text","text":"\n   "},{"type":"link","url":"https:\/\/paramount.atlassian.net\/wiki\/spaces\/PLQA\/pages\/433660722","style":{"code":true}},{"type":"text","text":"\n   "},{"type":"link","url":"https:\/\/paramount.atlassian.net\/wiki\/spaces\/PLQA\/pages\/47713001","style":{"code":true}},{"type":"text","text":"\n\n\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\n"},{"type":"emoji","name":"books","unicode":"1f4da"},{"type":"text","text":" Sources:\n1. "},{"type":"link","url":"https:\/\/paramount.atlassian.net\/wiki\/spaces\/PLQA\/pages\/178426346"},{"type":"text","text":"\n2. "},{"type":"link","url":"https:\/\/paramount.atlassian.net\/wiki\/spaces\/PLQA\/pages\/132128728"},{"type":"text","text":"\n3. "},{"type":"link","url":"https:\/\/paramount.atlassian.net\/wiki\/spaces\/PLQA\/pages\/47714226"},{"type":"text","text":"\n4. "},{"type":"link","url":"https:\/\/paramount.atlassian.net\/wiki\/spaces\/PLQA\/pages\/433660722"},{"type":"text","text":"\n5. "},{"type":"link","url":"https:\/\/paramount.atlassian.net\/wiki\/spaces\/PLQA\/pages\/47713001"}]}]}],"channel":"D09A0LFHK8R","event_ts":"1755923954.547359","channel_type":"im"},"type":"event_callback","event_id":"Ev09CHJ4QK8Q","event_time":1755923954,"authorizations":[{"enterprise_id":"ERV4P7NAD","team_id":"T010QS7UQNA","user_id":"U099R6WTZ9S","is_bot":true,"is_enterprise_install":false}],"is_ext_shared_channel":false,"event_context":"4-eyJldCI6Im1lc3NhZ2UiLCJ0aWQiOiJUMDEwUVM3VVFOQSIsImFpZCI6IkEwOTlMQUNBQjJSIiwiY2lkIjoiRDA5QTBMRkhLOFIifQ"},"type":"events_api","accepts_response_payload":false,"retry_attempt":1,"retry_reason":"timeout"})
2025-08-22 21:39:34,032 - slack_bolt.App - DEBUG - [client.py:99] - A new message enqueued (current queue size: 1)
2025-08-22 21:39:34,032 - slack_bolt.App - DEBUG - [client.py:105] - A message dequeued (current queue size: 0)
2025-08-22 21:39:34,032 - slack_bolt.App - DEBUG - [client.py:125] - Message processing started (type: events_api, envelope_id: aa503f14-ddb9-4efd-8976-63dacc8a9449)
2025-08-22 21:39:34,033 - slack_bolt.App - DEBUG - [app.py:476] - Applying slack_bolt.middleware.ssl_check.ssl_check.SslCheck
2025-08-22 21:39:34,033 - slack_bolt.App - DEBUG - [app.py:476] - Applying slack_bolt.middleware.request_verification.request_verification.RequestVerification
2025-08-22 21:39:34,033 - slack_bolt.App - DEBUG - [app.py:476] - Applying slack_bolt.middleware.authorization.single_team_authorization.SingleTeamAuthorization
2025-08-22 21:39:34,033 - slack_bolt.App - DEBUG - [app.py:476] - Applying slack_bolt.middleware.ignoring_self_events.ignoring_self_events.IgnoringSelfEvents
2025-08-22 21:39:34,033 - slack_bolt.IgnoringSelfEvents - DEBUG - [ignoring_self_events.py:60] - Skipped self event: {'user': 'U099R6WTZ9S', 'type': 'message', 'ts': '1755923954.547359', 'bot_id': 'B099R6WTRU4', 'app_id': 'A099LACAB2R', 'text': '_(part 2/2)_\n\nSources:\n   `<https://paramount.atlassian.net/wiki/spaces/PLQA/pages/178426346>`\n   `<https://paramount.atlassian.net/wiki/spaces/PLQA/pages/132128728>`\n   `<https://paramount.atlassian.net/wiki/spaces/PLQA/pages/47714226>`\n   `<https://paramount.atlassian.net/wiki/spaces/PLQA/pages/433660722>`\n   `<https://paramount.atlassian.net/wiki/spaces/PLQA/pages/47713001>`\n\n────────────────────────────────────────\n:books: Sources:\n1. <https://paramount.atlassian.net/wiki/spaces/PLQA/pages/178426346>\n2. <https://paramount.atlassian.net/wiki/spaces/PLQA/pages/132128728>\n3. <https://paramount.atlassian.net/wiki/spaces/PLQA/pages/47714226>\n4. <https://paramount.atlassian.net/wiki/spaces/PLQA/pages/433660722>\n5. <https://paramount.atlassian.net/wiki/spaces/PLQA/pages/47713001>', 'team': 'T010QS7UQNA', 'bot_profile': {'id': 'B099R6WTRU4', 'deleted': False, 'name': 'AutoBot', 'updated': 1754677948, 'app_id': 'A099LACAB2R', 'user_id': 'U099R6WTZ9S', 'icons': {'image_36': 'https://a.slack-edge.com/80588/img/plugins/app/bot_36.png', 'image_48': 'https://a.slack-edge.com/80588/img/plugins/app/bot_48.png', 'image_72': 'https://a.slack-edge.com/80588/img/plugins/app/service_72.png'}, 'team_id': 'T010QS7UQNA'}, 'thread_ts': '1755923943.403119', 'parent_user_id': 'U01RMTFMALF', 'blocks': [{'type': 'rich_text', 'block_id': 'dUkV9', 'elements': [{'type': 'rich_text_section', 'elements': [{'type': 'text', 'text': '(part 2/2)', 'style': {'italic': True}}, {'type': 'text', 'text': '\n\nSources:\n   '}, {'type': 'link', 'url': 'https://paramount.atlassian.net/wiki/spaces/PLQA/pages/178426346', 'style': {'code': True}}, {'type': 'text', 'text': '\n   '}, {'type': 'link', 'url': 'https://paramount.atlassian.net/wiki/spaces/PLQA/pages/132128728', 'style': {'code': True}}, {'type': 'text', 'text': '\n   '}, {'type': 'link', 'url': 'https://paramount.atlassian.net/wiki/spaces/PLQA/pages/47714226', 'style': {'code': True}}, {'type': 'text', 'text': '\n   '}, {'type': 'link', 'url': 'https://paramount.atlassian.net/wiki/spaces/PLQA/pages/433660722', 'style': {'code': True}}, {'type': 'text', 'text': '\n   '}, {'type': 'link', 'url': 'https://paramount.atlassian.net/wiki/spaces/PLQA/pages/47713001', 'style': {'code': True}}, {'type': 'text', 'text': '\n\n────────────────────────────────────────\n'}, {'type': 'emoji', 'name': 'books', 'unicode': '1f4da'}, {'type': 'text', 'text': ' Sources:\n1. '}, {'type': 'link', 'url': 'https://paramount.atlassian.net/wiki/spaces/PLQA/pages/178426346'}, {'type': 'text', 'text': '\n2. '}, {'type': 'link', 'url': 'https://paramount.atlassian.net/wiki/spaces/PLQA/pages/132128728'}, {'type': 'text', 'text': '\n3. '}, {'type': 'link', 'url': 'https://paramount.atlassian.net/wiki/spaces/PLQA/pages/47714226'}, {'type': 'text', 'text': '\n4. '}, {'type': 'link', 'url': 'https://paramount.atlassian.net/wiki/spaces/PLQA/pages/433660722'}, {'type': 'text', 'text': '\n5. '}, {'type': 'link', 'url': 'https://paramount.atlassian.net/wiki/spaces/PLQA/pages/47713001'}]}]}], 'channel': 'D09A0LFHK8R', 'event_ts': '1755923954.547359', 'channel_type': 'im'}
2025-08-22 21:39:34,033 - slack_bolt.App - DEBUG - [client.py:200] - Sending a message (session id: 3f770b4f-1c8a-43f7-a519-958dceafdffa, message: {"envelope_id": "aa503f14-ddb9-4efd-8976-63dacc8a9449"})
2025-08-22 21:39:34,034 - slack_bolt.App - DEBUG - [internals.py:41] - Response time: 1 milliseconds
2025-08-22 21:39:34,034 - slack_bolt.App - DEBUG - [client.py:150] - Message processing completed (type: events_api, envelope_id: aa503f14-ddb9-4efd-8976-63dacc8a9449)
2025-08-22 21:40:23,114 - slack_bolt.App - DEBUG - [client.py:235] - on_message invoked: (message: {"envelope_id":"49686eb1-8807-47e5-9f9a-bea6f9afc709","payload":{"token":"yq71khZBCyJF1Ri2hG5aNqr5","team_id":"T010QS7UQNA","enterprise_id":"ERV4P7NAD","context_team_id":null,"context_enterprise_id":"ERV4P7NAD","api_app_id":"A099LACAB2R","event":{"user":"U099R6WTZ9S","type":"message","ts":"1755923954.547359","bot_id":"B099R6WTRU4","app_id":"A099LACAB2R","text":"_(part 2\/2)_\n\nSources:\n   `<https:\/\/paramount.atlassian.net\/wiki\/spaces\/PLQA\/pages\/178426346>`\n   `<https:\/\/paramount.atlassian.net\/wiki\/spaces\/PLQA\/pages\/132128728>`\n   `<https:\/\/paramount.atlassian.net\/wiki\/spaces\/PLQA\/pages\/47714226>`\n   `<https:\/\/paramount.atlassian.net\/wiki\/spaces\/PLQA\/pages\/433660722>`\n   `<https:\/\/paramount.atlassian.net\/wiki\/spaces\/PLQA\/pages\/47713001>`\n\n\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\n:books: Sources:\n1. <https:\/\/paramount.atlassian.net\/wiki\/spaces\/PLQA\/pages\/178426346>\n2. <https:\/\/paramount.atlassian.net\/wiki\/spaces\/PLQA\/pages\/132128728>\n3. <https:\/\/paramount.atlassian.net\/wiki\/spaces\/PLQA\/pages\/47714226>\n4. <https:\/\/paramount.atlassian.net\/wiki\/spaces\/PLQA\/pages\/433660722>\n5. <https:\/\/paramount.atlassian.net\/wiki\/spaces\/PLQA\/pages\/47713001>","team":"T010QS7UQNA","bot_profile":{"id":"B099R6WTRU4","deleted":false,"name":"AutoBot","updated":1754677948,"app_id":"A099LACAB2R","user_id":"U099R6WTZ9S","icons":{"image_36":"https:\/\/a.slack-edge.com\/80588\/img\/plugins\/app\/bot_36.png","image_48":"https:\/\/a.slack-edge.com\/80588\/img\/plugins\/app\/bot_48.png","image_72":"https:\/\/a.slack-edge.com\/80588\/img\/plugins\/app\/service_72.png"},"team_id":"T010QS7UQNA"},"thread_ts":"1755923943.403119","parent_user_id":"U01RMTFMALF","blocks":[{"type":"rich_text","block_id":"dUkV9","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"(part 2\/2)","style":{"italic":true}},{"type":"text","text":"\n\nSources:\n   "},{"type":"link","url":"https:\/\/paramount.atlassian.net\/wiki\/spaces\/PLQA\/pages\/178426346","style":{"code":true}},{"type":"text","text":"\n   "},{"type":"link","url":"https:\/\/paramount.atlassian.net\/wiki\/spaces\/PLQA\/pages\/132128728","style":{"code":true}},{"type":"text","text":"\n   "},{"type":"link","url":"https:\/\/paramount.atlassian.net\/wiki\/spaces\/PLQA\/pages\/47714226","style":{"code":true}},{"type":"text","text":"\n   "},{"type":"link","url":"https:\/\/paramount.atlassian.net\/wiki\/spaces\/PLQA\/pages\/433660722","style":{"code":true}},{"type":"text","text":"\n   "},{"type":"link","url":"https:\/\/paramount.atlassian.net\/wiki\/spaces\/PLQA\/pages\/47713001","style":{"code":true}},{"type":"text","text":"\n\n\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\n"},{"type":"emoji","name":"books","unicode":"1f4da"},{"type":"text","text":" Sources:\n1. "},{"type":"link","url":"https:\/\/paramount.atlassian.net\/wiki\/spaces\/PLQA\/pages\/178426346"},{"type":"text","text":"\n2. "},{"type":"link","url":"https:\/\/paramount.atlassian.net\/wiki\/spaces\/PLQA\/pages\/132128728"},{"type":"text","text":"\n3. "},{"type":"link","url":"https:\/\/paramount.atlassian.net\/wiki\/spaces\/PLQA\/pages\/47714226"},{"type":"text","text":"\n4. "},{"type":"link","url":"https:\/\/paramount.atlassian.net\/wiki\/spaces\/PLQA\/pages\/433660722"},{"type":"text","text":"\n5. "},{"type":"link","url":"https:\/\/paramount.atlassian.net\/wiki\/spaces\/PLQA\/pages\/47713001"}]}]}],"channel":"D09A0LFHK8R","event_ts":"1755923954.547359","channel_type":"im"},"type":"event_callback","event_id":"Ev09CHJ4QK8Q","event_time":1755923954,"authorizations":[{"enterprise_id":"ERV4P7NAD","team_id":"T010QS7UQNA","user_id":"U099R6WTZ9S","is_bot":true,"is_enterprise_install":false}],"is_ext_shared_channel":false,"event_context":"4-eyJldCI6Im1lc3NhZ2UiLCJ0aWQiOiJUMDEwUVM3VVFOQSIsImFpZCI6IkEwOTlMQUNBQjJSIiwiY2lkIjoiRDA5QTBMRkhLOFIifQ"},"type":"events_api","accepts_response_payload":false,"retry_attempt":2,"retry_reason":"timeout"})
2025-08-22 21:40:23,116 - slack_bolt.App - DEBUG - [client.py:99] - A new message enqueued (current queue size: 1)
2025-08-22 21:40:23,116 - slack_bolt.App - DEBUG - [client.py:105] - A message dequeued (current queue size: 0)
2025-08-22 21:40:23,116 - slack_bolt.App - DEBUG - [client.py:125] - Message processing started (type: events_api, envelope_id: 49686eb1-8807-47e5-9f9a-bea6f9afc709)
2025-08-22 21:40:23,116 - slack_bolt.App - DEBUG - [app.py:476] - Applying slack_bolt.middleware.ssl_check.ssl_check.SslCheck
2025-08-22 21:40:23,116 - slack_bolt.App - DEBUG - [app.py:476] - Applying slack_bolt.middleware.request_verification.request_verification.RequestVerification
2025-08-22 21:40:23,116 - slack_bolt.App - DEBUG - [app.py:476] - Applying slack_bolt.middleware.authorization.single_team_authorization.SingleTeamAuthorization
2025-08-22 21:40:23,116 - slack_bolt.App - DEBUG - [app.py:476] - Applying slack_bolt.middleware.ignoring_self_events.ignoring_self_events.IgnoringSelfEvents
2025-08-22 21:40:23,117 - slack_bolt.IgnoringSelfEvents - DEBUG - [ignoring_self_events.py:60] - Skipped self event: {'user': 'U099R6WTZ9S', 'type': 'message', 'ts': '1755923954.547359', 'bot_id': 'B099R6WTRU4', 'app_id': 'A099LACAB2R', 'text': '_(part 2/2)_\n\nSources:\n   `<https://paramount.atlassian.net/wiki/spaces/PLQA/pages/178426346>`\n   `<https://paramount.atlassian.net/wiki/spaces/PLQA/pages/132128728>`\n   `<https://paramount.atlassian.net/wiki/spaces/PLQA/pages/47714226>`\n   `<https://paramount.atlassian.net/wiki/spaces/PLQA/pages/433660722>`\n   `<https://paramount.atlassian.net/wiki/spaces/PLQA/pages/47713001>`\n\n────────────────────────────────────────\n:books: Sources:\n1. <https://paramount.atlassian.net/wiki/spaces/PLQA/pages/178426346>\n2. <https://paramount.atlassian.net/wiki/spaces/PLQA/pages/132128728>\n3. <https://paramount.atlassian.net/wiki/spaces/PLQA/pages/47714226>\n4. <https://paramount.atlassian.net/wiki/spaces/PLQA/pages/433660722>\n5. <https://paramount.atlassian.net/wiki/spaces/PLQA/pages/47713001>', 'team': 'T010QS7UQNA', 'bot_profile': {'id': 'B099R6WTRU4', 'deleted': False, 'name': 'AutoBot', 'updated': 1754677948, 'app_id': 'A099LACAB2R', 'user_id': 'U099R6WTZ9S', 'icons': {'image_36': 'https://a.slack-edge.com/80588/img/plugins/app/bot_36.png', 'image_48': 'https://a.slack-edge.com/80588/img/plugins/app/bot_48.png', 'image_72': 'https://a.slack-edge.com/80588/img/plugins/app/service_72.png'}, 'team_id': 'T010QS7UQNA'}, 'thread_ts': '1755923943.403119', 'parent_user_id': 'U01RMTFMALF', 'blocks': [{'type': 'rich_text', 'block_id': 'dUkV9', 'elements': [{'type': 'rich_text_section', 'elements': [{'type': 'text', 'text': '(part 2/2)', 'style': {'italic': True}}, {'type': 'text', 'text': '\n\nSources:\n   '}, {'type': 'link', 'url': 'https://paramount.atlassian.net/wiki/spaces/PLQA/pages/178426346', 'style': {'code': True}}, {'type': 'text', 'text': '\n   '}, {'type': 'link', 'url': 'https://paramount.atlassian.net/wiki/spaces/PLQA/pages/132128728', 'style': {'code': True}}, {'type': 'text', 'text': '\n   '}, {'type': 'link', 'url': 'https://paramount.atlassian.net/wiki/spaces/PLQA/pages/47714226', 'style': {'code': True}}, {'type': 'text', 'text': '\n   '}, {'type': 'link', 'url': 'https://paramount.atlassian.net/wiki/spaces/PLQA/pages/433660722', 'style': {'code': True}}, {'type': 'text', 'text': '\n   '}, {'type': 'link', 'url': 'https://paramount.atlassian.net/wiki/spaces/PLQA/pages/47713001', 'style': {'code': True}}, {'type': 'text', 'text': '\n\n────────────────────────────────────────\n'}, {'type': 'emoji', 'name': 'books', 'unicode': '1f4da'}, {'type': 'text', 'text': ' Sources:\n1. '}, {'type': 'link', 'url': 'https://paramount.atlassian.net/wiki/spaces/PLQA/pages/178426346'}, {'type': 'text', 'text': '\n2. '}, {'type': 'link', 'url': 'https://paramount.atlassian.net/wiki/spaces/PLQA/pages/132128728'}, {'type': 'text', 'text': '\n3. '}, {'type': 'link', 'url': 'https://paramount.atlassian.net/wiki/spaces/PLQA/pages/47714226'}, {'type': 'text', 'text': '\n4. '}, {'type': 'link', 'url': 'https://paramount.atlassian.net/wiki/spaces/PLQA/pages/433660722'}, {'type': 'text', 'text': '\n5. '}, {'type': 'link', 'url': 'https://paramount.atlassian.net/wiki/spaces/PLQA/pages/47713001'}]}]}], 'channel': 'D09A0LFHK8R', 'event_ts': '1755923954.547359', 'channel_type': 'im'}
2025-08-22 21:40:23,117 - slack_bolt.App - DEBUG - [client.py:200] - Sending a message (session id: 3f770b4f-1c8a-43f7-a519-958dceafdffa, message: {"envelope_id": "49686eb1-8807-47e5-9f9a-bea6f9afc709"})
2025-08-22 21:40:23,117 - slack_bolt.App - DEBUG - [internals.py:41] - Response time: 1 milliseconds
2025-08-22 21:40:23,117 - slack_bolt.App - DEBUG - [client.py:150] - Message processing completed (type: events_api, envelope_id: 49686eb1-8807-47e5-9f9a-bea6f9afc709)
2025-08-22 21:40:23,289 - slack_bolt.App - DEBUG - [client.py:235] - on_message invoked: (message: {"envelope_id":"81953693-8df7-4f50-ba8b-5b4b85629fc5","payload":{"token":"yq71khZBCyJF1Ri2hG5aNqr5","team_id":"T010QS7UQNA","enterprise_id":"ERV4P7NAD","context_team_id":null,"context_enterprise_id":"ERV4P7NAD","api_app_id":"A099LACAB2R","event":{"user":"U099R6WTZ9S","type":"message","ts":"1755923954.127349","bot_id":"B099R6WTRU4","app_id":"A099LACAB2R","text":"Your Question:\n&gt; How to get access to jenkins? Answer:\n\nTo get access to Jenkins, follow these steps:\n\n1. Request Access to GitHub (Prerequisite):\nFirst, you need to create a GitHub account. You can do this by clicking on a new tile that should appear on your Okta tiles. Use the same credentials as your AD login and your <http:\/\/cbsinteractive.com|cbsinteractive.com> email address. Join the free plan when prompted and set up 2-factor authentication using your mobile device (e.g., Okta). After setting up 2FA, sign out and sign back in to GitHub using the Okta tile to ensure changes take effect and \"Paramount+\" appears as Verified. Alternatively, you can submit a request in the \"#i-centralops-github\" channel in Slack. Post a request like: \"Hello, may I please get added to the okta-para-github_viacomcbs.\" Someone in the channel will grant you permission and inform you. For `mqe-pplus-tests github` access, submit a Pitstop ticket using the `mqe-pplus-tests - GitHub Access` template. Access to the Functional QA Automation Github repo is also a prerequisite. 2. Request Jenkins Access:\nYou can submit a request in the \"#i-centralops-github\" channel in Slack as described above. Refer to the Confluence page titled \"P+ Global - <http:\/\/build.viacom.com|build.viacom.com> (BVC) \/ <http:\/\/jenkins-ui.cbs.com|jenkins-ui.cbs.com> Access\" for a guide to gain access to Jenkins. You can also send an email to `<mailto:ateeque.haque@viacomcbs.com|ateeque.haque@viacomcbs.com>` to start the process. If you need access to specific Jenkins projects, such as P+ INTL Build jobs (main pipeline, PR validator, MQE jobs), specify this in your request, providing your active directory username. If you encounter issues after following these instructions, create a request in the `#devops-support` Slack channel. 3. VPN Access (Prerequisite):\nRequest VPN access by creating a ticket in PITStop. To connect to the VPN, use your Paramount email\/system login credentials. Note that you might need to connect to the VPN via `<http:\/\/connect.cbsinteractive.com\/VPNFT|connect.cbsinteractive.com\/VPNFT>` instead of the default value to access Jenkins. 4. Verify Jenkins Access:\nOpen `<https:\/\/build.viacom.com>` and log in to Jenkins using your email ID as the username and your OKTA password. After logging in, check if you can access `<https:\/\/build.viacom.com\/job\/gqe\/>`. Once access is granted, you will be able to log in to the `<http:\/\/build.viacom.com|build.viacom.com>` Jenkins server using your AD (Network) credentials.\n\n_(message continued in thread...)_","team":"T010QS7UQNA","bot_profile":{"id":"B099R6WTRU4","deleted":false,"name":"AutoBot","updated":1754677948,"app_id":"A099LACAB2R","user_id":"U099R6WTZ9S","icons":{"image_36":"https:\/\/a.slack-edge.com\/80588\/img\/plugins\/app\/bot_36.png","image_48":"https:\/\/a.slack-edge.com\/80588\/img\/plugins\/app\/bot_48.png","image_72":"https:\/\/a.slack-edge.com\/80588\/img\/plugins\/app\/service_72.png"},"team_id":"T010QS7UQNA"},"thread_ts":"1755923943.403119","parent_user_id":"U01RMTFMALF","blocks":[{"type":"rich_text","block_id":"154","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Your Question:"}]},{"type":"rich_text_quote","elements":[{"type":"text","text":"How to get access to jenkins? Answer:"}]},{"type":"rich_text_section","elements":[{"type":"text","text":"\n\nTo get access to Jenkins, follow these steps:\n\n1. Request Access to GitHub (Prerequisite):\nFirst, you need to create a GitHub account. You can do this by clicking on a new tile that should appear on your Okta tiles. Use the same credentials as your AD login and your "},{"type":"link","url":"http:\/\/cbsinteractive.com","text":"cbsinteractive.com"},{"type":"text","text":" email address. Join the free plan when prompted and set up 2-factor authentication using your mobile device (e.g., Okta). After setting up 2FA, sign out and sign back in to GitHub using the Okta tile to ensure changes take effect and \"Paramount+\" appears as Verified. Alternatively, you can submit a request in the \"#i-centralops-github\" channel in Slack. Post a request like: \"Hello, may I please get added to the okta-para-github_viacomcbs.\" Someone in the channel will grant you permission and inform you. For "},{"type":"text","text":"mqe-pplus-tests github","style":{"code":true}},{"type":"text","text":" access, submit a Pitstop ticket using the "},{"type":"text","text":"mqe-pplus-tests - GitHub Access","style":{"code":true}},{"type":"text","text":" template. Access to the Functional QA Automation Github repo is also a prerequisite. 2. Request Jenkins Access:\nYou can submit a request in the \"#i-centralops-github\" channel in Slack as described above. Refer to the Confluence page titled \"P+ Global - "},{"type":"link","url":"http:\/\/build.viacom.com","text":"build.viacom.com"},{"type":"text","text":" (BVC) \/ "},{"type":"link","url":"http:\/\/jenkins-ui.cbs.com","text":"jenkins-ui.cbs.com"},{"type":"text","text":" Access\" for a guide to gain access to Jenkins. You can also send an email to "},{"type":"link","url":"mailto:ateeque.haque@viacomcbs.com","text":"ateeque.haque@viacomcbs.com","style":{"code":true}},{"type":"text","text":" to start the process. If you need access to specific Jenkins projects, such as P+ INTL Build jobs (main pipeline, PR validator, MQE jobs), specify this in your request, providing your active directory username. If you encounter issues after following these instructions, create a request in the "},{"type":"text","text":"#devops-support","style":{"code":true}},{"type":"text","text":" Slack channel. 3. VPN Access (Prerequisite):\nRequest VPN access by creating a ticket in PITStop. To connect to the VPN, use your Paramount email\/system login credentials. Note that you might need to connect to the VPN via "},{"type":"link","url":"http:\/\/connect.cbsinteractive.com\/VPNFT","text":"connect.cbsinteractive.com\/VPNFT","style":{"code":true}},{"type":"text","text":" instead of the default value to access Jenkins. 4. Verify Jenkins Access:\nOpen "},{"type":"link","url":"https:\/\/build.viacom.com","style":{"code":true}},{"type":"text","text":" and log in to Jenkins using your email ID as the username and your OKTA password. After logging in, check if you can access "},{"type":"link","url":"https:\/\/build.viacom.com\/job\/gqe\/","style":{"code":true}},{"type":"text","text":". Once access is granted, you will be able to log in to the "},{"type":"link","url":"http:\/\/build.viacom.com","text":"build.viacom.com","style":{"code":true}},{"type":"text","text":" Jenkins server using your AD (Network) credentials.\n\n"},{"type":"text","text":"(message continued in thread...)","style":{"italic":true}}]}]}],"channel":"D09A0LFHK8R","event_ts":"1755923954.127349","channel_type":"im"},"type":"event_callback","event_id":"Ev09BRPHM23G","event_time":1755923954,"authorizations":[{"enterprise_id":"ERV4P7NAD","team_id":"T010QS7UQNA","user_id":"U099R6WTZ9S","is_bot":true,"is_enterprise_install":false}],"is_ext_shared_channel":false,"event_context":"4-eyJldCI6Im1lc3NhZ2UiLCJ0aWQiOiJUMDEwUVM3VVFOQSIsImFpZCI6IkEwOTlMQUNBQjJSIiwiY2lkIjoiRDA5QTBMRkhLOFIifQ"},"type":"events_api","accepts_response_payload":false,"retry_attempt":2,"retry_reason":"timeout"})
2025-08-22 21:40:23,290 - slack_bolt.App - DEBUG - [client.py:99] - A new message enqueued (current queue size: 1)
2025-08-22 21:40:23,290 - slack_bolt.App - DEBUG - [client.py:105] - A message dequeued (current queue size: 0)
2025-08-22 21:40:23,290 - slack_bolt.App - DEBUG - [client.py:125] - Message processing started (type: events_api, envelope_id: 81953693-8df7-4f50-ba8b-5b4b85629fc5)
2025-08-22 21:40:23,290 - slack_bolt.App - DEBUG - [app.py:476] - Applying slack_bolt.middleware.ssl_check.ssl_check.SslCheck
2025-08-22 21:40:23,290 - slack_bolt.App - DEBUG - [app.py:476] - Applying slack_bolt.middleware.request_verification.request_verification.RequestVerification
2025-08-22 21:40:23,290 - slack_bolt.App - DEBUG - [app.py:476] - Applying slack_bolt.middleware.authorization.single_team_authorization.SingleTeamAuthorization
2025-08-22 21:40:23,291 - slack_bolt.App - DEBUG - [app.py:476] - Applying slack_bolt.middleware.ignoring_self_events.ignoring_self_events.IgnoringSelfEvents
2025-08-22 21:40:23,291 - slack_bolt.IgnoringSelfEvents - DEBUG - [ignoring_self_events.py:60] - Skipped self event: {'user': 'U099R6WTZ9S', 'type': 'message', 'ts': '1755923954.127349', 'bot_id': 'B099R6WTRU4', 'app_id': 'A099LACAB2R', 'text': 'Your Question:\n&gt; How to get access to jenkins? Answer:\n\nTo get access to Jenkins, follow these steps:\n\n1. Request Access to GitHub (Prerequisite):\nFirst, you need to create a GitHub account. You can do this by clicking on a new tile that should appear on your Okta tiles. Use the same credentials as your AD login and your <http://cbsinteractive.com|cbsinteractive.com> email address. Join the free plan when prompted and set up 2-factor authentication using your mobile device (e.g., Okta). After setting up 2FA, sign out and sign back in to GitHub using the Okta tile to ensure changes take effect and "Paramount+" appears as Verified. Alternatively, you can submit a request in the "#i-centralops-github" channel in Slack. Post a request like: "Hello, may I please get added to the okta-para-github_viacomcbs." Someone in the channel will grant you permission and inform you. For `mqe-pplus-tests github` access, submit a Pitstop ticket using the `mqe-pplus-tests - GitHub Access` template. Access to the Functional QA Automation Github repo is also a prerequisite. 2. Request Jenkins Access:\nYou can submit a request in the "#i-centralops-github" channel in Slack as described above. Refer to the Confluence page titled "P+ Global - <http://build.viacom.com|build.viacom.com> (BVC) / <http://jenkins-ui.cbs.com|jenkins-ui.cbs.com> Access" for a guide to gain access to Jenkins. You can also send an email to `<mailto:ateeque.haque@viacomcbs.com|ateeque.haque@viacomcbs.com>` to start the process. If you need access to specific Jenkins projects, such as P+ INTL Build jobs (main pipeline, PR validator, MQE jobs), specify this in your request, providing your active directory username. If you encounter issues after following these instructions, create a request in the `#devops-support` Slack channel. 3. VPN Access (Prerequisite):\nRequest VPN access by creating a ticket in PITStop. To connect to the VPN, use your Paramount email/system login credentials. Note that you might need to connect to the VPN via `<http://connect.cbsinteractive.com/VPNFT|connect.cbsinteractive.com/VPNFT>` instead of the default value to access Jenkins. 4. Verify Jenkins Access:\nOpen `<https://build.viacom.com>` and log in to Jenkins using your email ID as the username and your OKTA password. After logging in, check if you can access `<https://build.viacom.com/job/gqe/>`. Once access is granted, you will be able to log in to the `<http://build.viacom.com|build.viacom.com>` Jenkins server using your AD (Network) credentials.\n\n_(message continued in thread...)_', 'team': 'T010QS7UQNA', 'bot_profile': {'id': 'B099R6WTRU4', 'deleted': False, 'name': 'AutoBot', 'updated': 1754677948, 'app_id': 'A099LACAB2R', 'user_id': 'U099R6WTZ9S', 'icons': {'image_36': 'https://a.slack-edge.com/80588/img/plugins/app/bot_36.png', 'image_48': 'https://a.slack-edge.com/80588/img/plugins/app/bot_48.png', 'image_72': 'https://a.slack-edge.com/80588/img/plugins/app/service_72.png'}, 'team_id': 'T010QS7UQNA'}, 'thread_ts': '1755923943.403119', 'parent_user_id': 'U01RMTFMALF', 'blocks': [{'type': 'rich_text', 'block_id': '154', 'elements': [{'type': 'rich_text_section', 'elements': [{'type': 'text', 'text': 'Your Question:'}]}, {'type': 'rich_text_quote', 'elements': [{'type': 'text', 'text': 'How to get access to jenkins? Answer:'}]}, {'type': 'rich_text_section', 'elements': [{'type': 'text', 'text': '\n\nTo get access to Jenkins, follow these steps:\n\n1. Request Access to GitHub (Prerequisite):\nFirst, you need to create a GitHub account. You can do this by clicking on a new tile that should appear on your Okta tiles. Use the same credentials as your AD login and your '}, {'type': 'link', 'url': 'http://cbsinteractive.com', 'text': 'cbsinteractive.com'}, {'type': 'text', 'text': ' email address. Join the free plan when prompted and set up 2-factor authentication using your mobile device (e.g., Okta). After setting up 2FA, sign out and sign back in to GitHub using the Okta tile to ensure changes take effect and "Paramount+" appears as Verified. Alternatively, you can submit a request in the "#i-centralops-github" channel in Slack. Post a request like: "Hello, may I please get added to the okta-para-github_viacomcbs." Someone in the channel will grant you permission and inform you. For '}, {'type': 'text', 'text': 'mqe-pplus-tests github', 'style': {'code': True}}, {'type': 'text', 'text': ' access, submit a Pitstop ticket using the '}, {'type': 'text', 'text': 'mqe-pplus-tests - GitHub Access', 'style': {'code': True}}, {'type': 'text', 'text': ' template. Access to the Functional QA Automation Github repo is also a prerequisite. 2. Request Jenkins Access:\nYou can submit a request in the "#i-centralops-github" channel in Slack as described above. Refer to the Confluence page titled "P+ Global - '}, {'type': 'link', 'url': 'http://build.viacom.com', 'text': 'build.viacom.com'}, {'type': 'text', 'text': ' (BVC) / '}, {'type': 'link', 'url': 'http://jenkins-ui.cbs.com', 'text': 'jenkins-ui.cbs.com'}, {'type': 'text', 'text': ' Access" for a guide to gain access to Jenkins. You can also send an email to '}, {'type': 'link', 'url': 'mailto:ateeque.haque@viacomcbs.com', 'text': 'ateeque.haque@viacomcbs.com', 'style': {'code': True}}, {'type': 'text', 'text': ' to start the process. If you need access to specific Jenkins projects, such as P+ INTL Build jobs (main pipeline, PR validator, MQE jobs), specify this in your request, providing your active directory username. If you encounter issues after following these instructions, create a request in the '}, {'type': 'text', 'text': '#devops-support', 'style': {'code': True}}, {'type': 'text', 'text': ' Slack channel. 3. VPN Access (Prerequisite):\nRequest VPN access by creating a ticket in PITStop. To connect to the VPN, use your Paramount email/system login credentials. Note that you might need to connect to the VPN via '}, {'type': 'link', 'url': 'http://connect.cbsinteractive.com/VPNFT', 'text': 'connect.cbsinteractive.com/VPNFT', 'style': {'code': True}}, {'type': 'text', 'text': ' instead of the default value to access Jenkins. 4. Verify Jenkins Access:\nOpen '}, {'type': 'link', 'url': 'https://build.viacom.com', 'style': {'code': True}}, {'type': 'text', 'text': ' and log in to Jenkins using your email ID as the username and your OKTA password. After logging in, check if you can access '}, {'type': 'link', 'url': 'https://build.viacom.com/job/gqe/', 'style': {'code': True}}, {'type': 'text', 'text': '. Once access is granted, you will be able to log in to the '}, {'type': 'link', 'url': 'http://build.viacom.com', 'text': 'build.viacom.com', 'style': {'code': True}}, {'type': 'text', 'text': ' Jenkins server using your AD (Network) credentials.\n\n'}, {'type': 'text', 'text': '(message continued in thread...)', 'style': {'italic': True}}]}]}], 'channel': 'D09A0LFHK8R', 'event_ts': '1755923954.127349', 'channel_type': 'im'}
2025-08-22 21:40:23,291 - slack_bolt.App - DEBUG - [client.py:200] - Sending a message (session id: 3f770b4f-1c8a-43f7-a519-958dceafdffa, message: {"envelope_id": "81953693-8df7-4f50-ba8b-5b4b85629fc5"})
2025-08-22 21:40:23,292 - slack_bolt.App - DEBUG - [internals.py:41] - Response time: 1 milliseconds
2025-08-22 21:40:23,292 - slack_bolt.App - DEBUG - [client.py:150] - Message processing completed (type: events_api, envelope_id: 81953693-8df7-4f50-ba8b-5b4b85629fc5)
2025-08-22 21:43:27,334 - slack_bolt.App - DEBUG - [client.py:235] - on_message invoked: (message: {"envelope_id":"12a82193-bb65-4bd1-872c-d94134fba9e6","payload":{"token":"yq71khZBCyJF1Ri2hG5aNqr5","team_id":"T010QS7UQNA","enterprise_id":"ERV4P7NAD","context_team_id":null,"context_enterprise_id":"ERV4P7NAD","api_app_id":"A099LACAB2R","event":{"user":"U01RMTFMALF","type":"message","ts":"1755924206.392669","client_msg_id":"4fcaf3cc-3388-40f9-813e-01225c352a66","text":"How to get access to jenkins?","blocks":[{"type":"rich_text","block_id":"jBTYB","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"How to get access to jenkins?"}]}]}],"channel":"D09A0LFHK8R","event_ts":"1755924206.392669","channel_type":"im"},"type":"event_callback","event_id":"Ev09BTPH04NQ","event_time":1755924206,"authorizations":[{"enterprise_id":"ERV4P7NAD","team_id":"T010QS7UQNA","user_id":"U099R6WTZ9S","is_bot":true,"is_enterprise_install":false}],"is_ext_shared_channel":false,"event_context":"4-eyJldCI6Im1lc3NhZ2UiLCJ0aWQiOiJUMDEwUVM3VVFOQSIsImFpZCI6IkEwOTlMQUNBQjJSIiwiY2lkIjoiRDA5QTBMRkhLOFIifQ"},"type":"events_api","accepts_response_payload":false,"retry_attempt":0,"retry_reason":""})
2025-08-22 21:43:27,334 - slack_bolt.App - DEBUG - [client.py:99] - A new message enqueued (current queue size: 1)
2025-08-22 21:43:27,335 - slack_bolt.App - DEBUG - [client.py:105] - A message dequeued (current queue size: 0)
2025-08-22 21:43:27,335 - slack_bolt.App - DEBUG - [client.py:125] - Message processing started (type: events_api, envelope_id: 12a82193-bb65-4bd1-872c-d94134fba9e6)
2025-08-22 21:43:27,336 - slack_bolt.App - DEBUG - [app.py:476] - Applying slack_bolt.middleware.ssl_check.ssl_check.SslCheck
2025-08-22 21:43:27,336 - slack_bolt.App - DEBUG - [app.py:476] - Applying slack_bolt.middleware.request_verification.request_verification.RequestVerification
2025-08-22 21:43:27,336 - slack_bolt.App - DEBUG - [app.py:476] - Applying slack_bolt.middleware.authorization.single_team_authorization.SingleTeamAuthorization
2025-08-22 21:43:27,336 - slack_bolt.App - DEBUG - [app.py:476] - Applying slack_bolt.middleware.ignoring_self_events.ignoring_self_events.IgnoringSelfEvents
2025-08-22 21:43:27,336 - slack_bolt.App - DEBUG - [app.py:476] - Applying slack_bolt.middleware.url_verification.url_verification.UrlVerification
2025-08-22 21:43:27,336 - slack_bolt.App - DEBUG - [app.py:500] - Checking listener: handle_app_mentions ...
2025-08-22 21:43:27,336 - slack_bolt.App - DEBUG - [app.py:500] - Checking listener: help_message ...
2025-08-22 21:43:27,337 - slack_bolt.App - DEBUG - [app.py:500] - Checking listener: handle_dm_messages ...
2025-08-22 21:43:27,337 - slack_bolt.App - DEBUG - [app.py:522] - Running listener: handle_dm_messages ...
2025-08-22 21:43:27,337 - slack_bolt.App - DEBUG - [thread_runner.py:198] - Responding with status: 200 body: "" (0 millis)
2025-08-22 21:43:27,337 - __main__ - INFO - [main.py:504] - === DM MESSAGE EVENT RECEIVED ===
2025-08-22 21:43:27,337 - slack_bolt.App - DEBUG - [client.py:200] - Sending a message (session id: 3f770b4f-1c8a-43f7-a519-958dceafdffa, message: {"envelope_id": "12a82193-bb65-4bd1-872c-d94134fba9e6"})
2025-08-22 21:43:27,337 - __main__ - DEBUG - [main.py:505] - Full event body: {'token': 'yq71khZBCyJF1Ri2hG5aNqr5', 'team_id': 'T010QS7UQNA', 'enterprise_id': 'ERV4P7NAD', 'context_team_id': None, 'context_enterprise_id': 'ERV4P7NAD', 'api_app_id': 'A099LACAB2R', 'event': {'user': 'U01RMTFMALF', 'type': 'message', 'ts': '1755924206.392669', 'client_msg_id': '4fcaf3cc-3388-40f9-813e-01225c352a66', 'text': 'How to get access to jenkins?', 'blocks': [{'type': 'rich_text', 'block_id': 'jBTYB', 'elements': [{'type': 'rich_text_section', 'elements': [{'type': 'text', 'text': 'How to get access to jenkins?'}]}]}], 'channel': 'D09A0LFHK8R', 'event_ts': '1755924206.392669', 'channel_type': 'im'}, 'type': 'event_callback', 'event_id': 'Ev09BTPH04NQ', 'event_time': 1755924206, 'authorizations': [{'enterprise_id': 'ERV4P7NAD', 'team_id': 'T010QS7UQNA', 'user_id': 'U099R6WTZ9S', 'is_bot': True, 'is_enterprise_install': False}], 'is_ext_shared_channel': False, 'event_context': '4-eyJldCI6Im1lc3NhZ2UiLCJ0aWQiOiJUMDEwUVM3VVFOQSIsImFpZCI6IkEwOTlMQUNBQjJSIiwiY2lkIjoiRDA5QTBMRkhLOFIifQ'}
2025-08-22 21:43:27,337 - __main__ - INFO - [main.py:514] - DM Event details: channel=D09A0LFHK8R, user=U01RMTFMALF, ts=1755924206.392669
2025-08-22 21:43:27,337 - slack_bolt.App - DEBUG - [internals.py:41] - Response time: 1 milliseconds
2025-08-22 21:43:27,337 - __main__ - DEBUG - [main.py:515] - DM Event text: How to get access to jenkins?
2025-08-22 21:43:27,337 - slack_bolt.App - DEBUG - [client.py:150] - Message processing completed (type: events_api, envelope_id: 12a82193-bb65-4bd1-872c-d94134fba9e6)
2025-08-22 21:43:27,337 - utils - DEBUG - [utils.py:27] - Checking message processing: channel=D09A0LFHK8R, ts=1755924206.392669, text='How to get access to jenkins?...'
2025-08-22 21:43:27,338 - utils - DEBUG - [utils.py:31] - Message hash: 66051a6440e0569da630e44f4e5e8990
2025-08-22 21:43:27,338 - utils - DEBUG - [utils.py:42] - Cleaning up 1 expired message entries
2025-08-22 21:43:27,338 - utils - DEBUG - [utils.py:53] - Added message to processing cache (total entries: 1)
2025-08-22 21:43:27,338 - __main__ - DEBUG - [main.py:528] - Bot check: bot_id=None, user_id=U01RMTFMALF
2025-08-22 21:43:27,338 - __main__ - DEBUG - [main.py:533] - Question received: 'How to get access to jenkins?'
2025-08-22 21:43:27,338 - __main__ - DEBUG - [main.py:539] - Checking user access for DM...
2025-08-22 21:43:27,338 - auth.slack_user_info - DEBUG - [slack_user_info.py:44] - Using cached email for user U01RMTFMALF
2025-08-22 21:43:27,338 - auth.email_whitelist - DEBUG - [email_whitelist.py:57] - Email access granted: alexandr.popov@paramount.com
2025-08-22 21:43:27,338 - __main__ - INFO - [main.py:118] - Access granted to user U01RMTFMALF with email alexandr.popov@paramount.com
2025-08-22 21:43:27,338 - __main__ - DEBUG - [main.py:545] - User access check passed for DM
2025-08-22 21:43:27,338 - __main__ - INFO - [main.py:547] - Processing DM question from user U01RMTFMALF: How to get access to jenkins?
2025-08-22 21:43:27,338 - __main__ - DEBUG - [main.py:550] - Starting DM processing...
2025-08-22 21:43:27,338 - __main__ - DEBUG - [main.py:553] - Checking if 'how to get access to jenkins?' is an admin command in DM
2025-08-22 21:43:27,339 - __main__ - DEBUG - [main.py:589] - Checking if DM thread is already being processed...
2025-08-22 21:43:27,339 - utils - DEBUG - [utils.py:67] - Managing thread: D09A0LFHK8R:1755924206.392669, action: add, user: U01RMTFMALF
2025-08-22 21:43:27,339 - utils - INFO - [utils.py:94] - Added thread D09A0LFHK8R:1755924206.392669 to active tracking (total: 1)
2025-08-22 21:43:27,339 - __main__ - DEBUG - [main.py:594] - DM thread management check passed
2025-08-22 21:43:27,339 - slack_sdk.web.base_client - DEBUG - [base_client.py:255] - Sending a request - url: https://slack.com/api/reactions.add, query_params: {}, body_params: {'channel': 'D09A0LFHK8R', 'name': 'thinking_face', 'timestamp': '1755924206.392669', 'team_id': 'T010QS7UQNA'}, files: {}, json_body: None, headers: {'Content-Type': 'application/x-www-form-urlencoded', 'Authorization': '(redacted)', 'User-Agent': 'Python/3.12.0 slackclient/3.34.0 Darwin/23.4.0'}
2025-08-22 21:43:27,836 - slack_sdk.web.base_client - DEBUG - [base_client.py:546] - Received the following response - status: 200, headers: {'date': 'Sat, 23 Aug 2025 04:43:27 GMT', 'server': 'Apache', 'vary': 'Accept-Encoding', 'x-slack-req-id': 'cea6934a8c65651e88c499fe791472b5', 'x-content-type-options': 'nosniff', 'x-xss-protection': '0', 'pragma': 'no-cache', 'cache-control': 'private, no-cache, no-store, must-revalidate', 'expires': 'Sat, 26 Jul 1997 05:00:00 GMT', 'content-type': 'application/json; charset=utf-8', 'x-accepted-oauth-scopes': 'reactions:write', 'x-oauth-scopes': 'app_mentions:read,channels:history,chat:write,im:history,im:read,im:write,users:read,reactions:write,users:read.email', 'access-control-expose-headers': 'x-slack-req-id, retry-after', 'access-control-allow-headers': 'slack-route, x-slack-version-ts, x-b3-traceid, x-b3-spanid, x-b3-parentspanid, x-b3-sampled, x-b3-flags', 'strict-transport-security': 'max-age=31536000; includeSubDomains; preload', 'referrer-policy': 'no-referrer', 'x-slack-unique-id': 'aKlG7wZPjk0oOPIE2Q5QiwAAABU', 'x-slack-backend': 'r', 'access-control-allow-origin': '*', 'content-length': '11', 'via': '1.1 slack-prod.tinyspeck.com, envoy-www-iad-mrencepq,envoy-edge-pdx-reektlry', 'x-envoy-attempt-count': '1', 'x-envoy-upstream-service-time': '130', 'x-backend': 'main_normal main_canary_with_overflow main_control_with_overflow', 'x-server': 'slack-www-hhvm-main-iad-qydf', 'x-slack-shared-secret-outcome': 'no-match', 'x-edge-backend': 'envoy-www', 'timing-allow-origin': '*', 'x-slack-edge-shared-secret-outcome': 'no-match', 'connection': 'close'}, body: {"ok":true}
2025-08-22 21:43:27,837 - __main__ - INFO - [main.py:611] - Processing DM question from <@U01RMTFMALF>: How to get access to jenkins?
2025-08-22 21:43:27,837 - __main__ - INFO - [main.py:615] - Sending DM request to DIG AI...
2025-08-22 21:43:27,838 - dig_connector - INFO - [dig_connector.py:134] - Generating response for query: 'How to get access to jenkins?' with 0 chunks
2025-08-22 21:43:27,838 - dig_connector - DEBUG - [dig_connector.py:138] - Formatted context length: 0
2025-08-22 21:43:27,838 - dig_connector - INFO - [dig_connector.py:141] - No context available, using direct query
2025-08-22 21:43:27,838 - dig_connector - INFO - [dig_connector.py:150] - Sending prompt to DIG platform...
2025-08-22 21:43:27,838 - dig_connector - INFO - [dig_connector.py:121] - Sending message to DIG API - URL: https://ai.digdev.cbsicloud.com/fastapi/chats/896/generate
2025-08-22 21:43:27,838 - dig_connector - DEBUG - [dig_connector.py:122] - Message payload: {'model_id': 42, 'message_text': 'How to get access to jenkins?', 'history': [{'role': 'user', 'content': 'How to get access to jenkins?'}]}
2025-08-22 21:43:27,839 - urllib3.connectionpool - DEBUG - [connectionpool.py:292] - Resetting dropped connection: ai.digdev.cbsicloud.com
2025-08-22 21:43:35,611 - urllib3.connectionpool - DEBUG - [connectionpool.py:549] - https://ai.digdev.cbsicloud.com:443 "POST /fastapi/chats/896/generate HTTP/1.1" 200 1954
2025-08-22 21:43:35,612 - dig_connector - DEBUG - [dig_connector.py:125] - DIG API response: status=200
2025-08-22 21:43:35,612 - dig_connector - DEBUG - [dig_connector.py:129] - DIG API response data: {'message_text': 'To get access to Jenkins, you will need to follow these steps:\n\n1.  **GitHub Access (Prerequisite)**:\n    *   You must first have a GitHub account. You can create one via a new tile that should appear on your Okta tiles. Use your AD login credentials and your `@cbsinteractive.com` email address. Make sure to set up 2-factor authentication.\n    *   Alternatively, you can request access by posting in the `#i-centralops-github` Slack channel. State: "Hello, may I please get added to the **okta-para-github_viacomcbs**."\n    *   For `mqe-pplus-tests` GitHub access, submit a Pitstop ticket using the provided template for "mqe-pplus-tests - GitHub Access."\n    *   Access to the Functional QA Automation GitHub repo is also required.\n\n2.  **VPN Access (Prerequisite)**:\n    *   Request VPN access by creating a ticket in PITStop.\n    *   Use your Paramount email/system login credentials to connect to the VPN.\n    *   Note that you might need to connect via `connect.cbsinteractive.com/VPNFT` to access Jenkins.\n\n3.  **Request Jenkins Access**:\n    *   You can send an email to `ateeque.haque@viacomcbs.com` to initiate the process.\n    *   If you need access to specific Jenkins projects (e.g., P+ INTL Build jobs like main pipeline, PR validator, or MQE jobs), specify these in your request along with your active directory username.\n    *   If you are unable to access Jenkins after following these instructions, create a request in the `#devops-support` Slack channel.\n\n4.  **Verify Jenkins Access**:\n    *   Once you believe you have access, go to `https://build.viacom.com` and log in using your email ID as your username and your OKTA password.\n    *   Confirm that you can access `https://build.viacom.com/job/gqe/`.\n\nAfter completing these steps, you should be able to log in to the `build.viacom.com` Jenkins server with your AD (Network) credentials.', 'requires_approval': False, 'execution_id': 1600}
2025-08-22 21:43:35,612 - dig_connector - INFO - [dig_connector.py:154] - Extracting response content...
2025-08-22 21:43:35,612 - dig_connector - DEBUG - [dig_connector.py:221] - Found message_text in response
2025-08-22 21:43:35,612 - dig_connector - INFO - [dig_connector.py:157] - Successfully generated response (length: 1863)
2025-08-22 21:43:35,612 - __main__ - INFO - [main.py:618] - Received DM response from DIG AI
2025-08-22 21:43:35,612 - __main__ - DEBUG - [main.py:619] - DIG AI DM response: To get access to Jenkins, you will need to follow these steps:

1.  **GitHub Access (Prerequisite)**:
    *   You must first have a GitHub account. You can create one via a new tile that should appear on your Okta tiles. Use your AD login credentials and your `@cbsinteractive.com` email address. Make sure to set up 2-factor authentication.
    *   Alternatively, you can request access by posting in the `#i-centralops-github` Slack channel. State: "Hello, may I please get added to the **okta-para-github_viacomcbs**."
    *   For `mqe-pplus-tests` GitHub access, submit a Pitstop ticket using the provided template for "mqe-pplus-tests - GitHub Access."
    *   Access to the Functional QA Automation GitHub repo is also required.

2.  **VPN Access (Prerequisite)**:
    *   Request VPN access by creating a ticket in PITStop.
    *   Use your Paramount email/system login credentials to connect to the VPN.
    *   Note that you might need to connect via `connect.cbsinteractive.com/VPNFT` to access Jenkins.

3.  **Request Jenkins Access**:
    *   You can send an email to `ateeque.haque@viacomcbs.com` to initiate the process.
    *   If you need access to specific Jenkins projects (e.g., P+ INTL Build jobs like main pipeline, PR validator, or MQE jobs), specify these in your request along with your active directory username.
    *   If you are unable to access Jenkins after following these instructions, create a request in the `#devops-support` Slack channel.

4.  **Verify Jenkins Access**:
    *   Once you believe you have access, go to `https://build.viacom.com` and log in using your email ID as your username and your OKTA password.
    *   Confirm that you can access `https://build.viacom.com/job/gqe/`.

After completing these steps, you should be able to log in to the `build.viacom.com` Jenkins server with your AD (Network) credentials.
2025-08-22 21:43:35,613 - __main__ - DEBUG - [main.py:623] - Formatted DM response: Your Question:
> How to get access to jenkins?

Answer:

To get access to Jenkins, you will need to follow these steps:

1.  GitHub Access (Prerequisite):
You must first have a GitHub account. You can create one via a new tile that should appear on your Okta tiles. Use your AD login credentials and your `@cbsinteractive.com` email address. Make sure to set up 2-factor authentication.
       Alternatively, you can request access by posting in the `#i-centralops-github` Slack channel. State: "Hello, may I please get added to the okta-para-github_viacomcbs."
       For `mqe-pplus-tests` GitHub access, submit a Pitstop ticket using the provided template for "mqe-pplus-tests - GitHub Access."
       Access to the Functional QA Automation GitHub repo is also required.

2.  VPN Access (Prerequisite):
Request VPN access by creating a ticket in PITStop.
       Use your Paramount email/system login credentials to connect to the VPN.
       Note that you might need to connect via `connect.cbsinteractive.com/VPNFT` to access Jenkins.

3.  Request Jenkins Access:
You can send an email to `ateeque.haque@viacomcbs.com` to initiate the process.
       If you need access to specific Jenkins projects (e.g., P+ INTL Build jobs like main pipeline, PR validator, or MQE jobs), specify these in your request along with your active directory username.
       If you are unable to access Jenkins after following these instructions, create a request in the `#devops-support` Slack channel.

4.  Verify Jenkins Access:
Once you believe you have access, go to `https://build.viacom.com` and log in using your email ID as your username and your OKTA password.
       Confirm that you can access `https://build.viacom.com/job/gqe/`.

After completing these steps, you should be able to log in to the `build.viacom.com` Jenkins server with your AD (Network) credentials.
2025-08-22 21:43:35,613 - slack_sdk.web.base_client - DEBUG - [base_client.py:255] - Sending a request - url: https://slack.com/api/reactions.remove, query_params: {}, body_params: {'name': 'thinking_face', 'channel': 'D09A0LFHK8R', 'timestamp': '1755924206.392669', 'team_id': 'T010QS7UQNA'}, files: {}, json_body: None, headers: {'Content-Type': 'application/x-www-form-urlencoded', 'Authorization': '(redacted)', 'User-Agent': 'Python/3.12.0 slackclient/3.34.0 Darwin/23.4.0'}
2025-08-22 21:43:35,956 - slack_sdk.web.base_client - DEBUG - [base_client.py:546] - Received the following response - status: 200, headers: {'date': 'Sat, 23 Aug 2025 04:43:35 GMT', 'server': 'Apache', 'vary': 'Accept-Encoding', 'x-slack-req-id': 'fd637e3448cb0894a430a8040bf71e82', 'x-content-type-options': 'nosniff', 'x-xss-protection': '0', 'pragma': 'no-cache', 'cache-control': 'private, no-cache, no-store, must-revalidate', 'expires': 'Sat, 26 Jul 1997 05:00:00 GMT', 'content-type': 'application/json; charset=utf-8', 'x-accepted-oauth-scopes': 'reactions:write', 'x-oauth-scopes': 'app_mentions:read,channels:history,chat:write,im:history,im:read,im:write,users:read,reactions:write,users:read.email', 'access-control-expose-headers': 'x-slack-req-id, retry-after', 'access-control-allow-headers': 'slack-route, x-slack-version-ts, x-b3-traceid, x-b3-spanid, x-b3-parentspanid, x-b3-sampled, x-b3-flags', 'strict-transport-security': 'max-age=31536000; includeSubDomains; preload', 'referrer-policy': 'no-referrer', 'x-slack-unique-id': 'aKlG9_87zJpZibZW4S2_bQAAACY', 'x-slack-backend': 'r', 'access-control-allow-origin': '*', 'content-length': '11', 'via': '1.1 slack-prod.tinyspeck.com, envoy-www-iad-lbazdnrt,envoy-edge-pdx-xggowigl', 'x-envoy-attempt-count': '1', 'x-envoy-upstream-service-time': '125', 'x-backend': 'main_normal main_canary_with_overflow main_control_with_overflow', 'x-server': 'slack-www-hhvm-main-iad-ypsk', 'x-slack-shared-secret-outcome': 'no-match', 'x-edge-backend': 'envoy-www', 'timing-allow-origin': '*', 'x-slack-edge-shared-secret-outcome': 'no-match', 'connection': 'close'}, body: {"ok":true}
2025-08-22 21:43:35,957 - slack_sdk.web.base_client - DEBUG - [base_client.py:255] - Sending a request - url: https://slack.com/api/chat.postMessage, query_params: {}, body_params: {}, files: {}, json_body: {'channel': 'D09A0LFHK8R', 'text': 'Your Question:\n> How to get access to jenkins?\n\nAnswer:\n\nTo get access to Jenkins, you will need to follow these steps:\n\n1.  GitHub Access (Prerequisite):\nYou must first have a GitHub account. You can create one via a new tile that should appear on your Okta tiles. Use your AD login credentials and your `@cbsinteractive.com` email address. Make sure to set up 2-factor authentication.\n       Alternatively, you can request access by posting in the `#i-centralops-github` Slack channel. State: "Hello, may I please get added to the okta-para-github_viacomcbs."\n       For `mqe-pplus-tests` GitHub access, submit a Pitstop ticket using the provided template for "mqe-pplus-tests - GitHub Access."\n       Access to the Functional QA Automation GitHub repo is also required.\n\n2.  VPN Access (Prerequisite):\nRequest VPN access by creating a ticket in PITStop.\n       Use your Paramount email/system login credentials to connect to the VPN.\n       Note that you might need to connect via `connect.cbsinteractive.com/VPNFT` to access Jenkins.\n\n3.  Request Jenkins Access:\nYou can send an email to `ateeque.haque@viacomcbs.com` to initiate the process.\n       If you need access to specific Jenkins projects (e.g., P+ INTL Build jobs like main pipeline, PR validator, or MQE jobs), specify these in your request along with your active directory username.\n       If you are unable to access Jenkins after following these instructions, create a request in the `#devops-support` Slack channel.\n\n4.  Verify Jenkins Access:\nOnce you believe you have access, go to `https://build.viacom.com` and log in using your email ID as your username and your OKTA password.\n       Confirm that you can access `https://build.viacom.com/job/gqe/`.\n\nAfter completing these steps, you should be able to log in to the `build.viacom.com` Jenkins server with your AD (Network) credentials.', 'thread_ts': '1755924206.392669', 'team_id': 'T010QS7UQNA'}, headers: {'Content-Type': 'application/json;charset=utf-8', 'Authorization': '(redacted)', 'User-Agent': 'Python/3.12.0 slackclient/3.34.0 Darwin/23.4.0'}
2025-08-22 21:43:36,370 - slack_sdk.web.base_client - DEBUG - [base_client.py:546] - Received the following response - status: 200, headers: {'date': 'Sat, 23 Aug 2025 04:43:36 GMT', 'server': 'Apache', 'vary': 'Accept-Encoding', 'x-slack-req-id': '2f22316961a11486ccdb968ebb4d42f1', 'x-content-type-options': 'nosniff', 'x-xss-protection': '0', 'pragma': 'no-cache', 'cache-control': 'private, no-cache, no-store, must-revalidate', 'expires': 'Sat, 26 Jul 1997 05:00:00 GMT', 'content-type': 'application/json; charset=utf-8', 'x-accepted-oauth-scopes': 'chat:write', 'x-oauth-scopes': 'app_mentions:read,channels:history,chat:write,im:history,im:read,im:write,users:read,reactions:write,users:read.email', 'access-control-expose-headers': 'x-slack-req-id, retry-after', 'access-control-allow-headers': 'slack-route, x-slack-version-ts, x-b3-traceid, x-b3-spanid, x-b3-parentspanid, x-b3-sampled, x-b3-flags', 'strict-transport-security': 'max-age=31536000; includeSubDomains; preload', 'referrer-policy': 'no-referrer', 'x-slack-unique-id': 'aKlG-EHKollSACeWbS37SgAAEBM', 'x-slack-backend': 'r', 'access-control-allow-origin': '*', 'content-length': '5585', 'via': '1.1 slack-prod.tinyspeck.com, envoy-www-iad-nprmbzfl,envoy-edge-pdx-gaphmxml', 'x-envoy-attempt-count': '1', 'x-envoy-upstream-service-time': '172', 'x-backend': 'main_normal main_canary_with_overflow main_control_with_overflow', 'x-server': 'slack-www-hhvm-main-iad-zpiv', 'x-slack-shared-secret-outcome': 'no-match', 'x-edge-backend': 'envoy-www', 'timing-allow-origin': '*', 'x-slack-edge-shared-secret-outcome': 'no-match', 'connection': 'close'}, body: {"ok":true,"channel":"D09A0LFHK8R","ts":"1755924216.285159","message":{"user":"U099R6WTZ9S","type":"message","ts":"1755924216.285159","bot_id":"B099R6WTRU4","app_id":"A099LACAB2R","text":"Your Question:\n&gt; How to get access to jenkins?\n\nAnswer:\n\nTo get access to Jenkins, you will need to follow these steps:\n\n1.  GitHub Access (Prerequisite):\nYou must first have a GitHub account. You can create one via a new tile that should appear on your Okta tiles. Use your AD login credentials and your `@cbsinteractive.com` email address. Make sure to set up 2-factor authentication.\n       Alternatively, you can request access by posting in the `#i-centralops-github` Slack channel. State: \"Hello, may I please get added to the okta-para-github_viacomcbs.\"\n       For `mqe-pplus-tests` GitHub access, submit a Pitstop ticket using the provided template for \"mqe-pplus-tests - GitHub Access.\"\n       Access to the Functional QA Automation GitHub repo is also required.\n\n2.  VPN Access (Prerequisite):\nRequest VPN access by creating a ticket in PITStop.\n       Use your Paramount email/system login credentials to connect to the VPN.\n       Note that you might need to connect via `<http://connect.cbsinteractive.com/VPNFT|connect.cbsinteractive.com/VPNFT>` to access Jenkins.\n\n3.  Request Jenkins Access:\nYou can send an email to `<mailto:ateeque.haque@viacomcbs.com|ateeque.haque@viacomcbs.com>` to initiate the process.\n       If you need access to specific Jenkins projects (e.g., P+ INTL Build jobs like main pipeline, PR validator, or MQE jobs), specify these in your request along with your active directory username.\n       If you are unable to access Jenkins after following these instructions, create a request in the `#devops-support` Slack channel.\n\n4.  Verify Jenkins Access:\nOnce you believe you have access, go to `<https://build.viacom.com>` and log in using your email ID as your username and your OKTA password.\n       Confirm that you can access `<https://build.viacom.com/job/gqe/>`.\n\nAfter completing these steps, you should be able to log in to the `<http://build.viacom.com|build.viacom.com>` Jenkins server with your AD (Network) credentials.","team":"T010QS7UQNA","bot_profile":{"id":"B099R6WTRU4","app_id":"A099LACAB2R","user_id":"U099R6WTZ9S","name":"AutoBot","icons":{"image_36":"https://a.slack-edge.com/80588/img/plugins/app/bot_36.png","image_48":"https://a.slack-edge.com/80588/img/plugins/app/bot_48.png","image_72":"https://a.slack-edge.com/80588/img/plugins/app/service_72.png"},"deleted":false,"updated":1754677948,"team_id":"T010QS7UQNA"},"thread_ts":"1755924206.392669","parent_user_id":"U01RMTFMALF","blocks":[{"type":"rich_text","block_id":"gRj","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Your Question:"}]},{"type":"rich_text_quote","elements":[{"type":"text","text":"How to get access to jenkins?"}]},{"type":"rich_text_section","elements":[{"type":"text","text":"\n\nAnswer:\n\nTo get access to Jenkins, you will need to follow these steps:\n\n1.  GitHub Access (Prerequisite):\nYou must first have a GitHub account. You can create one via a new tile that should appear on your Okta tiles. Use your AD login credentials and your "},{"type":"text","text":"@cbsinteractive.com","style":{"code":true}},{"type":"text","text":" email address. Make sure to set up 2-factor authentication.\n       Alternatively, you can request access by posting in the "},{"type":"text","text":"#i-centralops-github","style":{"code":true}},{"type":"text","text":" Slack channel. State: \"Hello, may I please get added to the okta-para-github_viacomcbs.\"\n       For "},{"type":"text","text":"mqe-pplus-tests","style":{"code":true}},{"type":"text","text":" GitHub access, submit a Pitstop ticket using the provided template for \"mqe-pplus-tests - GitHub Access.\"\n       Access to the Functional QA Automation GitHub repo is also required.\n\n2.  VPN Access (Prerequisite):\nRequest VPN access by creating a ticket in PITStop.\n       Use your Paramount email/system login credentials to connect to the VPN.\n       Note that you might need to connect via "},{"type":"link","url":"http://connect.cbsinteractive.com/VPNFT","text":"connect.cbsinteractive.com/VPNFT","style":{"code":true}},{"type":"text","text":" to access Jenkins.\n\n3.  Request Jenkins Access:\nYou can send an email to "},{"type":"link","url":"mailto:ateeque.haque@viacomcbs.com","text":"ateeque.haque@viacomcbs.com","style":{"code":true}},{"type":"text","text":" to initiate the process.\n       If you need access to specific Jenkins projects (e.g., P+ INTL Build jobs like main pipeline, PR validator, or MQE jobs), specify these in your request along with your active directory username.\n       If you are unable to access Jenkins after following these instructions, create a request in the "},{"type":"text","text":"#devops-support","style":{"code":true}},{"type":"text","text":" Slack channel.\n\n4.  Verify Jenkins Access:\nOnce you believe you have access, go to "},{"type":"link","url":"https://build.viacom.com","style":{"code":true}},{"type":"text","text":" and log in using your email ID as your username and your OKTA password.\n       Confirm that you can access "},{"type":"link","url":"https://build.viacom.com/job/gqe/","style":{"code":true}},{"type":"text","text":".\n\nAfter completing these steps, you should be able to log in to the "},{"type":"link","url":"http://build.viacom.com","text":"build.viacom.com","style":{"code":true}},{"type":"text","text":" Jenkins server with your AD (Network) credentials."}]}]}]}}
2025-08-22 21:43:36,372 - __main__ - DEBUG - [main.py:648] - Cleaning up DM thread tracking...
2025-08-22 21:43:36,372 - utils - DEBUG - [utils.py:67] - Managing thread: D09A0LFHK8R:1755924206.392669, action: remove, user: U01RMTFMALF
2025-08-22 21:43:36,373 - utils - INFO - [utils.py:100] - Removed thread D09A0LFHK8R:1755924206.392669 from active tracking (remaining: 0)
2025-08-22 21:43:38,180 - slack_bolt.App - DEBUG - [client.py:235] - on_message invoked: (message: {"envelope_id":"f2f21fd7-9de8-4e07-a237-c5343848bd06","payload":{"token":"yq71khZBCyJF1Ri2hG5aNqr5","team_id":"T010QS7UQNA","enterprise_id":"ERV4P7NAD","context_team_id":null,"context_enterprise_id":"ERV4P7NAD","api_app_id":"A099LACAB2R","event":{"user":"U099R6WTZ9S","type":"message","ts":"1755924216.285159","bot_id":"B099R6WTRU4","app_id":"A099LACAB2R","text":"Your Question:\n&gt; How to get access to jenkins?\n\nAnswer:\n\nTo get access to Jenkins, you will need to follow these steps:\n\n1.  GitHub Access (Prerequisite):\nYou must first have a GitHub account. You can create one via a new tile that should appear on your Okta tiles. Use your AD login credentials and your `@cbsinteractive.com` email address. Make sure to set up 2-factor authentication.\n       Alternatively, you can request access by posting in the `#i-centralops-github` Slack channel. State: \"Hello, may I please get added to the okta-para-github_viacomcbs.\"\n       For `mqe-pplus-tests` GitHub access, submit a Pitstop ticket using the provided template for \"mqe-pplus-tests - GitHub Access.\"\n       Access to the Functional QA Automation GitHub repo is also required.\n\n2.  VPN Access (Prerequisite):\nRequest VPN access by creating a ticket in PITStop.\n       Use your Paramount email\/system login credentials to connect to the VPN.\n       Note that you might need to connect via `<http:\/\/connect.cbsinteractive.com\/VPNFT|connect.cbsinteractive.com\/VPNFT>` to access Jenkins.\n\n3.  Request Jenkins Access:\nYou can send an email to `<mailto:ateeque.haque@viacomcbs.com|ateeque.haque@viacomcbs.com>` to initiate the process.\n       If you need access to specific Jenkins projects (e.g., P+ INTL Build jobs like main pipeline, PR validator, or MQE jobs), specify these in your request along with your active directory username.\n       If you are unable to access Jenkins after following these instructions, create a request in the `#devops-support` Slack channel.\n\n4.  Verify Jenkins Access:\nOnce you believe you have access, go to `<https:\/\/build.viacom.com>` and log in using your email ID as your username and your OKTA password.\n       Confirm that you can access `<https:\/\/build.viacom.com\/job\/gqe\/>`.\n\nAfter completing these steps, you should be able to log in to the `<http:\/\/build.viacom.com|build.viacom.com>` Jenkins server with your AD (Network) credentials.","team":"T010QS7UQNA","bot_profile":{"id":"B099R6WTRU4","deleted":false,"name":"AutoBot","updated":1754677948,"app_id":"A099LACAB2R","user_id":"U099R6WTZ9S","icons":{"image_36":"https:\/\/a.slack-edge.com\/80588\/img\/plugins\/app\/bot_36.png","image_48":"https:\/\/a.slack-edge.com\/80588\/img\/plugins\/app\/bot_48.png","image_72":"https:\/\/a.slack-edge.com\/80588\/img\/plugins\/app\/service_72.png"},"team_id":"T010QS7UQNA"},"thread_ts":"1755924206.392669","parent_user_id":"U01RMTFMALF","blocks":[{"type":"rich_text","block_id":"Pe0gW","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Your Question:"}]},{"type":"rich_text_quote","elements":[{"type":"text","text":"How to get access to jenkins?"}]},{"type":"rich_text_section","elements":[{"type":"text","text":"\n\nAnswer:\n\nTo get access to Jenkins, you will need to follow these steps:\n\n1.  GitHub Access (Prerequisite):\nYou must first have a GitHub account. You can create one via a new tile that should appear on your Okta tiles. Use your AD login credentials and your "},{"type":"text","text":"@cbsinteractive.com","style":{"code":true}},{"type":"text","text":" email address. Make sure to set up 2-factor authentication.\n       Alternatively, you can request access by posting in the "},{"type":"text","text":"#i-centralops-github","style":{"code":true}},{"type":"text","text":" Slack channel. State: \"Hello, may I please get added to the okta-para-github_viacomcbs.\"\n       For "},{"type":"text","text":"mqe-pplus-tests","style":{"code":true}},{"type":"text","text":" GitHub access, submit a Pitstop ticket using the provided template for \"mqe-pplus-tests - GitHub Access.\"\n       Access to the Functional QA Automation GitHub repo is also required.\n\n2.  VPN Access (Prerequisite):\nRequest VPN access by creating a ticket in PITStop.\n       Use your Paramount email\/system login credentials to connect to the VPN.\n       Note that you might need to connect via "},{"type":"link","url":"http:\/\/connect.cbsinteractive.com\/VPNFT","text":"connect.cbsinteractive.com\/VPNFT","style":{"code":true}},{"type":"text","text":" to access Jenkins.\n\n3.  Request Jenkins Access:\nYou can send an email to "},{"type":"link","url":"mailto:ateeque.haque@viacomcbs.com","text":"ateeque.haque@viacomcbs.com","style":{"code":true}},{"type":"text","text":" to initiate the process.\n       If you need access to specific Jenkins projects (e.g., P+ INTL Build jobs like main pipeline, PR validator, or MQE jobs), specify these in your request along with your active directory username.\n       If you are unable to access Jenkins after following these instructions, create a request in the "},{"type":"text","text":"#devops-support","style":{"code":true}},{"type":"text","text":" Slack channel.\n\n4.  Verify Jenkins Access:\nOnce you believe you have access, go to "},{"type":"link","url":"https:\/\/build.viacom.com","style":{"code":true}},{"type":"text","text":" and log in using your email ID as your username and your OKTA password.\n       Confirm that you can access "},{"type":"link","url":"https:\/\/build.viacom.com\/job\/gqe\/","style":{"code":true}},{"type":"text","text":".\n\nAfter completing these steps, you should be able to log in to the "},{"type":"link","url":"http:\/\/build.viacom.com","text":"build.viacom.com","style":{"code":true}},{"type":"text","text":" Jenkins server with your AD (Network) credentials."}]}]}],"channel":"D09A0LFHK8R","event_ts":"1755924216.285159","channel_type":"im"},"type":"event_callback","event_id":"Ev09BK4PJXS7","event_time":1755924216,"authorizations":[{"enterprise_id":"ERV4P7NAD","team_id":"T010QS7UQNA","user_id":"U099R6WTZ9S","is_bot":true,"is_enterprise_install":false}],"is_ext_shared_channel":false,"event_context":"4-eyJldCI6Im1lc3NhZ2UiLCJ0aWQiOiJUMDEwUVM3VVFOQSIsImFpZCI6IkEwOTlMQUNBQjJSIiwiY2lkIjoiRDA5QTBMRkhLOFIifQ"},"type":"events_api","accepts_response_payload":false,"retry_attempt":0,"retry_reason":""})
2025-08-22 21:43:38,181 - slack_bolt.App - DEBUG - [client.py:99] - A new message enqueued (current queue size: 1)
2025-08-22 21:43:38,181 - slack_bolt.App - DEBUG - [client.py:105] - A message dequeued (current queue size: 0)
2025-08-22 21:43:38,181 - slack_bolt.App - DEBUG - [client.py:125] - Message processing started (type: events_api, envelope_id: f2f21fd7-9de8-4e07-a237-c5343848bd06)
2025-08-22 21:43:38,182 - slack_bolt.App - DEBUG - [app.py:476] - Applying slack_bolt.middleware.ssl_check.ssl_check.SslCheck
2025-08-22 21:43:38,182 - slack_bolt.App - DEBUG - [app.py:476] - Applying slack_bolt.middleware.request_verification.request_verification.RequestVerification
2025-08-22 21:43:38,182 - slack_bolt.App - DEBUG - [app.py:476] - Applying slack_bolt.middleware.authorization.single_team_authorization.SingleTeamAuthorization
2025-08-22 21:43:38,182 - slack_bolt.App - DEBUG - [app.py:476] - Applying slack_bolt.middleware.ignoring_self_events.ignoring_self_events.IgnoringSelfEvents
2025-08-22 21:43:38,182 - slack_bolt.IgnoringSelfEvents - DEBUG - [ignoring_self_events.py:60] - Skipped self event: {'user': 'U099R6WTZ9S', 'type': 'message', 'ts': '1755924216.285159', 'bot_id': 'B099R6WTRU4', 'app_id': 'A099LACAB2R', 'text': 'Your Question:\n&gt; How to get access to jenkins?\n\nAnswer:\n\nTo get access to Jenkins, you will need to follow these steps:\n\n1.  GitHub Access (Prerequisite):\nYou must first have a GitHub account. You can create one via a new tile that should appear on your Okta tiles. Use your AD login credentials and your `@cbsinteractive.com` email address. Make sure to set up 2-factor authentication.\n       Alternatively, you can request access by posting in the `#i-centralops-github` Slack channel. State: "Hello, may I please get added to the okta-para-github_viacomcbs."\n       For `mqe-pplus-tests` GitHub access, submit a Pitstop ticket using the provided template for "mqe-pplus-tests - GitHub Access."\n       Access to the Functional QA Automation GitHub repo is also required.\n\n2.  VPN Access (Prerequisite):\nRequest VPN access by creating a ticket in PITStop.\n       Use your Paramount email/system login credentials to connect to the VPN.\n       Note that you might need to connect via `<http://connect.cbsinteractive.com/VPNFT|connect.cbsinteractive.com/VPNFT>` to access Jenkins.\n\n3.  Request Jenkins Access:\nYou can send an email to `<mailto:ateeque.haque@viacomcbs.com|ateeque.haque@viacomcbs.com>` to initiate the process.\n       If you need access to specific Jenkins projects (e.g., P+ INTL Build jobs like main pipeline, PR validator, or MQE jobs), specify these in your request along with your active directory username.\n       If you are unable to access Jenkins after following these instructions, create a request in the `#devops-support` Slack channel.\n\n4.  Verify Jenkins Access:\nOnce you believe you have access, go to `<https://build.viacom.com>` and log in using your email ID as your username and your OKTA password.\n       Confirm that you can access `<https://build.viacom.com/job/gqe/>`.\n\nAfter completing these steps, you should be able to log in to the `<http://build.viacom.com|build.viacom.com>` Jenkins server with your AD (Network) credentials.', 'team': 'T010QS7UQNA', 'bot_profile': {'id': 'B099R6WTRU4', 'deleted': False, 'name': 'AutoBot', 'updated': 1754677948, 'app_id': 'A099LACAB2R', 'user_id': 'U099R6WTZ9S', 'icons': {'image_36': 'https://a.slack-edge.com/80588/img/plugins/app/bot_36.png', 'image_48': 'https://a.slack-edge.com/80588/img/plugins/app/bot_48.png', 'image_72': 'https://a.slack-edge.com/80588/img/plugins/app/service_72.png'}, 'team_id': 'T010QS7UQNA'}, 'thread_ts': '1755924206.392669', 'parent_user_id': 'U01RMTFMALF', 'blocks': [{'type': 'rich_text', 'block_id': 'Pe0gW', 'elements': [{'type': 'rich_text_section', 'elements': [{'type': 'text', 'text': 'Your Question:'}]}, {'type': 'rich_text_quote', 'elements': [{'type': 'text', 'text': 'How to get access to jenkins?'}]}, {'type': 'rich_text_section', 'elements': [{'type': 'text', 'text': '\n\nAnswer:\n\nTo get access to Jenkins, you will need to follow these steps:\n\n1.  GitHub Access (Prerequisite):\nYou must first have a GitHub account. You can create one via a new tile that should appear on your Okta tiles. Use your AD login credentials and your '}, {'type': 'text', 'text': '@cbsinteractive.com', 'style': {'code': True}}, {'type': 'text', 'text': ' email address. Make sure to set up 2-factor authentication.\n       Alternatively, you can request access by posting in the '}, {'type': 'text', 'text': '#i-centralops-github', 'style': {'code': True}}, {'type': 'text', 'text': ' Slack channel. State: "Hello, may I please get added to the okta-para-github_viacomcbs."\n       For '}, {'type': 'text', 'text': 'mqe-pplus-tests', 'style': {'code': True}}, {'type': 'text', 'text': ' GitHub access, submit a Pitstop ticket using the provided template for "mqe-pplus-tests - GitHub Access."\n       Access to the Functional QA Automation GitHub repo is also required.\n\n2.  VPN Access (Prerequisite):\nRequest VPN access by creating a ticket in PITStop.\n       Use your Paramount email/system login credentials to connect to the VPN.\n       Note that you might need to connect via '}, {'type': 'link', 'url': 'http://connect.cbsinteractive.com/VPNFT', 'text': 'connect.cbsinteractive.com/VPNFT', 'style': {'code': True}}, {'type': 'text', 'text': ' to access Jenkins.\n\n3.  Request Jenkins Access:\nYou can send an email to '}, {'type': 'link', 'url': 'mailto:ateeque.haque@viacomcbs.com', 'text': 'ateeque.haque@viacomcbs.com', 'style': {'code': True}}, {'type': 'text', 'text': ' to initiate the process.\n       If you need access to specific Jenkins projects (e.g., P+ INTL Build jobs like main pipeline, PR validator, or MQE jobs), specify these in your request along with your active directory username.\n       If you are unable to access Jenkins after following these instructions, create a request in the '}, {'type': 'text', 'text': '#devops-support', 'style': {'code': True}}, {'type': 'text', 'text': ' Slack channel.\n\n4.  Verify Jenkins Access:\nOnce you believe you have access, go to '}, {'type': 'link', 'url': 'https://build.viacom.com', 'style': {'code': True}}, {'type': 'text', 'text': ' and log in using your email ID as your username and your OKTA password.\n       Confirm that you can access '}, {'type': 'link', 'url': 'https://build.viacom.com/job/gqe/', 'style': {'code': True}}, {'type': 'text', 'text': '.\n\nAfter completing these steps, you should be able to log in to the '}, {'type': 'link', 'url': 'http://build.viacom.com', 'text': 'build.viacom.com', 'style': {'code': True}}, {'type': 'text', 'text': ' Jenkins server with your AD (Network) credentials.'}]}]}], 'channel': 'D09A0LFHK8R', 'event_ts': '1755924216.285159', 'channel_type': 'im'}
2025-08-22 21:43:38,182 - slack_bolt.App - DEBUG - [client.py:200] - Sending a message (session id: 3f770b4f-1c8a-43f7-a519-958dceafdffa, message: {"envelope_id": "f2f21fd7-9de8-4e07-a237-c5343848bd06"})
2025-08-22 21:43:38,182 - slack_bolt.App - DEBUG - [internals.py:41] - Response time: 0 milliseconds
2025-08-22 21:43:38,182 - slack_bolt.App - DEBUG - [client.py:150] - Message processing completed (type: events_api, envelope_id: f2f21fd7-9de8-4e07-a237-c5343848bd06)
2025-08-22 21:45:44,092 - __main__ - INFO - [main.py:43] - Loading application configuration...
2025-08-22 21:45:44,092 - __main__ - INFO - [main.py:45] - Configuration loaded successfully
2025-08-22 21:45:44,092 - __main__ - INFO - [main.py:48] - Initializing security components...
2025-08-22 21:45:44,092 - __main__ - DEBUG - [main.py:50] - Slack validator initialized
2025-08-22 21:45:44,092 - security.content_filter - INFO - [content_filter.py:39] - Content filter initialized with 11 patterns
2025-08-22 21:45:44,092 - __main__ - DEBUG - [main.py:53] - Content filter initialized
2025-08-22 21:45:44,092 - auth.admin_manager - INFO - [admin_manager.py:27] - Admin manager initialized with 2 admin users
2025-08-22 21:45:44,092 - __main__ - DEBUG - [main.py:56] - Admin manager initialized
2025-08-22 21:45:44,092 - auth.email_whitelist - INFO - [email_whitelist.py:28] - Email whitelist initialized with 1 whitelisted emails
2025-08-22 21:45:44,092 - auth.email_whitelist - INFO - [email_whitelist.py:37] - Whitelisted domains: paramount.com
2025-08-22 21:45:44,092 - __main__ - DEBUG - [main.py:59] - Email whitelist initialized with 1 emails
2025-08-22 21:45:44,092 - auth.slack_user_info - DEBUG - [slack_user_info.py:25] - Slack user info manager initialized
2025-08-22 21:45:44,092 - __main__ - DEBUG - [main.py:62] - Slack user info manager initialized
2025-08-22 21:45:44,092 - __main__ - INFO - [main.py:63] - Security components initialized successfully
2025-08-22 21:45:44,092 - __main__ - INFO - [main.py:66] - Initializing Slack app...
2025-08-22 21:45:44,130 - slack_bolt.App - DEBUG - [base_client.py:255] - Sending a request - url: https://slack.com/api/auth.test, query_params: {}, body_params: {}, files: {}, json_body: None, headers: {'Content-Type': 'application/x-www-form-urlencoded', 'Authorization': '(redacted)', 'User-Agent': 'Bolt/1.16.0 Python/3.12.0 slackclient/3.34.0 Darwin/23.4.0'}
2025-08-22 21:45:44,503 - slack_bolt.App - DEBUG - [base_client.py:546] - Received the following response - status: 200, headers: {'date': 'Sat, 23 Aug 2025 04:45:44 GMT', 'server': 'Apache', 'vary': 'Accept-Encoding', 'x-slack-req-id': 'ac8ca6d815cbb51c5a3c2c7ba1ce83f1', 'x-content-type-options': 'nosniff', 'x-xss-protection': '0', 'pragma': 'no-cache', 'cache-control': 'private, no-cache, no-store, must-revalidate', 'expires': 'Sat, 26 Jul 1997 05:00:00 GMT', 'content-type': 'application/json; charset=utf-8', 'x-oauth-scopes': 'app_mentions:read,channels:history,chat:write,im:history,im:read,im:write,users:read,reactions:write,users:read.email', 'access-control-expose-headers': 'x-slack-req-id, retry-after', 'access-control-allow-headers': 'slack-route, x-slack-version-ts, x-b3-traceid, x-b3-spanid, x-b3-parentspanid, x-b3-sampled, x-b3-flags', 'strict-transport-security': 'max-age=31536000; includeSubDomains; preload', 'referrer-policy': 'no-referrer', 'x-slack-unique-id': 'aKlHeAf-nFC4zGHP5LYkcQAAEAs', 'x-slack-backend': 'r', 'access-control-allow-origin': '*', 'content-length': '228', 'via': '1.1 slack-prod.tinyspeck.com, envoy-www-iad-xxmesyes,envoy-edge-pdx-xxsdhedu', 'x-envoy-attempt-count': '1', 'x-envoy-upstream-service-time': '83', 'x-backend': 'main_normal main_canary_with_overflow main_control_with_overflow', 'x-server': 'slack-www-hhvm-main-iad-urby', 'x-slack-shared-secret-outcome': 'no-match', 'x-edge-backend': 'envoy-www', 'timing-allow-origin': '*', 'x-slack-edge-shared-secret-outcome': 'no-match', 'connection': 'close'}, body: {"ok":true,"url":"https://viacomcbs-grid-test.slack.com/","team":"Test Workspace","user":"autobot","team_id":"T010QS7UQNA","user_id":"U099R6WTZ9S","bot_id":"B099R6WTRU4","enterprise_id":"ERV4P7NAD","is_enterprise_install":false}
2025-08-22 21:45:44,503 - __main__ - INFO - [main.py:68] - Slack app initialized successfully
2025-08-22 21:45:44,504 - __main__ - DEBUG - [main.py:72] - Message deduplication cache initialized
2025-08-22 21:45:44,504 - __main__ - DEBUG - [main.py:77] - Thread tracking initialized
2025-08-22 21:45:44,504 - __main__ - INFO - [main.py:80] - Initializing DIG AI integration...
2025-08-22 21:45:44,504 - dig_connector - INFO - [dig_connector.py:284] - Initializing DIG AI with model ID: 42
2025-08-22 21:45:44,504 - dig_connector - INFO - [dig_connector.py:49] - Starting DIG chat session initialization...
2025-08-22 21:45:44,504 - dig_connector - DEBUG - [dig_connector.py:52] - Creating chat with name: Slack Bot Session 2025-08-23T04:45:44.504903+00:00
2025-08-22 21:45:44,505 - dig_connector - DEBUG - [dig_connector.py:63] - Creating chat - URL: https://ai.digdev.cbsicloud.com/fastapi/chats, Payload: {'chat_nm': 'Slack Bot Session 2025-08-23T04:45:44.504903+00:00', 'model_id': 42}
2025-08-22 21:45:44,509 - urllib3.connectionpool - DEBUG - [connectionpool.py:1055] - Starting new HTTPS connection (1): ai.digdev.cbsicloud.com:443
2025-08-22 21:45:44,799 - urllib3.connectionpool - DEBUG - [connectionpool.py:549] - https://ai.digdev.cbsicloud.com:443 "POST /fastapi/chats HTTP/1.1" 200 217
2025-08-22 21:45:44,799 - dig_connector - DEBUG - [dig_connector.py:66] - Create chat response: status=200
2025-08-22 21:45:44,800 - dig_connector - INFO - [dig_connector.py:54] - Successfully initialized DIG chat session with ID: 897
2025-08-22 21:45:44,800 - __main__ - INFO - [main.py:83] - DIG AI integration successfully initialized
2025-08-22 21:45:44,800 - __main__ - INFO - [main.py:87] - Setting up event handlers...
2025-08-22 21:45:44,801 - __main__ - INFO - [main.py:757] - Starting AI Assistant Bot...
2025-08-22 21:45:44,802 - __main__ - INFO - [main.py:758] - Registering event handlers...
2025-08-22 21:45:44,802 - __main__ - DEBUG - [main.py:759] - Event handlers registered: app_mention, message, app_home_opened
2025-08-22 21:45:44,802 - __main__ - INFO - [main.py:762] - Connecting to Slack via Socket Mode...
2025-08-22 21:45:44,802 - __main__ - INFO - [main.py:766] - Socket Mode handler created successfully
2025-08-22 21:45:44,802 - __main__ - INFO - [main.py:768] - ✅ Bot is now running and listening for events!
2025-08-22 21:45:44,802 - slack_bolt.App - DEBUG - [base_client.py:255] - Sending a request - url: https://slack.com/api/apps.connections.open, query_params: {}, body_params: {}, files: {}, json_body: None, headers: {'Content-Type': 'application/x-www-form-urlencoded', 'Authorization': '(redacted)', 'User-Agent': 'Bolt/1.16.0 Python/3.12.0 slackclient/3.34.0 Darwin/23.4.0'}
2025-08-22 21:45:45,073 - slack_bolt.App - DEBUG - [base_client.py:546] - Received the following response - status: 200, headers: {'date': 'Sat, 23 Aug 2025 04:45:45 GMT', 'server': 'Apache', 'vary': 'Accept-Encoding', 'x-slack-req-id': 'a737c21af911d208e49cd46143808e36', 'x-content-type-options': 'nosniff', 'x-xss-protection': '0', 'x-robots-tag': 'noindex,nofollow', 'pragma': 'no-cache', 'cache-control': 'private, no-cache, no-store, must-revalidate', 'expires': 'Sat, 26 Jul 1997 05:00:00 GMT', 'content-type': 'application/json; charset=utf-8', 'x-accepted-oauth-scopes': 'connections:write', 'x-oauth-scopes': 'connections:write', 'access-control-expose-headers': 'x-slack-req-id, retry-after', 'access-control-allow-headers': 'slack-route, x-slack-version-ts, x-b3-traceid, x-b3-spanid, x-b3-parentspanid, x-b3-sampled, x-b3-flags', 'strict-transport-security': 'max-age=31536000; includeSubDomains; preload', 'referrer-policy': 'no-referrer', 'x-slack-unique-id': 'aKlHeRsnrYdvE54ktCAocgAAABY', 'x-slack-backend': 'r', 'access-control-allow-origin': '*', 'content-length': '173', 'via': '1.1 slack-prod.tinyspeck.com, envoy-www-iad-zvaybvjt,envoy-edge-pdx-uvuwcfvj', 'x-envoy-attempt-count': '1', 'x-envoy-upstream-service-time': '76', 'x-backend': 'main_normal main_canary_with_overflow main_control_with_overflow', 'x-server': 'slack-www-hhvm-main-iad-wmeu', 'x-slack-shared-secret-outcome': 'no-match', 'x-edge-backend': 'envoy-www', 'timing-allow-origin': '*', 'x-slack-edge-shared-secret-outcome': 'no-match', 'connection': 'close'}, body: {"ok":true,"url":"wss:\/\/wss-primary.slack.com\/link\/?ticket=4333c4c1-39d7-4812-bd22-eba03ef49b78&app_id=a6c8d361ee1c6f398c5b4afec831555b78d7affa753b16bcc0fc64d7c13f3766"}
2025-08-22 21:45:45,578 - slack_bolt.App - INFO - [client.py:192] - A new session has been established (session id: 8d26ec11-e772-40a7-8077-9bc9ec2ed180)
2025-08-22 21:45:45,578 - slack_bolt.App - INFO - [base_handler.py:50] - ⚡️ Bolt app is running!
2025-08-22 21:45:45,630 - slack_bolt.App - INFO - [client.py:265] - Starting to receive messages from a new connection (session id: 8d26ec11-e772-40a7-8077-9bc9ec2ed180)
2025-08-22 21:45:45,631 - slack_bolt.App - DEBUG - [client.py:235] - on_message invoked: (message: {"type":"hello","num_connections":1,"debug_info":{"host":"applink-9","build_number":0,"approximate_connection_time":18060},"connection_info":{"app_id":"A099LACAB2R"}})
2025-08-22 21:45:45,632 - slack_bolt.App - DEBUG - [client.py:99] - A new message enqueued (current queue size: 1)
2025-08-22 21:45:45,632 - slack_bolt.App - DEBUG - [client.py:105] - A message dequeued (current queue size: 0)
2025-08-22 21:45:45,634 - slack_bolt.App - DEBUG - [client.py:125] - Message processing started (type: hello, envelope_id: None)
2025-08-22 21:45:45,635 - slack_bolt.App - DEBUG - [client.py:150] - Message processing completed (type: hello, envelope_id: None)
2025-08-22 21:45:51,772 - slack_bolt.App - DEBUG - [client.py:235] - on_message invoked: (message: {"envelope_id":"ac5dfcfb-be6a-434e-a565-f2225025a0c1","payload":{"token":"yq71khZBCyJF1Ri2hG5aNqr5","team_id":"T010QS7UQNA","enterprise_id":"ERV4P7NAD","context_team_id":null,"context_enterprise_id":"ERV4P7NAD","api_app_id":"A099LACAB2R","event":{"user":"U01RMTFMALF","type":"message","ts":"1755924350.906339","client_msg_id":"70913e75-0079-4405-b199-eee513f40d67","text":"How to get access to jenkins?","blocks":[{"type":"rich_text","block_id":"jBTYB","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"How to get access to jenkins?"}]}]}],"channel":"D09A0LFHK8R","event_ts":"1755924350.906339","channel_type":"im"},"type":"event_callback","event_id":"Ev09BPRETCSW","event_time":1755924350,"authorizations":[{"enterprise_id":"ERV4P7NAD","team_id":"T010QS7UQNA","user_id":"U099R6WTZ9S","is_bot":true,"is_enterprise_install":false}],"is_ext_shared_channel":false,"event_context":"4-eyJldCI6Im1lc3NhZ2UiLCJ0aWQiOiJUMDEwUVM3VVFOQSIsImFpZCI6IkEwOTlMQUNBQjJSIiwiY2lkIjoiRDA5QTBMRkhLOFIifQ"},"type":"events_api","accepts_response_payload":false,"retry_attempt":0,"retry_reason":""})
2025-08-22 21:45:51,773 - slack_bolt.App - DEBUG - [client.py:99] - A new message enqueued (current queue size: 1)
2025-08-22 21:45:51,773 - slack_bolt.App - DEBUG - [client.py:105] - A message dequeued (current queue size: 0)
2025-08-22 21:45:51,773 - slack_bolt.App - DEBUG - [client.py:125] - Message processing started (type: events_api, envelope_id: ac5dfcfb-be6a-434e-a565-f2225025a0c1)
2025-08-22 21:45:51,774 - slack_bolt.App - DEBUG - [app.py:476] - Applying slack_bolt.middleware.ssl_check.ssl_check.SslCheck
2025-08-22 21:45:51,774 - slack_bolt.App - DEBUG - [app.py:476] - Applying slack_bolt.middleware.request_verification.request_verification.RequestVerification
2025-08-22 21:45:51,774 - slack_bolt.App - DEBUG - [app.py:476] - Applying slack_bolt.middleware.authorization.single_team_authorization.SingleTeamAuthorization
2025-08-22 21:45:51,774 - slack_bolt.App - DEBUG - [app.py:476] - Applying slack_bolt.middleware.ignoring_self_events.ignoring_self_events.IgnoringSelfEvents
2025-08-22 21:45:51,774 - slack_bolt.App - DEBUG - [app.py:476] - Applying slack_bolt.middleware.url_verification.url_verification.UrlVerification
2025-08-22 21:45:51,774 - slack_bolt.App - DEBUG - [app.py:500] - Checking listener: handle_app_mentions ...
2025-08-22 21:45:51,774 - slack_bolt.App - DEBUG - [app.py:500] - Checking listener: help_message ...
2025-08-22 21:45:51,774 - slack_bolt.App - DEBUG - [app.py:500] - Checking listener: handle_dm_messages ...
2025-08-22 21:45:51,774 - slack_bolt.App - DEBUG - [app.py:522] - Running listener: handle_dm_messages ...
2025-08-22 21:45:51,775 - __main__ - INFO - [main.py:507] - === DM MESSAGE EVENT RECEIVED ===
2025-08-22 21:45:51,775 - slack_bolt.App - DEBUG - [thread_runner.py:198] - Responding with status: 200 body: "" (0 millis)
2025-08-22 21:45:51,775 - __main__ - DEBUG - [main.py:508] - Full event body: {'token': 'yq71khZBCyJF1Ri2hG5aNqr5', 'team_id': 'T010QS7UQNA', 'enterprise_id': 'ERV4P7NAD', 'context_team_id': None, 'context_enterprise_id': 'ERV4P7NAD', 'api_app_id': 'A099LACAB2R', 'event': {'user': 'U01RMTFMALF', 'type': 'message', 'ts': '1755924350.906339', 'client_msg_id': '70913e75-0079-4405-b199-eee513f40d67', 'text': 'How to get access to jenkins?', 'blocks': [{'type': 'rich_text', 'block_id': 'jBTYB', 'elements': [{'type': 'rich_text_section', 'elements': [{'type': 'text', 'text': 'How to get access to jenkins?'}]}]}], 'channel': 'D09A0LFHK8R', 'event_ts': '1755924350.906339', 'channel_type': 'im'}, 'type': 'event_callback', 'event_id': 'Ev09BPRETCSW', 'event_time': 1755924350, 'authorizations': [{'enterprise_id': 'ERV4P7NAD', 'team_id': 'T010QS7UQNA', 'user_id': 'U099R6WTZ9S', 'is_bot': True, 'is_enterprise_install': False}], 'is_ext_shared_channel': False, 'event_context': '4-eyJldCI6Im1lc3NhZ2UiLCJ0aWQiOiJUMDEwUVM3VVFOQSIsImFpZCI6IkEwOTlMQUNBQjJSIiwiY2lkIjoiRDA5QTBMRkhLOFIifQ'}
2025-08-22 21:45:51,775 - slack_bolt.App - DEBUG - [client.py:200] - Sending a message (session id: 8d26ec11-e772-40a7-8077-9bc9ec2ed180, message: {"envelope_id": "ac5dfcfb-be6a-434e-a565-f2225025a0c1"})
2025-08-22 21:45:51,775 - __main__ - INFO - [main.py:517] - DM Event details: channel=D09A0LFHK8R, user=U01RMTFMALF, ts=1755924350.906339
2025-08-22 21:45:51,775 - __main__ - DEBUG - [main.py:518] - DM Event text: How to get access to jenkins?
2025-08-22 21:45:51,775 - utils - DEBUG - [utils.py:27] - Checking message processing: channel=D09A0LFHK8R, ts=1755924350.906339, text='How to get access to jenkins?...'
2025-08-22 21:45:51,775 - slack_bolt.App - DEBUG - [internals.py:41] - Response time: 1 milliseconds
2025-08-22 21:45:51,775 - utils - DEBUG - [utils.py:31] - Message hash: d2d546bc997416317457ebf8869d6a10
2025-08-22 21:45:51,776 - slack_bolt.App - DEBUG - [client.py:150] - Message processing completed (type: events_api, envelope_id: ac5dfcfb-be6a-434e-a565-f2225025a0c1)
2025-08-22 21:45:51,776 - utils - DEBUG - [utils.py:53] - Added message to processing cache (total entries: 1)
2025-08-22 21:45:51,776 - __main__ - DEBUG - [main.py:531] - Bot check: bot_id=None, user_id=U01RMTFMALF
2025-08-22 21:45:51,776 - __main__ - DEBUG - [main.py:536] - Question received: 'How to get access to jenkins?'
2025-08-22 21:45:51,776 - __main__ - DEBUG - [main.py:542] - Checking user access for DM...
2025-08-22 21:45:51,776 - auth.slack_user_info - DEBUG - [slack_user_info.py:48] - Fetching user info for user_id: U01RMTFMALF
2025-08-22 21:45:51,776 - slack_sdk.web.base_client - DEBUG - [base_client.py:255] - Sending a request - url: https://slack.com/api/users.info, query_params: {}, body_params: {'user': 'U01RMTFMALF', 'team_id': 'T010QS7UQNA'}, files: {}, json_body: None, headers: {'Content-Type': 'application/x-www-form-urlencoded', 'Authorization': '(redacted)', 'User-Agent': 'Python/3.12.0 slackclient/3.34.0 Darwin/23.4.0'}
2025-08-22 21:45:52,209 - slack_sdk.web.base_client - DEBUG - [base_client.py:546] - Received the following response - status: 200, headers: {'date': 'Sat, 23 Aug 2025 04:45:52 GMT', 'server': 'Apache', 'vary': 'Accept-Encoding', 'x-slack-req-id': '90ba3fb6269bae9f75ac3bd5fe70bb41', 'x-content-type-options': 'nosniff', 'x-xss-protection': '0', 'pragma': 'no-cache', 'cache-control': 'private, no-cache, no-store, must-revalidate', 'expires': 'Sat, 26 Jul 1997 05:00:00 GMT', 'content-type': 'application/json; charset=utf-8', 'x-accepted-oauth-scopes': 'users:read', 'x-oauth-scopes': 'app_mentions:read,channels:history,chat:write,im:history,im:read,im:write,users:read,reactions:write,users:read.email', 'access-control-expose-headers': 'x-slack-req-id, retry-after', 'access-control-allow-headers': 'slack-route, x-slack-version-ts, x-b3-traceid, x-b3-spanid, x-b3-parentspanid, x-b3-sampled, x-b3-flags', 'strict-transport-security': 'max-age=31536000; includeSubDomains; preload', 'referrer-policy': 'no-referrer', 'x-slack-unique-id': 'aKlHgJorhwJITF64MthkQQAAEAI', 'x-slack-backend': 'r', 'access-control-allow-origin': '*', 'content-length': '2057', 'via': '1.1 slack-prod.tinyspeck.com, envoy-www-iad-awnkztrd,envoy-edge-pdx-sqjmrtwy', 'x-envoy-attempt-count': '1', 'x-envoy-upstream-service-time': '88', 'x-backend': 'main_normal main_canary_with_overflow main_control_with_overflow', 'x-server': 'slack-www-hhvm-main-iad-fgwc', 'x-slack-shared-secret-outcome': 'no-match', 'x-edge-backend': 'envoy-www', 'timing-allow-origin': '*', 'x-slack-edge-shared-secret-outcome': 'no-match', 'connection': 'close'}, body: {"ok":true,"user":{"id":"U01RMTFMALF","name":"popov8533","is_bot":false,"updated":1755907280,"is_app_user":false,"team_id":"T010QS7UQNA","deleted":false,"color":"4bbe2e","is_email_confirmed":true,"real_name":"Alexandr Popov","tz":"America\/Los_Angeles","tz_label":"Pacific Daylight Time","tz_offset":-25200,"is_admin":false,"is_owner":false,"is_primary_owner":false,"is_restricted":false,"is_ultra_restricted":false,"enterprise_user":{"id":"U01RMTFMALF","enterprise_id":"ERV4P7NAD","enterprise_name":"Paramount Global","is_admin":false,"is_owner":false,"is_primary_owner":false,"teams":["T010QS7UQNA","T02H1PQMF"]},"who_can_share_contact_card":"EVERYONE","profile":{"real_name":"Alexandr Popov","display_name":"Alex Popov","avatar_hash":"a64f82312a14","real_name_normalized":"Alexandr Popov","display_name_normalized":"Alex Popov","image_24":"https:\/\/avatars.slack-edge.com\/2023-03-29\/5033076824964_a64f82312a141123fbbf_24.png","image_32":"https:\/\/avatars.slack-edge.com\/2023-03-29\/5033076824964_a64f82312a141123fbbf_32.png","image_48":"https:\/\/avatars.slack-edge.com\/2023-03-29\/5033076824964_a64f82312a141123fbbf_48.png","image_72":"https:\/\/avatars.slack-edge.com\/2023-03-29\/5033076824964_a64f82312a141123fbbf_72.png","image_192":"https:\/\/avatars.slack-edge.com\/2023-03-29\/5033076824964_a64f82312a141123fbbf_192.png","image_512":"https:\/\/avatars.slack-edge.com\/2023-03-29\/5033076824964_a64f82312a141123fbbf_512.png","image_1024":"https:\/\/avatars.slack-edge.com\/2023-03-29\/5033076824964_a64f82312a141123fbbf_1024.png","image_original":"https:\/\/avatars.slack-edge.com\/2023-03-29\/5033076824964_a64f82312a141123fbbf_original.png","is_custom_image":true,"first_name":"Alexandr","last_name":"Popov","team":"T010QS7UQNA","email":"alexandr.popov@paramount.com","title":"Senior Software Quality Assurance Engineer","phone":"","skype":"","status_text":"","status_text_canonical":"","status_emoji":"","status_emoji_display_info":[],"status_expiration":0,"huddle_state":"default_unset","huddle_state_expiration_ts":0,"ooo_message":""}}}
2025-08-22 21:45:52,210 - auth.slack_user_info - DEBUG - [slack_user_info.py:63] - Retrieved email for user U01RMTFMALF: alexandr.popov@paramount.com
2025-08-22 21:45:52,210 - auth.email_whitelist - DEBUG - [email_whitelist.py:57] - Email access granted: alexandr.popov@paramount.com
2025-08-22 21:45:52,210 - __main__ - INFO - [main.py:118] - Access granted to user U01RMTFMALF with email alexandr.popov@paramount.com
2025-08-22 21:45:52,210 - __main__ - DEBUG - [main.py:548] - User access check passed for DM
2025-08-22 21:45:52,210 - __main__ - INFO - [main.py:550] - Processing DM question from user U01RMTFMALF: How to get access to jenkins?
2025-08-22 21:45:52,210 - __main__ - DEBUG - [main.py:553] - Starting DM processing...
2025-08-22 21:45:52,210 - __main__ - DEBUG - [main.py:556] - Checking if 'how to get access to jenkins?' is an admin command in DM
2025-08-22 21:45:52,210 - __main__ - DEBUG - [main.py:592] - Checking if DM thread is already being processed...
2025-08-22 21:45:52,210 - utils - DEBUG - [utils.py:67] - Managing thread: D09A0LFHK8R:1755924350.906339, action: add, user: U01RMTFMALF
2025-08-22 21:45:52,210 - utils - INFO - [utils.py:94] - Added thread D09A0LFHK8R:1755924350.906339 to active tracking (total: 1)
2025-08-22 21:45:52,210 - __main__ - DEBUG - [main.py:597] - DM thread management check passed
2025-08-22 21:45:52,210 - slack_sdk.web.base_client - DEBUG - [base_client.py:255] - Sending a request - url: https://slack.com/api/reactions.add, query_params: {}, body_params: {'channel': 'D09A0LFHK8R', 'name': 'thinking_face', 'timestamp': '1755924350.906339', 'team_id': 'T010QS7UQNA'}, files: {}, json_body: None, headers: {'Content-Type': 'application/x-www-form-urlencoded', 'Authorization': '(redacted)', 'User-Agent': 'Python/3.12.0 slackclient/3.34.0 Darwin/23.4.0'}
2025-08-22 21:45:52,665 - slack_sdk.web.base_client - DEBUG - [base_client.py:546] - Received the following response - status: 200, headers: {'date': 'Sat, 23 Aug 2025 04:45:52 GMT', 'server': 'Apache', 'vary': 'Accept-Encoding', 'x-slack-req-id': 'ca8a0eb48fc1a8fb5ec42472e011fa39', 'x-content-type-options': 'nosniff', 'x-xss-protection': '0', 'pragma': 'no-cache', 'cache-control': 'private, no-cache, no-store, must-revalidate', 'expires': 'Sat, 26 Jul 1997 05:00:00 GMT', 'content-type': 'application/json; charset=utf-8', 'x-accepted-oauth-scopes': 'reactions:write', 'x-oauth-scopes': 'app_mentions:read,channels:history,chat:write,im:history,im:read,im:write,users:read,reactions:write,users:read.email', 'access-control-expose-headers': 'x-slack-req-id, retry-after', 'access-control-allow-headers': 'slack-route, x-slack-version-ts, x-b3-traceid, x-b3-spanid, x-b3-parentspanid, x-b3-sampled, x-b3-flags', 'strict-transport-security': 'max-age=31536000; includeSubDomains; preload', 'referrer-policy': 'no-referrer', 'x-slack-unique-id': 'aKlHgMxgxHw8rRjKJozoLQAAADU', 'x-slack-backend': 'r', 'access-control-allow-origin': '*', 'content-length': '11', 'via': '1.1 slack-prod.tinyspeck.com, envoy-www-iad-vvpuixnu,envoy-edge-pdx-asfdojeb', 'x-envoy-attempt-count': '1', 'x-envoy-upstream-service-time': '153', 'x-backend': 'main_normal main_canary_with_overflow main_control_with_overflow', 'x-server': 'slack-www-hhvm-main-iad-fycp', 'x-slack-shared-secret-outcome': 'no-match', 'x-edge-backend': 'envoy-www', 'timing-allow-origin': '*', 'x-slack-edge-shared-secret-outcome': 'no-match', 'connection': 'close'}, body: {"ok":true}
2025-08-22 21:45:52,665 - __main__ - INFO - [main.py:614] - Processing DM question from <@U01RMTFMALF>: How to get access to jenkins?
2025-08-22 21:45:52,665 - __main__ - INFO - [main.py:618] - Sending DM request to DIG AI...
2025-08-22 21:45:52,666 - dig_connector - INFO - [dig_connector.py:134] - Generating response for query: 'How to get access to jenkins?' with 0 chunks
2025-08-22 21:45:52,666 - dig_connector - DEBUG - [dig_connector.py:138] - Formatted context length: 0
2025-08-22 21:45:52,666 - dig_connector - INFO - [dig_connector.py:141] - No context available, using direct query
2025-08-22 21:45:52,666 - dig_connector - INFO - [dig_connector.py:150] - Sending prompt to DIG platform...
2025-08-22 21:45:52,666 - dig_connector - INFO - [dig_connector.py:121] - Sending message to DIG API - URL: https://ai.digdev.cbsicloud.com/fastapi/chats/897/generate
2025-08-22 21:45:52,666 - dig_connector - DEBUG - [dig_connector.py:122] - Message payload: {'model_id': 42, 'message_text': 'How to get access to jenkins?', 'history': [{'role': 'user', 'content': 'How to get access to jenkins?'}]}
2025-08-22 21:45:59,659 - urllib3.connectionpool - DEBUG - [connectionpool.py:549] - https://ai.digdev.cbsicloud.com:443 "POST /fastapi/chats/897/generate HTTP/1.1" 200 2313
2025-08-22 21:45:59,660 - dig_connector - DEBUG - [dig_connector.py:125] - DIG API response: status=200
2025-08-22 21:45:59,660 - dig_connector - DEBUG - [dig_connector.py:129] - DIG API response data: {'message_text': "To get access to Jenkins, you'll first need to ensure you have VPN access and a GitHub account.\n\n**Prerequisites:**\n*   **VPN Access:** Request VPN access by creating a ticket in PITStop. You'll use your Paramount email/system login credentials to connect. (Source: https://paramount.atlassian.net/wiki/spaces/PLQA/pages/132128728)\n*   **GitHub Account:** Due to recent configuration changes, you need a GitHub account to access Jenkins. (Source: https://paramount.atlassian.net/wiki/spaces/PLQA/pages/47714226)\n\n**Requesting Jenkins Access:**\n\n1.  **Via Slack:** You can submit your request in the #i-centralops-github channel in Slack. Post a request asking to be added to **okta-para-github_viacomcbs**. Someone in the channel who controls access will grant you permission and inform you within a thread on your post. (Source: https://paramount.atlassian.net/wiki/spaces/PLQA/pages/178426346)\n2.  **Via Email (older method, may still be relevant):** Send an email to ateeque.haque@viacomcbs.com to start the process. (Source: https://paramount.atlassian.net/wiki/spaces/PLQA/pages/47714226)\n3.  **For Specific Jenkins Projects:** If you need access to listed Jenkins projects, provide the active directory usernames to create `build.viacom.com` accounts and grant access to the specific P+ INTL Build jobs. If you don't get access after following instructions, create a request in the #devops-support Slack channel. (Source: https://paramount.atlassian.net/wiki/spaces/PLQA/pages/433660722)\n\n**Verifying Jenkins Access:**\n\n1.  Open https://build.viacom.com and log in to Jenkins using your email ID as your username and your OKTA password.\n2.  Once logged in, check if you can access https://build.viacom.com/job/gqe/. (Source: https://paramount.atlassian.net/wiki/spaces/PLQA/pages/132128728)\n\n**Important Notes:**\n*   You may need to connect to the VPN via `http://connect.cbsinteractive.com/VPNFT` to access Jenkins. (Source: https://paramount.atlassian.net/wiki/spaces/PLQA/pages/47714226)\n*   You might need to sign in to Jenkins using your GitHub username/password or your network credentials. You may also need to authorize access to Paramount+. (Source: https://paramount.atlassian.net/wiki/spaces/PLQA/pages/47714226)", 'requires_approval': False, 'execution_id': 1601}
2025-08-22 21:45:59,660 - dig_connector - INFO - [dig_connector.py:154] - Extracting response content...
2025-08-22 21:45:59,660 - dig_connector - DEBUG - [dig_connector.py:221] - Found message_text in response
2025-08-22 21:45:59,660 - dig_connector - INFO - [dig_connector.py:157] - Successfully generated response (length: 2229)
2025-08-22 21:45:59,660 - __main__ - INFO - [main.py:621] - Received DM response from DIG AI
2025-08-22 21:45:59,660 - __main__ - DEBUG - [main.py:622] - DIG AI DM response: To get access to Jenkins, you'll first need to ensure you have VPN access and a GitHub account.

**Prerequisites:**
*   **VPN Access:** Request VPN access by creating a ticket in PITStop. You'll use your Paramount email/system login credentials to connect. (Source: https://paramount.atlassian.net/wiki/spaces/PLQA/pages/132128728)
*   **GitHub Account:** Due to recent configuration changes, you need a GitHub account to access Jenkins. (Source: https://paramount.atlassian.net/wiki/spaces/PLQA/pages/47714226)

**Requesting Jenkins Access:**

1.  **Via Slack:** You can submit your request in the #i-centralops-github channel in Slack. Post a request asking to be added to **okta-para-github_viacomcbs**. Someone in the channel who controls access will grant you permission and inform you within a thread on your post. (Source: https://paramount.atlassian.net/wiki/spaces/PLQA/pages/178426346)
2.  **Via Email (older method, may still be relevant):** Send an email to ateeque.haque@viacomcbs.com to start the process. (Source: https://paramount.atlassian.net/wiki/spaces/PLQA/pages/47714226)
3.  **For Specific Jenkins Projects:** If you need access to listed Jenkins projects, provide the active directory usernames to create `build.viacom.com` accounts and grant access to the specific P+ INTL Build jobs. If you don't get access after following instructions, create a request in the #devops-support Slack channel. (Source: https://paramount.atlassian.net/wiki/spaces/PLQA/pages/433660722)

**Verifying Jenkins Access:**

1.  Open https://build.viacom.com and log in to Jenkins using your email ID as your username and your OKTA password.
2.  Once logged in, check if you can access https://build.viacom.com/job/gqe/. (Source: https://paramount.atlassian.net/wiki/spaces/PLQA/pages/132128728)

**Important Notes:**
*   You may need to connect to the VPN via `http://connect.cbsinteractive.com/VPNFT` to access Jenkins. (Source: https://paramount.atlassian.net/wiki/spaces/PLQA/pages/47714226)
*   You might need to sign in to Jenkins using your GitHub username/password or your network credentials. You may also need to authorize access to Paramount+. (Source: https://paramount.atlassian.net/wiki/spaces/PLQA/pages/47714226)
2025-08-22 21:45:59,663 - __main__ - DEBUG - [main.py:626] - Formatted DM response: Your Question:
> How to get access to jenkins?

Answer:

To get access to Jenkins, you'll first need to ensure you have VPN access and a GitHub account.

Prerequisites:
   VPN Access: Request VPN access by creating a ticket in PITStop. You'll use your Paramount email/system login credentials to connect.
   GitHub Account: Due to recent configuration changes, you need a GitHub account to access Jenkins.

Requesting Jenkins Access:

1.  Via Slack:
You can submit your request in the #i-centralops-github channel in Slack. Post a request asking to be added to okta-para-github_viacomcbs. Someone in the channel who controls access will grant you permission and inform you within a thread on your post.

2.  Via Email (older method, may still be relevant):
Send an email to ateeque.haque@viacomcbs.com to start the process.

3.  For Specific Jenkins Projects:
If you need access to listed Jenkins projects, provide the active directory usernames to create `build.viacom.com` accounts and grant access to the specific P+ INTL Build jobs. If you don't get access after following instructions, create a request in the #devops-support Slack channel.

Verifying Jenkins Access:

1.  Open https:
//build.viacom.com and log in to Jenkins using your email ID as your username and your OKTA password.

2.  Once logged in, check if you can access https:
//build.viacom.com/job/gqe/.

Important Notes:
   You may need to connect to the VPN via ` to access Jenkins.
   You might need to sign in to Jenkins using your GitHub username/password or your network credentials. You may also need to authorize access to Paramount+.

────────────────────────────────────────
📚 Sources:
1. https://paramount.atlassian.net/wiki/spaces/PLQA/pages/132128728
2. https://paramount.atlassian.net/wiki/spaces/PLQA/pages/47714226
3. https://paramount.atlassian.net/wiki/spaces/PLQA/pages/178426346
4. https://paramount.atlassian.net/wiki/spaces/PLQA/pages/433660722

2025-08-22 21:45:59,663 - slack_sdk.web.base_client - DEBUG - [base_client.py:255] - Sending a request - url: https://slack.com/api/reactions.remove, query_params: {}, body_params: {'name': 'thinking_face', 'channel': 'D09A0LFHK8R', 'timestamp': '1755924350.906339', 'team_id': 'T010QS7UQNA'}, files: {}, json_body: None, headers: {'Content-Type': 'application/x-www-form-urlencoded', 'Authorization': '(redacted)', 'User-Agent': 'Python/3.12.0 slackclient/3.34.0 Darwin/23.4.0'}
2025-08-22 21:46:00,045 - slack_sdk.web.base_client - DEBUG - [base_client.py:546] - Received the following response - status: 200, headers: {'date': 'Sat, 23 Aug 2025 04:46:00 GMT', 'server': 'Apache', 'vary': 'Accept-Encoding', 'x-slack-req-id': '83f55d7beadd9843354fc958cc5b3c04', 'x-content-type-options': 'nosniff', 'x-xss-protection': '0', 'pragma': 'no-cache', 'cache-control': 'private, no-cache, no-store, must-revalidate', 'expires': 'Sat, 26 Jul 1997 05:00:00 GMT', 'content-type': 'application/json; charset=utf-8', 'x-accepted-oauth-scopes': 'reactions:write', 'x-oauth-scopes': 'app_mentions:read,channels:history,chat:write,im:history,im:read,im:write,users:read,reactions:write,users:read.email', 'access-control-expose-headers': 'x-slack-req-id, retry-after', 'access-control-allow-headers': 'slack-route, x-slack-version-ts, x-b3-traceid, x-b3-spanid, x-b3-parentspanid, x-b3-sampled, x-b3-flags', 'strict-transport-security': 'max-age=31536000; includeSubDomains; preload', 'referrer-policy': 'no-referrer', 'x-slack-unique-id': 'aKlHhxapz9mNwgFoFfQhwwAAED4', 'x-slack-backend': 'r', 'access-control-allow-origin': '*', 'content-length': '11', 'via': '1.1 slack-prod.tinyspeck.com, envoy-www-iad-yodcdryr,envoy-edge-pdx-tbskzxsh', 'x-envoy-attempt-count': '1', 'x-envoy-upstream-service-time': '133', 'x-backend': 'main_normal main_canary_with_overflow main_control_with_overflow', 'x-server': 'slack-www-hhvm-main-iad-hcps', 'x-slack-shared-secret-outcome': 'no-match', 'x-edge-backend': 'envoy-www', 'timing-allow-origin': '*', 'x-slack-edge-shared-secret-outcome': 'no-match', 'connection': 'close'}, body: {"ok":true}
2025-08-22 21:46:00,046 - slack_sdk.web.base_client - DEBUG - [base_client.py:255] - Sending a request - url: https://slack.com/api/chat.postMessage, query_params: {}, body_params: {}, files: {}, json_body: {'channel': 'D09A0LFHK8R', 'text': "Your Question:\n> How to get access to jenkins?\n\nAnswer:\n\nTo get access to Jenkins, you'll first need to ensure you have VPN access and a GitHub account.\n\nPrerequisites:\n   VPN Access: Request VPN access by creating a ticket in PITStop. You'll use your Paramount email/system login credentials to connect.\n   GitHub Account: Due to recent configuration changes, you need a GitHub account to access Jenkins.\n\nRequesting Jenkins Access:\n\n1.  Via Slack:\nYou can submit your request in the #i-centralops-github channel in Slack. Post a request asking to be added to okta-para-github_viacomcbs. Someone in the channel who controls access will grant you permission and inform you within a thread on your post.\n\n2.  Via Email (older method, may still be relevant):\nSend an email to ateeque.haque@viacomcbs.com to start the process.\n\n3.  For Specific Jenkins Projects:\nIf you need access to listed Jenkins projects, provide the active directory usernames to create `build.viacom.com` accounts and grant access to the specific P+ INTL Build jobs. If you don't get access after following instructions, create a request in the #devops-support Slack channel.\n\nVerifying Jenkins Access:\n\n1.  Open https:\n//build.viacom.com and log in to Jenkins using your email ID as your username and your OKTA password.\n\n2.  Once logged in, check if you can access https:\n//build.viacom.com/job/gqe/.\n\nImportant Notes:\n   You may need to connect to the VPN via ` to access Jenkins.\n   You might need to sign in to Jenkins using your GitHub username/password or your network credentials. You may also need to authorize access to Paramount+.\n\n────────────────────────────────────────\n📚 Sources:\n1. https://paramount.atlassian.net/wiki/spaces/PLQA/pages/132128728\n2. https://paramount.atlassian.net/wiki/spaces/PLQA/pages/47714226\n3. https://paramount.atlassian.net/wiki/spaces/PLQA/pages/178426346\n4. https://paramount.atlassian.net/wiki/spaces/PLQA/pages/433660722\n", 'thread_ts': '1755924350.906339', 'team_id': 'T010QS7UQNA'}, headers: {'Content-Type': 'application/json;charset=utf-8', 'Authorization': '(redacted)', 'User-Agent': 'Python/3.12.0 slackclient/3.34.0 Darwin/23.4.0'}
2025-08-22 21:46:00,472 - slack_sdk.web.base_client - DEBUG - [base_client.py:546] - Received the following response - status: 200, headers: {'date': 'Sat, 23 Aug 2025 04:46:00 GMT', 'server': 'Apache', 'vary': 'Accept-Encoding', 'x-slack-req-id': '2e75863f7c132b5113df7e07e5e4eebf', 'x-content-type-options': 'nosniff', 'x-xss-protection': '0', 'pragma': 'no-cache', 'cache-control': 'private, no-cache, no-store, must-revalidate', 'expires': 'Sat, 26 Jul 1997 05:00:00 GMT', 'content-type': 'application/json; charset=utf-8', 'x-accepted-oauth-scopes': 'chat:write', 'x-oauth-scopes': 'app_mentions:read,channels:history,chat:write,im:history,im:read,im:write,users:read,reactions:write,users:read.email', 'access-control-expose-headers': 'x-slack-req-id, retry-after', 'access-control-allow-headers': 'slack-route, x-slack-version-ts, x-b3-traceid, x-b3-spanid, x-b3-parentspanid, x-b3-sampled, x-b3-flags', 'strict-transport-security': 'max-age=31536000; includeSubDomains; preload', 'referrer-policy': 'no-referrer', 'x-slack-unique-id': 'aKlHiEXTRnwzWrmwM15tfwAAAAE', 'x-slack-backend': 'r', 'access-control-allow-origin': '*', 'content-length': '5564', 'via': '1.1 slack-prod.tinyspeck.com, envoy-www-iad-njrgdkwj,envoy-edge-pdx-heeaeouc', 'x-envoy-attempt-count': '1', 'x-envoy-upstream-service-time': '174', 'x-backend': 'main_normal main_canary_with_overflow main_control_with_overflow', 'x-server': 'slack-www-hhvm-main-iad-klwt', 'x-slack-shared-secret-outcome': 'no-match', 'x-edge-backend': 'envoy-www', 'timing-allow-origin': '*', 'x-slack-edge-shared-secret-outcome': 'no-match', 'connection': 'close'}, body: {"ok":true,"channel":"D09A0LFHK8R","ts":"1755924360.412129","message":{"user":"U099R6WTZ9S","type":"message","ts":"1755924360.412129","bot_id":"B099R6WTRU4","app_id":"A099LACAB2R","text":"Your Question:\n&gt; How to get access to jenkins?\n\nAnswer:\n\nTo get access to Jenkins, you'll first need to ensure you have VPN access and a GitHub account.\n\nPrerequisites:\n   VPN Access: Request VPN access by creating a ticket in PITStop. You'll use your Paramount email/system login credentials to connect.\n   GitHub Account: Due to recent configuration changes, you need a GitHub account to access Jenkins.\n\nRequesting Jenkins Access:\n\n1.  Via Slack:\nYou can submit your request in the #i-centralops-github channel in Slack. Post a request asking to be added to okta-para-github_viacomcbs. Someone in the channel who controls access will grant you permission and inform you within a thread on your post.\n\n2.  Via Email (older method, may still be relevant):\nSend an email to <mailto:ateeque.haque@viacomcbs.com|ateeque.haque@viacomcbs.com> to start the process.\n\n3.  For Specific Jenkins Projects:\nIf you need access to listed Jenkins projects, provide the active directory usernames to create `<http://build.viacom.com|build.viacom.com>` accounts and grant access to the specific P+ INTL Build jobs. If you don't get access after following instructions, create a request in the #devops-support Slack channel.\n\nVerifying Jenkins Access:\n\n1.  Open https:\n//build.viacom.com and log in to Jenkins using your email ID as your username and your OKTA password.\n\n2.  Once logged in, check if you can access https:\n//build.viacom.com/job/gqe/.\n\nImportant Notes:\n   You may need to connect to the VPN via ` to access Jenkins.\n   You might need to sign in to Jenkins using your GitHub username/password or your network credentials. You may also need to authorize access to Paramount+.\n\n────────────────────────────────────────\n:books: Sources:\n1. <https://paramount.atlassian.net/wiki/spaces/PLQA/pages/132128728>\n2. <https://paramount.atlassian.net/wiki/spaces/PLQA/pages/47714226>\n3. <https://paramount.atlassian.net/wiki/spaces/PLQA/pages/178426346>\n4. <https://paramount.atlassian.net/wiki/spaces/PLQA/pages/433660722>\n","team":"T010QS7UQNA","bot_profile":{"id":"B099R6WTRU4","app_id":"A099LACAB2R","user_id":"U099R6WTZ9S","name":"AutoBot","icons":{"image_36":"https://a.slack-edge.com/80588/img/plugins/app/bot_36.png","image_48":"https://a.slack-edge.com/80588/img/plugins/app/bot_48.png","image_72":"https://a.slack-edge.com/80588/img/plugins/app/service_72.png"},"deleted":false,"updated":1754677948,"team_id":"T010QS7UQNA"},"thread_ts":"1755924350.906339","parent_user_id":"U01RMTFMALF","blocks":[{"type":"rich_text","block_id":"bAi","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Your Question:"}]},{"type":"rich_text_quote","elements":[{"type":"text","text":"How to get access to jenkins?"}]},{"type":"rich_text_section","elements":[{"type":"text","text":"\n\nAnswer:\n\nTo get access to Jenkins, you'll first need to ensure you have VPN access and a GitHub account.\n\nPrerequisites:\n   VPN Access: Request VPN access by creating a ticket in PITStop. You'll use your Paramount email/system login credentials to connect.\n   GitHub Account: Due to recent configuration changes, you need a GitHub account to access Jenkins.\n\nRequesting Jenkins Access:\n\n1.  Via Slack:\nYou can submit your request in the #i-centralops-github channel in Slack. Post a request asking to be added to okta-para-github_viacomcbs. Someone in the channel who controls access will grant you permission and inform you within a thread on your post.\n\n2.  Via Email (older method, may still be relevant):\nSend an email to "},{"type":"link","url":"mailto:ateeque.haque@viacomcbs.com","text":"ateeque.haque@viacomcbs.com"},{"type":"text","text":" to start the process.\n\n3.  For Specific Jenkins Projects:\nIf you need access to listed Jenkins projects, provide the active directory usernames to create "},{"type":"link","url":"http://build.viacom.com","text":"build.viacom.com","style":{"code":true}},{"type":"text","text":" accounts and grant access to the specific P+ INTL Build jobs. If you don't get access after following instructions, create a request in the #devops-support Slack channel.\n\nVerifying Jenkins Access:\n\n1.  Open https:\n//build.viacom.com and log in to Jenkins using your email ID as your username and your OKTA password.\n\n2.  Once logged in, check if you can access https:\n//build.viacom.com/job/gqe/.\n\nImportant Notes:\n   You may need to connect to the VPN via ` to access Jenkins.\n   You might need to sign in to Jenkins using your GitHub username/password or your network credentials. You may also need to authorize access to Paramount+.\n\n────────────────────────────────────────\n"},{"type":"emoji","name":"books","unicode":"1f4da"},{"type":"text","text":" Sources:\n1. "},{"type":"link","url":"https://paramount.atlassian.net/wiki/spaces/PLQA/pages/132128728"},{"type":"text","text":"\n2. "},{"type":"link","url":"https://paramount.atlassian.net/wiki/spaces/PLQA/pages/47714226"},{"type":"text","text":"\n3. "},{"type":"link","url":"https://paramount.atlassian.net/wiki/spaces/PLQA/pages/178426346"},{"type":"text","text":"\n4. "},{"type":"link","url":"https://paramount.atlassian.net/wiki/spaces/PLQA/pages/433660722"}]}]}]}}
2025-08-22 21:46:00,473 - __main__ - DEBUG - [main.py:651] - Cleaning up DM thread tracking...
2025-08-22 21:46:00,473 - utils - DEBUG - [utils.py:67] - Managing thread: D09A0LFHK8R:1755924350.906339, action: remove, user: U01RMTFMALF
2025-08-22 21:46:00,473 - utils - INFO - [utils.py:100] - Removed thread D09A0LFHK8R:1755924350.906339 from active tracking (remaining: 0)
2025-08-22 21:46:01,351 - slack_bolt.App - DEBUG - [client.py:235] - on_message invoked: (message: {"envelope_id":"99d6924f-2c85-40e8-83f8-8ce52fcb2efd","payload":{"token":"yq71khZBCyJF1Ri2hG5aNqr5","team_id":"T010QS7UQNA","enterprise_id":"ERV4P7NAD","context_team_id":null,"context_enterprise_id":"ERV4P7NAD","api_app_id":"A099LACAB2R","event":{"user":"U099R6WTZ9S","type":"message","ts":"1755924360.412129","bot_id":"B099R6WTRU4","app_id":"A099LACAB2R","text":"Your Question:\n&gt; How to get access to jenkins?\n\nAnswer:\n\nTo get access to Jenkins, you'll first need to ensure you have VPN access and a GitHub account.\n\nPrerequisites:\n   VPN Access: Request VPN access by creating a ticket in PITStop. You'll use your Paramount email\/system login credentials to connect.\n   GitHub Account: Due to recent configuration changes, you need a GitHub account to access Jenkins.\n\nRequesting Jenkins Access:\n\n1.  Via Slack:\nYou can submit your request in the #i-centralops-github channel in Slack. Post a request asking to be added to okta-para-github_viacomcbs. Someone in the channel who controls access will grant you permission and inform you within a thread on your post.\n\n2.  Via Email (older method, may still be relevant):\nSend an email to <mailto:ateeque.haque@viacomcbs.com|ateeque.haque@viacomcbs.com> to start the process.\n\n3.  For Specific Jenkins Projects:\nIf you need access to listed Jenkins projects, provide the active directory usernames to create `<http:\/\/build.viacom.com|build.viacom.com>` accounts and grant access to the specific P+ INTL Build jobs. If you don't get access after following instructions, create a request in the #devops-support Slack channel.\n\nVerifying Jenkins Access:\n\n1.  Open https:\n\/\/build.viacom.com and log in to Jenkins using your email ID as your username and your OKTA password.\n\n2.  Once logged in, check if you can access https:\n\/\/build.viacom.com\/job\/gqe\/.\n\nImportant Notes:\n   You may need to connect to the VPN via ` to access Jenkins.\n   You might need to sign in to Jenkins using your GitHub username\/password or your network credentials. You may also need to authorize access to Paramount+.\n\n\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\n:books: Sources:\n1. <https:\/\/paramount.atlassian.net\/wiki\/spaces\/PLQA\/pages\/132128728>\n2. <https:\/\/paramount.atlassian.net\/wiki\/spaces\/PLQA\/pages\/47714226>\n3. <https:\/\/paramount.atlassian.net\/wiki\/spaces\/PLQA\/pages\/178426346>\n4. <https:\/\/paramount.atlassian.net\/wiki\/spaces\/PLQA\/pages\/433660722>\n","team":"T010QS7UQNA","bot_profile":{"id":"B099R6WTRU4","deleted":false,"name":"AutoBot","updated":1754677948,"app_id":"A099LACAB2R","user_id":"U099R6WTZ9S","icons":{"image_36":"https:\/\/a.slack-edge.com\/80588\/img\/plugins\/app\/bot_36.png","image_48":"https:\/\/a.slack-edge.com\/80588\/img\/plugins\/app\/bot_48.png","image_72":"https:\/\/a.slack-edge.com\/80588\/img\/plugins\/app\/service_72.png"},"team_id":"T010QS7UQNA"},"thread_ts":"1755924350.906339","parent_user_id":"U01RMTFMALF","blocks":[{"type":"rich_text","block_id":"Wu+","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Your Question:"}]},{"type":"rich_text_quote","elements":[{"type":"text","text":"How to get access to jenkins?"}]},{"type":"rich_text_section","elements":[{"type":"text","text":"\n\nAnswer:\n\nTo get access to Jenkins, you'll first need to ensure you have VPN access and a GitHub account.\n\nPrerequisites:\n   VPN Access: Request VPN access by creating a ticket in PITStop. You'll use your Paramount email\/system login credentials to connect.\n   GitHub Account: Due to recent configuration changes, you need a GitHub account to access Jenkins.\n\nRequesting Jenkins Access:\n\n1.  Via Slack:\nYou can submit your request in the #i-centralops-github channel in Slack. Post a request asking to be added to okta-para-github_viacomcbs. Someone in the channel who controls access will grant you permission and inform you within a thread on your post.\n\n2.  Via Email (older method, may still be relevant):\nSend an email to "},{"type":"link","url":"mailto:ateeque.haque@viacomcbs.com","text":"ateeque.haque@viacomcbs.com"},{"type":"text","text":" to start the process.\n\n3.  For Specific Jenkins Projects:\nIf you need access to listed Jenkins projects, provide the active directory usernames to create "},{"type":"link","url":"http:\/\/build.viacom.com","text":"build.viacom.com","style":{"code":true}},{"type":"text","text":" accounts and grant access to the specific P+ INTL Build jobs. If you don't get access after following instructions, create a request in the #devops-support Slack channel.\n\nVerifying Jenkins Access:\n\n1.  Open https:\n\/\/build.viacom.com and log in to Jenkins using your email ID as your username and your OKTA password.\n\n2.  Once logged in, check if you can access https:\n\/\/build.viacom.com\/job\/gqe\/.\n\nImportant Notes:\n   You may need to connect to the VPN via ` to access Jenkins.\n   You might need to sign in to Jenkins using your GitHub username\/password or your network credentials. You may also need to authorize access to Paramount+.\n\n\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\n"},{"type":"emoji","name":"books","unicode":"1f4da"},{"type":"text","text":" Sources:\n1. "},{"type":"link","url":"https:\/\/paramount.atlassian.net\/wiki\/spaces\/PLQA\/pages\/132128728"},{"type":"text","text":"\n2. "},{"type":"link","url":"https:\/\/paramount.atlassian.net\/wiki\/spaces\/PLQA\/pages\/47714226"},{"type":"text","text":"\n3. "},{"type":"link","url":"https:\/\/paramount.atlassian.net\/wiki\/spaces\/PLQA\/pages\/178426346"},{"type":"text","text":"\n4. "},{"type":"link","url":"https:\/\/paramount.atlassian.net\/wiki\/spaces\/PLQA\/pages\/433660722"}]}]}],"channel":"D09A0LFHK8R","event_ts":"1755924360.412129","channel_type":"im"},"type":"event_callback","event_id":"Ev09CHJF06HW","event_time":1755924360,"authorizations":[{"enterprise_id":"ERV4P7NAD","team_id":"T010QS7UQNA","user_id":"U099R6WTZ9S","is_bot":true,"is_enterprise_install":false}],"is_ext_shared_channel":false,"event_context":"4-eyJldCI6Im1lc3NhZ2UiLCJ0aWQiOiJUMDEwUVM3VVFOQSIsImFpZCI6IkEwOTlMQUNBQjJSIiwiY2lkIjoiRDA5QTBMRkhLOFIifQ"},"type":"events_api","accepts_response_payload":false,"retry_attempt":0,"retry_reason":""})
2025-08-22 21:46:01,352 - slack_bolt.App - DEBUG - [client.py:99] - A new message enqueued (current queue size: 1)
2025-08-22 21:46:01,352 - slack_bolt.App - DEBUG - [client.py:105] - A message dequeued (current queue size: 0)
2025-08-22 21:46:01,352 - slack_bolt.App - DEBUG - [client.py:125] - Message processing started (type: events_api, envelope_id: 99d6924f-2c85-40e8-83f8-8ce52fcb2efd)
2025-08-22 21:46:01,352 - slack_bolt.App - DEBUG - [app.py:476] - Applying slack_bolt.middleware.ssl_check.ssl_check.SslCheck
2025-08-22 21:46:01,352 - slack_bolt.App - DEBUG - [app.py:476] - Applying slack_bolt.middleware.request_verification.request_verification.RequestVerification
2025-08-22 21:46:01,352 - slack_bolt.App - DEBUG - [app.py:476] - Applying slack_bolt.middleware.authorization.single_team_authorization.SingleTeamAuthorization
2025-08-22 21:46:01,353 - slack_bolt.App - DEBUG - [app.py:476] - Applying slack_bolt.middleware.ignoring_self_events.ignoring_self_events.IgnoringSelfEvents
2025-08-22 21:46:01,353 - slack_bolt.IgnoringSelfEvents - DEBUG - [ignoring_self_events.py:60] - Skipped self event: {'user': 'U099R6WTZ9S', 'type': 'message', 'ts': '1755924360.412129', 'bot_id': 'B099R6WTRU4', 'app_id': 'A099LACAB2R', 'text': "Your Question:\n&gt; How to get access to jenkins?\n\nAnswer:\n\nTo get access to Jenkins, you'll first need to ensure you have VPN access and a GitHub account.\n\nPrerequisites:\n   VPN Access: Request VPN access by creating a ticket in PITStop. You'll use your Paramount email/system login credentials to connect.\n   GitHub Account: Due to recent configuration changes, you need a GitHub account to access Jenkins.\n\nRequesting Jenkins Access:\n\n1.  Via Slack:\nYou can submit your request in the #i-centralops-github channel in Slack. Post a request asking to be added to okta-para-github_viacomcbs. Someone in the channel who controls access will grant you permission and inform you within a thread on your post.\n\n2.  Via Email (older method, may still be relevant):\nSend an email to <mailto:ateeque.haque@viacomcbs.com|ateeque.haque@viacomcbs.com> to start the process.\n\n3.  For Specific Jenkins Projects:\nIf you need access to listed Jenkins projects, provide the active directory usernames to create `<http://build.viacom.com|build.viacom.com>` accounts and grant access to the specific P+ INTL Build jobs. If you don't get access after following instructions, create a request in the #devops-support Slack channel.\n\nVerifying Jenkins Access:\n\n1.  Open https:\n//build.viacom.com and log in to Jenkins using your email ID as your username and your OKTA password.\n\n2.  Once logged in, check if you can access https:\n//build.viacom.com/job/gqe/.\n\nImportant Notes:\n   You may need to connect to the VPN via ` to access Jenkins.\n   You might need to sign in to Jenkins using your GitHub username/password or your network credentials. You may also need to authorize access to Paramount+.\n\n────────────────────────────────────────\n:books: Sources:\n1. <https://paramount.atlassian.net/wiki/spaces/PLQA/pages/132128728>\n2. <https://paramount.atlassian.net/wiki/spaces/PLQA/pages/47714226>\n3. <https://paramount.atlassian.net/wiki/spaces/PLQA/pages/178426346>\n4. <https://paramount.atlassian.net/wiki/spaces/PLQA/pages/433660722>\n", 'team': 'T010QS7UQNA', 'bot_profile': {'id': 'B099R6WTRU4', 'deleted': False, 'name': 'AutoBot', 'updated': 1754677948, 'app_id': 'A099LACAB2R', 'user_id': 'U099R6WTZ9S', 'icons': {'image_36': 'https://a.slack-edge.com/80588/img/plugins/app/bot_36.png', 'image_48': 'https://a.slack-edge.com/80588/img/plugins/app/bot_48.png', 'image_72': 'https://a.slack-edge.com/80588/img/plugins/app/service_72.png'}, 'team_id': 'T010QS7UQNA'}, 'thread_ts': '1755924350.906339', 'parent_user_id': 'U01RMTFMALF', 'blocks': [{'type': 'rich_text', 'block_id': 'Wu+', 'elements': [{'type': 'rich_text_section', 'elements': [{'type': 'text', 'text': 'Your Question:'}]}, {'type': 'rich_text_quote', 'elements': [{'type': 'text', 'text': 'How to get access to jenkins?'}]}, {'type': 'rich_text_section', 'elements': [{'type': 'text', 'text': "\n\nAnswer:\n\nTo get access to Jenkins, you'll first need to ensure you have VPN access and a GitHub account.\n\nPrerequisites:\n   VPN Access: Request VPN access by creating a ticket in PITStop. You'll use your Paramount email/system login credentials to connect.\n   GitHub Account: Due to recent configuration changes, you need a GitHub account to access Jenkins.\n\nRequesting Jenkins Access:\n\n1.  Via Slack:\nYou can submit your request in the #i-centralops-github channel in Slack. Post a request asking to be added to okta-para-github_viacomcbs. Someone in the channel who controls access will grant you permission and inform you within a thread on your post.\n\n2.  Via Email (older method, may still be relevant):\nSend an email to "}, {'type': 'link', 'url': 'mailto:ateeque.haque@viacomcbs.com', 'text': 'ateeque.haque@viacomcbs.com'}, {'type': 'text', 'text': ' to start the process.\n\n3.  For Specific Jenkins Projects:\nIf you need access to listed Jenkins projects, provide the active directory usernames to create '}, {'type': 'link', 'url': 'http://build.viacom.com', 'text': 'build.viacom.com', 'style': {'code': True}}, {'type': 'text', 'text': " accounts and grant access to the specific P+ INTL Build jobs. If you don't get access after following instructions, create a request in the #devops-support Slack channel.\n\nVerifying Jenkins Access:\n\n1.  Open https:\n//build.viacom.com and log in to Jenkins using your email ID as your username and your OKTA password.\n\n2.  Once logged in, check if you can access https:\n//build.viacom.com/job/gqe/.\n\nImportant Notes:\n   You may need to connect to the VPN via ` to access Jenkins.\n   You might need to sign in to Jenkins using your GitHub username/password or your network credentials. You may also need to authorize access to Paramount+.\n\n────────────────────────────────────────\n"}, {'type': 'emoji', 'name': 'books', 'unicode': '1f4da'}, {'type': 'text', 'text': ' Sources:\n1. '}, {'type': 'link', 'url': 'https://paramount.atlassian.net/wiki/spaces/PLQA/pages/132128728'}, {'type': 'text', 'text': '\n2. '}, {'type': 'link', 'url': 'https://paramount.atlassian.net/wiki/spaces/PLQA/pages/47714226'}, {'type': 'text', 'text': '\n3. '}, {'type': 'link', 'url': 'https://paramount.atlassian.net/wiki/spaces/PLQA/pages/178426346'}, {'type': 'text', 'text': '\n4. '}, {'type': 'link', 'url': 'https://paramount.atlassian.net/wiki/spaces/PLQA/pages/433660722'}]}]}], 'channel': 'D09A0LFHK8R', 'event_ts': '1755924360.412129', 'channel_type': 'im'}
2025-08-22 21:46:01,353 - slack_bolt.App - DEBUG - [client.py:200] - Sending a message (session id: 8d26ec11-e772-40a7-8077-9bc9ec2ed180, message: {"envelope_id": "99d6924f-2c85-40e8-83f8-8ce52fcb2efd"})
2025-08-22 21:46:01,354 - slack_bolt.App - DEBUG - [internals.py:41] - Response time: 1 milliseconds
2025-08-22 21:46:01,354 - slack_bolt.App - DEBUG - [client.py:150] - Message processing completed (type: events_api, envelope_id: 99d6924f-2c85-40e8-83f8-8ce52fcb2efd)
